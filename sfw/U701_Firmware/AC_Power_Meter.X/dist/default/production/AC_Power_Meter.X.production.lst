

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Nov 04 10:45:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   156                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   157  0000                     
   158                           ; Version 1.45 (B)
   159                           ; Generated 30/01/2018 GMT
   160                           ; 
   161                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   162                           ; All rights reserved.
   163                           ; 
   164                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   165                           ; 
   166                           ; Redistribution and use in source and binary forms, with or without modification, are
   167                           ; permitted provided that the following conditions are met:
   168                           ; 
   169                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   170                           ;        conditions and the following disclaimer.
   171                           ; 
   172                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   173                           ;        of conditions and the following disclaimer in the documentation and/or other
   174                           ;        materials provided with the distribution.
   175                           ; 
   176                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   177                           ;        software without specific prior written permission.
   178                           ; 
   179                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   180                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   181                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   182                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   183                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   184                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   185                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   186                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   187                           ; 
   188                           ; 
   189                           ; Code-generator required, PIC18LF67K40 Definitions
   190                           ; 
   191                           ; SFR Addresses
   192  0000                     
   193                           	psect	idataBANK0
   194  0170A0                     __pidataBANK0:
   195                           	opt stack 0
   196                           
   197                           ;initializer for _Irms_offset
   198  0170A0  6D                 	db	109
   199  0170A1  E7                 	db	231
   200  0170A2  BD                 	db	189
   201                           
   202                           ;initializer for _Vpk_const
   203                           ;main.c: 61: volatile double FVR_ADC_Result;
   204                           ;main.c: 62: volatile double AVSS_ADC_Result;
   205                           ;main.c: 63: volatile double ADC_Result_Scaling;
   206                           ;main.c: 64: volatile double POS3P3_ADC_Result;
   207                           ;main.c: 65: volatile double POS12_ADC_Result;
   208                           ;main.c: 66: volatile double Temp_ADC_Result;
   209                           ;main.c: 67: volatile double Temp_ADC_Offset = -267.409;
   210  0170A3  B5                 	db	181
   211  0170A4  29                 	db	41
   212  0170A5  43                 	db	67
   213                           
   214                           ;initializer for _Temp_ADC_Offset
   215  0170A6  B4                 	db	180
   216  0170A7  85                 	db	133
   217  0170A8  C3                 	db	195
   218                           
   219                           ;initializer for _dimming_period
   220  0170A9  7FEE               	dw	32750
   221                           
   222                           ;initializer for _TRIAC_Firing_Angle
   223                           ;main.c: 61: volatile double FVR_ADC_Result;
   224                           ;main.c: 62: volatile double AVSS_ADC_Result;
   225                           ;main.c: 63: volatile double ADC_Result_Scaling;
   226                           ;main.c: 64: volatile double POS3P3_ADC_Result;
   227                           ;main.c: 65: volatile double POS12_ADC_Result;
   228                           ;main.c: 66: volatile double Temp_ADC_Result;
   229                           ;main.c: 67: volatile double Temp_ADC_Offset = -267.409;
   230                           ;main.c: 68: double Vpk_const = 169.7056274847714;
   231                           ;main.c: 69: volatile double Vpk;
   232                           ;main.c: 70: volatile double Ipk;
   233                           ;main.c: 71: volatile double Imeas;
   234                           ;main.c: 72: double Irms_offset = -0.113;
   235  0170AB  00                 	db	0
   236  0170AC  B4                 	db	180
   237  0170AD  42                 	db	66
   238                           
   239                           	psect	idataBANK2
   240  01700E                     __pidataBANK2:
   241                           	opt stack 0
   242                           
   243                           ;initializer for getCauseOfResetString@F17476
   244  01700E  8D                 	db	low STR_123
   245  01700F  FE                 	db	high STR_123
   246  017010  2D                 	db	low STR_124
   247  017011  FE                 	db	high STR_124
   248  017012  C4                 	db	low STR_125
   249  017013  FD                 	db	high STR_125
   250  017014  CA                 	db	low STR_126
   251  017015  FC                 	db	high STR_126
   252  017016  0B                 	db	low (STR_129+9)
   253  017017  FA                 	db	high (STR_129+9)
   254  017018  79                 	db	low STR_128
   255  017019  FC                 	db	high STR_128
   256  01701A  02                 	db	low STR_129
   257  01701B  FA                 	db	high STR_129
   258  01701C  5C                 	db	low STR_130
   259  01701D  FC                 	db	high STR_130
   260  01701E  95                 	db	low STR_131
   261  01701F  FC                 	db	high STR_131
   262  017020  70                 	db	low STR_132
   263  017021  FD                 	db	high STR_132
   264  017022  44                 	db	low STR_133
   265  017023  FD                 	db	high STR_133
   266  017024  20                 	db	low STR_134
   267  017025  FC                 	db	high STR_134
   268                           
   269                           	psect	mediumconst
   270  00EB8E                     __pmediumconst:
   271                           	opt stack 0
   272  00EB8E  00                 	db	0
   273  00EB8F                     _dpowers:
   274                           	opt stack 0
   275  00EB8F  0001               	dw	1
   276  00EB91  0000               	dw	0
   277  00EB93  000A               	dw	10
   278  00EB95  0000               	dw	0
   279  00EB97  0064               	dw	100
   280  00EB99  0000               	dw	0
   281  00EB9B  03E8               	dw	1000
   282  00EB9D  0000               	dw	0
   283  00EB9F  2710               	dw	10000
   284  00EBA1  0000               	dw	0
   285  00EBA3  86A0               	dw	34464
   286  00EBA5  0001               	dw	1
   287  00EBA7  4240               	dw	16960
   288  00EBA9  000F               	dw	15
   289  00EBAB  9680               	dw	38528
   290  00EBAD  0098               	dw	152
   291  00EBAF  E100               	dw	57600
   292  00EBB1  05F5               	dw	1525
   293  00EBB3  CA00               	dw	51712
   294  00EBB5  3B9A               	dw	15258
   295  00EBB7                     __end_of_dpowers:
   296                           	opt stack 0
   297  00EBB7                     __powers_:
   298                           	opt stack 0
   299  00EBB7  00                 	db	0
   300  00EBB8  80                 	db	128
   301  00EBB9  3F                 	db	63
   302  00EBBA  00                 	db	0
   303  00EBBB  20                 	db	32
   304  00EBBC  41                 	db	65
   305  00EBBD  00                 	db	0
   306  00EBBE  C8                 	db	200
   307  00EBBF  42                 	db	66
   308  00EBC0  00                 	db	0
   309  00EBC1  7A                 	db	122
   310  00EBC2  44                 	db	68
   311  00EBC3  40                 	db	64
   312  00EBC4  1C                 	db	28
   313  00EBC5  46                 	db	70
   314  00EBC6  50                 	db	80
   315  00EBC7  C3                 	db	195
   316  00EBC8  47                 	db	71
   317  00EBC9  24                 	db	36
   318  00EBCA  74                 	db	116
   319  00EBCB  49                 	db	73
   320  00EBCC  97                 	db	151
   321  00EBCD  18                 	db	24
   322  00EBCE  4B                 	db	75
   323  00EBCF  BC                 	db	188
   324  00EBD0  BE                 	db	190
   325  00EBD1  4C                 	db	76
   326  00EBD2  6B                 	db	107
   327  00EBD3  6E                 	db	110
   328  00EBD4  4E                 	db	78
   329  00EBD5  03                 	db	3
   330  00EBD6  15                 	db	21
   331  00EBD7  50                 	db	80
   332  00EBD8  79                 	db	121
   333  00EBD9  AD                 	db	173
   334  00EBDA  60                 	db	96
   335  00EBDB  F3                 	db	243
   336  00EBDC  49                 	db	73
   337  00EBDD  71                 	db	113
   338  00EBDE                     __end_of__powers_:
   339                           	opt stack 0
   340  00EBDE                     __npowers_:
   341                           	opt stack 0
   342  00EBDE  00                 	db	0
   343  00EBDF  80                 	db	128
   344  00EBE0  3F                 	db	63
   345  00EBE1  CD                 	db	205
   346  00EBE2  CC                 	db	204
   347  00EBE3  3D                 	db	61
   348  00EBE4  D7                 	db	215
   349  00EBE5  23                 	db	35
   350  00EBE6  3C                 	db	60
   351  00EBE7  12                 	db	18
   352  00EBE8  83                 	db	131
   353  00EBE9  3A                 	db	58
   354  00EBEA  B7                 	db	183
   355  00EBEB  D1                 	db	209
   356  00EBEC  38                 	db	56
   357  00EBED  C6                 	db	198
   358  00EBEE  27                 	db	39
   359  00EBEF  37                 	db	55
   360  00EBF0  38                 	db	56
   361  00EBF1  86                 	db	134
   362  00EBF2  35                 	db	53
   363  00EBF3  C0                 	db	192
   364  00EBF4  D6                 	db	214
   365  00EBF5  33                 	db	51
   366  00EBF6  CC                 	db	204
   367  00EBF7  2B                 	db	43
   368  00EBF8  32                 	db	50
   369  00EBF9  70                 	db	112
   370  00EBFA  89                 	db	137
   371  00EBFB  30                 	db	48
   372  00EBFC  E7                 	db	231
   373  00EBFD  DB                 	db	219
   374  00EBFE  2E                 	db	46
   375  00EBFF  E5                 	db	229
   376  00EC00  3C                 	db	60
   377  00EC01  1E                 	db	30
   378  00EC02  42                 	db	66
   379  00EC03  A2                 	db	162
   380  00EC04  0D                 	db	13
   381  00EC05                     __end_of__npowers_:
   382                           	opt stack 0
   383  00EC05                     _hexpowers:
   384                           	opt stack 0
   385  00EC05  0001               	dw	1
   386  00EC07  0000               	dw	0
   387  00EC09  0010               	dw	16
   388  00EC0B  0000               	dw	0
   389  00EC0D  0100               	dw	256
   390  00EC0F  0000               	dw	0
   391  00EC11  1000               	dw	4096
   392  00EC13  0000               	dw	0
   393  00EC15  0000               	dw	0
   394  00EC17  0001               	dw	1
   395  00EC19  0000               	dw	0
   396  00EC1B  0010               	dw	16
   397  00EC1D  0000               	dw	0
   398  00EC1F  0100               	dw	256
   399  00EC21  0000               	dw	0
   400  00EC23  1000               	dw	4096
   401  00EC25                     __end_of_hexpowers:
   402                           	opt stack 0
   403  00EC25                     atan@coeff_a:
   404                           	opt stack 0
   405  00EC25  3C                 	db	60
   406  00EC26  04                 	db	4
   407  00EC27  42                 	db	66
   408  00EC28  9F                 	db	159
   409  00EC29  6A                 	db	106
   410  00EC2A  42                 	db	66
   411  00EC2B  90                 	db	144
   412  00EC2C  01                 	db	1
   413  00EC2D  42                 	db	66
   414  00EC2E  4D                 	db	77
   415  00EC2F  BB                 	db	187
   416  00EC30  40                 	db	64
   417  00EC31  EC                 	db	236
   418  00EC32  47                 	db	71
   419  00EC33  3E                 	db	62
   420  00EC34  8E                 	db	142
   421  00EC35  1F                 	db	31
   422  00EC36  BB                 	db	187
   423  00EC37                     __end_ofatan@coeff_a:
   424                           	opt stack 0
   425  00EC37                     sin@coeff_a:
   426                           	opt stack 0
   427  00EC37  F4                 	db	244
   428  00EC38  4A                 	db	74
   429  00EC39  48                 	db	72
   430  00EC3A  95                 	db	149
   431  00EC3B  95                 	db	149
   432  00EC3C  C7                 	db	199
   433  00EC3D  C1                 	db	193
   434  00EC3E  DC                 	db	220
   435  00EC3F  45                 	db	69
   436  00EC40  DC                 	db	220
   437  00EC41  6D                 	db	109
   438  00EC42  C3                 	db	195
   439  00EC43  B3                 	db	179
   440  00EC44  33                 	db	51
   441  00EC45  40                 	db	64
   442  00EC46                     __end_ofsin@coeff_a:
   443                           	opt stack 0
   444  00EC46                     atan@coeff_b:
   445                           	opt stack 0
   446  00EC46  3C                 	db	60
   447  00EC47  04                 	db	4
   448  00EC48  42                 	db	66
   449  00EC49  5A                 	db	90
   450  00EC4A  8B                 	db	139
   451  00EC4B  42                 	db	66
   452  00EC4C  04                 	db	4
   453  00EC4D  44                 	db	68
   454  00EC4E  42                 	db	66
   455  00EC4F  9C                 	db	156
   456  00EC50  4F                 	db	79
   457  00EC51  41                 	db	65
   458  00EC52  00                 	db	0
   459  00EC53  80                 	db	128
   460  00EC54  3F                 	db	63
   461  00EC55                     __end_ofatan@coeff_b:
   462                           	opt stack 0
   463  00EC55                     sin@coeff_b:
   464                           	opt stack 0
   465  00EC55  34                 	db	52
   466  00EC56  01                 	db	1
   467  00EC57  48                 	db	72
   468  00EC58  9D                 	db	157
   469  00EC59  B0                 	db	176
   470  00EC5A  45                 	db	69
   471  00EC5B  00                 	db	0
   472  00EC5C  DA                 	db	218
   473  00EC5D  42                 	db	66
   474  00EC5E  00                 	db	0
   475  00EC5F  80                 	db	128
   476  00EC60  3F                 	db	63
   477  00EC61                     __end_ofsin@coeff_b:
   478                           	opt stack 0
   479  0000                     _HLVDCON0bits	set	3778
   480  0000                     _HLVDCON0	set	3778
   481  0000                     _HLVDCON1	set	3779
   482  0000                     _PIR8bits	set	3643
   483  0000                     _FVRCONbits	set	3780
   484  0000                     _FVRCON	set	3780
   485  0000                     _RC2REG	set	3825
   486  0000                     _RC2STAbits	set	3829
   487  0000                     _TX2REG	set	3826
   488  0000                     _TX2STAbits	set	3830
   489  0000                     _SP2BRGH	set	3828
   490  0000                     _SP2BRGL	set	3827
   491  0000                     _TX2STA	set	3830
   492  0000                     _RC2STA	set	3829
   493  0000                     _BAUD2CON	set	3831
   494  0000                     _PIR2bits	set	3637
   495  0000                     _PIE2bits	set	3627
   496  0000                     _PIR1bits	set	3636
   497  0000                     _PIE1bits	set	3626
   498  0000                     _PIR5bits	set	3640
   499  0000                     _PIE5bits	set	3630
   500  0000                     _PIR3bits	set	3638
   501  0000                     _PIE3bits	set	3628
   502  0000                     _IPR2bits	set	3617
   503  0000                     _IPR1bits	set	3616
   504  0000                     _IPR5bits	set	3620
   505  0000                     _IPR3bits	set	3618
   506  0000                     _RX2PPS	set	3601
   507  0000                     _RG7PPS	set	3721
   508  0000                     _SLRCONH	set	3774
   509  0000                     _SLRCONG	set	3769
   510  0000                     _SLRCONF	set	3761
   511  0000                     _SLRCONE	set	3756
   512  0000                     _SLRCOND	set	3748
   513  0000                     _SLRCONC	set	3743
   514  0000                     _SLRCONB	set	3735
   515  0000                     _SLRCONA	set	3727
   516  0000                     _ODCOND	set	3749
   517  0000                     _ODCONC	set	3744
   518  0000                     _ODCONH	set	3775
   519  0000                     _ODCONB	set	3736
   520  0000                     _ODCONG	set	3770
   521  0000                     _ODCONA	set	3728
   522  0000                     _ODCONF	set	3762
   523  0000                     _ODCONE	set	3757
   524  0000                     _WPUH	set	3776
   525  0000                     _WPUC	set	3745
   526  0000                     _WPUA	set	3729
   527  0000                     _WPUG	set	3771
   528  0000                     _WPUB	set	3737
   529  0000                     _WPUE	set	3758
   530  0000                     _WPUF	set	3763
   531  0000                     _WPUD	set	3750
   532  0000                     _ANSELA	set	3730
   533  0000                     _ANSELF	set	3764
   534  0000                     _ANSELG	set	3772
   535  0000                     _ANSELE	set	3759
   536  0000                     _ANSELB	set	3738
   537  0000                     _ANSELD	set	3751
   538  0000                     _PMD5	set	3665
   539  0000                     _PMD4	set	3664
   540  0000                     _PMD3	set	3663
   541  0000                     _PMD2	set	3662
   542  0000                     _PMD1	set	3661
   543  0000                     _PMD0	set	3660
   544  0000                     _OSCTUNE	set	3656
   545  0000                     _OSCFRQ	set	3657
   546  0000                     _OSCEN	set	3655
   547  0000                     _OSCCON3	set	3653
   548  0000                     _OSCCON1	set	3651
   549  0000                     _PLLR	set	29232
   550  0000                     _T7GCONbits	set	3889
   551  0000                     _T7CONbits	set	3888
   552  0000                     _T7CON	set	3888
   553  0000                     _TMR7L	set	3886
   554  0000                     _TMR7H	set	3887
   555  0000                     _T7CLK	set	3891
   556  0000                     _T7GATE	set	3890
   557  0000                     _T7GCON	set	3889
   558  0000                     _ADCON1bits	set	3929
   559  0000                     _ADCON2bits	set	3930
   560  0000                     _ADPRE	set	3934
   561  0000                     _ADCON3bits	set	3931
   562  0000                     _ADACQ	set	3932
   563  0000                     _ADCLK	set	3927
   564  0000                     _ADACT	set	3926
   565  0000                     _ADREF	set	3928
   566  0000                     _ADCON3	set	3931
   567  0000                     _ADCON2	set	3930
   568  0000                     _ADCON1	set	3929
   569  0000                     _ADCAP	set	3933
   570  0000                     _ADPCH	set	3935
   571  0000                     _PCON0bits	set	4055
   572  0000                     _STATUSbits	set	4056
   573  0000                     _LATGbits	set	3967
   574  0000                     _NVMDAT	set	3958
   575  0000                     _NVMADRL	set	3956
   576  0000                     _NVMADRH	set	3957
   577  0000                     _NVMCON2	set	3960
   578  0000                     _TABLAT	set	4085
   579  0000                     _TBLPTRL	set	4086
   580  0000                     _TBLPTRH	set	4087
   581  0000                     _TBLPTRU	set	4088
   582  0000                     _NVMCON1bits	set	3959
   583  0000                     _T5GCONbits	set	4036
   584  0000                     _T5CONbits	set	4035
   585  0000                     _T5CON	set	4035
   586  0000                     _TMR5L	set	4033
   587  0000                     _TMR5H	set	4034
   588  0000                     _T5CLK	set	4038
   589  0000                     _T5GATE	set	4037
   590  0000                     _T5GCON	set	4036
   591  0000                     _ADERRL	set	3950
   592  0000                     _ADERRH	set	3951
   593  0000                     _ADPREVL	set	3937
   594  0000                     _ADPREVH	set	3938
   595  0000                     _ADFLTRL	set	3954
   596  0000                     _ADFLTRH	set	3955
   597  0000                     _ADSTATbits	set	3941
   598  0000                     _ADACCL	set	3952
   599  0000                     _ADACCH	set	3953
   600  0000                     _ADCNT	set	3943
   601  0000                     _ADRESL	set	3939
   602  0000                     _ADRESH	set	3940
   603  0000                     _ADCON0bits	set	3936
   604  0000                     _ADCON0	set	3936
   605  0000                     _ADSTAT	set	3941
   606  0000                     _ADRPT	set	3942
   607  0000                     _ADSTPTH	set	3945
   608  0000                     _ADSTPTL	set	3944
   609  0000                     _ADUTHH	set	3949
   610  0000                     _ADUTHL	set	3948
   611  0000                     _ADLTHH	set	3947
   612  0000                     _ADLTHL	set	3946
   613  0000                     _LATFbits	set	3966
   614  0000                     _PR6	set	4016
   615  0000                     _TMR6	set	4015
   616  0000                     _T6CONbits	set	4017
   617  0000                     _T6RSTbits	set	4020
   618  0000                     _T6HLTbits	set	4018
   619  0000                     _T6CON	set	4017
   620  0000                     _T6TMR	set	4015
   621  0000                     _T6PR	set	4016
   622  0000                     _T6RST	set	4020
   623  0000                     _T6HLT	set	4018
   624  0000                     _T6CLKCON	set	4019
   625  0000                     _INTCONbits	set	4082
   626  0000                     _TRISD	set	3972
   627  0000                     _TRISC	set	3971
   628  0000                     _TRISH	set	3976
   629  0000                     _TRISB	set	3970
   630  0000                     _TRISG	set	3975
   631  0000                     _TRISA	set	3969
   632  0000                     _TRISF	set	3974
   633  0000                     _TRISE	set	3973
   634  0000                     _LATH	set	3968
   635  0000                     _LATC	set	3963
   636  0000                     _LATG	set	3967
   637  0000                     _LATB	set	3962
   638  0000                     _LATF	set	3966
   639  0000                     _LATA	set	3961
   640  0000                     _LATD	set	3964
   641  0000                     _LATE	set	3965
   642  00EC61                     STR_114:
   643  00EC61  4C                 	db	76	;'L'
   644  00EC62  69                 	db	105	;'i'
   645  00EC63  73                 	db	115	;'s'
   646  00EC64  74                 	db	116	;'t'
   647  00EC65  20                 	db	32
   648  00EC66  6F                 	db	111	;'o'
   649  00EC67  66                 	db	102	;'f'
   650  00EC68  20                 	db	32
   651  00EC69  73                 	db	115	;'s'
   652  00EC6A  75                 	db	117	;'u'
   653  00EC6B  70                 	db	112	;'p'
   654  00EC6C  70                 	db	112	;'p'
   655  00EC6D  6F                 	db	111	;'o'
   656  00EC6E  72                 	db	114	;'r'
   657  00EC6F  74                 	db	116	;'t'
   658  00EC70  65                 	db	101	;'e'
   659  00EC71  64                 	db	100	;'d'
   660  00EC72  20                 	db	32
   661  00EC73  63                 	db	99	;'c'
   662  00EC74  6F                 	db	111	;'o'
   663  00EC75  6D                 	db	109	;'m'
   664  00EC76  6D                 	db	109	;'m'
   665  00EC77  61                 	db	97	;'a'
   666  00EC78  6E                 	db	110	;'n'
   667  00EC79  64                 	db	100	;'d'
   668  00EC7A  73                 	db	115	;'s'
   669  00EC7B  3A                 	db	58	;':'
   670  00EC7C  0A                 	db	10
   671  00EC7D  0D                 	db	13
   672  00EC7E  0A                 	db	10
   673  00EC7F  0D                 	db	13
   674  00EC80  44                 	db	68	;'D'
   675  00EC81  65                 	db	101	;'e'
   676  00EC82  76                 	db	118	;'v'
   677  00EC83  69                 	db	105	;'i'
   678  00EC84  63                 	db	99	;'c'
   679  00EC85  65                 	db	101	;'e'
   680  00EC86  20                 	db	32
   681  00EC87  43                 	db	67	;'C'
   682  00EC88  6F                 	db	111	;'o'
   683  00EC89  6D                 	db	109	;'m'
   684  00EC8A  6D                 	db	109	;'m'
   685  00EC8B  61                 	db	97	;'a'
   686  00EC8C  6E                 	db	110	;'n'
   687  00EC8D  64                 	db	100	;'d'
   688  00EC8E  73                 	db	115	;'s'
   689  00EC8F  3A                 	db	58	;':'
   690  00EC90  0A                 	db	10
   691  00EC91  0D                 	db	13
   692  00EC92  20                 	db	32
   693  00EC93  20                 	db	32
   694  00EC94  20                 	db	32
   695  00EC95  52                 	db	82	;'R'
   696  00EC96  65                 	db	101	;'e'
   697  00EC97  73                 	db	115	;'s'
   698  00EC98  65                 	db	101	;'e'
   699  00EC99  74                 	db	116	;'t'
   700  00EC9A  3A                 	db	58	;':'
   701  00EC9B  20                 	db	32
   702  00EC9C  43                 	db	67	;'C'
   703  00EC9D  6C                 	db	108	;'l'
   704  00EC9E  65                 	db	101	;'e'
   705  00EC9F  61                 	db	97	;'a'
   706  00ECA0  72                 	db	114	;'r'
   707  00ECA1  73                 	db	115	;'s'
   708  00ECA2  20                 	db	32
   709  00ECA3  74                 	db	116	;'t'
   710  00ECA4  68                 	db	104	;'h'
   711  00ECA5  65                 	db	101	;'e'
   712  00ECA6  20                 	db	32
   713  00ECA7  74                 	db	116	;'t'
   714  00ECA8  65                 	db	101	;'e'
   715  00ECA9  72                 	db	114	;'r'
   716  00ECAA  6D                 	db	109	;'m'
   717  00ECAB  69                 	db	105	;'i'
   718  00ECAC  6E                 	db	110	;'n'
   719  00ECAD  61                 	db	97	;'a'
   720  00ECAE  6C                 	db	108	;'l'
   721  00ECAF  20                 	db	32
   722  00ECB0  61                 	db	97	;'a'
   723  00ECB1  6E                 	db	110	;'n'
   724  00ECB2  64                 	db	100	;'d'
   725  00ECB3  20                 	db	32
   726  00ECB4  72                 	db	114	;'r'
   727  00ECB5  65                 	db	101	;'e'
   728  00ECB6  73                 	db	115	;'s'
   729  00ECB7  65                 	db	101	;'e'
   730  00ECB8  74                 	db	116	;'t'
   731  00ECB9  73                 	db	115	;'s'
   732  00ECBA  20                 	db	32
   733  00ECBB  74                 	db	116	;'t'
   734  00ECBC  68                 	db	104	;'h'
   735  00ECBD  65                 	db	101	;'e'
   736  00ECBE  20                 	db	32
   737  00ECBF  6D                 	db	109	;'m'
   738  00ECC0  69                 	db	105	;'i'
   739  00ECC1  63                 	db	99	;'c'
   740  00ECC2  72                 	db	114	;'r'
   741  00ECC3  6F                 	db	111	;'o'
   742  00ECC4  0A                 	db	10
   743  00ECC5  0D                 	db	13
   744  00ECC6  20                 	db	32
   745  00ECC7  20                 	db	32
   746  00ECC8  20                 	db	32
   747  00ECC9  43                 	db	67	;'C'
   748  00ECCA  6C                 	db	108	;'l'
   749  00ECCB  65                 	db	101	;'e'
   750  00ECCC  61                 	db	97	;'a'
   751  00ECCD  72                 	db	114	;'r'
   752  00ECCE  3A                 	db	58	;':'
   753  00ECCF  20                 	db	32
   754  00ECD0  43                 	db	67	;'C'
   755  00ECD1  6C                 	db	108	;'l'
   756  00ECD2  65                 	db	101	;'e'
   757  00ECD3  61                 	db	97	;'a'
   758  00ECD4  72                 	db	114	;'r'
   759  00ECD5  73                 	db	115	;'s'
   760  00ECD6  20                 	db	32
   761  00ECD7  74                 	db	116	;'t'
   762  00ECD8  68                 	db	104	;'h'
   763  00ECD9  65                 	db	101	;'e'
   764  00ECDA  20                 	db	32
   765  00ECDB  74                 	db	116	;'t'
   766  00ECDC  65                 	db	101	;'e'
   767  00ECDD  72                 	db	114	;'r'
   768  00ECDE  6D                 	db	109	;'m'
   769  00ECDF  69                 	db	105	;'i'
   770  00ECE0  6E                 	db	110	;'n'
   771  00ECE1  61                 	db	97	;'a'
   772  00ECE2  6C                 	db	108	;'l'
   773  00ECE3  20                 	db	32
   774  00ECE4  62                 	db	98	;'b'
   775  00ECE5  75                 	db	117	;'u'
   776  00ECE6  74                 	db	116	;'t'
   777  00ECE7  20                 	db	32
   778  00ECE8  64                 	db	100	;'d'
   779  00ECE9  6F                 	db	111	;'o'
   780  00ECEA  65                 	db	101	;'e'
   781  00ECEB  73                 	db	115	;'s'
   782  00ECEC  6E                 	db	110	;'n'
   783  00ECED  27                 	db	39
   784  00ECEE  74                 	db	116	;'t'
   785  00ECEF  20                 	db	32
   786  00ECF0  72                 	db	114	;'r'
   787  00ECF1  65                 	db	101	;'e'
   788  00ECF2  73                 	db	115	;'s'
   789  00ECF3  65                 	db	101	;'e'
   790  00ECF4  74                 	db	116	;'t'
   791  00ECF5  20                 	db	32
   792  00ECF6  74                 	db	116	;'t'
   793  00ECF7  68                 	db	104	;'h'
   794  00ECF8  65                 	db	101	;'e'
   795  00ECF9  20                 	db	32
   796  00ECFA  6D                 	db	109	;'m'
   797  00ECFB  69                 	db	105	;'i'
   798  00ECFC  63                 	db	99	;'c'
   799  00ECFD  72                 	db	114	;'r'
   800  00ECFE  6F                 	db	111	;'o'
   801  00ECFF  0A                 	db	10
   802  00ED00  0D                 	db	13
   803  00ED01  20                 	db	32
   804  00ED02  20                 	db	32
   805  00ED03  20                 	db	32
   806  00ED04  43                 	db	67	;'C'
   807  00ED05  61                 	db	97	;'a'
   808  00ED06  75                 	db	117	;'u'
   809  00ED07  73                 	db	115	;'s'
   810  00ED08  65                 	db	101	;'e'
   811  00ED09  20                 	db	32
   812  00ED0A  6F                 	db	111	;'o'
   813  00ED0B  66                 	db	102	;'f'
   814  00ED0C  20                 	db	32
   815  00ED0D  52                 	db	82	;'R'
   816  00ED0E  65                 	db	101	;'e'
   817  00ED0F  73                 	db	115	;'s'
   818  00ED10  65                 	db	101	;'e'
   819  00ED11  74                 	db	116	;'t'
   820  00ED12  3F                 	db	63	;'?'
   821  00ED13  3A                 	db	58	;':'
   822  00ED14  20                 	db	32
   823  00ED15  52                 	db	82	;'R'
   824  00ED16  65                 	db	101	;'e'
   825  00ED17  74                 	db	116	;'t'
   826  00ED18  75                 	db	117	;'u'
   827  00ED19  72                 	db	114	;'r'
   828  00ED1A  6E                 	db	110	;'n'
   829  00ED1B  73                 	db	115	;'s'
   830  00ED1C  20                 	db	32
   831  00ED1D  74                 	db	116	;'t'
   832  00ED1E  68                 	db	104	;'h'
   833  00ED1F  65                 	db	101	;'e'
   834  00ED20  20                 	db	32
   835  00ED21  63                 	db	99	;'c'
   836  00ED22  61                 	db	97	;'a'
   837  00ED23  75                 	db	117	;'u'
   838  00ED24  73                 	db	115	;'s'
   839  00ED25  65                 	db	101	;'e'
   840  00ED26  20                 	db	32
   841  00ED27  6F                 	db	111	;'o'
   842  00ED28  66                 	db	102	;'f'
   843  00ED29  20                 	db	32
   844  00ED2A  74                 	db	116	;'t'
   845  00ED2B  68                 	db	104	;'h'
   846  00ED2C  65                 	db	101	;'e'
   847  00ED2D  20                 	db	32
   848  00ED2E  6D                 	db	109	;'m'
   849  00ED2F  6F                 	db	111	;'o'
   850  00ED30  73                 	db	115	;'s'
   851  00ED31  74                 	db	116	;'t'
   852  00ED32  20                 	db	32
   853  00ED33  72                 	db	114	;'r'
   854  00ED34  65                 	db	101	;'e'
   855  00ED35  63                 	db	99	;'c'
   856  00ED36  65                 	db	101	;'e'
   857  00ED37  6E                 	db	110	;'n'
   858  00ED38  74                 	db	116	;'t'
   859  00ED39  20                 	db	32
   860  00ED3A  64                 	db	100	;'d'
   861  00ED3B  65                 	db	101	;'e'
   862  00ED3C  76                 	db	118	;'v'
   863  00ED3D  69                 	db	105	;'i'
   864  00ED3E  63                 	db	99	;'c'
   865  00ED3F  65                 	db	101	;'e'
   866  00ED40  20                 	db	32
   867  00ED41  72                 	db	114	;'r'
   868  00ED42  65                 	db	101	;'e'
   869  00ED43  73                 	db	115	;'s'
   870  00ED44  65                 	db	101	;'e'
   871  00ED45  74                 	db	116	;'t'
   872  00ED46  0A                 	db	10
   873  00ED47  0D                 	db	13
   874  00ED48  20                 	db	32
   875  00ED49  20                 	db	32
   876  00ED4A  20                 	db	32
   877  00ED4B  2A                 	db	42
   878  00ED4C  49                 	db	73	;'I'
   879  00ED4D  44                 	db	68	;'D'
   880  00ED4E  4E                 	db	78	;'N'
   881  00ED4F  3F                 	db	63	;'?'
   882  00ED50  3A                 	db	58	;':'
   883  00ED51  20                 	db	32
   884  00ED52  52                 	db	82	;'R'
   885  00ED53  65                 	db	101	;'e'
   886  00ED54  74                 	db	116	;'t'
   887  00ED55  75                 	db	117	;'u'
   888  00ED56  72                 	db	114	;'r'
   889  00ED57  6E                 	db	110	;'n'
   890  00ED58  73                 	db	115	;'s'
   891  00ED59  20                 	db	32
   892  00ED5A  64                 	db	100	;'d'
   893  00ED5B  65                 	db	101	;'e'
   894  00ED5C  76                 	db	118	;'v'
   895  00ED5D  69                 	db	105	;'i'
   896  00ED5E  63                 	db	99	;'c'
   897  00ED5F  65                 	db	101	;'e'
   898  00ED60  20                 	db	32
   899  00ED61  69                 	db	105	;'i'
   900  00ED62  64                 	db	100	;'d'
   901  00ED63  65                 	db	101	;'e'
   902  00ED64  6E                 	db	110	;'n'
   903  00ED65  74                 	db	116	;'t'
   904  00ED66  69                 	db	105	;'i'
   905  00ED67  66                 	db	102	;'f'
   906  00ED68  69                 	db	105	;'i'
   907  00ED69  63                 	db	99	;'c'
   908  00ED6A  61                 	db	97	;'a'
   909  00ED6B  74                 	db	116	;'t'
   910  00ED6C  69                 	db	105	;'i'
   911  00ED6D  6F                 	db	111	;'o'
   912  00ED6E  6E                 	db	110	;'n'
   913  00ED6F  20                 	db	32
   914  00ED70  73                 	db	115	;'s'
   915  00ED71  74                 	db	116	;'t'
   916  00ED72  72                 	db	114	;'r'
   917  00ED73  69                 	db	105	;'i'
   918  00ED74  6E                 	db	110	;'n'
   919  00ED75  67                 	db	103	;'g'
   920  00ED76  0A                 	db	10
   921  00ED77  0D                 	db	13
   922  00ED78  20                 	db	32
   923  00ED79  20                 	db	32
   924  00ED7A  20                 	db	32
   925  00ED7B  44                 	db	68	;'D'
   926  00ED7C  65                 	db	101	;'e'
   927  00ED7D  76                 	db	118	;'v'
   928  00ED7E  69                 	db	105	;'i'
   929  00ED7F  63                 	db	99	;'c'
   930  00ED80  65                 	db	101	;'e'
   931  00ED81  20                 	db	32
   932  00ED82  4F                 	db	79	;'O'
   933  00ED83  6E                 	db	110	;'n'
   934  00ED84  20                 	db	32
   935  00ED85  54                 	db	84	;'T'
   936  00ED86  69                 	db	105	;'i'
   937  00ED87  6D                 	db	109	;'m'
   938  00ED88  65                 	db	101	;'e'
   939  00ED89  3F                 	db	63	;'?'
   940  00ED8A  3A                 	db	58	;':'
   941  00ED8B  20                 	db	32
   942  00ED8C  52                 	db	82	;'R'
   943  00ED8D  65                 	db	101	;'e'
   944  00ED8E  74                 	db	116	;'t'
   945  00ED8F  75                 	db	117	;'u'
   946  00ED90  72                 	db	114	;'r'
   947  00ED91  6E                 	db	110	;'n'
   948  00ED92  73                 	db	115	;'s'
   949  00ED93  20                 	db	32
   950  00ED94  64                 	db	100	;'d'
   951  00ED95  65                 	db	101	;'e'
   952  00ED96  76                 	db	118	;'v'
   953  00ED97  69                 	db	105	;'i'
   954  00ED98  63                 	db	99	;'c'
   955  00ED99  65                 	db	101	;'e'
   956  00ED9A  20                 	db	32
   957  00ED9B  6F                 	db	111	;'o'
   958  00ED9C  6E                 	db	110	;'n'
   959  00ED9D  20                 	db	32
   960  00ED9E  74                 	db	116	;'t'
   961  00ED9F  69                 	db	105	;'i'
   962  00EDA0  6D                 	db	109	;'m'
   963  00EDA1  65                 	db	101	;'e'
   964  00EDA2  20                 	db	32
   965  00EDA3  73                 	db	115	;'s'
   966  00EDA4  69                 	db	105	;'i'
   967  00EDA5  6E                 	db	110	;'n'
   968  00EDA6  63                 	db	99	;'c'
   969  00EDA7  65                 	db	101	;'e'
   970  00EDA8  20                 	db	32
   971  00EDA9  6C                 	db	108	;'l'
   972  00EDAA  61                 	db	97	;'a'
   973  00EDAB  73                 	db	115	;'s'
   974  00EDAC  74                 	db	116	;'t'
   975  00EDAD  20                 	db	32
   976  00EDAE  64                 	db	100	;'d'
   977  00EDAF  65                 	db	101	;'e'
   978  00EDB0  76                 	db	118	;'v'
   979  00EDB1  69                 	db	105	;'i'
   980  00EDB2  63                 	db	99	;'c'
   981  00EDB3  65                 	db	101	;'e'
   982  00EDB4  20                 	db	32
   983  00EDB5  72                 	db	114	;'r'
   984  00EDB6  65                 	db	101	;'e'
   985  00EDB7  73                 	db	115	;'s'
   986  00EDB8  65                 	db	101	;'e'
   987  00EDB9  74                 	db	116	;'t'
   988  00EDBA  0A                 	db	10
   989  00EDBB  0D                 	db	13
   990  00EDBC  20                 	db	32
   991  00EDBD  20                 	db	32
   992  00EDBE  20                 	db	32
   993  00EDBF  44                 	db	68	;'D'
   994  00EDC0  65                 	db	101	;'e'
   995  00EDC1  76                 	db	118	;'v'
   996  00EDC2  69                 	db	105	;'i'
   997  00EDC3  63                 	db	99	;'c'
   998  00EDC4  65                 	db	101	;'e'
   999  00EDC5  20                 	db	32
  1000  00EDC6  49                 	db	73	;'I'
  1001  00EDC7  44                 	db	68	;'D'
  1002  00EDC8  3F                 	db	63	;'?'
  1003  00EDC9  3A                 	db	58	;':'
  1004  00EDCA  20                 	db	32
  1005  00EDCB  52                 	db	82	;'R'
  1006  00EDCC  65                 	db	101	;'e'
  1007  00EDCD  74                 	db	116	;'t'
  1008  00EDCE  75                 	db	117	;'u'
  1009  00EDCF  72                 	db	114	;'r'
  1010  00EDD0  6E                 	db	110	;'n'
  1011  00EDD1  73                 	db	115	;'s'
  1012  00EDD2  20                 	db	32
  1013  00EDD3  64                 	db	100	;'d'
  1014  00EDD4  65                 	db	101	;'e'
  1015  00EDD5  76                 	db	118	;'v'
  1016  00EDD6  69                 	db	105	;'i'
  1017  00EDD7  63                 	db	99	;'c'
  1018  00EDD8  65                 	db	101	;'e'
  1019  00EDD9  20                 	db	32
  1020  00EDDA  49                 	db	73	;'I'
  1021  00EDDB  44                 	db	68	;'D'
  1022  00EDDC  20                 	db	32
  1023  00EDDD  61                 	db	97	;'a'
  1024  00EDDE  73                 	db	115	;'s'
  1025  00EDDF  20                 	db	32
  1026  00EDE0  70                 	db	112	;'p'
  1027  00EDE1  72                 	db	114	;'r'
  1028  00EDE2  65                 	db	101	;'e'
  1029  00EDE3  2D                 	db	45
  1030  00EDE4  70                 	db	112	;'p'
  1031  00EDE5  72                 	db	114	;'r'
  1032  00EDE6  6F                 	db	111	;'o'
  1033  00EDE7  67                 	db	103	;'g'
  1034  00EDE8  72                 	db	114	;'r'
  1035  00EDE9  61                 	db	97	;'a'
  1036  00EDEA  6D                 	db	109	;'m'
  1037  00EDEB  6D                 	db	109	;'m'
  1038  00EDEC  65                 	db	101	;'e'
  1039  00EDED  64                 	db	100	;'d'
  1040  00EDEE  20                 	db	32
  1041  00EDEF  69                 	db	105	;'i'
  1042  00EDF0  6E                 	db	110	;'n'
  1043  00EDF1  20                 	db	32
  1044  00EDF2  66                 	db	102	;'f'
  1045  00EDF3  6C                 	db	108	;'l'
  1046  00EDF4  61                 	db	97	;'a'
  1047  00EDF5  73                 	db	115	;'s'
  1048  00EDF6  68                 	db	104	;'h'
  1049  00EDF7  20                 	db	32
  1050  00EDF8  6D                 	db	109	;'m'
  1051  00EDF9  65                 	db	101	;'e'
  1052  00EDFA  6D                 	db	109	;'m'
  1053  00EDFB  6F                 	db	111	;'o'
  1054  00EDFC  72                 	db	114	;'r'
  1055  00EDFD  79                 	db	121	;'y'
  1056  00EDFE  0A                 	db	10
  1057  00EDFF  0D                 	db	13
  1058  00EE00  20                 	db	32
  1059  00EE01  20                 	db	32
  1060  00EE02  20                 	db	32
  1061  00EE03  52                 	db	82	;'R'
  1062  00EE04  65                 	db	101	;'e'
  1063  00EE05  76                 	db	118	;'v'
  1064  00EE06  69                 	db	105	;'i'
  1065  00EE07  73                 	db	115	;'s'
  1066  00EE08  69                 	db	105	;'i'
  1067  00EE09  6F                 	db	111	;'o'
  1068  00EE0A  6E                 	db	110	;'n'
  1069  00EE0B  20                 	db	32
  1070  00EE0C  49                 	db	73	;'I'
  1071  00EE0D  44                 	db	68	;'D'
  1072  00EE0E  3F                 	db	63	;'?'
  1073  00EE0F  3A                 	db	58	;':'
  1074  00EE10  20                 	db	32
  1075  00EE11  52                 	db	82	;'R'
  1076  00EE12  65                 	db	101	;'e'
  1077  00EE13  74                 	db	116	;'t'
  1078  00EE14  75                 	db	117	;'u'
  1079  00EE15  72                 	db	114	;'r'
  1080  00EE16  6E                 	db	110	;'n'
  1081  00EE17  73                 	db	115	;'s'
  1082  00EE18  20                 	db	32
  1083  00EE19  64                 	db	100	;'d'
  1084  00EE1A  65                 	db	101	;'e'
  1085  00EE1B  76                 	db	118	;'v'
  1086  00EE1C  69                 	db	105	;'i'
  1087  00EE1D  63                 	db	99	;'c'
  1088  00EE1E  65                 	db	101	;'e'
  1089  00EE1F  20                 	db	32
  1090  00EE20  73                 	db	115	;'s'
  1091  00EE21  69                 	db	105	;'i'
  1092  00EE22  6C                 	db	108	;'l'
  1093  00EE23  69                 	db	105	;'i'
  1094  00EE24  63                 	db	99	;'c'
  1095  00EE25  6F                 	db	111	;'o'
  1096  00EE26  6E                 	db	110	;'n'
  1097  00EE27  20                 	db	32
  1098  00EE28  72                 	db	114	;'r'
  1099  00EE29  65                 	db	101	;'e'
  1100  00EE2A  76                 	db	118	;'v'
  1101  00EE2B  69                 	db	105	;'i'
  1102  00EE2C  73                 	db	115	;'s'
  1103  00EE2D  69                 	db	105	;'i'
  1104  00EE2E  6F                 	db	111	;'o'
  1105  00EE2F  6E                 	db	110	;'n'
  1106  00EE30  20                 	db	32
  1107  00EE31  49                 	db	73	;'I'
  1108  00EE32  44                 	db	68	;'D'
  1109  00EE33  20                 	db	32
  1110  00EE34  61                 	db	97	;'a'
  1111  00EE35  73                 	db	115	;'s'
  1112  00EE36  20                 	db	32
  1113  00EE37  70                 	db	112	;'p'
  1114  00EE38  72                 	db	114	;'r'
  1115  00EE39  65                 	db	101	;'e'
  1116  00EE3A  2D                 	db	45
  1117  00EE3B  70                 	db	112	;'p'
  1118  00EE3C  72                 	db	114	;'r'
  1119  00EE3D  6F                 	db	111	;'o'
  1120  00EE3E  67                 	db	103	;'g'
  1121  00EE3F  72                 	db	114	;'r'
  1122  00EE40  61                 	db	97	;'a'
  1123  00EE41  6D                 	db	109	;'m'
  1124  00EE42  6D                 	db	109	;'m'
  1125  00EE43  65                 	db	101	;'e'
  1126  00EE44  64                 	db	100	;'d'
  1127  00EE45  20                 	db	32
  1128  00EE46  69                 	db	105	;'i'
  1129  00EE47  6E                 	db	110	;'n'
  1130  00EE48  20                 	db	32
  1131  00EE49  66                 	db	102	;'f'
  1132  00EE4A  6C                 	db	108	;'l'
  1133  00EE4B  61                 	db	97	;'a'
  1134  00EE4C  73                 	db	115	;'s'
  1135  00EE4D  68                 	db	104	;'h'
  1136  00EE4E  20                 	db	32
  1137  00EE4F  6D                 	db	109	;'m'
  1138  00EE50  65                 	db	101	;'e'
  1139  00EE51  6D                 	db	109	;'m'
  1140  00EE52  6F                 	db	111	;'o'
  1141  00EE53  72                 	db	114	;'r'
  1142  00EE54  79                 	db	121	;'y'
  1143  00EE55  0A                 	db	10
  1144  00EE56  0D                 	db	13
  1145  00EE57  20                 	db	32
  1146  00EE58  20                 	db	32
  1147  00EE59  20                 	db	32
  1148  00EE5A  55                 	db	85	;'U'
  1149  00EE5B  73                 	db	115	;'s'
  1150  00EE5C  65                 	db	101	;'e'
  1151  00EE5D  72                 	db	114	;'r'
  1152  00EE5E  20                 	db	32
  1153  00EE5F  49                 	db	73	;'I'
  1154  00EE60  44                 	db	68	;'D'
  1155  00EE61  73                 	db	115	;'s'
  1156  00EE62  3F                 	db	63	;'?'
  1157  00EE63  3A                 	db	58	;':'
  1158  00EE64  20                 	db	32
  1159  00EE65  52                 	db	82	;'R'
  1160  00EE66  65                 	db	101	;'e'
  1161  00EE67  74                 	db	116	;'t'
  1162  00EE68  75                 	db	117	;'u'
  1163  00EE69  72                 	db	114	;'r'
  1164  00EE6A  6E                 	db	110	;'n'
  1165  00EE6B  73                 	db	115	;'s'
  1166  00EE6C  20                 	db	32
  1167  00EE6D  61                 	db	97	;'a'
  1168  00EE6E  20                 	db	32
  1169  00EE6F  6C                 	db	108	;'l'
  1170  00EE70  69                 	db	105	;'i'
  1171  00EE71  73                 	db	115	;'s'
  1172  00EE72  74                 	db	116	;'t'
  1173  00EE73  20                 	db	32
  1174  00EE74  6F                 	db	111	;'o'
  1175  00EE75  66                 	db	102	;'f'
  1176  00EE76  20                 	db	32
  1177  00EE77  75                 	db	117	;'u'
  1178  00EE78  73                 	db	115	;'s'
  1179  00EE79  65                 	db	101	;'e'
  1180  00EE7A  72                 	db	114	;'r'
  1181  00EE7B  20                 	db	32
  1182  00EE7C  49                 	db	73	;'I'
  1183  00EE7D  44                 	db	68	;'D'
  1184  00EE7E  73                 	db	115	;'s'
  1185  00EE7F  20                 	db	32
  1186  00EE80  28                 	db	40
  1187  00EE81  64                 	db	100	;'d'
  1188  00EE82  69                 	db	105	;'i'
  1189  00EE83  73                 	db	115	;'s'
  1190  00EE84  70                 	db	112	;'p'
  1191  00EE85  6C                 	db	108	;'l'
  1192  00EE86  61                 	db	97	;'a'
  1193  00EE87  79                 	db	121	;'y'
  1194  00EE88  65                 	db	101	;'e'
  1195  00EE89  64                 	db	100	;'d'
  1196  00EE8A  20                 	db	32
  1197  00EE8B  69                 	db	105	;'i'
  1198  00EE8C  6E                 	db	110	;'n'
  1199  00EE8D  20                 	db	32
  1200  00EE8E  68                 	db	104	;'h'
  1201  00EE8F  65                 	db	101	;'e'
  1202  00EE90  78                 	db	120	;'x'
  1203  00EE91  29                 	db	41
  1204  00EE92  20                 	db	32
  1205  00EE93  61                 	db	97	;'a'
  1206  00EE94  73                 	db	115	;'s'
  1207  00EE95  20                 	db	32
  1208  00EE96  73                 	db	115	;'s'
  1209  00EE97  74                 	db	116	;'t'
  1210  00EE98  6F                 	db	111	;'o'
  1211  00EE99  72                 	db	114	;'r'
  1212  00EE9A  65                 	db	101	;'e'
  1213  00EE9B  64                 	db	100	;'d'
  1214  00EE9C  20                 	db	32
  1215  00EE9D  69                 	db	105	;'i'
  1216  00EE9E  6E                 	db	110	;'n'
  1217  00EE9F  20                 	db	32
  1218  00EEA0  66                 	db	102	;'f'
  1219  00EEA1  6C                 	db	108	;'l'
  1220  00EEA2  61                 	db	97	;'a'
  1221  00EEA3  73                 	db	115	;'s'
  1222  00EEA4  68                 	db	104	;'h'
  1223  00EEA5  20                 	db	32
  1224  00EEA6  6D                 	db	109	;'m'
  1225  00EEA7  65                 	db	101	;'e'
  1226  00EEA8  6D                 	db	109	;'m'
  1227  00EEA9  6F                 	db	111	;'o'
  1228  00EEAA  72                 	db	114	;'r'
  1229  00EEAB  79                 	db	121	;'y'
  1230  00EEAC  0A                 	db	10
  1231  00EEAD  0D                 	db	13
  1232  00EEAE  20                 	db	32
  1233  00EEAF  20                 	db	32
  1234  00EEB0  20                 	db	32
  1235  00EEB1  41                 	db	65	;'A'
  1236  00EEB2  44                 	db	68	;'D'
  1237  00EEB3  43                 	db	67	;'C'
  1238  00EEB4  20                 	db	32
  1239  00EEB5  45                 	db	69	;'E'
  1240  00EEB6  72                 	db	114	;'r'
  1241  00EEB7  72                 	db	114	;'r'
  1242  00EEB8  6F                 	db	111	;'o'
  1243  00EEB9  72                 	db	114	;'r'
  1244  00EEBA  3F                 	db	63	;'?'
  1245  00EEBB  3A                 	db	58	;':'
  1246  00EEBC  20                 	db	32
  1247  00EEBD  52                 	db	82	;'R'
  1248  00EEBE  65                 	db	101	;'e'
  1249  00EEBF  74                 	db	116	;'t'
  1250  00EEC0  75                 	db	117	;'u'
  1251  00EEC1  72                 	db	114	;'r'
  1252  00EEC2  6E                 	db	110	;'n'
  1253  00EEC3  73                 	db	115	;'s'
  1254  00EEC4  20                 	db	32
  1255  00EEC5  74                 	db	116	;'t'
  1256  00EEC6  68                 	db	104	;'h'
  1257  00EEC7  65                 	db	101	;'e'
  1258  00EEC8  20                 	db	32
  1259  00EEC9  63                 	db	99	;'c'
  1260  00EECA  61                 	db	97	;'a'
  1261  00EECB  75                 	db	117	;'u'
  1262  00EECC  73                 	db	115	;'s'
  1263  00EECD  65                 	db	101	;'e'
  1264  00EECE  20                 	db	32
  1265  00EECF  6F                 	db	111	;'o'
  1266  00EED0  66                 	db	102	;'f'
  1267  00EED1  20                 	db	32
  1268  00EED2  61                 	db	97	;'a'
  1269  00EED3  6E                 	db	110	;'n'
  1270  00EED4  20                 	db	32
  1271  00EED5  41                 	db	65	;'A'
  1272  00EED6  44                 	db	68	;'D'
  1273  00EED7  43                 	db	67	;'C'
  1274  00EED8  20                 	db	32
  1275  00EED9  65                 	db	101	;'e'
  1276  00EEDA  72                 	db	114	;'r'
  1277  00EEDB  72                 	db	114	;'r'
  1278  00EEDC  6F                 	db	111	;'o'
  1279  00EEDD  72                 	db	114	;'r'
  1280  00EEDE  20                 	db	32
  1281  00EEDF  69                 	db	105	;'i'
  1282  00EEE0  66                 	db	102	;'f'
  1283  00EEE1  20                 	db	32
  1284  00EEE2  61                 	db	97	;'a'
  1285  00EEE3  6E                 	db	110	;'n'
  1286  00EEE4  20                 	db	32
  1287  00EEE5  65                 	db	101	;'e'
  1288  00EEE6  72                 	db	114	;'r'
  1289  00EEE7  72                 	db	114	;'r'
  1290  00EEE8  6F                 	db	111	;'o'
  1291  00EEE9  72                 	db	114	;'r'
  1292  00EEEA  20                 	db	32
  1293  00EEEB  6F                 	db	111	;'o'
  1294  00EEEC  63                 	db	99	;'c'
  1295  00EEED  63                 	db	99	;'c'
  1296  00EEEE  75                 	db	117	;'u'
  1297  00EEEF  72                 	db	114	;'r'
  1298  00EEF0  72                 	db	114	;'r'
  1299  00EEF1  65                 	db	101	;'e'
  1300  00EEF2  64                 	db	100	;'d'
  1301  00EEF3  0A                 	db	10
  1302  00EEF4  0D                 	db	13
  1303  00EEF5  20                 	db	32
  1304  00EEF6  20                 	db	32
  1305  00EEF7  20                 	db	32
  1306  00EEF8  43                 	db	67	;'C'
  1307  00EEF9  6C                 	db	108	;'l'
  1308  00EEFA  65                 	db	101	;'e'
  1309  00EEFB  61                 	db	97	;'a'
  1310  00EEFC  72                 	db	114	;'r'
  1311  00EEFD  20                 	db	32
  1312  00EEFE  41                 	db	65	;'A'
  1313  00EEFF  44                 	db	68	;'D'
  1314  00EF00  43                 	db	67	;'C'
  1315  00EF01  20                 	db	32
  1316  00EF02  45                 	db	69	;'E'
  1317  00EF03  72                 	db	114	;'r'
  1318  00EF04  72                 	db	114	;'r'
  1319  00EF05  6F                 	db	111	;'o'
  1320  00EF06  72                 	db	114	;'r'
  1321  00EF07  3A                 	db	58	;':'
  1322  00EF08  20                 	db	32
  1323  00EF09  43                 	db	67	;'C'
  1324  00EF0A  6C                 	db	108	;'l'
  1325  00EF0B  65                 	db	101	;'e'
  1326  00EF0C  61                 	db	97	;'a'
  1327  00EF0D  72                 	db	114	;'r'
  1328  00EF0E  73                 	db	115	;'s'
  1329  00EF0F  20                 	db	32
  1330  00EF10  74                 	db	116	;'t'
  1331  00EF11  68                 	db	104	;'h'
  1332  00EF12  65                 	db	101	;'e'
  1333  00EF13  20                 	db	32
  1334  00EF14  41                 	db	65	;'A'
  1335  00EF15  44                 	db	68	;'D'
  1336  00EF16  43                 	db	67	;'C'
  1337  00EF17  20                 	db	32
  1338  00EF18  65                 	db	101	;'e'
  1339  00EF19  72                 	db	114	;'r'
  1340  00EF1A  72                 	db	114	;'r'
  1341  00EF1B  6F                 	db	111	;'o'
  1342  00EF1C  72                 	db	114	;'r'
  1343  00EF1D  20                 	db	32
  1344  00EF1E  61                 	db	97	;'a'
  1345  00EF1F  6E                 	db	110	;'n'
  1346  00EF20  64                 	db	100	;'d'
  1347  00EF21  20                 	db	32
  1348  00EF22  72                 	db	114	;'r'
  1349  00EF23  65                 	db	101	;'e'
  1350  00EF24  73                 	db	115	;'s'
  1351  00EF25  75                 	db	117	;'u'
  1352  00EF26  6D                 	db	109	;'m'
  1353  00EF27  65                 	db	101	;'e'
  1354  00EF28  73                 	db	115	;'s'
  1355  00EF29  20                 	db	32
  1356  00EF2A  41                 	db	65	;'A'
  1357  00EF2B  44                 	db	68	;'D'
  1358  00EF2C  43                 	db	67	;'C'
  1359  00EF2D  20                 	db	32
  1360  00EF2E  63                 	db	99	;'c'
  1361  00EF2F  6F                 	db	111	;'o'
  1362  00EF30  6E                 	db	110	;'n'
  1363  00EF31  76                 	db	118	;'v'
  1364  00EF32  65                 	db	101	;'e'
  1365  00EF33  72                 	db	114	;'r'
  1366  00EF34  73                 	db	115	;'s'
  1367  00EF35  69                 	db	105	;'i'
  1368  00EF36  6F                 	db	111	;'o'
  1369  00EF37  6E                 	db	110	;'n'
  1370  00EF38  73                 	db	115	;'s'
  1371  00EF39  0A                 	db	10
  1372  00EF3A  0D                 	db	13
  1373  00EF3B  20                 	db	32
  1374  00EF3C  20                 	db	32
  1375  00EF3D  20                 	db	32
  1376  00EF3E  56                 	db	86	;'V'
  1377  00EF3F  43                 	db	67	;'C'
  1378  00EF40  43                 	db	67	;'C'
  1379  00EF41  20                 	db	32
  1380  00EF42  4F                 	db	79	;'O'
  1381  00EF43  76                 	db	118	;'v'
  1382  00EF44  65                 	db	101	;'e'
  1383  00EF45  72                 	db	114	;'r'
  1384  00EF46  76                 	db	118	;'v'
  1385  00EF47  6F                 	db	111	;'o'
  1386  00EF48  6C                 	db	108	;'l'
  1387  00EF49  74                 	db	116	;'t'
  1388  00EF4A  61                 	db	97	;'a'
  1389  00EF4B  67                 	db	103	;'g'
  1390  00EF4C  65                 	db	101	;'e'
  1391  00EF4D  3F                 	db	63	;'?'
  1392  00EF4E  3A                 	db	58	;':'
  1393  00EF4F  20                 	db	32
  1394  00EF50  53                 	db	83	;'S'
  1395  00EF51  74                 	db	116	;'t'
  1396  00EF52  61                 	db	97	;'a'
  1397  00EF53  74                 	db	116	;'t'
  1398  00EF54  65                 	db	101	;'e'
  1399  00EF55  73                 	db	115	;'s'
  1400  00EF56  20                 	db	32
  1401  00EF57  69                 	db	105	;'i'
  1402  00EF58  66                 	db	102	;'f'
  1403  00EF59  20                 	db	32
  1404  00EF5A  61                 	db	97	;'a'
  1405  00EF5B  20                 	db	32
  1406  00EF5C  56                 	db	86	;'V'
  1407  00EF5D  43                 	db	67	;'C'
  1408  00EF5E  43                 	db	67	;'C'
  1409  00EF5F  20                 	db	32
  1410  00EF60  6F                 	db	111	;'o'
  1411  00EF61  76                 	db	118	;'v'
  1412  00EF62  65                 	db	101	;'e'
  1413  00EF63  72                 	db	114	;'r'
  1414  00EF64  76                 	db	118	;'v'
  1415  00EF65  6F                 	db	111	;'o'
  1416  00EF66  6C                 	db	108	;'l'
  1417  00EF67  74                 	db	116	;'t'
  1418  00EF68  61                 	db	97	;'a'
  1419  00EF69  67                 	db	103	;'g'
  1420  00EF6A  65                 	db	101	;'e'
  1421  00EF6B  20                 	db	32
  1422  00EF6C  63                 	db	99	;'c'
  1423  00EF6D  6F                 	db	111	;'o'
  1424  00EF6E  6E                 	db	110	;'n'
  1425  00EF6F  64                 	db	100	;'d'
  1426  00EF70  69                 	db	105	;'i'
  1427  00EF71  74                 	db	116	;'t'
  1428  00EF72  69                 	db	105	;'i'
  1429  00EF73  6F                 	db	111	;'o'
  1430  00EF74  6E                 	db	110	;'n'
  1431  00EF75  20                 	db	32
  1432  00EF76  68                 	db	104	;'h'
  1433  00EF77  61                 	db	97	;'a'
  1434  00EF78  73                 	db	115	;'s'
  1435  00EF79  20                 	db	32
  1436  00EF7A  6F                 	db	111	;'o'
  1437  00EF7B  63                 	db	99	;'c'
  1438  00EF7C  63                 	db	99	;'c'
  1439  00EF7D  75                 	db	117	;'u'
  1440  00EF7E  72                 	db	114	;'r'
  1441  00EF7F  72                 	db	114	;'r'
  1442  00EF80  65                 	db	101	;'e'
  1443  00EF81  64                 	db	100	;'d'
  1444  00EF82  20                 	db	32
  1445  00EF83  6F                 	db	111	;'o'
  1446  00EF84  72                 	db	114	;'r'
  1447  00EF85  20                 	db	32
  1448  00EF86  6E                 	db	110	;'n'
  1449  00EF87  6F                 	db	111	;'o'
  1450  00EF88  74                 	db	116	;'t'
  1451  00EF89  0A                 	db	10
  1452  00EF8A  0D                 	db	13
  1453  00EF8B  20                 	db	32
  1454  00EF8C  20                 	db	32
  1455  00EF8D  20                 	db	32
  1456  00EF8E  48                 	db	72	;'H'
  1457  00EF8F  65                 	db	101	;'e'
  1458  00EF90  6C                 	db	108	;'l'
  1459  00EF91  70                 	db	112	;'p'
  1460  00EF92  3A                 	db	58	;':'
  1461  00EF93  20                 	db	32
  1462  00EF94  54                 	db	84	;'T'
  1463  00EF95  68                 	db	104	;'h'
  1464  00EF96  69                 	db	105	;'i'
  1465  00EF97  73                 	db	115	;'s'
  1466  00EF98  20                 	db	32
  1467  00EF99  6D                 	db	109	;'m'
  1468  00EF9A  65                 	db	101	;'e'
  1469  00EF9B  73                 	db	115	;'s'
  1470  00EF9C  73                 	db	115	;'s'
  1471  00EF9D  61                 	db	97	;'a'
  1472  00EF9E  67                 	db	103	;'g'
  1473  00EF9F  65                 	db	101	;'e'
  1474  00EFA0  2C                 	db	44
  1475  00EFA1  20                 	db	32
  1476  00EFA2  6C                 	db	108	;'l'
  1477  00EFA3  69                 	db	105	;'i'
  1478  00EFA4  73                 	db	115	;'s'
  1479  00EFA5  74                 	db	116	;'t'
  1480  00EFA6  73                 	db	115	;'s'
  1481  00EFA7  20                 	db	32
  1482  00EFA8  73                 	db	115	;'s'
  1483  00EFA9  75                 	db	117	;'u'
  1484  00EFAA  70                 	db	112	;'p'
  1485  00EFAB  70                 	db	112	;'p'
  1486  00EFAC  6F                 	db	111	;'o'
  1487  00EFAD  72                 	db	114	;'r'
  1488  00EFAE  74                 	db	116	;'t'
  1489  00EFAF  65                 	db	101	;'e'
  1490  00EFB0  64                 	db	100	;'d'
  1491  00EFB1  20                 	db	32
  1492  00EFB2  63                 	db	99	;'c'
  1493  00EFB3  6F                 	db	111	;'o'
  1494  00EFB4  6D                 	db	109	;'m'
  1495  00EFB5  6D                 	db	109	;'m'
  1496  00EFB6  61                 	db	97	;'a'
  1497  00EFB7  6E                 	db	110	;'n'
  1498  00EFB8  64                 	db	100	;'d'
  1499  00EFB9  73                 	db	115	;'s'
  1500  00EFBA  0A                 	db	10
  1501  00EFBB  0D                 	db	13
  1502  00EFBC  0A                 	db	10
  1503  00EFBD  0D                 	db	13
  1504  00EFBE  44                 	db	68	;'D'
  1505  00EFBF  65                 	db	101	;'e'
  1506  00EFC0  76                 	db	118	;'v'
  1507  00EFC1  69                 	db	105	;'i'
  1508  00EFC2  63                 	db	99	;'c'
  1509  00EFC3  65                 	db	101	;'e'
  1510  00EFC4  20                 	db	32
  1511  00EFC5  4D                 	db	77	;'M'
  1512  00EFC6  65                 	db	101	;'e'
  1513  00EFC7  61                 	db	97	;'a'
  1514  00EFC8  73                 	db	115	;'s'
  1515  00EFC9  75                 	db	117	;'u'
  1516  00EFCA  72                 	db	114	;'r'
  1517  00EFCB  65                 	db	101	;'e'
  1518  00EFCC  6D                 	db	109	;'m'
  1519  00EFCD  65                 	db	101	;'e'
  1520  00EFCE  6E                 	db	110	;'n'
  1521  00EFCF  74                 	db	116	;'t'
  1522  00EFD0  20                 	db	32
  1523  00EFD1  43                 	db	67	;'C'
  1524  00EFD2  6F                 	db	111	;'o'
  1525  00EFD3  6D                 	db	109	;'m'
  1526  00EFD4  6D                 	db	109	;'m'
  1527  00EFD5  61                 	db	97	;'a'
  1528  00EFD6  6E                 	db	110	;'n'
  1529  00EFD7  64                 	db	100	;'d'
  1530  00EFD8  73                 	db	115	;'s'
  1531  00EFD9  3A                 	db	58	;':'
  1532  00EFDA  0A                 	db	10
  1533  00EFDB  0D                 	db	13
  1534  00EFDC  20                 	db	32
  1535  00EFDD  20                 	db	32
  1536  00EFDE  20                 	db	32
  1537  00EFDF  4D                 	db	77	;'M'
  1538  00EFE0  65                 	db	101	;'e'
  1539  00EFE1  61                 	db	97	;'a'
  1540  00EFE2  73                 	db	115	;'s'
  1541  00EFE3  75                 	db	117	;'u'
  1542  00EFE4  72                 	db	114	;'r'
  1543  00EFE5  65                 	db	101	;'e'
  1544  00EFE6  20                 	db	32
  1545  00EFE7  50                 	db	80	;'P'
  1546  00EFE8  4F                 	db	79	;'O'
  1547  00EFE9  53                 	db	83	;'S'
  1548  00EFEA  33                 	db	51	;'3'
  1549  00EFEB  50                 	db	80	;'P'
  1550  00EFEC  33                 	db	51	;'3'
  1551  00EFED  3F                 	db	63	;'?'
  1552  00EFEE  3A                 	db	58	;':'
  1553  00EFEF  20                 	db	32
  1554  00EFF0  52                 	db	82	;'R'
  1555  00EFF1  65                 	db	101	;'e'
  1556  00EFF2  74                 	db	116	;'t'
  1557  00EFF3  75                 	db	117	;'u'
  1558  00EFF4  72                 	db	114	;'r'
  1559  00EFF5  6E                 	db	110	;'n'
  1560  00EFF6  73                 	db	115	;'s'
  1561  00EFF7  20                 	db	32
  1562  00EFF8  2B                 	db	43
  1563  00EFF9  33                 	db	51	;'3'
  1564  00EFFA  2E                 	db	46
  1565  00EFFB  33                 	db	51	;'3'
  1566  00EFFC  56                 	db	86	;'V'
  1567  00EFFD  20                 	db	32
  1568  00EFFE  41                 	db	65	;'A'
  1569  00EFFF  44                 	db	68	;'D'
  1570  00F000  43                 	db	67	;'C'
  1571  00F001  20                 	db	32
  1572  00F002  43                 	db	67	;'C'
  1573  00F003  6F                 	db	111	;'o'
  1574  00F004  6E                 	db	110	;'n'
  1575  00F005  76                 	db	118	;'v'
  1576  00F006  65                 	db	101	;'e'
  1577  00F007  72                 	db	114	;'r'
  1578  00F008  73                 	db	115	;'s'
  1579  00F009  69                 	db	105	;'i'
  1580  00F00A  6F                 	db	111	;'o'
  1581  00F00B  6E                 	db	110	;'n'
  1582  00F00C  20                 	db	32
  1583  00F00D  69                 	db	105	;'i'
  1584  00F00E  6E                 	db	110	;'n'
  1585  00F00F  20                 	db	32
  1586  00F010  76                 	db	118	;'v'
  1587  00F011  6F                 	db	111	;'o'
  1588  00F012  6C                 	db	108	;'l'
  1589  00F013  74                 	db	116	;'t'
  1590  00F014  73                 	db	115	;'s'
  1591  00F015  0A                 	db	10
  1592  00F016  0D                 	db	13
  1593  00F017  20                 	db	32
  1594  00F018  20                 	db	32
  1595  00F019  20                 	db	32
  1596  00F01A  4D                 	db	77	;'M'
  1597  00F01B  65                 	db	101	;'e'
  1598  00F01C  61                 	db	97	;'a'
  1599  00F01D  73                 	db	115	;'s'
  1600  00F01E  75                 	db	117	;'u'
  1601  00F01F  72                 	db	114	;'r'
  1602  00F020  65                 	db	101	;'e'
  1603  00F021  20                 	db	32
  1604  00F022  50                 	db	80	;'P'
  1605  00F023  4F                 	db	79	;'O'
  1606  00F024  53                 	db	83	;'S'
  1607  00F025  31                 	db	49	;'1'
  1608  00F026  32                 	db	50	;'2'
  1609  00F027  3F                 	db	63	;'?'
  1610  00F028  3A                 	db	58	;':'
  1611  00F029  20                 	db	32
  1612  00F02A  52                 	db	82	;'R'
  1613  00F02B  65                 	db	101	;'e'
  1614  00F02C  74                 	db	116	;'t'
  1615  00F02D  75                 	db	117	;'u'
  1616  00F02E  72                 	db	114	;'r'
  1617  00F02F  6E                 	db	110	;'n'
  1618  00F030  73                 	db	115	;'s'
  1619  00F031  20                 	db	32
  1620  00F032  2B                 	db	43
  1621  00F033  31                 	db	49	;'1'
  1622  00F034  32                 	db	50	;'2'
  1623  00F035  56                 	db	86	;'V'
  1624  00F036  20                 	db	32
  1625  00F037  41                 	db	65	;'A'
  1626  00F038  44                 	db	68	;'D'
  1627  00F039  43                 	db	67	;'C'
  1628  00F03A  20                 	db	32
  1629  00F03B  43                 	db	67	;'C'
  1630  00F03C  6F                 	db	111	;'o'
  1631  00F03D  6E                 	db	110	;'n'
  1632  00F03E  76                 	db	118	;'v'
  1633  00F03F  65                 	db	101	;'e'
  1634  00F040  72                 	db	114	;'r'
  1635  00F041  73                 	db	115	;'s'
  1636  00F042  69                 	db	105	;'i'
  1637  00F043  6F                 	db	111	;'o'
  1638  00F044  6E                 	db	110	;'n'
  1639  00F045  20                 	db	32
  1640  00F046  69                 	db	105	;'i'
  1641  00F047  6E                 	db	110	;'n'
  1642  00F048  20                 	db	32
  1643  00F049  76                 	db	118	;'v'
  1644  00F04A  6F                 	db	111	;'o'
  1645  00F04B  6C                 	db	108	;'l'
  1646  00F04C  74                 	db	116	;'t'
  1647  00F04D  73                 	db	115	;'s'
  1648  00F04E  0A                 	db	10
  1649  00F04F  0D                 	db	13
  1650  00F050  20                 	db	32
  1651  00F051  20                 	db	32
  1652  00F052  20                 	db	32
  1653  00F053  4D                 	db	77	;'M'
  1654  00F054  65                 	db	101	;'e'
  1655  00F055  61                 	db	97	;'a'
  1656  00F056  73                 	db	115	;'s'
  1657  00F057  75                 	db	117	;'u'
  1658  00F058  72                 	db	114	;'r'
  1659  00F059  65                 	db	101	;'e'
  1660  00F05A  20                 	db	32
  1661  00F05B  44                 	db	68	;'D'
  1662  00F05C  69                 	db	105	;'i'
  1663  00F05D  65                 	db	101	;'e'
  1664  00F05E  20                 	db	32
  1665  00F05F  54                 	db	84	;'T'
  1666  00F060  65                 	db	101	;'e'
  1667  00F061  6D                 	db	109	;'m'
  1668  00F062  70                 	db	112	;'p'
  1669  00F063  3F                 	db	63	;'?'
  1670  00F064  3A                 	db	58	;':'
  1671  00F065  20                 	db	32
  1672  00F066  52                 	db	82	;'R'
  1673  00F067  65                 	db	101	;'e'
  1674  00F068  74                 	db	116	;'t'
  1675  00F069  75                 	db	117	;'u'
  1676  00F06A  72                 	db	114	;'r'
  1677  00F06B  6E                 	db	110	;'n'
  1678  00F06C  73                 	db	115	;'s'
  1679  00F06D  20                 	db	32
  1680  00F06E  74                 	db	116	;'t'
  1681  00F06F  68                 	db	104	;'h'
  1682  00F070  65                 	db	101	;'e'
  1683  00F071  20                 	db	32
  1684  00F072  6D                 	db	109	;'m'
  1685  00F073  69                 	db	105	;'i'
  1686  00F074  63                 	db	99	;'c'
  1687  00F075  72                 	db	114	;'r'
  1688  00F076  6F                 	db	111	;'o'
  1689  00F077  63                 	db	99	;'c'
  1690  00F078  6F                 	db	111	;'o'
  1691  00F079  6E                 	db	110	;'n'
  1692  00F07A  74                 	db	116	;'t'
  1693  00F07B  72                 	db	114	;'r'
  1694  00F07C  6F                 	db	111	;'o'
  1695  00F07D  6C                 	db	108	;'l'
  1696  00F07E  6C                 	db	108	;'l'
  1697  00F07F  65                 	db	101	;'e'
  1698  00F080  72                 	db	114	;'r'
  1699  00F081  20                 	db	32
  1700  00F082  64                 	db	100	;'d'
  1701  00F083  69                 	db	105	;'i'
  1702  00F084  65                 	db	101	;'e'
  1703  00F085  20                 	db	32
  1704  00F086  74                 	db	116	;'t'
  1705  00F087  65                 	db	101	;'e'
  1706  00F088  6D                 	db	109	;'m'
  1707  00F089  70                 	db	112	;'p'
  1708  00F08A  65                 	db	101	;'e'
  1709  00F08B  72                 	db	114	;'r'
  1710  00F08C  61                 	db	97	;'a'
  1711  00F08D  74                 	db	116	;'t'
  1712  00F08E  75                 	db	117	;'u'
  1713  00F08F  72                 	db	114	;'r'
  1714  00F090  65                 	db	101	;'e'
  1715  00F091  20                 	db	32
  1716  00F092  69                 	db	105	;'i'
  1717  00F093  6E                 	db	110	;'n'
  1718  00F094  20                 	db	32
  1719  00F095  64                 	db	100	;'d'
  1720  00F096  65                 	db	101	;'e'
  1721  00F097  67                 	db	103	;'g'
  1722  00F098  72                 	db	114	;'r'
  1723  00F099  65                 	db	101	;'e'
  1724  00F09A  65                 	db	101	;'e'
  1725  00F09B  73                 	db	115	;'s'
  1726  00F09C  20                 	db	32
  1727  00F09D  43                 	db	67	;'C'
  1728  00F09E  0A                 	db	10
  1729  00F09F  0D                 	db	13
  1730  00F0A0  20                 	db	32
  1731  00F0A1  20                 	db	32
  1732  00F0A2  20                 	db	32
  1733  00F0A3  4D                 	db	77	;'M'
  1734  00F0A4  65                 	db	101	;'e'
  1735  00F0A5  61                 	db	97	;'a'
  1736  00F0A6  73                 	db	115	;'s'
  1737  00F0A7  75                 	db	117	;'u'
  1738  00F0A8  72                 	db	114	;'r'
  1739  00F0A9  65                 	db	101	;'e'
  1740  00F0AA  20                 	db	32
  1741  00F0AB  46                 	db	70	;'F'
  1742  00F0AC  56                 	db	86	;'V'
  1743  00F0AD  52                 	db	82	;'R'
  1744  00F0AE  3F                 	db	63	;'?'
  1745  00F0AF  3A                 	db	58	;':'
  1746  00F0B0  20                 	db	32
  1747  00F0B1  52                 	db	82	;'R'
  1748  00F0B2  65                 	db	101	;'e'
  1749  00F0B3  74                 	db	116	;'t'
  1750  00F0B4  75                 	db	117	;'u'
  1751  00F0B5  72                 	db	114	;'r'
  1752  00F0B6  6E                 	db	110	;'n'
  1753  00F0B7  73                 	db	115	;'s'
  1754  00F0B8  20                 	db	32
  1755  00F0B9  74                 	db	116	;'t'
  1756  00F0BA  68                 	db	104	;'h'
  1757  00F0BB  65                 	db	101	;'e'
  1758  00F0BC  20                 	db	32
  1759  00F0BD  69                 	db	105	;'i'
  1760  00F0BE  6E                 	db	110	;'n'
  1761  00F0BF  74                 	db	116	;'t'
  1762  00F0C0  65                 	db	101	;'e'
  1763  00F0C1  72                 	db	114	;'r'
  1764  00F0C2  6E                 	db	110	;'n'
  1765  00F0C3  61                 	db	97	;'a'
  1766  00F0C4  6C                 	db	108	;'l'
  1767  00F0C5  20                 	db	32
  1768  00F0C6  66                 	db	102	;'f'
  1769  00F0C7  69                 	db	105	;'i'
  1770  00F0C8  78                 	db	120	;'x'
  1771  00F0C9  65                 	db	101	;'e'
  1772  00F0CA  64                 	db	100	;'d'
  1773  00F0CB  20                 	db	32
  1774  00F0CC  76                 	db	118	;'v'
  1775  00F0CD  6F                 	db	111	;'o'
  1776  00F0CE  6C                 	db	108	;'l'
  1777  00F0CF  74                 	db	116	;'t'
  1778  00F0D0  61                 	db	97	;'a'
  1779  00F0D1  67                 	db	103	;'g'
  1780  00F0D2  65                 	db	101	;'e'
  1781  00F0D3  20                 	db	32
  1782  00F0D4  72                 	db	114	;'r'
  1783  00F0D5  65                 	db	101	;'e'
  1784  00F0D6  66                 	db	102	;'f'
  1785  00F0D7  65                 	db	101	;'e'
  1786  00F0D8  72                 	db	114	;'r'
  1787  00F0D9  65                 	db	101	;'e'
  1788  00F0DA  6E                 	db	110	;'n'
  1789  00F0DB  63                 	db	99	;'c'
  1790  00F0DC  65                 	db	101	;'e'
  1791  00F0DD  20                 	db	32
  1792  00F0DE  62                 	db	98	;'b'
  1793  00F0DF  75                 	db	117	;'u'
  1794  00F0E0  66                 	db	102	;'f'
  1795  00F0E1  66                 	db	102	;'f'
  1796  00F0E2  65                 	db	101	;'e'
  1797  00F0E3  72                 	db	114	;'r'
  1798  00F0E4  20                 	db	32
  1799  00F0E5  31                 	db	49	;'1'
  1800  00F0E6  20                 	db	32
  1801  00F0E7  6F                 	db	111	;'o'
  1802  00F0E8  75                 	db	117	;'u'
  1803  00F0E9  74                 	db	116	;'t'
  1804  00F0EA  70                 	db	112	;'p'
  1805  00F0EB  75                 	db	117	;'u'
  1806  00F0EC  74                 	db	116	;'t'
  1807  00F0ED  20                 	db	32
  1808  00F0EE  69                 	db	105	;'i'
  1809  00F0EF  6E                 	db	110	;'n'
  1810  00F0F0  20                 	db	32
  1811  00F0F1  76                 	db	118	;'v'
  1812  00F0F2  6F                 	db	111	;'o'
  1813  00F0F3  6C                 	db	108	;'l'
  1814  00F0F4  74                 	db	116	;'t'
  1815  00F0F5  73                 	db	115	;'s'
  1816  00F0F6  0A                 	db	10
  1817  00F0F7  0D                 	db	13
  1818  00F0F8  20                 	db	32
  1819  00F0F9  20                 	db	32
  1820  00F0FA  20                 	db	32
  1821  00F0FB  4D                 	db	77	;'M'
  1822  00F0FC  65                 	db	101	;'e'
  1823  00F0FD  61                 	db	97	;'a'
  1824  00F0FE  73                 	db	115	;'s'
  1825  00F0FF  75                 	db	117	;'u'
  1826  00F100  72                 	db	114	;'r'
  1827  00F101  65                 	db	101	;'e'
  1828  00F102  20                 	db	32
  1829  00F103  41                 	db	65	;'A'
  1830  00F104  56                 	db	86	;'V'
  1831  00F105  53                 	db	83	;'S'
  1832  00F106  53                 	db	83	;'S'
  1833  00F107  3F                 	db	63	;'?'
  1834  00F108  3A                 	db	58	;':'
  1835  00F109  20                 	db	32
  1836  00F10A  52                 	db	82	;'R'
  1837  00F10B  65                 	db	101	;'e'
  1838  00F10C  74                 	db	116	;'t'
  1839  00F10D  75                 	db	117	;'u'
  1840  00F10E  72                 	db	114	;'r'
  1841  00F10F  6E                 	db	110	;'n'
  1842  00F110  73                 	db	115	;'s'
  1843  00F111  20                 	db	32
  1844  00F112  74                 	db	116	;'t'
  1845  00F113  68                 	db	104	;'h'
  1846  00F114  65                 	db	101	;'e'
  1847  00F115  20                 	db	32
  1848  00F116  6D                 	db	109	;'m'
  1849  00F117  65                 	db	101	;'e'
  1850  00F118  61                 	db	97	;'a'
  1851  00F119  73                 	db	115	;'s'
  1852  00F11A  75                 	db	117	;'u'
  1853  00F11B  72                 	db	114	;'r'
  1854  00F11C  65                 	db	101	;'e'
  1855  00F11D  64                 	db	100	;'d'
  1856  00F11E  20                 	db	32
  1857  00F11F  76                 	db	118	;'v'
  1858  00F120  61                 	db	97	;'a'
  1859  00F121  6C                 	db	108	;'l'
  1860  00F122  75                 	db	117	;'u'
  1861  00F123  65                 	db	101	;'e'
  1862  00F124  20                 	db	32
  1863  00F125  6F                 	db	111	;'o'
  1864  00F126  66                 	db	102	;'f'
  1865  00F127  20                 	db	32
  1866  00F128  41                 	db	65	;'A'
  1867  00F129  6E                 	db	110	;'n'
  1868  00F12A  61                 	db	97	;'a'
  1869  00F12B  6C                 	db	108	;'l'
  1870  00F12C  6F                 	db	111	;'o'
  1871  00F12D  67                 	db	103	;'g'
  1872  00F12E  20                 	db	32
  1873  00F12F  56                 	db	86	;'V'
  1874  00F130  53                 	db	83	;'S'
  1875  00F131  53                 	db	83	;'S'
  1876  00F132  20                 	db	32
  1877  00F133  69                 	db	105	;'i'
  1878  00F134  6E                 	db	110	;'n'
  1879  00F135  20                 	db	32
  1880  00F136  76                 	db	118	;'v'
  1881  00F137  6F                 	db	111	;'o'
  1882  00F138  6C                 	db	108	;'l'
  1883  00F139  74                 	db	116	;'t'
  1884  00F13A  73                 	db	115	;'s'
  1885  00F13B  0A                 	db	10
  1886  00F13C  0D                 	db	13
  1887  00F13D  0A                 	db	10
  1888  00F13E  0D                 	db	13
  1889  00F13F  50                 	db	80	;'P'
  1890  00F140  72                 	db	114	;'r'
  1891  00F141  69                 	db	105	;'i'
  1892  00F142  6D                 	db	109	;'m'
  1893  00F143  61                 	db	97	;'a'
  1894  00F144  72                 	db	114	;'r'
  1895  00F145  79                 	db	121	;'y'
  1896  00F146  20                 	db	32
  1897  00F147  4D                 	db	77	;'M'
  1898  00F148  65                 	db	101	;'e'
  1899  00F149  61                 	db	97	;'a'
  1900  00F14A  73                 	db	115	;'s'
  1901  00F14B  75                 	db	117	;'u'
  1902  00F14C  72                 	db	114	;'r'
  1903  00F14D  65                 	db	101	;'e'
  1904  00F14E  6D                 	db	109	;'m'
  1905  00F14F  65                 	db	101	;'e'
  1906  00F150  6E                 	db	110	;'n'
  1907  00F151  74                 	db	116	;'t'
  1908  00F152  20                 	db	32
  1909  00F153  43                 	db	67	;'C'
  1910  00F154  6F                 	db	111	;'o'
  1911  00F155  6D                 	db	109	;'m'
  1912  00F156  6D                 	db	109	;'m'
  1913  00F157  61                 	db	97	;'a'
  1914  00F158  6E                 	db	110	;'n'
  1915  00F159  64                 	db	100	;'d'
  1916  00F15A  73                 	db	115	;'s'
  1917  00F15B  3A                 	db	58	;':'
  1918  00F15C  0A                 	db	10
  1919  00F15D  0D                 	db	13
  1920  00F15E  20                 	db	32
  1921  00F15F  20                 	db	32
  1922  00F160  20                 	db	32
  1923  00F161  4D                 	db	77	;'M'
  1924  00F162  65                 	db	101	;'e'
  1925  00F163  61                 	db	97	;'a'
  1926  00F164  73                 	db	115	;'s'
  1927  00F165  75                 	db	117	;'u'
  1928  00F166  72                 	db	114	;'r'
  1929  00F167  65                 	db	101	;'e'
  1930  00F168  20                 	db	32
  1931  00F169  44                 	db	68	;'D'
  1932  00F16A  65                 	db	101	;'e'
  1933  00F16B  74                 	db	116	;'t'
  1934  00F16C  65                 	db	101	;'e'
  1935  00F16D  63                 	db	99	;'c'
  1936  00F16E  74                 	db	116	;'t'
  1937  00F16F  65                 	db	101	;'e'
  1938  00F170  64                 	db	100	;'d'
  1939  00F171  20                 	db	32
  1940  00F172  43                 	db	67	;'C'
  1941  00F173  75                 	db	117	;'u'
  1942  00F174  72                 	db	114	;'r'
  1943  00F175  72                 	db	114	;'r'
  1944  00F176  65                 	db	101	;'e'
  1945  00F177  6E                 	db	110	;'n'
  1946  00F178  74                 	db	116	;'t'
  1947  00F179  3F                 	db	63	;'?'
  1948  00F17A  3A                 	db	58	;':'
  1949  00F17B  20                 	db	32
  1950  00F17C  52                 	db	82	;'R'
  1951  00F17D  65                 	db	101	;'e'
  1952  00F17E  74                 	db	116	;'t'
  1953  00F17F  75                 	db	117	;'u'
  1954  00F180  72                 	db	114	;'r'
  1955  00F181  6E                 	db	110	;'n'
  1956  00F182  73                 	db	115	;'s'
  1957  00F183  20                 	db	32
  1958  00F184  6D                 	db	109	;'m'
  1959  00F185  65                 	db	101	;'e'
  1960  00F186  61                 	db	97	;'a'
  1961  00F187  73                 	db	115	;'s'
  1962  00F188  75                 	db	117	;'u'
  1963  00F189  72                 	db	114	;'r'
  1964  00F18A  65                 	db	101	;'e'
  1965  00F18B  64                 	db	100	;'d'
  1966  00F18C  20                 	db	32
  1967  00F18D  6F                 	db	111	;'o'
  1968  00F18E  75                 	db	117	;'u'
  1969  00F18F  74                 	db	116	;'t'
  1970  00F190  70                 	db	112	;'p'
  1971  00F191  75                 	db	117	;'u'
  1972  00F192  74                 	db	116	;'t'
  1973  00F193  20                 	db	32
  1974  00F194  63                 	db	99	;'c'
  1975  00F195  75                 	db	117	;'u'
  1976  00F196  72                 	db	114	;'r'
  1977  00F197  72                 	db	114	;'r'
  1978  00F198  65                 	db	101	;'e'
  1979  00F199  6E                 	db	110	;'n'
  1980  00F19A  74                 	db	116	;'t'
  1981  00F19B  20                 	db	32
  1982  00F19C  69                 	db	105	;'i'
  1983  00F19D  6E                 	db	110	;'n'
  1984  00F19E  20                 	db	32
  1985  00F19F  61                 	db	97	;'a'
  1986  00F1A0  6D                 	db	109	;'m'
  1987  00F1A1  70                 	db	112	;'p'
  1988  00F1A2  73                 	db	115	;'s'
  1989  00F1A3  20                 	db	32
  1990  00F1A4  61                 	db	97	;'a'
  1991  00F1A5  73                 	db	115	;'s'
  1992  00F1A6  20                 	db	32
  1993  00F1A7  73                 	db	115	;'s'
  1994  00F1A8  65                 	db	101	;'e'
  1995  00F1A9  65                 	db	101	;'e'
  1996  00F1AA  6E                 	db	110	;'n'
  1997  00F1AB  20                 	db	32
  1998  00F1AC  62                 	db	98	;'b'
  1999  00F1AD  79                 	db	121	;'y'
  2000  00F1AE  20                 	db	32
  2001  00F1AF  41                 	db	65	;'A'
  2002  00F1B0  44                 	db	68	;'D'
  2003  00F1B1  43                 	db	67	;'C'
  2004  00F1B2  0A                 	db	10
  2005  00F1B3  0D                 	db	13
  2006  00F1B4  20                 	db	32
  2007  00F1B5  20                 	db	32
  2008  00F1B6  20                 	db	32
  2009  00F1B7  4D                 	db	77	;'M'
  2010  00F1B8  65                 	db	101	;'e'
  2011  00F1B9  61                 	db	97	;'a'
  2012  00F1BA  73                 	db	115	;'s'
  2013  00F1BB  75                 	db	117	;'u'
  2014  00F1BC  72                 	db	114	;'r'
  2015  00F1BD  65                 	db	101	;'e'
  2016  00F1BE  20                 	db	32
  2017  00F1BF  52                 	db	82	;'R'
  2018  00F1C0  4D                 	db	77	;'M'
  2019  00F1C1  53                 	db	83	;'S'
  2020  00F1C2  20                 	db	32
  2021  00F1C3  43                 	db	67	;'C'
  2022  00F1C4  75                 	db	117	;'u'
  2023  00F1C5  72                 	db	114	;'r'
  2024  00F1C6  72                 	db	114	;'r'
  2025  00F1C7  65                 	db	101	;'e'
  2026  00F1C8  6E                 	db	110	;'n'
  2027  00F1C9  74                 	db	116	;'t'
  2028  00F1CA  3F                 	db	63	;'?'
  2029  00F1CB  3A                 	db	58	;':'
  2030  00F1CC  20                 	db	32
  2031  00F1CD  52                 	db	82	;'R'
  2032  00F1CE  65                 	db	101	;'e'
  2033  00F1CF  74                 	db	116	;'t'
  2034  00F1D0  75                 	db	117	;'u'
  2035  00F1D1  72                 	db	114	;'r'
  2036  00F1D2  6E                 	db	110	;'n'
  2037  00F1D3  73                 	db	115	;'s'
  2038  00F1D4  20                 	db	32
  2039  00F1D5  74                 	db	116	;'t'
  2040  00F1D6  68                 	db	104	;'h'
  2041  00F1D7  65                 	db	101	;'e'
  2042  00F1D8  20                 	db	32
  2043  00F1D9  63                 	db	99	;'c'
  2044  00F1DA  61                 	db	97	;'a'
  2045  00F1DB  6C                 	db	108	;'l'
  2046  00F1DC  63                 	db	99	;'c'
  2047  00F1DD  75                 	db	117	;'u'
  2048  00F1DE  6C                 	db	108	;'l'
  2049  00F1DF  61                 	db	97	;'a'
  2050  00F1E0  74                 	db	116	;'t'
  2051  00F1E1  65                 	db	101	;'e'
  2052  00F1E2  64                 	db	100	;'d'
  2053  00F1E3  20                 	db	32
  2054  00F1E4  52                 	db	82	;'R'
  2055  00F1E5  4D                 	db	77	;'M'
  2056  00F1E6  53                 	db	83	;'S'
  2057  00F1E7  20                 	db	32
  2058  00F1E8  6F                 	db	111	;'o'
  2059  00F1E9  75                 	db	117	;'u'
  2060  00F1EA  74                 	db	116	;'t'
  2061  00F1EB  70                 	db	112	;'p'
  2062  00F1EC  75                 	db	117	;'u'
  2063  00F1ED  74                 	db	116	;'t'
  2064  00F1EE  20                 	db	32
  2065  00F1EF  63                 	db	99	;'c'
  2066  00F1F0  75                 	db	117	;'u'
  2067  00F1F1  72                 	db	114	;'r'
  2068  00F1F2  72                 	db	114	;'r'
  2069  00F1F3  65                 	db	101	;'e'
  2070  00F1F4  6E                 	db	110	;'n'
  2071  00F1F5  74                 	db	116	;'t'
  2072  00F1F6  20                 	db	32
  2073  00F1F7  66                 	db	102	;'f'
  2074  00F1F8  72                 	db	114	;'r'
  2075  00F1F9  6F                 	db	111	;'o'
  2076  00F1FA  6D                 	db	109	;'m'
  2077  00F1FB  20                 	db	32
  2078  00F1FC  6D                 	db	109	;'m'
  2079  00F1FD  65                 	db	101	;'e'
  2080  00F1FE  61                 	db	97	;'a'
  2081  00F1FF  73                 	db	115	;'s'
  2082  00F200  75                 	db	117	;'u'
  2083  00F201  72                 	db	114	;'r'
  2084  00F202  65                 	db	101	;'e'
  2085  00F203  6D                 	db	109	;'m'
  2086  00F204  65                 	db	101	;'e'
  2087  00F205  6E                 	db	110	;'n'
  2088  00F206  74                 	db	116	;'t'
  2089  00F207  73                 	db	115	;'s'
  2090  00F208  20                 	db	32
  2091  00F209  61                 	db	97	;'a'
  2092  00F20A  6E                 	db	110	;'n'
  2093  00F20B  64                 	db	100	;'d'
  2094  00F20C  20                 	db	32
  2095  00F20D  54                 	db	84	;'T'
  2096  00F20E  52                 	db	82	;'R'
  2097  00F20F  49                 	db	73	;'I'
  2098  00F210  41                 	db	65	;'A'
  2099  00F211  43                 	db	67	;'C'
  2100  00F212  20                 	db	32
  2101  00F213  66                 	db	102	;'f'
  2102  00F214  69                 	db	105	;'i'
  2103  00F215  72                 	db	114	;'r'
  2104  00F216  69                 	db	105	;'i'
  2105  00F217  6E                 	db	110	;'n'
  2106  00F218  67                 	db	103	;'g'
  2107  00F219  20                 	db	32
  2108  00F21A  61                 	db	97	;'a'
  2109  00F21B  6E                 	db	110	;'n'
  2110  00F21C  67                 	db	103	;'g'
  2111  00F21D  6C                 	db	108	;'l'
  2112  00F21E  65                 	db	101	;'e'
  2113  00F21F  0A                 	db	10
  2114  00F220  0D                 	db	13
  2115  00F221  20                 	db	32
  2116  00F222  20                 	db	32
  2117  00F223  20                 	db	32
  2118  00F224  4D                 	db	77	;'M'
  2119  00F225  65                 	db	101	;'e'
  2120  00F226  61                 	db	97	;'a'
  2121  00F227  73                 	db	115	;'s'
  2122  00F228  75                 	db	117	;'u'
  2123  00F229  72                 	db	114	;'r'
  2124  00F22A  65                 	db	101	;'e'
  2125  00F22B  20                 	db	32
  2126  00F22C  52                 	db	82	;'R'
  2127  00F22D  4D                 	db	77	;'M'
  2128  00F22E  53                 	db	83	;'S'
  2129  00F22F  20                 	db	32
  2130  00F230  56                 	db	86	;'V'
  2131  00F231  6F                 	db	111	;'o'
  2132  00F232  6C                 	db	108	;'l'
  2133  00F233  74                 	db	116	;'t'
  2134  00F234  61                 	db	97	;'a'
  2135  00F235  67                 	db	103	;'g'
  2136  00F236  65                 	db	101	;'e'
  2137  00F237  3F                 	db	63	;'?'
  2138  00F238  3A                 	db	58	;':'
  2139  00F239  20                 	db	32
  2140  00F23A  52                 	db	82	;'R'
  2141  00F23B  65                 	db	101	;'e'
  2142  00F23C  74                 	db	116	;'t'
  2143  00F23D  75                 	db	117	;'u'
  2144  00F23E  72                 	db	114	;'r'
  2145  00F23F  6E                 	db	110	;'n'
  2146  00F240  73                 	db	115	;'s'
  2147  00F241  20                 	db	32
  2148  00F242  74                 	db	116	;'t'
  2149  00F243  68                 	db	104	;'h'
  2150  00F244  65                 	db	101	;'e'
  2151  00F245  20                 	db	32
  2152  00F246  63                 	db	99	;'c'
  2153  00F247  61                 	db	97	;'a'
  2154  00F248  6C                 	db	108	;'l'
  2155  00F249  63                 	db	99	;'c'
  2156  00F24A  75                 	db	117	;'u'
  2157  00F24B  6C                 	db	108	;'l'
  2158  00F24C  61                 	db	97	;'a'
  2159  00F24D  74                 	db	116	;'t'
  2160  00F24E  65                 	db	101	;'e'
  2161  00F24F  64                 	db	100	;'d'
  2162  00F250  20                 	db	32
  2163  00F251  52                 	db	82	;'R'
  2164  00F252  4D                 	db	77	;'M'
  2165  00F253  53                 	db	83	;'S'
  2166  00F254  20                 	db	32
  2167  00F255  6F                 	db	111	;'o'
  2168  00F256  75                 	db	117	;'u'
  2169  00F257  74                 	db	116	;'t'
  2170  00F258  70                 	db	112	;'p'
  2171  00F259  75                 	db	117	;'u'
  2172  00F25A  74                 	db	116	;'t'
  2173  00F25B  20                 	db	32
  2174  00F25C  76                 	db	118	;'v'
  2175  00F25D  6F                 	db	111	;'o'
  2176  00F25E  6C                 	db	108	;'l'
  2177  00F25F  74                 	db	116	;'t'
  2178  00F260  61                 	db	97	;'a'
  2179  00F261  67                 	db	103	;'g'
  2180  00F262  65                 	db	101	;'e'
  2181  00F263  20                 	db	32
  2182  00F264  66                 	db	102	;'f'
  2183  00F265  72                 	db	114	;'r'
  2184  00F266  6F                 	db	111	;'o'
  2185  00F267  6D                 	db	109	;'m'
  2186  00F268  20                 	db	32
  2187  00F269  54                 	db	84	;'T'
  2188  00F26A  52                 	db	82	;'R'
  2189  00F26B  49                 	db	73	;'I'
  2190  00F26C  41                 	db	65	;'A'
  2191  00F26D  43                 	db	67	;'C'
  2192  00F26E  20                 	db	32
  2193  00F26F  66                 	db	102	;'f'
  2194  00F270  69                 	db	105	;'i'
  2195  00F271  72                 	db	114	;'r'
  2196  00F272  69                 	db	105	;'i'
  2197  00F273  6E                 	db	110	;'n'
  2198  00F274  67                 	db	103	;'g'
  2199  00F275  20                 	db	32
  2200  00F276  61                 	db	97	;'a'
  2201  00F277  6E                 	db	110	;'n'
  2202  00F278  67                 	db	103	;'g'
  2203  00F279  6C                 	db	108	;'l'
  2204  00F27A  65                 	db	101	;'e'
  2205  00F27B  0A                 	db	10
  2206  00F27C  0D                 	db	13
  2207  00F27D  20                 	db	32
  2208  00F27E  20                 	db	32
  2209  00F27F  20                 	db	32
  2210  00F280  4D                 	db	77	;'M'
  2211  00F281  65                 	db	101	;'e'
  2212  00F282  61                 	db	97	;'a'
  2213  00F283  73                 	db	115	;'s'
  2214  00F284  75                 	db	117	;'u'
  2215  00F285  72                 	db	114	;'r'
  2216  00F286  65                 	db	101	;'e'
  2217  00F287  20                 	db	32
  2218  00F288  50                 	db	80	;'P'
  2219  00F289  6F                 	db	111	;'o'
  2220  00F28A  77                 	db	119	;'w'
  2221  00F28B  65                 	db	101	;'e'
  2222  00F28C  72                 	db	114	;'r'
  2223  00F28D  3F                 	db	63	;'?'
  2224  00F28E  3A                 	db	58	;':'
  2225  00F28F  20                 	db	32
  2226  00F290  52                 	db	82	;'R'
  2227  00F291  65                 	db	101	;'e'
  2228  00F292  74                 	db	116	;'t'
  2229  00F293  75                 	db	117	;'u'
  2230  00F294  72                 	db	114	;'r'
  2231  00F295  6E                 	db	110	;'n'
  2232  00F296  73                 	db	115	;'s'
  2233  00F297  20                 	db	32
  2234  00F298  74                 	db	116	;'t'
  2235  00F299  68                 	db	104	;'h'
  2236  00F29A  65                 	db	101	;'e'
  2237  00F29B  20                 	db	32
  2238  00F29C  63                 	db	99	;'c'
  2239  00F29D  61                 	db	97	;'a'
  2240  00F29E  6C                 	db	108	;'l'
  2241  00F29F  63                 	db	99	;'c'
  2242  00F2A0  75                 	db	117	;'u'
  2243  00F2A1  6C                 	db	108	;'l'
  2244  00F2A2  61                 	db	97	;'a'
  2245  00F2A3  74                 	db	116	;'t'
  2246  00F2A4  65                 	db	101	;'e'
  2247  00F2A5  64                 	db	100	;'d'
  2248  00F2A6  20                 	db	32
  2249  00F2A7  6F                 	db	111	;'o'
  2250  00F2A8  75                 	db	117	;'u'
  2251  00F2A9  74                 	db	116	;'t'
  2252  00F2AA  70                 	db	112	;'p'
  2253  00F2AB  75                 	db	117	;'u'
  2254  00F2AC  74                 	db	116	;'t'
  2255  00F2AD  20                 	db	32
  2256  00F2AE  70                 	db	112	;'p'
  2257  00F2AF  6F                 	db	111	;'o'
  2258  00F2B0  77                 	db	119	;'w'
  2259  00F2B1  65                 	db	101	;'e'
  2260  00F2B2  72                 	db	114	;'r'
  2261  00F2B3  20                 	db	32
  2262  00F2B4  69                 	db	105	;'i'
  2263  00F2B5  6E                 	db	110	;'n'
  2264  00F2B6  20                 	db	32
  2265  00F2B7  57                 	db	87	;'W'
  2266  00F2B8  61                 	db	97	;'a'
  2267  00F2B9  74                 	db	116	;'t'
  2268  00F2BA  74                 	db	116	;'t'
  2269  00F2BB  73                 	db	115	;'s'
  2270  00F2BC  0A                 	db	10
  2271  00F2BD  0D                 	db	13
  2272  00F2BE  20                 	db	32
  2273  00F2BF  20                 	db	32
  2274  00F2C0  20                 	db	32
  2275  00F2C1  4C                 	db	76	;'L'
  2276  00F2C2  6F                 	db	111	;'o'
  2277  00F2C3  61                 	db	97	;'a'
  2278  00F2C4  64                 	db	100	;'d'
  2279  00F2C5  20                 	db	32
  2280  00F2C6  4F                 	db	79	;'O'
  2281  00F2C7  6E                 	db	110	;'n'
  2282  00F2C8  20                 	db	32
  2283  00F2C9  54                 	db	84	;'T'
  2284  00F2CA  69                 	db	105	;'i'
  2285  00F2CB  6D                 	db	109	;'m'
  2286  00F2CC  65                 	db	101	;'e'
  2287  00F2CD  3F                 	db	63	;'?'
  2288  00F2CE  3A                 	db	58	;':'
  2289  00F2CF  20                 	db	32
  2290  00F2D0  52                 	db	82	;'R'
  2291  00F2D1  65                 	db	101	;'e'
  2292  00F2D2  74                 	db	116	;'t'
  2293  00F2D3  75                 	db	117	;'u'
  2294  00F2D4  72                 	db	114	;'r'
  2295  00F2D5  6E                 	db	110	;'n'
  2296  00F2D6  73                 	db	115	;'s'
  2297  00F2D7  20                 	db	32
  2298  00F2D8  6C                 	db	108	;'l'
  2299  00F2D9  6F                 	db	111	;'o'
  2300  00F2DA  61                 	db	97	;'a'
  2301  00F2DB  64                 	db	100	;'d'
  2302  00F2DC  20                 	db	32
  2303  00F2DD  6F                 	db	111	;'o'
  2304  00F2DE  6E                 	db	110	;'n'
  2305  00F2DF  20                 	db	32
  2306  00F2E0  74                 	db	116	;'t'
  2307  00F2E1  69                 	db	105	;'i'
  2308  00F2E2  6D                 	db	109	;'m'
  2309  00F2E3  65                 	db	101	;'e'
  2310  00F2E4  20                 	db	32
  2311  00F2E5  73                 	db	115	;'s'
  2312  00F2E6  69                 	db	105	;'i'
  2313  00F2E7  6E                 	db	110	;'n'
  2314  00F2E8  63                 	db	99	;'c'
  2315  00F2E9  65                 	db	101	;'e'
  2316  00F2EA  20                 	db	32
  2317  00F2EB  6C                 	db	108	;'l'
  2318  00F2EC  61                 	db	97	;'a'
  2319  00F2ED  73                 	db	115	;'s'
  2320  00F2EE  74                 	db	116	;'t'
  2321  00F2EF  20                 	db	32
  2322  00F2F0  64                 	db	100	;'d'
  2323  00F2F1  65                 	db	101	;'e'
  2324  00F2F2  76                 	db	118	;'v'
  2325  00F2F3  69                 	db	105	;'i'
  2326  00F2F4  63                 	db	99	;'c'
  2327  00F2F5  65                 	db	101	;'e'
  2328  00F2F6  20                 	db	32
  2329  00F2F7  72                 	db	114	;'r'
  2330  00F2F8  65                 	db	101	;'e'
  2331  00F2F9  73                 	db	115	;'s'
  2332  00F2FA  65                 	db	101	;'e'
  2333  00F2FB  74                 	db	116	;'t'
  2334  00F2FC  20                 	db	32
  2335  00F2FD  69                 	db	105	;'i'
  2336  00F2FE  6E                 	db	110	;'n'
  2337  00F2FF  20                 	db	32
  2338  00F300  73                 	db	115	;'s'
  2339  00F301  65                 	db	101	;'e'
  2340  00F302  63                 	db	99	;'c'
  2341  00F303  6F                 	db	111	;'o'
  2342  00F304  6E                 	db	110	;'n'
  2343  00F305  64                 	db	100	;'d'
  2344  00F306  73                 	db	115	;'s'
  2345  00F307  0A                 	db	10
  2346  00F308  0D                 	db	13
  2347  00F309  0A                 	db	10
  2348  00F30A  0D                 	db	13
  2349  00F30B  4F                 	db	79	;'O'
  2350  00F30C  75                 	db	117	;'u'
  2351  00F30D  74                 	db	116	;'t'
  2352  00F30E  70                 	db	112	;'p'
  2353  00F30F  75                 	db	117	;'u'
  2354  00F310  74                 	db	116	;'t'
  2355  00F311  20                 	db	32
  2356  00F312  43                 	db	67	;'C'
  2357  00F313  6F                 	db	111	;'o'
  2358  00F314  6E                 	db	110	;'n'
  2359  00F315  74                 	db	116	;'t'
  2360  00F316  72                 	db	114	;'r'
  2361  00F317  6F                 	db	111	;'o'
  2362  00F318  6C                 	db	108	;'l'
  2363  00F319  20                 	db	32
  2364  00F31A  43                 	db	67	;'C'
  2365  00F31B  6F                 	db	111	;'o'
  2366  00F31C  6D                 	db	109	;'m'
  2367  00F31D  6D                 	db	109	;'m'
  2368  00F31E  61                 	db	97	;'a'
  2369  00F31F  6E                 	db	110	;'n'
  2370  00F320  64                 	db	100	;'d'
  2371  00F321  73                 	db	115	;'s'
  2372  00F322  3A                 	db	58	;':'
  2373  00F323  0A                 	db	10
  2374  00F324  0D                 	db	13
  2375  00F325  20                 	db	32
  2376  00F326  20                 	db	32
  2377  00F327  20                 	db	32
  2378  00F328  45                 	db	69	;'E'
  2379  00F329  6E                 	db	110	;'n'
  2380  00F32A  61                 	db	97	;'a'
  2381  00F32B  62                 	db	98	;'b'
  2382  00F32C  6C                 	db	108	;'l'
  2383  00F32D  65                 	db	101	;'e'
  2384  00F32E  20                 	db	32
  2385  00F32F  44                 	db	68	;'D'
  2386  00F330  69                 	db	105	;'i'
  2387  00F331  6D                 	db	109	;'m'
  2388  00F332  6D                 	db	109	;'m'
  2389  00F333  69                 	db	105	;'i'
  2390  00F334  6E                 	db	110	;'n'
  2391  00F335  67                 	db	103	;'g'
  2392  00F336  3A                 	db	58	;':'
  2393  00F337  20                 	db	32
  2394  00F338  45                 	db	69	;'E'
  2395  00F339  6E                 	db	110	;'n'
  2396  00F33A  61                 	db	97	;'a'
  2397  00F33B  62                 	db	98	;'b'
  2398  00F33C  6C                 	db	108	;'l'
  2399  00F33D  65                 	db	101	;'e'
  2400  00F33E  20                 	db	32
  2401  00F33F  54                 	db	84	;'T'
  2402  00F340  52                 	db	82	;'R'
  2403  00F341  49                 	db	73	;'I'
  2404  00F342  41                 	db	65	;'A'
  2405  00F343  43                 	db	67	;'C'
  2406  00F344  20                 	db	32
  2407  00F345  6F                 	db	111	;'o'
  2408  00F346  75                 	db	117	;'u'
  2409  00F347  74                 	db	116	;'t'
  2410  00F348  70                 	db	112	;'p'
  2411  00F349  75                 	db	117	;'u'
  2412  00F34A  74                 	db	116	;'t'
  2413  00F34B  20                 	db	32
  2414  00F34C  64                 	db	100	;'d'
  2415  00F34D  69                 	db	105	;'i'
  2416  00F34E  6D                 	db	109	;'m'
  2417  00F34F  6D                 	db	109	;'m'
  2418  00F350  69                 	db	105	;'i'
  2419  00F351  6E                 	db	110	;'n'
  2420  00F352  67                 	db	103	;'g'
  2421  00F353  0A                 	db	10
  2422  00F354  0D                 	db	13
  2423  00F355  20                 	db	32
  2424  00F356  20                 	db	32
  2425  00F357  20                 	db	32
  2426  00F358  44                 	db	68	;'D'
  2427  00F359  69                 	db	105	;'i'
  2428  00F35A  73                 	db	115	;'s'
  2429  00F35B  61                 	db	97	;'a'
  2430  00F35C  62                 	db	98	;'b'
  2431  00F35D  6C                 	db	108	;'l'
  2432  00F35E  65                 	db	101	;'e'
  2433  00F35F  20                 	db	32
  2434  00F360  44                 	db	68	;'D'
  2435  00F361  69                 	db	105	;'i'
  2436  00F362  6D                 	db	109	;'m'
  2437  00F363  6D                 	db	109	;'m'
  2438  00F364  69                 	db	105	;'i'
  2439  00F365  6E                 	db	110	;'n'
  2440  00F366  67                 	db	103	;'g'
  2441  00F367  3A                 	db	58	;':'
  2442  00F368  20                 	db	32
  2443  00F369  44                 	db	68	;'D'
  2444  00F36A  69                 	db	105	;'i'
  2445  00F36B  73                 	db	115	;'s'
  2446  00F36C  61                 	db	97	;'a'
  2447  00F36D  62                 	db	98	;'b'
  2448  00F36E  6C                 	db	108	;'l'
  2449  00F36F  65                 	db	101	;'e'
  2450  00F370  20                 	db	32
  2451  00F371  54                 	db	84	;'T'
  2452  00F372  52                 	db	82	;'R'
  2453  00F373  49                 	db	73	;'I'
  2454  00F374  41                 	db	65	;'A'
  2455  00F375  43                 	db	67	;'C'
  2456  00F376  20                 	db	32
  2457  00F377  6F                 	db	111	;'o'
  2458  00F378  75                 	db	117	;'u'
  2459  00F379  74                 	db	116	;'t'
  2460  00F37A  70                 	db	112	;'p'
  2461  00F37B  75                 	db	117	;'u'
  2462  00F37C  74                 	db	116	;'t'
  2463  00F37D  20                 	db	32
  2464  00F37E  64                 	db	100	;'d'
  2465  00F37F  69                 	db	105	;'i'
  2466  00F380  6D                 	db	109	;'m'
  2467  00F381  6D                 	db	109	;'m'
  2468  00F382  69                 	db	105	;'i'
  2469  00F383  6E                 	db	110	;'n'
  2470  00F384  67                 	db	103	;'g'
  2471  00F385  0A                 	db	10
  2472  00F386  0D                 	db	13
  2473  00F387  20                 	db	32
  2474  00F388  20                 	db	32
  2475  00F389  20                 	db	32
  2476  00F38A  45                 	db	69	;'E'
  2477  00F38B  6E                 	db	110	;'n'
  2478  00F38C  61                 	db	97	;'a'
  2479  00F38D  62                 	db	98	;'b'
  2480  00F38E  6C                 	db	108	;'l'
  2481  00F38F  65                 	db	101	;'e'
  2482  00F390  20                 	db	32
  2483  00F391  4C                 	db	76	;'L'
  2484  00F392  6F                 	db	111	;'o'
  2485  00F393  61                 	db	97	;'a'
  2486  00F394  64                 	db	100	;'d'
  2487  00F395  3A                 	db	58	;':'
  2488  00F396  20                 	db	32
  2489  00F397  45                 	db	69	;'E'
  2490  00F398  6E                 	db	110	;'n'
  2491  00F399  61                 	db	97	;'a'
  2492  00F39A  62                 	db	98	;'b'
  2493  00F39B  6C                 	db	108	;'l'
  2494  00F39C  65                 	db	101	;'e'
  2495  00F39D  73                 	db	115	;'s'
  2496  00F39E  20                 	db	32
  2497  00F39F  74                 	db	116	;'t'
  2498  00F3A0  68                 	db	104	;'h'
  2499  00F3A1  65                 	db	101	;'e'
  2500  00F3A2  20                 	db	32
  2501  00F3A3  6F                 	db	111	;'o'
  2502  00F3A4  75                 	db	117	;'u'
  2503  00F3A5  74                 	db	116	;'t'
  2504  00F3A6  70                 	db	112	;'p'
  2505  00F3A7  75                 	db	117	;'u'
  2506  00F3A8  74                 	db	116	;'t'
  2507  00F3A9  20                 	db	32
  2508  00F3AA  54                 	db	84	;'T'
  2509  00F3AB  52                 	db	82	;'R'
  2510  00F3AC  49                 	db	73	;'I'
  2511  00F3AD  41                 	db	65	;'A'
  2512  00F3AE  43                 	db	67	;'C'
  2513  00F3AF  20                 	db	32
  2514  00F3B0  77                 	db	119	;'w'
  2515  00F3B1  69                 	db	105	;'i'
  2516  00F3B2  74                 	db	116	;'t'
  2517  00F3B3  68                 	db	104	;'h'
  2518  00F3B4  20                 	db	32
  2519  00F3B5  64                 	db	100	;'d'
  2520  00F3B6  69                 	db	105	;'i'
  2521  00F3B7  6D                 	db	109	;'m'
  2522  00F3B8  6D                 	db	109	;'m'
  2523  00F3B9  69                 	db	105	;'i'
  2524  00F3BA  6E                 	db	110	;'n'
  2525  00F3BB  67                 	db	103	;'g'
  2526  00F3BC  20                 	db	32
  2527  00F3BD  64                 	db	100	;'d'
  2528  00F3BE  69                 	db	105	;'i'
  2529  00F3BF  73                 	db	115	;'s'
  2530  00F3C0  61                 	db	97	;'a'
  2531  00F3C1  62                 	db	98	;'b'
  2532  00F3C2  6C                 	db	108	;'l'
  2533  00F3C3  65                 	db	101	;'e'
  2534  00F3C4  64                 	db	100	;'d'
  2535  00F3C5  0A                 	db	10
  2536  00F3C6  0D                 	db	13
  2537  00F3C7  20                 	db	32
  2538  00F3C8  20                 	db	32
  2539  00F3C9  20                 	db	32
  2540  00F3CA  44                 	db	68	;'D'
  2541  00F3CB  69                 	db	105	;'i'
  2542  00F3CC  73                 	db	115	;'s'
  2543  00F3CD  61                 	db	97	;'a'
  2544  00F3CE  62                 	db	98	;'b'
  2545  00F3CF  6C                 	db	108	;'l'
  2546  00F3D0  65                 	db	101	;'e'
  2547  00F3D1  20                 	db	32
  2548  00F3D2  4C                 	db	76	;'L'
  2549  00F3D3  6F                 	db	111	;'o'
  2550  00F3D4  61                 	db	97	;'a'
  2551  00F3D5  64                 	db	100	;'d'
  2552  00F3D6  3A                 	db	58	;':'
  2553  00F3D7  20                 	db	32
  2554  00F3D8  44                 	db	68	;'D'
  2555  00F3D9  69                 	db	105	;'i'
  2556  00F3DA  73                 	db	115	;'s'
  2557  00F3DB  61                 	db	97	;'a'
  2558  00F3DC  62                 	db	98	;'b'
  2559  00F3DD  6C                 	db	108	;'l'
  2560  00F3DE  65                 	db	101	;'e'
  2561  00F3DF  73                 	db	115	;'s'
  2562  00F3E0  20                 	db	32
  2563  00F3E1  74                 	db	116	;'t'
  2564  00F3E2  68                 	db	104	;'h'
  2565  00F3E3  65                 	db	101	;'e'
  2566  00F3E4  20                 	db	32
  2567  00F3E5  6F                 	db	111	;'o'
  2568  00F3E6  75                 	db	117	;'u'
  2569  00F3E7  74                 	db	116	;'t'
  2570  00F3E8  70                 	db	112	;'p'
  2571  00F3E9  75                 	db	117	;'u'
  2572  00F3EA  74                 	db	116	;'t'
  2573  00F3EB  20                 	db	32
  2574  00F3EC  54                 	db	84	;'T'
  2575  00F3ED  52                 	db	82	;'R'
  2576  00F3EE  49                 	db	73	;'I'
  2577  00F3EF  41                 	db	65	;'A'
  2578  00F3F0  43                 	db	67	;'C'
  2579  00F3F1  20                 	db	32
  2580  00F3F2  63                 	db	99	;'c'
  2581  00F3F3  6F                 	db	111	;'o'
  2582  00F3F4  6D                 	db	109	;'m'
  2583  00F3F5  70                 	db	112	;'p'
  2584  00F3F6  6C                 	db	108	;'l'
  2585  00F3F7  65                 	db	101	;'e'
  2586  00F3F8  74                 	db	116	;'t'
  2587  00F3F9  65                 	db	101	;'e'
  2588  00F3FA  6C                 	db	108	;'l'
  2589  00F3FB  79                 	db	121	;'y'
  2590  00F3FC  0A                 	db	10
  2591  00F3FD  0D                 	db	13
  2592  00F3FE  20                 	db	32
  2593  00F3FF  20                 	db	32
  2594  00F400  20                 	db	32
  2595  00F401  53                 	db	83	;'S'
  2596  00F402  65                 	db	101	;'e'
  2597  00F403  74                 	db	116	;'t'
  2598  00F404  20                 	db	32
  2599  00F405  44                 	db	68	;'D'
  2600  00F406  69                 	db	105	;'i'
  2601  00F407  6D                 	db	109	;'m'
  2602  00F408  6D                 	db	109	;'m'
  2603  00F409  69                 	db	105	;'i'
  2604  00F40A  6E                 	db	110	;'n'
  2605  00F40B  67                 	db	103	;'g'
  2606  00F40C  20                 	db	32
  2607  00F40D  50                 	db	80	;'P'
  2608  00F40E  65                 	db	101	;'e'
  2609  00F40F  72                 	db	114	;'r'
  2610  00F410  63                 	db	99	;'c'
  2611  00F411  65                 	db	101	;'e'
  2612  00F412  6E                 	db	110	;'n'
  2613  00F413  74                 	db	116	;'t'
  2614  00F414  61                 	db	97	;'a'
  2615  00F415  67                 	db	103	;'g'
  2616  00F416  65                 	db	101	;'e'
  2617  00F417  3A                 	db	58	;':'
  2618  00F418  20                 	db	32
  2619  00F419  3C                 	db	60	;'<'
  2620  00F41A  78                 	db	120	;'x'
  2621  00F41B  3E                 	db	62	;'>'
  2622  00F41C  3A                 	db	58	;':'
  2623  00F41D  20                 	db	32
  2624  00F41E  53                 	db	83	;'S'
  2625  00F41F  65                 	db	101	;'e'
  2626  00F420  74                 	db	116	;'t'
  2627  00F421  73                 	db	115	;'s'
  2628  00F422  20                 	db	32
  2629  00F423  74                 	db	116	;'t'
  2630  00F424  68                 	db	104	;'h'
  2631  00F425  65                 	db	101	;'e'
  2632  00F426  20                 	db	32
  2633  00F427  6F                 	db	111	;'o'
  2634  00F428  75                 	db	117	;'u'
  2635  00F429  74                 	db	116	;'t'
  2636  00F42A  70                 	db	112	;'p'
  2637  00F42B  75                 	db	117	;'u'
  2638  00F42C  74                 	db	116	;'t'
  2639  00F42D  20                 	db	32
  2640  00F42E  64                 	db	100	;'d'
  2641  00F42F  69                 	db	105	;'i'
  2642  00F430  6D                 	db	109	;'m'
  2643  00F431  6D                 	db	109	;'m'
  2644  00F432  69                 	db	105	;'i'
  2645  00F433  6E                 	db	110	;'n'
  2646  00F434  67                 	db	103	;'g'
  2647  00F435  20                 	db	32
  2648  00F436  70                 	db	112	;'p'
  2649  00F437  65                 	db	101	;'e'
  2650  00F438  72                 	db	114	;'r'
  2651  00F439  63                 	db	99	;'c'
  2652  00F43A  65                 	db	101	;'e'
  2653  00F43B  6E                 	db	110	;'n'
  2654  00F43C  74                 	db	116	;'t'
  2655  00F43D  61                 	db	97	;'a'
  2656  00F43E  67                 	db	103	;'g'
  2657  00F43F  65                 	db	101	;'e'
  2658  00F440  20                 	db	32
  2659  00F441  61                 	db	97	;'a'
  2660  00F442  73                 	db	115	;'s'
  2661  00F443  20                 	db	32
  2662  00F444  78                 	db	120	;'x'
  2663  00F445  20                 	db	32
  2664  00F446  70                 	db	112	;'p'
  2665  00F447  65                 	db	101	;'e'
  2666  00F448  72                 	db	114	;'r'
  2667  00F449  63                 	db	99	;'c'
  2668  00F44A  65                 	db	101	;'e'
  2669  00F44B  6E                 	db	110	;'n'
  2670  00F44C  74                 	db	116	;'t'
  2671  00F44D  0A                 	db	10
  2672  00F44E  0D                 	db	13
  2673  00F44F  00                 	db	0
  2674  00F450  20                 	db	32
  2675  00F451  20                 	db	32
  2676  00F452  20                 	db	32
  2677  00F453  20                 	db	32
  2678  00F454  42                 	db	66	;'B'
  2679  00F455  6F                 	db	111	;'o'
  2680  00F456  6F                 	db	111	;'o'
  2681  00F457  74                 	db	116	;'t'
  2682  00F458  20                 	db	32
  2683  00F459  63                 	db	99	;'c'
  2684  00F45A  6F                 	db	111	;'o'
  2685  00F45B  6D                 	db	109	;'m'
  2686  00F45C  70                 	db	112	;'p'
  2687  00F45D  6C                 	db	108	;'l'
  2688  00F45E  65                 	db	101	;'e'
  2689  00F45F  74                 	db	116	;'t'
  2690  00F460  65                 	db	101	;'e'
  2691  00F461  0A                 	db	10
  2692  00F462  0D                 	db	13
  2693  00F463  20                 	db	32
  2694  00F464  20                 	db	32
  2695  00F465  20                 	db	32
  2696  00F466  20                 	db	32
  2697  00F467  50                 	db	80	;'P'
  2698  00F468  49                 	db	73	;'I'
  2699  00F469  43                 	db	67	;'C'
  2700  00F46A  31                 	db	49	;'1'
  2701  00F46B  38                 	db	56	;'8'
  2702  00F46C  46                 	db	70	;'F'
  2703  00F46D  36                 	db	54	;'6'
  2704  00F46E  37                 	db	55	;'7'
  2705  00F46F  4B                 	db	75	;'K'
  2706  00F470  34                 	db	52	;'4'
  2707  00F471  30                 	db	48	;'0'
  2708  00F472  20                 	db	32
  2709  00F473  6D                 	db	109	;'m'
  2710  00F474  54                 	db	84	;'T'
  2711  00F475  6F                 	db	111	;'o'
  2712  00F476  75                 	db	117	;'u'
  2713  00F477  63                 	db	99	;'c'
  2714  00F478  68                 	db	104	;'h'
  2715  00F479  20                 	db	32
  2716  00F47A  54                 	db	84	;'T'
  2717  00F47B  65                 	db	101	;'e'
  2718  00F47C  73                 	db	115	;'s'
  2719  00F47D  74                 	db	116	;'t'
  2720  00F47E  20                 	db	32
  2721  00F47F  42                 	db	66	;'B'
  2722  00F480  6F                 	db	111	;'o'
  2723  00F481  61                 	db	97	;'a'
  2724  00F482  72                 	db	114	;'r'
  2725  00F483  64                 	db	100	;'d'
  2726  00F484  0A                 	db	10
  2727  00F485  0D                 	db	13
  2728  00F486  20                 	db	32
  2729  00F487  20                 	db	32
  2730  00F488  20                 	db	32
  2731  00F489  20                 	db	32
  2732  00F48A  45                 	db	69	;'E'
  2733  00F48B  76                 	db	118	;'v'
  2734  00F48C  61                 	db	97	;'a'
  2735  00F48D  6C                 	db	108	;'l'
  2736  00F48E  75                 	db	117	;'u'
  2737  00F48F  61                 	db	97	;'a'
  2738  00F490  74                 	db	116	;'t'
  2739  00F491  65                 	db	101	;'e'
  2740  00F492  73                 	db	115	;'s'
  2741  00F493  20                 	db	32
  2742  00F494  74                 	db	116	;'t'
  2743  00F495  68                 	db	104	;'h'
  2744  00F496  65                 	db	101	;'e'
  2745  00F497  20                 	db	32
  2746  00F498  6D                 	db	109	;'m'
  2747  00F499  54                 	db	84	;'T'
  2748  00F49A  6F                 	db	111	;'o'
  2749  00F49B  75                 	db	117	;'u'
  2750  00F49C  63                 	db	99	;'c'
  2751  00F49D  68                 	db	104	;'h'
  2752  00F49E  20                 	db	32
  2753  00F49F  63                 	db	99	;'c'
  2754  00F4A0  61                 	db	97	;'a'
  2755  00F4A1  70                 	db	112	;'p'
  2756  00F4A2  61                 	db	97	;'a'
  2757  00F4A3  63                 	db	99	;'c'
  2758  00F4A4  69                 	db	105	;'i'
  2759  00F4A5  74                 	db	116	;'t'
  2760  00F4A6  69                 	db	105	;'i'
  2761  00F4A7  76                 	db	118	;'v'
  2762  00F4A8  65                 	db	101	;'e'
  2763  00F4A9  20                 	db	32
  2764  00F4AA  74                 	db	116	;'t'
  2765  00F4AB  6F                 	db	111	;'o'
  2766  00F4AC  75                 	db	117	;'u'
  2767  00F4AD  63                 	db	99	;'c'
  2768  00F4AE  68                 	db	104	;'h'
  2769  00F4AF  20                 	db	32
  2770  00F4B0  6C                 	db	108	;'l'
  2771  00F4B1  69                 	db	105	;'i'
  2772  00F4B2  62                 	db	98	;'b'
  2773  00F4B3  72                 	db	114	;'r'
  2774  00F4B4  61                 	db	97	;'a'
  2775  00F4B5  72                 	db	114	;'r'
  2776  00F4B6  79                 	db	121	;'y'
  2777  00F4B7  20                 	db	32
  2778  00F4B8  64                 	db	100	;'d'
  2779  00F4B9  69                 	db	105	;'i'
  2780  00F4BA  73                 	db	115	;'s'
  2781  00F4BB  74                 	db	116	;'t'
  2782  00F4BC  72                 	db	114	;'r'
  2783  00F4BD  69                 	db	105	;'i'
  2784  00F4BE  62                 	db	98	;'b'
  2785  00F4BF  75                 	db	117	;'u'
  2786  00F4C0  74                 	db	116	;'t'
  2787  00F4C1  65                 	db	101	;'e'
  2788  00F4C2  64                 	db	100	;'d'
  2789  00F4C3  20                 	db	32
  2790  00F4C4  62                 	db	98	;'b'
  2791  00F4C5  79                 	db	121	;'y'
  2792  00F4C6  20                 	db	32
  2793  00F4C7  4D                 	db	77	;'M'
  2794  00F4C8  69                 	db	105	;'i'
  2795  00F4C9  63                 	db	99	;'c'
  2796  00F4CA  72                 	db	114	;'r'
  2797  00F4CB  6F                 	db	111	;'o'
  2798  00F4CC  63                 	db	99	;'c'
  2799  00F4CD  68                 	db	104	;'h'
  2800  00F4CE  69                 	db	105	;'i'
  2801  00F4CF  70                 	db	112	;'p'
  2802  00F4D0  0A                 	db	10
  2803  00F4D1  0D                 	db	13
  2804  00F4D2  20                 	db	32
  2805  00F4D3  20                 	db	32
  2806  00F4D4  20                 	db	32
  2807  00F4D5  20                 	db	32
  2808  00F4D6  53                 	db	83	;'S'
  2809  00F4D7  65                 	db	101	;'e'
  2810  00F4D8  74                 	db	116	;'t'
  2811  00F4D9  73                 	db	115	;'s'
  2812  00F4DA  20                 	db	32
  2813  00F4DB  74                 	db	116	;'t'
  2814  00F4DC  68                 	db	104	;'h'
  2815  00F4DD  65                 	db	101	;'e'
  2816  00F4DE  20                 	db	32
  2817  00F4DF  73                 	db	115	;'s'
  2818  00F4E0  74                 	db	116	;'t'
  2819  00F4E1  61                 	db	97	;'a'
  2820  00F4E2  74                 	db	116	;'t'
  2821  00F4E3  65                 	db	101	;'e'
  2822  00F4E4  20                 	db	32
  2823  00F4E5  6F                 	db	111	;'o'
  2824  00F4E6  66                 	db	102	;'f'
  2825  00F4E7  20                 	db	32
  2826  00F4E8  66                 	db	102	;'f'
  2827  00F4E9  69                 	db	105	;'i'
  2828  00F4EA  76                 	db	118	;'v'
  2829  00F4EB  65                 	db	101	;'e'
  2830  00F4EC  20                 	db	32
  2831  00F4ED  4C                 	db	76	;'L'
  2832  00F4EE  45                 	db	69	;'E'
  2833  00F4EF  44                 	db	68	;'D'
  2834  00F4F0  73                 	db	115	;'s'
  2835  00F4F1  20                 	db	32
  2836  00F4F2  62                 	db	98	;'b'
  2837  00F4F3  61                 	db	97	;'a'
  2838  00F4F4  73                 	db	115	;'s'
  2839  00F4F5  65                 	db	101	;'e'
  2840  00F4F6  64                 	db	100	;'d'
  2841  00F4F7  20                 	db	32
  2842  00F4F8  6F                 	db	111	;'o'
  2843  00F4F9  6E                 	db	110	;'n'
  2844  00F4FA  20                 	db	32
  2845  00F4FB  6D                 	db	109	;'m'
  2846  00F4FC  54                 	db	84	;'T'
  2847  00F4FD  6F                 	db	111	;'o'
  2848  00F4FE  75                 	db	117	;'u'
  2849  00F4FF  63                 	db	99	;'c'
  2850  00F500  68                 	db	104	;'h'
  2851  00F501  20                 	db	32
  2852  00F502  63                 	db	99	;'c'
  2853  00F503  61                 	db	97	;'a'
  2854  00F504  70                 	db	112	;'p'
  2855  00F505  61                 	db	97	;'a'
  2856  00F506  63                 	db	99	;'c'
  2857  00F507  69                 	db	105	;'i'
  2858  00F508  74                 	db	116	;'t'
  2859  00F509  69                 	db	105	;'i'
  2860  00F50A  76                 	db	118	;'v'
  2861  00F50B  65                 	db	101	;'e'
  2862  00F50C  20                 	db	32
  2863  00F50D  70                 	db	112	;'p'
  2864  00F50E  75                 	db	117	;'u'
  2865  00F50F  73                 	db	115	;'s'
  2866  00F510  68                 	db	104	;'h'
  2867  00F511  62                 	db	98	;'b'
  2868  00F512  75                 	db	117	;'u'
  2869  00F513  74                 	db	116	;'t'
  2870  00F514  74                 	db	116	;'t'
  2871  00F515  6F                 	db	111	;'o'
  2872  00F516  6E                 	db	110	;'n'
  2873  00F517  73                 	db	115	;'s'
  2874  00F518  0A                 	db	10
  2875  00F519  0D                 	db	13
  2876  00F51A  20                 	db	32
  2877  00F51B  20                 	db	32
  2878  00F51C  20                 	db	32
  2879  00F51D  20                 	db	32
  2880  00F51E  42                 	db	66	;'B'
  2881  00F51F  61                 	db	97	;'a'
  2882  00F520  75                 	db	117	;'u'
  2883  00F521  64                 	db	100	;'d'
  2884  00F522  20                 	db	32
  2885  00F523  72                 	db	114	;'r'
  2886  00F524  61                 	db	97	;'a'
  2887  00F525  74                 	db	116	;'t'
  2888  00F526  65                 	db	101	;'e'
  2889  00F527  3A                 	db	58	;':'
  2890  00F528  20                 	db	32
  2891  00F529  31                 	db	49	;'1'
  2892  00F52A  31                 	db	49	;'1'
  2893  00F52B  35                 	db	53	;'5'
  2894  00F52C  32                 	db	50	;'2'
  2895  00F52D  30                 	db	48	;'0'
  2896  00F52E  30                 	db	48	;'0'
  2897  00F52F  20                 	db	32
  2898  00F530  62                 	db	98	;'b'
  2899  00F531  70                 	db	112	;'p'
  2900  00F532  73                 	db	115	;'s'
  2901  00F533  0A                 	db	10
  2902  00F534  0D                 	db	13
  2903  00F535  20                 	db	32
  2904  00F536  20                 	db	32
  2905  00F537  20                 	db	32
  2906  00F538  20                 	db	32
  2907  00F539  4E                 	db	78	;'N'
  2908  00F53A  6F                 	db	111	;'o'
  2909  00F53B  20                 	db	32
  2910  00F53C  70                 	db	112	;'p'
  2911  00F53D  61                 	db	97	;'a'
  2912  00F53E  72                 	db	114	;'r'
  2913  00F53F  69                 	db	105	;'i'
  2914  00F540  74                 	db	116	;'t'
  2915  00F541  79                 	db	121	;'y'
  2916  00F542  2C                 	db	44
  2917  00F543  20                 	db	32
  2918  00F544  38                 	db	56	;'8'
  2919  00F545  20                 	db	32
  2920  00F546  62                 	db	98	;'b'
  2921  00F547  69                 	db	105	;'i'
  2922  00F548  74                 	db	116	;'t'
  2923  00F549  73                 	db	115	;'s'
  2924  00F54A  2C                 	db	44
  2925  00F54B  20                 	db	32
  2926  00F54C  6E                 	db	110	;'n'
  2927  00F54D  6F                 	db	111	;'o'
  2928  00F54E  20                 	db	32
  2929  00F54F  66                 	db	102	;'f'
  2930  00F550  6C                 	db	108	;'l'
  2931  00F551  6F                 	db	111	;'o'
  2932  00F552  77                 	db	119	;'w'
  2933  00F553  20                 	db	32
  2934  00F554  63                 	db	99	;'c'
  2935  00F555  6F                 	db	111	;'o'
  2936  00F556  6E                 	db	110	;'n'
  2937  00F557  74                 	db	116	;'t'
  2938  00F558  72                 	db	114	;'r'
  2939  00F559  6F                 	db	111	;'o'
  2940  00F55A  6C                 	db	108	;'l'
  2941  00F55B  2C                 	db	44
  2942  00F55C  20                 	db	32
  2943  00F55D  31                 	db	49	;'1'
  2944  00F55E  20                 	db	32
  2945  00F55F  73                 	db	115	;'s'
  2946  00F560  74                 	db	116	;'t'
  2947  00F561  6F                 	db	111	;'o'
  2948  00F562  70                 	db	112	;'p'
  2949  00F563  20                 	db	32
  2950  00F564  62                 	db	98	;'b'
  2951  00F565  69                 	db	105	;'i'
  2952  00F566  74                 	db	116	;'t'
  2953  00F567  0A                 	db	10
  2954  00F568  0D                 	db	13
  2955  00F569  20                 	db	32
  2956  00F56A  20                 	db	32
  2957  00F56B  20                 	db	32
  2958  00F56C  20                 	db	32
  2959  00F56D  43                 	db	67	;'C'
  2960  00F56E  6F                 	db	111	;'o'
  2961  00F56F  6D                 	db	109	;'m'
  2962  00F570  6D                 	db	109	;'m'
  2963  00F571  61                 	db	97	;'a'
  2964  00F572  6E                 	db	110	;'n'
  2965  00F573  64                 	db	100	;'d'
  2966  00F574  73                 	db	115	;'s'
  2967  00F575  20                 	db	32
  2968  00F576  61                 	db	97	;'a'
  2969  00F577  72                 	db	114	;'r'
  2970  00F578  65                 	db	101	;'e'
  2971  00F579  20                 	db	32
  2972  00F57A  63                 	db	99	;'c'
  2973  00F57B  61                 	db	97	;'a'
  2974  00F57C  73                 	db	115	;'s'
  2975  00F57D  65                 	db	101	;'e'
  2976  00F57E  20                 	db	32
  2977  00F57F  73                 	db	115	;'s'
  2978  00F580  65                 	db	101	;'e'
  2979  00F581  6E                 	db	110	;'n'
  2980  00F582  73                 	db	115	;'s'
  2981  00F583  69                 	db	105	;'i'
  2982  00F584  74                 	db	116	;'t'
  2983  00F585  69                 	db	105	;'i'
  2984  00F586  76                 	db	118	;'v'
  2985  00F587  65                 	db	101	;'e'
  2986  00F588  0A                 	db	10
  2987  00F589  0D                 	db	13
  2988  00F58A  20                 	db	32
  2989  00F58B  20                 	db	32
  2990  00F58C  20                 	db	32
  2991  00F58D  20                 	db	32
  2992  00F58E  45                 	db	69	;'E'
  2993  00F58F  6E                 	db	110	;'n'
  2994  00F590  74                 	db	116	;'t'
  2995  00F591  65                 	db	101	;'e'
  2996  00F592  72                 	db	114	;'r'
  2997  00F593  20                 	db	32
  2998  00F594  61                 	db	97	;'a'
  2999  00F595  20                 	db	32
  3000  00F596  63                 	db	99	;'c'
  3001  00F597  6F                 	db	111	;'o'
  3002  00F598  6D                 	db	109	;'m'
  3003  00F599  6D                 	db	109	;'m'
  3004  00F59A  61                 	db	97	;'a'
  3005  00F59B  6E                 	db	110	;'n'
  3006  00F59C  64                 	db	100	;'d'
  3007  00F59D  2C                 	db	44
  3008  00F59E  20                 	db	32
  3009  00F59F  6F                 	db	111	;'o'
  3010  00F5A0  72                 	db	114	;'r'
  3011  00F5A1  20                 	db	32
  3012  00F5A2  65                 	db	101	;'e'
  3013  00F5A3  6E                 	db	110	;'n'
  3014  00F5A4  74                 	db	116	;'t'
  3015  00F5A5  65                 	db	101	;'e'
  3016  00F5A6  72                 	db	114	;'r'
  3017  00F5A7  20                 	db	32
  3018  00F5A8  48                 	db	72	;'H'
  3019  00F5A9  65                 	db	101	;'e'
  3020  00F5AA  6C                 	db	108	;'l'
  3021  00F5AB  70                 	db	112	;'p'
  3022  00F5AC  20                 	db	32
  3023  00F5AD  66                 	db	102	;'f'
  3024  00F5AE  6F                 	db	111	;'o'
  3025  00F5AF  72                 	db	114	;'r'
  3026  00F5B0  20                 	db	32
  3027  00F5B1  6C                 	db	108	;'l'
  3028  00F5B2  69                 	db	105	;'i'
  3029  00F5B3  73                 	db	115	;'s'
  3030  00F5B4  74                 	db	116	;'t'
  3031  00F5B5  20                 	db	32
  3032  00F5B6  6F                 	db	111	;'o'
  3033  00F5B7  66                 	db	102	;'f'
  3034  00F5B8  20                 	db	32
  3035  00F5B9  63                 	db	99	;'c'
  3036  00F5BA  6F                 	db	111	;'o'
  3037  00F5BB  6D                 	db	109	;'m'
  3038  00F5BC  6D                 	db	109	;'m'
  3039  00F5BD  61                 	db	97	;'a'
  3040  00F5BE  6E                 	db	110	;'n'
  3041  00F5BF  64                 	db	100	;'d'
  3042  00F5C0  73                 	db	115	;'s'
  3043  00F5C1  0A                 	db	10
  3044  00F5C2  0D                 	db	13
  3045  00F5C3  00                 	db	0
  3046  00F5C4                     STR_104:
  3047  00F5C4  49                 	db	73	;'I'
  3048  00F5C5  66                 	db	102	;'f'
  3049  00F5C6  20                 	db	32
  3050  00F5C7  79                 	db	121	;'y'
  3051  00F5C8  6F                 	db	111	;'o'
  3052  00F5C9  75                 	db	117	;'u'
  3053  00F5CA  27                 	db	39
  3054  00F5CB  64                 	db	100	;'d'
  3055  00F5CC  20                 	db	32
  3056  00F5CD  6C                 	db	108	;'l'
  3057  00F5CE  69                 	db	105	;'i'
  3058  00F5CF  6B                 	db	107	;'k'
  3059  00F5D0  65                 	db	101	;'e'
  3060  00F5D1  20                 	db	32
  3061  00F5D2  74                 	db	116	;'t'
  3062  00F5D3  6F                 	db	111	;'o'
  3063  00F5D4  20                 	db	32
  3064  00F5D5  63                 	db	99	;'c'
  3065  00F5D6  6F                 	db	111	;'o'
  3066  00F5D7  6D                 	db	109	;'m'
  3067  00F5D8  70                 	db	112	;'p'
  3068  00F5D9  6C                 	db	108	;'l'
  3069  00F5DA  65                 	db	101	;'e'
  3070  00F5DB  74                 	db	116	;'t'
  3071  00F5DC  65                 	db	101	;'e'
  3072  00F5DD  6C                 	db	108	;'l'
  3073  00F5DE  79                 	db	121	;'y'
  3074  00F5DF  20                 	db	32
  3075  00F5E0  65                 	db	101	;'e'
  3076  00F5E1  6E                 	db	110	;'n'
  3077  00F5E2  61                 	db	97	;'a'
  3078  00F5E3  62                 	db	98	;'b'
  3079  00F5E4  6C                 	db	108	;'l'
  3080  00F5E5  65                 	db	101	;'e'
  3081  00F5E6  20                 	db	32
  3082  00F5E7  6F                 	db	111	;'o'
  3083  00F5E8  72                 	db	114	;'r'
  3084  00F5E9  20                 	db	32
  3085  00F5EA  64                 	db	100	;'d'
  3086  00F5EB  69                 	db	105	;'i'
  3087  00F5EC  73                 	db	115	;'s'
  3088  00F5ED  61                 	db	97	;'a'
  3089  00F5EE  62                 	db	98	;'b'
  3090  00F5EF  6C                 	db	108	;'l'
  3091  00F5F0  65                 	db	101	;'e'
  3092  00F5F1  20                 	db	32
  3093  00F5F2  74                 	db	116	;'t'
  3094  00F5F3  68                 	db	104	;'h'
  3095  00F5F4  65                 	db	101	;'e'
  3096  00F5F5  20                 	db	32
  3097  00F5F6  6C                 	db	108	;'l'
  3098  00F5F7  6F                 	db	111	;'o'
  3099  00F5F8  61                 	db	97	;'a'
  3100  00F5F9  64                 	db	100	;'d'
  3101  00F5FA  2C                 	db	44
  3102  00F5FB  20                 	db	32
  3103  00F5FC  64                 	db	100	;'d'
  3104  00F5FD  69                 	db	105	;'i'
  3105  00F5FE  73                 	db	115	;'s'
  3106  00F5FF  61                 	db	97	;'a'
  3107  00F600  62                 	db	98	;'b'
  3108  00F601  6C                 	db	108	;'l'
  3109  00F602  65                 	db	101	;'e'
  3110  00F603  20                 	db	32
  3111  00F604  64                 	db	100	;'d'
  3112  00F605  69                 	db	105	;'i'
  3113  00F606  6D                 	db	109	;'m'
  3114  00F607  6D                 	db	109	;'m'
  3115  00F608  69                 	db	105	;'i'
  3116  00F609  6E                 	db	110	;'n'
  3117  00F60A  67                 	db	103	;'g'
  3118  00F60B  20                 	db	32
  3119  00F60C  61                 	db	97	;'a'
  3120  00F60D  6E                 	db	110	;'n'
  3121  00F60E  64                 	db	100	;'d'
  3122  00F60F  20                 	db	32
  3123  00F610  75                 	db	117	;'u'
  3124  00F611  73                 	db	115	;'s'
  3125  00F612  65                 	db	101	;'e'
  3126  00F613  20                 	db	32
  3127  00F614  72                 	db	114	;'r'
  3128  00F615  65                 	db	101	;'e'
  3129  00F616  73                 	db	115	;'s'
  3130  00F617  70                 	db	112	;'p'
  3131  00F618  65                 	db	101	;'e'
  3132  00F619  63                 	db	99	;'c'
  3133  00F61A  74                 	db	116	;'t'
  3134  00F61B  69                 	db	105	;'i'
  3135  00F61C  76                 	db	118	;'v'
  3136  00F61D  65                 	db	101	;'e'
  3137  00F61E  20                 	db	32
  3138  00F61F  63                 	db	99	;'c'
  3139  00F620  6F                 	db	111	;'o'
  3140  00F621  6D                 	db	109	;'m'
  3141  00F622  6D                 	db	109	;'m'
  3142  00F623  61                 	db	97	;'a'
  3143  00F624  6E                 	db	110	;'n'
  3144  00F625  64                 	db	100	;'d'
  3145  00F626  73                 	db	115	;'s'
  3146  00F627  0A                 	db	10
  3147  00F628  0D                 	db	13
  3148  00F629  00                 	db	0
  3149  00F62A                     STR_103:
  3150  00F62A  45                 	db	69	;'E'
  3151  00F62B  52                 	db	82	;'R'
  3152  00F62C  52                 	db	82	;'R'
  3153  00F62D  4F                 	db	79	;'O'
  3154  00F62E  52                 	db	82	;'R'
  3155  00F62F  3A                 	db	58	;':'
  3156  00F630  20                 	db	32
  3157  00F631  50                 	db	80	;'P'
  3158  00F632  6C                 	db	108	;'l'
  3159  00F633  65                 	db	101	;'e'
  3160  00F634  61                 	db	97	;'a'
  3161  00F635  73                 	db	115	;'s'
  3162  00F636  65                 	db	101	;'e'
  3163  00F637  20                 	db	32
  3164  00F638  73                 	db	115	;'s'
  3165  00F639  65                 	db	101	;'e'
  3166  00F63A  74                 	db	116	;'t'
  3167  00F63B  20                 	db	32
  3168  00F63C  64                 	db	100	;'d'
  3169  00F63D  69                 	db	105	;'i'
  3170  00F63E  6D                 	db	109	;'m'
  3171  00F63F  6D                 	db	109	;'m'
  3172  00F640  69                 	db	105	;'i'
  3173  00F641  6E                 	db	110	;'n'
  3174  00F642  67                 	db	103	;'g'
  3175  00F643  20                 	db	32
  3176  00F644  70                 	db	112	;'p'
  3177  00F645  65                 	db	101	;'e'
  3178  00F646  72                 	db	114	;'r'
  3179  00F647  63                 	db	99	;'c'
  3180  00F648  65                 	db	101	;'e'
  3181  00F649  6E                 	db	110	;'n'
  3182  00F64A  74                 	db	116	;'t'
  3183  00F64B  61                 	db	97	;'a'
  3184  00F64C  67                 	db	103	;'g'
  3185  00F64D  65                 	db	101	;'e'
  3186  00F64E  20                 	db	32
  3187  00F64F  74                 	db	116	;'t'
  3188  00F650  6F                 	db	111	;'o'
  3189  00F651  20                 	db	32
  3190  00F652  61                 	db	97	;'a'
  3191  00F653  6E                 	db	110	;'n'
  3192  00F654  20                 	db	32
  3193  00F655  69                 	db	105	;'i'
  3194  00F656  6E                 	db	110	;'n'
  3195  00F657  74                 	db	116	;'t'
  3196  00F658  65                 	db	101	;'e'
  3197  00F659  67                 	db	103	;'g'
  3198  00F65A  65                 	db	101	;'e'
  3199  00F65B  72                 	db	114	;'r'
  3200  00F65C  20                 	db	32
  3201  00F65D  67                 	db	103	;'g'
  3202  00F65E  72                 	db	114	;'r'
  3203  00F65F  65                 	db	101	;'e'
  3204  00F660  61                 	db	97	;'a'
  3205  00F661  74                 	db	116	;'t'
  3206  00F662  65                 	db	101	;'e'
  3207  00F663  72                 	db	114	;'r'
  3208  00F664  20                 	db	32
  3209  00F665  74                 	db	116	;'t'
  3210  00F666  68                 	db	104	;'h'
  3211  00F667  61                 	db	97	;'a'
  3212  00F668  6E                 	db	110	;'n'
  3213  00F669  20                 	db	32
  3214  00F66A  30                 	db	48	;'0'
  3215  00F66B  20                 	db	32
  3216  00F66C  61                 	db	97	;'a'
  3217  00F66D  6E                 	db	110	;'n'
  3218  00F66E  64                 	db	100	;'d'
  3219  00F66F  20                 	db	32
  3220  00F670  6C                 	db	108	;'l'
  3221  00F671  65                 	db	101	;'e'
  3222  00F672  73                 	db	115	;'s'
  3223  00F673  73                 	db	115	;'s'
  3224  00F674  20                 	db	32
  3225  00F675  74                 	db	116	;'t'
  3226  00F676  68                 	db	104	;'h'
  3227  00F677  61                 	db	97	;'a'
  3228  00F678  6E                 	db	110	;'n'
  3229  00F679  20                 	db	32
  3230  00F67A  31                 	db	49	;'1'
  3231  00F67B  30                 	db	48	;'0'
  3232  00F67C  30                 	db	48	;'0'
  3233  00F67D  0A                 	db	10
  3234  00F67E  0D                 	db	13
  3235  00F67F  00                 	db	0
  3236  00F680                     STR_54:
  3237  00F680  46                 	db	70	;'F'
  3238  00F681  6C                 	db	108	;'l'
  3239  00F682  61                 	db	97	;'a'
  3240  00F683  73                 	db	115	;'s'
  3241  00F684  68                 	db	104	;'h'
  3242  00F685  20                 	db	32
  3243  00F686  6D                 	db	109	;'m'
  3244  00F687  65                 	db	101	;'e'
  3245  00F688  6D                 	db	109	;'m'
  3246  00F689  6F                 	db	111	;'o'
  3247  00F68A  72                 	db	114	;'r'
  3248  00F68B  79                 	db	121	;'y'
  3249  00F68C  20                 	db	32
  3250  00F68D  64                 	db	100	;'d'
  3251  00F68E  65                 	db	101	;'e'
  3252  00F68F  76                 	db	118	;'v'
  3253  00F690  69                 	db	105	;'i'
  3254  00F691  63                 	db	99	;'c'
  3255  00F692  65                 	db	101	;'e'
  3256  00F693  20                 	db	32
  3257  00F694  49                 	db	73	;'I'
  3258  00F695  44                 	db	68	;'D'
  3259  00F696  20                 	db	32
  3260  00F697  69                 	db	105	;'i'
  3261  00F698  73                 	db	115	;'s'
  3262  00F699  3A                 	db	58	;':'
  3263  00F69A  20                 	db	32
  3264  00F69B  30                 	db	48	;'0'
  3265  00F69C  78                 	db	120	;'x'
  3266  00F69D  25                 	db	37
  3267  00F69E  58                 	db	88	;'X'
  3268  00F69F  2E                 	db	46
  3269  00F6A0  20                 	db	32
  3270  00F6A1  54                 	db	84	;'T'
  3271  00F6A2  68                 	db	104	;'h'
  3272  00F6A3  69                 	db	105	;'i'
  3273  00F6A4  73                 	db	115	;'s'
  3274  00F6A5  20                 	db	32
  3275  00F6A6  63                 	db	99	;'c'
  3276  00F6A7  6F                 	db	111	;'o'
  3277  00F6A8  72                 	db	114	;'r'
  3278  00F6A9  72                 	db	114	;'r'
  3279  00F6AA  65                 	db	101	;'e'
  3280  00F6AB  73                 	db	115	;'s'
  3281  00F6AC  70                 	db	112	;'p'
  3282  00F6AD  6F                 	db	111	;'o'
  3283  00F6AE  6E                 	db	110	;'n'
  3284  00F6AF  64                 	db	100	;'d'
  3285  00F6B0  73                 	db	115	;'s'
  3286  00F6B1  20                 	db	32
  3287  00F6B2  74                 	db	116	;'t'
  3288  00F6B3  6F                 	db	111	;'o'
  3289  00F6B4  20                 	db	32
  3290  00F6B5  61                 	db	97	;'a'
  3291  00F6B6  20                 	db	32
  3292  00F6B7  64                 	db	100	;'d'
  3293  00F6B8  65                 	db	101	;'e'
  3294  00F6B9  76                 	db	118	;'v'
  3295  00F6BA  69                 	db	105	;'i'
  3296  00F6BB  63                 	db	99	;'c'
  3297  00F6BC  65                 	db	101	;'e'
  3298  00F6BD  20                 	db	32
  3299  00F6BE  70                 	db	112	;'p'
  3300  00F6BF  61                 	db	97	;'a'
  3301  00F6C0  72                 	db	114	;'r'
  3302  00F6C1  74                 	db	116	;'t'
  3303  00F6C2  20                 	db	32
  3304  00F6C3  6E                 	db	110	;'n'
  3305  00F6C4  75                 	db	117	;'u'
  3306  00F6C5  6D                 	db	109	;'m'
  3307  00F6C6  62                 	db	98	;'b'
  3308  00F6C7  65                 	db	101	;'e'
  3309  00F6C8  72                 	db	114	;'r'
  3310  00F6C9  20                 	db	32
  3311  00F6CA  6F                 	db	111	;'o'
  3312  00F6CB  66                 	db	102	;'f'
  3313  00F6CC  20                 	db	32
  3314  00F6CD  25                 	db	37
  3315  00F6CE  73                 	db	115	;'s'
  3316  00F6CF  0A                 	db	10
  3317  00F6D0  0D                 	db	13
  3318  00F6D1  00                 	db	0
  3319  00F6D2                     STR_108:
  3320  00F6D2  54                 	db	84	;'T'
  3321  00F6D3  68                 	db	104	;'h'
  3322  00F6D4  69                 	db	105	;'i'
  3323  00F6D5  73                 	db	115	;'s'
  3324  00F6D6  20                 	db	32
  3325  00F6D7  63                 	db	99	;'c'
  3326  00F6D8  6F                 	db	111	;'o'
  3327  00F6D9  72                 	db	114	;'r'
  3328  00F6DA  72                 	db	114	;'r'
  3329  00F6DB  65                 	db	101	;'e'
  3330  00F6DC  73                 	db	115	;'s'
  3331  00F6DD  70                 	db	112	;'p'
  3332  00F6DE  6F                 	db	111	;'o'
  3333  00F6DF  6E                 	db	110	;'n'
  3334  00F6E0  64                 	db	100	;'d'
  3335  00F6E1  73                 	db	115	;'s'
  3336  00F6E2  20                 	db	32
  3337  00F6E3  74                 	db	116	;'t'
  3338  00F6E4  6F                 	db	111	;'o'
  3339  00F6E5  20                 	db	32
  3340  00F6E6  61                 	db	97	;'a'
  3341  00F6E7  20                 	db	32
  3342  00F6E8  31                 	db	49	;'1'
  3343  00F6E9  36                 	db	54	;'6'
  3344  00F6EA  20                 	db	32
  3345  00F6EB  62                 	db	98	;'b'
  3346  00F6EC  69                 	db	105	;'i'
  3347  00F6ED  74                 	db	116	;'t'
  3348  00F6EE  20                 	db	32
  3349  00F6EF  74                 	db	116	;'t'
  3350  00F6F0  69                 	db	105	;'i'
  3351  00F6F1  6D                 	db	109	;'m'
  3352  00F6F2  65                 	db	101	;'e'
  3353  00F6F3  72                 	db	114	;'r'
  3354  00F6F4  20                 	db	32
  3355  00F6F5  70                 	db	112	;'p'
  3356  00F6F6  72                 	db	114	;'r'
  3357  00F6F7  65                 	db	101	;'e'
  3358  00F6F8  2D                 	db	45
  3359  00F6F9  6C                 	db	108	;'l'
  3360  00F6FA  6F                 	db	111	;'o'
  3361  00F6FB  61                 	db	97	;'a'
  3362  00F6FC  64                 	db	100	;'d'
  3363  00F6FD  20                 	db	32
  3364  00F6FE  76                 	db	118	;'v'
  3365  00F6FF  61                 	db	97	;'a'
  3366  00F700  6C                 	db	108	;'l'
  3367  00F701  75                 	db	117	;'u'
  3368  00F702  65                 	db	101	;'e'
  3369  00F703  20                 	db	32
  3370  00F704  6F                 	db	111	;'o'
  3371  00F705  66                 	db	102	;'f'
  3372  00F706  20                 	db	32
  3373  00F707  30                 	db	48	;'0'
  3374  00F708  78                 	db	120	;'x'
  3375  00F709  25                 	db	37
  3376  00F70A  58                 	db	88	;'X'
  3377  00F70B  20                 	db	32
  3378  00F70C  28                 	db	40
  3379  00F70D  25                 	db	37
  3380  00F70E  75                 	db	117	;'u'
  3381  00F70F  20                 	db	32
  3382  00F710  4C                 	db	76	;'L'
  3383  00F711  53                 	db	83	;'S'
  3384  00F712  42                 	db	66	;'B'
  3385  00F713  73                 	db	115	;'s'
  3386  00F714  29                 	db	41
  3387  00F715  20                 	db	32
  3388  00F716  0A                 	db	10
  3389  00F717  0D                 	db	13
  3390  00F718  00                 	db	0
  3391  00F719                     STR_74:
  3392  00F719  56                 	db	86	;'V'
  3393  00F71A  43                 	db	67	;'C'
  3394  00F71B  43                 	db	67	;'C'
  3395  00F71C  20                 	db	32
  3396  00F71D  4F                 	db	79	;'O'
  3397  00F71E  76                 	db	118	;'v'
  3398  00F71F  65                 	db	101	;'e'
  3399  00F720  72                 	db	114	;'r'
  3400  00F721  76                 	db	118	;'v'
  3401  00F722  6F                 	db	111	;'o'
  3402  00F723  6C                 	db	108	;'l'
  3403  00F724  74                 	db	116	;'t'
  3404  00F725  61                 	db	97	;'a'
  3405  00F726  67                 	db	103	;'g'
  3406  00F727  65                 	db	101	;'e'
  3407  00F728  20                 	db	32
  3408  00F729  63                 	db	99	;'c'
  3409  00F72A  6F                 	db	111	;'o'
  3410  00F72B  6E                 	db	110	;'n'
  3411  00F72C  64                 	db	100	;'d'
  3412  00F72D  69                 	db	105	;'i'
  3413  00F72E  74                 	db	116	;'t'
  3414  00F72F  69                 	db	105	;'i'
  3415  00F730  6F                 	db	111	;'o'
  3416  00F731  6E                 	db	110	;'n'
  3417  00F732  20                 	db	32
  3418  00F733  68                 	db	104	;'h'
  3419  00F734  61                 	db	97	;'a'
  3420  00F735  73                 	db	115	;'s'
  3421  00F736  20                 	db	32
  3422  00F737  6F                 	db	111	;'o'
  3423  00F738  63                 	db	99	;'c'
  3424  00F739  63                 	db	99	;'c'
  3425  00F73A  75                 	db	117	;'u'
  3426  00F73B  72                 	db	114	;'r'
  3427  00F73C  72                 	db	114	;'r'
  3428  00F73D  65                 	db	101	;'e'
  3429  00F73E  64                 	db	100	;'d'
  3430  00F73F  20                 	db	32
  3431  00F740  28                 	db	40
  3432  00F741  56                 	db	86	;'V'
  3433  00F742  43                 	db	67	;'C'
  3434  00F743  43                 	db	67	;'C'
  3435  00F744  20                 	db	32
  3436  00F745  68                 	db	104	;'h'
  3437  00F746  61                 	db	97	;'a'
  3438  00F747  73                 	db	115	;'s'
  3439  00F748  20                 	db	32
  3440  00F749  65                 	db	101	;'e'
  3441  00F74A  78                 	db	120	;'x'
  3442  00F74B  63                 	db	99	;'c'
  3443  00F74C  65                 	db	101	;'e'
  3444  00F74D  65                 	db	101	;'e'
  3445  00F74E  64                 	db	100	;'d'
  3446  00F74F  65                 	db	101	;'e'
  3447  00F750  64                 	db	100	;'d'
  3448  00F751  20                 	db	32
  3449  00F752  33                 	db	51	;'3'
  3450  00F753  2E                 	db	46
  3451  00F754  34                 	db	52	;'4'
  3452  00F755  30                 	db	48	;'0'
  3453  00F756  56                 	db	86	;'V'
  3454  00F757  29                 	db	41
  3455  00F758  0A                 	db	10
  3456  00F759  0D                 	db	13
  3457  00F75A  00                 	db	0
  3458  00F75B                     STR_58:
  3459  00F75B  54                 	db	84	;'T'
  3460  00F75C  68                 	db	104	;'h'
  3461  00F75D  65                 	db	101	;'e'
  3462  00F75E  20                 	db	32
  3463  00F75F  66                 	db	102	;'f'
  3464  00F760  6F                 	db	111	;'o'
  3465  00F761  6C                 	db	108	;'l'
  3466  00F762  6C                 	db	108	;'l'
  3467  00F763  6F                 	db	111	;'o'
  3468  00F764  77                 	db	119	;'w'
  3469  00F765  69                 	db	105	;'i'
  3470  00F766  6E                 	db	110	;'n'
  3471  00F767  67                 	db	103	;'g'
  3472  00F768  20                 	db	32
  3473  00F769  55                 	db	85	;'U'
  3474  00F76A  73                 	db	115	;'s'
  3475  00F76B  65                 	db	101	;'e'
  3476  00F76C  72                 	db	114	;'r'
  3477  00F76D  20                 	db	32
  3478  00F76E  49                 	db	73	;'I'
  3479  00F76F  44                 	db	68	;'D'
  3480  00F770  73                 	db	115	;'s'
  3481  00F771  20                 	db	32
  3482  00F772  68                 	db	104	;'h'
  3483  00F773  61                 	db	97	;'a'
  3484  00F774  76                 	db	118	;'v'
  3485  00F775  65                 	db	101	;'e'
  3486  00F776  20                 	db	32
  3487  00F777  62                 	db	98	;'b'
  3488  00F778  65                 	db	101	;'e'
  3489  00F779  65                 	db	101	;'e'
  3490  00F77A  6E                 	db	110	;'n'
  3491  00F77B  20                 	db	32
  3492  00F77C  72                 	db	114	;'r'
  3493  00F77D  65                 	db	101	;'e'
  3494  00F77E  74                 	db	116	;'t'
  3495  00F77F  72                 	db	114	;'r'
  3496  00F780  69                 	db	105	;'i'
  3497  00F781  65                 	db	101	;'e'
  3498  00F782  76                 	db	118	;'v'
  3499  00F783  65                 	db	101	;'e'
  3500  00F784  64                 	db	100	;'d'
  3501  00F785  20                 	db	32
  3502  00F786  66                 	db	102	;'f'
  3503  00F787  72                 	db	114	;'r'
  3504  00F788  6F                 	db	111	;'o'
  3505  00F789  6D                 	db	109	;'m'
  3506  00F78A  20                 	db	32
  3507  00F78B  66                 	db	102	;'f'
  3508  00F78C  6C                 	db	108	;'l'
  3509  00F78D  61                 	db	97	;'a'
  3510  00F78E  73                 	db	115	;'s'
  3511  00F78F  68                 	db	104	;'h'
  3512  00F790  20                 	db	32
  3513  00F791  6D                 	db	109	;'m'
  3514  00F792  65                 	db	101	;'e'
  3515  00F793  6D                 	db	109	;'m'
  3516  00F794  6F                 	db	111	;'o'
  3517  00F795  72                 	db	114	;'r'
  3518  00F796  79                 	db	121	;'y'
  3519  00F797  3A                 	db	58	;':'
  3520  00F798  0A                 	db	10
  3521  00F799  0D                 	db	13
  3522  00F79A  00                 	db	0
  3523  00F79B                     STR_107:
  3524  00F79B  43                 	db	67	;'C'
  3525  00F79C  61                 	db	97	;'a'
  3526  00F79D  6C                 	db	108	;'l'
  3527  00F79E  63                 	db	99	;'c'
  3528  00F79F  75                 	db	117	;'u'
  3529  00F7A0  6C                 	db	108	;'l'
  3530  00F7A1  61                 	db	97	;'a'
  3531  00F7A2  74                 	db	116	;'t'
  3532  00F7A3  65                 	db	101	;'e'
  3533  00F7A4  64                 	db	100	;'d'
  3534  00F7A5  20                 	db	32
  3535  00F7A6  54                 	db	84	;'T'
  3536  00F7A7  52                 	db	82	;'R'
  3537  00F7A8  49                 	db	73	;'I'
  3538  00F7A9  41                 	db	65	;'A'
  3539  00F7AA  43                 	db	67	;'C'
  3540  00F7AB  20                 	db	32
  3541  00F7AC  66                 	db	102	;'f'
  3542  00F7AD  69                 	db	105	;'i'
  3543  00F7AE  72                 	db	114	;'r'
  3544  00F7AF  69                 	db	105	;'i'
  3545  00F7B0  6E                 	db	110	;'n'
  3546  00F7B1  67                 	db	103	;'g'
  3547  00F7B2  20                 	db	32
  3548  00F7B3  61                 	db	97	;'a'
  3549  00F7B4  6E                 	db	110	;'n'
  3550  00F7B5  67                 	db	103	;'g'
  3551  00F7B6  6C                 	db	108	;'l'
  3552  00F7B7  65                 	db	101	;'e'
  3553  00F7B8  20                 	db	32
  3554  00F7B9  69                 	db	105	;'i'
  3555  00F7BA  73                 	db	115	;'s'
  3556  00F7BB  20                 	db	32
  3557  00F7BC  25                 	db	37
  3558  00F7BD  2E                 	db	46
  3559  00F7BE  33                 	db	51	;'3'
  3560  00F7BF  66                 	db	102	;'f'
  3561  00F7C0  20                 	db	32
  3562  00F7C1  72                 	db	114	;'r'
  3563  00F7C2  61                 	db	97	;'a'
  3564  00F7C3  64                 	db	100	;'d'
  3565  00F7C4  69                 	db	105	;'i'
  3566  00F7C5  61                 	db	97	;'a'
  3567  00F7C6  6E                 	db	110	;'n'
  3568  00F7C7  73                 	db	115	;'s'
  3569  00F7C8  20                 	db	32
  3570  00F7C9  28                 	db	40
  3571  00F7CA  25                 	db	37
  3572  00F7CB  2E                 	db	46
  3573  00F7CC  33                 	db	51	;'3'
  3574  00F7CD  66                 	db	102	;'f'
  3575  00F7CE  20                 	db	32
  3576  00F7CF  64                 	db	100	;'d'
  3577  00F7D0  65                 	db	101	;'e'
  3578  00F7D1  67                 	db	103	;'g'
  3579  00F7D2  72                 	db	114	;'r'
  3580  00F7D3  65                 	db	101	;'e'
  3581  00F7D4  65                 	db	101	;'e'
  3582  00F7D5  73                 	db	115	;'s'
  3583  00F7D6  29                 	db	41
  3584  00F7D7  0A                 	db	10
  3585  00F7D8  0D                 	db	13
  3586  00F7D9  00                 	db	0
  3587  00F7DA                     STR_110:
  3588  00F7DA  44                 	db	68	;'D'
  3589  00F7DB  65                 	db	101	;'e'
  3590  00F7DC  76                 	db	118	;'v'
  3591  00F7DD  69                 	db	105	;'i'
  3592  00F7DE  63                 	db	99	;'c'
  3593  00F7DF  65                 	db	101	;'e'
  3594  00F7E0  20                 	db	32
  3595  00F7E1  6F                 	db	111	;'o'
  3596  00F7E2  6E                 	db	110	;'n'
  3597  00F7E3  20                 	db	32
  3598  00F7E4  74                 	db	116	;'t'
  3599  00F7E5  69                 	db	105	;'i'
  3600  00F7E6  6D                 	db	109	;'m'
  3601  00F7E7  65                 	db	101	;'e'
  3602  00F7E8  20                 	db	32
  3603  00F7E9  73                 	db	115	;'s'
  3604  00F7EA  69                 	db	105	;'i'
  3605  00F7EB  6E                 	db	110	;'n'
  3606  00F7EC  63                 	db	99	;'c'
  3607  00F7ED  65                 	db	101	;'e'
  3608  00F7EE  20                 	db	32
  3609  00F7EF  6C                 	db	108	;'l'
  3610  00F7F0  61                 	db	97	;'a'
  3611  00F7F1  73                 	db	115	;'s'
  3612  00F7F2  74                 	db	116	;'t'
  3613  00F7F3  20                 	db	32
  3614  00F7F4  72                 	db	114	;'r'
  3615  00F7F5  65                 	db	101	;'e'
  3616  00F7F6  73                 	db	115	;'s'
  3617  00F7F7  65                 	db	101	;'e'
  3618  00F7F8  74                 	db	116	;'t'
  3619  00F7F9  20                 	db	32
  3620  00F7FA  63                 	db	99	;'c'
  3621  00F7FB  6F                 	db	111	;'o'
  3622  00F7FC  6E                 	db	110	;'n'
  3623  00F7FD  64                 	db	100	;'d'
  3624  00F7FE  69                 	db	105	;'i'
  3625  00F7FF  74                 	db	116	;'t'
  3626  00F800  69                 	db	105	;'i'
  3627  00F801  6F                 	db	111	;'o'
  3628  00F802  6E                 	db	110	;'n'
  3629  00F803  20                 	db	32
  3630  00F804  69                 	db	105	;'i'
  3631  00F805  73                 	db	115	;'s'
  3632  00F806  20                 	db	32
  3633  00F807  25                 	db	37
  3634  00F808  64                 	db	100	;'d'
  3635  00F809  20                 	db	32
  3636  00F80A  73                 	db	115	;'s'
  3637  00F80B  65                 	db	101	;'e'
  3638  00F80C  63                 	db	99	;'c'
  3639  00F80D  6F                 	db	111	;'o'
  3640  00F80E  6E                 	db	110	;'n'
  3641  00F80F  64                 	db	100	;'d'
  3642  00F810  73                 	db	115	;'s'
  3643  00F811  0A                 	db	10
  3644  00F812  0D                 	db	13
  3645  00F813  00                 	db	0
  3646  00F814                     STR_93:
  3647  00F814  4F                 	db	79	;'O'
  3648  00F815  75                 	db	117	;'u'
  3649  00F816  74                 	db	116	;'t'
  3650  00F817  70                 	db	112	;'p'
  3651  00F818  75                 	db	117	;'u'
  3652  00F819  74                 	db	116	;'t'
  3653  00F81A  20                 	db	32
  3654  00F81B  70                 	db	112	;'p'
  3655  00F81C  6F                 	db	111	;'o'
  3656  00F81D  77                 	db	119	;'w'
  3657  00F81E  65                 	db	101	;'e'
  3658  00F81F  72                 	db	114	;'r'
  3659  00F820  20                 	db	32
  3660  00F821  63                 	db	99	;'c'
  3661  00F822  61                 	db	97	;'a'
  3662  00F823  6C                 	db	108	;'l'
  3663  00F824  63                 	db	99	;'c'
  3664  00F825  75                 	db	117	;'u'
  3665  00F826  6C                 	db	108	;'l'
  3666  00F827  61                 	db	97	;'a'
  3667  00F828  74                 	db	116	;'t'
  3668  00F829  65                 	db	101	;'e'
  3669  00F82A  64                 	db	100	;'d'
  3670  00F82B  20                 	db	32
  3671  00F82C  61                 	db	97	;'a'
  3672  00F82D  73                 	db	115	;'s'
  3673  00F82E  20                 	db	32
  3674  00F82F  25                 	db	37
  3675  00F830  2E                 	db	46
  3676  00F831  33                 	db	51	;'3'
  3677  00F832  66                 	db	102	;'f'
  3678  00F833  20                 	db	32
  3679  00F834  57                 	db	87	;'W'
  3680  00F835  61                 	db	97	;'a'
  3681  00F836  74                 	db	116	;'t'
  3682  00F837  74                 	db	116	;'t'
  3683  00F838  73                 	db	115	;'s'
  3684  00F839  20                 	db	32
  3685  00F83A  66                 	db	102	;'f'
  3686  00F83B  72                 	db	114	;'r'
  3687  00F83C  6F                 	db	111	;'o'
  3688  00F83D  6D                 	db	109	;'m'
  3689  00F83E  20                 	db	32
  3690  00F83F  52                 	db	82	;'R'
  3691  00F840  4D                 	db	77	;'M'
  3692  00F841  53                 	db	83	;'S'
  3693  00F842  20                 	db	32
  3694  00F843  76                 	db	118	;'v'
  3695  00F844  61                 	db	97	;'a'
  3696  00F845  6C                 	db	108	;'l'
  3697  00F846  75                 	db	117	;'u'
  3698  00F847  65                 	db	101	;'e'
  3699  00F848  73                 	db	115	;'s'
  3700  00F849  0A                 	db	10
  3701  00F84A  0D                 	db	13
  3702  00F84B  00                 	db	0
  3703  00F84C                     STR_83:
  3704  00F84C  46                 	db	70	;'F'
  3705  00F84D  69                 	db	105	;'i'
  3706  00F84E  78                 	db	120	;'x'
  3707  00F84F  65                 	db	101	;'e'
  3708  00F850  64                 	db	100	;'d'
  3709  00F851  20                 	db	32
  3710  00F852  56                 	db	86	;'V'
  3711  00F853  6F                 	db	111	;'o'
  3712  00F854  6C                 	db	108	;'l'
  3713  00F855  74                 	db	116	;'t'
  3714  00F856  61                 	db	97	;'a'
  3715  00F857  67                 	db	103	;'g'
  3716  00F858  65                 	db	101	;'e'
  3717  00F859  20                 	db	32
  3718  00F85A  52                 	db	82	;'R'
  3719  00F85B  65                 	db	101	;'e'
  3720  00F85C  66                 	db	102	;'f'
  3721  00F85D  65                 	db	101	;'e'
  3722  00F85E  72                 	db	114	;'r'
  3723  00F85F  65                 	db	101	;'e'
  3724  00F860  6E                 	db	110	;'n'
  3725  00F861  63                 	db	99	;'c'
  3726  00F862  65                 	db	101	;'e'
  3727  00F863  20                 	db	32
  3728  00F864  42                 	db	66	;'B'
  3729  00F865  75                 	db	117	;'u'
  3730  00F866  66                 	db	102	;'f'
  3731  00F867  66                 	db	102	;'f'
  3732  00F868  65                 	db	101	;'e'
  3733  00F869  72                 	db	114	;'r'
  3734  00F86A  20                 	db	32
  3735  00F86B  31                 	db	49	;'1'
  3736  00F86C  20                 	db	32
  3737  00F86D  6D                 	db	109	;'m'
  3738  00F86E  65                 	db	101	;'e'
  3739  00F86F  61                 	db	97	;'a'
  3740  00F870  73                 	db	115	;'s'
  3741  00F871  75                 	db	117	;'u'
  3742  00F872  72                 	db	114	;'r'
  3743  00F873  65                 	db	101	;'e'
  3744  00F874  64                 	db	100	;'d'
  3745  00F875  20                 	db	32
  3746  00F876  61                 	db	97	;'a'
  3747  00F877  73                 	db	115	;'s'
  3748  00F878  20                 	db	32
  3749  00F879  25                 	db	37
  3750  00F87A  66                 	db	102	;'f'
  3751  00F87B  20                 	db	32
  3752  00F87C  56                 	db	86	;'V'
  3753  00F87D  6F                 	db	111	;'o'
  3754  00F87E  6C                 	db	108	;'l'
  3755  00F87F  74                 	db	116	;'t'
  3756  00F880  73                 	db	115	;'s'
  3757  00F881  0A                 	db	10
  3758  00F882  0D                 	db	13
  3759  00F883  00                 	db	0
  3760  00F884                     STR_112:
  3761  00F884  4C                 	db	76	;'L'
  3762  00F885  6F                 	db	111	;'o'
  3763  00F886  61                 	db	97	;'a'
  3764  00F887  64                 	db	100	;'d'
  3765  00F888  20                 	db	32
  3766  00F889  6F                 	db	111	;'o'
  3767  00F88A  6E                 	db	110	;'n'
  3768  00F88B  20                 	db	32
  3769  00F88C  74                 	db	116	;'t'
  3770  00F88D  69                 	db	105	;'i'
  3771  00F88E  6D                 	db	109	;'m'
  3772  00F88F  65                 	db	101	;'e'
  3773  00F890  20                 	db	32
  3774  00F891  73                 	db	115	;'s'
  3775  00F892  69                 	db	105	;'i'
  3776  00F893  6E                 	db	110	;'n'
  3777  00F894  63                 	db	99	;'c'
  3778  00F895  65                 	db	101	;'e'
  3779  00F896  20                 	db	32
  3780  00F897  6C                 	db	108	;'l'
  3781  00F898  61                 	db	97	;'a'
  3782  00F899  73                 	db	115	;'s'
  3783  00F89A  74                 	db	116	;'t'
  3784  00F89B  20                 	db	32
  3785  00F89C  64                 	db	100	;'d'
  3786  00F89D  65                 	db	101	;'e'
  3787  00F89E  76                 	db	118	;'v'
  3788  00F89F  69                 	db	105	;'i'
  3789  00F8A0  63                 	db	99	;'c'
  3790  00F8A1  65                 	db	101	;'e'
  3791  00F8A2  20                 	db	32
  3792  00F8A3  72                 	db	114	;'r'
  3793  00F8A4  65                 	db	101	;'e'
  3794  00F8A5  73                 	db	115	;'s'
  3795  00F8A6  65                 	db	101	;'e'
  3796  00F8A7  74                 	db	116	;'t'
  3797  00F8A8  20                 	db	32
  3798  00F8A9  69                 	db	105	;'i'
  3799  00F8AA  73                 	db	115	;'s'
  3800  00F8AB  20                 	db	32
  3801  00F8AC  25                 	db	37
  3802  00F8AD  64                 	db	100	;'d'
  3803  00F8AE  20                 	db	32
  3804  00F8AF  73                 	db	115	;'s'
  3805  00F8B0  65                 	db	101	;'e'
  3806  00F8B1  63                 	db	99	;'c'
  3807  00F8B2  6F                 	db	111	;'o'
  3808  00F8B3  6E                 	db	110	;'n'
  3809  00F8B4  64                 	db	100	;'d'
  3810  00F8B5  73                 	db	115	;'s'
  3811  00F8B6  0A                 	db	10
  3812  00F8B7  0D                 	db	13
  3813  00F8B8  00                 	db	0
  3814  00F8B9                     STR_48:
  3815  00F8B9  54                 	db	84	;'T'
  3816  00F8BA  68                 	db	104	;'h'
  3817  00F8BB  65                 	db	101	;'e'
  3818  00F8BC  20                 	db	32
  3819  00F8BD  63                 	db	99	;'c'
  3820  00F8BE  61                 	db	97	;'a'
  3821  00F8BF  75                 	db	117	;'u'
  3822  00F8C0  73                 	db	115	;'s'
  3823  00F8C1  65                 	db	101	;'e'
  3824  00F8C2  20                 	db	32
  3825  00F8C3  6F                 	db	111	;'o'
  3826  00F8C4  66                 	db	102	;'f'
  3827  00F8C5  20                 	db	32
  3828  00F8C6  74                 	db	116	;'t'
  3829  00F8C7  68                 	db	104	;'h'
  3830  00F8C8  65                 	db	101	;'e'
  3831  00F8C9  20                 	db	32
  3832  00F8CA  6D                 	db	109	;'m'
  3833  00F8CB  6F                 	db	111	;'o'
  3834  00F8CC  73                 	db	115	;'s'
  3835  00F8CD  74                 	db	116	;'t'
  3836  00F8CE  20                 	db	32
  3837  00F8CF  72                 	db	114	;'r'
  3838  00F8D0  65                 	db	101	;'e'
  3839  00F8D1  63                 	db	99	;'c'
  3840  00F8D2  65                 	db	101	;'e'
  3841  00F8D3  6E                 	db	110	;'n'
  3842  00F8D4  74                 	db	116	;'t'
  3843  00F8D5  20                 	db	32
  3844  00F8D6  64                 	db	100	;'d'
  3845  00F8D7  65                 	db	101	;'e'
  3846  00F8D8  76                 	db	118	;'v'
  3847  00F8D9  69                 	db	105	;'i'
  3848  00F8DA  63                 	db	99	;'c'
  3849  00F8DB  65                 	db	101	;'e'
  3850  00F8DC  20                 	db	32
  3851  00F8DD  72                 	db	114	;'r'
  3852  00F8DE  65                 	db	101	;'e'
  3853  00F8DF  73                 	db	115	;'s'
  3854  00F8E0  65                 	db	101	;'e'
  3855  00F8E1  74                 	db	116	;'t'
  3856  00F8E2  20                 	db	32
  3857  00F8E3  77                 	db	119	;'w'
  3858  00F8E4  61                 	db	97	;'a'
  3859  00F8E5  73                 	db	115	;'s'
  3860  00F8E6  3A                 	db	58	;':'
  3861  00F8E7  20                 	db	32
  3862  00F8E8  25                 	db	37
  3863  00F8E9  73                 	db	115	;'s'
  3864  00F8EA  0A                 	db	10
  3865  00F8EB  0D                 	db	13
  3866  00F8EC  00                 	db	0
  3867  00F8ED                     STR_59:
  3868  00F8ED  20                 	db	32
  3869  00F8EE  20                 	db	32
  3870  00F8EF  20                 	db	32
  3871  00F8F0  20                 	db	32
  3872  00F8F1  55                 	db	85	;'U'
  3873  00F8F2  73                 	db	115	;'s'
  3874  00F8F3  65                 	db	101	;'e'
  3875  00F8F4  72                 	db	114	;'r'
  3876  00F8F5  20                 	db	32
  3877  00F8F6  49                 	db	73	;'I'
  3878  00F8F7  44                 	db	68	;'D'
  3879  00F8F8  20                 	db	32
  3880  00F8F9  57                 	db	87	;'W'
  3881  00F8FA  6F                 	db	111	;'o'
  3882  00F8FB  72                 	db	114	;'r'
  3883  00F8FC  64                 	db	100	;'d'
  3884  00F8FD  20                 	db	32
  3885  00F8FE  25                 	db	37
  3886  00F8FF  64                 	db	100	;'d'
  3887  00F900  20                 	db	32
  3888  00F901  28                 	db	40
  3889  00F902  46                 	db	70	;'F'
  3890  00F903  6C                 	db	108	;'l'
  3891  00F904  61                 	db	97	;'a'
  3892  00F905  73                 	db	115	;'s'
  3893  00F906  68                 	db	104	;'h'
  3894  00F907  20                 	db	32
  3895  00F908  61                 	db	97	;'a'
  3896  00F909  64                 	db	100	;'d'
  3897  00F90A  64                 	db	100	;'d'
  3898  00F90B  72                 	db	114	;'r'
  3899  00F90C  65                 	db	101	;'e'
  3900  00F90D  73                 	db	115	;'s'
  3901  00F90E  73                 	db	115	;'s'
  3902  00F90F  20                 	db	32
  3903  00F910  30                 	db	48	;'0'
  3904  00F911  78                 	db	120	;'x'
  3905  00F912  25                 	db	37
  3906  00F913  58                 	db	88	;'X'
  3907  00F914  29                 	db	41
  3908  00F915  3A                 	db	58	;':'
  3909  00F916  20                 	db	32
  3910  00F917  30                 	db	48	;'0'
  3911  00F918  78                 	db	120	;'x'
  3912  00F919  25                 	db	37
  3913  00F91A  58                 	db	88	;'X'
  3914  00F91B  0A                 	db	10
  3915  00F91C  0D                 	db	13
  3916  00F91D  00                 	db	0
  3917  00F91E                     STR_69:
  3918  00F91E  54                 	db	84	;'T'
  3919  00F91F  68                 	db	104	;'h'
  3920  00F920  65                 	db	101	;'e'
  3921  00F921  20                 	db	32
  3922  00F922  66                 	db	102	;'f'
  3923  00F923  6F                 	db	111	;'o'
  3924  00F924  6C                 	db	108	;'l'
  3925  00F925  6C                 	db	108	;'l'
  3926  00F926  6F                 	db	111	;'o'
  3927  00F927  77                 	db	119	;'w'
  3928  00F928  69                 	db	105	;'i'
  3929  00F929  6E                 	db	110	;'n'
  3930  00F92A  67                 	db	103	;'g'
  3931  00F92B  20                 	db	32
  3932  00F92C  63                 	db	99	;'c'
  3933  00F92D  68                 	db	104	;'h'
  3934  00F92E  61                 	db	97	;'a'
  3935  00F92F  6E                 	db	110	;'n'
  3936  00F930  6E                 	db	110	;'n'
  3937  00F931  65                 	db	101	;'e'
  3938  00F932  6C                 	db	108	;'l'
  3939  00F933  20                 	db	32
  3940  00F934  63                 	db	99	;'c'
  3941  00F935  61                 	db	97	;'a'
  3942  00F936  75                 	db	117	;'u'
  3943  00F937  73                 	db	115	;'s'
  3944  00F938  65                 	db	101	;'e'
  3945  00F939  64                 	db	100	;'d'
  3946  00F93A  20                 	db	32
  3947  00F93B  61                 	db	97	;'a'
  3948  00F93C  6E                 	db	110	;'n'
  3949  00F93D  20                 	db	32
  3950  00F93E  41                 	db	65	;'A'
  3951  00F93F  44                 	db	68	;'D'
  3952  00F940  43                 	db	67	;'C'
  3953  00F941  20                 	db	32
  3954  00F942  65                 	db	101	;'e'
  3955  00F943  72                 	db	114	;'r'
  3956  00F944  72                 	db	114	;'r'
  3957  00F945  6F                 	db	111	;'o'
  3958  00F946  72                 	db	114	;'r'
  3959  00F947  3A                 	db	58	;':'
  3960  00F948  20                 	db	32
  3961  00F949  25                 	db	37
  3962  00F94A  73                 	db	115	;'s'
  3963  00F94B  0A                 	db	10
  3964  00F94C  0D                 	db	13
  3965  00F94D  00                 	db	0
  3966  00F94E                     STR_52:
  3967  00F94E  4D                 	db	77	;'M'
  3968  00F94F  61                 	db	97	;'a'
  3969  00F950  72                 	db	114	;'r'
  3970  00F951  71                 	db	113	;'q'
  3971  00F952  75                 	db	117	;'u'
  3972  00F953  65                 	db	101	;'e'
  3973  00F954  74                 	db	116	;'t'
  3974  00F955  74                 	db	116	;'t'
  3975  00F956  65                 	db	101	;'e'
  3976  00F957  20                 	db	32
  3977  00F958  55                 	db	85	;'U'
  3978  00F959  6E                 	db	110	;'n'
  3979  00F95A  69                 	db	105	;'i'
  3980  00F95B  76                 	db	118	;'v'
  3981  00F95C  65                 	db	101	;'e'
  3982  00F95D  72                 	db	114	;'r'
  3983  00F95E  73                 	db	115	;'s'
  3984  00F95F  69                 	db	105	;'i'
  3985  00F960  74                 	db	116	;'t'
  3986  00F961  79                 	db	121	;'y'
  3987  00F962  20                 	db	32
  3988  00F963  45                 	db	69	;'E'
  3989  00F964  4C                 	db	76	;'L'
  3990  00F965  45                 	db	69	;'E'
  3991  00F966  4E                 	db	78	;'N'
  3992  00F967  20                 	db	32
  3993  00F968  33                 	db	51	;'3'
  3994  00F969  30                 	db	48	;'0'
  3995  00F96A  33                 	db	51	;'3'
  3996  00F96B  35                 	db	53	;'5'
  3997  00F96C  20                 	db	32
  3998  00F96D  46                 	db	70	;'F'
  3999  00F96E  69                 	db	105	;'i'
  4000  00F96F  6E                 	db	110	;'n'
  4001  00F970  61                 	db	97	;'a'
  4002  00F971  6C                 	db	108	;'l'
  4003  00F972  20                 	db	32
  4004  00F973  50                 	db	80	;'P'
  4005  00F974  72                 	db	114	;'r'
  4006  00F975  6F                 	db	111	;'o'
  4007  00F976  6A                 	db	106	;'j'
  4008  00F977  65                 	db	101	;'e'
  4009  00F978  63                 	db	99	;'c'
  4010  00F979  74                 	db	116	;'t'
  4011  00F97A  0A                 	db	10
  4012  00F97B  0D                 	db	13
  4013  00F97C  00                 	db	0
  4014  00F97D                     STR_105:
  4015  00F97D  45                 	db	69	;'E'
  4016  00F97E  6E                 	db	110	;'n'
  4017  00F97F  74                 	db	116	;'t'
  4018  00F980  65                 	db	101	;'e'
  4019  00F981  72                 	db	114	;'r'
  4020  00F982  20                 	db	32
  4021  00F983  27                 	db	39
  4022  00F984  48                 	db	72	;'H'
  4023  00F985  65                 	db	101	;'e'
  4024  00F986  6C                 	db	108	;'l'
  4025  00F987  70                 	db	112	;'p'
  4026  00F988  27                 	db	39
  4027  00F989  20                 	db	32
  4028  00F98A  66                 	db	102	;'f'
  4029  00F98B  6F                 	db	111	;'o'
  4030  00F98C  72                 	db	114	;'r'
  4031  00F98D  20                 	db	32
  4032  00F98E  6C                 	db	108	;'l'
  4033  00F98F  69                 	db	105	;'i'
  4034  00F990  73                 	db	115	;'s'
  4035  00F991  74                 	db	116	;'t'
  4036  00F992  20                 	db	32
  4037  00F993  6F                 	db	111	;'o'
  4038  00F994  66                 	db	102	;'f'
  4039  00F995  20                 	db	32
  4040  00F996  61                 	db	97	;'a'
  4041  00F997  76                 	db	118	;'v'
  4042  00F998  61                 	db	97	;'a'
  4043  00F999  69                 	db	105	;'i'
  4044  00F99A  6C                 	db	108	;'l'
  4045  00F99B  61                 	db	97	;'a'
  4046  00F99C  62                 	db	98	;'b'
  4047  00F99D  6C                 	db	108	;'l'
  4048  00F99E  65                 	db	101	;'e'
  4049  00F99F  20                 	db	32
  4050  00F9A0  63                 	db	99	;'c'
  4051  00F9A1  6F                 	db	111	;'o'
  4052  00F9A2  6D                 	db	109	;'m'
  4053  00F9A3  6D                 	db	109	;'m'
  4054  00F9A4  61                 	db	97	;'a'
  4055  00F9A5  6E                 	db	110	;'n'
  4056  00F9A6  64                 	db	100	;'d'
  4057  00F9A7  73                 	db	115	;'s'
  4058  00F9A8  0A                 	db	10
  4059  00F9A9  0D                 	db	13
  4060  00F9AA  00                 	db	0
  4061  00F9AB                     STR_75:
  4062  00F9AB  56                 	db	86	;'V'
  4063  00F9AC  43                 	db	67	;'C'
  4064  00F9AD  43                 	db	67	;'C'
  4065  00F9AE  20                 	db	32
  4066  00F9AF  4F                 	db	79	;'O'
  4067  00F9B0  76                 	db	118	;'v'
  4068  00F9B1  65                 	db	101	;'e'
  4069  00F9B2  72                 	db	114	;'r'
  4070  00F9B3  76                 	db	118	;'v'
  4071  00F9B4  6F                 	db	111	;'o'
  4072  00F9B5  6C                 	db	108	;'l'
  4073  00F9B6  74                 	db	116	;'t'
  4074  00F9B7  61                 	db	97	;'a'
  4075  00F9B8  67                 	db	103	;'g'
  4076  00F9B9  65                 	db	101	;'e'
  4077  00F9BA  20                 	db	32
  4078  00F9BB  63                 	db	99	;'c'
  4079  00F9BC  6F                 	db	111	;'o'
  4080  00F9BD  6E                 	db	110	;'n'
  4081  00F9BE  64                 	db	100	;'d'
  4082  00F9BF  69                 	db	105	;'i'
  4083  00F9C0  74                 	db	116	;'t'
  4084  00F9C1  69                 	db	105	;'i'
  4085  00F9C2  6F                 	db	111	;'o'
  4086  00F9C3  6E                 	db	110	;'n'
  4087  00F9C4  20                 	db	32
  4088  00F9C5  68                 	db	104	;'h'
  4089  00F9C6  61                 	db	97	;'a'
  4090  00F9C7  73                 	db	115	;'s'
  4091  00F9C8  20                 	db	32
  4092  00F9C9  6E                 	db	110	;'n'
  4093  00F9CA  6F                 	db	111	;'o'
  4094  00F9CB  74                 	db	116	;'t'
  4095  00F9CC  20                 	db	32
  4096  00F9CD  6F                 	db	111	;'o'
  4097  00F9CE  63                 	db	99	;'c'
  4098  00F9CF  63                 	db	99	;'c'
  4099  00F9D0  75                 	db	117	;'u'
  4100  00F9D1  72                 	db	114	;'r'
  4101  00F9D2  72                 	db	114	;'r'
  4102  00F9D3  65                 	db	101	;'e'
  4103  00F9D4  64                 	db	100	;'d'
  4104  00F9D5  0A                 	db	10
  4105  00F9D6  0D                 	db	13
  4106  00F9D7  00                 	db	0
  4107  00F9D8                     STR_99:
  4108  00F9D8  4C                 	db	76	;'L'
  4109  00F9D9  6F                 	db	111	;'o'
  4110  00F9DA  61                 	db	97	;'a'
  4111  00F9DB  64                 	db	100	;'d'
  4112  00F9DC  20                 	db	32
  4113  00F9DD  68                 	db	104	;'h'
  4114  00F9DE  61                 	db	97	;'a'
  4115  00F9DF  73                 	db	115	;'s'
  4116  00F9E0  20                 	db	32
  4117  00F9E1  62                 	db	98	;'b'
  4118  00F9E2  65                 	db	101	;'e'
  4119  00F9E3  65                 	db	101	;'e'
  4120  00F9E4  6E                 	db	110	;'n'
  4121  00F9E5  20                 	db	32
  4122  00F9E6  65                 	db	101	;'e'
  4123  00F9E7  6E                 	db	110	;'n'
  4124  00F9E8  61                 	db	97	;'a'
  4125  00F9E9  62                 	db	98	;'b'
  4126  00F9EA  6C                 	db	108	;'l'
  4127  00F9EB  65                 	db	101	;'e'
  4128  00F9EC  64                 	db	100	;'d'
  4129  00F9ED  2C                 	db	44
  4130  00F9EE  20                 	db	32
  4131  00F9EF  64                 	db	100	;'d'
  4132  00F9F0  69                 	db	105	;'i'
  4133  00F9F1  6D                 	db	109	;'m'
  4134  00F9F2  6D                 	db	109	;'m'
  4135  00F9F3  69                 	db	105	;'i'
  4136  00F9F4  6E                 	db	110	;'n'
  4137  00F9F5  67                 	db	103	;'g'
  4138  00F9F6  20                 	db	32
  4139  00F9F7  64                 	db	100	;'d'
  4140  00F9F8  69                 	db	105	;'i'
  4141  00F9F9  73                 	db	115	;'s'
  4142  00F9FA  61                 	db	97	;'a'
  4143  00F9FB  62                 	db	98	;'b'
  4144  00F9FC  6C                 	db	108	;'l'
  4145  00F9FD  65                 	db	101	;'e'
  4146  00F9FE  64                 	db	100	;'d'
  4147  00F9FF  0A                 	db	10
  4148  00FA00  0D                 	db	13
  4149  00FA01  00                 	db	0
  4150  00FA02                     STR_129:
  4151  00FA02  57                 	db	87	;'W'
  4152  00FA03  69                 	db	105	;'i'
  4153  00FA04  6E                 	db	110	;'n'
  4154  00FA05  64                 	db	100	;'d'
  4155  00FA06  6F                 	db	111	;'o'
  4156  00FA07  77                 	db	119	;'w'
  4157  00FA08  65                 	db	101	;'e'
  4158  00FA09  64                 	db	100	;'d'
  4159  00FA0A  20                 	db	32
  4160  00FA0B  57                 	db	87	;'W'
  4161  00FA0C  61                 	db	97	;'a'
  4162  00FA0D  74                 	db	116	;'t'
  4163  00FA0E  63                 	db	99	;'c'
  4164  00FA0F  68                 	db	104	;'h'
  4165  00FA10  20                 	db	32
  4166  00FA11  44                 	db	68	;'D'
  4167  00FA12  6F                 	db	111	;'o'
  4168  00FA13  67                 	db	103	;'g'
  4169  00FA14  20                 	db	32
  4170  00FA15  54                 	db	84	;'T'
  4171  00FA16  69                 	db	105	;'i'
  4172  00FA17  6D                 	db	109	;'m'
  4173  00FA18  65                 	db	101	;'e'
  4174  00FA19  72                 	db	114	;'r'
  4175  00FA1A  20                 	db	32
  4176  00FA1B  56                 	db	86	;'V'
  4177  00FA1C  69                 	db	105	;'i'
  4178  00FA1D  6F                 	db	111	;'o'
  4179  00FA1E  6C                 	db	108	;'l'
  4180  00FA1F  61                 	db	97	;'a'
  4181  00FA20  74                 	db	116	;'t'
  4182  00FA21  69                 	db	105	;'i'
  4183  00FA22  6F                 	db	111	;'o'
  4184  00FA23  6E                 	db	110	;'n'
  4185  00FA24  20                 	db	32
  4186  00FA25  52                 	db	82	;'R'
  4187  00FA26  65                 	db	101	;'e'
  4188  00FA27  73                 	db	115	;'s'
  4189  00FA28  65                 	db	101	;'e'
  4190  00FA29  74                 	db	116	;'t'
  4191  00FA2A  00                 	db	0
  4192  00FA2B                     STR_97:
  4193  00FA2B  54                 	db	84	;'T'
  4194  00FA2C  52                 	db	82	;'R'
  4195  00FA2D  49                 	db	73	;'I'
  4196  00FA2E  41                 	db	65	;'A'
  4197  00FA2F  43                 	db	67	;'C'
  4198  00FA30  20                 	db	32
  4199  00FA31  6F                 	db	111	;'o'
  4200  00FA32  75                 	db	117	;'u'
  4201  00FA33  74                 	db	116	;'t'
  4202  00FA34  70                 	db	112	;'p'
  4203  00FA35  75                 	db	117	;'u'
  4204  00FA36  74                 	db	116	;'t'
  4205  00FA37  20                 	db	32
  4206  00FA38  64                 	db	100	;'d'
  4207  00FA39  69                 	db	105	;'i'
  4208  00FA3A  6D                 	db	109	;'m'
  4209  00FA3B  6D                 	db	109	;'m'
  4210  00FA3C  69                 	db	105	;'i'
  4211  00FA3D  6E                 	db	110	;'n'
  4212  00FA3E  67                 	db	103	;'g'
  4213  00FA3F  20                 	db	32
  4214  00FA40  68                 	db	104	;'h'
  4215  00FA41  61                 	db	97	;'a'
  4216  00FA42  73                 	db	115	;'s'
  4217  00FA43  20                 	db	32
  4218  00FA44  62                 	db	98	;'b'
  4219  00FA45  65                 	db	101	;'e'
  4220  00FA46  65                 	db	101	;'e'
  4221  00FA47  6E                 	db	110	;'n'
  4222  00FA48  20                 	db	32
  4223  00FA49  64                 	db	100	;'d'
  4224  00FA4A  69                 	db	105	;'i'
  4225  00FA4B  73                 	db	115	;'s'
  4226  00FA4C  61                 	db	97	;'a'
  4227  00FA4D  62                 	db	98	;'b'
  4228  00FA4E  6C                 	db	108	;'l'
  4229  00FA4F  65                 	db	101	;'e'
  4230  00FA50  64                 	db	100	;'d'
  4231  00FA51  0A                 	db	10
  4232  00FA52  0D                 	db	13
  4233  00FA53  00                 	db	0
  4234  00FA54                     STR_95:
  4235  00FA54  54                 	db	84	;'T'
  4236  00FA55  52                 	db	82	;'R'
  4237  00FA56  49                 	db	73	;'I'
  4238  00FA57  41                 	db	65	;'A'
  4239  00FA58  43                 	db	67	;'C'
  4240  00FA59  20                 	db	32
  4241  00FA5A  6F                 	db	111	;'o'
  4242  00FA5B  75                 	db	117	;'u'
  4243  00FA5C  74                 	db	116	;'t'
  4244  00FA5D  70                 	db	112	;'p'
  4245  00FA5E  75                 	db	117	;'u'
  4246  00FA5F  74                 	db	116	;'t'
  4247  00FA60  20                 	db	32
  4248  00FA61  64                 	db	100	;'d'
  4249  00FA62  69                 	db	105	;'i'
  4250  00FA63  6D                 	db	109	;'m'
  4251  00FA64  6D                 	db	109	;'m'
  4252  00FA65  69                 	db	105	;'i'
  4253  00FA66  6E                 	db	110	;'n'
  4254  00FA67  67                 	db	103	;'g'
  4255  00FA68  20                 	db	32
  4256  00FA69  68                 	db	104	;'h'
  4257  00FA6A  61                 	db	97	;'a'
  4258  00FA6B  73                 	db	115	;'s'
  4259  00FA6C  20                 	db	32
  4260  00FA6D  62                 	db	98	;'b'
  4261  00FA6E  65                 	db	101	;'e'
  4262  00FA6F  65                 	db	101	;'e'
  4263  00FA70  6E                 	db	110	;'n'
  4264  00FA71  20                 	db	32
  4265  00FA72  65                 	db	101	;'e'
  4266  00FA73  6E                 	db	110	;'n'
  4267  00FA74  61                 	db	97	;'a'
  4268  00FA75  62                 	db	98	;'b'
  4269  00FA76  6C                 	db	108	;'l'
  4270  00FA77  65                 	db	101	;'e'
  4271  00FA78  64                 	db	100	;'d'
  4272  00FA79  0A                 	db	10
  4273  00FA7A  0D                 	db	13
  4274  00FA7B  00                 	db	0
  4275  00FA7C                     STR_117:
  4276  00FA7C  4D                 	db	77	;'M'
  4277  00FA7D  65                 	db	101	;'e'
  4278  00FA7E  61                 	db	97	;'a'
  4279  00FA7F  73                 	db	115	;'s'
  4280  00FA80  75                 	db	117	;'u'
  4281  00FA81  72                 	db	114	;'r'
  4282  00FA82  65                 	db	101	;'e'
  4283  00FA83  6D                 	db	109	;'m'
  4284  00FA84  65                 	db	101	;'e'
  4285  00FA85  6E                 	db	110	;'n'
  4286  00FA86  74                 	db	116	;'t'
  4287  00FA87  20                 	db	32
  4288  00FA88  72                 	db	114	;'r'
  4289  00FA89  65                 	db	101	;'e'
  4290  00FA8A  73                 	db	115	;'s'
  4291  00FA8B  70                 	db	112	;'p'
  4292  00FA8C  6F                 	db	111	;'o'
  4293  00FA8D  6E                 	db	110	;'n'
  4294  00FA8E  73                 	db	115	;'s'
  4295  00FA8F  65                 	db	101	;'e'
  4296  00FA90  73                 	db	115	;'s'
  4297  00FA91  20                 	db	32
  4298  00FA92  61                 	db	97	;'a'
  4299  00FA93  70                 	db	112	;'p'
  4300  00FA94  70                 	db	112	;'p'
  4301  00FA95  65                 	db	101	;'e'
  4302  00FA96  61                 	db	97	;'a'
  4303  00FA97  72                 	db	114	;'r'
  4304  00FA98  20                 	db	32
  4305  00FA99  69                 	db	105	;'i'
  4306  00FA9A  6E                 	db	110	;'n'
  4307  00FA9B  20                 	db	32
  4308  00FA9C  63                 	db	99	;'c'
  4309  00FA9D  79                 	db	121	;'y'
  4310  00FA9E  61                 	db	97	;'a'
  4311  00FA9F  6E                 	db	110	;'n'
  4312  00FAA0  0A                 	db	10
  4313  00FAA1  0D                 	db	13
  4314  00FAA2  00                 	db	0
  4315  00FAA3                     STR_85:
  4316  00FAA3  41                 	db	65	;'A'
  4317  00FAA4  56                 	db	86	;'V'
  4318  00FAA5  53                 	db	83	;'S'
  4319  00FAA6  53                 	db	83	;'S'
  4320  00FAA7  20                 	db	32
  4321  00FAA8  6D                 	db	109	;'m'
  4322  00FAA9  65                 	db	101	;'e'
  4323  00FAAA  61                 	db	97	;'a'
  4324  00FAAB  73                 	db	115	;'s'
  4325  00FAAC  75                 	db	117	;'u'
  4326  00FAAD  72                 	db	114	;'r'
  4327  00FAAE  65                 	db	101	;'e'
  4328  00FAAF  64                 	db	100	;'d'
  4329  00FAB0  20                 	db	32
  4330  00FAB1  61                 	db	97	;'a'
  4331  00FAB2  73                 	db	115	;'s'
  4332  00FAB3  20                 	db	32
  4333  00FAB4  25                 	db	37
  4334  00FAB5  2E                 	db	46
  4335  00FAB6  33                 	db	51	;'3'
  4336  00FAB7  66                 	db	102	;'f'
  4337  00FAB8  20                 	db	32
  4338  00FAB9  56                 	db	86	;'V'
  4339  00FABA  6F                 	db	111	;'o'
  4340  00FABB  6C                 	db	108	;'l'
  4341  00FABC  74                 	db	116	;'t'
  4342  00FABD  73                 	db	115	;'s'
  4343  00FABE  20                 	db	32
  4344  00FABF  62                 	db	98	;'b'
  4345  00FAC0  79                 	db	121	;'y'
  4346  00FAC1  20                 	db	32
  4347  00FAC2  41                 	db	65	;'A'
  4348  00FAC3  44                 	db	68	;'D'
  4349  00FAC4  43                 	db	67	;'C'
  4350  00FAC5  0A                 	db	10
  4351  00FAC6  0D                 	db	13
  4352  00FAC7  00                 	db	0
  4353  00FAC8                     STR_116:
  4354  00FAC8  53                 	db	83	;'S'
  4355  00FAC9  79                 	db	121	;'y'
  4356  00FACA  73                 	db	115	;'s'
  4357  00FACB  74                 	db	116	;'t'
  4358  00FACC  65                 	db	101	;'e'
  4359  00FACD  6D                 	db	109	;'m'
  4360  00FACE  20                 	db	32
  4361  00FACF  70                 	db	112	;'p'
  4362  00FAD0  61                 	db	97	;'a'
  4363  00FAD1  72                 	db	114	;'r'
  4364  00FAD2  61                 	db	97	;'a'
  4365  00FAD3  6D                 	db	109	;'m'
  4366  00FAD4  65                 	db	101	;'e'
  4367  00FAD5  74                 	db	116	;'t'
  4368  00FAD6  65                 	db	101	;'e'
  4369  00FAD7  72                 	db	114	;'r'
  4370  00FAD8  73                 	db	115	;'s'
  4371  00FAD9  20                 	db	32
  4372  00FADA  61                 	db	97	;'a'
  4373  00FADB  70                 	db	112	;'p'
  4374  00FADC  70                 	db	112	;'p'
  4375  00FADD  65                 	db	101	;'e'
  4376  00FADE  61                 	db	97	;'a'
  4377  00FADF  72                 	db	114	;'r'
  4378  00FAE0  73                 	db	115	;'s'
  4379  00FAE1  20                 	db	32
  4380  00FAE2  69                 	db	105	;'i'
  4381  00FAE3  6E                 	db	110	;'n'
  4382  00FAE4  20                 	db	32
  4383  00FAE5  67                 	db	103	;'g'
  4384  00FAE6  72                 	db	114	;'r'
  4385  00FAE7  65                 	db	101	;'e'
  4386  00FAE8  65                 	db	101	;'e'
  4387  00FAE9  6E                 	db	110	;'n'
  4388  00FAEA  0A                 	db	10
  4389  00FAEB  0D                 	db	13
  4390  00FAEC  00                 	db	0
  4391  00FAED                     STR_106:
  4392  00FAED  44                 	db	68	;'D'
  4393  00FAEE  69                 	db	105	;'i'
  4394  00FAEF  6D                 	db	109	;'m'
  4395  00FAF0  6D                 	db	109	;'m'
  4396  00FAF1  69                 	db	105	;'i'
  4397  00FAF2  6E                 	db	110	;'n'
  4398  00FAF3  67                 	db	103	;'g'
  4399  00FAF4  20                 	db	32
  4400  00FAF5  68                 	db	104	;'h'
  4401  00FAF6  61                 	db	97	;'a'
  4402  00FAF7  73                 	db	115	;'s'
  4403  00FAF8  20                 	db	32
  4404  00FAF9  62                 	db	98	;'b'
  4405  00FAFA  65                 	db	101	;'e'
  4406  00FAFB  65                 	db	101	;'e'
  4407  00FAFC  6E                 	db	110	;'n'
  4408  00FAFD  20                 	db	32
  4409  00FAFE  73                 	db	115	;'s'
  4410  00FAFF  65                 	db	101	;'e'
  4411  00FB00  74                 	db	116	;'t'
  4412  00FB01  20                 	db	32
  4413  00FB02  74                 	db	116	;'t'
  4414  00FB03  6F                 	db	111	;'o'
  4415  00FB04  20                 	db	32
  4416  00FB05  25                 	db	37
  4417  00FB06  64                 	db	100	;'d'
  4418  00FB07  20                 	db	32
  4419  00FB08  70                 	db	112	;'p'
  4420  00FB09  65                 	db	101	;'e'
  4421  00FB0A  72                 	db	114	;'r'
  4422  00FB0B  63                 	db	99	;'c'
  4423  00FB0C  65                 	db	101	;'e'
  4424  00FB0D  6E                 	db	110	;'n'
  4425  00FB0E  74                 	db	116	;'t'
  4426  00FB0F  0A                 	db	10
  4427  00FB10  0D                 	db	13
  4428  00FB11  00                 	db	0
  4429  00FB12                     STR_77:
  4430  00FB12  2B                 	db	43
  4431  00FB13  33                 	db	51	;'3'
  4432  00FB14  2E                 	db	46
  4433  00FB15  33                 	db	51	;'3'
  4434  00FB16  56                 	db	86	;'V'
  4435  00FB17  20                 	db	32
  4436  00FB18  72                 	db	114	;'r'
  4437  00FB19  61                 	db	97	;'a'
  4438  00FB1A  69                 	db	105	;'i'
  4439  00FB1B  6C                 	db	108	;'l'
  4440  00FB1C  20                 	db	32
  4441  00FB1D  6D                 	db	109	;'m'
  4442  00FB1E  65                 	db	101	;'e'
  4443  00FB1F  61                 	db	97	;'a'
  4444  00FB20  73                 	db	115	;'s'
  4445  00FB21  75                 	db	117	;'u'
  4446  00FB22  72                 	db	114	;'r'
  4447  00FB23  65                 	db	101	;'e'
  4448  00FB24  64                 	db	100	;'d'
  4449  00FB25  20                 	db	32
  4450  00FB26  61                 	db	97	;'a'
  4451  00FB27  73                 	db	115	;'s'
  4452  00FB28  20                 	db	32
  4453  00FB29  2B                 	db	43
  4454  00FB2A  25                 	db	37
  4455  00FB2B  66                 	db	102	;'f'
  4456  00FB2C  20                 	db	32
  4457  00FB2D  56                 	db	86	;'V'
  4458  00FB2E  6F                 	db	111	;'o'
  4459  00FB2F  6C                 	db	108	;'l'
  4460  00FB30  74                 	db	116	;'t'
  4461  00FB31  73                 	db	115	;'s'
  4462  00FB32  0A                 	db	10
  4463  00FB33  0D                 	db	13
  4464  00FB34  00                 	db	0
  4465  00FB35                     STR_81:
  4466  00FB35  44                 	db	68	;'D'
  4467  00FB36  69                 	db	105	;'i'
  4468  00FB37  65                 	db	101	;'e'
  4469  00FB38  20                 	db	32
  4470  00FB39  54                 	db	84	;'T'
  4471  00FB3A  65                 	db	101	;'e'
  4472  00FB3B  6D                 	db	109	;'m'
  4473  00FB3C  70                 	db	112	;'p'
  4474  00FB3D  65                 	db	101	;'e'
  4475  00FB3E  72                 	db	114	;'r'
  4476  00FB3F  61                 	db	97	;'a'
  4477  00FB40  74                 	db	116	;'t'
  4478  00FB41  75                 	db	117	;'u'
  4479  00FB42  72                 	db	114	;'r'
  4480  00FB43  65                 	db	101	;'e'
  4481  00FB44  20                 	db	32
  4482  00FB45  6D                 	db	109	;'m'
  4483  00FB46  65                 	db	101	;'e'
  4484  00FB47  61                 	db	97	;'a'
  4485  00FB48  73                 	db	115	;'s'
  4486  00FB49  75                 	db	117	;'u'
  4487  00FB4A  72                 	db	114	;'r'
  4488  00FB4B  65                 	db	101	;'e'
  4489  00FB4C  64                 	db	100	;'d'
  4490  00FB4D  20                 	db	32
  4491  00FB4E  61                 	db	97	;'a'
  4492  00FB4F  73                 	db	115	;'s'
  4493  00FB50  20                 	db	32
  4494  00FB51  25                 	db	37
  4495  00FB52  66                 	db	102	;'f'
  4496  00FB53  43                 	db	67	;'C'
  4497  00FB54  0A                 	db	10
  4498  00FB55  0D                 	db	13
  4499  00FB56  00                 	db	0
  4500  00FB57                     STR_56:
  4501  00FB57  46                 	db	70	;'F'
  4502  00FB58  6C                 	db	108	;'l'
  4503  00FB59  61                 	db	97	;'a'
  4504  00FB5A  73                 	db	115	;'s'
  4505  00FB5B  68                 	db	104	;'h'
  4506  00FB5C  20                 	db	32
  4507  00FB5D  6D                 	db	109	;'m'
  4508  00FB5E  65                 	db	101	;'e'
  4509  00FB5F  6D                 	db	109	;'m'
  4510  00FB60  6F                 	db	111	;'o'
  4511  00FB61  72                 	db	114	;'r'
  4512  00FB62  79                 	db	121	;'y'
  4513  00FB63  20                 	db	32
  4514  00FB64  72                 	db	114	;'r'
  4515  00FB65  65                 	db	101	;'e'
  4516  00FB66  76                 	db	118	;'v'
  4517  00FB67  69                 	db	105	;'i'
  4518  00FB68  73                 	db	115	;'s'
  4519  00FB69  69                 	db	105	;'i'
  4520  00FB6A  6F                 	db	111	;'o'
  4521  00FB6B  6E                 	db	110	;'n'
  4522  00FB6C  20                 	db	32
  4523  00FB6D  49                 	db	73	;'I'
  4524  00FB6E  44                 	db	68	;'D'
  4525  00FB6F  20                 	db	32
  4526  00FB70  69                 	db	105	;'i'
  4527  00FB71  73                 	db	115	;'s'
  4528  00FB72  3A                 	db	58	;':'
  4529  00FB73  20                 	db	32
  4530  00FB74  25                 	db	37
  4531  00FB75  73                 	db	115	;'s'
  4532  00FB76  0A                 	db	10
  4533  00FB77  0D                 	db	13
  4534  00FB78  00                 	db	0
  4535  00FB79                     STR_89:
  4536  00FB79  52                 	db	82	;'R'
  4537  00FB7A  4D                 	db	77	;'M'
  4538  00FB7B  53                 	db	83	;'S'
  4539  00FB7C  20                 	db	32
  4540  00FB7D  4F                 	db	79	;'O'
  4541  00FB7E  75                 	db	117	;'u'
  4542  00FB7F  74                 	db	116	;'t'
  4543  00FB80  70                 	db	112	;'p'
  4544  00FB81  75                 	db	117	;'u'
  4545  00FB82  74                 	db	116	;'t'
  4546  00FB83  20                 	db	32
  4547  00FB84  43                 	db	67	;'C'
  4548  00FB85  75                 	db	117	;'u'
  4549  00FB86  72                 	db	114	;'r'
  4550  00FB87  72                 	db	114	;'r'
  4551  00FB88  65                 	db	101	;'e'
  4552  00FB89  6E                 	db	110	;'n'
  4553  00FB8A  74                 	db	116	;'t'
  4554  00FB8B  20                 	db	32
  4555  00FB8C  69                 	db	105	;'i'
  4556  00FB8D  73                 	db	115	;'s'
  4557  00FB8E  20                 	db	32
  4558  00FB8F  25                 	db	37
  4559  00FB90  2E                 	db	46
  4560  00FB91  33                 	db	51	;'3'
  4561  00FB92  66                 	db	102	;'f'
  4562  00FB93  20                 	db	32
  4563  00FB94  41                 	db	65	;'A'
  4564  00FB95  72                 	db	114	;'r'
  4565  00FB96  6D                 	db	109	;'m'
  4566  00FB97  73                 	db	115	;'s'
  4567  00FB98  0A                 	db	10
  4568  00FB99  0D                 	db	13
  4569  00FB9A  00                 	db	0
  4570  00FB9B                     STR_91:
  4571  00FB9B  52                 	db	82	;'R'
  4572  00FB9C  4D                 	db	77	;'M'
  4573  00FB9D  53                 	db	83	;'S'
  4574  00FB9E  20                 	db	32
  4575  00FB9F  4F                 	db	79	;'O'
  4576  00FBA0  75                 	db	117	;'u'
  4577  00FBA1  74                 	db	116	;'t'
  4578  00FBA2  70                 	db	112	;'p'
  4579  00FBA3  75                 	db	117	;'u'
  4580  00FBA4  74                 	db	116	;'t'
  4581  00FBA5  20                 	db	32
  4582  00FBA6  56                 	db	86	;'V'
  4583  00FBA7  6F                 	db	111	;'o'
  4584  00FBA8  6C                 	db	108	;'l'
  4585  00FBA9  74                 	db	116	;'t'
  4586  00FBAA  61                 	db	97	;'a'
  4587  00FBAB  67                 	db	103	;'g'
  4588  00FBAC  65                 	db	101	;'e'
  4589  00FBAD  20                 	db	32
  4590  00FBAE  69                 	db	105	;'i'
  4591  00FBAF  73                 	db	115	;'s'
  4592  00FBB0  20                 	db	32
  4593  00FBB1  25                 	db	37
  4594  00FBB2  2E                 	db	46
  4595  00FBB3  33                 	db	51	;'3'
  4596  00FBB4  66                 	db	102	;'f'
  4597  00FBB5  20                 	db	32
  4598  00FBB6  56                 	db	86	;'V'
  4599  00FBB7  72                 	db	114	;'r'
  4600  00FBB8  6D                 	db	109	;'m'
  4601  00FBB9  73                 	db	115	;'s'
  4602  00FBBA  0A                 	db	10
  4603  00FBBB  0D                 	db	13
  4604  00FBBC  00                 	db	0
  4605  00FBBD                     STR_79:
  4606  00FBBD  2B                 	db	43
  4607  00FBBE  31                 	db	49	;'1'
  4608  00FBBF  32                 	db	50	;'2'
  4609  00FBC0  56                 	db	86	;'V'
  4610  00FBC1  20                 	db	32
  4611  00FBC2  72                 	db	114	;'r'
  4612  00FBC3  61                 	db	97	;'a'
  4613  00FBC4  69                 	db	105	;'i'
  4614  00FBC5  6C                 	db	108	;'l'
  4615  00FBC6  20                 	db	32
  4616  00FBC7  6D                 	db	109	;'m'
  4617  00FBC8  65                 	db	101	;'e'
  4618  00FBC9  61                 	db	97	;'a'
  4619  00FBCA  73                 	db	115	;'s'
  4620  00FBCB  75                 	db	117	;'u'
  4621  00FBCC  72                 	db	114	;'r'
  4622  00FBCD  65                 	db	101	;'e'
  4623  00FBCE  64                 	db	100	;'d'
  4624  00FBCF  20                 	db	32
  4625  00FBD0  61                 	db	97	;'a'
  4626  00FBD1  73                 	db	115	;'s'
  4627  00FBD2  20                 	db	32
  4628  00FBD3  2B                 	db	43
  4629  00FBD4  25                 	db	37
  4630  00FBD5  66                 	db	102	;'f'
  4631  00FBD6  20                 	db	32
  4632  00FBD7  56                 	db	86	;'V'
  4633  00FBD8  6F                 	db	111	;'o'
  4634  00FBD9  6C                 	db	108	;'l'
  4635  00FBDA  74                 	db	116	;'t'
  4636  00FBDB  73                 	db	115	;'s'
  4637  00FBDC  0A                 	db	10
  4638  00FBDD  0D                 	db	13
  4639  00FBDE  00                 	db	0
  4640  00FBDF                     STR_115:
  4641  00FBDF  48                 	db	72	;'H'
  4642  00FBE0  65                 	db	101	;'e'
  4643  00FBE1  6C                 	db	108	;'l'
  4644  00FBE2  70                 	db	112	;'p'
  4645  00FBE3  20                 	db	32
  4646  00FBE4  6D                 	db	109	;'m'
  4647  00FBE5  65                 	db	101	;'e'
  4648  00FBE6  73                 	db	115	;'s'
  4649  00FBE7  73                 	db	115	;'s'
  4650  00FBE8  61                 	db	97	;'a'
  4651  00FBE9  67                 	db	103	;'g'
  4652  00FBEA  65                 	db	101	;'e'
  4653  00FBEB  73                 	db	115	;'s'
  4654  00FBEC  20                 	db	32
  4655  00FBED  61                 	db	97	;'a'
  4656  00FBEE  70                 	db	112	;'p'
  4657  00FBEF  70                 	db	112	;'p'
  4658  00FBF0  65                 	db	101	;'e'
  4659  00FBF1  61                 	db	97	;'a'
  4660  00FBF2  72                 	db	114	;'r'
  4661  00FBF3  20                 	db	32
  4662  00FBF4  69                 	db	105	;'i'
  4663  00FBF5  6E                 	db	110	;'n'
  4664  00FBF6  20                 	db	32
  4665  00FBF7  79                 	db	121	;'y'
  4666  00FBF8  65                 	db	101	;'e'
  4667  00FBF9  6C                 	db	108	;'l'
  4668  00FBFA  6C                 	db	108	;'l'
  4669  00FBFB  6F                 	db	111	;'o'
  4670  00FBFC  77                 	db	119	;'w'
  4671  00FBFD  0A                 	db	10
  4672  00FBFE  0D                 	db	13
  4673  00FBFF  00                 	db	0
  4674  00FC00                     STR_87:
  4675  00FC00  4D                 	db	77	;'M'
  4676  00FC01  65                 	db	101	;'e'
  4677  00FC02  61                 	db	97	;'a'
  4678  00FC03  73                 	db	115	;'s'
  4679  00FC04  75                 	db	117	;'u'
  4680  00FC05  72                 	db	114	;'r'
  4681  00FC06  65                 	db	101	;'e'
  4682  00FC07  64                 	db	100	;'d'
  4683  00FC08  20                 	db	32
  4684  00FC09  43                 	db	67	;'C'
  4685  00FC0A  75                 	db	117	;'u'
  4686  00FC0B  72                 	db	114	;'r'
  4687  00FC0C  72                 	db	114	;'r'
  4688  00FC0D  65                 	db	101	;'e'
  4689  00FC0E  6E                 	db	110	;'n'
  4690  00FC0F  74                 	db	116	;'t'
  4691  00FC10  20                 	db	32
  4692  00FC11  69                 	db	105	;'i'
  4693  00FC12  73                 	db	115	;'s'
  4694  00FC13  20                 	db	32
  4695  00FC14  25                 	db	37
  4696  00FC15  2E                 	db	46
  4697  00FC16  33                 	db	51	;'3'
  4698  00FC17  66                 	db	102	;'f'
  4699  00FC18  20                 	db	32
  4700  00FC19  41                 	db	65	;'A'
  4701  00FC1A  6D                 	db	109	;'m'
  4702  00FC1B  70                 	db	112	;'p'
  4703  00FC1C  73                 	db	115	;'s'
  4704  00FC1D  0A                 	db	10
  4705  00FC1E  0D                 	db	13
  4706  00FC1F  00                 	db	0
  4707  00FC20                     STR_134:
  4708  00FC20  56                 	db	86	;'V'
  4709  00FC21  52                 	db	82	;'R'
  4710  00FC22  45                 	db	69	;'E'
  4711  00FC23  47                 	db	71	;'G'
  4712  00FC24  20                 	db	32
  4713  00FC25  6F                 	db	111	;'o'
  4714  00FC26  72                 	db	114	;'r'
  4715  00FC27  20                 	db	32
  4716  00FC28  55                 	db	85	;'U'
  4717  00FC29  4C                 	db	76	;'L'
  4718  00FC2A  50                 	db	80	;'P'
  4719  00FC2B  20                 	db	32
  4720  00FC2C  52                 	db	82	;'R'
  4721  00FC2D  65                 	db	101	;'e'
  4722  00FC2E  61                 	db	97	;'a'
  4723  00FC2F  64                 	db	100	;'d'
  4724  00FC30  79                 	db	121	;'y'
  4725  00FC31  20                 	db	32
  4726  00FC32  46                 	db	70	;'F'
  4727  00FC33  61                 	db	97	;'a'
  4728  00FC34  75                 	db	117	;'u'
  4729  00FC35  6C                 	db	108	;'l'
  4730  00FC36  74                 	db	116	;'t'
  4731  00FC37  20                 	db	32
  4732  00FC38  52                 	db	82	;'R'
  4733  00FC39  65                 	db	101	;'e'
  4734  00FC3A  73                 	db	115	;'s'
  4735  00FC3B  65                 	db	101	;'e'
  4736  00FC3C  74                 	db	116	;'t'
  4737  00FC3D  00                 	db	0
  4738  00FC3E                     STR_119:
  4739  00FC3E  55                 	db	85	;'U'
  4740  00FC3F  73                 	db	115	;'s'
  4741  00FC40  65                 	db	101	;'e'
  4742  00FC41  72                 	db	114	;'r'
  4743  00FC42  20                 	db	32
  4744  00FC43  69                 	db	105	;'i'
  4745  00FC44  6E                 	db	110	;'n'
  4746  00FC45  70                 	db	112	;'p'
  4747  00FC46  75                 	db	117	;'u'
  4748  00FC47  74                 	db	116	;'t'
  4749  00FC48  20                 	db	32
  4750  00FC49  61                 	db	97	;'a'
  4751  00FC4A  70                 	db	112	;'p'
  4752  00FC4B  70                 	db	112	;'p'
  4753  00FC4C  65                 	db	101	;'e'
  4754  00FC4D  61                 	db	97	;'a'
  4755  00FC4E  72                 	db	114	;'r'
  4756  00FC4F  73                 	db	115	;'s'
  4757  00FC50  20                 	db	32
  4758  00FC51  69                 	db	105	;'i'
  4759  00FC52  6E                 	db	110	;'n'
  4760  00FC53  20                 	db	32
  4761  00FC54  77                 	db	119	;'w'
  4762  00FC55  68                 	db	104	;'h'
  4763  00FC56  69                 	db	105	;'i'
  4764  00FC57  74                 	db	116	;'t'
  4765  00FC58  65                 	db	101	;'e'
  4766  00FC59  0A                 	db	10
  4767  00FC5A  0D                 	db	13
  4768  00FC5B  00                 	db	0
  4769  00FC5C                     STR_130:
  4770  00FC5C  49                 	db	73	;'I'
  4771  00FC5D  6E                 	db	110	;'n'
  4772  00FC5E  74                 	db	116	;'t'
  4773  00FC5F  65                 	db	101	;'e'
  4774  00FC60  72                 	db	114	;'r'
  4775  00FC61  72                 	db	114	;'r'
  4776  00FC62  75                 	db	117	;'u'
  4777  00FC63  70                 	db	112	;'p'
  4778  00FC64  74                 	db	116	;'t'
  4779  00FC65  20                 	db	32
  4780  00FC66  57                 	db	87	;'W'
  4781  00FC67  61                 	db	97	;'a'
  4782  00FC68  6B                 	db	107	;'k'
  4783  00FC69  65                 	db	101	;'e'
  4784  00FC6A  20                 	db	32
  4785  00FC6B  55                 	db	85	;'U'
  4786  00FC6C  70                 	db	112	;'p'
  4787  00FC6D  20                 	db	32
  4788  00FC6E  46                 	db	70	;'F'
  4789  00FC6F  72                 	db	114	;'r'
  4790  00FC70  6F                 	db	111	;'o'
  4791  00FC71  6D                 	db	109	;'m'
  4792  00FC72  20                 	db	32
  4793  00FC73  53                 	db	83	;'S'
  4794  00FC74  6C                 	db	108	;'l'
  4795  00FC75  65                 	db	101	;'e'
  4796  00FC76  65                 	db	101	;'e'
  4797  00FC77  70                 	db	112	;'p'
  4798  00FC78  00                 	db	0
  4799  00FC79                     STR_128:
  4800  00FC79  57                 	db	87	;'W'
  4801  00FC7A  61                 	db	97	;'a'
  4802  00FC7B  74                 	db	116	;'t'
  4803  00FC7C  63                 	db	99	;'c'
  4804  00FC7D  68                 	db	104	;'h'
  4805  00FC7E  20                 	db	32
  4806  00FC7F  44                 	db	68	;'D'
  4807  00FC80  6F                 	db	111	;'o'
  4808  00FC81  67                 	db	103	;'g'
  4809  00FC82  20                 	db	32
  4810  00FC83  54                 	db	84	;'T'
  4811  00FC84  69                 	db	105	;'i'
  4812  00FC85  6D                 	db	109	;'m'
  4813  00FC86  65                 	db	101	;'e'
  4814  00FC87  72                 	db	114	;'r'
  4815  00FC88  20                 	db	32
  4816  00FC89  53                 	db	83	;'S'
  4817  00FC8A  6C                 	db	108	;'l'
  4818  00FC8B  65                 	db	101	;'e'
  4819  00FC8C  65                 	db	101	;'e'
  4820  00FC8D  70                 	db	112	;'p'
  4821  00FC8E  20                 	db	32
  4822  00FC8F  52                 	db	82	;'R'
  4823  00FC90  65                 	db	101	;'e'
  4824  00FC91  73                 	db	115	;'s'
  4825  00FC92  65                 	db	101	;'e'
  4826  00FC93  74                 	db	116	;'t'
  4827  00FC94  00                 	db	0
  4828  00FC95                     STR_131:
  4829  00FC95  52                 	db	82	;'R'
  4830  00FC96  45                 	db	69	;'E'
  4831  00FC97  53                 	db	83	;'S'
  4832  00FC98  45                 	db	69	;'E'
  4833  00FC99  54                 	db	84	;'T'
  4834  00FC9A  20                 	db	32
  4835  00FC9B  49                 	db	73	;'I'
  4836  00FC9C  6E                 	db	110	;'n'
  4837  00FC9D  73                 	db	115	;'s'
  4838  00FC9E  74                 	db	116	;'t'
  4839  00FC9F  72                 	db	114	;'r'
  4840  00FCA0  75                 	db	117	;'u'
  4841  00FCA1  63                 	db	99	;'c'
  4842  00FCA2  74                 	db	116	;'t'
  4843  00FCA3  69                 	db	105	;'i'
  4844  00FCA4  6F                 	db	111	;'o'
  4845  00FCA5  6E                 	db	110	;'n'
  4846  00FCA6  20                 	db	32
  4847  00FCA7  45                 	db	69	;'E'
  4848  00FCA8  78                 	db	120	;'x'
  4849  00FCA9  65                 	db	101	;'e'
  4850  00FCAA  63                 	db	99	;'c'
  4851  00FCAB  75                 	db	117	;'u'
  4852  00FCAC  74                 	db	116	;'t'
  4853  00FCAD  65                 	db	101	;'e'
  4854  00FCAE  64                 	db	100	;'d'
  4855  00FCAF  00                 	db	0
  4856  00FCB0                     STR_86:
  4857  00FCB0  4D                 	db	77	;'M'
  4858  00FCB1  65                 	db	101	;'e'
  4859  00FCB2  61                 	db	97	;'a'
  4860  00FCB3  73                 	db	115	;'s'
  4861  00FCB4  75                 	db	117	;'u'
  4862  00FCB5  72                 	db	114	;'r'
  4863  00FCB6  65                 	db	101	;'e'
  4864  00FCB7  20                 	db	32
  4865  00FCB8  44                 	db	68	;'D'
  4866  00FCB9  65                 	db	101	;'e'
  4867  00FCBA  74                 	db	116	;'t'
  4868  00FCBB  65                 	db	101	;'e'
  4869  00FCBC  63                 	db	99	;'c'
  4870  00FCBD  74                 	db	116	;'t'
  4871  00FCBE  65                 	db	101	;'e'
  4872  00FCBF  64                 	db	100	;'d'
  4873  00FCC0  20                 	db	32
  4874  00FCC1  43                 	db	67	;'C'
  4875  00FCC2  75                 	db	117	;'u'
  4876  00FCC3  72                 	db	114	;'r'
  4877  00FCC4  72                 	db	114	;'r'
  4878  00FCC5  65                 	db	101	;'e'
  4879  00FCC6  6E                 	db	110	;'n'
  4880  00FCC7  74                 	db	116	;'t'
  4881  00FCC8  3F                 	db	63	;'?'
  4882  00FCC9  00                 	db	0
  4883  00FCCA                     STR_126:
  4884  00FCCA  4D                 	db	77	;'M'
  4885  00FCCB  61                 	db	97	;'a'
  4886  00FCCC  73                 	db	115	;'s'
  4887  00FCCD  74                 	db	116	;'t'
  4888  00FCCE  65                 	db	101	;'e'
  4889  00FCCF  72                 	db	114	;'r'
  4890  00FCD0  20                 	db	32
  4891  00FCD1  43                 	db	67	;'C'
  4892  00FCD2  6C                 	db	108	;'l'
  4893  00FCD3  65                 	db	101	;'e'
  4894  00FCD4  61                 	db	97	;'a'
  4895  00FCD5  72                 	db	114	;'r'
  4896  00FCD6  20                 	db	32
  4897  00FCD7  53                 	db	83	;'S'
  4898  00FCD8  6C                 	db	108	;'l'
  4899  00FCD9  65                 	db	101	;'e'
  4900  00FCDA  65                 	db	101	;'e'
  4901  00FCDB  70                 	db	112	;'p'
  4902  00FCDC  20                 	db	32
  4903  00FCDD  52                 	db	82	;'R'
  4904  00FCDE  65                 	db	101	;'e'
  4905  00FCDF  73                 	db	115	;'s'
  4906  00FCE0  65                 	db	101	;'e'
  4907  00FCE1  74                 	db	116	;'t'
  4908  00FCE2  00                 	db	0
  4909  00FCE3                     STR_101:
  4910  00FCE3  4C                 	db	76	;'L'
  4911  00FCE4  6F                 	db	111	;'o'
  4912  00FCE5  61                 	db	97	;'a'
  4913  00FCE6  64                 	db	100	;'d'
  4914  00FCE7  20                 	db	32
  4915  00FCE8  68                 	db	104	;'h'
  4916  00FCE9  61                 	db	97	;'a'
  4917  00FCEA  73                 	db	115	;'s'
  4918  00FCEB  20                 	db	32
  4919  00FCEC  62                 	db	98	;'b'
  4920  00FCED  65                 	db	101	;'e'
  4921  00FCEE  65                 	db	101	;'e'
  4922  00FCEF  6E                 	db	110	;'n'
  4923  00FCF0  20                 	db	32
  4924  00FCF1  64                 	db	100	;'d'
  4925  00FCF2  69                 	db	105	;'i'
  4926  00FCF3  73                 	db	115	;'s'
  4927  00FCF4  61                 	db	97	;'a'
  4928  00FCF5  62                 	db	98	;'b'
  4929  00FCF6  6C                 	db	108	;'l'
  4930  00FCF7  65                 	db	101	;'e'
  4931  00FCF8  64                 	db	100	;'d'
  4932  00FCF9  0A                 	db	10
  4933  00FCFA  0D                 	db	13
  4934  00FCFB  00                 	db	0
  4935  00FCFC                     STR_102:
  4936  00FCFC  53                 	db	83	;'S'
  4937  00FCFD  65                 	db	101	;'e'
  4938  00FCFE  74                 	db	116	;'t'
  4939  00FCFF  20                 	db	32
  4940  00FD00  44                 	db	68	;'D'
  4941  00FD01  69                 	db	105	;'i'
  4942  00FD02  6D                 	db	109	;'m'
  4943  00FD03  6D                 	db	109	;'m'
  4944  00FD04  69                 	db	105	;'i'
  4945  00FD05  6E                 	db	110	;'n'
  4946  00FD06  67                 	db	103	;'g'
  4947  00FD07  20                 	db	32
  4948  00FD08  50                 	db	80	;'P'
  4949  00FD09  65                 	db	101	;'e'
  4950  00FD0A  72                 	db	114	;'r'
  4951  00FD0B  63                 	db	99	;'c'
  4952  00FD0C  65                 	db	101	;'e'
  4953  00FD0D  6E                 	db	110	;'n'
  4954  00FD0E  74                 	db	116	;'t'
  4955  00FD0F  61                 	db	97	;'a'
  4956  00FD10  67                 	db	103	;'g'
  4957  00FD11  65                 	db	101	;'e'
  4958  00FD12  3A                 	db	58	;':'
  4959  00FD13  20                 	db	32
  4960  00FD14  00                 	db	0
  4961  00FD15                     STR_70:
  4962  00FD15  4E                 	db	78	;'N'
  4963  00FD16  6F                 	db	111	;'o'
  4964  00FD17  20                 	db	32
  4965  00FD18  41                 	db	65	;'A'
  4966  00FD19  44                 	db	68	;'D'
  4967  00FD1A  43                 	db	67	;'C'
  4968  00FD1B  20                 	db	32
  4969  00FD1C  45                 	db	69	;'E'
  4970  00FD1D  72                 	db	114	;'r'
  4971  00FD1E  72                 	db	114	;'r'
  4972  00FD1F  6F                 	db	111	;'o'
  4973  00FD20  72                 	db	114	;'r'
  4974  00FD21  20                 	db	32
  4975  00FD22  64                 	db	100	;'d'
  4976  00FD23  65                 	db	101	;'e'
  4977  00FD24  74                 	db	116	;'t'
  4978  00FD25  65                 	db	101	;'e'
  4979  00FD26  63                 	db	99	;'c'
  4980  00FD27  74                 	db	116	;'t'
  4981  00FD28  65                 	db	101	;'e'
  4982  00FD29  64                 	db	100	;'d'
  4983  00FD2A  0A                 	db	10
  4984  00FD2B  0D                 	db	13
  4985  00FD2C  00                 	db	0
  4986  00FD2D                     STR_118:
  4987  00FD2D  45                 	db	69	;'E'
  4988  00FD2E  72                 	db	114	;'r'
  4989  00FD2F  72                 	db	114	;'r'
  4990  00FD30  6F                 	db	111	;'o'
  4991  00FD31  72                 	db	114	;'r'
  4992  00FD32  73                 	db	115	;'s'
  4993  00FD33  20                 	db	32
  4994  00FD34  61                 	db	97	;'a'
  4995  00FD35  70                 	db	112	;'p'
  4996  00FD36  70                 	db	112	;'p'
  4997  00FD37  65                 	db	101	;'e'
  4998  00FD38  61                 	db	97	;'a'
  4999  00FD39  72                 	db	114	;'r'
  5000  00FD3A  20                 	db	32
  5001  00FD3B  69                 	db	105	;'i'
  5002  00FD3C  6E                 	db	110	;'n'
  5003  00FD3D  20                 	db	32
  5004  00FD3E  72                 	db	114	;'r'
  5005  00FD3F  65                 	db	101	;'e'
  5006  00FD40  64                 	db	100	;'d'
  5007  00FD41  0A                 	db	10
  5008  00FD42  0D                 	db	13
  5009  00FD43  00                 	db	0
  5010  00FD44                     STR_133:
  5011  00FD44  53                 	db	83	;'S'
  5012  00FD45  74                 	db	116	;'t'
  5013  00FD46  61                 	db	97	;'a'
  5014  00FD47  63                 	db	99	;'c'
  5015  00FD48  6B                 	db	107	;'k'
  5016  00FD49  20                 	db	32
  5017  00FD4A  55                 	db	85	;'U'
  5018  00FD4B  6E                 	db	110	;'n'
  5019  00FD4C  64                 	db	100	;'d'
  5020  00FD4D  65                 	db	101	;'e'
  5021  00FD4E  72                 	db	114	;'r'
  5022  00FD4F  66                 	db	102	;'f'
  5023  00FD50  6C                 	db	108	;'l'
  5024  00FD51  6F                 	db	111	;'o'
  5025  00FD52  77                 	db	119	;'w'
  5026  00FD53  20                 	db	32
  5027  00FD54  52                 	db	82	;'R'
  5028  00FD55  65                 	db	101	;'e'
  5029  00FD56  73                 	db	115	;'s'
  5030  00FD57  65                 	db	101	;'e'
  5031  00FD58  74                 	db	116	;'t'
  5032  00FD59  00                 	db	0
  5033  00FD5A                     STR_67:
  5034  00FD5A  49                 	db	73	;'I'
  5035  00FD5B  6E                 	db	110	;'n'
  5036  00FD5C  74                 	db	116	;'t'
  5037  00FD5D  65                 	db	101	;'e'
  5038  00FD5E  72                 	db	114	;'r'
  5039  00FD5F  6E                 	db	110	;'n'
  5040  00FD60  61                 	db	97	;'a'
  5041  00FD61  6C                 	db	108	;'l'
  5042  00FD62  20                 	db	32
  5043  00FD63  46                 	db	70	;'F'
  5044  00FD64  56                 	db	86	;'V'
  5045  00FD65  52                 	db	82	;'R'
  5046  00FD66  20                 	db	32
  5047  00FD67  42                 	db	66	;'B'
  5048  00FD68  75                 	db	117	;'u'
  5049  00FD69  66                 	db	102	;'f'
  5050  00FD6A  66                 	db	102	;'f'
  5051  00FD6B  65                 	db	101	;'e'
  5052  00FD6C  72                 	db	114	;'r'
  5053  00FD6D  20                 	db	32
  5054  00FD6E  31                 	db	49	;'1'
  5055  00FD6F  00                 	db	0
  5056  00FD70                     STR_132:
  5057  00FD70  53                 	db	83	;'S'
  5058  00FD71  74                 	db	116	;'t'
  5059  00FD72  61                 	db	97	;'a'
  5060  00FD73  63                 	db	99	;'c'
  5061  00FD74  6B                 	db	107	;'k'
  5062  00FD75  20                 	db	32
  5063  00FD76  4F                 	db	79	;'O'
  5064  00FD77  76                 	db	118	;'v'
  5065  00FD78  65                 	db	101	;'e'
  5066  00FD79  72                 	db	114	;'r'
  5067  00FD7A  66                 	db	102	;'f'
  5068  00FD7B  6C                 	db	108	;'l'
  5069  00FD7C  6F                 	db	111	;'o'
  5070  00FD7D  77                 	db	119	;'w'
  5071  00FD7E  20                 	db	32
  5072  00FD7F  52                 	db	82	;'R'
  5073  00FD80  65                 	db	101	;'e'
  5074  00FD81  73                 	db	115	;'s'
  5075  00FD82  65                 	db	101	;'e'
  5076  00FD83  74                 	db	116	;'t'
  5077  00FD84  00                 	db	0
  5078  00FD85                     STR_72:
  5079  00FD85  43                 	db	67	;'C'
  5080  00FD86  6C                 	db	108	;'l'
  5081  00FD87  65                 	db	101	;'e'
  5082  00FD88  61                 	db	97	;'a'
  5083  00FD89  72                 	db	114	;'r'
  5084  00FD8A  69                 	db	105	;'i'
  5085  00FD8B  6E                 	db	110	;'n'
  5086  00FD8C  67                 	db	103	;'g'
  5087  00FD8D  20                 	db	32
  5088  00FD8E  41                 	db	65	;'A'
  5089  00FD8F  44                 	db	68	;'D'
  5090  00FD90  43                 	db	67	;'C'
  5091  00FD91  20                 	db	32
  5092  00FD92  45                 	db	69	;'E'
  5093  00FD93  72                 	db	114	;'r'
  5094  00FD94  72                 	db	114	;'r'
  5095  00FD95  6F                 	db	111	;'o'
  5096  00FD96  72                 	db	114	;'r'
  5097  00FD97  0A                 	db	10
  5098  00FD98  0D                 	db	13
  5099  00FD99  00                 	db	0
  5100  00FD9A                     STR_90:
  5101  00FD9A  4D                 	db	77	;'M'
  5102  00FD9B  65                 	db	101	;'e'
  5103  00FD9C  61                 	db	97	;'a'
  5104  00FD9D  73                 	db	115	;'s'
  5105  00FD9E  75                 	db	117	;'u'
  5106  00FD9F  72                 	db	114	;'r'
  5107  00FDA0  65                 	db	101	;'e'
  5108  00FDA1  20                 	db	32
  5109  00FDA2  52                 	db	82	;'R'
  5110  00FDA3  4D                 	db	77	;'M'
  5111  00FDA4  53                 	db	83	;'S'
  5112  00FDA5  20                 	db	32
  5113  00FDA6  56                 	db	86	;'V'
  5114  00FDA7  6F                 	db	111	;'o'
  5115  00FDA8  6C                 	db	108	;'l'
  5116  00FDA9  74                 	db	116	;'t'
  5117  00FDAA  61                 	db	97	;'a'
  5118  00FDAB  67                 	db	103	;'g'
  5119  00FDAC  65                 	db	101	;'e'
  5120  00FDAD  3F                 	db	63	;'?'
  5121  00FDAE  00                 	db	0
  5122  00FDAF                     STR_88:
  5123  00FDAF  4D                 	db	77	;'M'
  5124  00FDB0  65                 	db	101	;'e'
  5125  00FDB1  61                 	db	97	;'a'
  5126  00FDB2  73                 	db	115	;'s'
  5127  00FDB3  75                 	db	117	;'u'
  5128  00FDB4  72                 	db	114	;'r'
  5129  00FDB5  65                 	db	101	;'e'
  5130  00FDB6  20                 	db	32
  5131  00FDB7  52                 	db	82	;'R'
  5132  00FDB8  4D                 	db	77	;'M'
  5133  00FDB9  53                 	db	83	;'S'
  5134  00FDBA  20                 	db	32
  5135  00FDBB  43                 	db	67	;'C'
  5136  00FDBC  75                 	db	117	;'u'
  5137  00FDBD  72                 	db	114	;'r'
  5138  00FDBE  72                 	db	114	;'r'
  5139  00FDBF  65                 	db	101	;'e'
  5140  00FDC0  6E                 	db	110	;'n'
  5141  00FDC1  74                 	db	116	;'t'
  5142  00FDC2  3F                 	db	63	;'?'
  5143  00FDC3  00                 	db	0
  5144  00FDC4                     STR_125:
  5145  00FDC4  4D                 	db	77	;'M'
  5146  00FDC5  61                 	db	97	;'a'
  5147  00FDC6  73                 	db	115	;'s'
  5148  00FDC7  74                 	db	116	;'t'
  5149  00FDC8  65                 	db	101	;'e'
  5150  00FDC9  72                 	db	114	;'r'
  5151  00FDCA  20                 	db	32
  5152  00FDCB  43                 	db	67	;'C'
  5153  00FDCC  6C                 	db	108	;'l'
  5154  00FDCD  65                 	db	101	;'e'
  5155  00FDCE  61                 	db	97	;'a'
  5156  00FDCF  72                 	db	114	;'r'
  5157  00FDD0  20                 	db	32
  5158  00FDD1  52                 	db	82	;'R'
  5159  00FDD2  65                 	db	101	;'e'
  5160  00FDD3  73                 	db	115	;'s'
  5161  00FDD4  65                 	db	101	;'e'
  5162  00FDD5  74                 	db	116	;'t'
  5163  00FDD6  00                 	db	0
  5164  00FDD7                     STR_80:
  5165  00FDD7  4D                 	db	77	;'M'
  5166  00FDD8  65                 	db	101	;'e'
  5167  00FDD9  61                 	db	97	;'a'
  5168  00FDDA  73                 	db	115	;'s'
  5169  00FDDB  75                 	db	117	;'u'
  5170  00FDDC  72                 	db	114	;'r'
  5171  00FDDD  65                 	db	101	;'e'
  5172  00FDDE  20                 	db	32
  5173  00FDDF  44                 	db	68	;'D'
  5174  00FDE0  69                 	db	105	;'i'
  5175  00FDE1  65                 	db	101	;'e'
  5176  00FDE2  20                 	db	32
  5177  00FDE3  54                 	db	84	;'T'
  5178  00FDE4  65                 	db	101	;'e'
  5179  00FDE5  6D                 	db	109	;'m'
  5180  00FDE6  70                 	db	112	;'p'
  5181  00FDE7  3F                 	db	63	;'?'
  5182  00FDE8  00                 	db	0
  5183  00FDE9                     STR_136:
  5184  00FDE9  30                 	db	48	;'0'
  5185  00FDEA  31                 	db	49	;'1'
  5186  00FDEB  32                 	db	50	;'2'
  5187  00FDEC  33                 	db	51	;'3'
  5188  00FDED  34                 	db	52	;'4'
  5189  00FDEE  35                 	db	53	;'5'
  5190  00FDEF  36                 	db	54	;'6'
  5191  00FDF0  37                 	db	55	;'7'
  5192  00FDF1  38                 	db	56	;'8'
  5193  00FDF2  39                 	db	57	;'9'
  5194  00FDF3  41                 	db	65	;'A'
  5195  00FDF4  42                 	db	66	;'B'
  5196  00FDF5  43                 	db	67	;'C'
  5197  00FDF6  44                 	db	68	;'D'
  5198  00FDF7  45                 	db	69	;'E'
  5199  00FDF8  46                 	db	70	;'F'
  5200  00FDF9  00                 	db	0
  5201  00FDFA                     STR_51:
  5202  00FDFA  41                 	db	65	;'A'
  5203  00FDFB  43                 	db	67	;'C'
  5204  00FDFC  20                 	db	32
  5205  00FDFD  50                 	db	80	;'P'
  5206  00FDFE  6F                 	db	111	;'o'
  5207  00FDFF  77                 	db	119	;'w'
  5208  00FE00  65                 	db	101	;'e'
  5209  00FE01  72                 	db	114	;'r'
  5210  00FE02  20                 	db	32
  5211  00FE03  4D                 	db	77	;'M'
  5212  00FE04  65                 	db	101	;'e'
  5213  00FE05  74                 	db	116	;'t'
  5214  00FE06  65                 	db	101	;'e'
  5215  00FE07  72                 	db	114	;'r'
  5216  00FE08  0A                 	db	10
  5217  00FE09  0D                 	db	13
  5218  00FE0A  00                 	db	0
  5219  00FE0B                     STR_73:
  5220  00FE0B  56                 	db	86	;'V'
  5221  00FE0C  43                 	db	67	;'C'
  5222  00FE0D  43                 	db	67	;'C'
  5223  00FE0E  20                 	db	32
  5224  00FE0F  4F                 	db	79	;'O'
  5225  00FE10  76                 	db	118	;'v'
  5226  00FE11  65                 	db	101	;'e'
  5227  00FE12  72                 	db	114	;'r'
  5228  00FE13  76                 	db	118	;'v'
  5229  00FE14  6F                 	db	111	;'o'
  5230  00FE15  6C                 	db	108	;'l'
  5231  00FE16  74                 	db	116	;'t'
  5232  00FE17  61                 	db	97	;'a'
  5233  00FE18  67                 	db	103	;'g'
  5234  00FE19  65                 	db	101	;'e'
  5235  00FE1A  3F                 	db	63	;'?'
  5236  00FE1B  00                 	db	0
  5237  00FE1C                     STR_68:
  5238  00FE1C  53                 	db	83	;'S'
  5239  00FE1D  70                 	db	112	;'p'
  5240  00FE1E  75                 	db	117	;'u'
  5241  00FE1F  72                 	db	114	;'r'
  5242  00FE20  69                 	db	105	;'i'
  5243  00FE21  6F                 	db	111	;'o'
  5244  00FE22  75                 	db	117	;'u'
  5245  00FE23  73                 	db	115	;'s'
  5246  00FE24  20                 	db	32
  5247  00FE25  63                 	db	99	;'c'
  5248  00FE26  68                 	db	104	;'h'
  5249  00FE27  61                 	db	97	;'a'
  5250  00FE28  6E                 	db	110	;'n'
  5251  00FE29  6E                 	db	110	;'n'
  5252  00FE2A  65                 	db	101	;'e'
  5253  00FE2B  6C                 	db	108	;'l'
  5254  00FE2C  00                 	db	0
  5255  00FE2D                     STR_124:
  5256  00FE2D  42                 	db	66	;'B'
  5257  00FE2E  72                 	db	114	;'r'
  5258  00FE2F  6F                 	db	111	;'o'
  5259  00FE30  77                 	db	119	;'w'
  5260  00FE31  6E                 	db	110	;'n'
  5261  00FE32  20                 	db	32
  5262  00FE33  4F                 	db	79	;'O'
  5263  00FE34  75                 	db	117	;'u'
  5264  00FE35  74                 	db	116	;'t'
  5265  00FE36  20                 	db	32
  5266  00FE37  52                 	db	82	;'R'
  5267  00FE38  65                 	db	101	;'e'
  5268  00FE39  73                 	db	115	;'s'
  5269  00FE3A  65                 	db	101	;'e'
  5270  00FE3B  74                 	db	116	;'t'
  5271  00FE3C  00                 	db	0
  5272  00FE3D                     STR_76:
  5273  00FE3D  4D                 	db	77	;'M'
  5274  00FE3E  65                 	db	101	;'e'
  5275  00FE3F  61                 	db	97	;'a'
  5276  00FE40  73                 	db	115	;'s'
  5277  00FE41  75                 	db	117	;'u'
  5278  00FE42  72                 	db	114	;'r'
  5279  00FE43  65                 	db	101	;'e'
  5280  00FE44  20                 	db	32
  5281  00FE45  50                 	db	80	;'P'
  5282  00FE46  4F                 	db	79	;'O'
  5283  00FE47  53                 	db	83	;'S'
  5284  00FE48  33                 	db	51	;'3'
  5285  00FE49  50                 	db	80	;'P'
  5286  00FE4A  33                 	db	51	;'3'
  5287  00FE4B  3F                 	db	63	;'?'
  5288  00FE4C  00                 	db	0
  5289  00FE4D                     STR_109:
  5290  00FE4D  44                 	db	68	;'D'
  5291  00FE4E  65                 	db	101	;'e'
  5292  00FE4F  76                 	db	118	;'v'
  5293  00FE50  69                 	db	105	;'i'
  5294  00FE51  63                 	db	99	;'c'
  5295  00FE52  65                 	db	101	;'e'
  5296  00FE53  20                 	db	32
  5297  00FE54  4F                 	db	79	;'O'
  5298  00FE55  6E                 	db	110	;'n'
  5299  00FE56  20                 	db	32
  5300  00FE57  54                 	db	84	;'T'
  5301  00FE58  69                 	db	105	;'i'
  5302  00FE59  6D                 	db	109	;'m'
  5303  00FE5A  65                 	db	101	;'e'
  5304  00FE5B  3F                 	db	63	;'?'
  5305  00FE5C  00                 	db	0
  5306  00FE5D                     STR_47:
  5307  00FE5D  43                 	db	67	;'C'
  5308  00FE5E  61                 	db	97	;'a'
  5309  00FE5F  75                 	db	117	;'u'
  5310  00FE60  73                 	db	115	;'s'
  5311  00FE61  65                 	db	101	;'e'
  5312  00FE62  20                 	db	32
  5313  00FE63  6F                 	db	111	;'o'
  5314  00FE64  66                 	db	102	;'f'
  5315  00FE65  20                 	db	32
  5316  00FE66  52                 	db	82	;'R'
  5317  00FE67  65                 	db	101	;'e'
  5318  00FE68  73                 	db	115	;'s'
  5319  00FE69  65                 	db	101	;'e'
  5320  00FE6A  74                 	db	116	;'t'
  5321  00FE6B  3F                 	db	63	;'?'
  5322  00FE6C  00                 	db	0
  5323  00FE6D                     STR_96:
  5324  00FE6D  44                 	db	68	;'D'
  5325  00FE6E  69                 	db	105	;'i'
  5326  00FE6F  73                 	db	115	;'s'
  5327  00FE70  61                 	db	97	;'a'
  5328  00FE71  62                 	db	98	;'b'
  5329  00FE72  6C                 	db	108	;'l'
  5330  00FE73  65                 	db	101	;'e'
  5331  00FE74  20                 	db	32
  5332  00FE75  44                 	db	68	;'D'
  5333  00FE76  69                 	db	105	;'i'
  5334  00FE77  6D                 	db	109	;'m'
  5335  00FE78  6D                 	db	109	;'m'
  5336  00FE79  69                 	db	105	;'i'
  5337  00FE7A  6E                 	db	110	;'n'
  5338  00FE7B  67                 	db	103	;'g'
  5339  00FE7C  00                 	db	0
  5340  00FE7D                     STR_71:
  5341  00FE7D  43                 	db	67	;'C'
  5342  00FE7E  6C                 	db	108	;'l'
  5343  00FE7F  65                 	db	101	;'e'
  5344  00FE80  61                 	db	97	;'a'
  5345  00FE81  72                 	db	114	;'r'
  5346  00FE82  20                 	db	32
  5347  00FE83  41                 	db	65	;'A'
  5348  00FE84  44                 	db	68	;'D'
  5349  00FE85  43                 	db	67	;'C'
  5350  00FE86  20                 	db	32
  5351  00FE87  45                 	db	69	;'E'
  5352  00FE88  72                 	db	114	;'r'
  5353  00FE89  72                 	db	114	;'r'
  5354  00FE8A  6F                 	db	111	;'o'
  5355  00FE8B  72                 	db	114	;'r'
  5356  00FE8C  00                 	db	0
  5357  00FE8D                     STR_123:
  5358  00FE8D  50                 	db	80	;'P'
  5359  00FE8E  6F                 	db	111	;'o'
  5360  00FE8F  77                 	db	119	;'w'
  5361  00FE90  65                 	db	101	;'e'
  5362  00FE91  72                 	db	114	;'r'
  5363  00FE92  20                 	db	32
  5364  00FE93  4F                 	db	79	;'O'
  5365  00FE94  6E                 	db	110	;'n'
  5366  00FE95  20                 	db	32
  5367  00FE96  52                 	db	82	;'R'
  5368  00FE97  65                 	db	101	;'e'
  5369  00FE98  73                 	db	115	;'s'
  5370  00FE99  65                 	db	101	;'e'
  5371  00FE9A  74                 	db	116	;'t'
  5372  00FE9B  00                 	db	0
  5373  00FE9C                     STR_78:
  5374  00FE9C  4D                 	db	77	;'M'
  5375  00FE9D  65                 	db	101	;'e'
  5376  00FE9E  61                 	db	97	;'a'
  5377  00FE9F  73                 	db	115	;'s'
  5378  00FEA0  75                 	db	117	;'u'
  5379  00FEA1  72                 	db	114	;'r'
  5380  00FEA2  65                 	db	101	;'e'
  5381  00FEA3  20                 	db	32
  5382  00FEA4  50                 	db	80	;'P'
  5383  00FEA5  4F                 	db	79	;'O'
  5384  00FEA6  53                 	db	83	;'S'
  5385  00FEA7  31                 	db	49	;'1'
  5386  00FEA8  32                 	db	50	;'2'
  5387  00FEA9  3F                 	db	63	;'?'
  5388  00FEAA  00                 	db	0
  5389  00FEAB                     STR_92:
  5390  00FEAB  4D                 	db	77	;'M'
  5391  00FEAC  65                 	db	101	;'e'
  5392  00FEAD  61                 	db	97	;'a'
  5393  00FEAE  73                 	db	115	;'s'
  5394  00FEAF  75                 	db	117	;'u'
  5395  00FEB0  72                 	db	114	;'r'
  5396  00FEB1  65                 	db	101	;'e'
  5397  00FEB2  20                 	db	32
  5398  00FEB3  50                 	db	80	;'P'
  5399  00FEB4  6F                 	db	111	;'o'
  5400  00FEB5  77                 	db	119	;'w'
  5401  00FEB6  65                 	db	101	;'e'
  5402  00FEB7  72                 	db	114	;'r'
  5403  00FEB8  3F                 	db	63	;'?'
  5404  00FEB9  00                 	db	0
  5405  00FEBA                     STR_94:
  5406  00FEBA  45                 	db	69	;'E'
  5407  00FEBB  6E                 	db	110	;'n'
  5408  00FEBC  61                 	db	97	;'a'
  5409  00FEBD  62                 	db	98	;'b'
  5410  00FEBE  6C                 	db	108	;'l'
  5411  00FEBF  65                 	db	101	;'e'
  5412  00FEC0  20                 	db	32
  5413  00FEC1  44                 	db	68	;'D'
  5414  00FEC2  69                 	db	105	;'i'
  5415  00FEC3  6D                 	db	109	;'m'
  5416  00FEC4  6D                 	db	109	;'m'
  5417  00FEC5  69                 	db	105	;'i'
  5418  00FEC6  6E                 	db	110	;'n'
  5419  00FEC7  67                 	db	103	;'g'
  5420  00FEC8  00                 	db	0
  5421  00FEC9                     STR_66:
  5422  00FEC9  49                 	db	73	;'I'
  5423  00FECA  6E                 	db	110	;'n'
  5424  00FECB  74                 	db	116	;'t'
  5425  00FECC  65                 	db	101	;'e'
  5426  00FECD  72                 	db	114	;'r'
  5427  00FECE  6E                 	db	110	;'n'
  5428  00FECF  61                 	db	97	;'a'
  5429  00FED0  6C                 	db	108	;'l'
  5430  00FED1  20                 	db	32
  5431  00FED2  44                 	db	68	;'D'
  5432  00FED3  41                 	db	65	;'A'
  5433  00FED4  43                 	db	67	;'C'
  5434  00FED5  31                 	db	49	;'1'
  5435  00FED6  00                 	db	0
  5436  00FED7                     STR_84:
  5437  00FED7  4D                 	db	77	;'M'
  5438  00FED8  65                 	db	101	;'e'
  5439  00FED9  61                 	db	97	;'a'
  5440  00FEDA  73                 	db	115	;'s'
  5441  00FEDB  75                 	db	117	;'u'
  5442  00FEDC  72                 	db	114	;'r'
  5443  00FEDD  65                 	db	101	;'e'
  5444  00FEDE  20                 	db	32
  5445  00FEDF  41                 	db	65	;'A'
  5446  00FEE0  56                 	db	86	;'V'
  5447  00FEE1  53                 	db	83	;'S'
  5448  00FEE2  53                 	db	83	;'S'
  5449  00FEE3  3F                 	db	63	;'?'
  5450  00FEE4  00                 	db	0
  5451  00FEE5                     STR_111:
  5452  00FEE5  4C                 	db	76	;'L'
  5453  00FEE6  6F                 	db	111	;'o'
  5454  00FEE7  61                 	db	97	;'a'
  5455  00FEE8  64                 	db	100	;'d'
  5456  00FEE9  20                 	db	32
  5457  00FEEA  4F                 	db	79	;'O'
  5458  00FEEB  6E                 	db	110	;'n'
  5459  00FEEC  20                 	db	32
  5460  00FEED  54                 	db	84	;'T'
  5461  00FEEE  69                 	db	105	;'i'
  5462  00FEEF  6D                 	db	109	;'m'
  5463  00FEF0  65                 	db	101	;'e'
  5464  00FEF1  3F                 	db	63	;'?'
  5465  00FEF2  00                 	db	0
  5466  00FEF3                     STR_64:
  5467  00FEF3  49                 	db	73	;'I'
  5468  00FEF4  6E                 	db	110	;'n'
  5469  00FEF5  74                 	db	116	;'t'
  5470  00FEF6  65                 	db	101	;'e'
  5471  00FEF7  72                 	db	114	;'r'
  5472  00FEF8  6E                 	db	110	;'n'
  5473  00FEF9  61                 	db	97	;'a'
  5474  00FEFA  6C                 	db	108	;'l'
  5475  00FEFB  20                 	db	32
  5476  00FEFC  41                 	db	65	;'A'
  5477  00FEFD  56                 	db	86	;'V'
  5478  00FEFE  53                 	db	83	;'S'
  5479  00FEFF  53                 	db	83	;'S'
  5480  00FF00  00                 	db	0
  5481  00FF01                     STR_65:
  5482  00FF01  49                 	db	73	;'I'
  5483  00FF02  6E                 	db	110	;'n'
  5484  00FF03  74                 	db	116	;'t'
  5485  00FF04  65                 	db	101	;'e'
  5486  00FF05  72                 	db	114	;'r'
  5487  00FF06  6E                 	db	110	;'n'
  5488  00FF07  61                 	db	97	;'a'
  5489  00FF08  6C                 	db	108	;'l'
  5490  00FF09  20                 	db	32
  5491  00FF0A  54                 	db	84	;'T'
  5492  00FF0B  65                 	db	101	;'e'
  5493  00FF0C  6D                 	db	109	;'m'
  5494  00FF0D  70                 	db	112	;'p'
  5495  00FF0E  00                 	db	0
  5496  00FF0F                     STR_121:
  5497  00FF0F  50                 	db	80	;'P'
  5498  00FF10  49                 	db	73	;'I'
  5499  00FF11  43                 	db	67	;'C'
  5500  00FF12  31                 	db	49	;'1'
  5501  00FF13  38                 	db	56	;'8'
  5502  00FF14  4C                 	db	76	;'L'
  5503  00FF15  46                 	db	70	;'F'
  5504  00FF16  36                 	db	54	;'6'
  5505  00FF17  37                 	db	55	;'7'
  5506  00FF18  4B                 	db	75	;'K'
  5507  00FF19  34                 	db	52	;'4'
  5508  00FF1A  30                 	db	48	;'0'
  5509  00FF1B  00                 	db	0
  5510  00FF1C                     STR_55:
  5511  00FF1C  52                 	db	82	;'R'
  5512  00FF1D  65                 	db	101	;'e'
  5513  00FF1E  76                 	db	118	;'v'
  5514  00FF1F  69                 	db	105	;'i'
  5515  00FF20  73                 	db	115	;'s'
  5516  00FF21  69                 	db	105	;'i'
  5517  00FF22  6F                 	db	111	;'o'
  5518  00FF23  6E                 	db	110	;'n'
  5519  00FF24  20                 	db	32
  5520  00FF25  49                 	db	73	;'I'
  5521  00FF26  44                 	db	68	;'D'
  5522  00FF27  3F                 	db	63	;'?'
  5523  00FF28  00                 	db	0
  5524  00FF29                     STR_82:
  5525  00FF29  4D                 	db	77	;'M'
  5526  00FF2A  65                 	db	101	;'e'
  5527  00FF2B  61                 	db	97	;'a'
  5528  00FF2C  73                 	db	115	;'s'
  5529  00FF2D  75                 	db	117	;'u'
  5530  00FF2E  72                 	db	114	;'r'
  5531  00FF2F  65                 	db	101	;'e'
  5532  00FF30  20                 	db	32
  5533  00FF31  46                 	db	70	;'F'
  5534  00FF32  56                 	db	86	;'V'
  5535  00FF33  52                 	db	82	;'R'
  5536  00FF34  3F                 	db	63	;'?'
  5537  00FF35  00                 	db	0
  5538  00FF36                     STR_100:
  5539  00FF36  44                 	db	68	;'D'
  5540  00FF37  69                 	db	105	;'i'
  5541  00FF38  73                 	db	115	;'s'
  5542  00FF39  61                 	db	97	;'a'
  5543  00FF3A  62                 	db	98	;'b'
  5544  00FF3B  6C                 	db	108	;'l'
  5545  00FF3C  65                 	db	101	;'e'
  5546  00FF3D  20                 	db	32
  5547  00FF3E  4C                 	db	76	;'L'
  5548  00FF3F  6F                 	db	111	;'o'
  5549  00FF40  61                 	db	97	;'a'
  5550  00FF41  64                 	db	100	;'d'
  5551  00FF42  00                 	db	0
  5552  00FF43                     STR_120:
  5553  00FF43  50                 	db	80	;'P'
  5554  00FF44  49                 	db	73	;'I'
  5555  00FF45  43                 	db	67	;'C'
  5556  00FF46  31                 	db	49	;'1'
  5557  00FF47  38                 	db	56	;'8'
  5558  00FF48  46                 	db	70	;'F'
  5559  00FF49  36                 	db	54	;'6'
  5560  00FF4A  37                 	db	55	;'7'
  5561  00FF4B  4B                 	db	75	;'K'
  5562  00FF4C  34                 	db	52	;'4'
  5563  00FF4D  30                 	db	48	;'0'
  5564  00FF4E  00                 	db	0
  5565  00FF4F                     STR_98:
  5566  00FF4F  45                 	db	69	;'E'
  5567  00FF50  6E                 	db	110	;'n'
  5568  00FF51  61                 	db	97	;'a'
  5569  00FF52  62                 	db	98	;'b'
  5570  00FF53  6C                 	db	108	;'l'
  5571  00FF54  65                 	db	101	;'e'
  5572  00FF55  20                 	db	32
  5573  00FF56  4C                 	db	76	;'L'
  5574  00FF57  6F                 	db	111	;'o'
  5575  00FF58  61                 	db	97	;'a'
  5576  00FF59  64                 	db	100	;'d'
  5577  00FF5A  00                 	db	0
  5578  00FF5B                     STR_53:
  5579  00FF5B  44                 	db	68	;'D'
  5580  00FF5C  65                 	db	101	;'e'
  5581  00FF5D  76                 	db	118	;'v'
  5582  00FF5E  69                 	db	105	;'i'
  5583  00FF5F  63                 	db	99	;'c'
  5584  00FF60  65                 	db	101	;'e'
  5585  00FF61  20                 	db	32
  5586  00FF62  49                 	db	73	;'I'
  5587  00FF63  44                 	db	68	;'D'
  5588  00FF64  3F                 	db	63	;'?'
  5589  00FF65  00                 	db	0
  5590  00FF66                     STR_60:
  5591  00FF66  41                 	db	65	;'A'
  5592  00FF67  44                 	db	68	;'D'
  5593  00FF68  43                 	db	67	;'C'
  5594  00FF69  20                 	db	32
  5595  00FF6A  45                 	db	69	;'E'
  5596  00FF6B  72                 	db	114	;'r'
  5597  00FF6C  72                 	db	114	;'r'
  5598  00FF6D  6F                 	db	111	;'o'
  5599  00FF6E  72                 	db	114	;'r'
  5600  00FF6F  3F                 	db	63	;'?'
  5601  00FF70  00                 	db	0
  5602  00FF71                     STR_122:
  5603  00FF71  55                 	db	85	;'U'
  5604  00FF72  6E                 	db	110	;'n'
  5605  00FF73  64                 	db	100	;'d'
  5606  00FF74  65                 	db	101	;'e'
  5607  00FF75  66                 	db	102	;'f'
  5608  00FF76  69                 	db	105	;'i'
  5609  00FF77  6E                 	db	110	;'n'
  5610  00FF78  65                 	db	101	;'e'
  5611  00FF79  64                 	db	100	;'d'
  5612  00FF7A  00                 	db	0
  5613  00FF7B                     STR_57:
  5614  00FF7B  55                 	db	85	;'U'
  5615  00FF7C  73                 	db	115	;'s'
  5616  00FF7D  65                 	db	101	;'e'
  5617  00FF7E  72                 	db	114	;'r'
  5618  00FF7F  20                 	db	32
  5619  00FF80  49                 	db	73	;'I'
  5620  00FF81  44                 	db	68	;'D'
  5621  00FF82  73                 	db	115	;'s'
  5622  00FF83  3F                 	db	63	;'?'
  5623  00FF84  00                 	db	0
  5624  00FF85                     STR_135:
  5625  00FF85  28                 	db	40
  5626  00FF86  6E                 	db	110	;'n'
  5627  00FF87  75                 	db	117	;'u'
  5628  00FF88  6C                 	db	108	;'l'
  5629  00FF89  6C                 	db	108	;'l'
  5630  00FF8A  29                 	db	41
  5631  00FF8B  00                 	db	0
  5632  00FF8C                     STR_63:
  5633  00FF8C  50                 	db	80	;'P'
  5634  00FF8D  4F                 	db	79	;'O'
  5635  00FF8E  53                 	db	83	;'S'
  5636  00FF8F  33                 	db	51	;'3'
  5637  00FF90  50                 	db	80	;'P'
  5638  00FF91  33                 	db	51	;'3'
  5639  00FF92  00                 	db	0
  5640  00FF93                     STR_62:
  5641  00FF93  50                 	db	80	;'P'
  5642  00FF94  4F                 	db	79	;'O'
  5643  00FF95  53                 	db	83	;'S'
  5644  00FF96  31                 	db	49	;'1'
  5645  00FF97  32                 	db	50	;'2'
  5646  00FF98  00                 	db	0
  5647  00FF99                     STR_49:
  5648  00FF99  2A                 	db	42
  5649  00FF9A  49                 	db	73	;'I'
  5650  00FF9B  44                 	db	68	;'D'
  5651  00FF9C  4E                 	db	78	;'N'
  5652  00FF9D  3F                 	db	63	;'?'
  5653  00FF9E  00                 	db	0
  5654  00FF9F                     STR_44:
  5655  00FF9F  43                 	db	67	;'C'
  5656  00FFA0  6C                 	db	108	;'l'
  5657  00FFA1  65                 	db	101	;'e'
  5658  00FFA2  61                 	db	97	;'a'
  5659  00FFA3  72                 	db	114	;'r'
  5660  00FFA4  00                 	db	0
  5661  00FFA5                     STR_61:
  5662  00FFA5  49                 	db	73	;'I'
  5663  00FFA6  53                 	db	83	;'S'
  5664  00FFA7  4E                 	db	78	;'N'
  5665  00FFA8  53                 	db	83	;'S'
  5666  00FFA9  00                 	db	0
  5667  00FFAA                     STR_113:
  5668  00FFAA  48                 	db	72	;'H'
  5669  00FFAB  65                 	db	101	;'e'
  5670  00FFAC  6C                 	db	108	;'l'
  5671  00FFAD  70                 	db	112	;'p'
  5672  00FFAE  00                 	db	0
  5673  00FFAF                     STR_2:
  5674  00FFAF  1B                 	db	27
  5675  00FFB0  5B                 	db	91	;'['
  5676  00FFB1  32                 	db	50	;'2'
  5677  00FFB2  4A                 	db	74	;'J'
  5678  00FFB3  00                 	db	0
  5679  00FFB4                     STR_50:
  5680  00FFB4  49                 	db	73	;'I'
  5681  00FFB5  44                 	db	68	;'D'
  5682  00FFB6  4E                 	db	78	;'N'
  5683  00FFB7  00                 	db	0
  5684  00FFB8                     STR_3:
  5685  00FFB8  1B                 	db	27
  5686  00FFB9  5B                 	db	91	;'['
  5687  00FFBA  48                 	db	72	;'H'
  5688  00FFBB  00                 	db	0
  5689  00FFBC  1B                 	db	27
  5690  00FFBD  5B                 	db	91	;'['
  5691  00FFBE  73                 	db	115	;'s'
  5692  00FFBF  00                 	db	0
  5693  00FFC0  1B                 	db	27
  5694  00FFC1  5B                 	db	91	;'['
  5695  00FFC2  75                 	db	117	;'u'
  5696  00FFC3  00                 	db	0
  5697  00FFC4                     STR_1:
  5698  00FFC4  1B                 	db	27
  5699  00FFC5  5B                 	db	91	;'['
  5700  00FFC6  4B                 	db	75	;'K'
  5701  00FFC7  00                 	db	0
  5702  00FFC8                     STR_20:
  5703  00FFC8  33                 	db	51	;'3'
  5704  00FFC9  30                 	db	48	;'0'
  5705  00FFCA  00                 	db	0
  5706  00FFCB                     STR_21:
  5707  00FFCB  33                 	db	51	;'3'
  5708  00FFCC  31                 	db	49	;'1'
  5709  00FFCD  00                 	db	0
  5710  00FFCE                     STR_31:
  5711  00FFCE  34                 	db	52	;'4'
  5712  00FFCF  31                 	db	49	;'1'
  5713  00FFD0  00                 	db	0
  5714  00FFD1                     STR_22:
  5715  00FFD1  33                 	db	51	;'3'
  5716  00FFD2  32                 	db	50	;'2'
  5717  00FFD3  00                 	db	0
  5718  00FFD4                     STR_32:
  5719  00FFD4  34                 	db	52	;'4'
  5720  00FFD5  32                 	db	50	;'2'
  5721  00FFD6  00                 	db	0
  5722  00FFD7                     STR_23:
  5723  00FFD7  33                 	db	51	;'3'
  5724  00FFD8  33                 	db	51	;'3'
  5725  00FFD9  00                 	db	0
  5726  00FFDA                     STR_33:
  5727  00FFDA  34                 	db	52	;'4'
  5728  00FFDB  33                 	db	51	;'3'
  5729  00FFDC  00                 	db	0
  5730  00FFDD                     STR_24:
  5731  00FFDD  33                 	db	51	;'3'
  5732  00FFDE  34                 	db	52	;'4'
  5733  00FFDF  00                 	db	0
  5734  00FFE0                     STR_34:
  5735  00FFE0  34                 	db	52	;'4'
  5736  00FFE1  34                 	db	52	;'4'
  5737  00FFE2  00                 	db	0
  5738  00FFE3                     STR_25:
  5739  00FFE3  33                 	db	51	;'3'
  5740  00FFE4  35                 	db	53	;'5'
  5741  00FFE5  00                 	db	0
  5742  00FFE6                     STR_35:
  5743  00FFE6  34                 	db	52	;'4'
  5744  00FFE7  35                 	db	53	;'5'
  5745  00FFE8  00                 	db	0
  5746  00FFE9                     STR_26:
  5747  00FFE9  33                 	db	51	;'3'
  5748  00FFEA  36                 	db	54	;'6'
  5749  00FFEB  00                 	db	0
  5750  00FFEC                     STR_36:
  5751  00FFEC  34                 	db	52	;'4'
  5752  00FFED  36                 	db	54	;'6'
  5753  00FFEE  00                 	db	0
  5754  00FFEF                     STR_27:
  5755  00FFEF  33                 	db	51	;'3'
  5756  00FFF0  37                 	db	55	;'7'
  5757  00FFF1  00                 	db	0
  5758  00FFF2                     STR_37:
  5759  00FFF2  34                 	db	52	;'4'
  5760  00FFF3  37                 	db	55	;'7'
  5761  00FFF4  00                 	db	0
  5762  00FFF5                     STR_11:
  5763  00FFF5  1B                 	db	27
  5764  00FFF6  5B                 	db	91	;'['
  5765  00FFF7  00                 	db	0
  5766  00FFF8                     STR_17:
  5767  00FFF8  38                 	db	56	;'8'
  5768  00FFF9  00                 	db	0
  5769  00FFFA                     STR_19:
  5770  00FFFA  3B                 	db	59	;';'
  5771  00FFFB  00                 	db	0
  5772  00FFFC                     STR_39:
  5773  00FFFC  6D                 	db	109	;'m'
  5774  00FFFD  00                 	db	0
  5775  0000                     
  5776                           ; #config settings
  5777  00FFFE  00                 	db	0	; dummy byte at the end
  5778  0000                     
  5779                           	psect	cinit
  5780  016102                     __pcinit:
  5781                           	opt stack 0
  5782  016102                     start_initialization:
  5783                           	opt stack 0
  5784  016102                     __initialization:
  5785                           	opt stack 0
  5786                           
  5787                           ; Initialize objects allocated to BANK2 (24 bytes)
  5788                           ; load TBLPTR registers with __pidataBANK2
  5789  016102  0E0E               	movlw	low __pidataBANK2
  5790  016104  6EF6               	movwf	tblptrl,c
  5791  016106  0E70               	movlw	high __pidataBANK2
  5792  016108  6EF7               	movwf	tblptrh,c
  5793  01610A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  5794  01610C  6EF8               	movwf	tblptru,c
  5795  01610E  EE02  F0A4         	lfsr	0,__pdataBANK2
  5796  016112  EE10 F018          	lfsr	1,24
  5797  016116                     copy_data0:
  5798  016116  0009               	tblrd		*+
  5799  016118  CFF5 FFEE          	movff	tablat,postinc0
  5800  01611C  50E5               	movf	postdec1,w,c
  5801  01611E  50E1               	movf	fsr1l,w,c
  5802  016120  E1FA               	bnz	copy_data0
  5803                           
  5804                           ; Initialize objects allocated to BANK0 (14 bytes)
  5805                           ; load TBLPTR registers with __pidataBANK0
  5806  016122  0EA0               	movlw	low __pidataBANK0
  5807  016124  6EF6               	movwf	tblptrl,c
  5808  016126  0E70               	movlw	high __pidataBANK0
  5809  016128  6EF7               	movwf	tblptrh,c
  5810  01612A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  5811  01612C  6EF8               	movwf	tblptru,c
  5812  01612E  EE00  F0F1         	lfsr	0,__pdataBANK0
  5813  016132  EE10 F00E          	lfsr	1,14
  5814  016136                     copy_data1:
  5815  016136  0009               	tblrd		*+
  5816  016138  CFF5 FFEE          	movff	tablat,postinc0
  5817  01613C  50E5               	movf	postdec1,w,c
  5818  01613E  50E1               	movf	fsr1l,w,c
  5819  016140  E1FA               	bnz	copy_data1
  5820                           
  5821                           ; Clear objects allocated to BANK3 (128 bytes)
  5822  016142  EE03  F000         	lfsr	0,__pbssBANK3
  5823  016146  0E80               	movlw	128
  5824  016148                     clear_0:
  5825  016148  6AEE               	clrf	postinc0,c
  5826  01614A  06E8               	decf	wreg,f,c
  5827  01614C  E1FD               	bnz	clear_0
  5828                           
  5829                           ; Clear objects allocated to BANK2 (130 bytes)
  5830  01614E  EE02  F000         	lfsr	0,__pbssBANK2
  5831  016152  0E82               	movlw	130
  5832  016154                     clear_1:
  5833  016154  6AEE               	clrf	postinc0,c
  5834  016156  06E8               	decf	wreg,f,c
  5835  016158  E1FD               	bnz	clear_1
  5836                           
  5837                           ; Clear objects allocated to BANK1 (36 bytes)
  5838  01615A  EE01  F0B3         	lfsr	0,__pbssBANK1
  5839  01615E  0E24               	movlw	36
  5840  016160                     clear_2:
  5841  016160  6AEE               	clrf	postinc0,c
  5842  016162  06E8               	decf	wreg,f,c
  5843  016164  E1FD               	bnz	clear_2
  5844                           
  5845                           ; Clear objects allocated to BITBANK0 (1 bytes)
  5846  016166  0100               	movlb	0
  5847  016168  6BFF               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  5848                           
  5849                           ; Clear objects allocated to BANK0 (41 bytes)
  5850  01616A  EE00  F0C8         	lfsr	0,__pbssBANK0
  5851  01616E  0E29               	movlw	41
  5852  016170                     clear_3:
  5853  016170  6AEE               	clrf	postinc0,c
  5854  016172  06E8               	decf	wreg,f,c
  5855  016174  E1FD               	bnz	clear_3
  5856                           
  5857                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  5858  016176  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  5859  016178                     end_of_initialization:
  5860                           	opt stack 0
  5861  016178                     __end_of__initialization:
  5862                           	opt stack 0
  5863  016178  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5864  01617A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5865  01617C  0100               	movlb	0
  5866  01617E  EF39  F0B1         	goto	_main	;jump to C main() function
  5867                           tblptru	equ	0xFF8
  5868                           tblptrh	equ	0xFF7
  5869                           tblptrl	equ	0xFF6
  5870                           tablat	equ	0xFF5
  5871                           postinc0	equ	0xFEE
  5872                           wreg	equ	0xFE8
  5873                           postdec1	equ	0xFE5
  5874                           fsr1l	equ	0xFE1
  5875                           
  5876                           	psect	bitbssCOMRAM
  5877  0002F0                     __pbitbssCOMRAM:
  5878                           	opt stack 0
  5879  0002F0                     _VCC_overvoltage_flag:
  5880                           	opt stack 0
  5881  0002F0                     	ds	1
  5882  0002F1                     _adc_error_flag:
  5883                           	opt stack 0
  5884  0002F1                     	ds	1
  5885  0002F2                     _load_enable:
  5886                           	opt stack 0
  5887  0002F2                     	ds	1
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           postinc0	equ	0xFEE
  5893                           wreg	equ	0xFE8
  5894                           postdec1	equ	0xFE5
  5895                           fsr1l	equ	0xFE1
  5896                           
  5897                           	psect	bitbssBANK0
  5898  0007F8                     __pbitbssBANK0:
  5899                           	opt stack 0
  5900  0007F8                     _eusart2RxStringReady:
  5901                           	opt stack 0
  5902  0007F8                     	ds	1
  5903                           tblptru	equ	0xFF8
  5904                           tblptrh	equ	0xFF7
  5905                           tblptrl	equ	0xFF6
  5906                           tablat	equ	0xFF5
  5907                           postinc0	equ	0xFEE
  5908                           wreg	equ	0xFE8
  5909                           postdec1	equ	0xFE5
  5910                           fsr1l	equ	0xFE1
  5911                           
  5912                           	psect	bssBANK0
  5913  0000C8                     __pbssBANK0:
  5914                           	opt stack 0
  5915  0000C8                     _Vrms:
  5916                           	opt stack 0
  5917  0000C8                     	ds	3
  5918  0000CB                     _Irms:
  5919                           	opt stack 0
  5920  0000CB                     	ds	3
  5921  0000CE                     _Imeas:
  5922                           	opt stack 0
  5923  0000CE                     	ds	3
  5924  0000D1                     _Ipk:
  5925                           	opt stack 0
  5926  0000D1                     	ds	3
  5927  0000D4                     _Vpk:
  5928                           	opt stack 0
  5929  0000D4                     	ds	3
  5930  0000D7                     _Temp_ADC_Result:
  5931                           	opt stack 0
  5932  0000D7                     	ds	3
  5933  0000DA                     _POS12_ADC_Result:
  5934                           	opt stack 0
  5935  0000DA                     	ds	3
  5936  0000DD                     _POS3P3_ADC_Result:
  5937                           	opt stack 0
  5938  0000DD                     	ds	3
  5939  0000E0                     _ADC_Result_Scaling:
  5940                           	opt stack 0
  5941  0000E0                     	ds	3
  5942  0000E3                     _AVSS_ADC_Result:
  5943                           	opt stack 0
  5944  0000E3                     	ds	3
  5945  0000E6                     _ADCC_ADI_InterruptHandler:
  5946                           	opt stack 0
  5947  0000E6                     	ds	3
  5948  0000E9                     _reset_cause:
  5949                           	opt stack 0
  5950  0000E9                     	ds	1
  5951  0000EA                     _background_color:
  5952                           	opt stack 0
  5953  0000EA                     	ds	1
  5954  0000EB                     _foreground_color:
  5955                           	opt stack 0
  5956  0000EB                     	ds	1
  5957  0000EC                     _attribute:
  5958                           	opt stack 0
  5959  0000EC                     	ds	1
  5960  0000ED                     _eusart2RxHead:
  5961                           	opt stack 0
  5962  0000ED                     	ds	1
  5963  0000EE                     _FVR_ADC_Result:
  5964                           	opt stack 0
  5965  0000EE                     	ds	3
  5966                           tblptru	equ	0xFF8
  5967                           tblptrh	equ	0xFF7
  5968                           tblptrl	equ	0xFF6
  5969                           tablat	equ	0xFF5
  5970                           postinc0	equ	0xFEE
  5971                           wreg	equ	0xFE8
  5972                           postdec1	equ	0xFE5
  5973                           fsr1l	equ	0xFE1
  5974                           
  5975                           	psect	dataBANK0
  5976  0000F1                     __pdataBANK0:
  5977                           	opt stack 0
  5978  0000F1                     _Irms_offset:
  5979                           	opt stack 0
  5980  0000F1                     	ds	3
  5981  0000F4                     _Vpk_const:
  5982                           	opt stack 0
  5983  0000F4                     	ds	3
  5984  0000F7                     _Temp_ADC_Offset:
  5985                           	opt stack 0
  5986  0000F7                     	ds	3
  5987  0000FA                     _dimming_period:
  5988                           	opt stack 0
  5989  0000FA                     	ds	2
  5990  0000FC                     _TRIAC_Firing_Angle:
  5991                           	opt stack 0
  5992  0000FC                     	ds	3
  5993                           tblptru	equ	0xFF8
  5994                           tblptrh	equ	0xFF7
  5995                           tblptrl	equ	0xFF6
  5996                           tablat	equ	0xFF5
  5997                           postinc0	equ	0xFEE
  5998                           wreg	equ	0xFE8
  5999                           postdec1	equ	0xFE5
  6000                           fsr1l	equ	0xFE1
  6001                           
  6002                           	psect	bssBANK1
  6003  0001B3                     __pbssBANK1:
  6004                           	opt stack 0
  6005  0001B3                     _load_on_time:
  6006                           	opt stack 0
  6007  0001B3                     	ds	4
  6008  0001B7                     _dev_on_time:
  6009                           	opt stack 0
  6010  0001B7                     	ds	4
  6011  0001BB                     _Avg_Power:
  6012                           	opt stack 0
  6013  0001BB                     	ds	3
  6014  0001BE                     _TMR5_InterruptHandler:
  6015                           	opt stack 0
  6016  0001BE                     	ds	3
  6017  0001C1                     _TMR7_InterruptHandler:
  6018                           	opt stack 0
  6019  0001C1                     	ds	3
  6020  0001C4                     _TMR6_InterruptHandler:
  6021                           	opt stack 0
  6022  0001C4                     	ds	3
  6023  0001C7                     _EUSART2_RxDefaultInterruptHandler:
  6024                           	opt stack 0
  6025  0001C7                     	ds	3
  6026  0001CA                     _EUSART2_TxDefaultInterruptHandler:
  6027                           	opt stack 0
  6028  0001CA                     	ds	3
  6029  0001CD                     _timer5ReloadVal:
  6030                           	opt stack 0
  6031  0001CD                     	ds	2
  6032  0001CF                     _timer7ReloadVal:
  6033                           	opt stack 0
  6034  0001CF                     	ds	2
  6035  0001D1                     _current_adc_channel:
  6036                           	opt stack 0
  6037  0001D1                     	ds	1
  6038  0001D2                     _eusart2RxCount:
  6039                           	opt stack 0
  6040  0001D2                     	ds	1
  6041  0001D3                     _eusart2RxTail:
  6042                           	opt stack 0
  6043  0001D3                     	ds	1
  6044  0001D4                     _eusart2TxBufferRemaining:
  6045                           	opt stack 0
  6046  0001D4                     	ds	1
  6047  0001D5                     _eusart2TxTail:
  6048                           	opt stack 0
  6049  0001D5                     	ds	1
  6050  0001D6                     _eusart2TxHead:
  6051                           	opt stack 0
  6052  0001D6                     	ds	1
  6053                           tblptru	equ	0xFF8
  6054                           tblptrh	equ	0xFF7
  6055                           tblptrl	equ	0xFF6
  6056                           tablat	equ	0xFF5
  6057                           postinc0	equ	0xFEE
  6058                           wreg	equ	0xFE8
  6059                           postdec1	equ	0xFE5
  6060                           fsr1l	equ	0xFE1
  6061                           
  6062                           	psect	bssBANK2
  6063  000200                     __pbssBANK2:
  6064                           	opt stack 0
  6065  000200                     _eusart2RxBuffer:
  6066                           	opt stack 0
  6067  000200                     	ds	64
  6068  000240                     _errno:
  6069                           	opt stack 0
  6070  000240                     	ds	2
  6071  000242                     _line:
  6072                           	opt stack 0
  6073  000242                     	ds	64
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           postinc0	equ	0xFEE
  6079                           wreg	equ	0xFE8
  6080                           postdec1	equ	0xFE5
  6081                           fsr1l	equ	0xFE1
  6082                           
  6083                           	psect	dataBANK2
  6084  0002A4                     __pdataBANK2:
  6085                           	opt stack 0
  6086  0002A4                     getCauseOfResetString@F17476:
  6087                           	opt stack 0
  6088  0002A4                     	ds	24
  6089                           tblptru	equ	0xFF8
  6090                           tblptrh	equ	0xFF7
  6091                           tblptrl	equ	0xFF6
  6092                           tablat	equ	0xFF5
  6093                           postinc0	equ	0xFEE
  6094                           wreg	equ	0xFE8
  6095                           postdec1	equ	0xFE5
  6096                           fsr1l	equ	0xFE1
  6097                           
  6098                           	psect	bssBANK3
  6099  000300                     __pbssBANK3:
  6100                           	opt stack 0
  6101  000300                     _eusart2TxBuffer:
  6102                           	opt stack 0
  6103  000300                     	ds	128
  6104                           tblptru	equ	0xFF8
  6105                           tblptrh	equ	0xFF7
  6106                           tblptrl	equ	0xFF6
  6107                           tablat	equ	0xFF5
  6108                           postinc0	equ	0xFEE
  6109                           wreg	equ	0xFE8
  6110                           postdec1	equ	0xFE5
  6111                           fsr1l	equ	0xFE1
  6112                           
  6113                           	psect	cstackBANK2
  6114  000282                     __pcstackBANK2:
  6115                           	opt stack 0
  6116  000282                     ringBufferLUT@channel_name:
  6117                           	opt stack 0
  6118                           
  6119                           ; 22 bytes @ 0x0
  6120  000282                     	ds	22
  6121  000298                     ringBufferLUT@angle_degrees:
  6122                           	opt stack 0
  6123                           
  6124                           ; 3 bytes @ 0x16
  6125  000298                     	ds	3
  6126  00029B                     ringBufferLUT@arg_buff:
  6127                           	opt stack 0
  6128                           
  6129                           ; 3 bytes @ 0x19
  6130  00029B                     	ds	3
  6131  00029E                     ringBufferLUT@index:
  6132                           	opt stack 0
  6133                           
  6134                           ; 2 bytes @ 0x1C
  6135  00029E                     	ds	2
  6136  0002A0                     ringBufferLUT@percentage:
  6137                           	opt stack 0
  6138                           
  6139                           ; 2 bytes @ 0x1E
  6140  0002A0                     	ds	2
  6141  0002A2                     ringBufferLUT@userID:
  6142                           	opt stack 0
  6143                           
  6144                           ; 2 bytes @ 0x20
  6145  0002A2                     	ds	2
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           postinc0	equ	0xFEE
  6151                           wreg	equ	0xFE8
  6152                           postdec1	equ	0xFE5
  6153                           fsr1l	equ	0xFE1
  6154                           
  6155                           	psect	cstackBANK1
  6156  000100                     __pcstackBANK1:
  6157                           	opt stack 0
  6158  000100                     ??_heartbeatTimerCallback:
  6159  000100                     ADCC_StartConversion@channel:
  6160                           	opt stack 0
  6161  000100                     TMR7_WriteTimer@timerVal:
  6162                           	opt stack 0
  6163                           
  6164                           ; 2 bytes @ 0x0
  6165  000100                     	ds	1
  6166  000101                     
  6167                           ; 1 bytes @ 0x1
  6168  000101                     	ds	1
  6169  000102                     ??_INTERRUPT_InterruptManagerLow:
  6170  000102                     
  6171                           ; 1 bytes @ 0x2
  6172  000102                     	ds	21
  6173  000117                     ??_isdigit:
  6174  000117                     ?_strlen:
  6175                           	opt stack 0
  6176  000117                     ?_strcmp:
  6177                           	opt stack 0
  6178  000117                     ?_getCauseOfResetString:
  6179                           	opt stack 0
  6180  000117                     ?_strchr:
  6181                           	opt stack 0
  6182  000117                     ?___awmod:
  6183                           	opt stack 0
  6184  000117                     ?___lwdiv:
  6185                           	opt stack 0
  6186  000117                     ?___lwmod:
  6187                           	opt stack 0
  6188  000117                     ?___ftpack:
  6189                           	opt stack 0
  6190  000117                     ?__tdiv_to_l_:
  6191                           	opt stack 0
  6192  000117                     ?__div_to_l_:
  6193                           	opt stack 0
  6194  000117                     ?___lldiv:
  6195                           	opt stack 0
  6196  000117                     EUSART2_Read@readValue:
  6197                           	opt stack 0
  6198  000117                     EUSART2_Write@txData:
  6199                           	opt stack 0
  6200  000117                     ___awmod@dividend:
  6201                           	opt stack 0
  6202  000117                     ___lwdiv@dividend:
  6203                           	opt stack 0
  6204  000117                     ___lwmod@dividend:
  6205                           	opt stack 0
  6206  000117                     strcat@to:
  6207                           	opt stack 0
  6208  000117                     strcmp@s1:
  6209                           	opt stack 0
  6210  000117                     strcpy@to:
  6211                           	opt stack 0
  6212  000117                     strlen@s:
  6213                           	opt stack 0
  6214  000117                     strncpy@to:
  6215                           	opt stack 0
  6216  000117                     strchr@ptr:
  6217                           	opt stack 0
  6218  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6219                           	opt stack 0
  6220  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6221                           	opt stack 0
  6222  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6223                           	opt stack 0
  6224  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  6225                           	opt stack 0
  6226  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6227                           	opt stack 0
  6228  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6229                           	opt stack 0
  6230  000117                     __div_to_l_@f1:
  6231                           	opt stack 0
  6232  000117                     ___ftpack@arg:
  6233                           	opt stack 0
  6234  000117                     __tdiv_to_l_@f1:
  6235                           	opt stack 0
  6236  000117                     ___ftge@ff1:
  6237                           	opt stack 0
  6238  000117                     FLASH_ReadByte@flashAddr:
  6239                           	opt stack 0
  6240  000117                     ___lldiv@dividend:
  6241                           	opt stack 0
  6242                           
  6243                           ; 4 bytes @ 0x17
  6244  000117                     	ds	1
  6245  000118                     putch@txData:
  6246                           	opt stack 0
  6247  000118                     _isdigit$3221:
  6248                           	opt stack 0
  6249                           
  6250                           ; 1 bytes @ 0x18
  6251  000118                     	ds	1
  6252  000119                     ??_strlen:
  6253  000119                     isdigit@c:
  6254                           	opt stack 0
  6255  000119                     ___awmod@divisor:
  6256                           	opt stack 0
  6257  000119                     ___lwdiv@divisor:
  6258                           	opt stack 0
  6259  000119                     ___lwmod@divisor:
  6260                           	opt stack 0
  6261  000119                     strcat@from:
  6262                           	opt stack 0
  6263  000119                     strcmp@s2:
  6264                           	opt stack 0
  6265  000119                     strcpy@from:
  6266                           	opt stack 0
  6267  000119                     strncpy@from:
  6268                           	opt stack 0
  6269  000119                     strchr@chr:
  6270                           	opt stack 0
  6271  000119                     getCauseOfResetString@strings:
  6272                           	opt stack 0
  6273                           
  6274                           ; 24 bytes @ 0x19
  6275  000119                     	ds	1
  6276  00011A                     ??_TMR7_Initialize:
  6277  00011A                     ??_TMR5_Initialize:
  6278  00011A                     ___ftpack@exp:
  6279                           	opt stack 0
  6280  00011A                     __div_to_l_@f2:
  6281                           	opt stack 0
  6282  00011A                     __tdiv_to_l_@f2:
  6283                           	opt stack 0
  6284  00011A                     ___ftge@ff2:
  6285                           	opt stack 0
  6286                           
  6287                           ; 3 bytes @ 0x1A
  6288  00011A                     	ds	1
  6289  00011B                     ??_strcmp:
  6290  00011B                     ?_FLASH_ReadWord:
  6291                           	opt stack 0
  6292  00011B                     ___awmod@counter:
  6293                           	opt stack 0
  6294  00011B                     ___ftpack@sign:
  6295                           	opt stack 0
  6296  00011B                     ___lwdiv@counter:
  6297                           	opt stack 0
  6298  00011B                     ___lwmod@counter:
  6299                           	opt stack 0
  6300  00011B                     strcat@cp:
  6301                           	opt stack 0
  6302  00011B                     strcpy@cp:
  6303                           	opt stack 0
  6304  00011B                     strlen@cp:
  6305                           	opt stack 0
  6306  00011B                     strncpy@size:
  6307                           	opt stack 0
  6308  00011B                     FLASH_ReadWord@flashAddr:
  6309                           	opt stack 0
  6310  00011B                     ___lldiv@divisor:
  6311                           	opt stack 0
  6312                           
  6313                           ; 4 bytes @ 0x1B
  6314  00011B                     	ds	1
  6315  00011C                     ??___ftpack:
  6316  00011C                     ___awmod@sign:
  6317                           	opt stack 0
  6318  00011C                     strcmp@r:
  6319                           	opt stack 0
  6320  00011C                     ___lwdiv@quotient:
  6321                           	opt stack 0
  6322                           
  6323                           ; 2 bytes @ 0x1C
  6324  00011C                     	ds	1
  6325  00011D                     ??__tdiv_to_l_:
  6326  00011D                     ??___ftge:
  6327  00011D                     ?_getDeviceIDString:
  6328                           	opt stack 0
  6329  00011D                     ?_strncmp:
  6330                           	opt stack 0
  6331  00011D                     ?___awdiv:
  6332                           	opt stack 0
  6333  00011D                     getDeviceIDString@inputDevID:
  6334                           	opt stack 0
  6335  00011D                     ___awdiv@dividend:
  6336                           	opt stack 0
  6337  00011D                     strncpy@cp:
  6338                           	opt stack 0
  6339  00011D                     strncmp@s1:
  6340                           	opt stack 0
  6341  00011D                     __div_to_l_@quot:
  6342                           	opt stack 0
  6343                           
  6344                           ; 4 bytes @ 0x1D
  6345  00011D                     	ds	1
  6346  00011E                     utoa@buf:
  6347                           	opt stack 0
  6348                           
  6349                           ; 2 bytes @ 0x1E
  6350  00011E                     	ds	1
  6351  00011F                     ??_getDeviceIDString:
  6352  00011F                     ??_FLASH_ReadWord:
  6353  00011F                     ?___awtoft:
  6354                           	opt stack 0
  6355  00011F                     ?___lltoft:
  6356                           	opt stack 0
  6357  00011F                     ___awdiv@divisor:
  6358                           	opt stack 0
  6359  00011F                     ___awtoft@c:
  6360                           	opt stack 0
  6361  00011F                     strncmp@s2:
  6362                           	opt stack 0
  6363  00011F                     ___lldiv@quotient:
  6364                           	opt stack 0
  6365  00011F                     ___lltoft@c:
  6366                           	opt stack 0
  6367                           
  6368                           ; 4 bytes @ 0x1F
  6369  00011F                     	ds	1
  6370  000120                     utoa@val:
  6371                           	opt stack 0
  6372  000120                     __tdiv_to_l_@quot:
  6373                           	opt stack 0
  6374                           
  6375                           ; 4 bytes @ 0x20
  6376  000120                     	ds	1
  6377  000121                     ___awdiv@counter:
  6378                           	opt stack 0
  6379  000121                     __div_to_l_@cntr:
  6380                           	opt stack 0
  6381  000121                     strncmp@len:
  6382                           	opt stack 0
  6383  000121                     getDeviceIDString@returnString:
  6384                           	opt stack 0
  6385                           
  6386                           ; 12 bytes @ 0x21
  6387  000121                     	ds	1
  6388  000122                     ??_getMajorRevisionID:
  6389  000122                     ?_getDeviceID:
  6390                           	opt stack 0
  6391  000122                     ?_getUserID:
  6392                           	opt stack 0
  6393  000122                     ___awdiv@sign:
  6394                           	opt stack 0
  6395  000122                     ___awtoft@sign:
  6396                           	opt stack 0
  6397  000122                     __div_to_l_@exp1:
  6398                           	opt stack 0
  6399  000122                     getMinorRevisionID@REVID_RAW:
  6400                           	opt stack 0
  6401  000122                     utoa@base:
  6402                           	opt stack 0
  6403                           
  6404                           ; 2 bytes @ 0x22
  6405  000122                     	ds	1
  6406  000123                     ??_strncmp:
  6407  000123                     ??___lltoft:
  6408  000123                     ?___ftneg:
  6409                           	opt stack 0
  6410  000123                     ___lldiv@counter:
  6411                           	opt stack 0
  6412  000123                     ___awdiv@quotient:
  6413                           	opt stack 0
  6414  000123                     ___ftneg@f1:
  6415                           	opt stack 0
  6416                           
  6417                           ; 3 bytes @ 0x23
  6418  000123                     	ds	1
  6419  000124                     ??_getUserID:
  6420  000124                     ?___llmod:
  6421                           	opt stack 0
  6422  000124                     __tdiv_to_l_@cntr:
  6423                           	opt stack 0
  6424  000124                     utoa@v:
  6425                           	opt stack 0
  6426  000124                     ___llmod@dividend:
  6427                           	opt stack 0
  6428                           
  6429                           ; 4 bytes @ 0x24
  6430  000124                     	ds	1
  6431  000125                     ?___wmul:
  6432                           	opt stack 0
  6433  000125                     __tdiv_to_l_@exp1:
  6434                           	opt stack 0
  6435  000125                     getMajorRevisionID@REVID_RAW:
  6436                           	opt stack 0
  6437  000125                     ___wmul@multiplier:
  6438                           	opt stack 0
  6439                           
  6440                           ; 2 bytes @ 0x25
  6441  000125                     	ds	1
  6442  000126                     ?_strstr:
  6443                           	opt stack 0
  6444  000126                     getUserID@inputUserID:
  6445                           	opt stack 0
  6446  000126                     utoa@c:
  6447                           	opt stack 0
  6448  000126                     strstr@s1:
  6449                           	opt stack 0
  6450                           
  6451                           ; 2 bytes @ 0x26
  6452  000126                     	ds	1
  6453  000127                     ?_getRevisionIDString:
  6454                           	opt stack 0
  6455  000127                     getRevisionIDString@inputMinRevID:
  6456                           	opt stack 0
  6457  000127                     ___lltoft@exp:
  6458                           	opt stack 0
  6459  000127                     getUserID@initialOffset:
  6460                           	opt stack 0
  6461  000127                     ___wmul@multiplicand:
  6462                           	opt stack 0
  6463                           
  6464                           ; 2 bytes @ 0x27
  6465  000127                     	ds	1
  6466  000128                     strstr@s2:
  6467                           	opt stack 0
  6468  000128                     ___llmod@divisor:
  6469                           	opt stack 0
  6470                           
  6471                           ; 4 bytes @ 0x28
  6472  000128                     	ds	1
  6473  000129                     ??_getRevisionIDString:
  6474  000129                     getUserID@IDOffset:
  6475                           	opt stack 0
  6476  000129                     ___wmul@product:
  6477                           	opt stack 0
  6478                           
  6479                           ; 2 bytes @ 0x29
  6480  000129                     	ds	1
  6481  00012A                     
  6482                           ; 1 bytes @ 0x2A
  6483  00012A                     	ds	1
  6484  00012B                     ?_atoi:
  6485                           	opt stack 0
  6486  00012B                     ?___ftadd:
  6487                           	opt stack 0
  6488  00012B                     atoi@s:
  6489                           	opt stack 0
  6490  00012B                     ___ftadd@f1:
  6491                           	opt stack 0
  6492  00012B                     getRevisionIDString@returnString:
  6493                           	opt stack 0
  6494                           
  6495                           ; 4 bytes @ 0x2B
  6496  00012B                     	ds	1
  6497  00012C                     ___llmod@counter:
  6498                           	opt stack 0
  6499                           
  6500                           ; 1 bytes @ 0x2C
  6501  00012C                     	ds	1
  6502  00012D                     ??_atoi:
  6503                           
  6504                           ; 1 bytes @ 0x2D
  6505  00012D                     	ds	1
  6506  00012E                     ___ftadd@f2:
  6507                           	opt stack 0
  6508                           
  6509                           ; 3 bytes @ 0x2E
  6510  00012E                     	ds	1
  6511  00012F                     atoi@sign:
  6512                           	opt stack 0
  6513  00012F                     getRevisionIDString@MinRevStr:
  6514                           	opt stack 0
  6515                           
  6516                           ; 2 bytes @ 0x2F
  6517  00012F                     	ds	1
  6518  000130                     atoi@a:
  6519                           	opt stack 0
  6520                           
  6521                           ; 2 bytes @ 0x30
  6522  000130                     	ds	1
  6523  000131                     ??___ftadd:
  6524  000131                     getRevisionIDString@inputMajRevID:
  6525                           	opt stack 0
  6526  000131                     getCauseOfResetString@r:
  6527                           	opt stack 0
  6528                           
  6529                           ; 1 bytes @ 0x31
  6530  000131                     	ds	1
  6531  000132                     getRevisionIDString@MajRevStr:
  6532                           	opt stack 0
  6533                           
  6534                           ; 1 bytes @ 0x32
  6535  000132                     	ds	2
  6536  000134                     ___ftadd@sign:
  6537                           	opt stack 0
  6538                           
  6539                           ; 1 bytes @ 0x34
  6540  000134                     	ds	1
  6541  000135                     ___ftadd@exp2:
  6542                           	opt stack 0
  6543                           
  6544                           ; 1 bytes @ 0x35
  6545  000135                     	ds	1
  6546  000136                     ___ftadd@exp1:
  6547                           	opt stack 0
  6548                           
  6549                           ; 1 bytes @ 0x36
  6550  000136                     	ds	1
  6551  000137                     ?___ftdiv:
  6552                           	opt stack 0
  6553  000137                     ?___ftsub:
  6554                           	opt stack 0
  6555  000137                     ___ftdiv@f1:
  6556                           	opt stack 0
  6557  000137                     ___ftsub@f1:
  6558                           	opt stack 0
  6559                           
  6560                           ; 3 bytes @ 0x37
  6561  000137                     	ds	3
  6562  00013A                     ___ftdiv@f2:
  6563                           	opt stack 0
  6564  00013A                     ___ftsub@f2:
  6565                           	opt stack 0
  6566                           
  6567                           ; 3 bytes @ 0x3A
  6568  00013A                     	ds	3
  6569  00013D                     ??___ftdiv:
  6570  00013D                     
  6571                           ; 1 bytes @ 0x3D
  6572  00013D                     	ds	3
  6573  000140                     ___ftdiv@cntr:
  6574                           	opt stack 0
  6575                           
  6576                           ; 1 bytes @ 0x40
  6577  000140                     	ds	1
  6578  000141                     ___ftdiv@f3:
  6579                           	opt stack 0
  6580                           
  6581                           ; 3 bytes @ 0x41
  6582  000141                     	ds	3
  6583  000144                     ___ftdiv@exp:
  6584                           	opt stack 0
  6585                           
  6586                           ; 1 bytes @ 0x44
  6587  000144                     	ds	1
  6588  000145                     ___ftdiv@sign:
  6589                           	opt stack 0
  6590                           
  6591                           ; 1 bytes @ 0x45
  6592  000145                     	ds	1
  6593  000146                     ?___ftmul:
  6594                           	opt stack 0
  6595  000146                     ___ftmul@f1:
  6596                           	opt stack 0
  6597                           
  6598                           ; 3 bytes @ 0x46
  6599  000146                     	ds	3
  6600  000149                     ___ftmul@f2:
  6601                           	opt stack 0
  6602                           
  6603                           ; 3 bytes @ 0x49
  6604  000149                     	ds	3
  6605  00014C                     ??___ftmul:
  6606                           
  6607                           ; 1 bytes @ 0x4C
  6608  00014C                     	ds	3
  6609  00014F                     ___ftmul@exp:
  6610                           	opt stack 0
  6611                           
  6612                           ; 1 bytes @ 0x4F
  6613  00014F                     	ds	1
  6614  000150                     ___ftmul@f3_as_product:
  6615                           	opt stack 0
  6616                           
  6617                           ; 3 bytes @ 0x50
  6618  000150                     	ds	3
  6619  000153                     ___ftmul@cntr:
  6620                           	opt stack 0
  6621                           
  6622                           ; 1 bytes @ 0x53
  6623  000153                     	ds	1
  6624  000154                     ___ftmul@sign:
  6625                           	opt stack 0
  6626                           
  6627                           ; 1 bytes @ 0x54
  6628  000154                     	ds	1
  6629  000155                     ?_fround:
  6630                           	opt stack 0
  6631  000155                     ?_scale:
  6632                           	opt stack 0
  6633  000155                     ?___fttol:
  6634                           	opt stack 0
  6635  000155                     ___fttol@f1:
  6636                           	opt stack 0
  6637                           
  6638                           ; 3 bytes @ 0x55
  6639  000155                     	ds	3
  6640  000158                     _fround$3912:
  6641                           	opt stack 0
  6642  000158                     _scale$3913:
  6643                           	opt stack 0
  6644                           
  6645                           ; 3 bytes @ 0x58
  6646  000158                     	ds	1
  6647  000159                     ??___fttol:
  6648                           
  6649                           ; 1 bytes @ 0x59
  6650  000159                     	ds	2
  6651  00015B                     scale@scl:
  6652                           	opt stack 0
  6653  00015B                     _fround$3911:
  6654                           	opt stack 0
  6655                           
  6656                           ; 3 bytes @ 0x5B
  6657  00015B                     	ds	3
  6658  00015E                     fround@prec:
  6659                           	opt stack 0
  6660  00015E                     ___fttol@sign1:
  6661                           	opt stack 0
  6662                           
  6663                           ; 1 bytes @ 0x5E
  6664  00015E                     	ds	1
  6665  00015F                     ___fttol@lval:
  6666                           	opt stack 0
  6667                           
  6668                           ; 4 bytes @ 0x5F
  6669  00015F                     	ds	4
  6670  000163                     ___fttol@exp1:
  6671                           	opt stack 0
  6672                           
  6673                           ; 1 bytes @ 0x63
  6674  000163                     	ds	1
  6675  000164                     ?_printf:
  6676                           	opt stack 0
  6677  000164                     printf@f:
  6678                           	opt stack 0
  6679                           
  6680                           ; 2 bytes @ 0x64
  6681  000164                     	ds	10
  6682  00016E                     ??_printf:
  6683                           
  6684                           ; 1 bytes @ 0x6E
  6685  00016E                     	ds	6
  6686  000174                     _printf$3914:
  6687                           	opt stack 0
  6688                           
  6689                           ; 3 bytes @ 0x74
  6690  000174                     	ds	3
  6691  000177                     printf@idx:
  6692                           	opt stack 0
  6693                           
  6694                           ; 1 bytes @ 0x77
  6695  000177                     	ds	1
  6696  000178                     printf@len:
  6697                           	opt stack 0
  6698                           
  6699                           ; 2 bytes @ 0x78
  6700  000178                     	ds	2
  6701  00017A                     printf@cp:
  6702                           	opt stack 0
  6703                           
  6704                           ; 2 bytes @ 0x7A
  6705  00017A                     	ds	2
  6706  00017C                     printf@ap:
  6707                           	opt stack 0
  6708                           
  6709                           ; 2 bytes @ 0x7C
  6710  00017C                     	ds	2
  6711  00017E                     printf@flag:
  6712                           	opt stack 0
  6713                           
  6714                           ; 2 bytes @ 0x7E
  6715  00017E                     	ds	2
  6716  000180                     printf@exp:
  6717                           	opt stack 0
  6718                           
  6719                           ; 2 bytes @ 0x80
  6720  000180                     	ds	2
  6721  000182                     printf@tmpval:
  6722                           	opt stack 0
  6723                           
  6724                           ; 4 bytes @ 0x82
  6725  000182                     	ds	4
  6726  000186                     printf@val:
  6727                           	opt stack 0
  6728                           
  6729                           ; 4 bytes @ 0x86
  6730  000186                     	ds	4
  6731  00018A                     printf@fval:
  6732                           	opt stack 0
  6733                           
  6734                           ; 3 bytes @ 0x8A
  6735  00018A                     	ds	3
  6736  00018D                     printf@prec:
  6737                           	opt stack 0
  6738                           
  6739                           ; 2 bytes @ 0x8D
  6740  00018D                     	ds	2
  6741  00018F                     printf@c:
  6742                           	opt stack 0
  6743                           
  6744                           ; 1 bytes @ 0x8F
  6745  00018F                     	ds	1
  6746  000190                     terminal_textAttributes@background_color:
  6747                           	opt stack 0
  6748                           
  6749                           ; 1 bytes @ 0x90
  6750  000190                     	ds	1
  6751  000191                     terminal_textAttributes@input_attribute:
  6752                           	opt stack 0
  6753                           
  6754                           ; 1 bytes @ 0x91
  6755  000191                     	ds	1
  6756  000192                     terminal_textAttributes@foreground_color:
  6757                           	opt stack 0
  6758                           
  6759                           ; 1 bytes @ 0x92
  6760  000192                     	ds	1
  6761  000193                     terminal_textAttributes@output_buff:
  6762                           	opt stack 0
  6763                           
  6764                           ; 15 bytes @ 0x93
  6765  000193                     	ds	15
  6766  0001A2                     ringBufferLUT@line:
  6767                           	opt stack 0
  6768                           
  6769                           ; 2 bytes @ 0xA2
  6770  0001A2                     	ds	2
  6771  0001A4                     ??_ringBufferLUT:
  6772                           
  6773                           ; 1 bytes @ 0xA4
  6774  0001A4                     	ds	4
  6775  0001A8                     ??_terminal_ringBufferPull:
  6776                           
  6777                           ; 1 bytes @ 0xA8
  6778  0001A8                     	ds	3
  6779  0001AB                     terminal_ringBufferPull@charNumber:
  6780                           	opt stack 0
  6781                           
  6782                           ; 2 bytes @ 0xAB
  6783  0001AB                     	ds	2
  6784  0001AD                     terminal_ringBufferPull@index_2250:
  6785                           	opt stack 0
  6786                           
  6787                           ; 2 bytes @ 0xAD
  6788  0001AD                     	ds	2
  6789  0001AF                     terminal_ringBufferPull@index:
  6790                           	opt stack 0
  6791                           
  6792                           ; 2 bytes @ 0xAF
  6793  0001AF                     	ds	2
  6794  0001B1                     ??_main:
  6795                           
  6796                           ; 1 bytes @ 0xB1
  6797  0001B1                     	ds	2
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           postinc0	equ	0xFEE
  6803                           wreg	equ	0xFE8
  6804                           postdec1	equ	0xFE5
  6805                           fsr1l	equ	0xFE1
  6806                           
  6807                           	psect	cstackBANK0
  6808  000060                     __pcstackBANK0:
  6809                           	opt stack 0
  6810  000060                     ?i2___ftsub:
  6811                           	opt stack 0
  6812  000060                     atan@y:
  6813                           	opt stack 0
  6814  000060                     i2___ftsub@f1:
  6815                           	opt stack 0
  6816                           
  6817                           ; 3 bytes @ 0x0
  6818  000060                     	ds	3
  6819  000063                     atan@x:
  6820                           	opt stack 0
  6821  000063                     i2___ftsub@f2:
  6822                           	opt stack 0
  6823                           
  6824                           ; 3 bytes @ 0x3
  6825  000063                     	ds	3
  6826  000066                     ?i2_printf:
  6827                           	opt stack 0
  6828  000066                     ?_sin:
  6829                           	opt stack 0
  6830  000066                     ?_sqrt:
  6831                           	opt stack 0
  6832  000066                     atan@recip:
  6833                           	opt stack 0
  6834  000066                     i2printf@f:
  6835                           	opt stack 0
  6836  000066                     sin@f:
  6837                           	opt stack 0
  6838  000066                     sqrt@a:
  6839                           	opt stack 0
  6840                           
  6841                           ; 3 bytes @ 0x6
  6842  000066                     	ds	1
  6843  000067                     atan@val_squared:
  6844                           	opt stack 0
  6845                           
  6846                           ; 3 bytes @ 0x7
  6847  000067                     	ds	1
  6848  000068                     ??i2_printf:
  6849                           
  6850                           ; 1 bytes @ 0x8
  6851  000068                     	ds	1
  6852  000069                     ??_sqrt:
  6853  000069                     sin@y:
  6854                           	opt stack 0
  6855                           
  6856                           ; 3 bytes @ 0x9
  6857  000069                     	ds	1
  6858  00006A                     atan@val:
  6859                           	opt stack 0
  6860                           
  6861                           ; 3 bytes @ 0xA
  6862  00006A                     	ds	2
  6863  00006C                     sqrt@og:
  6864                           	opt stack 0
  6865  00006C                     _sin$4110:
  6866                           	opt stack 0
  6867                           
  6868                           ; 3 bytes @ 0xC
  6869  00006C                     	ds	2
  6870  00006E                     i2_printf$4114:
  6871                           	opt stack 0
  6872                           
  6873                           ; 3 bytes @ 0xE
  6874  00006E                     	ds	1
  6875  00006F                     sqrt@i:
  6876                           	opt stack 0
  6877  00006F                     sin@x2:
  6878                           	opt stack 0
  6879                           
  6880                           ; 3 bytes @ 0xF
  6881  00006F                     	ds	1
  6882  000070                     sqrt@z:
  6883                           	opt stack 0
  6884                           
  6885                           ; 3 bytes @ 0x10
  6886  000070                     	ds	1
  6887  000071                     i2printf@idx:
  6888                           	opt stack 0
  6889                           
  6890                           ; 1 bytes @ 0x11
  6891  000071                     	ds	1
  6892  000072                     sin@sgn:
  6893                           	opt stack 0
  6894  000072                     i2printf@len:
  6895                           	opt stack 0
  6896                           
  6897                           ; 2 bytes @ 0x12
  6898  000072                     	ds	1
  6899  000073                     ?_currentMeasuredToPeak:
  6900                           	opt stack 0
  6901  000073                     currentMeasuredToPeak@Measured:
  6902                           	opt stack 0
  6903  000073                     sqrt@q:
  6904                           	opt stack 0
  6905                           
  6906                           ; 3 bytes @ 0x13
  6907  000073                     	ds	1
  6908  000074                     i2printf@cp:
  6909                           	opt stack 0
  6910                           
  6911                           ; 2 bytes @ 0x14
  6912  000074                     	ds	2
  6913  000076                     i2printf@ap:
  6914                           	opt stack 0
  6915  000076                     currentMeasuredToPeak@Angle:
  6916                           	opt stack 0
  6917  000076                     sqrt@x:
  6918                           	opt stack 0
  6919                           
  6920                           ; 3 bytes @ 0x16
  6921  000076                     	ds	2
  6922  000078                     i2printf@flag:
  6923                           	opt stack 0
  6924                           
  6925                           ; 2 bytes @ 0x18
  6926  000078                     	ds	1
  6927  000079                     ?_asin:
  6928                           	opt stack 0
  6929  000079                     currentMeasuredToPeak@Peak:
  6930                           	opt stack 0
  6931  000079                     asin@x:
  6932                           	opt stack 0
  6933                           
  6934                           ; 3 bytes @ 0x19
  6935  000079                     	ds	1
  6936  00007A                     i2printf@exp:
  6937                           	opt stack 0
  6938                           
  6939                           ; 2 bytes @ 0x1A
  6940  00007A                     	ds	2
  6941  00007C                     asin@sgn:
  6942                           	opt stack 0
  6943  00007C                     i2printf@tmpval:
  6944                           	opt stack 0
  6945                           
  6946                           ; 4 bytes @ 0x1C
  6947  00007C                     	ds	3
  6948  00007F                     _asin$4106:
  6949                           	opt stack 0
  6950                           
  6951                           ; 3 bytes @ 0x1F
  6952  00007F                     	ds	1
  6953  000080                     i2printf@fval:
  6954                           	opt stack 0
  6955                           
  6956                           ; 3 bytes @ 0x20
  6957  000080                     	ds	2
  6958  000082                     _asin$4109:
  6959                           	opt stack 0
  6960                           
  6961                           ; 3 bytes @ 0x22
  6962  000082                     	ds	1
  6963  000083                     i2printf@val:
  6964                           	opt stack 0
  6965                           
  6966                           ; 4 bytes @ 0x23
  6967  000083                     	ds	2
  6968  000085                     _asin$4108:
  6969                           	opt stack 0
  6970                           
  6971                           ; 3 bytes @ 0x25
  6972  000085                     	ds	2
  6973  000087                     i2printf@prec:
  6974                           	opt stack 0
  6975                           
  6976                           ; 2 bytes @ 0x27
  6977  000087                     	ds	1
  6978  000088                     asin@y:
  6979                           	opt stack 0
  6980                           
  6981                           ; 3 bytes @ 0x28
  6982  000088                     	ds	1
  6983  000089                     i2printf@c:
  6984                           	opt stack 0
  6985                           
  6986                           ; 1 bytes @ 0x29
  6987  000089                     	ds	2
  6988  00008B                     _asin$4107:
  6989                           	opt stack 0
  6990                           
  6991                           ; 3 bytes @ 0x2B
  6992  00008B                     	ds	3
  6993  00008E                     ?_acos:
  6994                           	opt stack 0
  6995  00008E                     acos@x:
  6996                           	opt stack 0
  6997                           
  6998                           ; 3 bytes @ 0x2E
  6999  00008E                     	ds	3
  7000  000091                     _acos$4105:
  7001                           	opt stack 0
  7002                           
  7003                           ; 3 bytes @ 0x31
  7004  000091                     	ds	3
  7005  000094                     ?_peakToRMS:
  7006                           	opt stack 0
  7007  000094                     peakToRMS@Peak:
  7008                           	opt stack 0
  7009                           
  7010                           ; 3 bytes @ 0x34
  7011  000094                     	ds	3
  7012  000097                     peakToRMS@Angle:
  7013                           	opt stack 0
  7014                           
  7015                           ; 3 bytes @ 0x37
  7016  000097                     	ds	3
  7017  00009A                     _peakToRMS$4098:
  7018                           	opt stack 0
  7019                           
  7020                           ; 3 bytes @ 0x3A
  7021  00009A                     	ds	3
  7022  00009D                     _peakToRMS$4099:
  7023                           	opt stack 0
  7024                           
  7025                           ; 3 bytes @ 0x3D
  7026  00009D                     	ds	3
  7027  0000A0                     _peakToRMS$4097:
  7028                           	opt stack 0
  7029                           
  7030                           ; 3 bytes @ 0x40
  7031  0000A0                     	ds	3
  7032  0000A3                     peakToRMS@RMS:
  7033                           	opt stack 0
  7034                           
  7035                           ; 3 bytes @ 0x43
  7036  0000A3                     	ds	3
  7037  0000A6                     _ADCPostProcessingCallback$4102:
  7038                           	opt stack 0
  7039                           
  7040                           ; 3 bytes @ 0x46
  7041  0000A6                     	ds	3
  7042  0000A9                     _ADCPostProcessingCallback$4103:
  7043                           	opt stack 0
  7044                           
  7045                           ; 3 bytes @ 0x49
  7046  0000A9                     	ds	3
  7047  0000AC                     _ADCPostProcessingCallback$4104:
  7048                           	opt stack 0
  7049                           
  7050                           ; 3 bytes @ 0x4C
  7051  0000AC                     	ds	3
  7052  0000AF                     ADCPostProcessingCallback@currentADCChannel:
  7053                           	opt stack 0
  7054                           
  7055                           ; 1 bytes @ 0x4F
  7056  0000AF                     	ds	1
  7057  0000B0                     _ADCPostProcessingCallback$4101:
  7058                           	opt stack 0
  7059                           
  7060                           ; 3 bytes @ 0x50
  7061  0000B0                     	ds	3
  7062  0000B3                     _ADCPostProcessingCallback$4100:
  7063                           	opt stack 0
  7064                           
  7065                           ; 3 bytes @ 0x53
  7066  0000B3                     	ds	3
  7067  0000B6                     ??_INTERRUPT_InterruptManagerHigh:
  7068                           
  7069                           ; 1 bytes @ 0x56
  7070  0000B6                     	ds	18
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           postinc0	equ	0xFEE
  7076                           wreg	equ	0xFE8
  7077                           postdec1	equ	0xFE5
  7078                           fsr1l	equ	0xFE1
  7079                           
  7080                           	psect	cstackCOMRAM
  7081  000001                     __pcstackCOMRAM:
  7082                           	opt stack 0
  7083  000001                     ??i2_isdigit:
  7084  000001                     ?_ADCC_GetConversionResult:
  7085                           	opt stack 0
  7086  000001                     ?i2___awmod:
  7087                           	opt stack 0
  7088  000001                     ?i2___ftpack:
  7089                           	opt stack 0
  7090  000001                     ?i2__div_to_l_:
  7091                           	opt stack 0
  7092  000001                     ?i2__tdiv_to_l_:
  7093                           	opt stack 0
  7094  000001                     ?i2___lldiv:
  7095                           	opt stack 0
  7096  000001                     i2EUSART2_Write@txData:
  7097                           	opt stack 0
  7098  000001                     TMR5_WriteTimer@timerVal:
  7099                           	opt stack 0
  7100  000001                     i2___awmod@dividend:
  7101                           	opt stack 0
  7102  000001                     frexp@value:
  7103                           	opt stack 0
  7104  000001                     i2__div_to_l_@f1:
  7105                           	opt stack 0
  7106  000001                     i2___ftpack@arg:
  7107                           	opt stack 0
  7108  000001                     i2__tdiv_to_l_@f1:
  7109                           	opt stack 0
  7110  000001                     i2___lldiv@dividend:
  7111                           	opt stack 0
  7112                           
  7113                           ; 4 bytes @ 0x0
  7114  000001                     	ds	1
  7115  000002                     i2putch@txData:
  7116                           	opt stack 0
  7117  000002                     i2_isdigit$3221:
  7118                           	opt stack 0
  7119                           
  7120                           ; 1 bytes @ 0x1
  7121  000002                     	ds	1
  7122  000003                     ??_ADCC_GetConversionResult:
  7123  000003                     i2isdigit@c:
  7124                           	opt stack 0
  7125  000003                     i2___awmod@divisor:
  7126                           	opt stack 0
  7127                           
  7128                           ; 2 bytes @ 0x2
  7129  000003                     	ds	1
  7130  000004                     i2___ftpack@exp:
  7131                           	opt stack 0
  7132  000004                     frexp@eptr:
  7133                           	opt stack 0
  7134  000004                     i2__div_to_l_@f2:
  7135                           	opt stack 0
  7136  000004                     i2__tdiv_to_l_@f2:
  7137                           	opt stack 0
  7138                           
  7139                           ; 3 bytes @ 0x3
  7140  000004                     	ds	1
  7141  000005                     i2___awmod@counter:
  7142                           	opt stack 0
  7143  000005                     i2___ftpack@sign:
  7144                           	opt stack 0
  7145  000005                     i2___lldiv@divisor:
  7146                           	opt stack 0
  7147                           
  7148                           ; 4 bytes @ 0x4
  7149  000005                     	ds	1
  7150  000006                     ??_frexp:
  7151  000006                     ??i2___ftpack:
  7152  000006                     i2___awmod@sign:
  7153                           	opt stack 0
  7154                           
  7155                           ; 1 bytes @ 0x5
  7156  000006                     	ds	1
  7157  000007                     ??i2__tdiv_to_l_:
  7158  000007                     ?i2___awdiv:
  7159                           	opt stack 0
  7160  000007                     i2___awdiv@dividend:
  7161                           	opt stack 0
  7162  000007                     i2__div_to_l_@quot:
  7163                           	opt stack 0
  7164                           
  7165                           ; 4 bytes @ 0x6
  7166  000007                     	ds	2
  7167  000009                     ?___lwtoft:
  7168                           	opt stack 0
  7169  000009                     ?i2___lltoft:
  7170                           	opt stack 0
  7171  000009                     ___lwtoft@c:
  7172                           	opt stack 0
  7173  000009                     i2___awdiv@divisor:
  7174                           	opt stack 0
  7175  000009                     i2___lldiv@quotient:
  7176                           	opt stack 0
  7177  000009                     i2___lltoft@c:
  7178                           	opt stack 0
  7179                           
  7180                           ; 4 bytes @ 0x8
  7181  000009                     	ds	1
  7182  00000A                     i2__tdiv_to_l_@quot:
  7183                           	opt stack 0
  7184                           
  7185                           ; 4 bytes @ 0x9
  7186  00000A                     	ds	1
  7187  00000B                     i2___awdiv@counter:
  7188                           	opt stack 0
  7189  00000B                     i2__div_to_l_@cntr:
  7190                           	opt stack 0
  7191                           
  7192                           ; 1 bytes @ 0xA
  7193  00000B                     	ds	1
  7194  00000C                     i2___awdiv@sign:
  7195                           	opt stack 0
  7196  00000C                     i2__div_to_l_@exp1:
  7197                           	opt stack 0
  7198                           
  7199                           ; 1 bytes @ 0xB
  7200  00000C                     	ds	1
  7201  00000D                     ??i2___lltoft:
  7202  00000D                     i2___lldiv@counter:
  7203                           	opt stack 0
  7204  00000D                     i2___awdiv@quotient:
  7205                           	opt stack 0
  7206                           
  7207                           ; 2 bytes @ 0xC
  7208  00000D                     	ds	1
  7209  00000E                     ?i2___llmod:
  7210                           	opt stack 0
  7211  00000E                     i2__tdiv_to_l_@cntr:
  7212                           	opt stack 0
  7213  00000E                     i2___llmod@dividend:
  7214                           	opt stack 0
  7215                           
  7216                           ; 4 bytes @ 0xD
  7217  00000E                     	ds	1
  7218  00000F                     ?i2___wmul:
  7219                           	opt stack 0
  7220  00000F                     i2__tdiv_to_l_@exp1:
  7221                           	opt stack 0
  7222  00000F                     i2___wmul@multiplier:
  7223                           	opt stack 0
  7224                           
  7225                           ; 2 bytes @ 0xE
  7226  00000F                     	ds	2
  7227  000011                     i2___lltoft@exp:
  7228                           	opt stack 0
  7229  000011                     i2___wmul@multiplicand:
  7230                           	opt stack 0
  7231                           
  7232                           ; 2 bytes @ 0x10
  7233  000011                     	ds	1
  7234  000012                     i2___llmod@divisor:
  7235                           	opt stack 0
  7236                           
  7237                           ; 4 bytes @ 0x11
  7238  000012                     	ds	1
  7239  000013                     i2___wmul@product:
  7240                           	opt stack 0
  7241                           
  7242                           ; 2 bytes @ 0x12
  7243  000013                     	ds	2
  7244  000015                     ?i2___ftdiv:
  7245                           	opt stack 0
  7246  000015                     i2___ftdiv@f1:
  7247                           	opt stack 0
  7248                           
  7249                           ; 3 bytes @ 0x14
  7250  000015                     	ds	1
  7251  000016                     i2___llmod@counter:
  7252                           	opt stack 0
  7253                           
  7254                           ; 1 bytes @ 0x15
  7255  000016                     	ds	2
  7256  000018                     i2___ftdiv@f2:
  7257                           	opt stack 0
  7258                           
  7259                           ; 3 bytes @ 0x17
  7260  000018                     	ds	3
  7261  00001B                     ??i2___ftdiv:
  7262                           
  7263                           ; 1 bytes @ 0x1A
  7264  00001B                     	ds	3
  7265  00001E                     i2___ftdiv@cntr:
  7266                           	opt stack 0
  7267                           
  7268                           ; 1 bytes @ 0x1D
  7269  00001E                     	ds	1
  7270  00001F                     i2___ftdiv@exp:
  7271                           	opt stack 0
  7272                           
  7273                           ; 1 bytes @ 0x1E
  7274  00001F                     	ds	1
  7275  000020                     i2___ftdiv@f3:
  7276                           	opt stack 0
  7277                           
  7278                           ; 3 bytes @ 0x1F
  7279  000020                     	ds	3
  7280  000023                     i2___ftdiv@sign:
  7281                           	opt stack 0
  7282                           
  7283                           ; 1 bytes @ 0x22
  7284  000023                     	ds	1
  7285  000024                     ?i2___ftneg:
  7286                           	opt stack 0
  7287  000024                     i2___ftneg@f1:
  7288                           	opt stack 0
  7289                           
  7290                           ; 3 bytes @ 0x23
  7291  000024                     	ds	3
  7292  000027                     ?_fabs:
  7293                           	opt stack 0
  7294  000027                     ?i2___ftmul:
  7295                           	opt stack 0
  7296  000027                     fabs@d:
  7297                           	opt stack 0
  7298  000027                     i2___ftmul@f1:
  7299                           	opt stack 0
  7300                           
  7301                           ; 3 bytes @ 0x26
  7302  000027                     	ds	3
  7303  00002A                     i2___ftge@ff1:
  7304                           	opt stack 0
  7305  00002A                     i2___ftmul@f2:
  7306                           	opt stack 0
  7307                           
  7308                           ; 3 bytes @ 0x29
  7309  00002A                     	ds	3
  7310  00002D                     ??i2___ftmul:
  7311  00002D                     i2___ftge@ff2:
  7312                           	opt stack 0
  7313                           
  7314                           ; 3 bytes @ 0x2C
  7315  00002D                     	ds	3
  7316  000030                     ??i2___ftge:
  7317  000030                     i2___ftmul@exp:
  7318                           	opt stack 0
  7319                           
  7320                           ; 1 bytes @ 0x2F
  7321  000030                     	ds	1
  7322  000031                     i2___ftmul@f3_as_product:
  7323                           	opt stack 0
  7324                           
  7325                           ; 3 bytes @ 0x30
  7326  000031                     	ds	3
  7327  000034                     i2___ftmul@cntr:
  7328                           	opt stack 0
  7329                           
  7330                           ; 1 bytes @ 0x33
  7331  000034                     	ds	1
  7332  000035                     i2___ftmul@sign:
  7333                           	opt stack 0
  7334                           
  7335                           ; 1 bytes @ 0x34
  7336  000035                     	ds	1
  7337  000036                     ?i2_fround:
  7338                           	opt stack 0
  7339  000036                     ?i2_scale:
  7340                           	opt stack 0
  7341                           
  7342                           ; 3 bytes @ 0x35
  7343  000036                     	ds	3
  7344  000039                     i2_fround$4112:
  7345                           	opt stack 0
  7346  000039                     i2_scale$4113:
  7347                           	opt stack 0
  7348                           
  7349                           ; 3 bytes @ 0x38
  7350  000039                     	ds	3
  7351  00003C                     i2scale@scl:
  7352                           	opt stack 0
  7353  00003C                     i2_fround$4111:
  7354                           	opt stack 0
  7355                           
  7356                           ; 3 bytes @ 0x3B
  7357  00003C                     	ds	1
  7358  00003D                     ?i2___fttol:
  7359                           	opt stack 0
  7360  00003D                     i2___fttol@f1:
  7361                           	opt stack 0
  7362                           
  7363                           ; 3 bytes @ 0x3C
  7364  00003D                     	ds	2
  7365  00003F                     i2fround@prec:
  7366                           	opt stack 0
  7367                           
  7368                           ; 1 bytes @ 0x3E
  7369  00003F                     	ds	1
  7370  000040                     ?i2___ftadd:
  7371                           	opt stack 0
  7372  000040                     i2___ftadd@f1:
  7373                           	opt stack 0
  7374                           
  7375                           ; 3 bytes @ 0x3F
  7376  000040                     	ds	1
  7377  000041                     ??i2___fttol:
  7378                           
  7379                           ; 1 bytes @ 0x40
  7380  000041                     	ds	2
  7381  000043                     i2___ftadd@f2:
  7382                           	opt stack 0
  7383                           
  7384                           ; 3 bytes @ 0x42
  7385  000043                     	ds	3
  7386  000046                     ??i2___ftadd:
  7387  000046                     i2___fttol@sign1:
  7388                           	opt stack 0
  7389                           
  7390                           ; 1 bytes @ 0x45
  7391  000046                     	ds	1
  7392  000047                     i2___fttol@lval:
  7393                           	opt stack 0
  7394                           
  7395                           ; 4 bytes @ 0x46
  7396  000047                     	ds	2
  7397  000049                     i2___ftadd@sign:
  7398                           	opt stack 0
  7399                           
  7400                           ; 1 bytes @ 0x48
  7401  000049                     	ds	1
  7402  00004A                     i2___ftadd@exp2:
  7403                           	opt stack 0
  7404                           
  7405                           ; 1 bytes @ 0x49
  7406  00004A                     	ds	1
  7407  00004B                     i2___ftadd@exp1:
  7408                           	opt stack 0
  7409  00004B                     i2___fttol@exp1:
  7410                           	opt stack 0
  7411                           
  7412                           ; 1 bytes @ 0x4A
  7413  00004B                     	ds	1
  7414  00004C                     ?_eval_poly:
  7415                           	opt stack 0
  7416  00004C                     ?___altoft:
  7417                           	opt stack 0
  7418  00004C                     eval_poly@x:
  7419                           	opt stack 0
  7420  00004C                     ___altoft@c:
  7421                           	opt stack 0
  7422                           
  7423                           ; 4 bytes @ 0x4B
  7424  00004C                     	ds	3
  7425  00004F                     eval_poly@d:
  7426                           	opt stack 0
  7427                           
  7428                           ; 2 bytes @ 0x4E
  7429  00004F                     	ds	1
  7430  000050                     ??___altoft:
  7431                           
  7432                           ; 1 bytes @ 0x4F
  7433  000050                     	ds	1
  7434  000051                     eval_poly@n:
  7435                           	opt stack 0
  7436                           
  7437                           ; 2 bytes @ 0x50
  7438  000051                     	ds	2
  7439  000053                     ??_eval_poly:
  7440                           
  7441                           ; 1 bytes @ 0x52
  7442  000053                     	ds	1
  7443  000054                     ___altoft@exp:
  7444                           	opt stack 0
  7445                           
  7446                           ; 1 bytes @ 0x53
  7447  000054                     	ds	1
  7448  000055                     ___altoft@sign:
  7449                           	opt stack 0
  7450  000055                     eval_poly@res:
  7451                           	opt stack 0
  7452                           
  7453                           ; 3 bytes @ 0x54
  7454  000055                     	ds	1
  7455  000056                     ?_floor:
  7456                           	opt stack 0
  7457  000056                     floor@x:
  7458                           	opt stack 0
  7459                           
  7460                           ; 3 bytes @ 0x55
  7461  000056                     	ds	2
  7462  000058                     ?_atan:
  7463                           	opt stack 0
  7464  000058                     atan@f:
  7465                           	opt stack 0
  7466                           
  7467                           ; 3 bytes @ 0x57
  7468  000058                     	ds	1
  7469  000059                     floor@i:
  7470                           	opt stack 0
  7471                           
  7472                           ; 3 bytes @ 0x58
  7473  000059                     	ds	2
  7474  00005B                     
  7475                           ; 1 bytes @ 0x5A
  7476  00005B                     	ds	1
  7477  00005C                     floor@expon:
  7478                           	opt stack 0
  7479                           
  7480                           ; 2 bytes @ 0x5B
  7481  00005C                     	ds	2
  7482  00005E                     tblptru	equ	0xFF8
  7483                           tblptrh	equ	0xFF7
  7484                           tblptrl	equ	0xFF6
  7485                           tablat	equ	0xFF5
  7486                           postinc0	equ	0xFEE
  7487                           wreg	equ	0xFE8
  7488                           postdec1	equ	0xFE5
  7489                           fsr1l	equ	0xFE1
  7490                           
  7491                           ; 1 bytes @ 0x5D
  7492 ;;
  7493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7494 ;;
  7495 ;; *************** function _main *****************
  7496 ;; Defined at:
  7497 ;;		line 443 in file "main.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7514 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;Total ram usage:        2 bytes
  7516 ;; Hardware stack levels required when called:   22
  7517 ;; This function calls:
  7518 ;;		_ADCC_SetADIInterruptHandler
  7519 ;;		_SYSTEM_Initialize
  7520 ;;		_TMR6_SetInterruptHandler
  7521 ;;		_TMR7_SetInterruptHandler
  7522 ;;		_terminal_clearTerminal
  7523 ;;		_terminal_ringBufferPull
  7524 ;;		_terminal_setCursorHome
  7525 ;;		_terminal_textAttributesReset
  7526 ;; This function is called by:
  7527 ;;		Startup code after reset
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text0
  7532  016272                     __ptext0:
  7533                           	opt stack 0
  7534  016272                     _main:
  7535                           	opt stack 9
  7536                           
  7537                           ;main.c: 448: _delay((unsigned long)((250)*(64000000/4000.0)));
  7538                           
  7539                           ;incstack = 0
  7540  016272  0E15               	movlw	21
  7541  016274  0101               	movlb	1	; () banked
  7542  016276  6FB2               	movwf	(??_main+1)& (0+255),b
  7543  016278  0E4B               	movlw	75
  7544  01627A  6FB1               	movwf	??_main& (0+255),b
  7545  01627C  0EBE               	movlw	190
  7546  01627E                     u19877:
  7547  01627E  2EE8               	decfsz	wreg,f,c
  7548  016280  D7FE               	bra	u19877
  7549  016282  2FB1               	decfsz	??_main& (0+255),f,b
  7550  016284  D7FC               	bra	u19877
  7551  016286  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  7552  016288  D7FA               	bra	u19877
  7553  01628A  F000               	nop	
  7554                           
  7555                           ;main.c: 451: SYSTEM_Initialize();
  7556  01628C  ECDD  F0B6         	call	_SYSTEM_Initialize	;wreg free
  7557                           
  7558                           ;main.c: 454: LATGbits.LATG0 = 0;
  7559  016290  907F               	bcf	3967,0,c	;volatile
  7560                           
  7561                           ;main.c: 455: LATGbits.LATG1 = 0;
  7562  016292  927F               	bcf	3967,1,c	;volatile
  7563                           
  7564                           ;main.c: 456: load_enable = 0;
  7565  016294  945E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7566                           
  7567                           ;main.c: 459: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7568  016296  0E60               	movlw	low _heartbeatTimerCallback
  7569  016298  0101               	movlb	1	; () banked
  7570  01629A  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7571  01629C  0E6B               	movlw	high _heartbeatTimerCallback
  7572  01629E  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7573  0162A0  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7574  0162A2  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7575  0162A4  EC65  F0B8         	call	_TMR6_SetInterruptHandler	;wreg free
  7576                           
  7577                           ;main.c: 462: ADCC_SetADIInterruptHandler(ADCPostProcessingCallback);
  7578  0162A8  0ECE               	movlw	low _ADCPostProcessingCallback
  7579  0162AA  0101               	movlb	1	; () banked
  7580  0162AC  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  7581  0162AE  0E22               	movlw	high _ADCPostProcessingCallback
  7582  0162B0  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  7583  0162B2  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7584  0162B4  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  7585  0162B6  EC81  F0B8         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7586                           
  7587                           ;main.c: 465: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7588  0162BA  0E82               	movlw	low _acquisitionTimerCallback
  7589  0162BC  0101               	movlb	1	; () banked
  7590  0162BE  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7591  0162C0  0E57               	movlw	high _acquisitionTimerCallback
  7592  0162C2  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7593  0162C4  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7594  0162C6  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7595  0162C8  EC5E  F0B8         	call	_TMR7_SetInterruptHandler	;wreg free
  7596                           
  7597                           ;main.c: 468: (INTCONbits.GIEH = 1);
  7598  0162CC  8EF2               	bsf	intcon,7,c	;volatile
  7599                           
  7600                           ;main.c: 471: (INTCONbits.GIEL = 1);
  7601  0162CE  8CF2               	bsf	intcon,6,c	;volatile
  7602                           
  7603                           ;main.c: 475: terminal_clearTerminal();
  7604  0162D0  EC40  F0B8         	call	_terminal_clearTerminal	;wreg free
  7605                           
  7606                           ;main.c: 476: terminal_setCursorHome();
  7607  0162D4  EC30  F0B8         	call	_terminal_setCursorHome	;wreg free
  7608                           
  7609                           ;main.c: 477: terminal_textAttributesReset();
  7610  0162D8  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  7611  0162DC                     
  7612                           ;main.c: 481: {
  7613                           ;main.c: 484: if (eusart2RxStringReady) {
  7614  0162DC  0100               	movlb	0	; () banked
  7615  0162DE  A1FF               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7616  0162E0  D7FD               	goto	l959
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;main.c: 486: terminal_ringBufferPull();
  7620  0162E2  EC41  F0A6         	call	_terminal_ringBufferPull	;wreg free
  7621  0162E6  D7FA               	goto	l959
  7622  0162E8                     __end_of_main:
  7623                           	opt stack 0
  7624                           tblptru	equ	0xFF8
  7625                           tblptrh	equ	0xFF7
  7626                           tblptrl	equ	0xFF6
  7627                           tablat	equ	0xFF5
  7628                           intcon	equ	0xFF2
  7629                           postinc0	equ	0xFEE
  7630                           wreg	equ	0xFE8
  7631                           postdec1	equ	0xFE5
  7632                           fsr1l	equ	0xFE1
  7633                           
  7634 ;; *************** function _terminal_setCursorHome *****************
  7635 ;; Defined at:
  7636 ;;		line 85 in file "ring_buffer_interface.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;		None
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;		None
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7654 ;;Total ram usage:        0 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:   18
  7657 ;; This function calls:
  7658 ;;		_printf
  7659 ;; This function is called by:
  7660 ;;		_main
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text1
  7665  017060                     __ptext1:
  7666                           	opt stack 0
  7667  017060                     _terminal_setCursorHome:
  7668                           	opt stack 12
  7669                           
  7670                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7671                           
  7672                           ;incstack = 0
  7673  017060  0EB8               	movlw	low STR_3
  7674  017062  0101               	movlb	1	; () banked
  7675  017064  6F64               	movwf	printf@f& (0+255),b
  7676  017066  0EFF               	movlw	high STR_3
  7677  017068  6F65               	movwf	(printf@f+1)& (0+255),b
  7678  01706A  ECB0  F086         	call	_printf	;wreg free
  7679  01706E  0012               	return		;funcret
  7680  017070                     __end_of_terminal_setCursorHome:
  7681                           	opt stack 0
  7682                           tblptru	equ	0xFF8
  7683                           tblptrh	equ	0xFF7
  7684                           tblptrl	equ	0xFF6
  7685                           tablat	equ	0xFF5
  7686                           intcon	equ	0xFF2
  7687                           postinc0	equ	0xFEE
  7688                           wreg	equ	0xFE8
  7689                           postdec1	equ	0xFE5
  7690                           fsr1l	equ	0xFE1
  7691                           
  7692 ;; *************** function _terminal_ringBufferPull *****************
  7693 ;; Defined at:
  7694 ;;		line 12 in file "ring_buffer_interface.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  index           2  173[BANK1 ] int 
  7699 ;;  index           2  175[BANK1 ] int 
  7700 ;;  charNumber      2  171[BANK1 ] int 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;Total ram usage:        9 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:   21
  7717 ;; This function calls:
  7718 ;;		_EUSART2_Read
  7719 ;;		_ringBufferLUT
  7720 ;;		_strlen
  7721 ;; This function is called by:
  7722 ;;		_main
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text2
  7727  014C82                     __ptext2:
  7728                           	opt stack 0
  7729  014C82                     _terminal_ringBufferPull:
  7730                           	opt stack 9
  7731                           
  7732                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  7733                           
  7734                           ;incstack = 0
  7735  014C82  C1D2  F1AB         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  7736  014C86  0101               	movlb	1	; () banked
  7737  014C88  6BAC               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  7738                           
  7739                           ; BSR set to: 1
  7740                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  7741  014C8A  0E00               	movlw	0
  7742  014C8C  6FB0               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  7743  014C8E  0E00               	movlw	0
  7744  014C90  6FAF               	movwf	terminal_ringBufferPull@index& (0+255),b
  7745  014C92                     l12686:
  7746                           
  7747                           ; BSR set to: 1
  7748  014C92  BFB0               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  7749  014C94  D006               	goto	l998
  7750  014C96  51B0               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7751  014C98  E10F               	bnz	l12696
  7752  014C9A  0E40               	movlw	64
  7753  014C9C  5DAF               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  7754  014C9E  B0D8               	btfsc	status,0,c
  7755  014CA0  D00B               	goto	u15740
  7756  014CA2                     l998:
  7757                           
  7758                           ; BSR set to: 1
  7759                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  7760                           
  7761                           ; BSR set to: 1
  7762  014CA2  0E42               	movlw	low _line
  7763  014CA4  25AF               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  7764  014CA6  6ED9               	movwf	fsr2l,c
  7765  014CA8  0E02               	movlw	high _line
  7766  014CAA  21B0               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7767  014CAC  6EDA               	movwf	fsr2h,c
  7768  014CAE  0E00               	movlw	0
  7769  014CB0  6EDF               	movwf	indf2,c
  7770                           
  7771                           ; BSR set to: 1
  7772  014CB2  4BAF               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  7773  014CB4  2BB0               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  7774  014CB6  D7ED               	goto	l12686
  7775  014CB8                     u15740:
  7776  014CB8                     l12696:
  7777                           
  7778                           ; BSR set to: 1
  7779                           ;ring_buffer_interface.c: 21: }
  7780                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  7781  014CB8  0E00               	movlw	0
  7782  014CBA  6FAE               	movwf	(terminal_ringBufferPull@index_2250+1)& (0+255),b
  7783  014CBC  0E00               	movlw	0
  7784  014CBE  6FAD               	movwf	terminal_ringBufferPull@index_2250& (0+255),b
  7785  014CC0  D00E               	goto	l1000
  7786  014CC2                     
  7787                           ; BSR set to: 1
  7788                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  7789                           
  7790                           ; BSR set to: 1
  7791  014CC2  EC07  F0B5         	call	_EUSART2_Read	;wreg free
  7792  014CC6  0101               	movlb	1	; () banked
  7793  014CC8  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7794  014CCA  0E42               	movlw	low _line
  7795  014CCC  25AD               	addwf	terminal_ringBufferPull@index_2250& (0+255),w,b
  7796  014CCE  6ED9               	movwf	fsr2l,c
  7797  014CD0  0E02               	movlw	high _line
  7798  014CD2  21AE               	addwfc	(terminal_ringBufferPull@index_2250+1)& (0+255),w,b
  7799  014CD4  6EDA               	movwf	fsr2h,c
  7800  014CD6  C1A8  FFDF         	movff	??_terminal_ringBufferPull,indf2
  7801                           
  7802                           ; BSR set to: 1
  7803  014CDA  4BAD               	infsnz	terminal_ringBufferPull@index_2250& (0+255),f,b
  7804  014CDC  2BAE               	incf	(terminal_ringBufferPull@index_2250+1)& (0+255),f,b
  7805  014CDE                     l1000:
  7806                           
  7807                           ; BSR set to: 1
  7808                           
  7809                           ; BSR set to: 1
  7810  014CDE  51AB               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  7811  014CE0  5DAD               	subwf	terminal_ringBufferPull@index_2250& (0+255),w,b
  7812  014CE2  51AE               	movf	(terminal_ringBufferPull@index_2250+1)& (0+255),w,b
  7813  014CE4  0A80               	xorlw	128
  7814  014CE6  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7815  014CE8  51AC               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  7816  014CEA  0A80               	xorlw	128
  7817  014CEC  59A8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  7818  014CEE  A0D8               	btfss	status,0,c
  7819  014CF0  D7E8               	goto	l1001
  7820                           
  7821                           ; BSR set to: 1
  7822                           ;ring_buffer_interface.c: 28: }
  7823                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  7824  014CF2  C0ED  F1D3         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  7825                           
  7826                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  7827                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  7828  014CF6  D017               	goto	l1003
  7829  014CF8                     
  7830                           ; BSR set to: 1
  7831                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  7832                           
  7833                           ; BSR set to: 1
  7834  014CF8  0EFF               	movlw	255
  7835  014CFA  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7836  014CFC  0EFF               	movlw	255
  7837  014CFE  6FA9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7838  014D00  0E42               	movlw	low _line
  7839  014D02  6F17               	movwf	strlen@s& (0+255),b
  7840  014D04  0E02               	movlw	high _line
  7841  014D06  6F18               	movwf	(strlen@s+1)& (0+255),b
  7842  014D08  ECA3  F0B3         	call	_strlen	;wreg free
  7843  014D0C  0101               	movlb	1	; () banked
  7844  014D0E  51A8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7845  014D10  2717               	addwf	?_strlen& (0+255),f,b
  7846  014D12  51A9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7847  014D14  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7848  014D16  0E42               	movlw	low _line
  7849  014D18  2517               	addwf	?_strlen& (0+255),w,b
  7850  014D1A  6ED9               	movwf	fsr2l,c
  7851  014D1C  0E02               	movlw	high _line
  7852  014D1E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7853  014D20  6EDA               	movwf	fsr2h,c
  7854  014D22  0E00               	movlw	0
  7855  014D24  6EDF               	movwf	indf2,c
  7856  014D26                     l1003:
  7857                           
  7858                           ; BSR set to: 1
  7859  014D26  0EFF               	movlw	255
  7860  014D28  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7861  014D2A  0EFF               	movlw	255
  7862  014D2C  6FA9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7863  014D2E  0E42               	movlw	low _line
  7864  014D30  6F17               	movwf	strlen@s& (0+255),b
  7865  014D32  0E02               	movlw	high _line
  7866  014D34  6F18               	movwf	(strlen@s+1)& (0+255),b
  7867  014D36  ECA3  F0B3         	call	_strlen	;wreg free
  7868  014D3A  0101               	movlb	1	; () banked
  7869  014D3C  51A8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7870  014D3E  2717               	addwf	?_strlen& (0+255),f,b
  7871  014D40  51A9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7872  014D42  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7873  014D44  0E42               	movlw	low _line
  7874  014D46  2517               	addwf	?_strlen& (0+255),w,b
  7875  014D48  6ED9               	movwf	fsr2l,c
  7876  014D4A  0E02               	movlw	high _line
  7877  014D4C  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7878  014D4E  6EDA               	movwf	fsr2h,c
  7879  014D50  0E0A               	movlw	10
  7880  014D52  18DE               	xorwf	postinc2,w,c
  7881  014D54  B4D8               	btfsc	status,2,c
  7882  014D56  D7D0               	goto	l1004
  7883                           
  7884                           ; BSR set to: 1
  7885  014D58  0EFF               	movlw	255
  7886  014D5A  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7887  014D5C  0EFF               	movlw	255
  7888  014D5E  6FA9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7889  014D60  0E42               	movlw	low _line
  7890  014D62  6F17               	movwf	strlen@s& (0+255),b
  7891  014D64  0E02               	movlw	high _line
  7892  014D66  6F18               	movwf	(strlen@s+1)& (0+255),b
  7893  014D68  ECA3  F0B3         	call	_strlen	;wreg free
  7894  014D6C  0101               	movlb	1	; () banked
  7895  014D6E  51A8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7896  014D70  2717               	addwf	?_strlen& (0+255),f,b
  7897  014D72  51A9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7898  014D74  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7899  014D76  0E42               	movlw	low _line
  7900  014D78  2517               	addwf	?_strlen& (0+255),w,b
  7901  014D7A  6ED9               	movwf	fsr2l,c
  7902  014D7C  0E02               	movlw	high _line
  7903  014D7E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7904  014D80  6EDA               	movwf	fsr2h,c
  7905  014D82  0E0D               	movlw	13
  7906  014D84  18DE               	xorwf	postinc2,w,c
  7907  014D86  B4D8               	btfsc	status,2,c
  7908  014D88  D7B7               	goto	l1004
  7909                           
  7910                           ; BSR set to: 1
  7911                           ;ring_buffer_interface.c: 40: }
  7912                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  7913  014D8A  0100               	movlb	0	; () banked
  7914  014D8C  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  7918  014D8E  0E42               	movlw	low _line
  7919  014D90  0101               	movlb	1	; () banked
  7920  014D92  6FA2               	movwf	ringBufferLUT@line& (0+255),b
  7921  014D94  0E02               	movlw	high _line
  7922  014D96  6FA3               	movwf	(ringBufferLUT@line+1)& (0+255),b
  7923  014D98  EC00  F080         	call	_ringBufferLUT	;wreg free
  7924  014D9C  0012               	return		;funcret
  7925  014D9E                     __end_of_terminal_ringBufferPull:
  7926                           	opt stack 0
  7927                           tblptru	equ	0xFF8
  7928                           tblptrh	equ	0xFF7
  7929                           tblptrl	equ	0xFF6
  7930                           tablat	equ	0xFF5
  7931                           intcon	equ	0xFF2
  7932                           postinc0	equ	0xFEE
  7933                           wreg	equ	0xFE8
  7934                           postdec1	equ	0xFE5
  7935                           fsr1l	equ	0xFE1
  7936                           indf2	equ	0xFDF
  7937                           postinc2	equ	0xFDE
  7938                           fsr2h	equ	0xFDA
  7939                           fsr2l	equ	0xFD9
  7940                           status	equ	0xFD8
  7941                           
  7942 ;; *************** function _ringBufferLUT *****************
  7943 ;; Defined at:
  7944 ;;		line 42 in file "ring_buffer_LUT.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  line            2  162[BANK1 ] PTR unsigned char 
  7947 ;;		 -> line(64), 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  angle_degree    3   22[BANK2 ] PTR unsigned char 
  7950 ;;  index           2   28[BANK2 ] int 
  7951 ;;  channel_name   22    0[BANK2 ] unsigned char [22]
  7952 ;;  userID          2   32[BANK2 ] int 
  7953 ;;  arg_buff        3   25[BANK2 ] unsigned char [3]
  7954 ;;  percentage      2   30[BANK2 ] int 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7964 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;      Totals:         0       0       6      34       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;Total ram usage:       40 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:   20
  7971 ;; This function calls:
  7972 ;;		_TMR7_StartTimer
  7973 ;;		___awtoft
  7974 ;;		___ftadd
  7975 ;;		___ftdiv
  7976 ;;		___ftmul
  7977 ;;		___ftneg
  7978 ;;		___wmul
  7979 ;;		_atoi
  7980 ;;		_getCauseOfReset
  7981 ;;		_getCauseOfResetString
  7982 ;;		_getDeviceID
  7983 ;;		_getDeviceIDString
  7984 ;;		_getMajorRevisionID
  7985 ;;		_getMinorRevisionID
  7986 ;;		_getRevisionIDString
  7987 ;;		_getUserID
  7988 ;;		_printf
  7989 ;;		_strcmp
  7990 ;;		_strcpy
  7991 ;;		_strstr
  7992 ;;		_terminal_printNewline
  7993 ;;		_terminal_textAttributes
  7994 ;;		_terminal_textAttributesReset
  7995 ;; This function is called by:
  7996 ;;		_terminal_ringBufferPull
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text3
  8001  010000                     __ptext3:
  8002                           	opt stack 0
  8003  010000                     _ringBufferLUT:
  8004                           	opt stack 9
  8005                           
  8006                           ;ring_buffer_LUT.c: 48: if((0 == strcmp(line, "Reset"))) {
  8007                           
  8008                           ;incstack = 0
  8009  010000  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8010  010004  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8011  010008  0E96               	movlw	low (STR_123+9)
  8012  01000A  0101               	movlb	1	; () banked
  8013  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  8014  01000E  0EFE               	movlw	high (STR_123+9)
  8015  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8016  010012  EC24  F0B4         	call	_strcmp	;wreg free
  8017  010016  0101               	movlb	1	; () banked
  8018  010018  5117               	movf	?_strcmp& (0+255),w,b
  8019  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8020  01001C  A4D8               	btfss	status,2,c
  8021  01001E  D00F               	goto	l1149
  8022                           
  8023                           ; BSR set to: 1
  8024                           ;ring_buffer_LUT.c: 51: printf("\033[2J");
  8025  010020  0EAF               	movlw	low STR_2
  8026  010022  6F64               	movwf	printf@f& (0+255),b
  8027  010024  0EFF               	movlw	high STR_2
  8028  010026  6F65               	movwf	(printf@f+1)& (0+255),b
  8029  010028  ECB0  F086         	call	_printf	;wreg free
  8030                           
  8031                           ;ring_buffer_LUT.c: 54: printf("\033[H");
  8032  01002C  0EB8               	movlw	low STR_3
  8033  01002E  0101               	movlb	1	; () banked
  8034  010030  6F64               	movwf	printf@f& (0+255),b
  8035  010032  0EFF               	movlw	high STR_3
  8036  010034  6F65               	movwf	(printf@f+1)& (0+255),b
  8037  010036  ECB0  F086         	call	_printf	;wreg free
  8038  01003A  00FF               	reset		;# 
  8039                           
  8040                           ;ring_buffer_LUT.c: 59: }
  8041  01003C  0012               	return	
  8042  01003E                     l1149:
  8043                           
  8044                           ;ring_buffer_LUT.c: 62: else if((0 == strcmp(line, "Clear"))) {
  8045  01003E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8046  010042  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8047  010046  0E9F               	movlw	low STR_44
  8048  010048  0101               	movlb	1	; () banked
  8049  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  8050  01004C  0EFF               	movlw	high STR_44
  8051  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8052  010050  EC24  F0B4         	call	_strcmp	;wreg free
  8053  010054  0101               	movlb	1	; () banked
  8054  010056  5117               	movf	?_strcmp& (0+255),w,b
  8055  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8056  01005A  A4D8               	btfss	status,2,c
  8057  01005C  D00E               	goto	l1151
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;ring_buffer_LUT.c: 65: printf("\033[2J");
  8061  01005E  0EAF               	movlw	low STR_2
  8062  010060  6F64               	movwf	printf@f& (0+255),b
  8063  010062  0EFF               	movlw	high STR_2
  8064  010064  6F65               	movwf	(printf@f+1)& (0+255),b
  8065  010066  ECB0  F086         	call	_printf	;wreg free
  8066                           
  8067                           ;ring_buffer_LUT.c: 68: printf("\033[H");
  8068  01006A  0EB8               	movlw	low STR_3
  8069  01006C  0101               	movlb	1	; () banked
  8070  01006E  6F64               	movwf	printf@f& (0+255),b
  8071  010070  0EFF               	movlw	high STR_3
  8072  010072  6F65               	movwf	(printf@f+1)& (0+255),b
  8073  010074  ECB0  F086         	call	_printf	;wreg free
  8074                           
  8075                           ;ring_buffer_LUT.c: 70: }
  8076  010078  0012               	return	
  8077  01007A                     l1151:
  8078                           
  8079                           ;ring_buffer_LUT.c: 73: else if((0 == strcmp(line, "Cause of Reset?"))) {
  8080  01007A  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8081  01007E  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8082  010082  0E5D               	movlw	low STR_47
  8083  010084  0101               	movlb	1	; () banked
  8084  010086  6F19               	movwf	strcmp@s2& (0+255),b
  8085  010088  0EFE               	movlw	high STR_47
  8086  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8087  01008C  EC24  F0B4         	call	_strcmp	;wreg free
  8088  010090  0101               	movlb	1	; () banked
  8089  010092  5117               	movf	?_strcmp& (0+255),w,b
  8090  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8091  010096  A4D8               	btfss	status,2,c
  8092  010098  D01E               	goto	l1153
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;ring_buffer_LUT.c: 76: terminal_printNewline();
  8096  01009A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8097                           
  8098                           ;ring_buffer_LUT.c: 78: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8099  01009E  0E00               	movlw	0
  8100  0100A0  0101               	movlb	1	; () banked
  8101  0100A2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8102  0100A4  0E00               	movlw	0
  8103  0100A6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8104  0100A8  0E02               	movlw	2
  8105  0100AA  EC0B  F099         	call	_terminal_textAttributes
  8106                           
  8107                           ;ring_buffer_LUT.c: 81: printf("The cause of the most recent device reset was: %s\n\r",
  8108                           ;ring_buffer_LUT.c: 82: getCauseOfResetString(getCauseOfReset()));
  8109  0100AE  0EB9               	movlw	low STR_48
  8110  0100B0  0101               	movlb	1	; () banked
  8111  0100B2  6F64               	movwf	printf@f& (0+255),b
  8112  0100B4  0EF8               	movlw	high STR_48
  8113  0100B6  6F65               	movwf	(printf@f+1)& (0+255),b
  8114  0100B8  ECA1  F0A9         	call	_getCauseOfReset	;wreg free
  8115  0100BC  EC93  F0B6         	call	_getCauseOfResetString
  8116  0100C0  C117  F166         	movff	?_getCauseOfResetString,?_printf+2
  8117  0100C4  C118  F167         	movff	?_getCauseOfResetString+1,?_printf+3
  8118  0100C8  ECB0  F086         	call	_printf	;wreg free
  8119                           
  8120                           ;ring_buffer_LUT.c: 85: terminal_textAttributesReset();
  8121  0100CC  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8122                           
  8123                           ;ring_buffer_LUT.c: 87: terminal_printNewline();
  8124  0100D0  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8125                           
  8126                           ;ring_buffer_LUT.c: 89: }
  8127  0100D4  0012               	return	
  8128  0100D6                     l1153:
  8129                           
  8130                           ;ring_buffer_LUT.c: 92: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  8131  0100D6  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8132  0100DA  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8133  0100DE  0E99               	movlw	low STR_49
  8134  0100E0  0101               	movlb	1	; () banked
  8135  0100E2  6F19               	movwf	strcmp@s2& (0+255),b
  8136  0100E4  0EFF               	movlw	high STR_49
  8137  0100E6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8138  0100E8  EC24  F0B4         	call	_strcmp	;wreg free
  8139  0100EC  0101               	movlb	1	; () banked
  8140  0100EE  5117               	movf	?_strcmp& (0+255),w,b
  8141  0100F0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8142  0100F2  B4D8               	btfsc	status,2,c
  8143  0100F4  D00F               	goto	u14730
  8144                           
  8145                           ; BSR set to: 1
  8146  0100F6  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8147  0100FA  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8148  0100FE  0EB4               	movlw	low STR_50
  8149  010100  6F19               	movwf	strcmp@s2& (0+255),b
  8150  010102  0EFF               	movlw	high STR_50
  8151  010104  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8152  010106  EC24  F0B4         	call	_strcmp	;wreg free
  8153  01010A  0101               	movlb	1	; () banked
  8154  01010C  5117               	movf	?_strcmp& (0+255),w,b
  8155  01010E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8156  010110  A4D8               	btfss	status,2,c
  8157  010112  D01D               	goto	l1155
  8158  010114                     u14730:
  8159                           
  8160                           ; BSR set to: 1
  8161                           ;ring_buffer_LUT.c: 95: terminal_printNewline();
  8162                           
  8163                           ; BSR set to: 1
  8164  010114  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8165                           
  8166                           ;ring_buffer_LUT.c: 97: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8167  010118  0E00               	movlw	0
  8168  01011A  0101               	movlb	1	; () banked
  8169  01011C  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8170  01011E  0E00               	movlw	0
  8171  010120  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8172  010122  0E02               	movlw	2
  8173  010124  EC0B  F099         	call	_terminal_textAttributes
  8174                           
  8175                           ;ring_buffer_LUT.c: 99: printf("AC Power Meter\n\r");
  8176  010128  0EFA               	movlw	low STR_51
  8177  01012A  0101               	movlb	1	; () banked
  8178  01012C  6F64               	movwf	printf@f& (0+255),b
  8179  01012E  0EFD               	movlw	high STR_51
  8180  010130  6F65               	movwf	(printf@f+1)& (0+255),b
  8181  010132  ECB0  F086         	call	_printf	;wreg free
  8182                           
  8183                           ;ring_buffer_LUT.c: 100: printf("Marquette University ELEN 3035 Final Project\n\r");
  8184  010136  0E4E               	movlw	low STR_52
  8185  010138  0101               	movlb	1	; () banked
  8186  01013A  6F64               	movwf	printf@f& (0+255),b
  8187  01013C  0EF9               	movlw	high STR_52
  8188  01013E  6F65               	movwf	(printf@f+1)& (0+255),b
  8189  010140  ECB0  F086         	call	_printf	;wreg free
  8190                           
  8191                           ;ring_buffer_LUT.c: 102: terminal_textAttributesReset();
  8192  010144  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8193                           
  8194                           ;ring_buffer_LUT.c: 104: terminal_printNewline();
  8195  010148  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8196                           
  8197                           ;ring_buffer_LUT.c: 106: }
  8198  01014C  0012               	return	
  8199  01014E                     l1155:
  8200                           
  8201                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "Device ID?"))) {
  8202  01014E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8203  010152  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8204  010156  0E5B               	movlw	low STR_53
  8205  010158  0101               	movlb	1	; () banked
  8206  01015A  6F19               	movwf	strcmp@s2& (0+255),b
  8207  01015C  0EFF               	movlw	high STR_53
  8208  01015E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8209  010160  EC24  F0B4         	call	_strcmp	;wreg free
  8210  010164  0101               	movlb	1	; () banked
  8211  010166  5117               	movf	?_strcmp& (0+255),w,b
  8212  010168  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8213  01016A  A4D8               	btfss	status,2,c
  8214  01016C  D027               	goto	l1159
  8215                           
  8216                           ; BSR set to: 1
  8217                           ;ring_buffer_LUT.c: 112: terminal_printNewline();
  8218  01016E  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8219                           
  8220                           ;ring_buffer_LUT.c: 114: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8221  010172  0E00               	movlw	0
  8222  010174  0101               	movlb	1	; () banked
  8223  010176  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8224  010178  0E00               	movlw	0
  8225  01017A  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8226  01017C  0E02               	movlw	2
  8227  01017E  EC0B  F099         	call	_terminal_textAttributes
  8228                           
  8229                           ;ring_buffer_LUT.c: 117: printf("Flash memory device ID is: 0x%X. This corresponds to a 
      +                          device "
  8230                           ;ring_buffer_LUT.c: 118: "part number of %s\n\r",
  8231                           ;ring_buffer_LUT.c: 119: getDeviceID(),
  8232                           ;ring_buffer_LUT.c: 120: getDeviceIDString(getDeviceID));
  8233  010182  0E80               	movlw	low STR_54
  8234  010184  0101               	movlb	1	; () banked
  8235  010186  6F64               	movwf	printf@f& (0+255),b
  8236  010188  0EF6               	movlw	high STR_54
  8237  01018A  6F65               	movwf	(printf@f+1)& (0+255),b
  8238  01018C  ECB1  F0B7         	call	_getDeviceID	;wreg free
  8239  010190  C122  F166         	movff	?_getDeviceID,?_printf+2
  8240  010194  C123  F167         	movff	?_getDeviceID+1,?_printf+3
  8241  010198  0E6F               	movlw	high _getDeviceID
  8242  01019A  0101               	movlb	1	; () banked
  8243  01019C  6F1E               	movwf	(getDeviceIDString@inputDevID+1)& (0+255),b
  8244  01019E  0E62               	movlw	low _getDeviceID
  8245  0101A0  6F1D               	movwf	getDeviceIDString@inputDevID& (0+255),b
  8246  0101A2  EC34  F0AF         	call	_getDeviceIDString	;wreg free
  8247  0101A6  C11D  F168         	movff	?_getDeviceIDString,?_printf+4
  8248  0101AA  C11E  F169         	movff	?_getDeviceIDString+1,?_printf+5
  8249  0101AE  ECB0  F086         	call	_printf	;wreg free
  8250                           
  8251                           ;ring_buffer_LUT.c: 123: terminal_textAttributesReset();
  8252  0101B2  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8253                           
  8254                           ;ring_buffer_LUT.c: 125: terminal_printNewline();
  8255  0101B6  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8256                           
  8257                           ;ring_buffer_LUT.c: 127: }
  8258  0101BA  0012               	return	
  8259  0101BC                     l1159:
  8260                           
  8261                           ;ring_buffer_LUT.c: 130: else if((0 == strcmp(line, "Revision ID?"))) {
  8262  0101BC  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8263  0101C0  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8264  0101C4  0E1C               	movlw	low STR_55
  8265  0101C6  0101               	movlb	1	; () banked
  8266  0101C8  6F19               	movwf	strcmp@s2& (0+255),b
  8267  0101CA  0EFF               	movlw	high STR_55
  8268  0101CC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8269  0101CE  EC24  F0B4         	call	_strcmp	;wreg free
  8270  0101D2  0101               	movlb	1	; () banked
  8271  0101D4  5117               	movf	?_strcmp& (0+255),w,b
  8272  0101D6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8273  0101D8  A4D8               	btfss	status,2,c
  8274  0101DA  D022               	goto	l1161
  8275                           
  8276                           ; BSR set to: 1
  8277                           ;ring_buffer_LUT.c: 133: terminal_printNewline();
  8278  0101DC  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8279                           
  8280                           ;ring_buffer_LUT.c: 135: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8281  0101E0  0E00               	movlw	0
  8282  0101E2  0101               	movlb	1	; () banked
  8283  0101E4  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8284  0101E6  0E00               	movlw	0
  8285  0101E8  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8286  0101EA  0E02               	movlw	2
  8287  0101EC  EC0B  F099         	call	_terminal_textAttributes
  8288                           
  8289                           ;ring_buffer_LUT.c: 138: printf("Flash memory revision ID is: %s\n\r",
  8290                           ;ring_buffer_LUT.c: 139: getRevisionIDString(getMajorRevisionID(),getMinorRevisionID()))
      +                          ;
  8291  0101F0  0E57               	movlw	low STR_56
  8292  0101F2  0101               	movlb	1	; () banked
  8293  0101F4  6F64               	movwf	printf@f& (0+255),b
  8294  0101F6  0EFB               	movlw	high STR_56
  8295  0101F8  6F65               	movwf	(printf@f+1)& (0+255),b
  8296  0101FA  EC30  F0B7         	call	_getMinorRevisionID	;wreg free
  8297  0101FE  0101               	movlb	1	; () banked
  8298  010200  6F27               	movwf	getRevisionIDString@inputMinRevID& (0+255),b
  8299  010202  ECED  F0B5         	call	_getMajorRevisionID	;wreg free
  8300  010206  ECA7  F0AE         	call	_getRevisionIDString
  8301  01020A  C127  F166         	movff	?_getRevisionIDString,?_printf+2
  8302  01020E  C128  F167         	movff	?_getRevisionIDString+1,?_printf+3
  8303  010212  ECB0  F086         	call	_printf	;wreg free
  8304                           
  8305                           ;ring_buffer_LUT.c: 142: terminal_textAttributesReset();
  8306  010216  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8307                           
  8308                           ;ring_buffer_LUT.c: 144: terminal_printNewline();
  8309  01021A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8310                           
  8311                           ;ring_buffer_LUT.c: 146: }
  8312  01021E  0012               	return	
  8313  010220                     l1161:
  8314                           
  8315                           ;ring_buffer_LUT.c: 149: else if((0 == strcmp(line, "User IDs?"))) {
  8316  010220  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8317  010224  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8318  010228  0E7B               	movlw	low STR_57
  8319  01022A  0101               	movlb	1	; () banked
  8320  01022C  6F19               	movwf	strcmp@s2& (0+255),b
  8321  01022E  0EFF               	movlw	high STR_57
  8322  010230  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8323  010232  EC24  F0B4         	call	_strcmp	;wreg free
  8324  010236  0101               	movlb	1	; () banked
  8325  010238  5117               	movf	?_strcmp& (0+255),w,b
  8326  01023A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8327  01023C  A4D8               	btfss	status,2,c
  8328  01023E  D054               	goto	l1163
  8329                           
  8330                           ; BSR set to: 1
  8331                           ;ring_buffer_LUT.c: 152: terminal_printNewline();
  8332  010240  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8333                           
  8334                           ;ring_buffer_LUT.c: 154: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8335  010244  0E00               	movlw	0
  8336  010246  0101               	movlb	1	; () banked
  8337  010248  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8338  01024A  0E00               	movlw	0
  8339  01024C  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8340  01024E  0E02               	movlw	2
  8341  010250  EC0B  F099         	call	_terminal_textAttributes
  8342                           
  8343                           ;ring_buffer_LUT.c: 156: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8344  010254  0E5B               	movlw	low STR_58
  8345  010256  0101               	movlb	1	; () banked
  8346  010258  6F64               	movwf	printf@f& (0+255),b
  8347  01025A  0EF7               	movlw	high STR_58
  8348  01025C  6F65               	movwf	(printf@f+1)& (0+255),b
  8349  01025E  ECB0  F086         	call	_printf	;wreg free
  8350                           
  8351                           ;ring_buffer_LUT.c: 159: for (int userID = 0; userID <= 7; userID++) {
  8352  010262  0E00               	movlw	0
  8353  010264  0102               	movlb	2	; () banked
  8354  010266  6FA3               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8355  010268  0E00               	movlw	0
  8356  01026A  6FA2               	movwf	ringBufferLUT@userID& (0+255),b
  8357  01026C                     l12126:
  8358                           
  8359                           ; BSR set to: 2
  8360  01026C  BFA3               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8361  01026E  D006               	goto	l1164
  8362  010270  51A3               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8363  010272  E135               	bnz	l12136
  8364  010274  0E08               	movlw	8
  8365  010276  5DA2               	subwf	ringBufferLUT@userID& (0+255),w,b
  8366  010278  B0D8               	btfsc	status,0,c
  8367  01027A  D031               	goto	u14780
  8368  01027C                     l1164:
  8369                           
  8370                           ; BSR set to: 2
  8371                           ;ring_buffer_LUT.c: 161: printf("    User ID Word %d (Flash address 0x%X): 0x%X\n\r",
  8372                           ;ring_buffer_LUT.c: 162: userID,
  8373                           ;ring_buffer_LUT.c: 163: (0x200000 + (2 * userID)),
  8374                           ;ring_buffer_LUT.c: 164: getUserID(userID));
  8375                           
  8376                           ; BSR set to: 2
  8377  01027C  0EED               	movlw	low STR_59
  8378  01027E  0101               	movlb	1	; () banked
  8379  010280  6F64               	movwf	printf@f& (0+255),b
  8380  010282  0EF8               	movlw	high STR_59
  8381  010284  6F65               	movwf	(printf@f+1)& (0+255),b
  8382  010286  C2A2  F166         	movff	ringBufferLUT@userID,?_printf+2
  8383  01028A  C2A3  F167         	movff	ringBufferLUT@userID+1,?_printf+3
  8384  01028E  90D8               	bcf	status,0,c
  8385  010290  0102               	movlb	2	; () banked
  8386  010292  35A2               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8387  010294  0101               	movlb	1	; () banked
  8388  010296  6FA4               	movwf	??_ringBufferLUT& (0+255),b
  8389  010298  0102               	movlb	2	; () banked
  8390  01029A  35A3               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8391  01029C  0101               	movlb	1	; () banked
  8392  01029E  6FA5               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8393  0102A0  6BA6               	clrf	(??_ringBufferLUT+2)& (0+255),b
  8394  0102A2  BFA5               	btfsc	(??_ringBufferLUT+1)& (0+255),7,b
  8395  0102A4  07A6               	decf	(??_ringBufferLUT+2)& (0+255),f,b
  8396  0102A6  51A6               	movf	(??_ringBufferLUT+2)& (0+255),w,b
  8397  0102A8  6FA7               	movwf	(??_ringBufferLUT+3)& (0+255),b
  8398  0102AA  0E00               	movlw	0
  8399  0102AC  25A4               	addwf	??_ringBufferLUT& (0+255),w,b
  8400  0102AE  6F68               	movwf	(?_printf+4)& (0+255),b
  8401  0102B0  0E00               	movlw	0
  8402  0102B2  21A5               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  8403  0102B4  6F69               	movwf	(?_printf+5)& (0+255),b
  8404  0102B6  0E20               	movlw	32
  8405  0102B8  21A6               	addwfc	(??_ringBufferLUT+2)& (0+255),w,b
  8406  0102BA  6F6A               	movwf	(?_printf+6)& (0+255),b
  8407  0102BC  0E00               	movlw	0
  8408  0102BE  21A7               	addwfc	(??_ringBufferLUT+3)& (0+255),w,b
  8409  0102C0  6F6B               	movwf	(?_printf+7)& (0+255),b
  8410  0102C2  0102               	movlb	2	; () banked
  8411  0102C4  51A2               	movf	ringBufferLUT@userID& (0+255),w,b
  8412  0102C6  ECCF  F0B5         	call	_getUserID
  8413  0102CA  C122  F16C         	movff	?_getUserID,?_printf+8
  8414  0102CE  C123  F16D         	movff	?_getUserID+1,?_printf+9
  8415  0102D2  ECB0  F086         	call	_printf	;wreg free
  8416  0102D6  0102               	movlb	2	; () banked
  8417  0102D8  4BA2               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8418  0102DA  2BA3               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8419  0102DC  D7C7               	goto	l12126
  8420  0102DE                     u14780:
  8421  0102DE                     l12136:
  8422                           
  8423                           ; BSR set to: 2
  8424                           ;ring_buffer_LUT.c: 166: }
  8425                           ;ring_buffer_LUT.c: 169: terminal_textAttributesReset();
  8426  0102DE  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8427                           
  8428                           ;ring_buffer_LUT.c: 171: terminal_printNewline();
  8429  0102E2  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8430                           
  8431                           ;ring_buffer_LUT.c: 173: }
  8432  0102E6  0012               	return	
  8433  0102E8                     l1163:
  8434                           
  8435                           ;ring_buffer_LUT.c: 176: else if((0 == strcmp(line, "ADC Error?"))) {
  8436  0102E8  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8437  0102EC  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8438  0102F0  0E66               	movlw	low STR_60
  8439  0102F2  0101               	movlb	1	; () banked
  8440  0102F4  6F19               	movwf	strcmp@s2& (0+255),b
  8441  0102F6  0EFF               	movlw	high STR_60
  8442  0102F8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8443  0102FA  EC24  F0B4         	call	_strcmp	;wreg free
  8444  0102FE  0101               	movlb	1	; () banked
  8445  010300  5117               	movf	?_strcmp& (0+255),w,b
  8446  010302  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8447  010304  A4D8               	btfss	status,2,c
  8448  010306  D0AD               	goto	l1167
  8449                           
  8450                           ; BSR set to: 1
  8451                           ;ring_buffer_LUT.c: 178: if (adc_error_flag) {
  8452  010308  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8453  01030A  D095               	goto	l1168
  8454                           
  8455                           ; BSR set to: 1
  8456                           ;ring_buffer_LUT.c: 181: terminal_printNewline();
  8457  01030C  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8458                           
  8459                           ;ring_buffer_LUT.c: 183: terminal_textAttributes(RED, BLACK, NORMAL);
  8460  010310  0E00               	movlw	0
  8461  010312  0101               	movlb	1	; () banked
  8462  010314  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8463  010316  0E00               	movlw	0
  8464  010318  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8465  01031A  0E01               	movlw	1
  8466  01031C  EC0B  F099         	call	_terminal_textAttributes
  8467                           
  8468                           ;ring_buffer_LUT.c: 186: current_adc_channel = ADPCH;
  8469  010320  CF5F F1D1          	movff	3935,_current_adc_channel	;volatile
  8470                           
  8471                           ;ring_buffer_LUT.c: 189: char channel_name[22];
  8472                           ;ring_buffer_LUT.c: 191: switch (current_adc_channel) {
  8473  010324  D060               	goto	l1169
  8474  010326                     
  8475                           ;ring_buffer_LUT.c: 194: strcpy(channel_name, "ISNS");
  8476  010326  0E82               	movlw	low ringBufferLUT@channel_name
  8477  010328  0101               	movlb	1	; () banked
  8478  01032A  6F17               	movwf	strcpy@to& (0+255),b
  8479  01032C  0E02               	movlw	high ringBufferLUT@channel_name
  8480  01032E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8481  010330  0EA5               	movlw	low STR_61
  8482  010332  6F19               	movwf	strcpy@from& (0+255),b
  8483  010334  0EFF               	movlw	high STR_61
  8484  010336  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8485  010338  ECE3  F0B4         	call	_strcpy	;wreg free
  8486                           
  8487                           ;ring_buffer_LUT.c: 195: break;
  8488  01033C  D06C               	goto	l1171
  8489  01033E                     
  8490                           ;ring_buffer_LUT.c: 198: strcpy(channel_name, "POS12");
  8491  01033E  0E82               	movlw	low ringBufferLUT@channel_name
  8492  010340  0101               	movlb	1	; () banked
  8493  010342  6F17               	movwf	strcpy@to& (0+255),b
  8494  010344  0E02               	movlw	high ringBufferLUT@channel_name
  8495  010346  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8496  010348  0E93               	movlw	low STR_62
  8497  01034A  6F19               	movwf	strcpy@from& (0+255),b
  8498  01034C  0EFF               	movlw	high STR_62
  8499  01034E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8500  010350  ECE3  F0B4         	call	_strcpy	;wreg free
  8501                           
  8502                           ;ring_buffer_LUT.c: 199: break;
  8503  010354  D060               	goto	l1171
  8504  010356                     
  8505                           ;ring_buffer_LUT.c: 202: strcpy(channel_name, "POS3P3");
  8506  010356  0E82               	movlw	low ringBufferLUT@channel_name
  8507  010358  0101               	movlb	1	; () banked
  8508  01035A  6F17               	movwf	strcpy@to& (0+255),b
  8509  01035C  0E02               	movlw	high ringBufferLUT@channel_name
  8510  01035E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8511  010360  0E8C               	movlw	low STR_63
  8512  010362  6F19               	movwf	strcpy@from& (0+255),b
  8513  010364  0EFF               	movlw	high STR_63
  8514  010366  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8515  010368  ECE3  F0B4         	call	_strcpy	;wreg free
  8516                           
  8517                           ;ring_buffer_LUT.c: 203: break;
  8518  01036C  D054               	goto	l1171
  8519  01036E                     
  8520                           ;ring_buffer_LUT.c: 206: strcpy(channel_name, "Internal AVSS");
  8521  01036E  0E82               	movlw	low ringBufferLUT@channel_name
  8522  010370  0101               	movlb	1	; () banked
  8523  010372  6F17               	movwf	strcpy@to& (0+255),b
  8524  010374  0E02               	movlw	high ringBufferLUT@channel_name
  8525  010376  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8526  010378  0EF3               	movlw	low STR_64
  8527  01037A  6F19               	movwf	strcpy@from& (0+255),b
  8528  01037C  0EFE               	movlw	high STR_64
  8529  01037E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8530  010380  ECE3  F0B4         	call	_strcpy	;wreg free
  8531                           
  8532                           ;ring_buffer_LUT.c: 207: break;
  8533  010384  D048               	goto	l1171
  8534  010386                     
  8535                           ;ring_buffer_LUT.c: 210: strcpy(channel_name, "Internal Temp");
  8536  010386  0E82               	movlw	low ringBufferLUT@channel_name
  8537  010388  0101               	movlb	1	; () banked
  8538  01038A  6F17               	movwf	strcpy@to& (0+255),b
  8539  01038C  0E02               	movlw	high ringBufferLUT@channel_name
  8540  01038E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8541  010390  0E01               	movlw	low STR_65
  8542  010392  6F19               	movwf	strcpy@from& (0+255),b
  8543  010394  0EFF               	movlw	high STR_65
  8544  010396  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8545  010398  ECE3  F0B4         	call	_strcpy	;wreg free
  8546                           
  8547                           ;ring_buffer_LUT.c: 211: break;
  8548  01039C  D03C               	goto	l1171
  8549  01039E                     
  8550                           ;ring_buffer_LUT.c: 214: strcpy(channel_name, "Internal DAC1");
  8551  01039E  0E82               	movlw	low ringBufferLUT@channel_name
  8552  0103A0  0101               	movlb	1	; () banked
  8553  0103A2  6F17               	movwf	strcpy@to& (0+255),b
  8554  0103A4  0E02               	movlw	high ringBufferLUT@channel_name
  8555  0103A6  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8556  0103A8  0EC9               	movlw	low STR_66
  8557  0103AA  6F19               	movwf	strcpy@from& (0+255),b
  8558  0103AC  0EFE               	movlw	high STR_66
  8559  0103AE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8560  0103B0  ECE3  F0B4         	call	_strcpy	;wreg free
  8561                           
  8562                           ;ring_buffer_LUT.c: 215: break;
  8563  0103B4  D030               	goto	l1171
  8564  0103B6                     
  8565                           ;ring_buffer_LUT.c: 218: strcpy(channel_name, "Internal FVR Buffer 1");
  8566  0103B6  0E82               	movlw	low ringBufferLUT@channel_name
  8567  0103B8  0101               	movlb	1	; () banked
  8568  0103BA  6F17               	movwf	strcpy@to& (0+255),b
  8569  0103BC  0E02               	movlw	high ringBufferLUT@channel_name
  8570  0103BE  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8571  0103C0  0E5A               	movlw	low STR_67
  8572  0103C2  6F19               	movwf	strcpy@from& (0+255),b
  8573  0103C4  0EFD               	movlw	high STR_67
  8574  0103C6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8575  0103C8  ECE3  F0B4         	call	_strcpy	;wreg free
  8576                           
  8577                           ;ring_buffer_LUT.c: 219: break;
  8578  0103CC  D024               	goto	l1171
  8579  0103CE                     
  8580                           ;ring_buffer_LUT.c: 222: strcpy(channel_name, "Spurious channel");
  8581  0103CE  0E82               	movlw	low ringBufferLUT@channel_name
  8582  0103D0  0101               	movlb	1	; () banked
  8583  0103D2  6F17               	movwf	strcpy@to& (0+255),b
  8584  0103D4  0E02               	movlw	high ringBufferLUT@channel_name
  8585  0103D6  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8586  0103D8  0E1C               	movlw	low STR_68
  8587  0103DA  6F19               	movwf	strcpy@from& (0+255),b
  8588  0103DC  0EFE               	movlw	high STR_68
  8589  0103DE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8590  0103E0  ECE3  F0B4         	call	_strcpy	;wreg free
  8591                           
  8592                           ;ring_buffer_LUT.c: 225: }
  8593                           
  8594                           ;ring_buffer_LUT.c: 223: break;
  8595  0103E4  D018               	goto	l1171
  8596  0103E6                     l1169:
  8597  0103E6  0101               	movlb	1	; () banked
  8598  0103E8  51D1               	movf	_current_adc_channel& (0+255),w,b
  8599                           
  8600                           ; Switch size 1, requested type "space"
  8601                           ; Number of cases is 7, Range of values is 0 to 63
  8602                           ; switch strategies available:
  8603                           ; Name         Instructions Cycles
  8604                           ; simple_byte           22    12 (average)
  8605                           ;	Chosen strategy is simple_byte
  8606  0103EA  0A00               	xorlw	0	; case 0
  8607  0103EC  B4D8               	btfsc	status,2,c
  8608  0103EE  D79B               	goto	l1170
  8609  0103F0  0A04               	xorlw	4	; case 4
  8610  0103F2  B4D8               	btfsc	status,2,c
  8611  0103F4  D7A4               	goto	l1172
  8612  0103F6  0A26               	xorlw	38	; case 34
  8613  0103F8  B4D8               	btfsc	status,2,c
  8614  0103FA  D7AD               	goto	l1173
  8615  0103FC  0A1E               	xorlw	30	; case 60
  8616  0103FE  B4D8               	btfsc	status,2,c
  8617  010400  D7B6               	goto	l1174
  8618  010402  0A01               	xorlw	1	; case 61
  8619  010404  B4D8               	btfsc	status,2,c
  8620  010406  D7BF               	goto	l1175
  8621  010408  0A03               	xorlw	3	; case 62
  8622  01040A  B4D8               	btfsc	status,2,c
  8623  01040C  D7C8               	goto	l1176
  8624  01040E  0A01               	xorlw	1	; case 63
  8625  010410  B4D8               	btfsc	status,2,c
  8626  010412  D7D1               	goto	l1177
  8627  010414  D7DC               	goto	l1178
  8628  010416                     l1171:
  8629                           
  8630                           ;ring_buffer_LUT.c: 228: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8631                           
  8632                           ; BSR set to: 1
  8633  010416  0E1E               	movlw	low STR_69
  8634  010418  0101               	movlb	1	; () banked
  8635  01041A  6F64               	movwf	printf@f& (0+255),b
  8636  01041C  0EF9               	movlw	high STR_69
  8637  01041E  6F65               	movwf	(printf@f+1)& (0+255),b
  8638  010420  0E82               	movlw	low ringBufferLUT@channel_name
  8639  010422  6F66               	movwf	(?_printf+2)& (0+255),b
  8640  010424  0E02               	movlw	high ringBufferLUT@channel_name
  8641  010426  6F67               	movwf	(?_printf+3)& (0+255),b
  8642  010428  ECB0  F086         	call	_printf	;wreg free
  8643                           
  8644                           ;ring_buffer_LUT.c: 230: terminal_textAttributesReset();
  8645  01042C  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8646                           
  8647                           ;ring_buffer_LUT.c: 232: terminal_printNewline();
  8648  010430  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8649                           
  8650                           ;ring_buffer_LUT.c: 234: }
  8651  010434  0012               	return	
  8652  010436                     l1168:
  8653                           
  8654                           ;ring_buffer_LUT.c: 236: else {
  8655                           ;ring_buffer_LUT.c: 239: terminal_printNewline();
  8656  010436  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8657                           
  8658                           ;ring_buffer_LUT.c: 241: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8659  01043A  0E00               	movlw	0
  8660  01043C  0101               	movlb	1	; () banked
  8661  01043E  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8662  010440  0E00               	movlw	0
  8663  010442  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8664  010444  0E02               	movlw	2
  8665  010446  EC0B  F099         	call	_terminal_textAttributes
  8666                           
  8667                           ;ring_buffer_LUT.c: 242: printf("No ADC Error detected\n\r");
  8668  01044A  0E15               	movlw	low STR_70
  8669  01044C  0101               	movlb	1	; () banked
  8670  01044E  6F64               	movwf	printf@f& (0+255),b
  8671  010450  0EFD               	movlw	high STR_70
  8672  010452  6F65               	movwf	(printf@f+1)& (0+255),b
  8673  010454  ECB0  F086         	call	_printf	;wreg free
  8674                           
  8675                           ;ring_buffer_LUT.c: 244: terminal_textAttributesReset();
  8676  010458  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8677                           
  8678                           ;ring_buffer_LUT.c: 246: terminal_printNewline();
  8679  01045C  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8680                           
  8681                           ;ring_buffer_LUT.c: 248: }
  8682                           ;ring_buffer_LUT.c: 250: }
  8683  010460  0012               	return	
  8684  010462                     l1167:
  8685                           
  8686                           ;ring_buffer_LUT.c: 253: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8687  010462  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8688  010466  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8689  01046A  0E7D               	movlw	low STR_71
  8690  01046C  0101               	movlb	1	; () banked
  8691  01046E  6F19               	movwf	strcmp@s2& (0+255),b
  8692  010470  0EFE               	movlw	high STR_71
  8693  010472  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8694  010474  EC24  F0B4         	call	_strcmp	;wreg free
  8695  010478  0101               	movlb	1	; () banked
  8696  01047A  5117               	movf	?_strcmp& (0+255),w,b
  8697  01047C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8698  01047E  A4D8               	btfss	status,2,c
  8699  010480  D01C               	goto	l1181
  8700                           
  8701                           ; BSR set to: 1
  8702                           ;ring_buffer_LUT.c: 255: LATFbits.LATF3 = 0;
  8703  010482  967E               	bcf	3966,3,c	;volatile
  8704                           
  8705                           ;ring_buffer_LUT.c: 256: adc_error_flag = 0;
  8706  010484  925E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8707                           
  8708                           ; BSR set to: 1
  8709                           ;ring_buffer_LUT.c: 258: PIE5bits.TMR7IE == 1;
  8710  010486  010E               	movlb	14	; () banked
  8711  010488  512E               	movf	46,w,b	;volatile
  8712                           
  8713                           ; BSR set to: 14
  8714                           ;ring_buffer_LUT.c: 259: TMR7_StartTimer();
  8715  01048A  ECA2  F0B8         	call	_TMR7_StartTimer	;wreg free
  8716                           
  8717                           ;ring_buffer_LUT.c: 262: terminal_printNewline();
  8718  01048E  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8719                           
  8720                           ;ring_buffer_LUT.c: 264: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8721  010492  0E00               	movlw	0
  8722  010494  0101               	movlb	1	; () banked
  8723  010496  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8724  010498  0E00               	movlw	0
  8725  01049A  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8726  01049C  0E02               	movlw	2
  8727  01049E  EC0B  F099         	call	_terminal_textAttributes
  8728                           
  8729                           ;ring_buffer_LUT.c: 265: printf("Clearing ADC Error\n\r");
  8730  0104A2  0E85               	movlw	low STR_72
  8731  0104A4  0101               	movlb	1	; () banked
  8732  0104A6  6F64               	movwf	printf@f& (0+255),b
  8733  0104A8  0EFD               	movlw	high STR_72
  8734  0104AA  6F65               	movwf	(printf@f+1)& (0+255),b
  8735  0104AC  ECB0  F086         	call	_printf	;wreg free
  8736                           
  8737                           ;ring_buffer_LUT.c: 267: terminal_textAttributesReset();
  8738  0104B0  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8739                           
  8740                           ;ring_buffer_LUT.c: 269: terminal_printNewline();
  8741  0104B4  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8742                           
  8743                           ;ring_buffer_LUT.c: 272: }
  8744  0104B8  0012               	return	
  8745  0104BA                     l1181:
  8746                           
  8747                           ;ring_buffer_LUT.c: 275: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  8748  0104BA  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8749  0104BE  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8750  0104C2  0E0B               	movlw	low STR_73
  8751  0104C4  0101               	movlb	1	; () banked
  8752  0104C6  6F19               	movwf	strcmp@s2& (0+255),b
  8753  0104C8  0EFE               	movlw	high STR_73
  8754  0104CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8755  0104CC  EC24  F0B4         	call	_strcmp	;wreg free
  8756  0104D0  0101               	movlb	1	; () banked
  8757  0104D2  5117               	movf	?_strcmp& (0+255),w,b
  8758  0104D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8759  0104D6  A4D8               	btfss	status,2,c
  8760  0104D8  D02F               	goto	l1183
  8761                           
  8762                           ; BSR set to: 1
  8763                           ;ring_buffer_LUT.c: 278: if (VCC_overvoltage_flag) {
  8764  0104DA  A05E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8765  0104DC  D017               	goto	l1184
  8766                           
  8767                           ; BSR set to: 1
  8768                           ;ring_buffer_LUT.c: 281: terminal_printNewline();
  8769  0104DE  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8770                           
  8771                           ;ring_buffer_LUT.c: 283: terminal_textAttributes(RED, BLACK, NORMAL);
  8772  0104E2  0E00               	movlw	0
  8773  0104E4  0101               	movlb	1	; () banked
  8774  0104E6  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8775  0104E8  0E00               	movlw	0
  8776  0104EA  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8777  0104EC  0E01               	movlw	1
  8778  0104EE  EC0B  F099         	call	_terminal_textAttributes
  8779                           
  8780                           ;ring_buffer_LUT.c: 284: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.40V)\n\r");
  8781  0104F2  0E19               	movlw	low STR_74
  8782  0104F4  0101               	movlb	1	; () banked
  8783  0104F6  6F64               	movwf	printf@f& (0+255),b
  8784  0104F8  0EF7               	movlw	high STR_74
  8785  0104FA  6F65               	movwf	(printf@f+1)& (0+255),b
  8786  0104FC  ECB0  F086         	call	_printf	;wreg free
  8787                           
  8788                           ;ring_buffer_LUT.c: 286: terminal_textAttributesReset();
  8789  010500  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8790                           
  8791                           ;ring_buffer_LUT.c: 288: terminal_printNewline();
  8792  010504  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8793                           
  8794                           ;ring_buffer_LUT.c: 291: VCC_overvoltage_flag = 0;
  8795  010508  905E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8796                           
  8797                           ;ring_buffer_LUT.c: 293: }
  8798  01050A  0012               	return	
  8799  01050C                     l1184:
  8800                           
  8801                           ;ring_buffer_LUT.c: 295: else {
  8802                           ;ring_buffer_LUT.c: 298: terminal_printNewline();
  8803  01050C  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8804                           
  8805                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8806  010510  0E00               	movlw	0
  8807  010512  0101               	movlb	1	; () banked
  8808  010514  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8809  010516  0E00               	movlw	0
  8810  010518  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8811  01051A  0E02               	movlw	2
  8812  01051C  EC0B  F099         	call	_terminal_textAttributes
  8813                           
  8814                           ;ring_buffer_LUT.c: 301: printf("VCC Overvoltage condition has not occurred\n\r");
  8815  010520  0EAB               	movlw	low STR_75
  8816  010522  0101               	movlb	1	; () banked
  8817  010524  6F64               	movwf	printf@f& (0+255),b
  8818  010526  0EF9               	movlw	high STR_75
  8819  010528  6F65               	movwf	(printf@f+1)& (0+255),b
  8820  01052A  ECB0  F086         	call	_printf	;wreg free
  8821                           
  8822                           ;ring_buffer_LUT.c: 303: terminal_textAttributesReset();
  8823  01052E  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8824                           
  8825                           ;ring_buffer_LUT.c: 305: terminal_printNewline();
  8826  010532  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8827                           
  8828                           ;ring_buffer_LUT.c: 307: }
  8829                           ;ring_buffer_LUT.c: 309: }
  8830  010536  0012               	return	
  8831  010538                     l1183:
  8832                           
  8833                           ;ring_buffer_LUT.c: 312: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  8834  010538  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8835  01053C  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8836  010540  0E3D               	movlw	low STR_76
  8837  010542  0101               	movlb	1	; () banked
  8838  010544  6F19               	movwf	strcmp@s2& (0+255),b
  8839  010546  0EFE               	movlw	high STR_76
  8840  010548  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8841  01054A  EC24  F0B4         	call	_strcmp	;wreg free
  8842  01054E  0101               	movlb	1	; () banked
  8843  010550  5117               	movf	?_strcmp& (0+255),w,b
  8844  010552  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8845  010554  A4D8               	btfss	status,2,c
  8846  010556  D01C               	goto	l1187
  8847                           
  8848                           ; BSR set to: 1
  8849                           ;ring_buffer_LUT.c: 315: terminal_printNewline();
  8850  010558  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8851                           
  8852                           ;ring_buffer_LUT.c: 317: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8853  01055C  0E00               	movlw	0
  8854  01055E  0101               	movlb	1	; () banked
  8855  010560  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8856  010562  0E00               	movlw	0
  8857  010564  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8858  010566  0E06               	movlw	6
  8859  010568  EC0B  F099         	call	_terminal_textAttributes
  8860                           
  8861                           ;ring_buffer_LUT.c: 318: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Resul
      +                          t);
  8862  01056C  0E12               	movlw	low STR_77
  8863  01056E  0101               	movlb	1	; () banked
  8864  010570  6F64               	movwf	printf@f& (0+255),b
  8865  010572  0EFB               	movlw	high STR_77
  8866  010574  6F65               	movwf	(printf@f+1)& (0+255),b
  8867  010576  C0DD  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  8868  01057A  C0DE  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  8869  01057E  C0DF  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  8870  010582  ECB0  F086         	call	_printf	;wreg free
  8871                           
  8872                           ;ring_buffer_LUT.c: 320: terminal_textAttributesReset();
  8873  010586  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8874                           
  8875                           ;ring_buffer_LUT.c: 322: terminal_printNewline();
  8876  01058A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8877                           
  8878                           ;ring_buffer_LUT.c: 325: }
  8879  01058E  0012               	return	
  8880  010590                     l1187:
  8881                           
  8882                           ;ring_buffer_LUT.c: 328: else if((0 == strcmp(line, "Measure POS12?"))) {
  8883  010590  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8884  010594  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8885  010598  0E9C               	movlw	low STR_78
  8886  01059A  0101               	movlb	1	; () banked
  8887  01059C  6F19               	movwf	strcmp@s2& (0+255),b
  8888  01059E  0EFE               	movlw	high STR_78
  8889  0105A0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8890  0105A2  EC24  F0B4         	call	_strcmp	;wreg free
  8891  0105A6  0101               	movlb	1	; () banked
  8892  0105A8  5117               	movf	?_strcmp& (0+255),w,b
  8893  0105AA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8894  0105AC  A4D8               	btfss	status,2,c
  8895  0105AE  D01C               	goto	l1189
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;ring_buffer_LUT.c: 331: terminal_printNewline();
  8899  0105B0  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8900                           
  8901                           ;ring_buffer_LUT.c: 333: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8902  0105B4  0E00               	movlw	0
  8903  0105B6  0101               	movlb	1	; () banked
  8904  0105B8  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8905  0105BA  0E00               	movlw	0
  8906  0105BC  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8907  0105BE  0E06               	movlw	6
  8908  0105C0  EC0B  F099         	call	_terminal_textAttributes
  8909                           
  8910                           ;ring_buffer_LUT.c: 334: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  8911  0105C4  0EBD               	movlw	low STR_79
  8912  0105C6  0101               	movlb	1	; () banked
  8913  0105C8  6F64               	movwf	printf@f& (0+255),b
  8914  0105CA  0EFB               	movlw	high STR_79
  8915  0105CC  6F65               	movwf	(printf@f+1)& (0+255),b
  8916  0105CE  C0DA  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  8917  0105D2  C0DB  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  8918  0105D6  C0DC  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  8919  0105DA  ECB0  F086         	call	_printf	;wreg free
  8920                           
  8921                           ;ring_buffer_LUT.c: 336: terminal_textAttributesReset();
  8922  0105DE  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8923                           
  8924                           ;ring_buffer_LUT.c: 338: terminal_printNewline();
  8925  0105E2  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8926                           
  8927                           ;ring_buffer_LUT.c: 341: }
  8928  0105E6  0012               	return	
  8929  0105E8                     l1189:
  8930                           
  8931                           ;ring_buffer_LUT.c: 344: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  8932  0105E8  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8933  0105EC  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8934  0105F0  0ED7               	movlw	low STR_80
  8935  0105F2  0101               	movlb	1	; () banked
  8936  0105F4  6F19               	movwf	strcmp@s2& (0+255),b
  8937  0105F6  0EFD               	movlw	high STR_80
  8938  0105F8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8939  0105FA  EC24  F0B4         	call	_strcmp	;wreg free
  8940  0105FE  0101               	movlb	1	; () banked
  8941  010600  5117               	movf	?_strcmp& (0+255),w,b
  8942  010602  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8943  010604  A4D8               	btfss	status,2,c
  8944  010606  D01C               	goto	l1191
  8945                           
  8946                           ; BSR set to: 1
  8947                           ;ring_buffer_LUT.c: 347: terminal_printNewline();
  8948  010608  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8949                           
  8950                           ;ring_buffer_LUT.c: 349: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8951  01060C  0E00               	movlw	0
  8952  01060E  0101               	movlb	1	; () banked
  8953  010610  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8954  010612  0E00               	movlw	0
  8955  010614  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8956  010616  0E06               	movlw	6
  8957  010618  EC0B  F099         	call	_terminal_textAttributes
  8958                           
  8959                           ;ring_buffer_LUT.c: 350: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  8960  01061C  0E35               	movlw	low STR_81
  8961  01061E  0101               	movlb	1	; () banked
  8962  010620  6F64               	movwf	printf@f& (0+255),b
  8963  010622  0EFB               	movlw	high STR_81
  8964  010624  6F65               	movwf	(printf@f+1)& (0+255),b
  8965  010626  C0D7  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  8966  01062A  C0D8  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  8967  01062E  C0D9  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  8968  010632  ECB0  F086         	call	_printf	;wreg free
  8969                           
  8970                           ;ring_buffer_LUT.c: 352: terminal_textAttributesReset();
  8971  010636  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  8972                           
  8973                           ;ring_buffer_LUT.c: 354: terminal_printNewline();
  8974  01063A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8975                           
  8976                           ;ring_buffer_LUT.c: 357: }
  8977  01063E  0012               	return	
  8978  010640                     l1191:
  8979                           
  8980                           ;ring_buffer_LUT.c: 360: else if((0 == strcmp(line, "Measure FVR?"))) {
  8981  010640  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8982  010644  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8983  010648  0E29               	movlw	low STR_82
  8984  01064A  0101               	movlb	1	; () banked
  8985  01064C  6F19               	movwf	strcmp@s2& (0+255),b
  8986  01064E  0EFF               	movlw	high STR_82
  8987  010650  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8988  010652  EC24  F0B4         	call	_strcmp	;wreg free
  8989  010656  0101               	movlb	1	; () banked
  8990  010658  5117               	movf	?_strcmp& (0+255),w,b
  8991  01065A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8992  01065C  A4D8               	btfss	status,2,c
  8993  01065E  D01C               	goto	l1193
  8994                           
  8995                           ; BSR set to: 1
  8996                           ;ring_buffer_LUT.c: 363: terminal_printNewline();
  8997  010660  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  8998                           
  8999                           ;ring_buffer_LUT.c: 365: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9000  010664  0E00               	movlw	0
  9001  010666  0101               	movlb	1	; () banked
  9002  010668  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9003  01066A  0E00               	movlw	0
  9004  01066C  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9005  01066E  0E06               	movlw	6
  9006  010670  EC0B  F099         	call	_terminal_textAttributes
  9007                           
  9008                           ;ring_buffer_LUT.c: 366: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  9009  010674  0E4C               	movlw	low STR_83
  9010  010676  0101               	movlb	1	; () banked
  9011  010678  6F64               	movwf	printf@f& (0+255),b
  9012  01067A  0EF8               	movlw	high STR_83
  9013  01067C  6F65               	movwf	(printf@f+1)& (0+255),b
  9014  01067E  C0EE  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  9015  010682  C0EF  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  9016  010686  C0F0  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  9017  01068A  ECB0  F086         	call	_printf	;wreg free
  9018                           
  9019                           ;ring_buffer_LUT.c: 368: terminal_textAttributesReset();
  9020  01068E  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9021                           
  9022                           ;ring_buffer_LUT.c: 370: terminal_printNewline();
  9023  010692  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9024                           
  9025                           ;ring_buffer_LUT.c: 373: }
  9026  010696  0012               	return	
  9027  010698                     l1193:
  9028                           
  9029                           ;ring_buffer_LUT.c: 376: else if((0 == strcmp(line, "Measure AVSS?"))) {
  9030  010698  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9031  01069C  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9032  0106A0  0ED7               	movlw	low STR_84
  9033  0106A2  0101               	movlb	1	; () banked
  9034  0106A4  6F19               	movwf	strcmp@s2& (0+255),b
  9035  0106A6  0EFE               	movlw	high STR_84
  9036  0106A8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9037  0106AA  EC24  F0B4         	call	_strcmp	;wreg free
  9038  0106AE  0101               	movlb	1	; () banked
  9039  0106B0  5117               	movf	?_strcmp& (0+255),w,b
  9040  0106B2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9041  0106B4  A4D8               	btfss	status,2,c
  9042  0106B6  D01C               	goto	l1195
  9043                           
  9044                           ; BSR set to: 1
  9045                           ;ring_buffer_LUT.c: 379: terminal_printNewline();
  9046  0106B8  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9047                           
  9048                           ;ring_buffer_LUT.c: 381: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9049  0106BC  0E00               	movlw	0
  9050  0106BE  0101               	movlb	1	; () banked
  9051  0106C0  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9052  0106C2  0E00               	movlw	0
  9053  0106C4  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9054  0106C6  0E06               	movlw	6
  9055  0106C8  EC0B  F099         	call	_terminal_textAttributes
  9056                           
  9057                           ;ring_buffer_LUT.c: 382: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  9058  0106CC  0EA3               	movlw	low STR_85
  9059  0106CE  0101               	movlb	1	; () banked
  9060  0106D0  6F64               	movwf	printf@f& (0+255),b
  9061  0106D2  0EFA               	movlw	high STR_85
  9062  0106D4  6F65               	movwf	(printf@f+1)& (0+255),b
  9063  0106D6  C0E3  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  9064  0106DA  C0E4  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  9065  0106DE  C0E5  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  9066  0106E2  ECB0  F086         	call	_printf	;wreg free
  9067                           
  9068                           ;ring_buffer_LUT.c: 384: terminal_textAttributesReset();
  9069  0106E6  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9070                           
  9071                           ;ring_buffer_LUT.c: 386: terminal_printNewline();
  9072  0106EA  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9073                           
  9074                           ;ring_buffer_LUT.c: 389: }
  9075  0106EE  0012               	return	
  9076  0106F0                     l1195:
  9077                           
  9078                           ;ring_buffer_LUT.c: 392: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  9079  0106F0  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9080  0106F4  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9081  0106F8  0EB0               	movlw	low STR_86
  9082  0106FA  0101               	movlb	1	; () banked
  9083  0106FC  6F19               	movwf	strcmp@s2& (0+255),b
  9084  0106FE  0EFC               	movlw	high STR_86
  9085  010700  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9086  010702  EC24  F0B4         	call	_strcmp	;wreg free
  9087  010706  0101               	movlb	1	; () banked
  9088  010708  5117               	movf	?_strcmp& (0+255),w,b
  9089  01070A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9090  01070C  A4D8               	btfss	status,2,c
  9091  01070E  D01C               	goto	l1197
  9092                           
  9093                           ; BSR set to: 1
  9094                           ;ring_buffer_LUT.c: 395: terminal_printNewline();
  9095  010710  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9096                           
  9097                           ;ring_buffer_LUT.c: 397: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9098  010714  0E00               	movlw	0
  9099  010716  0101               	movlb	1	; () banked
  9100  010718  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9101  01071A  0E00               	movlw	0
  9102  01071C  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9103  01071E  0E06               	movlw	6
  9104  010720  EC0B  F099         	call	_terminal_textAttributes
  9105                           
  9106                           ;ring_buffer_LUT.c: 398: printf("Measured Current is %.3f Amps\n\r", Imeas);
  9107  010724  0E00               	movlw	low STR_87
  9108  010726  0101               	movlb	1	; () banked
  9109  010728  6F64               	movwf	printf@f& (0+255),b
  9110  01072A  0EFC               	movlw	high STR_87
  9111  01072C  6F65               	movwf	(printf@f+1)& (0+255),b
  9112  01072E  C0CE  F166         	movff	_Imeas,?_printf+2	;volatile
  9113  010732  C0CF  F167         	movff	_Imeas+1,?_printf+3	;volatile
  9114  010736  C0D0  F168         	movff	_Imeas+2,?_printf+4	;volatile
  9115  01073A  ECB0  F086         	call	_printf	;wreg free
  9116                           
  9117                           ;ring_buffer_LUT.c: 400: terminal_textAttributesReset();
  9118  01073E  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9119                           
  9120                           ;ring_buffer_LUT.c: 402: terminal_printNewline();
  9121  010742  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9122                           
  9123                           ;ring_buffer_LUT.c: 404: }
  9124  010746  0012               	return	
  9125  010748                     l1197:
  9126                           
  9127                           ;ring_buffer_LUT.c: 407: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  9128  010748  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9129  01074C  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9130  010750  0EAF               	movlw	low STR_88
  9131  010752  0101               	movlb	1	; () banked
  9132  010754  6F19               	movwf	strcmp@s2& (0+255),b
  9133  010756  0EFD               	movlw	high STR_88
  9134  010758  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9135  01075A  EC24  F0B4         	call	_strcmp	;wreg free
  9136  01075E  0101               	movlb	1	; () banked
  9137  010760  5117               	movf	?_strcmp& (0+255),w,b
  9138  010762  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9139  010764  A4D8               	btfss	status,2,c
  9140  010766  D01C               	goto	l1199
  9141                           
  9142                           ; BSR set to: 1
  9143                           ;ring_buffer_LUT.c: 410: terminal_printNewline();
  9144  010768  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9145                           
  9146                           ;ring_buffer_LUT.c: 412: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9147  01076C  0E00               	movlw	0
  9148  01076E  0101               	movlb	1	; () banked
  9149  010770  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9150  010772  0E00               	movlw	0
  9151  010774  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9152  010776  0E06               	movlw	6
  9153  010778  EC0B  F099         	call	_terminal_textAttributes
  9154                           
  9155                           ;ring_buffer_LUT.c: 413: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  9156  01077C  0E79               	movlw	low STR_89
  9157  01077E  0101               	movlb	1	; () banked
  9158  010780  6F64               	movwf	printf@f& (0+255),b
  9159  010782  0EFB               	movlw	high STR_89
  9160  010784  6F65               	movwf	(printf@f+1)& (0+255),b
  9161  010786  C0CB  F166         	movff	_Irms,?_printf+2	;volatile
  9162  01078A  C0CC  F167         	movff	_Irms+1,?_printf+3	;volatile
  9163  01078E  C0CD  F168         	movff	_Irms+2,?_printf+4	;volatile
  9164  010792  ECB0  F086         	call	_printf	;wreg free
  9165                           
  9166                           ;ring_buffer_LUT.c: 415: terminal_textAttributesReset();
  9167  010796  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9168                           
  9169                           ;ring_buffer_LUT.c: 417: terminal_printNewline();
  9170  01079A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9171                           
  9172                           ;ring_buffer_LUT.c: 419: }
  9173  01079E  0012               	return	
  9174  0107A0                     l1199:
  9175                           
  9176                           ;ring_buffer_LUT.c: 422: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  9177  0107A0  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9178  0107A4  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9179  0107A8  0E9A               	movlw	low STR_90
  9180  0107AA  0101               	movlb	1	; () banked
  9181  0107AC  6F19               	movwf	strcmp@s2& (0+255),b
  9182  0107AE  0EFD               	movlw	high STR_90
  9183  0107B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9184  0107B2  EC24  F0B4         	call	_strcmp	;wreg free
  9185  0107B6  0101               	movlb	1	; () banked
  9186  0107B8  5117               	movf	?_strcmp& (0+255),w,b
  9187  0107BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9188  0107BC  A4D8               	btfss	status,2,c
  9189  0107BE  D01C               	goto	l1201
  9190                           
  9191                           ; BSR set to: 1
  9192                           ;ring_buffer_LUT.c: 425: terminal_printNewline();
  9193  0107C0  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9194                           
  9195                           ;ring_buffer_LUT.c: 427: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9196  0107C4  0E00               	movlw	0
  9197  0107C6  0101               	movlb	1	; () banked
  9198  0107C8  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9199  0107CA  0E00               	movlw	0
  9200  0107CC  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9201  0107CE  0E06               	movlw	6
  9202  0107D0  EC0B  F099         	call	_terminal_textAttributes
  9203                           
  9204                           ;ring_buffer_LUT.c: 428: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  9205  0107D4  0E9B               	movlw	low STR_91
  9206  0107D6  0101               	movlb	1	; () banked
  9207  0107D8  6F64               	movwf	printf@f& (0+255),b
  9208  0107DA  0EFB               	movlw	high STR_91
  9209  0107DC  6F65               	movwf	(printf@f+1)& (0+255),b
  9210  0107DE  C0C8  F166         	movff	_Vrms,?_printf+2	;volatile
  9211  0107E2  C0C9  F167         	movff	_Vrms+1,?_printf+3	;volatile
  9212  0107E6  C0CA  F168         	movff	_Vrms+2,?_printf+4	;volatile
  9213  0107EA  ECB0  F086         	call	_printf	;wreg free
  9214                           
  9215                           ;ring_buffer_LUT.c: 430: terminal_textAttributesReset();
  9216  0107EE  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9217                           
  9218                           ;ring_buffer_LUT.c: 432: terminal_printNewline();
  9219  0107F2  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9220                           
  9221                           ;ring_buffer_LUT.c: 434: }
  9222  0107F6  0012               	return	
  9223  0107F8                     l1201:
  9224                           
  9225                           ;ring_buffer_LUT.c: 437: else if ((0 == strcmp(line, "Measure Power?"))) {
  9226  0107F8  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9227  0107FC  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9228  010800  0EAB               	movlw	low STR_92
  9229  010802  0101               	movlb	1	; () banked
  9230  010804  6F19               	movwf	strcmp@s2& (0+255),b
  9231  010806  0EFE               	movlw	high STR_92
  9232  010808  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9233  01080A  EC24  F0B4         	call	_strcmp	;wreg free
  9234  01080E  0101               	movlb	1	; () banked
  9235  010810  5117               	movf	?_strcmp& (0+255),w,b
  9236  010812  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9237  010814  A4D8               	btfss	status,2,c
  9238  010816  D01C               	goto	l1203
  9239                           
  9240                           ; BSR set to: 1
  9241                           ;ring_buffer_LUT.c: 440: terminal_printNewline();
  9242  010818  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9243                           
  9244                           ;ring_buffer_LUT.c: 442: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9245  01081C  0E00               	movlw	0
  9246  01081E  0101               	movlb	1	; () banked
  9247  010820  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9248  010822  0E00               	movlw	0
  9249  010824  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9250  010826  0E06               	movlw	6
  9251  010828  EC0B  F099         	call	_terminal_textAttributes
  9252                           
  9253                           ;ring_buffer_LUT.c: 443: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  9254  01082C  0E14               	movlw	low STR_93
  9255  01082E  0101               	movlb	1	; () banked
  9256  010830  6F64               	movwf	printf@f& (0+255),b
  9257  010832  0EF8               	movlw	high STR_93
  9258  010834  6F65               	movwf	(printf@f+1)& (0+255),b
  9259  010836  C1BB  F166         	movff	_Avg_Power,?_printf+2	;volatile
  9260  01083A  C1BC  F167         	movff	_Avg_Power+1,?_printf+3	;volatile
  9261  01083E  C1BD  F168         	movff	_Avg_Power+2,?_printf+4	;volatile
  9262  010842  ECB0  F086         	call	_printf	;wreg free
  9263                           
  9264                           ;ring_buffer_LUT.c: 445: terminal_textAttributesReset();
  9265  010846  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9266                           
  9267                           ;ring_buffer_LUT.c: 447: terminal_printNewline();
  9268  01084A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9269                           
  9270                           ;ring_buffer_LUT.c: 449: }
  9271  01084E  0012               	return	
  9272  010850                     l1203:
  9273                           
  9274                           ;ring_buffer_LUT.c: 452: else if ((0 == strcmp(line, "Enable Dimming"))) {
  9275  010850  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9276  010854  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9277  010858  0EBA               	movlw	low STR_94
  9278  01085A  0101               	movlb	1	; () banked
  9279  01085C  6F19               	movwf	strcmp@s2& (0+255),b
  9280  01085E  0EFE               	movlw	high STR_94
  9281  010860  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9282  010862  EC24  F0B4         	call	_strcmp	;wreg free
  9283  010866  0101               	movlb	1	; () banked
  9284  010868  5117               	movf	?_strcmp& (0+255),w,b
  9285  01086A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9286  01086C  A4D8               	btfss	status,2,c
  9287  01086E  D017               	goto	l1205
  9288                           
  9289                           ; BSR set to: 1
  9290                           ;ring_buffer_LUT.c: 455: LATGbits.LATG0 = 0;
  9291  010870  907F               	bcf	3967,0,c	;volatile
  9292                           
  9293                           ; BSR set to: 1
  9294                           ;ring_buffer_LUT.c: 458: terminal_printNewline();
  9295  010872  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9296                           
  9297                           ;ring_buffer_LUT.c: 460: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9298  010876  0E00               	movlw	0
  9299  010878  0101               	movlb	1	; () banked
  9300  01087A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9301  01087C  0E00               	movlw	0
  9302  01087E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9303  010880  0E06               	movlw	6
  9304  010882  EC0B  F099         	call	_terminal_textAttributes
  9305                           
  9306                           ;ring_buffer_LUT.c: 461: printf("TRIAC output dimming has been enabled\n\r");
  9307  010886  0E54               	movlw	low STR_95
  9308  010888  0101               	movlb	1	; () banked
  9309  01088A  6F64               	movwf	printf@f& (0+255),b
  9310  01088C  0EFA               	movlw	high STR_95
  9311  01088E  6F65               	movwf	(printf@f+1)& (0+255),b
  9312  010890  ECB0  F086         	call	_printf	;wreg free
  9313                           
  9314                           ;ring_buffer_LUT.c: 463: terminal_textAttributesReset();
  9315  010894  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9316                           
  9317                           ;ring_buffer_LUT.c: 465: terminal_printNewline();
  9318  010898  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9319                           
  9320                           ;ring_buffer_LUT.c: 467: }
  9321  01089C  0012               	return	
  9322  01089E                     l1205:
  9323                           
  9324                           ;ring_buffer_LUT.c: 470: else if ((0 == strcmp(line, "Disable Dimming"))) {
  9325  01089E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9326  0108A2  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9327  0108A6  0E6D               	movlw	low STR_96
  9328  0108A8  0101               	movlb	1	; () banked
  9329  0108AA  6F19               	movwf	strcmp@s2& (0+255),b
  9330  0108AC  0EFE               	movlw	high STR_96
  9331  0108AE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9332  0108B0  EC24  F0B4         	call	_strcmp	;wreg free
  9333  0108B4  0101               	movlb	1	; () banked
  9334  0108B6  5117               	movf	?_strcmp& (0+255),w,b
  9335  0108B8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9336  0108BA  A4D8               	btfss	status,2,c
  9337  0108BC  D017               	goto	l1207
  9338                           
  9339                           ; BSR set to: 1
  9340                           ;ring_buffer_LUT.c: 473: LATGbits.LATG0 = 1;
  9341  0108BE  807F               	bsf	3967,0,c	;volatile
  9342                           
  9343                           ; BSR set to: 1
  9344                           ;ring_buffer_LUT.c: 476: terminal_printNewline();
  9345  0108C0  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9346                           
  9347                           ;ring_buffer_LUT.c: 478: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9348  0108C4  0E00               	movlw	0
  9349  0108C6  0101               	movlb	1	; () banked
  9350  0108C8  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9351  0108CA  0E00               	movlw	0
  9352  0108CC  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9353  0108CE  0E06               	movlw	6
  9354  0108D0  EC0B  F099         	call	_terminal_textAttributes
  9355                           
  9356                           ;ring_buffer_LUT.c: 479: printf("TRIAC output dimming has been disabled\n\r");
  9357  0108D4  0E2B               	movlw	low STR_97
  9358  0108D6  0101               	movlb	1	; () banked
  9359  0108D8  6F64               	movwf	printf@f& (0+255),b
  9360  0108DA  0EFA               	movlw	high STR_97
  9361  0108DC  6F65               	movwf	(printf@f+1)& (0+255),b
  9362  0108DE  ECB0  F086         	call	_printf	;wreg free
  9363                           
  9364                           ;ring_buffer_LUT.c: 481: terminal_textAttributesReset();
  9365  0108E2  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9366                           
  9367                           ;ring_buffer_LUT.c: 483: terminal_printNewline();
  9368  0108E6  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9369                           
  9370                           ;ring_buffer_LUT.c: 485: }
  9371  0108EA  0012               	return	
  9372  0108EC                     l1207:
  9373                           
  9374                           ;ring_buffer_LUT.c: 488: else if ((0 == strcmp(line, "Enable Load"))) {
  9375  0108EC  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9376  0108F0  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9377  0108F4  0E4F               	movlw	low STR_98
  9378  0108F6  0101               	movlb	1	; () banked
  9379  0108F8  6F19               	movwf	strcmp@s2& (0+255),b
  9380  0108FA  0EFF               	movlw	high STR_98
  9381  0108FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9382  0108FE  EC24  F0B4         	call	_strcmp	;wreg free
  9383  010902  0101               	movlb	1	; () banked
  9384  010904  5117               	movf	?_strcmp& (0+255),w,b
  9385  010906  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9386  010908  A4D8               	btfss	status,2,c
  9387  01090A  D019               	goto	l1209
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;ring_buffer_LUT.c: 490: LATGbits.LATG0 = 1;
  9391  01090C  807F               	bsf	3967,0,c	;volatile
  9392                           
  9393                           ;ring_buffer_LUT.c: 491: LATGbits.LATG1 = 0;
  9394  01090E  927F               	bcf	3967,1,c	;volatile
  9395                           
  9396                           ;ring_buffer_LUT.c: 492: load_enable = 1;
  9397  010910  845E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9398                           
  9399                           ; BSR set to: 1
  9400                           ;ring_buffer_LUT.c: 495: terminal_printNewline();
  9401  010912  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9402                           
  9403                           ;ring_buffer_LUT.c: 497: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9404  010916  0E00               	movlw	0
  9405  010918  0101               	movlb	1	; () banked
  9406  01091A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9407  01091C  0E00               	movlw	0
  9408  01091E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9409  010920  0E06               	movlw	6
  9410  010922  EC0B  F099         	call	_terminal_textAttributes
  9411                           
  9412                           ;ring_buffer_LUT.c: 498: printf("Load has been enabled, dimming disabled\n\r");
  9413  010926  0ED8               	movlw	low STR_99
  9414  010928  0101               	movlb	1	; () banked
  9415  01092A  6F64               	movwf	printf@f& (0+255),b
  9416  01092C  0EF9               	movlw	high STR_99
  9417  01092E  6F65               	movwf	(printf@f+1)& (0+255),b
  9418  010930  ECB0  F086         	call	_printf	;wreg free
  9419                           
  9420                           ;ring_buffer_LUT.c: 500: terminal_textAttributesReset();
  9421  010934  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9422                           
  9423                           ;ring_buffer_LUT.c: 502: terminal_printNewline();
  9424  010938  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9425                           
  9426                           ;ring_buffer_LUT.c: 504: }
  9427  01093C  0012               	return	
  9428  01093E                     l1209:
  9429                           
  9430                           ;ring_buffer_LUT.c: 507: else if ((0 == strcmp(line, "Disable Load"))) {
  9431  01093E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9432  010942  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9433  010946  0E36               	movlw	low STR_100
  9434  010948  0101               	movlb	1	; () banked
  9435  01094A  6F19               	movwf	strcmp@s2& (0+255),b
  9436  01094C  0EFF               	movlw	high STR_100
  9437  01094E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9438  010950  EC24  F0B4         	call	_strcmp	;wreg free
  9439  010954  0101               	movlb	1	; () banked
  9440  010956  5117               	movf	?_strcmp& (0+255),w,b
  9441  010958  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9442  01095A  A4D8               	btfss	status,2,c
  9443  01095C  D019               	goto	l1211
  9444                           
  9445                           ; BSR set to: 1
  9446                           ;ring_buffer_LUT.c: 509: LATGbits.LATG1 = 0;
  9447  01095E  927F               	bcf	3967,1,c	;volatile
  9448                           
  9449                           ;ring_buffer_LUT.c: 510: LATGbits.LATG0 = 0;
  9450  010960  907F               	bcf	3967,0,c	;volatile
  9451                           
  9452                           ;ring_buffer_LUT.c: 511: load_enable = 0;
  9453  010962  945E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9454                           
  9455                           ; BSR set to: 1
  9456                           ;ring_buffer_LUT.c: 514: terminal_printNewline();
  9457  010964  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9458                           
  9459                           ;ring_buffer_LUT.c: 516: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9460  010968  0E00               	movlw	0
  9461  01096A  0101               	movlb	1	; () banked
  9462  01096C  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9463  01096E  0E00               	movlw	0
  9464  010970  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9465  010972  0E06               	movlw	6
  9466  010974  EC0B  F099         	call	_terminal_textAttributes
  9467                           
  9468                           ;ring_buffer_LUT.c: 517: printf("Load has been disabled\n\r");
  9469  010978  0EE3               	movlw	low STR_101
  9470  01097A  0101               	movlb	1	; () banked
  9471  01097C  6F64               	movwf	printf@f& (0+255),b
  9472  01097E  0EFC               	movlw	high STR_101
  9473  010980  6F65               	movwf	(printf@f+1)& (0+255),b
  9474  010982  ECB0  F086         	call	_printf	;wreg free
  9475                           
  9476                           ;ring_buffer_LUT.c: 519: terminal_textAttributesReset();
  9477  010986  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9478                           
  9479                           ;ring_buffer_LUT.c: 521: terminal_printNewline();
  9480  01098A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9481                           
  9482                           ;ring_buffer_LUT.c: 523: }
  9483  01098E  0012               	return	
  9484  010990                     l1211:
  9485                           
  9486                           ;ring_buffer_LUT.c: 526: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9487  010990  C1A2  F126         	movff	ringBufferLUT@line,strstr@s1
  9488  010994  C1A3  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9489  010998  0EFC               	movlw	low STR_102
  9490  01099A  0101               	movlb	1	; () banked
  9491  01099C  6F28               	movwf	strstr@s2& (0+255),b
  9492  01099E  0EFC               	movlw	high STR_102
  9493  0109A0  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9494  0109A2  ECEE  F0AE         	call	_strstr	;wreg free
  9495  0109A6  0101               	movlb	1	; () banked
  9496  0109A8  5126               	movf	?_strstr& (0+255),w,b
  9497  0109AA  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9498  0109AC  B4D8               	btfsc	status,2,c
  9499  0109AE  D119               	goto	l1213
  9500                           
  9501                           ; BSR set to: 1
  9502                           ;ring_buffer_LUT.c: 529: char arg_buff[3];
  9503                           ;ring_buffer_LUT.c: 532: for (int index = 0; index < 3; index++) {
  9504  0109B0  0E00               	movlw	0
  9505  0109B2  0102               	movlb	2	; () banked
  9506  0109B4  6F9F               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9507  0109B6  0E00               	movlw	0
  9508  0109B8  6F9E               	movwf	ringBufferLUT@index& (0+255),b
  9509  0109BA                     l12262:
  9510                           
  9511                           ; BSR set to: 2
  9512  0109BA  BF9F               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9513  0109BC  D006               	goto	l1214
  9514  0109BE  519F               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9515  0109C0  E11F               	bnz	l12272
  9516  0109C2  0E03               	movlw	3
  9517  0109C4  5D9E               	subwf	ringBufferLUT@index& (0+255),w,b
  9518  0109C6  B0D8               	btfsc	status,0,c
  9519  0109C8  D01B               	goto	u14990
  9520  0109CA                     l1214:
  9521                           
  9522                           ; BSR set to: 2
  9523                           ;ring_buffer_LUT.c: 534: arg_buff[index] = line[index + 24];
  9524                           
  9525                           ; BSR set to: 2
  9526  0109CA  0E18               	movlw	24
  9527  0109CC  259E               	addwf	ringBufferLUT@index& (0+255),w,b
  9528  0109CE  0101               	movlb	1	; () banked
  9529  0109D0  6FA4               	movwf	??_ringBufferLUT& (0+255),b
  9530  0109D2  0E00               	movlw	0
  9531  0109D4  0102               	movlb	2	; () banked
  9532  0109D6  219F               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9533  0109D8  0101               	movlb	1	; () banked
  9534  0109DA  6FA5               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9535  0109DC  51A4               	movf	??_ringBufferLUT& (0+255),w,b
  9536  0109DE  25A2               	addwf	ringBufferLUT@line& (0+255),w,b
  9537  0109E0  6ED9               	movwf	fsr2l,c
  9538  0109E2  51A5               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9539  0109E4  21A3               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9540  0109E6  6EDA               	movwf	fsr2h,c
  9541  0109E8  0E9B               	movlw	low ringBufferLUT@arg_buff
  9542  0109EA  0102               	movlb	2	; () banked
  9543  0109EC  259E               	addwf	ringBufferLUT@index& (0+255),w,b
  9544  0109EE  6EE1               	movwf	fsr1l,c
  9545  0109F0  0E02               	movlw	high ringBufferLUT@arg_buff
  9546  0109F2  219F               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9547  0109F4  6EE2               	movwf	fsr1h,c
  9548  0109F6  CFDF FFE7          	movff	indf2,indf1
  9549                           
  9550                           ; BSR set to: 2
  9551  0109FA  4B9E               	infsnz	ringBufferLUT@index& (0+255),f,b
  9552  0109FC  2B9F               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9553  0109FE  D7DD               	goto	l12262
  9554  010A00                     u14990:
  9555  010A00                     l12272:
  9556                           
  9557                           ; BSR set to: 2
  9558                           ;ring_buffer_LUT.c: 536: }
  9559                           ;ring_buffer_LUT.c: 538: int percentage = atoi(arg_buff);
  9560  010A00  0E9B               	movlw	low ringBufferLUT@arg_buff
  9561  010A02  0101               	movlb	1	; () banked
  9562  010A04  6F2B               	movwf	atoi@s& (0+255),b
  9563  010A06  0E02               	movlw	high ringBufferLUT@arg_buff
  9564  010A08  6F2C               	movwf	(atoi@s+1)& (0+255),b
  9565  010A0A  ECEF  F0AA         	call	_atoi	;wreg free
  9566  010A0E  C12B  F2A0         	movff	?_atoi,ringBufferLUT@percentage
  9567  010A12  C12C  F2A1         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9568                           
  9569                           ;ring_buffer_LUT.c: 541: if ( (percentage >= 100) ||
  9570                           ;ring_buffer_LUT.c: 542: (percentage <= 0)) {
  9571  010A16  0102               	movlb	2	; () banked
  9572  010A18  BFA1               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9573  010A1A  D006               	goto	u15000
  9574  010A1C  51A1               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9575  010A1E  E10B               	bnz	l12278
  9576  010A20  0E64               	movlw	100
  9577  010A22  5DA0               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9578  010A24  B0D8               	btfsc	status,0,c
  9579  010A26  D007               	goto	u15010
  9580  010A28                     u15000:
  9581                           
  9582                           ; BSR set to: 2
  9583  010A28  BFA1               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9584  010A2A  D005               	goto	u15010
  9585  010A2C  51A1               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9586  010A2E  E12F               	bnz	l12280
  9587  010A30  05A0               	decf	ringBufferLUT@percentage& (0+255),w,b
  9588  010A32  B0D8               	btfsc	status,0,c
  9589  010A34  D02C               	goto	l1216
  9590  010A36                     u15010:
  9591  010A36                     l12278:
  9592                           
  9593                           ; BSR set to: 2
  9594                           ;ring_buffer_LUT.c: 545: terminal_printNewline();
  9595  010A36  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9596                           
  9597                           ;ring_buffer_LUT.c: 547: terminal_textAttributes(RED, BLACK, NORMAL);
  9598  010A3A  0E00               	movlw	0
  9599  010A3C  0101               	movlb	1	; () banked
  9600  010A3E  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9601  010A40  0E00               	movlw	0
  9602  010A42  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9603  010A44  0E01               	movlw	1
  9604  010A46  EC0B  F099         	call	_terminal_textAttributes
  9605                           
  9606                           ;ring_buffer_LUT.c: 548: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9607  010A4A  0E2A               	movlw	low STR_103
  9608  010A4C  0101               	movlb	1	; () banked
  9609  010A4E  6F64               	movwf	printf@f& (0+255),b
  9610  010A50  0EF6               	movlw	high STR_103
  9611  010A52  6F65               	movwf	(printf@f+1)& (0+255),b
  9612  010A54  ECB0  F086         	call	_printf	;wreg free
  9613                           
  9614                           ;ring_buffer_LUT.c: 550: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9615  010A58  0E00               	movlw	0
  9616  010A5A  0101               	movlb	1	; () banked
  9617  010A5C  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9618  010A5E  0E00               	movlw	0
  9619  010A60  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9620  010A62  0E03               	movlw	3
  9621  010A64  EC0B  F099         	call	_terminal_textAttributes
  9622                           
  9623                           ;ring_buffer_LUT.c: 551: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9624  010A68  0EC4               	movlw	low STR_104
  9625  010A6A  0101               	movlb	1	; () banked
  9626  010A6C  6F64               	movwf	printf@f& (0+255),b
  9627  010A6E  0EF5               	movlw	high STR_104
  9628  010A70  6F65               	movwf	(printf@f+1)& (0+255),b
  9629  010A72  ECB0  F086         	call	_printf	;wreg free
  9630                           
  9631                           ;ring_buffer_LUT.c: 552: printf("Enter 'Help' for list of available commands\n\r");
  9632  010A76  0E7D               	movlw	low STR_105
  9633  010A78  0101               	movlb	1	; () banked
  9634  010A7A  6F64               	movwf	printf@f& (0+255),b
  9635  010A7C  0EF9               	movlw	high STR_105
  9636  010A7E  6F65               	movwf	(printf@f+1)& (0+255),b
  9637  010A80  ECB0  F086         	call	_printf	;wreg free
  9638                           
  9639                           ;ring_buffer_LUT.c: 554: terminal_textAttributesReset();
  9640  010A84  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9641                           
  9642                           ;ring_buffer_LUT.c: 556: terminal_printNewline();
  9643  010A88  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9644                           
  9645                           ;ring_buffer_LUT.c: 558: }
  9646  010A8C  0012               	return	
  9647  010A8E                     l1216:
  9648  010A8E                     l12280:
  9649                           
  9650                           ;ring_buffer_LUT.c: 561: else {
  9651                           ;ring_buffer_LUT.c: 564: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9652  010A8E  0E00               	movlw	0
  9653  010A90  0101               	movlb	1	; () banked
  9654  010A92  6F3A               	movwf	___ftdiv@f2& (0+255),b
  9655  010A94  0EC8               	movlw	200
  9656  010A96  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  9657  010A98  0E42               	movlw	66
  9658  010A9A  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  9659  010A9C  0E00               	movlw	0
  9660  010A9E  6F2E               	movwf	___ftadd@f2& (0+255),b
  9661  010AA0  0EC8               	movlw	200
  9662  010AA2  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  9663  010AA4  0E42               	movlw	66
  9664  010AA6  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  9665  010AA8  C2A0  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  9666  010AAC  C2A1  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  9667  010AB0  EC0B  F0B6         	call	___awtoft	;wreg free
  9668  010AB4  C11F  F123         	movff	?___awtoft,___ftneg@f1
  9669  010AB8  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  9670  010ABC  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  9671  010AC0  EC43  F0B7         	call	___ftneg	;wreg free
  9672  010AC4  C123  F12B         	movff	?___ftneg,___ftadd@f1
  9673  010AC8  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  9674  010ACC  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  9675  010AD0  EC6D  F0A1         	call	___ftadd	;wreg free
  9676  010AD4  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  9677  010AD8  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  9678  010ADC  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  9679  010AE0  ECBA  F0A8         	call	___ftdiv	;wreg free
  9680  010AE4  C137  F146         	movff	?___ftdiv,___ftmul@f1
  9681  010AE8  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  9682  010AEC  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  9683  010AF0  0E10               	movlw	16
  9684  010AF2  0101               	movlb	1	; () banked
  9685  010AF4  6F49               	movwf	___ftmul@f2& (0+255),b
  9686  010AF6  0E49               	movlw	73
  9687  010AF8  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  9688  010AFA  0E40               	movlw	64
  9689  010AFC  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  9690  010AFE  EC4B  F0A7         	call	___ftmul	;wreg free
  9691  010B02  C146  F0FC         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  9692  010B06  C147  F0FD         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  9693  010B0A  C148  F0FE         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  9694                           
  9695                           ;ring_buffer_LUT.c: 565: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  9696  010B0E  C0FC  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  9697  010B12  C0FD  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  9698  010B16  C0FE  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  9699  010B1A  0E2F               	movlw	47
  9700  010B1C  0101               	movlb	1	; () banked
  9701  010B1E  6F49               	movwf	___ftmul@f2& (0+255),b
  9702  010B20  0E65               	movlw	101
  9703  010B22  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  9704  010B24  0E42               	movlw	66
  9705  010B26  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  9706  010B28  EC4B  F0A7         	call	___ftmul	;wreg free
  9707  010B2C  C146  F298         	movff	?___ftmul,ringBufferLUT@angle_degrees
  9708  010B30  C147  F299         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  9709  010B34  C148  F29A         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  9710                           
  9711                           ;ring_buffer_LUT.c: 566: dimming_period = (100 - percentage) * (0xFFFF / 100);
  9712  010B38  C2A0  F1A4         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  9713  010B3C  C2A1  F1A5         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  9714  010B40  0101               	movlb	1	; () banked
  9715  010B42  1FA4               	comf	??_ringBufferLUT& (0+255),f,b
  9716  010B44  1FA5               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  9717  010B46  4BA4               	infsnz	??_ringBufferLUT& (0+255),f,b
  9718  010B48  2BA5               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  9719  010B4A  0E64               	movlw	100
  9720  010B4C  25A4               	addwf	??_ringBufferLUT& (0+255),w,b
  9721  010B4E  6F25               	movwf	___wmul@multiplier& (0+255),b
  9722  010B50  0E00               	movlw	0
  9723  010B52  21A5               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  9724  010B54  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  9725  010B56  0E02               	movlw	2
  9726  010B58  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9727  010B5A  0E8F               	movlw	143
  9728  010B5C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9729  010B5E  ECF4  F0B6         	call	___wmul	;wreg free
  9730  010B62  C125  F0FA         	movff	?___wmul,_dimming_period	;volatile
  9731  010B66  C126  F0FB         	movff	?___wmul+1,_dimming_period+1	;volatile
  9732                           
  9733                           ;ring_buffer_LUT.c: 569: terminal_printNewline();
  9734  010B6A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9735                           
  9736                           ;ring_buffer_LUT.c: 571: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9737  010B6E  0E00               	movlw	0
  9738  010B70  0101               	movlb	1	; () banked
  9739  010B72  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9740  010B74  0E00               	movlw	0
  9741  010B76  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9742  010B78  0E06               	movlw	6
  9743  010B7A  EC0B  F099         	call	_terminal_textAttributes
  9744                           
  9745                           ;ring_buffer_LUT.c: 572: printf("Dimming has been set to %d percent\n\r", percentage);
  9746  010B7E  0EED               	movlw	low STR_106
  9747  010B80  0101               	movlb	1	; () banked
  9748  010B82  6F64               	movwf	printf@f& (0+255),b
  9749  010B84  0EFA               	movlw	high STR_106
  9750  010B86  6F65               	movwf	(printf@f+1)& (0+255),b
  9751  010B88  C2A0  F166         	movff	ringBufferLUT@percentage,?_printf+2
  9752  010B8C  C2A1  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  9753  010B90  ECB0  F086         	call	_printf	;wreg free
  9754                           
  9755                           ;ring_buffer_LUT.c: 573: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  9756  010B94  0E9B               	movlw	low STR_107
  9757  010B96  0101               	movlb	1	; () banked
  9758  010B98  6F64               	movwf	printf@f& (0+255),b
  9759  010B9A  0EF7               	movlw	high STR_107
  9760  010B9C  6F65               	movwf	(printf@f+1)& (0+255),b
  9761  010B9E  C0FC  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  9762  010BA2  C0FD  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  9763  010BA6  C0FE  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  9764  010BAA  C298  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  9765  010BAE  C299  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  9766  010BB2  C29A  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  9767  010BB6  ECB0  F086         	call	_printf	;wreg free
  9768                           
  9769                           ;ring_buffer_LUT.c: 574: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  9770  010BBA  0ED2               	movlw	low STR_108
  9771  010BBC  0101               	movlb	1	; () banked
  9772  010BBE  6F64               	movwf	printf@f& (0+255),b
  9773  010BC0  0EF6               	movlw	high STR_108
  9774  010BC2  6F65               	movwf	(printf@f+1)& (0+255),b
  9775  010BC4  C0FA  F166         	movff	_dimming_period,?_printf+2	;volatile
  9776  010BC8  C0FB  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  9777  010BCC  C0FA  F168         	movff	_dimming_period,?_printf+4	;volatile
  9778  010BD0  C0FB  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  9779  010BD4  ECB0  F086         	call	_printf	;wreg free
  9780                           
  9781                           ;ring_buffer_LUT.c: 576: terminal_textAttributesReset();
  9782  010BD8  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9783                           
  9784                           ;ring_buffer_LUT.c: 578: terminal_printNewline();
  9785  010BDC  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9786                           
  9787                           ;ring_buffer_LUT.c: 580: }
  9788                           ;ring_buffer_LUT.c: 582: }
  9789  010BE0  0012               	return	
  9790  010BE2                     l1213:
  9791                           
  9792                           ;ring_buffer_LUT.c: 585: else if((0 == strcmp(line, "Device On Time?"))) {
  9793  010BE2  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9794  010BE6  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9795  010BEA  0E4D               	movlw	low STR_109
  9796  010BEC  0101               	movlb	1	; () banked
  9797  010BEE  6F19               	movwf	strcmp@s2& (0+255),b
  9798  010BF0  0EFE               	movlw	high STR_109
  9799  010BF2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9800  010BF4  EC24  F0B4         	call	_strcmp	;wreg free
  9801  010BF8  0101               	movlb	1	; () banked
  9802  010BFA  5117               	movf	?_strcmp& (0+255),w,b
  9803  010BFC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9804  010BFE  A4D8               	btfss	status,2,c
  9805  010C00  D01E               	goto	l1221
  9806                           
  9807                           ; BSR set to: 1
  9808                           ;ring_buffer_LUT.c: 588: terminal_printNewline();
  9809  010C02  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9810                           
  9811                           ;ring_buffer_LUT.c: 590: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9812  010C06  0E00               	movlw	0
  9813  010C08  0101               	movlb	1	; () banked
  9814  010C0A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9815  010C0C  0E00               	movlw	0
  9816  010C0E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9817  010C10  0E06               	movlw	6
  9818  010C12  EC0B  F099         	call	_terminal_textAttributes
  9819                           
  9820                           ;ring_buffer_LUT.c: 591: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  9821  010C16  0EDA               	movlw	low STR_110
  9822  010C18  0101               	movlb	1	; () banked
  9823  010C1A  6F64               	movwf	printf@f& (0+255),b
  9824  010C1C  0EF7               	movlw	high STR_110
  9825  010C1E  6F65               	movwf	(printf@f+1)& (0+255),b
  9826  010C20  C1B7  F166         	movff	_dev_on_time,?_printf+2	;volatile
  9827  010C24  C1B8  F167         	movff	_dev_on_time+1,?_printf+3	;volatile
  9828  010C28  C1B9  F168         	movff	_dev_on_time+2,?_printf+4	;volatile
  9829  010C2C  C1BA  F169         	movff	_dev_on_time+3,?_printf+5	;volatile
  9830  010C30  ECB0  F086         	call	_printf	;wreg free
  9831                           
  9832                           ;ring_buffer_LUT.c: 593: terminal_textAttributesReset();
  9833  010C34  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9834                           
  9835                           ;ring_buffer_LUT.c: 595: terminal_printNewline();
  9836  010C38  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9837                           
  9838                           ;ring_buffer_LUT.c: 597: }
  9839  010C3C  0012               	return	
  9840  010C3E                     l1221:
  9841                           
  9842                           ;ring_buffer_LUT.c: 600: else if((0 == strcmp(line, "Load On Time?"))) {
  9843  010C3E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9844  010C42  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9845  010C46  0EE5               	movlw	low STR_111
  9846  010C48  0101               	movlb	1	; () banked
  9847  010C4A  6F19               	movwf	strcmp@s2& (0+255),b
  9848  010C4C  0EFE               	movlw	high STR_111
  9849  010C4E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9850  010C50  EC24  F0B4         	call	_strcmp	;wreg free
  9851  010C54  0101               	movlb	1	; () banked
  9852  010C56  5117               	movf	?_strcmp& (0+255),w,b
  9853  010C58  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9854  010C5A  A4D8               	btfss	status,2,c
  9855  010C5C  D01E               	goto	l1223
  9856                           
  9857                           ; BSR set to: 1
  9858                           ;ring_buffer_LUT.c: 603: terminal_printNewline();
  9859  010C5E  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9860                           
  9861                           ;ring_buffer_LUT.c: 605: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9862  010C62  0E00               	movlw	0
  9863  010C64  0101               	movlb	1	; () banked
  9864  010C66  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9865  010C68  0E00               	movlw	0
  9866  010C6A  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9867  010C6C  0E06               	movlw	6
  9868  010C6E  EC0B  F099         	call	_terminal_textAttributes
  9869                           
  9870                           ;ring_buffer_LUT.c: 606: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  9871  010C72  0E84               	movlw	low STR_112
  9872  010C74  0101               	movlb	1	; () banked
  9873  010C76  6F64               	movwf	printf@f& (0+255),b
  9874  010C78  0EF8               	movlw	high STR_112
  9875  010C7A  6F65               	movwf	(printf@f+1)& (0+255),b
  9876  010C7C  C1B3  F166         	movff	_load_on_time,?_printf+2	;volatile
  9877  010C80  C1B4  F167         	movff	_load_on_time+1,?_printf+3	;volatile
  9878  010C84  C1B5  F168         	movff	_load_on_time+2,?_printf+4	;volatile
  9879  010C88  C1B6  F169         	movff	_load_on_time+3,?_printf+5	;volatile
  9880  010C8C  ECB0  F086         	call	_printf	;wreg free
  9881                           
  9882                           ;ring_buffer_LUT.c: 608: terminal_textAttributesReset();
  9883  010C90  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9884                           
  9885                           ;ring_buffer_LUT.c: 610: terminal_printNewline();
  9886  010C94  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9887                           
  9888                           ;ring_buffer_LUT.c: 612: }
  9889  010C98  0012               	return	
  9890  010C9A                     l1223:
  9891                           
  9892                           ;ring_buffer_LUT.c: 617: else if((0 == strcmp(line, "Help"))) {
  9893  010C9A  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9894  010C9E  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9895  010CA2  0EAA               	movlw	low STR_113
  9896  010CA4  0101               	movlb	1	; () banked
  9897  010CA6  6F19               	movwf	strcmp@s2& (0+255),b
  9898  010CA8  0EFF               	movlw	high STR_113
  9899  010CAA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9900  010CAC  EC24  F0B4         	call	_strcmp	;wreg free
  9901  010CB0  0101               	movlb	1	; () banked
  9902  010CB2  5117               	movf	?_strcmp& (0+255),w,b
  9903  010CB4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9904  010CB6  A4D8               	btfss	status,2,c
  9905  010CB8  0012               	return	
  9906                           
  9907                           ; BSR set to: 1
  9908                           ;ring_buffer_LUT.c: 620: terminal_printNewline();
  9909  010CBA  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9910                           
  9911                           ;ring_buffer_LUT.c: 622: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9912  010CBE  0E00               	movlw	0
  9913  010CC0  0101               	movlb	1	; () banked
  9914  010CC2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9915  010CC4  0E00               	movlw	0
  9916  010CC6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9917  010CC8  0E03               	movlw	3
  9918  010CCA  EC0B  F099         	call	_terminal_textAttributes
  9919                           
  9920                           ;ring_buffer_LUT.c: 623: printf("List of supported commands:\n\r\n\r"
  9921                           ;ring_buffer_LUT.c: 625: "Device Commands:\n\r"
  9922                           ;ring_buffer_LUT.c: 626: "   Reset: Clears the terminal and resets the micro\n\r"
  9923                           ;ring_buffer_LUT.c: 627: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  9924                           ;ring_buffer_LUT.c: 628: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
  9925                           ;ring_buffer_LUT.c: 629: "   *IDN?: Returns device identification string\n\r"
  9926                           ;ring_buffer_LUT.c: 630: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  9927  010CCE  0E61               	movlw	low STR_114
  9928  010CD0  0101               	movlb	1	; () banked
  9929  010CD2  6F64               	movwf	printf@f& (0+255),b
  9930  010CD4  0EEC               	movlw	high STR_114
  9931  010CD6  6F65               	movwf	(printf@f+1)& (0+255),b
  9932  010CD8  ECB0  F086         	call	_printf	;wreg free
  9933                           
  9934                           ;ring_buffer_LUT.c: 662: terminal_printNewline();
  9935  010CDC  EC38  F0B8         	call	_terminal_printNewline	;wreg free
  9936                           
  9937                           ;ring_buffer_LUT.c: 663: printf("Help messages appear in yellow\n\r");
  9938  010CE0  0EDF               	movlw	low STR_115
  9939  010CE2  0101               	movlb	1	; () banked
  9940  010CE4  6F64               	movwf	printf@f& (0+255),b
  9941  010CE6  0EFB               	movlw	high STR_115
  9942  010CE8  6F65               	movwf	(printf@f+1)& (0+255),b
  9943  010CEA  ECB0  F086         	call	_printf	;wreg free
  9944                           
  9945                           ;ring_buffer_LUT.c: 665: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9946  010CEE  0E00               	movlw	0
  9947  010CF0  0101               	movlb	1	; () banked
  9948  010CF2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9949  010CF4  0E00               	movlw	0
  9950  010CF6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9951  010CF8  0E02               	movlw	2
  9952  010CFA  EC0B  F099         	call	_terminal_textAttributes
  9953                           
  9954                           ;ring_buffer_LUT.c: 666: printf("System parameters appears in green\n\r");
  9955  010CFE  0EC8               	movlw	low STR_116
  9956  010D00  0101               	movlb	1	; () banked
  9957  010D02  6F64               	movwf	printf@f& (0+255),b
  9958  010D04  0EFA               	movlw	high STR_116
  9959  010D06  6F65               	movwf	(printf@f+1)& (0+255),b
  9960  010D08  ECB0  F086         	call	_printf	;wreg free
  9961                           
  9962                           ;ring_buffer_LUT.c: 667: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9963  010D0C  0E00               	movlw	0
  9964  010D0E  0101               	movlb	1	; () banked
  9965  010D10  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9966  010D12  0E00               	movlw	0
  9967  010D14  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9968  010D16  0E06               	movlw	6
  9969  010D18  EC0B  F099         	call	_terminal_textAttributes
  9970                           
  9971                           ;ring_buffer_LUT.c: 668: printf("Measurement responses appear in cyan\n\r");
  9972  010D1C  0E7C               	movlw	low STR_117
  9973  010D1E  0101               	movlb	1	; () banked
  9974  010D20  6F64               	movwf	printf@f& (0+255),b
  9975  010D22  0EFA               	movlw	high STR_117
  9976  010D24  6F65               	movwf	(printf@f+1)& (0+255),b
  9977  010D26  ECB0  F086         	call	_printf	;wreg free
  9978                           
  9979                           ;ring_buffer_LUT.c: 669: terminal_textAttributes(RED, BLACK, NORMAL);
  9980  010D2A  0E00               	movlw	0
  9981  010D2C  0101               	movlb	1	; () banked
  9982  010D2E  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9983  010D30  0E00               	movlw	0
  9984  010D32  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9985  010D34  0E01               	movlw	1
  9986  010D36  EC0B  F099         	call	_terminal_textAttributes
  9987                           
  9988                           ;ring_buffer_LUT.c: 670: printf("Errors appear in red\n\r");
  9989  010D3A  0E2D               	movlw	low STR_118
  9990  010D3C  0101               	movlb	1	; () banked
  9991  010D3E  6F64               	movwf	printf@f& (0+255),b
  9992  010D40  0EFD               	movlw	high STR_118
  9993  010D42  6F65               	movwf	(printf@f+1)& (0+255),b
  9994  010D44  ECB0  F086         	call	_printf	;wreg free
  9995                           
  9996                           ;ring_buffer_LUT.c: 671: terminal_textAttributesReset();
  9997  010D48  EC27  F0B8         	call	_terminal_textAttributesReset	;wreg free
  9998                           
  9999                           ;ring_buffer_LUT.c: 672: printf("User input appears in white\n\r");
 10000  010D4C  0E3E               	movlw	low STR_119
 10001  010D4E  0101               	movlb	1	; () banked
 10002  010D50  6F64               	movwf	printf@f& (0+255),b
 10003  010D52  0EFC               	movlw	high STR_119
 10004  010D54  6F65               	movwf	(printf@f+1)& (0+255),b
 10005  010D56  ECB0  F086         	call	_printf	;wreg free
 10006                           
 10007                           ;ring_buffer_LUT.c: 675: terminal_printNewline();
 10008  010D5A  EC38  F0B8         	call	_terminal_printNewline	;wreg free
 10009  010D5E  0012               	return	
 10010  010D60                     __end_of_ringBufferLUT:
 10011                           	opt stack 0
 10012                           tblptru	equ	0xFF8
 10013                           tblptrh	equ	0xFF7
 10014                           tblptrl	equ	0xFF6
 10015                           tablat	equ	0xFF5
 10016                           intcon	equ	0xFF2
 10017                           postinc0	equ	0xFEE
 10018                           wreg	equ	0xFE8
 10019                           indf1	equ	0xFE7
 10020                           postdec1	equ	0xFE5
 10021                           fsr1h	equ	0xFE2
 10022                           fsr1l	equ	0xFE1
 10023                           indf2	equ	0xFDF
 10024                           postinc2	equ	0xFDE
 10025                           fsr2h	equ	0xFDA
 10026                           fsr2l	equ	0xFD9
 10027                           status	equ	0xFD8
 10028                           
 10029 ;; *************** function _terminal_textAttributesReset *****************
 10030 ;; Defined at:
 10031 ;;		line 223 in file "ring_buffer_interface.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;		None
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;		None
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  1    wreg      void 
 10038 ;; Registers used:
 10039 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;Total ram usage:        0 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; Hardware stack levels required when called:   19
 10052 ;; This function calls:
 10053 ;;		_terminal_textAttributes
 10054 ;; This function is called by:
 10055 ;;		_main
 10056 ;;		_ringBufferLUT
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text4
 10061  01704E                     __ptext4:
 10062                           	opt stack 0
 10063  01704E                     _terminal_textAttributesReset:
 10064                           	opt stack 11
 10065                           
 10066                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 10067                           
 10068                           ;incstack = 0
 10069  01704E  0E00               	movlw	0
 10070  017050  0101               	movlb	1	; () banked
 10071  017052  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
 10072  017054  0E00               	movlw	0
 10073  017056  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10074  017058  0E07               	movlw	7
 10075  01705A  EC0B  F099         	call	_terminal_textAttributes
 10076  01705E  0012               	return		;funcret
 10077  017060                     __end_of_terminal_textAttributesReset:
 10078                           	opt stack 0
 10079                           tblptru	equ	0xFF8
 10080                           tblptrh	equ	0xFF7
 10081                           tblptrl	equ	0xFF6
 10082                           tablat	equ	0xFF5
 10083                           intcon	equ	0xFF2
 10084                           postinc0	equ	0xFEE
 10085                           wreg	equ	0xFE8
 10086                           indf1	equ	0xFE7
 10087                           postdec1	equ	0xFE5
 10088                           fsr1h	equ	0xFE2
 10089                           fsr1l	equ	0xFE1
 10090                           indf2	equ	0xFDF
 10091                           postinc2	equ	0xFDE
 10092                           fsr2h	equ	0xFDA
 10093                           fsr2l	equ	0xFD9
 10094                           status	equ	0xFD8
 10095                           
 10096 ;; *************** function _terminal_textAttributes *****************
 10097 ;; Defined at:
 10098 ;;		line 115 in file "ring_buffer_interface.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  foreground_c    1    wreg     enum E17893
 10101 ;;  background_c    1  144[BANK1 ] enum E17893
 10102 ;;  input_attrib    1  145[BANK1 ] enum E17885
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  foreground_c    1  146[BANK1 ] enum E17893
 10105 ;;  output_buff    15  147[BANK1 ] unsigned char [15]
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      void 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10115 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10118 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10119 ;;Total ram usage:       18 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:   18
 10122 ;; This function calls:
 10123 ;;		_printf
 10124 ;;		_strcat
 10125 ;;		_strncpy
 10126 ;; This function is called by:
 10127 ;;		_terminal_textAttributesReset
 10128 ;;		_ringBufferLUT
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text5
 10133  013216                     __ptext5:
 10134                           	opt stack 0
 10135  013216                     _terminal_textAttributes:
 10136                           	opt stack 11
 10137                           
 10138                           ;incstack = 0
 10139                           ;terminal_textAttributes@foreground_color stored from wreg
 10140  013216  0101               	movlb	1	; () banked
 10141  013218  6F92               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 10142                           
 10143                           ;ring_buffer_interface.c: 119: char output_buff[15];
 10144                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 10145  01321A  0E93               	movlw	low terminal_textAttributes@output_buff
 10146  01321C  0101               	movlb	1	; () banked
 10147  01321E  6F17               	movwf	strncpy@to& (0+255),b
 10148  013220  0E01               	movlw	high terminal_textAttributes@output_buff
 10149  013222  6F18               	movwf	(strncpy@to+1)& (0+255),b
 10150  013224  0EF5               	movlw	low STR_11
 10151  013226  6F19               	movwf	strncpy@from& (0+255),b
 10152  013228  0EFF               	movlw	high STR_11
 10153  01322A  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 10154  01322C  0E00               	movlw	0
 10155  01322E  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 10156  013230  0E0F               	movlw	15
 10157  013232  6F1B               	movwf	strncpy@size& (0+255),b
 10158  013234  EC1A  F0B2         	call	_strncpy	;wreg free
 10159                           
 10160                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 10161  013238  D054               	goto	l1027
 10162  01323A                     
 10163                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 10164  01323A  0E93               	movlw	low terminal_textAttributes@output_buff
 10165  01323C  0101               	movlb	1	; () banked
 10166  01323E  6F17               	movwf	strcat@to& (0+255),b
 10167  013240  0E01               	movlw	high terminal_textAttributes@output_buff
 10168  013242  6F18               	movwf	(strcat@to+1)& (0+255),b
 10169  013244  0EC9               	movlw	low (STR_20+1)
 10170  013246  6F19               	movwf	strcat@from& (0+255),b
 10171  013248  0EFF               	movlw	high (STR_20+1)
 10172  01324A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10173  01324C  EC17  F0B3         	call	_strcat	;wreg free
 10174                           
 10175                           ;ring_buffer_interface.c: 127: break;
 10176  013250  D05D               	goto	l1029
 10177  013252                     
 10178                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 10179  013252  0E93               	movlw	low terminal_textAttributes@output_buff
 10180  013254  0101               	movlb	1	; () banked
 10181  013256  6F17               	movwf	strcat@to& (0+255),b
 10182  013258  0E01               	movlw	high terminal_textAttributes@output_buff
 10183  01325A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10184  01325C  0E6E               	movlw	low (STR_67+20)
 10185  01325E  6F19               	movwf	strcat@from& (0+255),b
 10186  013260  0EFD               	movlw	high (STR_67+20)
 10187  013262  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10188  013264  EC17  F0B3         	call	_strcat	;wreg free
 10189                           
 10190                           ;ring_buffer_interface.c: 130: break;
 10191  013268  D051               	goto	l1029
 10192  01326A                     
 10193                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 10194  01326A  0E93               	movlw	low terminal_textAttributes@output_buff
 10195  01326C  0101               	movlb	1	; () banked
 10196  01326E  6F17               	movwf	strcat@to& (0+255),b
 10197  013270  0E01               	movlw	high terminal_textAttributes@output_buff
 10198  013272  6F18               	movwf	(strcat@to+1)& (0+255),b
 10199  013274  0EDE               	movlw	low (STR_24+1)
 10200  013276  6F19               	movwf	strcat@from& (0+255),b
 10201  013278  0EFF               	movlw	high (STR_24+1)
 10202  01327A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10203  01327C  EC17  F0B3         	call	_strcat	;wreg free
 10204                           
 10205                           ;ring_buffer_interface.c: 133: break;
 10206  013280  D045               	goto	l1029
 10207  013282                     
 10208                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 10209  013282  0E93               	movlw	low terminal_textAttributes@output_buff
 10210  013284  0101               	movlb	1	; () banked
 10211  013286  6F17               	movwf	strcat@to& (0+255),b
 10212  013288  0E01               	movlw	high terminal_textAttributes@output_buff
 10213  01328A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10214  01328C  0EE4               	movlw	low (STR_25+1)
 10215  01328E  6F19               	movwf	strcat@from& (0+255),b
 10216  013290  0EFF               	movlw	high (STR_25+1)
 10217  013292  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10218  013294  EC17  F0B3         	call	_strcat	;wreg free
 10219                           
 10220                           ;ring_buffer_interface.c: 136: break;
 10221  013298  D039               	goto	l1029
 10222  01329A                     
 10223                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 10224  01329A  0E93               	movlw	low terminal_textAttributes@output_buff
 10225  01329C  0101               	movlb	1	; () banked
 10226  01329E  6F17               	movwf	strcat@to& (0+255),b
 10227  0132A0  0E01               	movlw	high terminal_textAttributes@output_buff
 10228  0132A2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10229  0132A4  0EF0               	movlw	low (STR_27+1)
 10230  0132A6  6F19               	movwf	strcat@from& (0+255),b
 10231  0132A8  0EFF               	movlw	high (STR_27+1)
 10232  0132AA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10233  0132AC  EC17  F0B3         	call	_strcat	;wreg free
 10234                           
 10235                           ;ring_buffer_interface.c: 139: break;
 10236  0132B0  D02D               	goto	l1029
 10237  0132B2                     
 10238                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 10239  0132B2  0E93               	movlw	low terminal_textAttributes@output_buff
 10240  0132B4  0101               	movlb	1	; () banked
 10241  0132B6  6F17               	movwf	strcat@to& (0+255),b
 10242  0132B8  0E01               	movlw	high terminal_textAttributes@output_buff
 10243  0132BA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10244  0132BC  0EF8               	movlw	low STR_17
 10245  0132BE  6F19               	movwf	strcat@from& (0+255),b
 10246  0132C0  0EFF               	movlw	high STR_17
 10247  0132C2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10248  0132C4  EC17  F0B3         	call	_strcat	;wreg free
 10249                           
 10250                           ;ring_buffer_interface.c: 142: break;
 10251  0132C8  D021               	goto	l1029
 10252  0132CA                     
 10253                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 10254  0132CA  0E93               	movlw	low terminal_textAttributes@output_buff
 10255  0132CC  0101               	movlb	1	; () banked
 10256  0132CE  6F17               	movwf	strcat@to& (0+255),b
 10257  0132D0  0E01               	movlw	high terminal_textAttributes@output_buff
 10258  0132D2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10259  0132D4  0EC9               	movlw	low (STR_20+1)
 10260  0132D6  6F19               	movwf	strcat@from& (0+255),b
 10261  0132D8  0EFF               	movlw	high (STR_20+1)
 10262  0132DA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10263  0132DC  EC17  F0B3         	call	_strcat	;wreg free
 10264                           
 10265                           ;ring_buffer_interface.c: 147: }
 10266                           
 10267                           ;ring_buffer_interface.c: 146: break;
 10268  0132E0  D015               	goto	l1029
 10269  0132E2                     l1027:
 10270  0132E2  0101               	movlb	1	; () banked
 10271  0132E4  5191               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 10272                           
 10273                           ; Switch size 1, requested type "space"
 10274                           ; Number of cases is 6, Range of values is 0 to 5
 10275                           ; switch strategies available:
 10276                           ; Name         Instructions Cycles
 10277                           ; simple_byte           19    10 (average)
 10278                           ;	Chosen strategy is simple_byte
 10279  0132E6  0A00               	xorlw	0	; case 0
 10280  0132E8  B4D8               	btfsc	status,2,c
 10281  0132EA  D7A7               	goto	l1028
 10282  0132EC  0A01               	xorlw	1	; case 1
 10283  0132EE  B4D8               	btfsc	status,2,c
 10284  0132F0  D7B0               	goto	l1030
 10285  0132F2  0A03               	xorlw	3	; case 2
 10286  0132F4  B4D8               	btfsc	status,2,c
 10287  0132F6  D7B9               	goto	l1031
 10288  0132F8  0A01               	xorlw	1	; case 3
 10289  0132FA  B4D8               	btfsc	status,2,c
 10290  0132FC  D7C2               	goto	l1032
 10291  0132FE  0A07               	xorlw	7	; case 4
 10292  013300  B4D8               	btfsc	status,2,c
 10293  013302  D7CB               	goto	l1033
 10294  013304  0A01               	xorlw	1	; case 5
 10295  013306  B4D8               	btfsc	status,2,c
 10296  013308  D7D4               	goto	l1034
 10297  01330A  D7DF               	goto	l1035
 10298  01330C                     l1029:
 10299                           
 10300                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 10301                           
 10302                           ; BSR set to: 1
 10303  01330C  0E93               	movlw	low terminal_textAttributes@output_buff
 10304  01330E  0101               	movlb	1	; () banked
 10305  013310  6F17               	movwf	strcat@to& (0+255),b
 10306  013312  0E01               	movlw	high terminal_textAttributes@output_buff
 10307  013314  6F18               	movwf	(strcat@to+1)& (0+255),b
 10308  013316  0EFA               	movlw	low STR_19
 10309  013318  6F19               	movwf	strcat@from& (0+255),b
 10310  01331A  0EFF               	movlw	high STR_19
 10311  01331C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10312  01331E  EC17  F0B3         	call	_strcat	;wreg free
 10313                           
 10314                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 10315  013322  D06C               	goto	l1036
 10316  013324                     
 10317                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 10318  013324  0E93               	movlw	low terminal_textAttributes@output_buff
 10319  013326  0101               	movlb	1	; () banked
 10320  013328  6F17               	movwf	strcat@to& (0+255),b
 10321  01332A  0E01               	movlw	high terminal_textAttributes@output_buff
 10322  01332C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10323  01332E  0EC8               	movlw	low STR_20
 10324  013330  6F19               	movwf	strcat@from& (0+255),b
 10325  013332  0EFF               	movlw	high STR_20
 10326  013334  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10327  013336  EC17  F0B3         	call	_strcat	;wreg free
 10328                           
 10329                           ;ring_buffer_interface.c: 155: break;
 10330  01333A  D07B               	goto	l1038
 10331  01333C                     
 10332                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 10333  01333C  0E93               	movlw	low terminal_textAttributes@output_buff
 10334  01333E  0101               	movlb	1	; () banked
 10335  013340  6F17               	movwf	strcat@to& (0+255),b
 10336  013342  0E01               	movlw	high terminal_textAttributes@output_buff
 10337  013344  6F18               	movwf	(strcat@to+1)& (0+255),b
 10338  013346  0ECB               	movlw	low STR_21
 10339  013348  6F19               	movwf	strcat@from& (0+255),b
 10340  01334A  0EFF               	movlw	high STR_21
 10341  01334C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10342  01334E  EC17  F0B3         	call	_strcat	;wreg free
 10343                           
 10344                           ;ring_buffer_interface.c: 158: break;
 10345  013352  D06F               	goto	l1038
 10346  013354                     
 10347                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 10348  013354  0E93               	movlw	low terminal_textAttributes@output_buff
 10349  013356  0101               	movlb	1	; () banked
 10350  013358  6F17               	movwf	strcat@to& (0+255),b
 10351  01335A  0E01               	movlw	high terminal_textAttributes@output_buff
 10352  01335C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10353  01335E  0ED1               	movlw	low STR_22
 10354  013360  6F19               	movwf	strcat@from& (0+255),b
 10355  013362  0EFF               	movlw	high STR_22
 10356  013364  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10357  013366  EC17  F0B3         	call	_strcat	;wreg free
 10358                           
 10359                           ;ring_buffer_interface.c: 161: break;
 10360  01336A  D063               	goto	l1038
 10361  01336C                     
 10362                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 10363  01336C  0E93               	movlw	low terminal_textAttributes@output_buff
 10364  01336E  0101               	movlb	1	; () banked
 10365  013370  6F17               	movwf	strcat@to& (0+255),b
 10366  013372  0E01               	movlw	high terminal_textAttributes@output_buff
 10367  013374  6F18               	movwf	(strcat@to+1)& (0+255),b
 10368  013376  0ED7               	movlw	low STR_23
 10369  013378  6F19               	movwf	strcat@from& (0+255),b
 10370  01337A  0EFF               	movlw	high STR_23
 10371  01337C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10372  01337E  EC17  F0B3         	call	_strcat	;wreg free
 10373                           
 10374                           ;ring_buffer_interface.c: 164: break;
 10375  013382  D057               	goto	l1038
 10376  013384                     
 10377                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 10378  013384  0E93               	movlw	low terminal_textAttributes@output_buff
 10379  013386  0101               	movlb	1	; () banked
 10380  013388  6F17               	movwf	strcat@to& (0+255),b
 10381  01338A  0E01               	movlw	high terminal_textAttributes@output_buff
 10382  01338C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10383  01338E  0EDD               	movlw	low STR_24
 10384  013390  6F19               	movwf	strcat@from& (0+255),b
 10385  013392  0EFF               	movlw	high STR_24
 10386  013394  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10387  013396  EC17  F0B3         	call	_strcat	;wreg free
 10388                           
 10389                           ;ring_buffer_interface.c: 167: break;
 10390  01339A  D04B               	goto	l1038
 10391  01339C                     
 10392                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10393  01339C  0E93               	movlw	low terminal_textAttributes@output_buff
 10394  01339E  0101               	movlb	1	; () banked
 10395  0133A0  6F17               	movwf	strcat@to& (0+255),b
 10396  0133A2  0E01               	movlw	high terminal_textAttributes@output_buff
 10397  0133A4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10398  0133A6  0EE3               	movlw	low STR_25
 10399  0133A8  6F19               	movwf	strcat@from& (0+255),b
 10400  0133AA  0EFF               	movlw	high STR_25
 10401  0133AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10402  0133AE  EC17  F0B3         	call	_strcat	;wreg free
 10403                           
 10404                           ;ring_buffer_interface.c: 170: break;
 10405  0133B2  D03F               	goto	l1038
 10406  0133B4                     
 10407                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10408  0133B4  0E93               	movlw	low terminal_textAttributes@output_buff
 10409  0133B6  0101               	movlb	1	; () banked
 10410  0133B8  6F17               	movwf	strcat@to& (0+255),b
 10411  0133BA  0E01               	movlw	high terminal_textAttributes@output_buff
 10412  0133BC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10413  0133BE  0EE9               	movlw	low STR_26
 10414  0133C0  6F19               	movwf	strcat@from& (0+255),b
 10415  0133C2  0EFF               	movlw	high STR_26
 10416  0133C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10417  0133C6  EC17  F0B3         	call	_strcat	;wreg free
 10418                           
 10419                           ;ring_buffer_interface.c: 173: break;
 10420  0133CA  D033               	goto	l1038
 10421  0133CC                     
 10422                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10423  0133CC  0E93               	movlw	low terminal_textAttributes@output_buff
 10424  0133CE  0101               	movlb	1	; () banked
 10425  0133D0  6F17               	movwf	strcat@to& (0+255),b
 10426  0133D2  0E01               	movlw	high terminal_textAttributes@output_buff
 10427  0133D4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10428  0133D6  0EEF               	movlw	low STR_27
 10429  0133D8  6F19               	movwf	strcat@from& (0+255),b
 10430  0133DA  0EFF               	movlw	high STR_27
 10431  0133DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10432  0133DE  EC17  F0B3         	call	_strcat	;wreg free
 10433                           
 10434                           ;ring_buffer_interface.c: 176: break;
 10435  0133E2  D027               	goto	l1038
 10436  0133E4                     
 10437                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10438  0133E4  0E93               	movlw	low terminal_textAttributes@output_buff
 10439  0133E6  0101               	movlb	1	; () banked
 10440  0133E8  6F17               	movwf	strcat@to& (0+255),b
 10441  0133EA  0E01               	movlw	high terminal_textAttributes@output_buff
 10442  0133EC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10443  0133EE  0EEF               	movlw	low STR_27
 10444  0133F0  6F19               	movwf	strcat@from& (0+255),b
 10445  0133F2  0EFF               	movlw	high STR_27
 10446  0133F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10447  0133F6  EC17  F0B3         	call	_strcat	;wreg free
 10448                           
 10449                           ;ring_buffer_interface.c: 181: }
 10450                           
 10451                           ;ring_buffer_interface.c: 180: break;
 10452  0133FA  D01B               	goto	l1038
 10453  0133FC                     l1036:
 10454  0133FC  0101               	movlb	1	; () banked
 10455  0133FE  5192               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10456                           
 10457                           ; Switch size 1, requested type "space"
 10458                           ; Number of cases is 8, Range of values is 0 to 7
 10459                           ; switch strategies available:
 10460                           ; Name         Instructions Cycles
 10461                           ; simple_byte           25    13 (average)
 10462                           ;	Chosen strategy is simple_byte
 10463  013400  0A00               	xorlw	0	; case 0
 10464  013402  B4D8               	btfsc	status,2,c
 10465  013404  D78F               	goto	l1037
 10466  013406  0A01               	xorlw	1	; case 1
 10467  013408  B4D8               	btfsc	status,2,c
 10468  01340A  D798               	goto	l1039
 10469  01340C  0A03               	xorlw	3	; case 2
 10470  01340E  B4D8               	btfsc	status,2,c
 10471  013410  D7A1               	goto	l1040
 10472  013412  0A01               	xorlw	1	; case 3
 10473  013414  B4D8               	btfsc	status,2,c
 10474  013416  D7AA               	goto	l1041
 10475  013418  0A07               	xorlw	7	; case 4
 10476  01341A  B4D8               	btfsc	status,2,c
 10477  01341C  D7B3               	goto	l1042
 10478  01341E  0A01               	xorlw	1	; case 5
 10479  013420  B4D8               	btfsc	status,2,c
 10480  013422  D7BC               	goto	l1043
 10481  013424  0A03               	xorlw	3	; case 6
 10482  013426  B4D8               	btfsc	status,2,c
 10483  013428  D7C5               	goto	l1044
 10484  01342A  0A01               	xorlw	1	; case 7
 10485  01342C  B4D8               	btfsc	status,2,c
 10486  01342E  D7CE               	goto	l1045
 10487  013430  D7D9               	goto	l1046
 10488  013432                     l1038:
 10489                           
 10490                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10491                           
 10492                           ; BSR set to: 1
 10493  013432  0E93               	movlw	low terminal_textAttributes@output_buff
 10494  013434  0101               	movlb	1	; () banked
 10495  013436  6F17               	movwf	strcat@to& (0+255),b
 10496  013438  0E01               	movlw	high terminal_textAttributes@output_buff
 10497  01343A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10498  01343C  0EFA               	movlw	low STR_19
 10499  01343E  6F19               	movwf	strcat@from& (0+255),b
 10500  013440  0EFF               	movlw	high STR_19
 10501  013442  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10502  013444  EC17  F0B3         	call	_strcat	;wreg free
 10503                           
 10504                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10505  013448  D06C               	goto	l1047
 10506  01344A                     
 10507                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10508  01344A  0E93               	movlw	low terminal_textAttributes@output_buff
 10509  01344C  0101               	movlb	1	; () banked
 10510  01344E  6F17               	movwf	strcat@to& (0+255),b
 10511  013450  0E01               	movlw	high terminal_textAttributes@output_buff
 10512  013452  6F18               	movwf	(strcat@to+1)& (0+255),b
 10513  013454  0E4C               	movlw	low (STR_120+9)
 10514  013456  6F19               	movwf	strcat@from& (0+255),b
 10515  013458  0EFF               	movlw	high (STR_120+9)
 10516  01345A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10517  01345C  EC17  F0B3         	call	_strcat	;wreg free
 10518                           
 10519                           ;ring_buffer_interface.c: 189: break;
 10520  013460  D07B               	goto	l1049
 10521  013462                     
 10522                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10523  013462  0E93               	movlw	low terminal_textAttributes@output_buff
 10524  013464  0101               	movlb	1	; () banked
 10525  013466  6F17               	movwf	strcat@to& (0+255),b
 10526  013468  0E01               	movlw	high terminal_textAttributes@output_buff
 10527  01346A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10528  01346C  0ECE               	movlw	low STR_31
 10529  01346E  6F19               	movwf	strcat@from& (0+255),b
 10530  013470  0EFF               	movlw	high STR_31
 10531  013472  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10532  013474  EC17  F0B3         	call	_strcat	;wreg free
 10533                           
 10534                           ;ring_buffer_interface.c: 192: break;
 10535  013478  D06F               	goto	l1049
 10536  01347A                     
 10537                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10538  01347A  0E93               	movlw	low terminal_textAttributes@output_buff
 10539  01347C  0101               	movlb	1	; () banked
 10540  01347E  6F17               	movwf	strcat@to& (0+255),b
 10541  013480  0E01               	movlw	high terminal_textAttributes@output_buff
 10542  013482  6F18               	movwf	(strcat@to+1)& (0+255),b
 10543  013484  0ED4               	movlw	low STR_32
 10544  013486  6F19               	movwf	strcat@from& (0+255),b
 10545  013488  0EFF               	movlw	high STR_32
 10546  01348A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10547  01348C  EC17  F0B3         	call	_strcat	;wreg free
 10548                           
 10549                           ;ring_buffer_interface.c: 195: break;
 10550  013490  D063               	goto	l1049
 10551  013492                     
 10552                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10553  013492  0E93               	movlw	low terminal_textAttributes@output_buff
 10554  013494  0101               	movlb	1	; () banked
 10555  013496  6F17               	movwf	strcat@to& (0+255),b
 10556  013498  0E01               	movlw	high terminal_textAttributes@output_buff
 10557  01349A  6F18               	movwf	(strcat@to+1)& (0+255),b
 10558  01349C  0EDA               	movlw	low STR_33
 10559  01349E  6F19               	movwf	strcat@from& (0+255),b
 10560  0134A0  0EFF               	movlw	high STR_33
 10561  0134A2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10562  0134A4  EC17  F0B3         	call	_strcat	;wreg free
 10563                           
 10564                           ;ring_buffer_interface.c: 198: break;
 10565  0134A8  D057               	goto	l1049
 10566  0134AA                     
 10567                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10568  0134AA  0E93               	movlw	low terminal_textAttributes@output_buff
 10569  0134AC  0101               	movlb	1	; () banked
 10570  0134AE  6F17               	movwf	strcat@to& (0+255),b
 10571  0134B0  0E01               	movlw	high terminal_textAttributes@output_buff
 10572  0134B2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10573  0134B4  0EE0               	movlw	low STR_34
 10574  0134B6  6F19               	movwf	strcat@from& (0+255),b
 10575  0134B8  0EFF               	movlw	high STR_34
 10576  0134BA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10577  0134BC  EC17  F0B3         	call	_strcat	;wreg free
 10578                           
 10579                           ;ring_buffer_interface.c: 201: break;
 10580  0134C0  D04B               	goto	l1049
 10581  0134C2                     
 10582                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10583  0134C2  0E93               	movlw	low terminal_textAttributes@output_buff
 10584  0134C4  0101               	movlb	1	; () banked
 10585  0134C6  6F17               	movwf	strcat@to& (0+255),b
 10586  0134C8  0E01               	movlw	high terminal_textAttributes@output_buff
 10587  0134CA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10588  0134CC  0EE6               	movlw	low STR_35
 10589  0134CE  6F19               	movwf	strcat@from& (0+255),b
 10590  0134D0  0EFF               	movlw	high STR_35
 10591  0134D2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10592  0134D4  EC17  F0B3         	call	_strcat	;wreg free
 10593                           
 10594                           ;ring_buffer_interface.c: 204: break;
 10595  0134D8  D03F               	goto	l1049
 10596  0134DA                     
 10597                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10598  0134DA  0E93               	movlw	low terminal_textAttributes@output_buff
 10599  0134DC  0101               	movlb	1	; () banked
 10600  0134DE  6F17               	movwf	strcat@to& (0+255),b
 10601  0134E0  0E01               	movlw	high terminal_textAttributes@output_buff
 10602  0134E2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10603  0134E4  0EEC               	movlw	low STR_36
 10604  0134E6  6F19               	movwf	strcat@from& (0+255),b
 10605  0134E8  0EFF               	movlw	high STR_36
 10606  0134EA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10607  0134EC  EC17  F0B3         	call	_strcat	;wreg free
 10608                           
 10609                           ;ring_buffer_interface.c: 207: break;
 10610  0134F0  D033               	goto	l1049
 10611  0134F2                     
 10612                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10613  0134F2  0E93               	movlw	low terminal_textAttributes@output_buff
 10614  0134F4  0101               	movlb	1	; () banked
 10615  0134F6  6F17               	movwf	strcat@to& (0+255),b
 10616  0134F8  0E01               	movlw	high terminal_textAttributes@output_buff
 10617  0134FA  6F18               	movwf	(strcat@to+1)& (0+255),b
 10618  0134FC  0EF2               	movlw	low STR_37
 10619  0134FE  6F19               	movwf	strcat@from& (0+255),b
 10620  013500  0EFF               	movlw	high STR_37
 10621  013502  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10622  013504  EC17  F0B3         	call	_strcat	;wreg free
 10623                           
 10624                           ;ring_buffer_interface.c: 210: break;
 10625  013508  D027               	goto	l1049
 10626  01350A                     
 10627                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10628  01350A  0E93               	movlw	low terminal_textAttributes@output_buff
 10629  01350C  0101               	movlb	1	; () banked
 10630  01350E  6F17               	movwf	strcat@to& (0+255),b
 10631  013510  0E01               	movlw	high terminal_textAttributes@output_buff
 10632  013512  6F18               	movwf	(strcat@to+1)& (0+255),b
 10633  013514  0EF2               	movlw	low STR_37
 10634  013516  6F19               	movwf	strcat@from& (0+255),b
 10635  013518  0EFF               	movlw	high STR_37
 10636  01351A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10637  01351C  EC17  F0B3         	call	_strcat	;wreg free
 10638                           
 10639                           ;ring_buffer_interface.c: 215: }
 10640                           
 10641                           ;ring_buffer_interface.c: 214: break;
 10642  013520  D01B               	goto	l1049
 10643  013522                     l1047:
 10644  013522  0101               	movlb	1	; () banked
 10645  013524  5190               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10646                           
 10647                           ; Switch size 1, requested type "space"
 10648                           ; Number of cases is 8, Range of values is 0 to 7
 10649                           ; switch strategies available:
 10650                           ; Name         Instructions Cycles
 10651                           ; simple_byte           25    13 (average)
 10652                           ;	Chosen strategy is simple_byte
 10653  013526  0A00               	xorlw	0	; case 0
 10654  013528  B4D8               	btfsc	status,2,c
 10655  01352A  D78F               	goto	l1048
 10656  01352C  0A01               	xorlw	1	; case 1
 10657  01352E  B4D8               	btfsc	status,2,c
 10658  013530  D798               	goto	l1050
 10659  013532  0A03               	xorlw	3	; case 2
 10660  013534  B4D8               	btfsc	status,2,c
 10661  013536  D7A1               	goto	l1051
 10662  013538  0A01               	xorlw	1	; case 3
 10663  01353A  B4D8               	btfsc	status,2,c
 10664  01353C  D7AA               	goto	l1052
 10665  01353E  0A07               	xorlw	7	; case 4
 10666  013540  B4D8               	btfsc	status,2,c
 10667  013542  D7B3               	goto	l1053
 10668  013544  0A01               	xorlw	1	; case 5
 10669  013546  B4D8               	btfsc	status,2,c
 10670  013548  D7BC               	goto	l1054
 10671  01354A  0A03               	xorlw	3	; case 6
 10672  01354C  B4D8               	btfsc	status,2,c
 10673  01354E  D7C5               	goto	l1055
 10674  013550  0A01               	xorlw	1	; case 7
 10675  013552  B4D8               	btfsc	status,2,c
 10676  013554  D7CE               	goto	l1056
 10677  013556  D7D9               	goto	l1057
 10678  013558                     l1049:
 10679                           
 10680                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 10681                           
 10682                           ; BSR set to: 1
 10683  013558  0E93               	movlw	low terminal_textAttributes@output_buff
 10684  01355A  0101               	movlb	1	; () banked
 10685  01355C  6F17               	movwf	strcat@to& (0+255),b
 10686  01355E  0E01               	movlw	high terminal_textAttributes@output_buff
 10687  013560  6F18               	movwf	(strcat@to+1)& (0+255),b
 10688  013562  0EFC               	movlw	low STR_39
 10689  013564  6F19               	movwf	strcat@from& (0+255),b
 10690  013566  0EFF               	movlw	high STR_39
 10691  013568  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10692  01356A  EC17  F0B3         	call	_strcat	;wreg free
 10693                           
 10694                           ;ring_buffer_interface.c: 219: printf(output_buff);
 10695  01356E  0E93               	movlw	low terminal_textAttributes@output_buff
 10696  013570  0101               	movlb	1	; () banked
 10697  013572  6F64               	movwf	printf@f& (0+255),b
 10698  013574  0E01               	movlw	high terminal_textAttributes@output_buff
 10699  013576  6F65               	movwf	(printf@f+1)& (0+255),b
 10700  013578  ECB0  F086         	call	_printf	;wreg free
 10701  01357C  0012               	return		;funcret
 10702  01357E                     __end_of_terminal_textAttributes:
 10703                           	opt stack 0
 10704                           tblptru	equ	0xFF8
 10705                           tblptrh	equ	0xFF7
 10706                           tblptrl	equ	0xFF6
 10707                           tablat	equ	0xFF5
 10708                           intcon	equ	0xFF2
 10709                           postinc0	equ	0xFEE
 10710                           wreg	equ	0xFE8
 10711                           indf1	equ	0xFE7
 10712                           postdec1	equ	0xFE5
 10713                           fsr1h	equ	0xFE2
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           fsr2h	equ	0xFDA
 10718                           fsr2l	equ	0xFD9
 10719                           status	equ	0xFD8
 10720                           
 10721 ;; *************** function _strncpy *****************
 10722 ;; Defined at:
 10723 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10726 ;;		 -> terminal_textAttributes@output_buff(15), 
 10727 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10728 ;;		 -> STR_11(3), 
 10729 ;;  size            2   27[BANK1 ] unsigned int 
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 10732 ;;		 -> terminal_textAttributes@output_buff(15), 
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  2   23[BANK1 ] PTR unsigned char 
 10735 ;; Registers used:
 10736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10742 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10743 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10745 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10746 ;;Total ram usage:        8 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:   14
 10749 ;; This function calls:
 10750 ;;		Nothing
 10751 ;; This function is called by:
 10752 ;;		_terminal_textAttributes
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           	psect	text6
 10757  016434                     __ptext6:
 10758                           	opt stack 0
 10759  016434                     _strncpy:
 10760                           	opt stack 14
 10761                           
 10762                           ;incstack = 0
 10763  016434  C117  F11D         	movff	strncpy@to,strncpy@cp
 10764  016438  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 10765  01643C  D018               	goto	l2185
 10766  01643E  0101               	movlb	1	; () banked
 10767  016440  071B               	decf	strncpy@size& (0+255),f,b
 10768  016442  A0D8               	btfss	status,0,c
 10769  016444  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10770                           
 10771                           ; BSR set to: 1
 10772  016446  C119  FFF6         	movff	strncpy@from,tblptrl
 10773  01644A  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 10774  01644E  4B19               	infsnz	strncpy@from& (0+255),f,b
 10775  016450  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 10776  016452                     	if	0	;tblptru may be non-zero
 10777  016452                     	endif
 10778  016452                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10779  016452  0E00               	movlw	low (__mediumconst shr (0+16))
 10780  016454  6EF8               	movwf	tblptru,c
 10781  016456                     	endif
 10782  016456  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10783  01645A  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10784  01645E  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10785  016460  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10786  016462  0008               	tblrd		*
 10787  016464  CFF5 FFDF          	movff	tablat,indf2
 10788  016468  50DF               	movf	indf2,w,c
 10789  01646A  B4D8               	btfsc	status,2,c
 10790  01646C  D00E               	goto	l2187
 10791  01646E                     l2185:
 10792                           
 10793                           ; BSR set to: 1
 10794                           
 10795                           ; BSR set to: 1
 10796  01646E  0101               	movlb	1	; () banked
 10797  016470  511B               	movf	strncpy@size& (0+255),w,b
 10798  016472  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 10799  016474  B4D8               	btfsc	status,2,c
 10800  016476  D009               	goto	l2187
 10801  016478  D7E2               	goto	l2184
 10802  01647A                     l10842:
 10803                           
 10804                           ; BSR set to: 1
 10805  01647A  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10806  01647E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10807  016482  0E00               	movlw	0
 10808  016484  6EDF               	movwf	indf2,c
 10809                           
 10810                           ; BSR set to: 1
 10811  016486  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10812  016488  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10813  01648A                     l2187:
 10814                           
 10815                           ; BSR set to: 1
 10816                           
 10817                           ; BSR set to: 1
 10818  01648A  071B               	decf	strncpy@size& (0+255),f,b
 10819  01648C  A0D8               	btfss	status,0,c
 10820  01648E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10821  016490  291B               	incf	strncpy@size& (0+255),w,b
 10822  016492  E1F3               	bnz	l10842
 10823  016494  291C               	incf	(strncpy@size+1)& (0+255),w,b
 10824  016496  B4D8               	btfsc	status,2,c
 10825  016498  0012               	return	
 10826  01649A  D7EF               	goto	l2188
 10827  01649C                     __end_of_strncpy:
 10828                           	opt stack 0
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           intcon	equ	0xFF2
 10834                           postinc0	equ	0xFEE
 10835                           wreg	equ	0xFE8
 10836                           indf1	equ	0xFE7
 10837                           postdec1	equ	0xFE5
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           fsr2h	equ	0xFDA
 10843                           fsr2l	equ	0xFD9
 10844                           status	equ	0xFD8
 10845                           
 10846 ;; *************** function _terminal_printNewline *****************
 10847 ;; Defined at:
 10848 ;;		line 230 in file "ring_buffer_interface.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10866 ;;Total ram usage:        0 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:   18
 10869 ;; This function calls:
 10870 ;;		_printf
 10871 ;; This function is called by:
 10872 ;;		_ringBufferLUT
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text7
 10877  017070                     __ptext7:
 10878                           	opt stack 0
 10879  017070                     _terminal_printNewline:
 10880                           	opt stack 10
 10881                           
 10882                           ;ring_buffer_interface.c: 232: printf("\n\r");
 10883                           
 10884                           ; BSR set to: 1
 10885                           ;incstack = 0
 10886  017070  0E16               	movlw	low (STR_108+68)
 10887  017072  0101               	movlb	1	; () banked
 10888  017074  6F64               	movwf	printf@f& (0+255),b
 10889  017076  0EF7               	movlw	high (STR_108+68)
 10890  017078  6F65               	movwf	(printf@f+1)& (0+255),b
 10891  01707A  ECB0  F086         	call	_printf	;wreg free
 10892  01707E  0012               	return		;funcret
 10893  017080                     __end_of_terminal_printNewline:
 10894                           	opt stack 0
 10895                           tblptru	equ	0xFF8
 10896                           tblptrh	equ	0xFF7
 10897                           tblptrl	equ	0xFF6
 10898                           tablat	equ	0xFF5
 10899                           intcon	equ	0xFF2
 10900                           postinc0	equ	0xFEE
 10901                           wreg	equ	0xFE8
 10902                           indf1	equ	0xFE7
 10903                           postdec1	equ	0xFE5
 10904                           fsr1h	equ	0xFE2
 10905                           fsr1l	equ	0xFE1
 10906                           indf2	equ	0xFDF
 10907                           postinc2	equ	0xFDE
 10908                           fsr2h	equ	0xFDA
 10909                           fsr2l	equ	0xFD9
 10910                           status	equ	0xFD8
 10911                           
 10912 ;; *************** function _strstr *****************
 10913 ;; Defined at:
 10914 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 10917 ;;		 -> NULL(0), line(64), 
 10918 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 10919 ;;		 -> STR_102(25), 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  2   38[BANK1 ] PTR unsigned char 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10931 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10935 ;;Total ram usage:        4 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:   15
 10938 ;; This function calls:
 10939 ;;		_strchr
 10940 ;;		_strlen
 10941 ;;		_strncmp
 10942 ;; This function is called by:
 10943 ;;		_ringBufferLUT
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text8
 10948  015DDC                     __ptext8:
 10949                           	opt stack 0
 10950  015DDC                     _strstr:
 10951                           	opt stack 13
 10952                           
 10953                           ;incstack = 0
 10954  015DDC  D034               	goto	l2199
 10955  015DDE  C126  F11D         	movff	strstr@s1,strncmp@s1
 10956  015DE2  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 10957  015DE6  C128  F11F         	movff	strstr@s2,strncmp@s2
 10958  015DEA  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 10959  015DEE  C128  F117         	movff	strstr@s2,strlen@s
 10960  015DF2  C129  F118         	movff	strstr@s2+1,strlen@s+1
 10961  015DF6  ECA3  F0B3         	call	_strlen	;wreg free
 10962  015DFA  C117  F121         	movff	?_strlen,strncmp@len
 10963  015DFE  C118  F122         	movff	?_strlen+1,strncmp@len+1
 10964  015E02  EC17  F0AE         	call	_strncmp	;wreg free
 10965  015E06  0101               	movlb	1	; () banked
 10966  015E08  511D               	movf	?_strncmp& (0+255),w,b
 10967  015E0A  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 10968  015E0C  A4D8               	btfss	status,2,c
 10969  015E0E  D005               	goto	l2201
 10970                           
 10971                           ; BSR set to: 1
 10972  015E10  C126  F126         	movff	strstr@s1,?_strstr
 10973  015E14  C127  F127         	movff	strstr@s1+1,?_strstr+1
 10974                           
 10975                           ; BSR set to: 1
 10976  015E18  0012               	return	
 10977  015E1A                     l2201:
 10978                           
 10979                           ; BSR set to: 1
 10980                           
 10981                           ; BSR set to: 1
 10982  015E1A  0E01               	movlw	1
 10983  015E1C  2526               	addwf	strstr@s1& (0+255),w,b
 10984  015E1E  6F17               	movwf	strchr@ptr& (0+255),b
 10985  015E20  0E00               	movlw	0
 10986  015E22  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 10987  015E24  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 10988  015E26  C128  FFF6         	movff	strstr@s2,tblptrl
 10989  015E2A  C129  FFF7         	movff	strstr@s2+1,tblptrh
 10990  015E2E                     	if	0	;tblptru may be non-zero
 10991  015E2E                     	endif
 10992  015E2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10993  015E2E  0E00               	movlw	low (__mediumconst shr (0+16))
 10994  015E30  6EF8               	movwf	tblptru,c
 10995  015E32                     	endif
 10996  015E32  0008               	tblrd		*
 10997  015E34  50F5               	movf	tablat,w,c
 10998  015E36  6F19               	movwf	strchr@chr& (0+255),b
 10999  015E38  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 11000  015E3A  EC28  F0B6         	call	_strchr	;wreg free
 11001  015E3E  C117  F126         	movff	?_strchr,strstr@s1
 11002  015E42  C118  F127         	movff	?_strchr+1,strstr@s1+1
 11003  015E46                     l2199:
 11004  015E46  0101               	movlb	1	; () banked
 11005  015E48  5126               	movf	strstr@s1& (0+255),w,b
 11006  015E4A  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 11007  015E4C  B4D8               	btfsc	status,2,c
 11008  015E4E  D007               	goto	u14110
 11009                           
 11010                           ; BSR set to: 1
 11011  015E50  C126  FFD9         	movff	strstr@s1,fsr2l
 11012  015E54  C127  FFDA         	movff	strstr@s1+1,fsr2h
 11013  015E58  50DF               	movf	indf2,w,c
 11014  015E5A  A4D8               	btfss	status,2,c
 11015  015E5C  D7C0               	goto	l2200
 11016  015E5E                     u14110:
 11017                           
 11018                           ; BSR set to: 1
 11019                           
 11020                           ; BSR set to: 1
 11021                           
 11022                           ; BSR set to: 1
 11023  015E5E  0E00               	movlw	0
 11024  015E60  6F26               	movwf	?_strstr& (0+255),b
 11025  015E62  0E00               	movlw	0
 11026  015E64  6F27               	movwf	(?_strstr+1)& (0+255),b
 11027  015E66  0012               	return	
 11028  015E68                     __end_of_strstr:
 11029                           	opt stack 0
 11030                           tblptru	equ	0xFF8
 11031                           tblptrh	equ	0xFF7
 11032                           tblptrl	equ	0xFF6
 11033                           tablat	equ	0xFF5
 11034                           intcon	equ	0xFF2
 11035                           postinc0	equ	0xFEE
 11036                           wreg	equ	0xFE8
 11037                           indf1	equ	0xFE7
 11038                           postdec1	equ	0xFE5
 11039                           fsr1h	equ	0xFE2
 11040                           fsr1l	equ	0xFE1
 11041                           indf2	equ	0xFDF
 11042                           postinc2	equ	0xFDE
 11043                           fsr2h	equ	0xFDA
 11044                           fsr2l	equ	0xFD9
 11045                           status	equ	0xFD8
 11046                           
 11047 ;; *************** function _strncmp *****************
 11048 ;; Defined at:
 11049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 11052 ;;		 -> NULL(0), line(64), 
 11053 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 11054 ;;		 -> STR_102(25), 
 11055 ;;  len             2   33[BANK1 ] unsigned int 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  2   29[BANK1 ] int 
 11060 ;; Registers used:
 11061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11067 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11069 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11070 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11071 ;;Total ram usage:        9 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:   14
 11074 ;; This function calls:
 11075 ;;		Nothing
 11076 ;; This function is called by:
 11077 ;;		_strstr
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           	psect	text9
 11082  015C2E                     __ptext9:
 11083                           	opt stack 0
 11084  015C2E                     _strncmp:
 11085                           	opt stack 13
 11086                           
 11087                           ; BSR set to: 1
 11088                           ;incstack = 0
 11089  015C2E  D039               	goto	l2258
 11090  015C30                     l11124:
 11091  015C30  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11092  015C34  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11093  015C38  50DF               	movf	indf2,w,c
 11094  015C3A  B4D8               	btfsc	status,2,c
 11095  015C3C  D012               	goto	u13310
 11096  015C3E  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11097  015C42  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11098  015C46  50DF               	movf	indf2,w,c
 11099  015C48  0101               	movlb	1	; () banked
 11100  015C4A  6F23               	movwf	??_strncmp& (0+255),b
 11101  015C4C  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11102  015C50  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11103  015C54                     	if	0	;tblptru may be non-zero
 11104  015C54                     	endif
 11105  015C54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11106  015C54  0E00               	movlw	low (__mediumconst shr (0+16))
 11107  015C56  6EF8               	movwf	tblptru,c
 11108  015C58                     	endif
 11109  015C58  0008               	tblrd		*
 11110  015C5A  50F5               	movf	tablat,w,c
 11111  015C5C  1923               	xorwf	??_strncmp& (0+255),w,b
 11112  015C5E  B4D8               	btfsc	status,2,c
 11113  015C60  D01C               	goto	l2260
 11114  015C62                     u13310:
 11115                           
 11116                           ; BSR set to: 1
 11117  015C62  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11118  015C66  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11119  015C6A                     	if	0	;tblptru may be non-zero
 11120  015C6A                     	endif
 11121  015C6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11122  015C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 11123  015C6C  6EF8               	movwf	tblptru,c
 11124  015C6E                     	endif
 11125  015C6E  0008               	tblrd		*
 11126  015C70  50F5               	movf	tablat,w,c
 11127  015C72  0101               	movlb	1	; () banked
 11128  015C74  6F23               	movwf	??_strncmp& (0+255),b
 11129  015C76  6B24               	clrf	(??_strncmp+1)& (0+255),b
 11130  015C78  1F23               	comf	??_strncmp& (0+255),f,b
 11131  015C7A  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 11132  015C7C  4B23               	infsnz	??_strncmp& (0+255),f,b
 11133  015C7E  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 11134  015C80  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11135  015C84  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11136  015C88  50DF               	movf	indf2,w,c
 11137  015C8A  6F25               	movwf	(??_strncmp+2)& (0+255),b
 11138  015C8C  5125               	movf	(??_strncmp+2)& (0+255),w,b
 11139  015C8E  2523               	addwf	??_strncmp& (0+255),w,b
 11140  015C90  6F1D               	movwf	?_strncmp& (0+255),b
 11141  015C92  0E00               	movlw	0
 11142  015C94  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 11143  015C96  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11144                           
 11145                           ; BSR set to: 1
 11146  015C98  0012               	return	
 11147  015C9A                     l2260:
 11148                           
 11149                           ; BSR set to: 1
 11150                           
 11151                           ; BSR set to: 1
 11152  015C9A  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 11153  015C9C  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 11154  015C9E  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 11155  015CA0  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 11156  015CA2                     l2258:
 11157                           
 11158                           ; BSR set to: 1
 11159  015CA2  0101               	movlb	1	; () banked
 11160  015CA4  0721               	decf	strncmp@len& (0+255),f,b
 11161  015CA6  A0D8               	btfss	status,0,c
 11162  015CA8  0722               	decf	(strncmp@len+1)& (0+255),f,b
 11163  015CAA  2921               	incf	strncmp@len& (0+255),w,b
 11164  015CAC  E1C1               	bnz	l11124
 11165  015CAE  2922               	incf	(strncmp@len+1)& (0+255),w,b
 11166  015CB0  A4D8               	btfss	status,2,c
 11167  015CB2  D7BE               	goto	l2259
 11168                           
 11169                           ; BSR set to: 1
 11170                           
 11171                           ; BSR set to: 1
 11172  015CB4  0E00               	movlw	0
 11173  015CB6  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11174  015CB8  0E00               	movlw	0
 11175  015CBA  6F1D               	movwf	?_strncmp& (0+255),b
 11176  015CBC  0012               	return	
 11177  015CBE                     __end_of_strncmp:
 11178                           	opt stack 0
 11179                           tblptru	equ	0xFF8
 11180                           tblptrh	equ	0xFF7
 11181                           tblptrl	equ	0xFF6
 11182                           tablat	equ	0xFF5
 11183                           intcon	equ	0xFF2
 11184                           postinc0	equ	0xFEE
 11185                           wreg	equ	0xFE8
 11186                           indf1	equ	0xFE7
 11187                           postdec1	equ	0xFE5
 11188                           fsr1h	equ	0xFE2
 11189                           fsr1l	equ	0xFE1
 11190                           indf2	equ	0xFDF
 11191                           postinc2	equ	0xFDE
 11192                           fsr2h	equ	0xFDA
 11193                           fsr2l	equ	0xFD9
 11194                           status	equ	0xFD8
 11195                           
 11196 ;; *************** function _strlen *****************
 11197 ;; Defined at:
 11198 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 11201 ;;		 -> STR_102(25), line(64), 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 11204 ;;		 -> STR_102(25), line(64), 
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  2   23[BANK1 ] unsigned int 
 11207 ;; Registers used:
 11208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11214 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11215 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11216 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11217 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11218 ;;Total ram usage:        6 bytes
 11219 ;; Hardware stack levels used:    1
 11220 ;; Hardware stack levels required when called:   14
 11221 ;; This function calls:
 11222 ;;		Nothing
 11223 ;; This function is called by:
 11224 ;;		_terminal_ringBufferPull
 11225 ;;		_strstr
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text10
 11230  016746                     __ptext10:
 11231                           	opt stack 0
 11232  016746                     _strlen:
 11233                           	opt stack 15
 11234                           
 11235                           ; BSR set to: 1
 11236                           ;incstack = 0
 11237  016746  C117  F11B         	movff	strlen@s,strlen@cp
 11238  01674A  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 11239  01674E  D003               	goto	l2177
 11240  016750  0101               	movlb	1	; () banked
 11241  016752  4B1B               	infsnz	strlen@cp& (0+255),f,b
 11242  016754  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 11243  016756                     l2177:
 11244                           
 11245                           ; BSR set to: 1
 11246  016756  C11B  FFF6         	movff	strlen@cp,tblptrl
 11247  01675A  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 11248  01675E  0E00               	movlw	low (__mediumconst shr (0+16))
 11249  016760  6EF8               	movwf	tblptru,c
 11250  016762  0E0D               	movlw	(high __ramtop+-1)
 11251  016764  64F7               	cpfsgt	tblptrh,c
 11252  016766  D003               	bra	u13237
 11253  016768  0008               	tblrd		*
 11254  01676A  50F5               	movf	tablat,w,c
 11255  01676C  D005               	bra	u13230
 11256  01676E                     u13237:
 11257  01676E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11258  016772  CFF7 FFEA          	movff	tblptrh,fsr0h
 11259  016776  50EF               	movf	indf0,w,c
 11260  016778                     u13230:
 11261  016778  0900               	iorlw	0
 11262  01677A  A4D8               	btfss	status,2,c
 11263  01677C  D7E9               	goto	l2178
 11264  01677E  C117  F119         	movff	strlen@s,??_strlen
 11265  016782  C118  F11A         	movff	strlen@s+1,??_strlen+1
 11266  016786  0101               	movlb	1	; () banked
 11267  016788  1F19               	comf	??_strlen& (0+255),f,b
 11268  01678A  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 11269  01678C  4B19               	infsnz	??_strlen& (0+255),f,b
 11270  01678E  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 11271  016790  511B               	movf	strlen@cp& (0+255),w,b
 11272  016792  2519               	addwf	??_strlen& (0+255),w,b
 11273  016794  6F17               	movwf	?_strlen& (0+255),b
 11274  016796  511C               	movf	(strlen@cp+1)& (0+255),w,b
 11275  016798  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 11276  01679A  6F18               	movwf	(?_strlen+1)& (0+255),b
 11277  01679C  0012               	return	
 11278  01679E                     __end_of_strlen:
 11279                           	opt stack 0
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           intcon	equ	0xFF2
 11285                           indf0	equ	0xFEF
 11286                           postinc0	equ	0xFEE
 11287                           fsr0h	equ	0xFEA
 11288                           fsr0l	equ	0xFE9
 11289                           wreg	equ	0xFE8
 11290                           indf1	equ	0xFE7
 11291                           postdec1	equ	0xFE5
 11292                           fsr1h	equ	0xFE2
 11293                           fsr1l	equ	0xFE1
 11294                           indf2	equ	0xFDF
 11295                           postinc2	equ	0xFDE
 11296                           fsr2h	equ	0xFDA
 11297                           fsr2l	equ	0xFD9
 11298                           status	equ	0xFD8
 11299                           
 11300 ;; *************** function _strchr *****************
 11301 ;; Defined at:
 11302 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 11305 ;;		 -> NULL(0), line(64), 
 11306 ;;  chr             2   25[BANK1 ] int 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  2   23[BANK1 ] PTR unsigned char 
 11311 ;; Registers used:
 11312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11318 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;Total ram usage:        5 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:   14
 11325 ;; This function calls:
 11326 ;;		Nothing
 11327 ;; This function is called by:
 11328 ;;		_strstr
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text11
 11333  016C50                     __ptext11:
 11334                           	opt stack 0
 11335  016C50                     _strchr:
 11336                           	opt stack 13
 11337                           
 11338                           ; BSR set to: 1
 11339                           ;incstack = 0
 11340  016C50  C117  FFD9         	movff	strchr@ptr,fsr2l
 11341  016C54  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11342  016C58  0101               	movlb	1	; () banked
 11343  016C5A  5119               	movf	strchr@chr& (0+255),w,b
 11344  016C5C  18DE               	xorwf	postinc2,w,c
 11345  016C5E  A4D8               	btfss	status,2,c
 11346  016C60  D005               	goto	l2253
 11347                           
 11348                           ; BSR set to: 1
 11349  016C62  C117  F117         	movff	strchr@ptr,?_strchr
 11350  016C66  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11351                           
 11352                           ; BSR set to: 1
 11353  016C6A  0012               	return	
 11354  016C6C                     l2253:
 11355                           
 11356                           ; BSR set to: 1
 11357                           
 11358                           ; BSR set to: 1
 11359  016C6C  C117  FFD9         	movff	strchr@ptr,fsr2l
 11360  016C70  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11361  016C74  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11362  016C76  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11363  016C78  50DF               	movf	indf2,w,c
 11364  016C7A  A4D8               	btfss	status,2,c
 11365  016C7C  D7E9               	goto	_strchr
 11366                           
 11367                           ; BSR set to: 1
 11368                           
 11369                           ; BSR set to: 1
 11370  016C7E  0E00               	movlw	0
 11371  016C80  6F17               	movwf	?_strchr& (0+255),b
 11372  016C82  0E00               	movlw	0
 11373  016C84  6F18               	movwf	(?_strchr+1)& (0+255),b
 11374  016C86  0012               	return	
 11375  016C88                     __end_of_strchr:
 11376                           	opt stack 0
 11377                           tblptru	equ	0xFF8
 11378                           tblptrh	equ	0xFF7
 11379                           tblptrl	equ	0xFF6
 11380                           tablat	equ	0xFF5
 11381                           intcon	equ	0xFF2
 11382                           indf0	equ	0xFEF
 11383                           postinc0	equ	0xFEE
 11384                           fsr0h	equ	0xFEA
 11385                           fsr0l	equ	0xFE9
 11386                           wreg	equ	0xFE8
 11387                           indf1	equ	0xFE7
 11388                           postdec1	equ	0xFE5
 11389                           fsr1h	equ	0xFE2
 11390                           fsr1l	equ	0xFE1
 11391                           indf2	equ	0xFDF
 11392                           postinc2	equ	0xFDE
 11393                           fsr2h	equ	0xFDA
 11394                           fsr2l	equ	0xFD9
 11395                           status	equ	0xFD8
 11396                           
 11397 ;; *************** function _strcmp *****************
 11398 ;; Defined at:
 11399 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11400 ;; Parameters:    Size  Location     Type
 11401 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11402 ;;		 -> line(64), 
 11403 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11404 ;;		 -> STR_113(5), STR_111(14), STR_109(16), STR_100(13), 
 11405 ;;		 -> STR_98(12), STR_96(16), STR_94(15), STR_92(15), 
 11406 ;;		 -> STR_90(21), STR_88(21), STR_86(26), STR_84(14), 
 11407 ;;		 -> STR_82(13), STR_80(18), STR_78(15), STR_76(16), 
 11408 ;;		 -> STR_73(17), STR_71(16), STR_60(11), STR_57(10), 
 11409 ;;		 -> STR_55(13), STR_53(11), STR_50(4), STR_49(6), 
 11410 ;;		 -> STR_47(16), STR_44(6), STR_41(6), 
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;  r               1   28[BANK1 ] char 
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  2   23[BANK1 ] int 
 11415 ;; Registers used:
 11416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11422 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11423 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11424 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11425 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11426 ;;Total ram usage:        6 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:   14
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_ringBufferLUT
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text12
 11437  016848                     __ptext12:
 11438                           	opt stack 0
 11439  016848                     _strcmp:
 11440                           	opt stack 14
 11441                           
 11442                           ; BSR set to: 1
 11443                           ;incstack = 0
 11444  016848  D005               	goto	l2163
 11445  01684A  0101               	movlb	1	; () banked
 11446  01684C  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11447  01684E  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11448  016850  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11449  016852  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11450  016854                     l2163:
 11451                           
 11452                           ; BSR set to: 1
 11453  016854  C117  FFD9         	movff	strcmp@s1,fsr2l
 11454  016858  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11455  01685C  50DF               	movf	indf2,w,c
 11456  01685E  0101               	movlb	1	; () banked
 11457  016860  6F1B               	movwf	??_strcmp& (0+255),b
 11458  016862  C119  FFF6         	movff	strcmp@s2,tblptrl
 11459  016866  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11460  01686A                     	if	0	;tblptru may be non-zero
 11461  01686A                     	endif
 11462  01686A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11463  01686A  0E00               	movlw	low (__mediumconst shr (0+16))
 11464  01686C  6EF8               	movwf	tblptru,c
 11465  01686E                     	endif
 11466  01686E  0008               	tblrd		*
 11467  016870  50F5               	movf	tablat,w,c
 11468  016872  0800               	sublw	0
 11469  016874  251B               	addwf	??_strcmp& (0+255),w,b
 11470  016876  6F1C               	movwf	strcmp@r& (0+255),b
 11471  016878  511C               	movf	strcmp@r& (0+255),w,b
 11472  01687A  A4D8               	btfss	status,2,c
 11473  01687C  D007               	goto	u13510
 11474                           
 11475                           ; BSR set to: 1
 11476  01687E  C117  FFD9         	movff	strcmp@s1,fsr2l
 11477  016882  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11478  016886  50DF               	movf	indf2,w,c
 11479  016888  A4D8               	btfss	status,2,c
 11480  01688A  D7DF               	goto	l2164
 11481  01688C                     u13510:
 11482                           
 11483                           ; BSR set to: 1
 11484                           
 11485                           ; BSR set to: 1
 11486                           
 11487                           ; BSR set to: 1
 11488  01688C  511C               	movf	strcmp@r& (0+255),w,b
 11489  01688E  6F17               	movwf	?_strcmp& (0+255),b
 11490  016890  6B18               	clrf	(?_strcmp+1)& (0+255),b
 11491  016892  BF17               	btfsc	?_strcmp& (0+255),7,b
 11492  016894  0718               	decf	(?_strcmp+1)& (0+255),f,b
 11493  016896  0012               	return	
 11494  016898                     __end_of_strcmp:
 11495                           	opt stack 0
 11496                           tblptru	equ	0xFF8
 11497                           tblptrh	equ	0xFF7
 11498                           tblptrl	equ	0xFF6
 11499                           tablat	equ	0xFF5
 11500                           intcon	equ	0xFF2
 11501                           indf0	equ	0xFEF
 11502                           postinc0	equ	0xFEE
 11503                           fsr0h	equ	0xFEA
 11504                           fsr0l	equ	0xFE9
 11505                           wreg	equ	0xFE8
 11506                           indf1	equ	0xFE7
 11507                           postdec1	equ	0xFE5
 11508                           fsr1h	equ	0xFE2
 11509                           fsr1l	equ	0xFE1
 11510                           indf2	equ	0xFDF
 11511                           postinc2	equ	0xFDE
 11512                           fsr2h	equ	0xFDA
 11513                           fsr2l	equ	0xFD9
 11514                           status	equ	0xFD8
 11515                           
 11516 ;; *************** function _getUserID *****************
 11517 ;; Defined at:
 11518 ;;		line 89 in file "device_IDs.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  inputUserID     1    wreg     unsigned char 
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;  inputUserID     1   38[BANK1 ] unsigned char 
 11523 ;;  initialOffse    2   39[BANK1 ] unsigned int 
 11524 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  2   34[BANK1 ] unsigned int 
 11527 ;; Registers used:
 11528 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11529 ;; Tracked objects:
 11530 ;;		On entry : 0/0
 11531 ;;		On exit  : 0/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11534 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11536 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11537 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11538 ;;Total ram usage:        8 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:   16
 11541 ;; This function calls:
 11542 ;;		_FLASH_ReadWord
 11543 ;; This function is called by:
 11544 ;;		_ringBufferLUT
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	text13
 11549  016B9E                     __ptext13:
 11550                           	opt stack 0
 11551  016B9E                     _getUserID:
 11552                           	opt stack 12
 11553                           
 11554                           ; BSR set to: 1
 11555                           ;incstack = 0
 11556                           ;getUserID@inputUserID stored from wreg
 11557  016B9E  0101               	movlb	1	; () banked
 11558  016BA0  6F26               	movwf	getUserID@inputUserID& (0+255),b
 11559                           
 11560                           ;device_IDs.c: 92: uint16_t initialOffset = 0x200000;
 11561  016BA2  0E00               	movlw	0
 11562  016BA4  0101               	movlb	1	; () banked
 11563  016BA6  6F28               	movwf	(getUserID@initialOffset+1)& (0+255),b
 11564  016BA8  0E00               	movlw	0
 11565  016BAA  6F27               	movwf	getUserID@initialOffset& (0+255),b
 11566                           
 11567                           ; BSR set to: 1
 11568                           ;device_IDs.c: 95: uint8_t IDOffset = inputUserID * 2;
 11569  016BAC  5126               	movf	getUserID@inputUserID& (0+255),w,b
 11570  016BAE  0D02               	mullw	2
 11571  016BB0  CFF3 F129          	movff	prodl,getUserID@IDOffset
 11572                           
 11573                           ; BSR set to: 1
 11574                           ;device_IDs.c: 97: return FLASH_ReadWord(initialOffset + IDOffset);
 11575  016BB4  5129               	movf	getUserID@IDOffset& (0+255),w,b
 11576  016BB6  2527               	addwf	getUserID@initialOffset& (0+255),w,b
 11577  016BB8  6F24               	movwf	??_getUserID& (0+255),b
 11578  016BBA  0E00               	movlw	0
 11579  016BBC  2128               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 11580  016BBE  6F25               	movwf	(??_getUserID+1)& (0+255),b
 11581  016BC0  C124  F11B         	movff	??_getUserID,FLASH_ReadWord@flashAddr
 11582  016BC4  C125  F11C         	movff	??_getUserID+1,FLASH_ReadWord@flashAddr+1
 11583  016BC8  6B1D               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11584  016BCA  6B1E               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11585  016BCC  EC4D  F0B5         	call	_FLASH_ReadWord	;wreg free
 11586  016BD0  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 11587  016BD4  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 11588  016BD8  0012               	return	
 11589  016BDA                     __end_of_getUserID:
 11590                           	opt stack 0
 11591                           tblptru	equ	0xFF8
 11592                           tblptrh	equ	0xFF7
 11593                           tblptrl	equ	0xFF6
 11594                           tablat	equ	0xFF5
 11595                           prodl	equ	0xFF3
 11596                           intcon	equ	0xFF2
 11597                           indf0	equ	0xFEF
 11598                           postinc0	equ	0xFEE
 11599                           fsr0h	equ	0xFEA
 11600                           fsr0l	equ	0xFE9
 11601                           wreg	equ	0xFE8
 11602                           indf1	equ	0xFE7
 11603                           postdec1	equ	0xFE5
 11604                           fsr1h	equ	0xFE2
 11605                           fsr1l	equ	0xFE1
 11606                           indf2	equ	0xFDF
 11607                           postinc2	equ	0xFDE
 11608                           fsr2h	equ	0xFDA
 11609                           fsr2l	equ	0xFD9
 11610                           status	equ	0xFD8
 11611                           
 11612 ;; *************** function _getRevisionIDString *****************
 11613 ;; Defined at:
 11614 ;;		line 62 in file "device_IDs.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;  inputMajRevI    1    wreg     unsigned char 
 11617 ;;  inputMinRevI    1   39[BANK1 ] unsigned char 
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;  inputMajRevI    1   49[BANK1 ] unsigned char 
 11620 ;;  returnString    4   43[BANK1 ] unsigned char [4]
 11621 ;;  MinRevStr       2   47[BANK1 ] unsigned char [2]
 11622 ;;  MajRevStr       1   50[BANK1 ] unsigned char [1]
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  2   39[BANK1 ] PTR unsigned char 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11632 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11633 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11634 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11635 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11636 ;;Total ram usage:       12 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:   16
 11639 ;; This function calls:
 11640 ;;		_strcat
 11641 ;;		_strcpy
 11642 ;;		_utoa
 11643 ;; This function is called by:
 11644 ;;		_ringBufferLUT
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text14
 11649  015D4E                     __ptext14:
 11650                           	opt stack 0
 11651  015D4E                     _getRevisionIDString:
 11652                           	opt stack 12
 11653                           
 11654                           ;incstack = 0
 11655                           ;getRevisionIDString@inputMajRevID stored from wreg
 11656  015D4E  0101               	movlb	1	; () banked
 11657  015D50  6F31               	movwf	getRevisionIDString@inputMajRevID& (0+255),b
 11658                           
 11659                           ;device_IDs.c: 64: char returnString[4];
 11660                           ;device_IDs.c: 70: char MajRevStr[1];
 11661                           ;device_IDs.c: 71: utoa(inputMajRevID, MajRevStr, 10);
 11662  015D52  0101               	movlb	1	; () banked
 11663  015D54  5131               	movf	getRevisionIDString@inputMajRevID& (0+255),w,b
 11664  015D56  6F29               	movwf	??_getRevisionIDString& (0+255),b
 11665  015D58  6B2A               	clrf	(??_getRevisionIDString+1)& (0+255),b
 11666  015D5A  C129  F11E         	movff	??_getRevisionIDString,utoa@buf
 11667  015D5E  C12A  F11F         	movff	??_getRevisionIDString+1,utoa@buf+1
 11668  015D62  0E01               	movlw	high getRevisionIDString@MajRevStr
 11669  015D64  6F21               	movwf	(utoa@val+1)& (0+255),b
 11670  015D66  0E32               	movlw	low getRevisionIDString@MajRevStr
 11671  015D68  6F20               	movwf	utoa@val& (0+255),b
 11672  015D6A  0E00               	movlw	0
 11673  015D6C  6F23               	movwf	(utoa@base+1)& (0+255),b
 11674  015D6E  0E0A               	movlw	10
 11675  015D70  6F22               	movwf	utoa@base& (0+255),b
 11676  015D72  EC28  F0AD         	call	_utoa	;wreg free
 11677                           
 11678                           ;device_IDs.c: 72: MajRevStr[0] += 17;
 11679  015D76  0E11               	movlw	17
 11680  015D78  0101               	movlb	1	; () banked
 11681  015D7A  2732               	addwf	getRevisionIDString@MajRevStr& (0+255),f,b
 11682                           
 11683                           ; BSR set to: 1
 11684                           ;device_IDs.c: 75: char MinRevStr[2];
 11685                           ;device_IDs.c: 76: utoa(inputMinRevID, MinRevStr, 10);
 11686  015D7C  5127               	movf	getRevisionIDString@inputMinRevID& (0+255),w,b
 11687  015D7E  6F29               	movwf	??_getRevisionIDString& (0+255),b
 11688  015D80  6B2A               	clrf	(??_getRevisionIDString+1)& (0+255),b
 11689  015D82  C129  F11E         	movff	??_getRevisionIDString,utoa@buf
 11690  015D86  C12A  F11F         	movff	??_getRevisionIDString+1,utoa@buf+1
 11691  015D8A  0E01               	movlw	high getRevisionIDString@MinRevStr
 11692  015D8C  6F21               	movwf	(utoa@val+1)& (0+255),b
 11693  015D8E  0E2F               	movlw	low getRevisionIDString@MinRevStr
 11694  015D90  6F20               	movwf	utoa@val& (0+255),b
 11695  015D92  0E00               	movlw	0
 11696  015D94  6F23               	movwf	(utoa@base+1)& (0+255),b
 11697  015D96  0E0A               	movlw	10
 11698  015D98  6F22               	movwf	utoa@base& (0+255),b
 11699  015D9A  EC28  F0AD         	call	_utoa	;wreg free
 11700                           
 11701                           ;device_IDs.c: 79: strcpy(returnString, MajRevStr);
 11702  015D9E  0E2B               	movlw	low getRevisionIDString@returnString
 11703  015DA0  0101               	movlb	1	; () banked
 11704  015DA2  6F17               	movwf	strcpy@to& (0+255),b
 11705  015DA4  0E01               	movlw	high getRevisionIDString@returnString
 11706  015DA6  6F18               	movwf	(strcpy@to+1)& (0+255),b
 11707  015DA8  0E32               	movlw	low getRevisionIDString@MajRevStr
 11708  015DAA  6F19               	movwf	strcpy@from& (0+255),b
 11709  015DAC  0E01               	movlw	high getRevisionIDString@MajRevStr
 11710  015DAE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 11711  015DB0  ECE3  F0B4         	call	_strcpy	;wreg free
 11712                           
 11713                           ;device_IDs.c: 82: strcat(returnString, MinRevStr);
 11714  015DB4  0E2B               	movlw	low getRevisionIDString@returnString
 11715  015DB6  0101               	movlb	1	; () banked
 11716  015DB8  6F17               	movwf	strcat@to& (0+255),b
 11717  015DBA  0E01               	movlw	high getRevisionIDString@returnString
 11718  015DBC  6F18               	movwf	(strcat@to+1)& (0+255),b
 11719  015DBE  0E2F               	movlw	low getRevisionIDString@MinRevStr
 11720  015DC0  6F19               	movwf	strcat@from& (0+255),b
 11721  015DC2  0E01               	movlw	high getRevisionIDString@MinRevStr
 11722  015DC4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11723  015DC6  EC17  F0B3         	call	_strcat	;wreg free
 11724                           
 11725                           ;device_IDs.c: 85: return *returnString;
 11726  015DCA  0101               	movlb	1	; () banked
 11727  015DCC  512B               	movf	getRevisionIDString@returnString& (0+255),w,b
 11728  015DCE  6F29               	movwf	??_getRevisionIDString& (0+255),b
 11729  015DD0  6B2A               	clrf	(??_getRevisionIDString+1)& (0+255),b
 11730  015DD2  C129  F127         	movff	??_getRevisionIDString,?_getRevisionIDString
 11731  015DD6  C12A  F128         	movff	??_getRevisionIDString+1,?_getRevisionIDString+1
 11732  015DDA  0012               	return	
 11733  015DDC                     __end_of_getRevisionIDString:
 11734                           	opt stack 0
 11735                           tblptru	equ	0xFF8
 11736                           tblptrh	equ	0xFF7
 11737                           tblptrl	equ	0xFF6
 11738                           tablat	equ	0xFF5
 11739                           prodl	equ	0xFF3
 11740                           intcon	equ	0xFF2
 11741                           indf0	equ	0xFEF
 11742                           postinc0	equ	0xFEE
 11743                           fsr0h	equ	0xFEA
 11744                           fsr0l	equ	0xFE9
 11745                           wreg	equ	0xFE8
 11746                           indf1	equ	0xFE7
 11747                           postdec1	equ	0xFE5
 11748                           fsr1h	equ	0xFE2
 11749                           fsr1l	equ	0xFE1
 11750                           indf2	equ	0xFDF
 11751                           postinc2	equ	0xFDE
 11752                           fsr2h	equ	0xFDA
 11753                           fsr2l	equ	0xFD9
 11754                           status	equ	0xFD8
 11755                           
 11756 ;; *************** function _utoa *****************
 11757 ;; Defined at:
 11758 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  buf             2   30[BANK1 ] PTR unsigned char 
 11761 ;;		 -> RAM(3561), 
 11762 ;;  val             2   32[BANK1 ] unsigned int 
 11763 ;;  base            2   34[BANK1 ] int 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  v               2   36[BANK1 ] unsigned int 
 11766 ;;  c               1   38[BANK1 ] unsigned char 
 11767 ;; Return value:  Size  Location     Type
 11768 ;;                  2   30[BANK1 ] PTR unsigned char 
 11769 ;; Registers used:
 11770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11771 ;; Tracked objects:
 11772 ;;		On entry : 0/0
 11773 ;;		On exit  : 0/0
 11774 ;;		Unchanged: 0/0
 11775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11776 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11777 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11779 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11780 ;;Total ram usage:        9 bytes
 11781 ;; Hardware stack levels used:    1
 11782 ;; Hardware stack levels required when called:   15
 11783 ;; This function calls:
 11784 ;;		___lwdiv
 11785 ;;		___lwmod
 11786 ;; This function is called by:
 11787 ;;		_getRevisionIDString
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text15
 11792  015A50                     __ptext15:
 11793                           	opt stack 0
 11794  015A50                     _utoa:
 11795                           	opt stack 12
 11796                           
 11797                           ; BSR set to: 1
 11798                           ;incstack = 0
 11799  015A50  C120  F124         	movff	utoa@val,utoa@v
 11800  015A54  C121  F125         	movff	utoa@val+1,utoa@v+1
 11801  015A58  C124  F117         	movff	utoa@v,___lwdiv@dividend
 11802  015A5C  C125  F118         	movff	utoa@v+1,___lwdiv@dividend+1
 11803  015A60  C122  F119         	movff	utoa@base,___lwdiv@divisor
 11804  015A64  C123  F11A         	movff	utoa@base+1,___lwdiv@divisor+1
 11805  015A68  ECFA  F0B3         	call	___lwdiv	;wreg free
 11806  015A6C  C117  F124         	movff	?___lwdiv,utoa@v
 11807  015A70  C118  F125         	movff	?___lwdiv+1,utoa@v+1
 11808  015A74  0101               	movlb	1	; () banked
 11809  015A76  4B1E               	infsnz	utoa@buf& (0+255),f,b
 11810  015A78  2B1F               	incf	(utoa@buf+1)& (0+255),f,b
 11811                           
 11812                           ; BSR set to: 1
 11813  015A7A  5124               	movf	utoa@v& (0+255),w,b
 11814  015A7C  1125               	iorwf	(utoa@v+1)& (0+255),w,b
 11815  015A7E  A4D8               	btfss	status,2,c
 11816  015A80  D7EB               	goto	l1899
 11817                           
 11818                           ; BSR set to: 1
 11819                           
 11820                           ; BSR set to: 1
 11821  015A82  C11E  FFD9         	movff	utoa@buf,fsr2l
 11822  015A86  C11F  FFDA         	movff	utoa@buf+1,fsr2h
 11823  015A8A  0E00               	movlw	0
 11824  015A8C  6EDF               	movwf	indf2,c
 11825                           
 11826                           ; BSR set to: 1
 11827  015A8E  071E               	decf	utoa@buf& (0+255),f,b
 11828  015A90  A0D8               	btfss	status,0,c
 11829  015A92  071F               	decf	(utoa@buf+1)& (0+255),f,b
 11830  015A94                     
 11831                           ; BSR set to: 1
 11832                           
 11833                           ; BSR set to: 1
 11834  015A94  C120  F117         	movff	utoa@val,___lwmod@dividend
 11835  015A98  C121  F118         	movff	utoa@val+1,___lwmod@dividend+1
 11836  015A9C  C122  F119         	movff	utoa@base,___lwmod@divisor
 11837  015AA0  C123  F11A         	movff	utoa@base+1,___lwmod@divisor+1
 11838  015AA4  EC2B  F0B5         	call	___lwmod	;wreg free
 11839  015AA8  0101               	movlb	1	; () banked
 11840  015AAA  5117               	movf	?___lwmod& (0+255),w,b
 11841  015AAC  6F26               	movwf	utoa@c& (0+255),b
 11842                           
 11843                           ; BSR set to: 1
 11844  015AAE  C120  F117         	movff	utoa@val,___lwdiv@dividend
 11845  015AB2  C121  F118         	movff	utoa@val+1,___lwdiv@dividend+1
 11846  015AB6  C122  F119         	movff	utoa@base,___lwdiv@divisor
 11847  015ABA  C123  F11A         	movff	utoa@base+1,___lwdiv@divisor+1
 11848  015ABE  ECFA  F0B3         	call	___lwdiv	;wreg free
 11849  015AC2  C117  F120         	movff	?___lwdiv,utoa@val
 11850  015AC6  C118  F121         	movff	?___lwdiv+1,utoa@val+1
 11851  015ACA  0E09               	movlw	9
 11852  015ACC  0101               	movlb	1	; () banked
 11853  015ACE  6526               	cpfsgt	utoa@c& (0+255),b
 11854  015AD0  D002               	goto	l1902
 11855                           
 11856                           ; BSR set to: 1
 11857  015AD2  0E07               	movlw	7
 11858  015AD4  2726               	addwf	utoa@c& (0+255),f,b
 11859  015AD6                     l1902:
 11860                           
 11861                           ; BSR set to: 1
 11862  015AD6  0E30               	movlw	48
 11863  015AD8  2726               	addwf	utoa@c& (0+255),f,b
 11864                           
 11865                           ; BSR set to: 1
 11866  015ADA  C11E  FFD9         	movff	utoa@buf,fsr2l
 11867  015ADE  C11F  FFDA         	movff	utoa@buf+1,fsr2h
 11868  015AE2  C126  FFDF         	movff	utoa@c,indf2
 11869                           
 11870                           ; BSR set to: 1
 11871  015AE6  071E               	decf	utoa@buf& (0+255),f,b
 11872  015AE8  A0D8               	btfss	status,0,c
 11873  015AEA  071F               	decf	(utoa@buf+1)& (0+255),f,b
 11874                           
 11875                           ; BSR set to: 1
 11876  015AEC  5120               	movf	utoa@val& (0+255),w,b
 11877  015AEE  1121               	iorwf	(utoa@val+1)& (0+255),w,b
 11878  015AF0  A4D8               	btfss	status,2,c
 11879  015AF2  D7D0               	goto	l1901
 11880                           
 11881                           ; BSR set to: 1
 11882                           ;	Return value of _utoa is never used
 11883                           
 11884                           ; BSR set to: 1
 11885  015AF4  4B1E               	infsnz	utoa@buf& (0+255),f,b
 11886  015AF6  2B1F               	incf	(utoa@buf+1)& (0+255),f,b
 11887  015AF8  0012               	return	
 11888  015AFA                     __end_of_utoa:
 11889                           	opt stack 0
 11890                           tblptru	equ	0xFF8
 11891                           tblptrh	equ	0xFF7
 11892                           tblptrl	equ	0xFF6
 11893                           tablat	equ	0xFF5
 11894                           prodl	equ	0xFF3
 11895                           intcon	equ	0xFF2
 11896                           indf0	equ	0xFEF
 11897                           postinc0	equ	0xFEE
 11898                           fsr0h	equ	0xFEA
 11899                           fsr0l	equ	0xFE9
 11900                           wreg	equ	0xFE8
 11901                           indf1	equ	0xFE7
 11902                           postdec1	equ	0xFE5
 11903                           fsr1h	equ	0xFE2
 11904                           fsr1l	equ	0xFE1
 11905                           indf2	equ	0xFDF
 11906                           postinc2	equ	0xFDE
 11907                           fsr2h	equ	0xFDA
 11908                           fsr2l	equ	0xFD9
 11909                           status	equ	0xFD8
 11910                           
 11911 ;; *************** function ___lwmod *****************
 11912 ;; Defined at:
 11913 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  dividend        2   23[BANK1 ] unsigned int 
 11916 ;;  divisor         2   25[BANK1 ] unsigned int 
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;  counter         1   27[BANK1 ] unsigned char 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  2   23[BANK1 ] unsigned int 
 11921 ;; Registers used:
 11922 ;;		wreg, status,2, status,0
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11928 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11929 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11931 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11932 ;;Total ram usage:        5 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:   14
 11935 ;; This function calls:
 11936 ;;		Nothing
 11937 ;; This function is called by:
 11938 ;;		_utoa
 11939 ;; This function uses a non-reentrant model
 11940 ;;
 11941                           
 11942                           	psect	text16
 11943  016A56                     __ptext16:
 11944                           	opt stack 0
 11945  016A56                     ___lwmod:
 11946                           	opt stack 12
 11947                           
 11948                           ; BSR set to: 1
 11949                           ;incstack = 0
 11950  016A56  0101               	movlb	1	; () banked
 11951  016A58  5119               	movf	___lwmod@divisor& (0+255),w,b
 11952  016A5A  111A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11953  016A5C  B4D8               	btfsc	status,2,c
 11954  016A5E  D018               	goto	l1997
 11955                           
 11956                           ; BSR set to: 1
 11957  016A60  0E01               	movlw	1
 11958  016A62  6F1B               	movwf	___lwmod@counter& (0+255),b
 11959  016A64  D004               	goto	l1992
 11960  016A66                     
 11961                           ; BSR set to: 1
 11962                           
 11963                           ; BSR set to: 1
 11964  016A66  90D8               	bcf	status,0,c
 11965  016A68  3719               	rlcf	___lwmod@divisor& (0+255),f,b
 11966  016A6A  371A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11967  016A6C  2B1B               	incf	___lwmod@counter& (0+255),f,b
 11968  016A6E                     l1992:
 11969                           
 11970                           ; BSR set to: 1
 11971                           
 11972                           ; BSR set to: 1
 11973  016A6E  AF1A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11974  016A70  D7FA               	goto	l1993
 11975  016A72                     u13110:
 11976                           
 11977                           ; BSR set to: 1
 11978                           
 11979                           ; BSR set to: 1
 11980                           
 11981                           ; BSR set to: 1
 11982  016A72  5119               	movf	___lwmod@divisor& (0+255),w,b
 11983  016A74  5D17               	subwf	___lwmod@dividend& (0+255),w,b
 11984  016A76  511A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11985  016A78  5918               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11986  016A7A  A0D8               	btfss	status,0,c
 11987  016A7C  D004               	goto	l1996
 11988                           
 11989                           ; BSR set to: 1
 11990  016A7E  5119               	movf	___lwmod@divisor& (0+255),w,b
 11991  016A80  5F17               	subwf	___lwmod@dividend& (0+255),f,b
 11992  016A82  511A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11993  016A84  5B18               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11994  016A86                     l1996:
 11995                           
 11996                           ; BSR set to: 1
 11997                           
 11998                           ; BSR set to: 1
 11999  016A86  90D8               	bcf	status,0,c
 12000  016A88  331A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 12001  016A8A  3319               	rrcf	___lwmod@divisor& (0+255),f,b
 12002                           
 12003                           ; BSR set to: 1
 12004  016A8C  2F1B               	decfsz	___lwmod@counter& (0+255),f,b
 12005  016A8E  D7F1               	goto	u13110
 12006  016A90                     l1997:
 12007                           
 12008                           ; BSR set to: 1
 12009                           
 12010                           ; BSR set to: 1
 12011  016A90  C117  F117         	movff	___lwmod@dividend,?___lwmod
 12012  016A94  C118  F118         	movff	___lwmod@dividend+1,?___lwmod+1
 12013                           
 12014                           ; BSR set to: 1
 12015  016A98  0012               	return		;funcret
 12016  016A9A                     __end_of___lwmod:
 12017                           	opt stack 0
 12018                           tblptru	equ	0xFF8
 12019                           tblptrh	equ	0xFF7
 12020                           tblptrl	equ	0xFF6
 12021                           tablat	equ	0xFF5
 12022                           prodl	equ	0xFF3
 12023                           intcon	equ	0xFF2
 12024                           indf0	equ	0xFEF
 12025                           postinc0	equ	0xFEE
 12026                           fsr0h	equ	0xFEA
 12027                           fsr0l	equ	0xFE9
 12028                           wreg	equ	0xFE8
 12029                           indf1	equ	0xFE7
 12030                           postdec1	equ	0xFE5
 12031                           fsr1h	equ	0xFE2
 12032                           fsr1l	equ	0xFE1
 12033                           indf2	equ	0xFDF
 12034                           postinc2	equ	0xFDE
 12035                           fsr2h	equ	0xFDA
 12036                           fsr2l	equ	0xFD9
 12037                           status	equ	0xFD8
 12038                           
 12039 ;; *************** function ___lwdiv *****************
 12040 ;; Defined at:
 12041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  dividend        2   23[BANK1 ] unsigned int 
 12044 ;;  divisor         2   25[BANK1 ] unsigned int 
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;  quotient        2   28[BANK1 ] unsigned int 
 12047 ;;  counter         1   27[BANK1 ] unsigned char 
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  2   23[BANK1 ] unsigned int 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12057 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12058 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12060 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12061 ;;Total ram usage:        7 bytes
 12062 ;; Hardware stack levels used:    1
 12063 ;; Hardware stack levels required when called:   14
 12064 ;; This function calls:
 12065 ;;		Nothing
 12066 ;; This function is called by:
 12067 ;;		_utoa
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text17
 12072  0167F4                     __ptext17:
 12073                           	opt stack 0
 12074  0167F4                     ___lwdiv:
 12075                           	opt stack 12
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;incstack = 0
 12079  0167F4  0E00               	movlw	0
 12080  0167F6  0101               	movlb	1	; () banked
 12081  0167F8  6F1D               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12082  0167FA  0E00               	movlw	0
 12083  0167FC  6F1C               	movwf	___lwdiv@quotient& (0+255),b
 12084                           
 12085                           ; BSR set to: 1
 12086  0167FE  5119               	movf	___lwdiv@divisor& (0+255),w,b
 12087  016800  111A               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12088  016802  B4D8               	btfsc	status,2,c
 12089  016804  D01C               	goto	l1987
 12090                           
 12091                           ; BSR set to: 1
 12092  016806  0E01               	movlw	1
 12093  016808  6F1B               	movwf	___lwdiv@counter& (0+255),b
 12094  01680A  D004               	goto	l1982
 12095  01680C                     
 12096                           ; BSR set to: 1
 12097                           
 12098                           ; BSR set to: 1
 12099  01680C  90D8               	bcf	status,0,c
 12100  01680E  3719               	rlcf	___lwdiv@divisor& (0+255),f,b
 12101  016810  371A               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12102  016812  2B1B               	incf	___lwdiv@counter& (0+255),f,b
 12103  016814                     l1982:
 12104                           
 12105                           ; BSR set to: 1
 12106                           
 12107                           ; BSR set to: 1
 12108  016814  AF1A               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12109  016816  D7FA               	goto	l1983
 12110  016818                     u13080:
 12111                           
 12112                           ; BSR set to: 1
 12113                           
 12114                           ; BSR set to: 1
 12115                           
 12116                           ; BSR set to: 1
 12117  016818  90D8               	bcf	status,0,c
 12118  01681A  371C               	rlcf	___lwdiv@quotient& (0+255),f,b
 12119  01681C  371D               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12120                           
 12121                           ; BSR set to: 1
 12122  01681E  5119               	movf	___lwdiv@divisor& (0+255),w,b
 12123  016820  5D17               	subwf	___lwdiv@dividend& (0+255),w,b
 12124  016822  511A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12125  016824  5918               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12126  016826  A0D8               	btfss	status,0,c
 12127  016828  D005               	goto	l1986
 12128                           
 12129                           ; BSR set to: 1
 12130  01682A  5119               	movf	___lwdiv@divisor& (0+255),w,b
 12131  01682C  5F17               	subwf	___lwdiv@dividend& (0+255),f,b
 12132  01682E  511A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12133  016830  5B18               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12134                           
 12135                           ; BSR set to: 1
 12136  016832  811C               	bsf	___lwdiv@quotient& (0+255),0,b
 12137  016834                     l1986:
 12138                           
 12139                           ; BSR set to: 1
 12140                           
 12141                           ; BSR set to: 1
 12142  016834  90D8               	bcf	status,0,c
 12143  016836  331A               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12144  016838  3319               	rrcf	___lwdiv@divisor& (0+255),f,b
 12145                           
 12146                           ; BSR set to: 1
 12147  01683A  2F1B               	decfsz	___lwdiv@counter& (0+255),f,b
 12148  01683C  D7ED               	goto	u13080
 12149  01683E                     l1987:
 12150                           
 12151                           ; BSR set to: 1
 12152                           
 12153                           ; BSR set to: 1
 12154  01683E  C11C  F117         	movff	___lwdiv@quotient,?___lwdiv
 12155  016842  C11D  F118         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12156                           
 12157                           ; BSR set to: 1
 12158  016846  0012               	return		;funcret
 12159  016848                     __end_of___lwdiv:
 12160                           	opt stack 0
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodl	equ	0xFF3
 12166                           intcon	equ	0xFF2
 12167                           indf0	equ	0xFEF
 12168                           postinc0	equ	0xFEE
 12169                           fsr0h	equ	0xFEA
 12170                           fsr0l	equ	0xFE9
 12171                           wreg	equ	0xFE8
 12172                           indf1	equ	0xFE7
 12173                           postdec1	equ	0xFE5
 12174                           fsr1h	equ	0xFE2
 12175                           fsr1l	equ	0xFE1
 12176                           indf2	equ	0xFDF
 12177                           postinc2	equ	0xFDE
 12178                           fsr2h	equ	0xFDA
 12179                           fsr2l	equ	0xFD9
 12180                           status	equ	0xFD8
 12181                           
 12182 ;; *************** function _strcat *****************
 12183 ;; Defined at:
 12184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12187 ;;		 -> getRevisionIDString@returnString(4), terminal_textAttributes@output_buff(15), 
 12188 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12189 ;;		 -> getRevisionIDString@MinRevStr(2), STR_39(2), STR_38(3), STR_37(3), 
 12190 ;;		 -> STR_36(3), STR_35(3), STR_34(3), STR_33(3), 
 12191 ;;		 -> STR_32(3), STR_31(3), STR_30(3), STR_29(2), 
 12192 ;;		 -> STR_28(3), STR_27(3), STR_26(3), STR_25(3), 
 12193 ;;		 -> STR_24(3), STR_23(3), STR_22(3), STR_21(3), 
 12194 ;;		 -> STR_20(3), STR_19(2), STR_18(2), STR_17(2), 
 12195 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 12196 ;;		 -> STR_12(2), 
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12199 ;;		 -> getRevisionIDString@returnString(4), terminal_textAttributes@output_buff(15), 
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  2   23[BANK1 ] PTR unsigned char 
 12202 ;; Registers used:
 12203 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12209 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12210 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12212 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12213 ;;Total ram usage:        6 bytes
 12214 ;; Hardware stack levels used:    1
 12215 ;; Hardware stack levels required when called:   14
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		_terminal_textAttributes
 12220 ;;		_getRevisionIDString
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text18
 12225  01662E                     __ptext18:
 12226                           	opt stack 0
 12227  01662E                     _strcat:
 12228                           	opt stack 14
 12229                           
 12230                           ; BSR set to: 1
 12231                           ;incstack = 0
 12232  01662E  C117  F11B         	movff	strcat@to,strcat@cp
 12233  016632  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 12234  016636  D003               	goto	l2154
 12235  016638  0101               	movlb	1	; () banked
 12236  01663A  4B1B               	infsnz	strcat@cp& (0+255),f,b
 12237  01663C  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 12238  01663E                     l2154:
 12239                           
 12240                           ; BSR set to: 1
 12241  01663E  C11B  FFD9         	movff	strcat@cp,fsr2l
 12242  016642  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 12243  016646  50DF               	movf	indf2,w,c
 12244  016648  B4D8               	btfsc	status,2,c
 12245  01664A  D006               	goto	l2157
 12246  01664C  D7F5               	goto	l2155
 12247  01664E  0101               	movlb	1	; () banked
 12248  016650  4B1B               	infsnz	strcat@cp& (0+255),f,b
 12249  016652  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 12250  016654  4B19               	infsnz	strcat@from& (0+255),f,b
 12251  016656  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 12252  016658                     l2157:
 12253                           
 12254                           ; BSR set to: 1
 12255  016658  C119  FFF6         	movff	strcat@from,tblptrl
 12256  01665C  C11A  FFF7         	movff	strcat@from+1,tblptrh
 12257  016660  0E00               	movlw	low (__mediumconst shr (0+16))
 12258  016662  6EF8               	movwf	tblptru,c
 12259  016664  C11B  FFD9         	movff	strcat@cp,fsr2l
 12260  016668  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 12261  01666C  0E0D               	movlw	(high __ramtop+-1)
 12262  01666E  64F7               	cpfsgt	tblptrh,c
 12263  016670  D003               	bra	u13027
 12264  016672  0008               	tblrd		*
 12265  016674  50F5               	movf	tablat,w,c
 12266  016676  D005               	bra	u13020
 12267  016678                     u13027:
 12268  016678  CFF6 FFE9          	movff	tblptrl,fsr0l
 12269  01667C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12270  016680  50EF               	movf	indf0,w,c
 12271  016682                     u13020:
 12272  016682  6EDF               	movwf	indf2,c
 12273  016684  50DF               	movf	indf2,w,c
 12274  016686  B4D8               	btfsc	status,2,c
 12275  016688  0012               	return	
 12276  01668A  D7E1               	goto	l2158
 12277  01668C                     __end_of_strcat:
 12278                           	opt stack 0
 12279                           tblptru	equ	0xFF8
 12280                           tblptrh	equ	0xFF7
 12281                           tblptrl	equ	0xFF6
 12282                           tablat	equ	0xFF5
 12283                           prodl	equ	0xFF3
 12284                           intcon	equ	0xFF2
 12285                           indf0	equ	0xFEF
 12286                           postinc0	equ	0xFEE
 12287                           fsr0h	equ	0xFEA
 12288                           fsr0l	equ	0xFE9
 12289                           wreg	equ	0xFE8
 12290                           indf1	equ	0xFE7
 12291                           postdec1	equ	0xFE5
 12292                           fsr1h	equ	0xFE2
 12293                           fsr1l	equ	0xFE1
 12294                           indf2	equ	0xFDF
 12295                           postinc2	equ	0xFDE
 12296                           fsr2h	equ	0xFDA
 12297                           fsr2l	equ	0xFD9
 12298                           status	equ	0xFD8
 12299                           
 12300 ;; *************** function _getMinorRevisionID *****************
 12301 ;; Defined at:
 12302 ;;		line 23 in file "device_IDs.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;		None
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      unsigned char 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0, cstack
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12317 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12319 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12320 ;;Total ram usage:        2 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; Hardware stack levels required when called:   16
 12323 ;; This function calls:
 12324 ;;		_FLASH_ReadWord
 12325 ;; This function is called by:
 12326 ;;		_ringBufferLUT
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           	psect	text19
 12331  016E60                     __ptext19:
 12332                           	opt stack 0
 12333  016E60                     _getMinorRevisionID:
 12334                           	opt stack 12
 12335                           
 12336                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12337                           
 12338                           ;incstack = 0
 12339  016E60  0EFC               	movlw	252
 12340  016E62  0101               	movlb	1	; () banked
 12341  016E64  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12342  016E66  0EFF               	movlw	255
 12343  016E68  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12344  016E6A  0E3F               	movlw	63
 12345  016E6C  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12346  016E6E  0E00               	movlw	0
 12347  016E70  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12348  016E72  EC4D  F0B5         	call	_FLASH_ReadWord	;wreg free
 12349  016E76  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 12350  016E7A  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 12351                           
 12352                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 12353  016E7E  0101               	movlb	1	; () banked
 12354  016E80  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 12355  016E82  0B1F               	andlw	31
 12356  016E84  0012               	return	
 12357  016E86                     __end_of_getMinorRevisionID:
 12358                           	opt stack 0
 12359                           tblptru	equ	0xFF8
 12360                           tblptrh	equ	0xFF7
 12361                           tblptrl	equ	0xFF6
 12362                           tablat	equ	0xFF5
 12363                           prodl	equ	0xFF3
 12364                           intcon	equ	0xFF2
 12365                           indf0	equ	0xFEF
 12366                           postinc0	equ	0xFEE
 12367                           fsr0h	equ	0xFEA
 12368                           fsr0l	equ	0xFE9
 12369                           wreg	equ	0xFE8
 12370                           indf1	equ	0xFE7
 12371                           postdec1	equ	0xFE5
 12372                           fsr1h	equ	0xFE2
 12373                           fsr1l	equ	0xFE1
 12374                           indf2	equ	0xFDF
 12375                           postinc2	equ	0xFDE
 12376                           fsr2h	equ	0xFDA
 12377                           fsr2l	equ	0xFD9
 12378                           status	equ	0xFD8
 12379                           
 12380 ;; *************** function _getMajorRevisionID *****************
 12381 ;; Defined at:
 12382 ;;		line 12 in file "device_IDs.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;		None
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  1    wreg      unsigned char 
 12389 ;; Registers used:
 12390 ;;		wreg, status,2, status,0, cstack
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12398 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12400 ;;Total ram usage:        5 bytes
 12401 ;; Hardware stack levels used:    1
 12402 ;; Hardware stack levels required when called:   16
 12403 ;; This function calls:
 12404 ;;		_FLASH_ReadWord
 12405 ;; This function is called by:
 12406 ;;		_ringBufferLUT
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text20
 12411  016BDA                     __ptext20:
 12412                           	opt stack 0
 12413  016BDA                     _getMajorRevisionID:
 12414                           	opt stack 12
 12415                           
 12416                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12417                           
 12418                           ; BSR set to: 1
 12419                           ;incstack = 0
 12420  016BDA  0EFC               	movlw	252
 12421  016BDC  0101               	movlb	1	; () banked
 12422  016BDE  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12423  016BE0  0EFF               	movlw	255
 12424  016BE2  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12425  016BE4  0E3F               	movlw	63
 12426  016BE6  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12427  016BE8  0E00               	movlw	0
 12428  016BEA  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12429  016BEC  EC4D  F0B5         	call	_FLASH_ReadWord	;wreg free
 12430  016BF0  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 12431  016BF4  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 12432                           
 12433                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 12434  016BF8  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 12435  016BFC  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 12436  016C00  0E06               	movlw	6
 12437  016C02  0101               	movlb	1	; () banked
 12438  016C04  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 12439  016C06                     u14085:
 12440  016C06  90D8               	bcf	status,0,c
 12441  016C08  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 12442  016C0A  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 12443  016C0C  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 12444  016C0E  D7FB               	goto	u14085
 12445  016C10  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 12446  016C12  0B1F               	andlw	31
 12447  016C14  0012               	return	
 12448  016C16                     __end_of_getMajorRevisionID:
 12449                           	opt stack 0
 12450                           tblptru	equ	0xFF8
 12451                           tblptrh	equ	0xFF7
 12452                           tblptrl	equ	0xFF6
 12453                           tablat	equ	0xFF5
 12454                           prodl	equ	0xFF3
 12455                           intcon	equ	0xFF2
 12456                           indf0	equ	0xFEF
 12457                           postinc0	equ	0xFEE
 12458                           fsr0h	equ	0xFEA
 12459                           fsr0l	equ	0xFE9
 12460                           wreg	equ	0xFE8
 12461                           indf1	equ	0xFE7
 12462                           postdec1	equ	0xFE5
 12463                           fsr1h	equ	0xFE2
 12464                           fsr1l	equ	0xFE1
 12465                           indf2	equ	0xFDF
 12466                           postinc2	equ	0xFDE
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8
 12470                           
 12471 ;; *************** function _getDeviceIDString *****************
 12472 ;; Defined at:
 12473 ;;		line 34 in file "device_IDs.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  inputDevID      2   29[BANK1 ] unsigned int 
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;  returnString   12   33[BANK1 ] unsigned char [12]
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  2   29[BANK1 ] PTR unsigned char 
 12480 ;; Registers used:
 12481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12487 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12488 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12489 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12491 ;;Total ram usage:       16 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:   15
 12494 ;; This function calls:
 12495 ;;		_strcpy
 12496 ;; This function is called by:
 12497 ;;		_ringBufferLUT
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text21
 12502  015E68                     __ptext21:
 12503                           	opt stack 0
 12504  015E68                     _getDeviceIDString:
 12505                           	opt stack 13
 12506                           
 12507                           ;device_IDs.c: 37: char returnString[12];
 12508                           ;device_IDs.c: 41: switch (inputDevID) {
 12509                           
 12510                           ; BSR set to: 1
 12511                           ;incstack = 0
 12512  015E68  D024               	goto	l1246
 12513  015E6A                     
 12514                           ;device_IDs.c: 44: strcpy(returnString, "PIC18F67K40");
 12515  015E6A  0E21               	movlw	low getDeviceIDString@returnString
 12516  015E6C  0101               	movlb	1	; () banked
 12517  015E6E  6F17               	movwf	strcpy@to& (0+255),b
 12518  015E70  0E01               	movlw	high getDeviceIDString@returnString
 12519  015E72  6F18               	movwf	(strcpy@to+1)& (0+255),b
 12520  015E74  0E43               	movlw	low STR_120
 12521  015E76  6F19               	movwf	strcpy@from& (0+255),b
 12522  015E78  0EFF               	movlw	high STR_120
 12523  015E7A  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 12524  015E7C  ECE3  F0B4         	call	_strcpy	;wreg free
 12525                           
 12526                           ;device_IDs.c: 45: break;
 12527  015E80  D02F               	goto	l1248
 12528  015E82                     
 12529                           ;device_IDs.c: 48: strcpy(returnString, "PIC18LF67K40");
 12530  015E82  0E21               	movlw	low getDeviceIDString@returnString
 12531  015E84  0101               	movlb	1	; () banked
 12532  015E86  6F17               	movwf	strcpy@to& (0+255),b
 12533  015E88  0E01               	movlw	high getDeviceIDString@returnString
 12534  015E8A  6F18               	movwf	(strcpy@to+1)& (0+255),b
 12535  015E8C  0E0F               	movlw	low STR_121
 12536  015E8E  6F19               	movwf	strcpy@from& (0+255),b
 12537  015E90  0EFF               	movlw	high STR_121
 12538  015E92  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 12539  015E94  ECE3  F0B4         	call	_strcpy	;wreg free
 12540                           
 12541                           ;device_IDs.c: 49: break;
 12542  015E98  D023               	goto	l1248
 12543  015E9A                     
 12544                           ;device_IDs.c: 52: strcpy(returnString, "Undefined");
 12545  015E9A  0E21               	movlw	low getDeviceIDString@returnString
 12546  015E9C  0101               	movlb	1	; () banked
 12547  015E9E  6F17               	movwf	strcpy@to& (0+255),b
 12548  015EA0  0E01               	movlw	high getDeviceIDString@returnString
 12549  015EA2  6F18               	movwf	(strcpy@to+1)& (0+255),b
 12550  015EA4  0E71               	movlw	low STR_122
 12551  015EA6  6F19               	movwf	strcpy@from& (0+255),b
 12552  015EA8  0EFF               	movlw	high STR_122
 12553  015EAA  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 12554  015EAC  ECE3  F0B4         	call	_strcpy	;wreg free
 12555                           
 12556                           ;device_IDs.c: 55: }
 12557                           
 12558                           ;device_IDs.c: 53: break;
 12559  015EB0  D017               	goto	l1248
 12560  015EB2                     l1246:
 12561  015EB2  C11D  F11F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 12562  015EB6  C11E  F120         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 12563                           
 12564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12565                           ; Switch size 1, requested type "space"
 12566                           ; Number of cases is 2, Range of values is 106 to 107
 12567                           ; switch strategies available:
 12568                           ; Name         Instructions Cycles
 12569                           ; simple_byte            7     4 (average)
 12570                           ;	Chosen strategy is simple_byte
 12571  015EBA  0101               	movlb	1	; () banked
 12572  015EBC  5120               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 12573  015EBE  0A6A               	xorlw	106	; case 106
 12574  015EC0  B4D8               	btfsc	status,2,c
 12575  015EC2  D004               	goto	l15348
 12576  015EC4  0A01               	xorlw	1	; case 107
 12577  015EC6  B4D8               	btfsc	status,2,c
 12578  015EC8  D006               	goto	l15350
 12579  015ECA  D7E7               	goto	l1250
 12580  015ECC                     l15348:
 12581                           
 12582                           ; BSR set to: 1
 12583                           ; Switch size 1, requested type "space"
 12584                           ; Number of cases is 1, Range of values is 192 to 192
 12585                           ; switch strategies available:
 12586                           ; Name         Instructions Cycles
 12587                           ; simple_byte            4     3 (average)
 12588                           ;	Chosen strategy is simple_byte
 12589  015ECC  511F               	movf	??_getDeviceIDString& (0+255),w,b
 12590  015ECE  0AC0               	xorlw	192	; case 192
 12591  015ED0  B4D8               	btfsc	status,2,c
 12592  015ED2  D7CB               	goto	l1247
 12593  015ED4  D7E2               	goto	l1250
 12594  015ED6                     l15350:
 12595                           
 12596                           ; BSR set to: 1
 12597                           ; Switch size 1, requested type "space"
 12598                           ; Number of cases is 1, Range of values is 32 to 32
 12599                           ; switch strategies available:
 12600                           ; Name         Instructions Cycles
 12601                           ; simple_byte            4     3 (average)
 12602                           ;	Chosen strategy is simple_byte
 12603  015ED6  511F               	movf	??_getDeviceIDString& (0+255),w,b
 12604  015ED8  0A20               	xorlw	32	; case 32
 12605  015EDA  B4D8               	btfsc	status,2,c
 12606  015EDC  D7D2               	goto	l1249
 12607  015EDE  D7DD               	goto	l1250
 12608  015EE0                     l1248:
 12609                           
 12610                           ;device_IDs.c: 58: return *returnString;
 12611                           
 12612                           ; BSR set to: 1
 12613  015EE0  0101               	movlb	1	; () banked
 12614  015EE2  5121               	movf	getDeviceIDString@returnString& (0+255),w,b
 12615  015EE4  6F1F               	movwf	??_getDeviceIDString& (0+255),b
 12616  015EE6  6B20               	clrf	(??_getDeviceIDString+1)& (0+255),b
 12617  015EE8  C11F  F11D         	movff	??_getDeviceIDString,?_getDeviceIDString
 12618  015EEC  C120  F11E         	movff	??_getDeviceIDString+1,?_getDeviceIDString+1
 12619  015EF0  0012               	return	
 12620  015EF2                     __end_of_getDeviceIDString:
 12621                           	opt stack 0
 12622                           tblptru	equ	0xFF8
 12623                           tblptrh	equ	0xFF7
 12624                           tblptrl	equ	0xFF6
 12625                           tablat	equ	0xFF5
 12626                           prodl	equ	0xFF3
 12627                           intcon	equ	0xFF2
 12628                           indf0	equ	0xFEF
 12629                           postinc0	equ	0xFEE
 12630                           fsr0h	equ	0xFEA
 12631                           fsr0l	equ	0xFE9
 12632                           wreg	equ	0xFE8
 12633                           indf1	equ	0xFE7
 12634                           postdec1	equ	0xFE5
 12635                           fsr1h	equ	0xFE2
 12636                           fsr1l	equ	0xFE1
 12637                           indf2	equ	0xFDF
 12638                           postinc2	equ	0xFDE
 12639                           fsr2h	equ	0xFDA
 12640                           fsr2l	equ	0xFD9
 12641                           status	equ	0xFD8
 12642                           
 12643 ;; *************** function _strcpy *****************
 12644 ;; Defined at:
 12645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12648 ;;		 -> getRevisionIDString@returnString(4), getDeviceIDString@returnString(12), ringBufferLUT@channel_name(22), 
 12649 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12650 ;;		 -> getRevisionIDString@MajRevStr(1), STR_122(10), STR_121(13), STR_120(12), 
 12651 ;;		 -> STR_68(17), STR_67(22), STR_66(14), STR_65(14), 
 12652 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12655 ;;		 -> getRevisionIDString@returnString(4), getDeviceIDString@returnString(12), ringBufferLUT@channel_name(22), 
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  2   23[BANK1 ] PTR unsigned char 
 12658 ;; Registers used:
 12659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12665 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12666 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12668 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12669 ;;Total ram usage:        6 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:   14
 12672 ;; This function calls:
 12673 ;;		Nothing
 12674 ;; This function is called by:
 12675 ;;		_ringBufferLUT
 12676 ;;		_getDeviceIDString
 12677 ;;		_getRevisionIDString
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text22
 12682  0169C6                     __ptext22:
 12683                           	opt stack 0
 12684  0169C6                     _strcpy:
 12685                           	opt stack 14
 12686                           
 12687                           ; BSR set to: 1
 12688                           ;incstack = 0
 12689  0169C6  C117  F11B         	movff	strcpy@to,strcpy@cp
 12690  0169CA  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 12691  0169CE  D005               	goto	l2171
 12692  0169D0  0101               	movlb	1	; () banked
 12693  0169D2  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 12694  0169D4  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 12695  0169D6  4B19               	infsnz	strcpy@from& (0+255),f,b
 12696  0169D8  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 12697  0169DA                     l2171:
 12698                           
 12699                           ; BSR set to: 1
 12700  0169DA  C119  FFF6         	movff	strcpy@from,tblptrl
 12701  0169DE  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 12702  0169E2  0E00               	movlw	low (__mediumconst shr (0+16))
 12703  0169E4  6EF8               	movwf	tblptru,c
 12704  0169E6  C11B  FFD9         	movff	strcpy@cp,fsr2l
 12705  0169EA  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 12706  0169EE  0E0D               	movlw	(high __ramtop+-1)
 12707  0169F0  64F7               	cpfsgt	tblptrh,c
 12708  0169F2  D003               	bra	u13257
 12709  0169F4  0008               	tblrd		*
 12710  0169F6  50F5               	movf	tablat,w,c
 12711  0169F8  D005               	bra	u13250
 12712  0169FA                     u13257:
 12713  0169FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 12714  0169FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 12715  016A02  50EF               	movf	indf0,w,c
 12716  016A04                     u13250:
 12717  016A04  6EDF               	movwf	indf2,c
 12718  016A06  50DF               	movf	indf2,w,c
 12719  016A08  B4D8               	btfsc	status,2,c
 12720  016A0A  0012               	return	
 12721  016A0C  D7E1               	goto	l2172
 12722  016A0E                     __end_of_strcpy:
 12723                           	opt stack 0
 12724                           tblptru	equ	0xFF8
 12725                           tblptrh	equ	0xFF7
 12726                           tblptrl	equ	0xFF6
 12727                           tablat	equ	0xFF5
 12728                           prodl	equ	0xFF3
 12729                           intcon	equ	0xFF2
 12730                           indf0	equ	0xFEF
 12731                           postinc0	equ	0xFEE
 12732                           fsr0h	equ	0xFEA
 12733                           fsr0l	equ	0xFE9
 12734                           wreg	equ	0xFE8
 12735                           indf1	equ	0xFE7
 12736                           postdec1	equ	0xFE5
 12737                           fsr1h	equ	0xFE2
 12738                           fsr1l	equ	0xFE1
 12739                           indf2	equ	0xFDF
 12740                           postinc2	equ	0xFDE
 12741                           fsr2h	equ	0xFDA
 12742                           fsr2l	equ	0xFD9
 12743                           status	equ	0xFD8
 12744                           
 12745 ;; *************** function _getDeviceID *****************
 12746 ;; Defined at:
 12747 ;;		line 4 in file "device_IDs.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;		None
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  2   34[BANK1 ] unsigned int 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0, cstack
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12761 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12764 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12765 ;;Total ram usage:        2 bytes
 12766 ;; Hardware stack levels used:    1
 12767 ;; Hardware stack levels required when called:   16
 12768 ;; This function calls:
 12769 ;;		_FLASH_ReadWord
 12770 ;; This function is called by:
 12771 ;;		_ringBufferLUT
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text23
 12776  016F62                     __ptext23:
 12777                           	opt stack 0
 12778  016F62                     _getDeviceID:
 12779                           	opt stack 12
 12780                           
 12781                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 12782                           
 12783                           ;incstack = 0
 12784  016F62  0EFE               	movlw	254
 12785  016F64  0101               	movlb	1	; () banked
 12786  016F66  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12787  016F68  0EFF               	movlw	255
 12788  016F6A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12789  016F6C  0E3F               	movlw	63
 12790  016F6E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12791  016F70  0E00               	movlw	0
 12792  016F72  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12793  016F74  EC4D  F0B5         	call	_FLASH_ReadWord	;wreg free
 12794  016F78  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 12795  016F7C  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 12796  016F80  0012               	return	
 12797  016F82                     __end_of_getDeviceID:
 12798                           	opt stack 0
 12799                           tblptru	equ	0xFF8
 12800                           tblptrh	equ	0xFF7
 12801                           tblptrl	equ	0xFF6
 12802                           tablat	equ	0xFF5
 12803                           prodl	equ	0xFF3
 12804                           intcon	equ	0xFF2
 12805                           indf0	equ	0xFEF
 12806                           postinc0	equ	0xFEE
 12807                           fsr0h	equ	0xFEA
 12808                           fsr0l	equ	0xFE9
 12809                           wreg	equ	0xFE8
 12810                           indf1	equ	0xFE7
 12811                           postdec1	equ	0xFE5
 12812                           fsr1h	equ	0xFE2
 12813                           fsr1l	equ	0xFE1
 12814                           indf2	equ	0xFDF
 12815                           postinc2	equ	0xFDE
 12816                           fsr2h	equ	0xFDA
 12817                           fsr2l	equ	0xFD9
 12818                           status	equ	0xFD8
 12819                           
 12820 ;; *************** function _FLASH_ReadWord *****************
 12821 ;; Defined at:
 12822 ;;		line 71 in file "mcc_generated_files/memory.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 12825 ;; Auto vars:     Size  Location     Type
 12826 ;;		None
 12827 ;; Return value:  Size  Location     Type
 12828 ;;                  2   27[BANK1 ] unsigned int 
 12829 ;; Registers used:
 12830 ;;		wreg, status,2, status,0, cstack
 12831 ;; Tracked objects:
 12832 ;;		On entry : 0/0
 12833 ;;		On exit  : 0/0
 12834 ;;		Unchanged: 0/0
 12835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12836 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12838 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12839 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12840 ;;Total ram usage:        7 bytes
 12841 ;; Hardware stack levels used:    1
 12842 ;; Hardware stack levels required when called:   15
 12843 ;; This function calls:
 12844 ;;		_FLASH_ReadByte
 12845 ;; This function is called by:
 12846 ;;		_getDeviceID
 12847 ;;		_getMajorRevisionID
 12848 ;;		_getMinorRevisionID
 12849 ;;		_getUserID
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text24
 12854  016A9A                     __ptext24:
 12855                           	opt stack 0
 12856  016A9A                     _FLASH_ReadWord:
 12857                           	opt stack 12
 12858                           
 12859                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 12860                           
 12861                           ;incstack = 0
 12862  016A9A  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 12863  016A9E  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 12864  016AA2  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 12865  016AA6  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 12866  016AAA  ECFA  F0B7         	call	_FLASH_ReadByte	;wreg free
 12867  016AAE  0101               	movlb	1	; () banked
 12868  016AB0  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 12869  016AB2  0E01               	movlw	1
 12870  016AB4  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 12871  016AB6  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 12872  016AB8  0E00               	movlw	0
 12873  016ABA  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 12874  016ABC  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 12875  016ABE  0E00               	movlw	0
 12876  016AC0  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 12877  016AC2  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 12878  016AC4  0E00               	movlw	0
 12879  016AC6  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 12880  016AC8  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 12881  016ACA  ECFA  F0B7         	call	_FLASH_ReadByte	;wreg free
 12882  016ACE  0101               	movlb	1	; () banked
 12883  016AD0  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 12884  016AD2  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 12885  016AD4  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 12886  016AD6  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 12887  016ADA  0012               	return	
 12888  016ADC                     __end_of_FLASH_ReadWord:
 12889                           	opt stack 0
 12890                           tblptru	equ	0xFF8
 12891                           tblptrh	equ	0xFF7
 12892                           tblptrl	equ	0xFF6
 12893                           tablat	equ	0xFF5
 12894                           prodl	equ	0xFF3
 12895                           intcon	equ	0xFF2
 12896                           indf0	equ	0xFEF
 12897                           postinc0	equ	0xFEE
 12898                           fsr0h	equ	0xFEA
 12899                           fsr0l	equ	0xFE9
 12900                           wreg	equ	0xFE8
 12901                           indf1	equ	0xFE7
 12902                           postdec1	equ	0xFE5
 12903                           fsr1h	equ	0xFE2
 12904                           fsr1l	equ	0xFE1
 12905                           indf2	equ	0xFDF
 12906                           postinc2	equ	0xFDE
 12907                           fsr2h	equ	0xFDA
 12908                           fsr2l	equ	0xFD9
 12909                           status	equ	0xFD8
 12910                           
 12911 ;; *************** function _FLASH_ReadByte *****************
 12912 ;; Defined at:
 12913 ;;		line 59 in file "mcc_generated_files/memory.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      unsigned char 
 12920 ;; Registers used:
 12921 ;;		wreg, status,2
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12927 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;Total ram usage:        4 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:   14
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_FLASH_ReadWord
 12938 ;;		_FLASH_WriteByte
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text25
 12943  016FF4                     __ptext25:
 12944                           	opt stack 0
 12945  016FF4                     _FLASH_ReadByte:
 12946                           	opt stack 12
 12947                           
 12948                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 12949                           
 12950                           ; BSR set to: 1
 12951                           ;incstack = 0
 12952  016FF4  5077               	movf	3959,w,c	;volsfr
 12953  016FF6  0B3F               	andlw	-193
 12954  016FF8  0980               	iorlw	128
 12955  016FFA  6E77               	movwf	3959,c	;volsfr
 12956                           
 12957                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 12958  016FFC  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 12959                           
 12960                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 12961  017000  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 12962                           
 12963                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 12964  017004  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 12965  017008  0008               	tblrd		*	;# 
 12966                           
 12967                           ;memory.c: 68: return (TABLAT);
 12968  01700A  50F5               	movf	tablat,w,c	;volatile
 12969  01700C  0012               	return	
 12970  01700E                     __end_of_FLASH_ReadByte:
 12971                           	opt stack 0
 12972                           tblptru	equ	0xFF8
 12973                           tblptrh	equ	0xFF7
 12974                           tblptrl	equ	0xFF6
 12975                           tablat	equ	0xFF5
 12976                           prodl	equ	0xFF3
 12977                           intcon	equ	0xFF2
 12978                           indf0	equ	0xFEF
 12979                           postinc0	equ	0xFEE
 12980                           fsr0h	equ	0xFEA
 12981                           fsr0l	equ	0xFE9
 12982                           wreg	equ	0xFE8
 12983                           indf1	equ	0xFE7
 12984                           postdec1	equ	0xFE5
 12985                           fsr1h	equ	0xFE2
 12986                           fsr1l	equ	0xFE1
 12987                           indf2	equ	0xFDF
 12988                           postinc2	equ	0xFDE
 12989                           fsr2h	equ	0xFDA
 12990                           fsr2l	equ	0xFD9
 12991                           status	equ	0xFD8
 12992                           
 12993 ;; *************** function _getCauseOfResetString *****************
 12994 ;; Defined at:
 12995 ;;		line 372 in file "cause_of_reset.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;  r               1    wreg     enum E17455
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;  r               1   49[BANK1 ] enum E17455
 13000 ;;  strings        24   25[BANK1 ] PTR const unsigned char 
 13001 ;;		 -> STR_134(30), STR_133(22), STR_132(21), STR_131(27), 
 13002 ;;		 -> STR_130(29), STR_129(41), STR_128(28), STR_127(32), 
 13003 ;;		 -> STR_126(25), STR_125(19), STR_124(16), STR_123(15), 
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  2   23[BANK1 ] PTR inline unsigned char
 13006 ;; Registers used:
 13007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13013 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13014 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13016 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13017 ;;Total ram usage:       27 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:   14
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_ringBufferLUT
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           	psect	text26
 13028  016D26                     __ptext26:
 13029                           	opt stack 0
 13030  016D26                     _getCauseOfResetString:
 13031                           	opt stack 14
 13032                           
 13033                           ;incstack = 0
 13034                           ;getCauseOfResetString@r stored from wreg
 13035  016D26  0101               	movlb	1	; () banked
 13036  016D28  6F31               	movwf	getCauseOfResetString@r& (0+255),b
 13037                           
 13038                           ;cause_of_reset.c: 375: const char *strings[] = {
 13039                           ;cause_of_reset.c: 376: "Power On Reset",
 13040                           ;cause_of_reset.c: 377: "Brown Out Reset",
 13041                           ;cause_of_reset.c: 378: "Master Clear Reset",
 13042                           ;cause_of_reset.c: 379: "Master Clear Sleep Reset",
 13043                           ;cause_of_reset.c: 380: "Watch Dog Timer Violation Reset",
 13044                           ;cause_of_reset.c: 381: "Watch Dog Timer Sleep Reset",
 13045                           ;cause_of_reset.c: 382: "Windowed Watch Dog Timer Violation Reset",
 13046                           ;cause_of_reset.c: 383: "Interrupt Wake Up From Sleep",
 13047                           ;cause_of_reset.c: 384: "RESET Instruction Executed",
 13048  016D2A  EE22  F0A4         	lfsr	2,getCauseOfResetString@F17476
 13049  016D2E  EE11  F019         	lfsr	1,getCauseOfResetString@strings
 13050  016D32  0E17               	movlw	23
 13051  016D34                     u14071:
 13052  016D34  CFDB FFE3          	movff	plusw2,plusw1
 13053  016D38  06E8               	decf	wreg,f,c
 13054  016D3A  E2FC               	bc	u14071
 13055                           
 13056                           ;cause_of_reset.c: 390: return strings[r];
 13057  016D3C  0101               	movlb	1	; () banked
 13058  016D3E  5131               	movf	getCauseOfResetString@r& (0+255),w,b
 13059  016D40  0D02               	mullw	2
 13060  016D42  0E19               	movlw	low getCauseOfResetString@strings
 13061  016D44  24F3               	addwf	prodl,w,c
 13062  016D46  6ED9               	movwf	fsr2l,c
 13063  016D48  0E01               	movlw	high getCauseOfResetString@strings
 13064  016D4A  20F4               	addwfc	prodh,w,c
 13065  016D4C  6EDA               	movwf	fsr2h,c
 13066  016D4E  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 13067  016D52  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 13068  016D56  0012               	return	
 13069  016D58                     __end_of_getCauseOfResetString:
 13070                           	opt stack 0
 13071                           tblptru	equ	0xFF8
 13072                           tblptrh	equ	0xFF7
 13073                           tblptrl	equ	0xFF6
 13074                           tablat	equ	0xFF5
 13075                           prodh	equ	0xFF4
 13076                           prodl	equ	0xFF3
 13077                           intcon	equ	0xFF2
 13078                           indf0	equ	0xFEF
 13079                           postinc0	equ	0xFEE
 13080                           fsr0h	equ	0xFEA
 13081                           fsr0l	equ	0xFE9
 13082                           wreg	equ	0xFE8
 13083                           indf1	equ	0xFE7
 13084                           postdec1	equ	0xFE5
 13085                           plusw1	equ	0xFE3
 13086                           fsr1h	equ	0xFE2
 13087                           fsr1l	equ	0xFE1
 13088                           indf2	equ	0xFDF
 13089                           postinc2	equ	0xFDE
 13090                           postdec2	equ	0xFDD
 13091                           plusw2	equ	0xFDB
 13092                           fsr2h	equ	0xFDA
 13093                           fsr2l	equ	0xFD9
 13094                           status	equ	0xFD8
 13095                           
 13096 ;; *************** function _getCauseOfReset *****************
 13097 ;; Defined at:
 13098 ;;		line 14 in file "cause_of_reset.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;		None
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;		None
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  1    wreg      enum E18023
 13105 ;; Registers used:
 13106 ;;		wreg, status,2
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13116 ;;Total ram usage:        0 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:   14
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_ringBufferLUT
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text27
 13127  015342                     __ptext27:
 13128                           	opt stack 0
 13129  015342                     _getCauseOfReset:
 13130                           	opt stack 14
 13131                           
 13132                           ;cause_of_reset.c: 19: if(
 13133                           ;cause_of_reset.c: 21: STATUSbits.nTO &&
 13134                           ;cause_of_reset.c: 22: STATUSbits.nPD &&
 13135                           ;cause_of_reset.c: 23: !(STATUSbits.N) &&
 13136                           ;cause_of_reset.c: 25: !(STATUSbits.OV) &&
 13137                           ;cause_of_reset.c: 26: !(STATUSbits.Z) &&
 13138                           ;cause_of_reset.c: 27: !(STATUSbits.DC) &&
 13139                           ;cause_of_reset.c: 28: !(STATUSbits.C) &&
 13140                           ;cause_of_reset.c: 31: !(PCON0bits.STKOVF) &&
 13141                           ;cause_of_reset.c: 32: !(PCON0bits.STKUNF) &&
 13142                           ;cause_of_reset.c: 33: PCON0bits.nWDTWV &&
 13143                           ;cause_of_reset.c: 34: PCON0bits.nRWDT &&
 13144                           ;cause_of_reset.c: 36: PCON0bits.nRMCLR &&
 13145                           
 13146                           ; BSR set to: 1
 13147                           ;incstack = 0
 13148  015342  BCD8               	btfsc	status,6,c	;volatile
 13149  015344  AAD8               	btfss	status,5,c	;volatile
 13150  015346  D014               	goto	l1266
 13151  015348  A8D8               	btfss	status,4,c	;volatile
 13152  01534A  B6D8               	btfsc	status,3,c	;volatile
 13153  01534C  D011               	goto	l1266
 13154  01534E  A4D8               	btfss	status,2,c	;volatile
 13155  015350  B2D8               	btfsc	status,1,c	;volatile
 13156  015352  D00E               	goto	l1266
 13157  015354  A0D8               	btfss	status,0,c	;volatile
 13158  015356  BED7               	btfsc	4055,7,c	;volatile
 13159  015358  D00B               	goto	l1266
 13160  01535A  ACD7               	btfss	4055,6,c	;volatile
 13161  01535C  AAD7               	btfss	4055,5,c	;volatile
 13162  01535E  D008               	goto	l1266
 13163  015360  B8D7               	btfsc	4055,4,c	;volatile
 13164  015362  A6D7               	btfss	4055,3,c	;volatile
 13165  015364  D005               	goto	l1266
 13166  015366  B4D7               	btfsc	4055,2,c	;volatile
 13167  015368  B2D7               	btfsc	4055,1,c	;volatile
 13168  01536A  D002               	goto	l1266
 13169                           
 13170                           ;cause_of_reset.c: 43: reset_cause = Power_On_Reset;
 13171  01536C  0E00               	movlw	0
 13172  01536E  D056               	goto	L11
 13173  015370                     l1266:
 13174                           
 13175                           ;cause_of_reset.c: 48: else if(
 13176                           ;cause_of_reset.c: 50: STATUSbits.nTO &&
 13177                           ;cause_of_reset.c: 51: STATUSbits.nPD &&
 13178                           ;cause_of_reset.c: 52: !(STATUSbits.N) &&
 13179                           ;cause_of_reset.c: 54: !(STATUSbits.OV) &&
 13180                           ;cause_of_reset.c: 55: !(STATUSbits.Z) &&
 13181                           ;cause_of_reset.c: 56: !(STATUSbits.DC) &&
 13182                           ;cause_of_reset.c: 57: !(STATUSbits.C) &&
 13183                           ;cause_of_reset.c: 60: !(PCON0bits.STKOVF) &&
 13184                           ;cause_of_reset.c: 61: !(PCON0bits.STKUNF) &&
 13185                           ;cause_of_reset.c: 62: PCON0bits.nWDTWV &&
 13186                           ;cause_of_reset.c: 63: PCON0bits.nRWDT &&
 13187                           ;cause_of_reset.c: 65: PCON0bits.nRMCLR &&
 13188  015370  BCD8               	btfsc	status,6,c	;volatile
 13189  015372  AAD8               	btfss	status,5,c	;volatile
 13190  015374  D014               	goto	l1268
 13191  015376  A8D8               	btfss	status,4,c	;volatile
 13192  015378  B6D8               	btfsc	status,3,c	;volatile
 13193  01537A  D011               	goto	l1268
 13194  01537C  A4D8               	btfss	status,2,c	;volatile
 13195  01537E  B2D8               	btfsc	status,1,c	;volatile
 13196  015380  D00E               	goto	l1268
 13197  015382  A0D8               	btfss	status,0,c	;volatile
 13198  015384  BED7               	btfsc	4055,7,c	;volatile
 13199  015386  D00B               	goto	l1268
 13200  015388  ACD7               	btfss	4055,6,c	;volatile
 13201  01538A  AAD7               	btfss	4055,5,c	;volatile
 13202  01538C  D008               	goto	l1268
 13203  01538E  B8D7               	btfsc	4055,4,c	;volatile
 13204  015390  A6D7               	btfss	4055,3,c	;volatile
 13205  015392  D005               	goto	l1268
 13206  015394  B4D7               	btfsc	4055,2,c	;volatile
 13207  015396  B0D7               	btfsc	4055,0,c	;volatile
 13208  015398  D002               	goto	l1268
 13209                           
 13210                           ;cause_of_reset.c: 72: reset_cause = Brown_Out_Reset;
 13211  01539A  0E01               	movlw	1
 13212  01539C  D03F               	goto	L11
 13213  01539E                     l1268:
 13214                           
 13215                           ;cause_of_reset.c: 77: else if(
 13216                           ;cause_of_reset.c: 94: !(PCON0bits.nRMCLR)
 13217                           ;cause_of_reset.c: 98: ) {
 13218  01539E  B6D7               	btfsc	4055,3,c	;volatile
 13219  0153A0  D002               	goto	l1270
 13220                           
 13221                           ;cause_of_reset.c: 101: reset_cause = Master_Clear_Reset;
 13222  0153A2  0E02               	movlw	2
 13223  0153A4  D03B               	goto	L11
 13224  0153A6                     l1270:
 13225                           
 13226                           ;cause_of_reset.c: 106: else if(
 13227                           ;cause_of_reset.c: 108: STATUSbits.nTO &&
 13228                           ;cause_of_reset.c: 109: STATUSbits.nPD &&
 13229                           ;cause_of_reset.c: 123: !(PCON0bits.nRMCLR)
 13230                           ;cause_of_reset.c: 127: ) {
 13231  0153A6  BCD8               	btfsc	status,6,c	;volatile
 13232  0153A8  AAD8               	btfss	status,5,c	;volatile
 13233  0153AA  D004               	goto	l1272
 13234  0153AC  B6D7               	btfsc	4055,3,c	;volatile
 13235  0153AE  D002               	goto	l1272
 13236                           
 13237                           ;cause_of_reset.c: 130: reset_cause = Master_Clear_Sleep_Reset;
 13238  0153B0  0E03               	movlw	3
 13239  0153B2  D034               	goto	L11
 13240  0153B4                     l1272:
 13241                           
 13242                           ;cause_of_reset.c: 135: else if(
 13243                           ;cause_of_reset.c: 137: !(STATUSbits.nTO) &&
 13244                           ;cause_of_reset.c: 150: !(PCON0bits.nRWDT)
 13245                           ;cause_of_reset.c: 156: ) {
 13246  0153B4  ACD8               	btfss	status,6,c	;volatile
 13247  0153B6  B8D7               	btfsc	4055,4,c	;volatile
 13248  0153B8  D002               	goto	l1274
 13249                           
 13250                           ;cause_of_reset.c: 159: reset_cause = Watch_Dog_Timer_Reset;
 13251  0153BA  0E04               	movlw	4
 13252  0153BC  D02F               	goto	L11
 13253  0153BE                     l1274:
 13254                           
 13255                           ;cause_of_reset.c: 164: else if(
 13256                           ;cause_of_reset.c: 166: !(STATUSbits.nTO) &&
 13257                           ;cause_of_reset.c: 167: !(STATUSbits.nPD)
 13258                           ;cause_of_reset.c: 185: ) {
 13259  0153BE  ACD8               	btfss	status,6,c	;volatile
 13260  0153C0  BAD8               	btfsc	status,5,c	;volatile
 13261  0153C2  D002               	goto	l1276
 13262                           
 13263                           ;cause_of_reset.c: 188: reset_cause = Watch_Dog_Timer_Sleep_Reset;
 13264  0153C4  0E05               	movlw	5
 13265  0153C6  D02A               	goto	L11
 13266  0153C8                     l1276:
 13267                           
 13268                           ;cause_of_reset.c: 193: else if(
 13269                           ;cause_of_reset.c: 207: !(PCON0bits.nWDTWV)
 13270                           ;cause_of_reset.c: 214: ) {
 13271  0153C8  BAD7               	btfsc	4055,5,c	;volatile
 13272  0153CA  D002               	goto	l1278
 13273                           
 13274                           ;cause_of_reset.c: 217: reset_cause = Windowed_Watch_Dog_Timer_Reset;
 13275  0153CC  0E06               	movlw	6
 13276  0153CE  D026               	goto	L11
 13277  0153D0                     l1278:
 13278                           
 13279                           ;cause_of_reset.c: 222: else if(
 13280                           ;cause_of_reset.c: 224: STATUSbits.nTO &&
 13281                           ;cause_of_reset.c: 225: !(STATUSbits.nPD) &&
 13282                           ;cause_of_reset.c: 228: !(STATUSbits.OV)
 13283                           ;cause_of_reset.c: 243: ) {
 13284  0153D0  BCD8               	btfsc	status,6,c	;volatile
 13285  0153D2  BAD8               	btfsc	status,5,c	;volatile
 13286  0153D4  D004               	goto	l1280
 13287  0153D6  B6D8               	btfsc	status,3,c	;volatile
 13288  0153D8  D002               	goto	l1280
 13289                           
 13290                           ;cause_of_reset.c: 246: reset_cause = Interrupt_Wake_Up_From_Sleep;
 13291  0153DA  0E07               	movlw	7
 13292  0153DC  D01F               	goto	L11
 13293  0153DE                     l1280:
 13294                           
 13295                           ;cause_of_reset.c: 251: else if(
 13296                           ;cause_of_reset.c: 269: !(PCON0bits.nRI)
 13297                           ;cause_of_reset.c: 272: ) {
 13298  0153DE  B4D7               	btfsc	4055,2,c	;volatile
 13299  0153E0  D002               	goto	l1282
 13300                           
 13301                           ;cause_of_reset.c: 275: reset_cause = RESET_Instruction_Executed;
 13302  0153E2  0E08               	movlw	8
 13303  0153E4  D01B               	goto	L11
 13304  0153E6                     l1282:
 13305                           
 13306                           ;cause_of_reset.c: 280: else if(
 13307                           ;cause_of_reset.c: 292: PCON0bits.STKOVF
 13308                           ;cause_of_reset.c: 301: ) {
 13309  0153E6  AED7               	btfss	4055,7,c	;volatile
 13310  0153E8  D002               	goto	l1284
 13311                           
 13312                           ;cause_of_reset.c: 304: reset_cause = Stack_Overflow_Reset;
 13313  0153EA  0E09               	movlw	9
 13314  0153EC  D017               	goto	L11
 13315  0153EE                     l1284:
 13316                           
 13317                           ;cause_of_reset.c: 309: else if(
 13318                           ;cause_of_reset.c: 322: PCON0bits.STKUNF
 13319                           ;cause_of_reset.c: 330: ) {
 13320  0153EE  ACD7               	btfss	4055,6,c	;volatile
 13321  0153F0  D002               	goto	l1286
 13322                           
 13323                           ;cause_of_reset.c: 333: reset_cause = Stack_Underflow_Reset;
 13324  0153F2  0E0A               	movlw	10
 13325  0153F4  D013               	goto	L11
 13326  0153F6                     l1286:
 13327                           
 13328                           ;cause_of_reset.c: 338: else if(
 13329                           ;cause_of_reset.c: 342: STATUSbits.N &&
 13330                           ;cause_of_reset.c: 344: STATUSbits.OV &&
 13331                           ;cause_of_reset.c: 345: !(STATUSbits.Z) &&
 13332                           ;cause_of_reset.c: 346: !(STATUSbits.DC) &&
 13333                           ;cause_of_reset.c: 347: !(STATUSbits.C) &&
 13334                           ;cause_of_reset.c: 350: !(PCON0bits.STKOVF) &&
 13335                           ;cause_of_reset.c: 351: !(PCON0bits.STKUNF) &&
 13336                           ;cause_of_reset.c: 352: PCON0bits.nWDTWV &&
 13337                           ;cause_of_reset.c: 353: PCON0bits.nRWDT &&
 13338                           ;cause_of_reset.c: 355: !(PCON0bits.nRMCLR) &&
 13339                           ;cause_of_reset.c: 356: !(PCON0bits.nRI) &&
 13340  0153F6  B8D8               	btfsc	status,4,c	;volatile
 13341  0153F8  A6D8               	btfss	status,3,c	;volatile
 13342  0153FA  D012               	goto	l1288
 13343  0153FC  A4D8               	btfss	status,2,c	;volatile
 13344  0153FE  B2D8               	btfsc	status,1,c	;volatile
 13345  015400  D00F               	goto	l1288
 13346  015402  A0D8               	btfss	status,0,c	;volatile
 13347  015404  BED7               	btfsc	4055,7,c	;volatile
 13348  015406  D00C               	goto	l1288
 13349  015408  ACD7               	btfss	4055,6,c	;volatile
 13350  01540A  AAD7               	btfss	4055,5,c	;volatile
 13351  01540C  D009               	goto	l1288
 13352  01540E  B8D7               	btfsc	4055,4,c	;volatile
 13353  015410  B6D7               	btfsc	4055,3,c	;volatile
 13354  015412  D006               	goto	l1288
 13355  015414  A4D7               	btfss	4055,2,c	;volatile
 13356  015416  A2D7               	btfss	4055,1,c	;volatile
 13357  015418  D003               	goto	l1288
 13358                           
 13359                           ;cause_of_reset.c: 362: reset_cause = VREG_or_ULP_Ready_Fault_Reset;
 13360  01541A  0E0B               	movlw	11
 13361  01541C                     L11:
 13362  01541C  0100               	movlb	0	; () banked
 13363  01541E  6FE9               	movwf	_reset_cause& (0+255),b
 13364  015420                     l1288:
 13365                           
 13366                           ;cause_of_reset.c: 364: }
 13367                           ;cause_of_reset.c: 367: return reset_cause;
 13368                           
 13369                           ; BSR set to: 0
 13370                           
 13371                           ; BSR set to: 0
 13372                           
 13373                           ; BSR set to: 0
 13374                           
 13375                           ; BSR set to: 0
 13376                           
 13377                           ; BSR set to: 0
 13378                           
 13379                           ; BSR set to: 0
 13380                           
 13381                           ; BSR set to: 0
 13382                           
 13383                           ; BSR set to: 0
 13384                           
 13385                           ; BSR set to: 0
 13386                           
 13387                           ; BSR set to: 0
 13388                           
 13389                           ; BSR set to: 0
 13390  015420  0100               	movlb	0	; () banked
 13391  015422  51E9               	movf	_reset_cause& (0+255),w,b
 13392  015424  0012               	return	
 13393  015426                     __end_of_getCauseOfReset:
 13394                           	opt stack 0
 13395                           tblptru	equ	0xFF8
 13396                           tblptrh	equ	0xFF7
 13397                           tblptrl	equ	0xFF6
 13398                           tablat	equ	0xFF5
 13399                           prodh	equ	0xFF4
 13400                           prodl	equ	0xFF3
 13401                           intcon	equ	0xFF2
 13402                           indf0	equ	0xFEF
 13403                           postinc0	equ	0xFEE
 13404                           fsr0h	equ	0xFEA
 13405                           fsr0l	equ	0xFE9
 13406                           wreg	equ	0xFE8
 13407                           indf1	equ	0xFE7
 13408                           postdec1	equ	0xFE5
 13409                           plusw1	equ	0xFE3
 13410                           fsr1h	equ	0xFE2
 13411                           fsr1l	equ	0xFE1
 13412                           indf2	equ	0xFDF
 13413                           postinc2	equ	0xFDE
 13414                           postdec2	equ	0xFDD
 13415                           plusw2	equ	0xFDB
 13416                           fsr2h	equ	0xFDA
 13417                           fsr2l	equ	0xFD9
 13418                           status	equ	0xFD8
 13419                           
 13420 ;; *************** function _atoi *****************
 13421 ;; Defined at:
 13422 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;  s               2   43[BANK1 ] PTR const unsigned char 
 13425 ;;		 -> ringBufferLUT@arg_buff(3), 
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;  a               2   48[BANK1 ] int 
 13428 ;;  sign            1   47[BANK1 ] unsigned char 
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  2   43[BANK1 ] int 
 13431 ;; Registers used:
 13432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13438 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13439 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13440 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13441 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13442 ;;Total ram usage:        7 bytes
 13443 ;; Hardware stack levels used:    1
 13444 ;; Hardware stack levels required when called:   15
 13445 ;; This function calls:
 13446 ;;		___wmul
 13447 ;;		_isdigit
 13448 ;; This function is called by:
 13449 ;;		_ringBufferLUT
 13450 ;; This function uses a non-reentrant model
 13451 ;;
 13452                           
 13453                           	psect	text28
 13454  0155DE                     __ptext28:
 13455                           	opt stack 0
 13456  0155DE                     _atoi:
 13457                           	opt stack 13
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;incstack = 0
 13461  0155DE  D003               	goto	l1662
 13462  0155E0  0101               	movlb	1	; () banked
 13463  0155E2  4B2B               	infsnz	atoi@s& (0+255),f,b
 13464  0155E4  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 13465  0155E6                     l1662:
 13466                           
 13467                           ; BSR set to: 1
 13468  0155E6  C12B  FFD9         	movff	atoi@s,fsr2l
 13469  0155EA  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13470  0155EE  0E20               	movlw	32
 13471  0155F0  18DE               	xorwf	postinc2,w,c
 13472  0155F2  B4D8               	btfsc	status,2,c
 13473  0155F4  D7F5               	goto	l1663
 13474  0155F6  C12B  FFD9         	movff	atoi@s,fsr2l
 13475  0155FA  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13476  0155FE  0E09               	movlw	9
 13477  015600  18DE               	xorwf	postinc2,w,c
 13478  015602  B4D8               	btfsc	status,2,c
 13479  015604  D7ED               	goto	l1663
 13480  015606  0E00               	movlw	0
 13481  015608  0101               	movlb	1	; () banked
 13482  01560A  6F31               	movwf	(atoi@a+1)& (0+255),b
 13483  01560C  0E00               	movlw	0
 13484  01560E  6F30               	movwf	atoi@a& (0+255),b
 13485  015610  0E00               	movlw	0
 13486  015612  6F2F               	movwf	atoi@sign& (0+255),b
 13487                           
 13488                           ; BSR set to: 1
 13489  015614  C12B  FFD9         	movff	atoi@s,fsr2l
 13490  015618  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13491  01561C  0E2D               	movlw	45
 13492  01561E  18DE               	xorwf	postinc2,w,c
 13493  015620  A4D8               	btfss	status,2,c
 13494  015622  D002               	goto	l1665
 13495                           
 13496                           ; BSR set to: 1
 13497  015624  2B2F               	incf	atoi@sign& (0+255),f,b
 13498  015626  D026               	goto	l11536
 13499  015628                     l1665:
 13500                           
 13501                           ; BSR set to: 1
 13502                           
 13503                           ; BSR set to: 1
 13504  015628  C12B  FFD9         	movff	atoi@s,fsr2l
 13505  01562C  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13506  015630  0E2B               	movlw	43
 13507  015632  18DE               	xorwf	postinc2,w,c
 13508  015634  A4D8               	btfss	status,2,c
 13509  015636  D020               	goto	l1668
 13510  015638  D01D               	goto	l11536
 13511  01563A                     
 13512                           ; BSR set to: 1
 13513  01563A  C130  F125         	movff	atoi@a,___wmul@multiplier
 13514  01563E  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
 13515  015642  0E00               	movlw	0
 13516  015644  0101               	movlb	1	; () banked
 13517  015646  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13518  015648  0E0A               	movlw	10
 13519  01564A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13520  01564C  ECF4  F0B6         	call	___wmul	;wreg free
 13521  015650  C12B  FFD9         	movff	atoi@s,fsr2l
 13522  015654  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13523  015658  50DF               	movf	indf2,w,c
 13524  01565A  0101               	movlb	1	; () banked
 13525  01565C  6F2D               	movwf	??_atoi& (0+255),b
 13526  01565E  6B2E               	clrf	(??_atoi+1)& (0+255),b
 13527  015660  5125               	movf	?___wmul& (0+255),w,b
 13528  015662  272D               	addwf	??_atoi& (0+255),f,b
 13529  015664  5126               	movf	(?___wmul+1)& (0+255),w,b
 13530  015666  232E               	addwfc	(??_atoi+1)& (0+255),f,b
 13531  015668  0ED0               	movlw	208
 13532  01566A  252D               	addwf	??_atoi& (0+255),w,b
 13533  01566C  6F30               	movwf	atoi@a& (0+255),b
 13534  01566E  0EFF               	movlw	255
 13535  015670  212E               	addwfc	(??_atoi+1)& (0+255),w,b
 13536  015672  6F31               	movwf	(atoi@a+1)& (0+255),b
 13537  015674                     l11536:
 13538                           
 13539                           ; BSR set to: 1
 13540  015674  4B2B               	infsnz	atoi@s& (0+255),f,b
 13541  015676  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 13542  015678                     l1668:
 13543                           
 13544                           ; BSR set to: 1
 13545                           
 13546                           ; BSR set to: 1
 13547  015678  C12B  FFD9         	movff	atoi@s,fsr2l
 13548  01567C  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13549  015680  50DF               	movf	indf2,w,c
 13550  015682  ECA0  F0B7         	call	_isdigit
 13551  015686  B0D8               	btfsc	status,0,c
 13552  015688  D7D8               	goto	l1669
 13553  01568A  0101               	movlb	1	; () banked
 13554  01568C  512F               	movf	atoi@sign& (0+255),w,b
 13555  01568E  B4D8               	btfsc	status,2,c
 13556  015690  D00D               	goto	l1671
 13557                           
 13558                           ; BSR set to: 1
 13559  015692  C130  F12D         	movff	atoi@a,??_atoi
 13560  015696  C131  F12E         	movff	atoi@a+1,??_atoi+1
 13561  01569A  1F2D               	comf	??_atoi& (0+255),f,b
 13562  01569C  1F2E               	comf	(??_atoi+1)& (0+255),f,b
 13563  01569E  4B2D               	infsnz	??_atoi& (0+255),f,b
 13564  0156A0  2B2E               	incf	(??_atoi+1)& (0+255),f,b
 13565  0156A2  C12D  F12B         	movff	??_atoi,?_atoi
 13566  0156A6  C12E  F12C         	movff	??_atoi+1,?_atoi+1
 13567  0156AA  0012               	return	
 13568  0156AC                     l1671:
 13569                           
 13570                           ; BSR set to: 1
 13571  0156AC  C130  F12B         	movff	atoi@a,?_atoi
 13572  0156B0  C131  F12C         	movff	atoi@a+1,?_atoi+1
 13573                           
 13574                           ; BSR set to: 1
 13575  0156B4  0012               	return		;funcret
 13576  0156B6                     __end_of_atoi:
 13577                           	opt stack 0
 13578                           tblptru	equ	0xFF8
 13579                           tblptrh	equ	0xFF7
 13580                           tblptrl	equ	0xFF6
 13581                           tablat	equ	0xFF5
 13582                           prodh	equ	0xFF4
 13583                           prodl	equ	0xFF3
 13584                           intcon	equ	0xFF2
 13585                           indf0	equ	0xFEF
 13586                           postinc0	equ	0xFEE
 13587                           fsr0h	equ	0xFEA
 13588                           fsr0l	equ	0xFE9
 13589                           wreg	equ	0xFE8
 13590                           indf1	equ	0xFE7
 13591                           postdec1	equ	0xFE5
 13592                           plusw1	equ	0xFE3
 13593                           fsr1h	equ	0xFE2
 13594                           fsr1l	equ	0xFE1
 13595                           indf2	equ	0xFDF
 13596                           postinc2	equ	0xFDE
 13597                           postdec2	equ	0xFDD
 13598                           plusw2	equ	0xFDB
 13599                           fsr2h	equ	0xFDA
 13600                           fsr2l	equ	0xFD9
 13601                           status	equ	0xFD8
 13602                           
 13603 ;; *************** function ___ftdiv *****************
 13604 ;; Defined at:
 13605 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  f1              3   55[BANK1 ] float 
 13608 ;;  f2              3   58[BANK1 ] float 
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;  f3              3   65[BANK1 ] float 
 13611 ;;  sign            1   69[BANK1 ] unsigned char 
 13612 ;;  exp             1   68[BANK1 ] unsigned char 
 13613 ;;  cntr            1   64[BANK1 ] unsigned char 
 13614 ;; Return value:  Size  Location     Type
 13615 ;;                  3   55[BANK1 ] float 
 13616 ;; Registers used:
 13617 ;;		wreg, status,2, status,0, cstack
 13618 ;; Tracked objects:
 13619 ;;		On entry : 0/0
 13620 ;;		On exit  : 0/0
 13621 ;;		Unchanged: 0/0
 13622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13623 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13624 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13625 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13626 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13627 ;;Total ram usage:       15 bytes
 13628 ;; Hardware stack levels used:    1
 13629 ;; Hardware stack levels required when called:   15
 13630 ;; This function calls:
 13631 ;;		___ftpack
 13632 ;; This function is called by:
 13633 ;;		_ringBufferLUT
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637                           	psect	text29
 13638  015174                     __ptext29:
 13639                           	opt stack 0
 13640  015174                     ___ftdiv:
 13641                           	opt stack 13
 13642                           
 13643                           ; BSR set to: 1
 13644                           ;incstack = 0
 13645  015174  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
 13646  015178  0101               	movlb	1	; () banked
 13647  01517A  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 13648  01517C  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 13649  01517E  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 13650  015180  373D               	rlcf	??___ftdiv& (0+255),f,b
 13651  015182  E301               	bnc	u14181
 13652  015184  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 13653  015186                     u14181:
 13654  015186  513D               	movf	??___ftdiv& (0+255),w,b
 13655  015188  6F44               	movwf	___ftdiv@exp& (0+255),b
 13656  01518A  5144               	movf	___ftdiv@exp& (0+255),w,b
 13657  01518C  A4D8               	btfss	status,2,c
 13658  01518E  D007               	goto	l1821
 13659                           
 13660                           ; BSR set to: 1
 13661  015190  0E00               	movlw	0
 13662  015192  6F37               	movwf	?___ftdiv& (0+255),b
 13663  015194  0E00               	movlw	0
 13664  015196  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 13665  015198  0E00               	movlw	0
 13666  01519A  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 13667                           
 13668                           ; BSR set to: 1
 13669  01519C  0012               	return	
 13670  01519E                     l1821:
 13671                           
 13672                           ; BSR set to: 1
 13673                           
 13674                           ; BSR set to: 1
 13675  01519E  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
 13676  0151A2  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 13677  0151A4  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 13678  0151A6  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 13679  0151A8  373D               	rlcf	??___ftdiv& (0+255),f,b
 13680  0151AA  E301               	bnc	u14201
 13681  0151AC  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 13682  0151AE                     u14201:
 13683  0151AE  513D               	movf	??___ftdiv& (0+255),w,b
 13684  0151B0  6F45               	movwf	___ftdiv@sign& (0+255),b
 13685  0151B2  5145               	movf	___ftdiv@sign& (0+255),w,b
 13686  0151B4  A4D8               	btfss	status,2,c
 13687  0151B6  D007               	goto	l1823
 13688                           
 13689                           ; BSR set to: 1
 13690  0151B8  0E00               	movlw	0
 13691  0151BA  6F37               	movwf	?___ftdiv& (0+255),b
 13692  0151BC  0E00               	movlw	0
 13693  0151BE  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 13694  0151C0  0E00               	movlw	0
 13695  0151C2  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 13696                           
 13697                           ; BSR set to: 1
 13698  0151C4  0012               	return	
 13699  0151C6                     l1823:
 13700                           
 13701                           ; BSR set to: 1
 13702                           
 13703                           ; BSR set to: 1
 13704  0151C6  0E00               	movlw	0
 13705  0151C8  6F41               	movwf	___ftdiv@f3& (0+255),b
 13706  0151CA  0E00               	movlw	0
 13707  0151CC  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
 13708  0151CE  0E00               	movlw	0
 13709  0151D0  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
 13710                           
 13711                           ; BSR set to: 1
 13712  0151D2  5145               	movf	___ftdiv@sign& (0+255),w,b
 13713  0151D4  0F89               	addlw	137
 13714  0151D6  5F44               	subwf	___ftdiv@exp& (0+255),f,b
 13715                           
 13716                           ; BSR set to: 1
 13717  0151D8  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
 13718                           
 13719                           ; BSR set to: 1
 13720  0151DC  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13721  0151DE  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
 13722                           
 13723                           ; BSR set to: 1
 13724  0151E0  0E80               	movlw	128
 13725  0151E2  1745               	andwf	___ftdiv@sign& (0+255),f,b
 13726                           
 13727                           ; BSR set to: 1
 13728  0151E4  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 13729                           
 13730                           ; BSR set to: 1
 13731  0151E6  0EFF               	movlw	255
 13732  0151E8  1737               	andwf	___ftdiv@f1& (0+255),f,b
 13733  0151EA  0EFF               	movlw	255
 13734  0151EC  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 13735  0151EE  0E00               	movlw	0
 13736  0151F0  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 13737                           
 13738                           ; BSR set to: 1
 13739  0151F2  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 13740                           
 13741                           ; BSR set to: 1
 13742  0151F4  0EFF               	movlw	255
 13743  0151F6  173A               	andwf	___ftdiv@f2& (0+255),f,b
 13744  0151F8  0EFF               	movlw	255
 13745  0151FA  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 13746  0151FC  0E00               	movlw	0
 13747  0151FE  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 13748                           
 13749                           ; BSR set to: 1
 13750  015200  0E18               	movlw	24
 13751  015202  6F40               	movwf	___ftdiv@cntr& (0+255),b
 13752  015204                     
 13753                           ; BSR set to: 1
 13754                           
 13755                           ; BSR set to: 1
 13756  015204  90D8               	bcf	status,0,c
 13757  015206  3741               	rlcf	___ftdiv@f3& (0+255),f,b
 13758  015208  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 13759  01520A  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 13760                           
 13761                           ; BSR set to: 1
 13762  01520C  513A               	movf	___ftdiv@f2& (0+255),w,b
 13763  01520E  5D37               	subwf	___ftdiv@f1& (0+255),w,b
 13764  015210  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13765  015212  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 13766  015214  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13767  015216  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 13768  015218  A0D8               	btfss	status,0,c
 13769  01521A  D007               	goto	l1825
 13770                           
 13771                           ; BSR set to: 1
 13772  01521C  513A               	movf	___ftdiv@f2& (0+255),w,b
 13773  01521E  5F37               	subwf	___ftdiv@f1& (0+255),f,b
 13774  015220  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13775  015222  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 13776  015224  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13777  015226  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 13778                           
 13779                           ; BSR set to: 1
 13780  015228  8141               	bsf	___ftdiv@f3& (0+255),0,b
 13781  01522A                     l1825:
 13782                           
 13783                           ; BSR set to: 1
 13784  01522A  90D8               	bcf	status,0,c
 13785  01522C  3737               	rlcf	___ftdiv@f1& (0+255),f,b
 13786  01522E  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 13787  015230  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 13788                           
 13789                           ; BSR set to: 1
 13790  015232  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
 13791  015234  D7E7               	goto	l1824
 13792                           
 13793                           ; BSR set to: 1
 13794                           
 13795                           ; BSR set to: 1
 13796  015236  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
 13797  01523A  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
 13798  01523E  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
 13799  015242  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
 13800  015246  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
 13801  01524A  EC22  F0AC         	call	___ftpack	;wreg free
 13802  01524E  C117  F137         	movff	?___ftpack,?___ftdiv
 13803  015252  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
 13804  015256  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
 13805  01525A  0012               	return	
 13806  01525C                     __end_of___ftdiv:
 13807                           	opt stack 0
 13808                           tblptru	equ	0xFF8
 13809                           tblptrh	equ	0xFF7
 13810                           tblptrl	equ	0xFF6
 13811                           tablat	equ	0xFF5
 13812                           prodh	equ	0xFF4
 13813                           prodl	equ	0xFF3
 13814                           intcon	equ	0xFF2
 13815                           indf0	equ	0xFEF
 13816                           postinc0	equ	0xFEE
 13817                           fsr0h	equ	0xFEA
 13818                           fsr0l	equ	0xFE9
 13819                           wreg	equ	0xFE8
 13820                           indf1	equ	0xFE7
 13821                           postdec1	equ	0xFE5
 13822                           plusw1	equ	0xFE3
 13823                           fsr1h	equ	0xFE2
 13824                           fsr1l	equ	0xFE1
 13825                           indf2	equ	0xFDF
 13826                           postinc2	equ	0xFDE
 13827                           postdec2	equ	0xFDD
 13828                           plusw2	equ	0xFDB
 13829                           fsr2h	equ	0xFDA
 13830                           fsr2l	equ	0xFD9
 13831                           status	equ	0xFD8
 13832                           
 13833 ;; *************** function ___awtoft *****************
 13834 ;; Defined at:
 13835 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13836 ;; Parameters:    Size  Location     Type
 13837 ;;  c               2   31[BANK1 ] int 
 13838 ;; Auto vars:     Size  Location     Type
 13839 ;;  sign            1   34[BANK1 ] unsigned char 
 13840 ;; Return value:  Size  Location     Type
 13841 ;;                  3   31[BANK1 ] float 
 13842 ;; Registers used:
 13843 ;;		wreg, status,2, status,0, cstack
 13844 ;; Tracked objects:
 13845 ;;		On entry : 0/0
 13846 ;;		On exit  : 0/0
 13847 ;;		Unchanged: 0/0
 13848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13849 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13850 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13852 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13853 ;;Total ram usage:        4 bytes
 13854 ;; Hardware stack levels used:    1
 13855 ;; Hardware stack levels required when called:   15
 13856 ;; This function calls:
 13857 ;;		___ftpack
 13858 ;; This function is called by:
 13859 ;;		_ringBufferLUT
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863                           	psect	text30
 13864  016C16                     __ptext30:
 13865                           	opt stack 0
 13866  016C16                     ___awtoft:
 13867                           	opt stack 13
 13868                           
 13869                           ;incstack = 0
 13870  016C16  0E00               	movlw	0
 13871  016C18  0101               	movlb	1	; () banked
 13872  016C1A  6F22               	movwf	___awtoft@sign& (0+255),b
 13873                           
 13874                           ; BSR set to: 1
 13875  016C1C  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
 13876  016C1E  D006               	goto	l1709
 13877                           
 13878                           ; BSR set to: 1
 13879  016C20  6D1F               	negf	___awtoft@c& (0+255),b
 13880  016C22  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
 13881  016C24  B0D8               	btfsc	status,0,c
 13882  016C26  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
 13883                           
 13884                           ; BSR set to: 1
 13885  016C28  0E01               	movlw	1
 13886  016C2A  6F22               	movwf	___awtoft@sign& (0+255),b
 13887  016C2C                     l1709:
 13888                           
 13889                           ; BSR set to: 1
 13890                           
 13891                           ; BSR set to: 1
 13892  016C2C  C11F  F117         	movff	___awtoft@c,___ftpack@arg
 13893  016C30  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
 13894  016C34  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
 13895  016C36  0E8E               	movlw	142
 13896  016C38  6F1A               	movwf	___ftpack@exp& (0+255),b
 13897  016C3A  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
 13898  016C3E  EC22  F0AC         	call	___ftpack	;wreg free
 13899  016C42  C117  F11F         	movff	?___ftpack,?___awtoft
 13900  016C46  C118  F120         	movff	?___ftpack+1,?___awtoft+1
 13901  016C4A  C119  F121         	movff	?___ftpack+2,?___awtoft+2
 13902  016C4E  0012               	return	
 13903  016C50                     __end_of___awtoft:
 13904                           	opt stack 0
 13905                           tblptru	equ	0xFF8
 13906                           tblptrh	equ	0xFF7
 13907                           tblptrl	equ	0xFF6
 13908                           tablat	equ	0xFF5
 13909                           prodh	equ	0xFF4
 13910                           prodl	equ	0xFF3
 13911                           intcon	equ	0xFF2
 13912                           indf0	equ	0xFEF
 13913                           postinc0	equ	0xFEE
 13914                           fsr0h	equ	0xFEA
 13915                           fsr0l	equ	0xFE9
 13916                           wreg	equ	0xFE8
 13917                           indf1	equ	0xFE7
 13918                           postdec1	equ	0xFE5
 13919                           plusw1	equ	0xFE3
 13920                           fsr1h	equ	0xFE2
 13921                           fsr1l	equ	0xFE1
 13922                           indf2	equ	0xFDF
 13923                           postinc2	equ	0xFDE
 13924                           postdec2	equ	0xFDD
 13925                           plusw2	equ	0xFDB
 13926                           fsr2h	equ	0xFDA
 13927                           fsr2l	equ	0xFD9
 13928                           status	equ	0xFD8
 13929                           
 13930 ;; *************** function _TMR7_StartTimer *****************
 13931 ;; Defined at:
 13932 ;;		line 99 in file "mcc_generated_files/tmr7.c"
 13933 ;; Parameters:    Size  Location     Type
 13934 ;;		None
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;		None
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      void 
 13939 ;; Registers used:
 13940 ;;		None
 13941 ;; Tracked objects:
 13942 ;;		On entry : 0/0
 13943 ;;		On exit  : 0/0
 13944 ;;		Unchanged: 0/0
 13945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13950 ;;Total ram usage:        0 bytes
 13951 ;; Hardware stack levels used:    1
 13952 ;; Hardware stack levels required when called:   14
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_ringBufferLUT
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           	psect	text31
 13961  017144                     __ptext31:
 13962                           	opt stack 0
 13963  017144                     _TMR7_StartTimer:
 13964                           	opt stack 14
 13965                           
 13966                           ;tmr7.c: 102: T7CONbits.TMR7ON = 1;
 13967                           
 13968                           ;incstack = 0
 13969  017144  010F               	movlb	15	; () banked
 13970  017146  8130               	bsf	48,0,b	;volatile
 13971                           
 13972                           ; BSR set to: 15
 13973  017148  0012               	return		;funcret
 13974  01714A                     __end_of_TMR7_StartTimer:
 13975                           	opt stack 0
 13976                           tblptru	equ	0xFF8
 13977                           tblptrh	equ	0xFF7
 13978                           tblptrl	equ	0xFF6
 13979                           tablat	equ	0xFF5
 13980                           prodh	equ	0xFF4
 13981                           prodl	equ	0xFF3
 13982                           intcon	equ	0xFF2
 13983                           indf0	equ	0xFEF
 13984                           postinc0	equ	0xFEE
 13985                           fsr0h	equ	0xFEA
 13986                           fsr0l	equ	0xFE9
 13987                           wreg	equ	0xFE8
 13988                           indf1	equ	0xFE7
 13989                           postdec1	equ	0xFE5
 13990                           plusw1	equ	0xFE3
 13991                           fsr1h	equ	0xFE2
 13992                           fsr1l	equ	0xFE1
 13993                           indf2	equ	0xFDF
 13994                           postinc2	equ	0xFDE
 13995                           postdec2	equ	0xFDD
 13996                           plusw2	equ	0xFDB
 13997                           fsr2h	equ	0xFDA
 13998                           fsr2l	equ	0xFD9
 13999                           status	equ	0xFD8
 14000                           
 14001 ;; *************** function _EUSART2_Read *****************
 14002 ;; Defined at:
 14003 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;		None
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  readValue       1   23[BANK1 ] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1    wreg      unsigned char 
 14010 ;; Registers used:
 14011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14018 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14020 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14021 ;;Total ram usage:        1 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; Hardware stack levels required when called:   14
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		_terminal_ringBufferPull
 14028 ;;		_getch
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text32
 14033  016A0E                     __ptext32:
 14034                           	opt stack 0
 14035  016A0E                     _EUSART2_Read:
 14036                           	opt stack 15
 14037                           
 14038                           ;eusart2.c: 139: uint8_t readValue = 0;
 14039                           
 14040                           ; BSR set to: 15
 14041                           ;incstack = 0
 14042  016A0E  0E00               	movlw	0
 14043  016A10  0101               	movlb	1	; () banked
 14044  016A12  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 14045                           
 14046                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 14047  016A14  D002               	goto	l381
 14048  016A16                     l382:
 14049                           
 14050                           ; BSR set to: 1
 14051  016A16  0004               	clrwdt		;# 
 14052                           
 14053                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 14054  016A18  827E               	bsf	3966,1,c	;volatile
 14055  016A1A                     l381:
 14056  016A1A  0101               	movlb	1	; () banked
 14057  016A1C  51D2               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 14058  016A1E  B4D8               	btfsc	status,2,c
 14059  016A20  D7FA               	goto	l382
 14060                           
 14061                           ; BSR set to: 1
 14062                           ;eusart2.c: 145: }
 14063                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 14064  016A22  927E               	bcf	3966,1,c	;volatile
 14065                           
 14066                           ; BSR set to: 1
 14067                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 14068  016A24  51D3               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 14069  016A26  0D01               	mullw	1
 14070  016A28  0E00               	movlw	low _eusart2RxBuffer
 14071  016A2A  24F3               	addwf	prodl,w,c
 14072  016A2C  6ED9               	movwf	fsr2l,c
 14073  016A2E  0E02               	movlw	high _eusart2RxBuffer
 14074  016A30  20F4               	addwfc	prodh,w,c
 14075  016A32  6EDA               	movwf	fsr2h,c
 14076  016A34  50DF               	movf	indf2,w,c
 14077  016A36  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 14078                           
 14079                           ; BSR set to: 1
 14080  016A38  2BD3               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 14081                           
 14082                           ; BSR set to: 1
 14083                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 14084  016A3A  0E3F               	movlw	63
 14085  016A3C  65D3               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 14086  016A3E  D002               	goto	l384
 14087                           
 14088                           ; BSR set to: 1
 14089                           ;eusart2.c: 151: {
 14090                           ;eusart2.c: 152: eusart2RxTail = 0;
 14091  016A40  0E00               	movlw	0
 14092  016A42  6FD3               	movwf	_eusart2RxTail& (0+255),b	;volatile
 14093  016A44                     l384:
 14094                           
 14095                           ; BSR set to: 1
 14096                           ;eusart2.c: 153: }
 14097                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 14098                           
 14099                           ; BSR set to: 1
 14100  016A44  010E               	movlb	14	; () banked
 14101  016A46  9F2C               	bcf	44,7,b	;volatile
 14102                           
 14103                           ; BSR set to: 14
 14104                           ;eusart2.c: 155: eusart2RxCount--;
 14105  016A48  0101               	movlb	1	; () banked
 14106  016A4A  07D2               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 14107                           
 14108                           ; BSR set to: 1
 14109                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 14110  016A4C  010E               	movlb	14	; () banked
 14111  016A4E  8F2C               	bsf	44,7,b	;volatile
 14112                           
 14113                           ; BSR set to: 14
 14114                           ;eusart2.c: 158: return readValue;
 14115  016A50  0101               	movlb	1	; () banked
 14116  016A52  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 14117  016A54  0012               	return	
 14118  016A56                     __end_of_EUSART2_Read:
 14119                           	opt stack 0
 14120                           tblptru	equ	0xFF8
 14121                           tblptrh	equ	0xFF7
 14122                           tblptrl	equ	0xFF6
 14123                           tablat	equ	0xFF5
 14124                           prodh	equ	0xFF4
 14125                           prodl	equ	0xFF3
 14126                           intcon	equ	0xFF2
 14127                           indf0	equ	0xFEF
 14128                           postinc0	equ	0xFEE
 14129                           fsr0h	equ	0xFEA
 14130                           fsr0l	equ	0xFE9
 14131                           wreg	equ	0xFE8
 14132                           indf1	equ	0xFE7
 14133                           postdec1	equ	0xFE5
 14134                           plusw1	equ	0xFE3
 14135                           fsr1h	equ	0xFE2
 14136                           fsr1l	equ	0xFE1
 14137                           indf2	equ	0xFDF
 14138                           postinc2	equ	0xFDE
 14139                           postdec2	equ	0xFDD
 14140                           plusw2	equ	0xFDB
 14141                           fsr2h	equ	0xFDA
 14142                           fsr2l	equ	0xFD9
 14143                           status	equ	0xFD8
 14144                           
 14145 ;; *************** function _terminal_clearTerminal *****************
 14146 ;; Defined at:
 14147 ;;		line 80 in file "ring_buffer_interface.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;		None
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;		None
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  1    wreg      void 
 14154 ;; Registers used:
 14155 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/0
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14165 ;;Total ram usage:        0 bytes
 14166 ;; Hardware stack levels used:    1
 14167 ;; Hardware stack levels required when called:   18
 14168 ;; This function calls:
 14169 ;;		_printf
 14170 ;; This function is called by:
 14171 ;;		_main
 14172 ;; This function uses a non-reentrant model
 14173 ;;
 14174                           
 14175                           	psect	text33
 14176  017080                     __ptext33:
 14177                           	opt stack 0
 14178  017080                     _terminal_clearTerminal:
 14179                           	opt stack 12
 14180                           
 14181                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 14182                           
 14183                           ; BSR set to: 1
 14184                           ;incstack = 0
 14185  017080  0EAF               	movlw	low STR_2
 14186  017082  0101               	movlb	1	; () banked
 14187  017084  6F64               	movwf	printf@f& (0+255),b
 14188  017086  0EFF               	movlw	high STR_2
 14189  017088  6F65               	movwf	(printf@f+1)& (0+255),b
 14190  01708A  ECB0  F086         	call	_printf	;wreg free
 14191  01708E  0012               	return		;funcret
 14192  017090                     __end_of_terminal_clearTerminal:
 14193                           	opt stack 0
 14194                           tblptru	equ	0xFF8
 14195                           tblptrh	equ	0xFF7
 14196                           tblptrl	equ	0xFF6
 14197                           tablat	equ	0xFF5
 14198                           prodh	equ	0xFF4
 14199                           prodl	equ	0xFF3
 14200                           intcon	equ	0xFF2
 14201                           indf0	equ	0xFEF
 14202                           postinc0	equ	0xFEE
 14203                           fsr0h	equ	0xFEA
 14204                           fsr0l	equ	0xFE9
 14205                           wreg	equ	0xFE8
 14206                           indf1	equ	0xFE7
 14207                           postdec1	equ	0xFE5
 14208                           plusw1	equ	0xFE3
 14209                           fsr1h	equ	0xFE2
 14210                           fsr1l	equ	0xFE1
 14211                           indf2	equ	0xFDF
 14212                           postinc2	equ	0xFDE
 14213                           postdec2	equ	0xFDD
 14214                           plusw2	equ	0xFDB
 14215                           fsr2h	equ	0xFDA
 14216                           fsr2l	equ	0xFD9
 14217                           status	equ	0xFD8
 14218                           
 14219 ;; *************** function _printf *****************
 14220 ;; Defined at:
 14221 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;  f               2  100[BANK1 ] PTR const unsigned char 
 14224 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(37), 
 14225 ;;		 -> STR_115(33), STR_114(2031), STR_112(53), STR_110(58), 
 14226 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 14227 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 14228 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 14229 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 14230 ;;		 -> STR_81(34), STR_79(34), STR_77(35), STR_75(45), 
 14231 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 14232 ;;		 -> STR_59(49), STR_58(64), STR_56(34), STR_54(82), 
 14233 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 14234 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 14235 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 14236 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 14237 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  idx             1  119[BANK1 ] unsigned char 
 14240 ;;  val             4  134[BANK1 ] unsigned long 
 14241 ;;  tmpval          4  130[BANK1 ] struct .
 14242 ;;  fval            3  138[BANK1 ] struct .
 14243 ;;  prec            2  141[BANK1 ] int 
 14244 ;;  exp             2  128[BANK1 ] int 
 14245 ;;  flag            2  126[BANK1 ] unsigned short 
 14246 ;;  ap              2  124[BANK1 ] PTR void [1]
 14247 ;;		 -> ?i2_printf(2), ?_printf(2), 
 14248 ;;  cp              2  122[BANK1 ] PTR const unsigned char 
 14249 ;;		 -> STR_135(7), printf@c(1), STR_134(30), STR_133(22), 
 14250 ;;		 -> STR_132(21), STR_131(27), STR_130(29), STR_129(41), 
 14251 ;;		 -> STR_128(28), STR_127(32), STR_126(25), STR_125(19), 
 14252 ;;		 -> STR_124(16), STR_123(15), RAM(3561), ringBufferLUT@channel_name(22), 
 14253 ;;		 -> TRIAC_Firing_Angle(3), 
 14254 ;;  len             2  120[BANK1 ] unsigned int 
 14255 ;;  width           2    0        int 
 14256 ;;  c               1  143[BANK1 ] char 
 14257 ;;  d               1    0        unsigned char 
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  2  100[BANK1 ] int 
 14260 ;; Registers used:
 14261 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14262 ;; Tracked objects:
 14263 ;;		On entry : 0/0
 14264 ;;		On exit  : 0/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14267 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14268 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14269 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14270 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14271 ;;Total ram usage:       44 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:   17
 14274 ;; This function calls:
 14275 ;;		___awdiv
 14276 ;;		___ftadd
 14277 ;;		___ftge
 14278 ;;		___ftmul
 14279 ;;		___ftneg
 14280 ;;		___ftsub
 14281 ;;		___fttol
 14282 ;;		___lldiv
 14283 ;;		___llmod
 14284 ;;		___lltoft
 14285 ;;		___wmul
 14286 ;;		__div_to_l_
 14287 ;;		__tdiv_to_l_
 14288 ;;		_fround
 14289 ;;		_isdigit
 14290 ;;		_putch
 14291 ;;		_scale
 14292 ;; This function is called by:
 14293 ;;		_terminal_clearTerminal
 14294 ;;		_terminal_setCursorHome
 14295 ;;		_terminal_textAttributes
 14296 ;;		_terminal_printNewline
 14297 ;;		_ringBufferLUT
 14298 ;;		_terminal_printResetMessage
 14299 ;;		_terminal_clearLine
 14300 ;;		_terminal_saveCursor
 14301 ;;		_terminal_returnCursor
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           	psect	text34
 14306  010D60                     __ptext34:
 14307                           	opt stack 0
 14308  010D60                     _printf:
 14309                           	opt stack 11
 14310                           
 14311                           ;doprnt.c: 466: va_list ap;
 14312                           ;doprnt.c: 499: signed char c;
 14313                           ;doprnt.c: 501: int width;
 14314                           ;doprnt.c: 504: int prec;
 14315                           ;doprnt.c: 508: unsigned short flag;
 14316                           ;doprnt.c: 515: char d;
 14317                           ;doprnt.c: 516: double fval;
 14318                           ;doprnt.c: 517: int exp;
 14319                           ;doprnt.c: 523: union {
 14320                           ;doprnt.c: 524: unsigned long vd;
 14321                           ;doprnt.c: 525: double integ;
 14322                           ;doprnt.c: 526: } tmpval;
 14323                           ;doprnt.c: 528: unsigned long val;
 14324                           ;doprnt.c: 529: unsigned len;
 14325                           ;doprnt.c: 530: const char * cp;
 14326                           ;doprnt.c: 533: *ap = __va_start();
 14327                           
 14328                           ;incstack = 0
 14329  010D60  0E66               	movlw	low (?_printf+2)
 14330  010D62  0101               	movlb	1	; () banked
 14331  010D64  6F7C               	movwf	printf@ap& (0+255),b
 14332  010D66  0E01               	movlw	high (?_printf+2)
 14333  010D68  6F7D               	movwf	(printf@ap+1)& (0+255),b
 14334                           
 14335                           ;doprnt.c: 536: while(c = *f++) {
 14336  010D6A  EFEE  F08B         	goto	u12950
 14337  010D6E                     
 14338                           ; BSR set to: 1
 14339                           ;doprnt.c: 538: if(c != '%')
 14340                           
 14341                           ; BSR set to: 1
 14342  010D6E  0E25               	movlw	37
 14343  010D70  198F               	xorwf	printf@c& (0+255),w,b
 14344  010D72  B4D8               	btfsc	status,2,c
 14345  010D74  D005               	goto	l1368
 14346                           
 14347                           ; BSR set to: 1
 14348                           ;doprnt.c: 540: {
 14349                           ;doprnt.c: 541: (putch(c) );
 14350  010D76  518F               	movf	printf@c& (0+255),w,b
 14351  010D78  EC57  F0B8         	call	_putch
 14352                           
 14353                           ;doprnt.c: 542: continue;
 14354  010D7C  EFEE  F08B         	goto	u12950
 14355  010D80                     l1368:
 14356                           
 14357                           ;doprnt.c: 543: }
 14358                           ;doprnt.c: 548: flag = 0;
 14359  010D80  0E00               	movlw	0
 14360  010D82  0101               	movlb	1	; () banked
 14361  010D84  6F7F               	movwf	(printf@flag+1)& (0+255),b
 14362  010D86  0E00               	movlw	0
 14363  010D88  6F7E               	movwf	printf@flag& (0+255),b
 14364                           
 14365                           ; BSR set to: 1
 14366                           ;doprnt.c: 611: if(*f == '.') {
 14367  010D8A  C164  FFF6         	movff	printf@f,tblptrl
 14368  010D8E  C165  FFF7         	movff	printf@f+1,tblptrh
 14369  010D92  0E00               	movlw	low (__mediumconst shr (0+16))
 14370  010D94  6EF8               	movwf	tblptru,c
 14371  010D96  0E0D               	movlw	(high __ramtop+-1)
 14372  010D98  64F7               	cpfsgt	tblptrh,c
 14373  010D9A  D003               	bra	u12457
 14374  010D9C  0008               	tblrd		*
 14375  010D9E  50F5               	movf	tablat,w,c
 14376  010DA0  D005               	bra	u12450
 14377  010DA2                     u12457:
 14378  010DA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14379  010DA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14380  010DAA  50EF               	movf	indf0,w,c
 14381  010DAC                     u12450:
 14382  010DAC  0A2E               	xorlw	46
 14383  010DAE  A4D8               	btfss	status,2,c
 14384  010DB0  D049               	goto	l1369
 14385                           
 14386                           ;doprnt.c: 612: flag |= 0x4000;
 14387  010DB2  0101               	movlb	1	; () banked
 14388  010DB4  8D7F               	bsf	(printf@flag+1)& (0+255),6,b
 14389                           
 14390                           ;doprnt.c: 613: f++;
 14391  010DB6  4B64               	infsnz	printf@f& (0+255),f,b
 14392  010DB8  2B65               	incf	(printf@f+1)& (0+255),f,b
 14393                           
 14394                           ; BSR set to: 1
 14395                           ;doprnt.c: 620: {
 14396                           ;doprnt.c: 621: prec = 0;
 14397  010DBA  0E00               	movlw	0
 14398  010DBC  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14399  010DBE  0E00               	movlw	0
 14400  010DC0  6F8D               	movwf	printf@prec& (0+255),b
 14401                           
 14402                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14403  010DC2  D02A               	goto	l1370
 14404  010DC4                     
 14405                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14406                           
 14407                           ; BSR set to: 1
 14408  010DC4  C18D  F125         	movff	printf@prec,___wmul@multiplier
 14409  010DC8  C18E  F126         	movff	printf@prec+1,___wmul@multiplier+1
 14410  010DCC  0E00               	movlw	0
 14411  010DCE  0101               	movlb	1	; () banked
 14412  010DD0  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14413  010DD2  0E0A               	movlw	10
 14414  010DD4  6F27               	movwf	___wmul@multiplicand& (0+255),b
 14415  010DD6  ECF4  F0B6         	call	___wmul	;wreg free
 14416  010DDA  C164  FFF6         	movff	printf@f,tblptrl
 14417  010DDE  C165  FFF7         	movff	printf@f+1,tblptrh
 14418  010DE2  0E00               	movlw	low (__mediumconst shr (0+16))
 14419  010DE4  6EF8               	movwf	tblptru,c
 14420  010DE6  0E0D               	movlw	(high __ramtop+-1)
 14421  010DE8  64F7               	cpfsgt	tblptrh,c
 14422  010DEA  D003               	bra	u12477
 14423  010DEC  0008               	tblrd		*
 14424  010DEE  50F5               	movf	tablat,w,c
 14425  010DF0  D005               	bra	u12470
 14426  010DF2                     u12477:
 14427  010DF2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14428  010DF6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14429  010DFA  50EF               	movf	indf0,w,c
 14430  010DFC                     u12470:
 14431  010DFC  0101               	movlb	1	; () banked
 14432  010DFE  6F6E               	movwf	??_printf& (0+255),b
 14433  010E00  516E               	movf	??_printf& (0+255),w,b
 14434  010E02  2725               	addwf	?___wmul& (0+255),f,b
 14435  010E04  0E00               	movlw	0
 14436  010E06  2326               	addwfc	(?___wmul+1)& (0+255),f,b
 14437  010E08  0ED0               	movlw	208
 14438  010E0A  2525               	addwf	?___wmul& (0+255),w,b
 14439  010E0C  6F8D               	movwf	printf@prec& (0+255),b
 14440  010E0E  0EFF               	movlw	255
 14441  010E10  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 14442  010E12  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14443                           
 14444                           ; BSR set to: 1
 14445  010E14  4B64               	infsnz	printf@f& (0+255),f,b
 14446  010E16  2B65               	incf	(printf@f+1)& (0+255),f,b
 14447  010E18                     l1370:
 14448                           
 14449                           ; BSR set to: 1
 14450                           
 14451                           ; BSR set to: 1
 14452  010E18  C164  FFF6         	movff	printf@f,tblptrl
 14453  010E1C  C165  FFF7         	movff	printf@f+1,tblptrh
 14454  010E20  0E00               	movlw	low (__mediumconst shr (0+16))
 14455  010E22  6EF8               	movwf	tblptru,c
 14456  010E24  0E0D               	movlw	(high __ramtop+-1)
 14457  010E26  64F7               	cpfsgt	tblptrh,c
 14458  010E28  D003               	bra	u12487
 14459  010E2A  0008               	tblrd		*
 14460  010E2C  50F5               	movf	tablat,w,c
 14461  010E2E  D005               	bra	u12480
 14462  010E30                     u12487:
 14463  010E30  CFF6 FFE9          	movff	tblptrl,fsr0l
 14464  010E34  CFF7 FFEA          	movff	tblptrh,fsr0h
 14465  010E38  50EF               	movf	indf0,w,c
 14466  010E3A                     u12480:
 14467  010E3A  ECA0  F0B7         	call	_isdigit
 14468  010E3E  A0D8               	btfss	status,0,c
 14469  010E40  D07E               	goto	l1374
 14470  010E42  D7C0               	goto	l1371
 14471  010E44                     l1369:
 14472                           
 14473                           ;doprnt.c: 626: prec = 0;
 14474  010E44  0E00               	movlw	0
 14475  010E46  0101               	movlb	1	; () banked
 14476  010E48  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14477  010E4A  0E00               	movlw	0
 14478  010E4C  6F8D               	movwf	printf@prec& (0+255),b
 14479                           
 14480                           ; BSR set to: 1
 14481                           ;doprnt.c: 628: flag |= 0x1000;
 14482  010E4E  897F               	bsf	(printf@flag+1)& (0+255),4,b
 14483                           
 14484                           ; BSR set to: 1
 14485                           ;doprnt.c: 630: }
 14486                           ;doprnt.c: 635: switch(c = *f++) {
 14487  010E50  D076               	goto	l1374
 14488  010E52                     
 14489                           ; BSR set to: 1
 14490                           ;doprnt.c: 663: flag |= 0x400;
 14491                           
 14492                           ; BSR set to: 1
 14493  010E52  857F               	bsf	(printf@flag+1)& (0+255),2,b
 14494                           
 14495                           ; BSR set to: 1
 14496                           ;doprnt.c: 698: case 'i':
 14497                           ;doprnt.c: 699: break;
 14498                           
 14499                           ; BSR set to: 1
 14500                           
 14501                           ;doprnt.c: 697: case 'd':
 14502                           
 14503                           ;doprnt.c: 664: break;
 14504  010E54  D0A8               	goto	l1378
 14505  010E56                     
 14506                           ; BSR set to: 1
 14507                           ;doprnt.c: 718: case 'x':
 14508                           ;doprnt.c: 721: flag |= 0x80;
 14509                           
 14510                           ; BSR set to: 1
 14511                           
 14512                           ; BSR set to: 1
 14513  010E56  8F7E               	bsf	printf@flag& (0+255),7,b
 14514                           
 14515                           ;doprnt.c: 723: break;
 14516  010E58  D0A6               	goto	l1378
 14517  010E5A                     
 14518                           ; BSR set to: 1
 14519                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14520                           
 14521                           ; BSR set to: 1
 14522  010E5A  C17C  FFD9         	movff	printf@ap,fsr2l
 14523  010E5E  C17D  FFDA         	movff	printf@ap+1,fsr2h
 14524  010E62  CFDE F17A          	movff	postinc2,printf@cp
 14525  010E66  CFDD F17B          	movff	postdec2,printf@cp+1
 14526                           
 14527                           ; BSR set to: 1
 14528  010E6A  0E02               	movlw	2
 14529  010E6C  277C               	addwf	printf@ap& (0+255),f,b
 14530  010E6E  0E00               	movlw	0
 14531  010E70  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 14532                           
 14533                           ; BSR set to: 1
 14534                           ;doprnt.c: 740: if(!cp)
 14535  010E72  517A               	movf	printf@cp& (0+255),w,b
 14536  010E74  117B               	iorwf	(printf@cp+1)& (0+255),w,b
 14537  010E76  A4D8               	btfss	status,2,c
 14538  010E78  D004               	goto	l1384
 14539                           
 14540                           ; BSR set to: 1
 14541                           ;doprnt.c: 741: cp = "(null)";
 14542  010E7A  0E85               	movlw	low STR_135
 14543  010E7C  6F7A               	movwf	printf@cp& (0+255),b
 14544  010E7E  0EFF               	movlw	high STR_135
 14545  010E80  6F7B               	movwf	(printf@cp+1)& (0+255),b
 14546  010E82                     l1384:
 14547                           
 14548                           ; BSR set to: 1
 14549                           ;doprnt.c: 745: len = 0;
 14550                           
 14551                           ; BSR set to: 1
 14552  010E82  0E00               	movlw	0
 14553  010E84  6F79               	movwf	(printf@len+1)& (0+255),b
 14554  010E86  0E00               	movlw	0
 14555  010E88  6F78               	movwf	printf@len& (0+255),b
 14556                           
 14557                           ;doprnt.c: 746: while(cp[len])
 14558  010E8A  D003               	goto	l1385
 14559  010E8C                     
 14560                           ;doprnt.c: 747: len++;
 14561                           
 14562                           ; BSR set to: 1
 14563  010E8C  0101               	movlb	1	; () banked
 14564  010E8E  4B78               	infsnz	printf@len& (0+255),f,b
 14565  010E90  2B79               	incf	(printf@len+1)& (0+255),f,b
 14566  010E92                     l1385:
 14567                           
 14568                           ; BSR set to: 1
 14569                           
 14570                           ; BSR set to: 1
 14571  010E92  5178               	movf	printf@len& (0+255),w,b
 14572  010E94  257A               	addwf	printf@cp& (0+255),w,b
 14573  010E96  6F6E               	movwf	??_printf& (0+255),b
 14574  010E98  5179               	movf	(printf@len+1)& (0+255),w,b
 14575  010E9A  217B               	addwfc	(printf@cp+1)& (0+255),w,b
 14576  010E9C  6F6F               	movwf	(??_printf+1)& (0+255),b
 14577  010E9E  C16E  FFF6         	movff	??_printf,tblptrl
 14578  010EA2  C16F  FFF7         	movff	??_printf+1,tblptrh
 14579  010EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 14580  010EA8  6EF8               	movwf	tblptru,c
 14581  010EAA  0E0D               	movlw	(high __ramtop+-1)
 14582  010EAC  64F7               	cpfsgt	tblptrh,c
 14583  010EAE  D003               	bra	u12517
 14584  010EB0  0008               	tblrd		*
 14585  010EB2  50F5               	movf	tablat,w,c
 14586  010EB4  D005               	bra	u12510
 14587  010EB6                     u12517:
 14588  010EB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14589  010EBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14590  010EBE  50EF               	movf	indf0,w,c
 14591  010EC0                     u12510:
 14592  010EC0  0900               	iorlw	0
 14593  010EC2  A4D8               	btfss	status,2,c
 14594  010EC4  D7E3               	goto	l1386
 14595  010EC6                     u12520:
 14596                           
 14597                           ;doprnt.c: 753: if(prec && prec < len)
 14598                           
 14599                           ;doprnt.c: 750: dostring:
 14600  010EC6  0101               	movlb	1	; () banked
 14601  010EC8  518D               	movf	printf@prec& (0+255),w,b
 14602  010ECA  118E               	iorwf	(printf@prec+1)& (0+255),w,b
 14603  010ECC  B4D8               	btfsc	status,2,c
 14604  010ECE  D021               	goto	l1390
 14605                           
 14606                           ; BSR set to: 1
 14607  010ED0  5178               	movf	printf@len& (0+255),w,b
 14608  010ED2  5D8D               	subwf	printf@prec& (0+255),w,b
 14609  010ED4  5179               	movf	(printf@len+1)& (0+255),w,b
 14610  010ED6  598E               	subwfb	(printf@prec+1)& (0+255),w,b
 14611  010ED8  B0D8               	btfsc	status,0,c
 14612  010EDA  D01B               	goto	l1390
 14613                           
 14614                           ; BSR set to: 1
 14615                           ;doprnt.c: 754: len = prec;
 14616  010EDC  C18D  F178         	movff	printf@prec,printf@len
 14617  010EE0  C18E  F179         	movff	printf@prec+1,printf@len+1
 14618                           
 14619                           ; BSR set to: 1
 14620                           ;doprnt.c: 767: while(len--)
 14621  010EE4  D016               	goto	l1390
 14622  010EE6                     l10588:
 14623                           
 14624                           ; BSR set to: 1
 14625                           ;doprnt.c: 768: (putch(*cp++) );
 14626  010EE6  C17A  FFF6         	movff	printf@cp,tblptrl
 14627  010EEA  C17B  FFF7         	movff	printf@cp+1,tblptrh
 14628  010EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 14629  010EF0  6EF8               	movwf	tblptru,c
 14630  010EF2  0E0D               	movlw	(high __ramtop+-1)
 14631  010EF4  64F7               	cpfsgt	tblptrh,c
 14632  010EF6  D003               	bra	u12557
 14633  010EF8  0008               	tblrd		*
 14634  010EFA  50F5               	movf	tablat,w,c
 14635  010EFC  D005               	bra	u12550
 14636  010EFE                     u12557:
 14637  010EFE  CFF6 FFE9          	movff	tblptrl,fsr0l
 14638  010F02  CFF7 FFEA          	movff	tblptrh,fsr0h
 14639  010F06  50EF               	movf	indf0,w,c
 14640  010F08                     u12550:
 14641  010F08  EC57  F0B8         	call	_putch
 14642  010F0C  0101               	movlb	1	; () banked
 14643  010F0E  4B7A               	infsnz	printf@cp& (0+255),f,b
 14644  010F10  2B7B               	incf	(printf@cp+1)& (0+255),f,b
 14645  010F12                     l1390:
 14646                           
 14647                           ; BSR set to: 1
 14648                           
 14649                           ; BSR set to: 1
 14650  010F12  0778               	decf	printf@len& (0+255),f,b
 14651  010F14  A0D8               	btfss	status,0,c
 14652  010F16  0779               	decf	(printf@len+1)& (0+255),f,b
 14653  010F18  2978               	incf	printf@len& (0+255),w,b
 14654  010F1A  E1E5               	bnz	l10588
 14655  010F1C  2979               	incf	(printf@len+1)& (0+255),w,b
 14656  010F1E  B4D8               	btfsc	status,2,c
 14657  010F20  EFEE  F08B         	goto	u12950
 14658  010F24  D7E0               	goto	l1391
 14659  010F26                     
 14660                           ; BSR set to: 1
 14661                           ;doprnt.c: 805: cp = (char *)&c;
 14662                           
 14663                           ; BSR set to: 1
 14664  010F26  0E8F               	movlw	low printf@c
 14665  010F28  6F7A               	movwf	printf@cp& (0+255),b
 14666  010F2A  0E01               	movlw	high printf@c
 14667  010F2C  6F7B               	movwf	(printf@cp+1)& (0+255),b
 14668                           
 14669                           ; BSR set to: 1
 14670                           ;doprnt.c: 806: len = 1;
 14671  010F2E  0E00               	movlw	0
 14672  010F30  6F79               	movwf	(printf@len+1)& (0+255),b
 14673  010F32  0E01               	movlw	1
 14674  010F34  6F78               	movwf	printf@len& (0+255),b
 14675                           
 14676                           ;doprnt.c: 807: goto dostring;
 14677  010F36  D7C7               	goto	u12520
 14678  010F38                     
 14679                           ; BSR set to: 1
 14680                           ;doprnt.c: 818: flag |= 0xC0;
 14681                           
 14682                           ; BSR set to: 1
 14683  010F38  0EC0               	movlw	192
 14684  010F3A  137E               	iorwf	printf@flag& (0+255),f,b
 14685                           
 14686                           ; BSR set to: 1
 14687                           ;doprnt.c: 822: }
 14688                           
 14689                           ;doprnt.c: 819: break;
 14690  010F3C  D034               	goto	l1378
 14691  010F3E                     l1374:
 14692                           
 14693                           ; BSR set to: 1
 14694  010F3E  0101               	movlb	1	; () banked
 14695  010F40  5164               	movf	printf@f& (0+255),w,b
 14696  010F42  6F6E               	movwf	??_printf& (0+255),b
 14697  010F44  5165               	movf	(printf@f+1)& (0+255),w,b
 14698  010F46  6F6F               	movwf	(??_printf+1)& (0+255),b
 14699  010F48  4B64               	infsnz	printf@f& (0+255),f,b
 14700  010F4A  2B65               	incf	(printf@f+1)& (0+255),f,b
 14701  010F4C  C16E  FFF6         	movff	??_printf,tblptrl
 14702  010F50  C16F  FFF7         	movff	??_printf+1,tblptrh
 14703  010F54  0E00               	movlw	low (__mediumconst shr (0+16))
 14704  010F56  6EF8               	movwf	tblptru,c
 14705  010F58  0E0D               	movlw	(high __ramtop+-1)
 14706  010F5A  64F7               	cpfsgt	tblptrh,c
 14707  010F5C  D003               	bra	u12577
 14708  010F5E  0008               	tblrd		*
 14709  010F60  50F5               	movf	tablat,w,c
 14710  010F62  D005               	bra	u12570
 14711  010F64                     u12577:
 14712  010F64  CFF6 FFE9          	movff	tblptrl,fsr0l
 14713  010F68  CFF7 FFEA          	movff	tblptrh,fsr0h
 14714  010F6C  50EF               	movf	indf0,w,c
 14715  010F6E                     u12570:
 14716  010F6E  0101               	movlb	1	; () banked
 14717  010F70  6F8F               	movwf	printf@c& (0+255),b
 14718  010F72  518F               	movf	printf@c& (0+255),w,b
 14719                           
 14720                           ; Switch size 1, requested type "space"
 14721                           ; Number of cases is 8, Range of values is 0 to 120
 14722                           ; switch strategies available:
 14723                           ; Name         Instructions Cycles
 14724                           ; simple_byte           25    13 (average)
 14725                           ;	Chosen strategy is simple_byte
 14726  010F74  0A00               	xorlw	0	; case 0
 14727  010F76  B4D8               	btfsc	status,2,c
 14728  010F78  0012               	return	
 14729  010F7A  0A58               	xorlw	88	; case 88
 14730  010F7C  B4D8               	btfsc	status,2,c
 14731  010F7E  D76B               	goto	l1381
 14732  010F80  0A3C               	xorlw	60	; case 100
 14733  010F82  B4D8               	btfsc	status,2,c
 14734  010F84  D010               	goto	l1378
 14735  010F86  0A02               	xorlw	2	; case 102
 14736  010F88  B4D8               	btfsc	status,2,c
 14737  010F8A  D763               	goto	l1377
 14738  010F8C  0A0F               	xorlw	15	; case 105
 14739  010F8E  B4D8               	btfsc	status,2,c
 14740  010F90  D00A               	goto	l1378
 14741  010F92  0A1A               	xorlw	26	; case 115
 14742  010F94  B4D8               	btfsc	status,2,c
 14743  010F96  D761               	goto	l1383
 14744  010F98  0A06               	xorlw	6	; case 117
 14745  010F9A  B4D8               	btfsc	status,2,c
 14746  010F9C  D7CD               	goto	l1394
 14747  010F9E  0A0D               	xorlw	13	; case 120
 14748  010FA0  B4D8               	btfsc	status,2,c
 14749  010FA2  D759               	goto	l1381
 14750  010FA4  D7C0               	goto	l1393
 14751  010FA6                     l1378:
 14752                           
 14753                           ; BSR set to: 1
 14754                           ;doprnt.c: 825: if(flag & (0x700)) {
 14755                           
 14756                           ; BSR set to: 1
 14757  010FA6  0E07               	movlw	7
 14758  010FA8  157F               	andwf	(printf@flag+1)& (0+255),w,b
 14759  010FAA  B4D8               	btfsc	status,2,c
 14760  010FAC  D2C1               	goto	l1395
 14761                           
 14762                           ; BSR set to: 1
 14763                           ;doprnt.c: 827: if(flag & 0x1000)
 14764  010FAE  A97F               	btfss	(printf@flag+1)& (0+255),4,b
 14765  010FB0  D004               	goto	l1396
 14766                           
 14767                           ; BSR set to: 1
 14768                           ;doprnt.c: 829: prec = 6;
 14769  010FB2  0E00               	movlw	0
 14770  010FB4  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14771  010FB6  0E06               	movlw	6
 14772  010FB8  6F8D               	movwf	printf@prec& (0+255),b
 14773  010FBA                     l1396:
 14774                           
 14775                           ; BSR set to: 1
 14776                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 14777                           
 14778                           ; BSR set to: 1
 14779  010FBA  C17C  FFD9         	movff	printf@ap,fsr2l
 14780  010FBE  C17D  FFDA         	movff	printf@ap+1,fsr2h
 14781  010FC2  CFDE F18A          	movff	postinc2,printf@fval
 14782  010FC6  CFDE F18B          	movff	postinc2,printf@fval+1
 14783  010FCA  CFDD F18C          	movff	postdec2,printf@fval+2
 14784                           
 14785                           ; BSR set to: 1
 14786  010FCE  0E03               	movlw	3
 14787  010FD0  277C               	addwf	printf@ap& (0+255),f,b
 14788  010FD2  0E00               	movlw	0
 14789  010FD4  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 14790                           
 14791                           ; BSR set to: 1
 14792                           ;doprnt.c: 831: if(fval < 0.0) {
 14793  010FD6  AF8C               	btfss	(printf@fval+2)& (0+255),7,b
 14794  010FD8  D011               	goto	l1397
 14795                           
 14796                           ; BSR set to: 1
 14797                           ;doprnt.c: 832: fval = -fval;
 14798  010FDA  C18A  F123         	movff	printf@fval,___ftneg@f1
 14799  010FDE  C18B  F124         	movff	printf@fval+1,___ftneg@f1+1
 14800  010FE2  C18C  F125         	movff	printf@fval+2,___ftneg@f1+2
 14801  010FE6  EC43  F0B7         	call	___ftneg	;wreg free
 14802  010FEA  C123  F18A         	movff	?___ftneg,printf@fval
 14803  010FEE  C124  F18B         	movff	?___ftneg+1,printf@fval+1
 14804  010FF2  C125  F18C         	movff	?___ftneg+2,printf@fval+2
 14805                           
 14806                           ;doprnt.c: 833: flag |= 0x03;
 14807  010FF6  0E03               	movlw	3
 14808  010FF8  0101               	movlb	1	; () banked
 14809  010FFA  137E               	iorwf	printf@flag& (0+255),f,b
 14810  010FFC                     l1397:
 14811                           
 14812                           ; BSR set to: 1
 14813                           ;doprnt.c: 834: }
 14814                           ;doprnt.c: 835: exp = 0;
 14815                           
 14816                           ; BSR set to: 1
 14817  010FFC  0E00               	movlw	0
 14818  010FFE  6F81               	movwf	(printf@exp+1)& (0+255),b
 14819  011000  0E00               	movlw	0
 14820  011002  6F80               	movwf	printf@exp& (0+255),b
 14821                           
 14822                           ; BSR set to: 1
 14823                           ;doprnt.c: 836: if( fval!=0) {
 14824  011004  518A               	movf	printf@fval& (0+255),w,b
 14825  011006  118B               	iorwf	(printf@fval+1)& (0+255),w,b
 14826  011008  118C               	iorwf	(printf@fval+2)& (0+255),w,b
 14827  01100A  B4D8               	btfsc	status,2,c
 14828  01100C  D088               	goto	l1402
 14829                           
 14830                           ; BSR set to: 1
 14831                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 14832  01100E  0E82               	movlw	130
 14833  011010  6F6E               	movwf	??_printf& (0+255),b
 14834  011012  0EFF               	movlw	255
 14835  011014  6F6F               	movwf	(??_printf+1)& (0+255),b
 14836  011016  C18A  F170         	movff	printf@fval,??_printf+2
 14837  01101A  C18B  F171         	movff	printf@fval+1,??_printf+3
 14838  01101E  C18C  F172         	movff	printf@fval+2,??_printf+4
 14839  011022  C18D  F173         	movff	printf@fval+3,??_printf+5
 14840  011026  0E10               	movlw	16
 14841  011028  D005               	goto	u12620
 14842  01102A                     u12625:
 14843  01102A  90D8               	bcf	status,0,c
 14844  01102C  3373               	rrcf	(??_printf+5)& (0+255),f,b
 14845  01102E  3372               	rrcf	(??_printf+4)& (0+255),f,b
 14846  011030  3371               	rrcf	(??_printf+3)& (0+255),f,b
 14847  011032  3370               	rrcf	(??_printf+2)& (0+255),f,b
 14848  011034                     u12620:
 14849  011034  2EE8               	decfsz	wreg,f,c
 14850  011036  D7F9               	goto	u12625
 14851  011038  5170               	movf	(??_printf+2)& (0+255),w,b
 14852  01103A  256E               	addwf	??_printf& (0+255),w,b
 14853  01103C  6F80               	movwf	printf@exp& (0+255),b
 14854  01103E  0E00               	movlw	0
 14855  011040  216F               	addwfc	(??_printf+1)& (0+255),w,b
 14856  011042  6F81               	movwf	(printf@exp+1)& (0+255),b
 14857                           
 14858                           ; BSR set to: 1
 14859                           ;doprnt.c: 838: exp--;
 14860  011044  0780               	decf	printf@exp& (0+255),f,b
 14861  011046  A0D8               	btfss	status,0,c
 14862  011048  0781               	decf	(printf@exp+1)& (0+255),f,b
 14863                           
 14864                           ; BSR set to: 1
 14865                           ;doprnt.c: 839: exp *= 3;
 14866  01104A  C180  F125         	movff	printf@exp,___wmul@multiplier
 14867  01104E  C181  F126         	movff	printf@exp+1,___wmul@multiplier+1
 14868  011052  0E00               	movlw	0
 14869  011054  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14870  011056  0E03               	movlw	3
 14871  011058  6F27               	movwf	___wmul@multiplicand& (0+255),b
 14872  01105A  ECF4  F0B6         	call	___wmul	;wreg free
 14873  01105E  C125  F180         	movff	?___wmul,printf@exp
 14874  011062  C126  F181         	movff	?___wmul+1,printf@exp+1
 14875                           
 14876                           ;doprnt.c: 840: exp /= 10;
 14877  011066  C180  F11D         	movff	printf@exp,___awdiv@dividend
 14878  01106A  C181  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 14879  01106E  0E00               	movlw	0
 14880  011070  0101               	movlb	1	; () banked
 14881  011072  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 14882  011074  0E0A               	movlw	10
 14883  011076  6F1F               	movwf	___awdiv@divisor& (0+255),b
 14884  011078  EC79  F0AF         	call	___awdiv	;wreg free
 14885  01107C  C11D  F180         	movff	?___awdiv,printf@exp
 14886  011080  C11E  F181         	movff	?___awdiv+1,printf@exp+1
 14887                           
 14888                           ;doprnt.c: 841: if(exp < 0)
 14889  011084  0101               	movlb	1	; () banked
 14890  011086  AF81               	btfss	(printf@exp+1)& (0+255),7,b
 14891  011088  D003               	goto	l1399
 14892                           
 14893                           ; BSR set to: 1
 14894                           ;doprnt.c: 842: exp--;
 14895  01108A  0780               	decf	printf@exp& (0+255),f,b
 14896  01108C  A0D8               	btfss	status,0,c
 14897  01108E  0781               	decf	(printf@exp+1)& (0+255),f,b
 14898  011090                     l1399:
 14899                           
 14900                           ; BSR set to: 1
 14901                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 14902                           
 14903                           ; BSR set to: 1
 14904  011090  5180               	movf	printf@exp& (0+255),w,b
 14905  011092  0800               	sublw	0
 14906  011094  ECA3  F094         	call	_scale
 14907  011098  C155  F182         	movff	?_scale,printf@tmpval
 14908  01109C  C156  F183         	movff	?_scale+1,printf@tmpval+1
 14909  0110A0  C157  F184         	movff	?_scale+2,printf@tmpval+2
 14910                           
 14911                           ;doprnt.c: 847: tmpval.integ *= fval;
 14912  0110A4  C182  F146         	movff	printf@tmpval,___ftmul@f1
 14913  0110A8  C183  F147         	movff	printf@tmpval+1,___ftmul@f1+1
 14914  0110AC  C184  F148         	movff	printf@tmpval+2,___ftmul@f1+2
 14915  0110B0  C18A  F149         	movff	printf@fval,___ftmul@f2
 14916  0110B4  C18B  F14A         	movff	printf@fval+1,___ftmul@f2+1
 14917  0110B8  C18C  F14B         	movff	printf@fval+2,___ftmul@f2+2
 14918  0110BC  EC4B  F0A7         	call	___ftmul	;wreg free
 14919  0110C0  C146  F182         	movff	?___ftmul,printf@tmpval
 14920  0110C4  C147  F183         	movff	?___ftmul+1,printf@tmpval+1
 14921  0110C8  C148  F184         	movff	?___ftmul+2,printf@tmpval+2
 14922                           
 14923                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 14924  0110CC  C182  F117         	movff	printf@tmpval,___ftge@ff1
 14925  0110D0  C183  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 14926  0110D4  C184  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 14927  0110D8  0E00               	movlw	0
 14928  0110DA  0101               	movlb	1	; () banked
 14929  0110DC  6F1A               	movwf	___ftge@ff2& (0+255),b
 14930  0110DE  0E80               	movlw	128
 14931  0110E0  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14932  0110E2  0E3F               	movlw	63
 14933  0110E4  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14934  0110E6  ECCE  F0AD         	call	___ftge	;wreg free
 14935  0110EA  0101               	movlb	1	; () banked
 14936  0110EC  B0D8               	btfsc	status,0,c
 14937  0110EE  D004               	goto	l1400
 14938                           
 14939                           ; BSR set to: 1
 14940                           ;doprnt.c: 849: exp--;
 14941  0110F0  0780               	decf	printf@exp& (0+255),f,b
 14942  0110F2  A0D8               	btfss	status,0,c
 14943  0110F4  0781               	decf	(printf@exp+1)& (0+255),f,b
 14944  0110F6  D013               	goto	l1402
 14945  0110F8                     l1400:
 14946                           
 14947                           ; BSR set to: 1
 14948                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 14949                           
 14950                           ; BSR set to: 1
 14951  0110F8  C182  F117         	movff	printf@tmpval,___ftge@ff1
 14952  0110FC  C183  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 14953  011100  C184  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 14954  011104  0E00               	movlw	0
 14955  011106  6F1A               	movwf	___ftge@ff2& (0+255),b
 14956  011108  0E20               	movlw	32
 14957  01110A  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14958  01110C  0E41               	movlw	65
 14959  01110E  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14960  011110  ECCE  F0AD         	call	___ftge	;wreg free
 14961  011114  0101               	movlb	1	; () banked
 14962  011116  A0D8               	btfss	status,0,c
 14963  011118  D002               	goto	l1402
 14964                           
 14965                           ; BSR set to: 1
 14966                           ;doprnt.c: 851: exp++;
 14967  01111A  4B80               	infsnz	printf@exp& (0+255),f,b
 14968  01111C  2B81               	incf	(printf@exp+1)& (0+255),f,b
 14969  01111E                     l1402:
 14970                           
 14971                           ; BSR set to: 1
 14972                           ;doprnt.c: 852: }
 14973                           ;doprnt.c: 1112: if(prec <= 12)
 14974                           
 14975                           ; BSR set to: 1
 14976                           
 14977                           ; BSR set to: 1
 14978                           
 14979                           ; BSR set to: 1
 14980  01111E  BF8E               	btfsc	(printf@prec+1)& (0+255),7,b
 14981  011120  D006               	goto	u12660
 14982  011122  518E               	movf	(printf@prec+1)& (0+255),w,b
 14983  011124  E11B               	bnz	l10652
 14984  011126  0E0D               	movlw	13
 14985  011128  5D8D               	subwf	printf@prec& (0+255),w,b
 14986  01112A  B0D8               	btfsc	status,0,c
 14987  01112C  D017               	goto	l1403
 14988  01112E                     u12660:
 14989                           
 14990                           ; BSR set to: 1
 14991                           ;doprnt.c: 1113: fval += fround(prec);
 14992  01112E  C18A  F12B         	movff	printf@fval,___ftadd@f1
 14993  011132  C18B  F12C         	movff	printf@fval+1,___ftadd@f1+1
 14994  011136  C18C  F12D         	movff	printf@fval+2,___ftadd@f1+2
 14995  01113A  518D               	movf	printf@prec& (0+255),w,b
 14996  01113C  ECBF  F09A         	call	_fround
 14997  011140  C155  F12E         	movff	?_fround,___ftadd@f2
 14998  011144  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
 14999  011148  C157  F130         	movff	?_fround+2,___ftadd@f2+2
 15000  01114C  EC6D  F0A1         	call	___ftadd	;wreg free
 15001  011150  C12B  F18A         	movff	?___ftadd,printf@fval
 15002  011154  C12C  F18B         	movff	?___ftadd+1,printf@fval+1
 15003  011158  C12D  F18C         	movff	?___ftadd+2,printf@fval+2
 15004  01115C                     l1403:
 15005  01115C                     l10652:
 15006                           
 15007                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 15008  01115C  0101               	movlb	1	; () banked
 15009  01115E  BF81               	btfsc	(printf@exp+1)& (0+255),7,b
 15010  011160  D006               	goto	u12670
 15011  011162  5181               	movf	(printf@exp+1)& (0+255),w,b
 15012  011164  E11F               	bnz	l10660
 15013  011166  0E0A               	movlw	10
 15014  011168  5D80               	subwf	printf@exp& (0+255),w,b
 15015  01116A  B0D8               	btfsc	status,0,c
 15016  01116C  D01B               	goto	u12700
 15017  01116E                     u12670:
 15018                           
 15019                           ; BSR set to: 1
 15020  01116E  518A               	movf	printf@fval& (0+255),w,b
 15021  011170  118B               	iorwf	(printf@fval+1)& (0+255),w,b
 15022  011172  118C               	iorwf	(printf@fval+2)& (0+255),w,b
 15023  011174  B4D8               	btfsc	status,2,c
 15024  011176  D054               	goto	l1404
 15025                           
 15026                           ; BSR set to: 1
 15027  011178  C18A  F155         	movff	printf@fval,___fttol@f1
 15028  01117C  C18B  F156         	movff	printf@fval+1,___fttol@f1+1
 15029  011180  C18C  F157         	movff	printf@fval+2,___fttol@f1+2
 15030  011184  ECCF  F0A6         	call	___fttol	;wreg free
 15031  011188  0101               	movlb	1	; () banked
 15032  01118A  5155               	movf	?___fttol& (0+255),w,b
 15033  01118C  1156               	iorwf	(?___fttol+1)& (0+255),w,b
 15034  01118E  1157               	iorwf	(?___fttol+2)& (0+255),w,b
 15035  011190  1158               	iorwf	(?___fttol+3)& (0+255),w,b
 15036  011192  B4D8               	btfsc	status,2,c
 15037                           
 15038                           ; BSR set to: 1
 15039  011194  BF81               	btfsc	(printf@exp+1)& (0+255),7,b
 15040  011196  D044               	goto	l1404
 15041  011198  5181               	movf	(printf@exp+1)& (0+255),w,b
 15042  01119A  E104               	bnz	l10660
 15043  01119C  0E02               	movlw	2
 15044  01119E  5D80               	subwf	printf@exp& (0+255),w,b
 15045  0111A0  A0D8               	btfss	status,0,c
 15046  0111A2  D03E               	goto	l1404
 15047  0111A4                     u12700:
 15048  0111A4                     l10660:
 15049                           
 15050                           ; BSR set to: 1
 15051                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 15052  0111A4  C182  F117         	movff	printf@tmpval,___ftge@ff1
 15053  0111A8  C183  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 15054  0111AC  C184  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 15055  0111B0  0E70               	movlw	112
 15056  0111B2  6F1A               	movwf	___ftge@ff2& (0+255),b
 15057  0111B4  0E89               	movlw	137
 15058  0111B6  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 15059  0111B8  0E40               	movlw	64
 15060  0111BA  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 15061  0111BC  ECCE  F0AD         	call	___ftge	;wreg free
 15062  0111C0  0101               	movlb	1	; () banked
 15063  0111C2  B0D8               	btfsc	status,0,c
 15064  0111C4  D002               	goto	l1407
 15065                           
 15066                           ; BSR set to: 1
 15067                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 15068  0111C6  0EF7               	movlw	247
 15069  0111C8  D001               	goto	L12
 15070  0111CA                     l1407:
 15071                           
 15072                           ; BSR set to: 1
 15073                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 15074                           
 15075                           ; BSR set to: 1
 15076  0111CA  0EF8               	movlw	248
 15077  0111CC                     L12:
 15078  0111CC  2780               	addwf	printf@exp& (0+255),f,b
 15079  0111CE  0EFF               	movlw	255
 15080  0111D0  2381               	addwfc	(printf@exp+1)& (0+255),f,b
 15081                           
 15082                           ; BSR set to: 1
 15083                           ;doprnt.c: 1124: }
 15084                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 15085                           
 15086                           ; BSR set to: 1
 15087  0111D2  5180               	movf	printf@exp& (0+255),w,b
 15088  0111D4  ECA3  F094         	call	_scale
 15089  0111D8  C155  F182         	movff	?_scale,printf@tmpval
 15090  0111DC  C156  F183         	movff	?_scale+1,printf@tmpval+1
 15091  0111E0  C157  F184         	movff	?_scale+2,printf@tmpval+2
 15092                           
 15093                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 15094  0111E4  C18A  F117         	movff	printf@fval,__tdiv_to_l_@f1
 15095  0111E8  C18B  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 15096  0111EC  C18C  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 15097  0111F0  C182  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 15098  0111F4  C183  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 15099  0111F8  C184  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 15100  0111FC  ECE5  F0A3         	call	__tdiv_to_l_	;wreg free
 15101  011200  C117  F186         	movff	?__tdiv_to_l_,printf@val
 15102  011204  C118  F187         	movff	?__tdiv_to_l_+1,printf@val+1
 15103  011208  C119  F188         	movff	?__tdiv_to_l_+2,printf@val+2
 15104  01120C  C11A  F189         	movff	?__tdiv_to_l_+3,printf@val+3
 15105                           
 15106                           ;doprnt.c: 1129: fval = 0.0;
 15107  011210  0E00               	movlw	0
 15108  011212  0101               	movlb	1	; () banked
 15109  011214  6F8A               	movwf	printf@fval& (0+255),b
 15110  011216  0E00               	movlw	0
 15111  011218  6F8B               	movwf	(printf@fval+1)& (0+255),b
 15112  01121A  0E00               	movlw	0
 15113  01121C  6F8C               	movwf	(printf@fval+2)& (0+255),b
 15114                           
 15115                           ;doprnt.c: 1130: } else {
 15116  01121E  D033               	goto	l1413
 15117  011220                     l1404:
 15118                           
 15119                           ; BSR set to: 1
 15120                           ;doprnt.c: 1131: val = (unsigned long)fval;
 15121                           
 15122                           ; BSR set to: 1
 15123  011220  C18A  F155         	movff	printf@fval,___fttol@f1
 15124  011224  C18B  F156         	movff	printf@fval+1,___fttol@f1+1
 15125  011228  C18C  F157         	movff	printf@fval+2,___fttol@f1+2
 15126  01122C  ECCF  F0A6         	call	___fttol	;wreg free
 15127  011230  C155  F186         	movff	?___fttol,printf@val
 15128  011234  C156  F187         	movff	?___fttol+1,printf@val+1
 15129  011238  C157  F188         	movff	?___fttol+2,printf@val+2
 15130  01123C  C158  F189         	movff	?___fttol+3,printf@val+3
 15131                           
 15132                           ;doprnt.c: 1132: fval -= (double)val;
 15133  011240  C18A  F137         	movff	printf@fval,___ftsub@f1
 15134  011244  C18B  F138         	movff	printf@fval+1,___ftsub@f1+1
 15135  011248  C18C  F139         	movff	printf@fval+2,___ftsub@f1+2
 15136  01124C  C186  F11F         	movff	printf@val,___lltoft@c
 15137  011250  C187  F120         	movff	printf@val+1,___lltoft@c+1
 15138  011254  C188  F121         	movff	printf@val+2,___lltoft@c+2
 15139  011258  C189  F122         	movff	printf@val+3,___lltoft@c+3
 15140  01125C  EC46  F0B3         	call	___lltoft	;wreg free
 15141  011260  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 15142  011264  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 15143  011268  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 15144  01126C  EC6E  F0B5         	call	___ftsub	;wreg free
 15145  011270  C137  F18A         	movff	?___ftsub,printf@fval
 15146  011274  C138  F18B         	movff	?___ftsub+1,printf@fval+1
 15147  011278  C139  F18C         	movff	?___ftsub+2,printf@fval+2
 15148                           
 15149                           ;doprnt.c: 1133: exp = 0;
 15150  01127C  0E00               	movlw	0
 15151  01127E  0101               	movlb	1	; () banked
 15152  011280  6F81               	movwf	(printf@exp+1)& (0+255),b
 15153  011282  0E00               	movlw	0
 15154  011284  6F80               	movwf	printf@exp& (0+255),b
 15155  011286                     l1413:
 15156                           
 15157                           ; BSR set to: 1
 15158                           ;doprnt.c: 1134: }
 15159                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 15160                           
 15161                           ; BSR set to: 1
 15162  011286  0E01               	movlw	1
 15163  011288  6F8F               	movwf	printf@c& (0+255),b
 15164  01128A                     l10680:
 15165                           
 15166                           ; BSR set to: 1
 15167  01128A  0E0A               	movlw	10
 15168  01128C  198F               	xorwf	printf@c& (0+255),w,b
 15169  01128E  B4D8               	btfsc	status,2,c
 15170  011290  D01B               	goto	u12740
 15171                           
 15172                           ; BSR set to: 1
 15173                           ;doprnt.c: 1137: if(val < dpowers[c])
 15174                           
 15175                           ; BSR set to: 1
 15176                           
 15177                           ; BSR set to: 1
 15178  011292  518F               	movf	printf@c& (0+255),w,b
 15179  011294  0D04               	mullw	4
 15180  011296  0E8F               	movlw	low _dpowers
 15181  011298  24F3               	addwf	prodl,w,c
 15182  01129A  6EF6               	movwf	tblptrl,c
 15183  01129C  0EEB               	movlw	high _dpowers
 15184  01129E  20F4               	addwfc	prodh,w,c
 15185  0112A0  6EF7               	movwf	tblptrh,c
 15186  0112A2                     	if	1	;There are 3 active tblptr bytes
 15187  0112A2  6AF8               	clrf	tblptru,c
 15188  0112A4  0E00               	movlw	low (__mediumconst shr (0+16))
 15189  0112A6  22F8               	addwfc	tblptru,f,c
 15190  0112A8                     	endif
 15191  0112A8  0009               	tblrd		*+
 15192  0112AA  50F5               	movf	tablat,w,c
 15193  0112AC  5D86               	subwf	printf@val& (0+255),w,b
 15194  0112AE  0009               	tblrd		*+
 15195  0112B0  50F5               	movf	tablat,w,c
 15196  0112B2  5987               	subwfb	(printf@val+1)& (0+255),w,b
 15197  0112B4  0009               	tblrd		*+
 15198  0112B6  50F5               	movf	tablat,w,c
 15199  0112B8  5988               	subwfb	(printf@val+2)& (0+255),w,b
 15200  0112BA  0009               	tblrd		*+
 15201  0112BC  50F5               	movf	tablat,w,c
 15202  0112BE  5989               	subwfb	(printf@val+3)& (0+255),w,b
 15203  0112C0  A0D8               	btfss	status,0,c
 15204  0112C2  D002               	goto	u12740
 15205                           
 15206                           ; BSR set to: 1
 15207                           
 15208                           ; BSR set to: 1
 15209                           
 15210                           ; BSR set to: 1
 15211                           ;doprnt.c: 1138: break;
 15212  0112C4  2B8F               	incf	printf@c& (0+255),f,b
 15213  0112C6  D7E1               	goto	l10680
 15214  0112C8                     u12740:
 15215                           
 15216                           ; BSR set to: 1
 15217                           ;doprnt.c: 1175: {
 15218                           ;doprnt.c: 1188: if(flag & 0x03)
 15219                           
 15220                           ; BSR set to: 1
 15221  0112C8  0E03               	movlw	3
 15222  0112CA  157E               	andwf	printf@flag& (0+255),w,b
 15223  0112CC  6F6E               	movwf	??_printf& (0+255),b
 15224  0112CE  0E00               	movlw	0
 15225  0112D0  157F               	andwf	(printf@flag+1)& (0+255),w,b
 15226  0112D2  6F6F               	movwf	(??_printf+1)& (0+255),b
 15227  0112D4  516E               	movf	??_printf& (0+255),w,b
 15228  0112D6  116F               	iorwf	(??_printf+1)& (0+255),w,b
 15229  0112D8  B4D8               	btfsc	status,2,c
 15230  0112DA  D04E               	goto	l1418
 15231                           
 15232                           ; BSR set to: 1
 15233                           ;doprnt.c: 1190: (putch('-') );
 15234  0112DC  0E2D               	movlw	45
 15235  0112DE  EC57  F0B8         	call	_putch
 15236                           
 15237                           ;doprnt.c: 1195: }
 15238                           ;doprnt.c: 1196: while(c--) {
 15239  0112E2  D04A               	goto	l1418
 15240  0112E4                     
 15241                           ;doprnt.c: 1200: {
 15242                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 15243  0112E4  C186  F117         	movff	printf@val,___lldiv@dividend
 15244  0112E8  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15245  0112EC  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15246  0112F0  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15247  0112F4  0101               	movlb	1	; () banked
 15248  0112F6  518F               	movf	printf@c& (0+255),w,b
 15249  0112F8  0D04               	mullw	4
 15250  0112FA  0E8F               	movlw	low _dpowers
 15251  0112FC  24F3               	addwf	prodl,w,c
 15252  0112FE  6EF6               	movwf	tblptrl,c
 15253  011300  0EEB               	movlw	high _dpowers
 15254  011302  20F4               	addwfc	prodh,w,c
 15255  011304  6EF7               	movwf	tblptrh,c
 15256  011306                     	if	1	;There are 3 active tblptr bytes
 15257  011306  6AF8               	clrf	tblptru,c
 15258  011308  0E00               	movlw	low (__mediumconst shr (0+16))
 15259  01130A  22F8               	addwfc	tblptru,f,c
 15260  01130C                     	endif
 15261  01130C  0009               	tblrd		*+
 15262  01130E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15263  011312  0009               	tblrd		*+
 15264  011314  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15265  011318  0009               	tblrd		*+
 15266  01131A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15267  01131E  000A               	tblrd		*-
 15268  011320  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15269  011324  ECBC  F0AF         	call	___lldiv	;wreg free
 15270  011328  C117  F182         	movff	?___lldiv,printf@tmpval
 15271  01132C  C118  F183         	movff	?___lldiv+1,printf@tmpval+1
 15272  011330  C119  F184         	movff	?___lldiv+2,printf@tmpval+2
 15273  011334  C11A  F185         	movff	?___lldiv+3,printf@tmpval+3
 15274                           
 15275                           ;doprnt.c: 1202: tmpval.vd %= 10;
 15276  011338  C182  F124         	movff	printf@tmpval,___llmod@dividend
 15277  01133C  C183  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 15278  011340  C184  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 15279  011344  C185  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 15280  011348  0E0A               	movlw	10
 15281  01134A  0101               	movlb	1	; () banked
 15282  01134C  6F28               	movwf	___llmod@divisor& (0+255),b
 15283  01134E  0E00               	movlw	0
 15284  011350  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15285  011352  0E00               	movlw	0
 15286  011354  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15287  011356  0E00               	movlw	0
 15288  011358  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15289  01135A  EC4E  F0B2         	call	___llmod	;wreg free
 15290  01135E  C124  F182         	movff	?___llmod,printf@tmpval
 15291  011362  C125  F183         	movff	?___llmod+1,printf@tmpval+1
 15292  011366  C126  F184         	movff	?___llmod+2,printf@tmpval+2
 15293  01136A  C127  F185         	movff	?___llmod+3,printf@tmpval+3
 15294                           
 15295                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 15296  01136E  0101               	movlb	1	; () banked
 15297  011370  5182               	movf	printf@tmpval& (0+255),w,b
 15298  011372  0F30               	addlw	48
 15299  011374  EC57  F0B8         	call	_putch
 15300  011378                     l1418:
 15301  011378  0101               	movlb	1	; () banked
 15302  01137A  078F               	decf	printf@c& (0+255),f,b
 15303  01137C  298F               	incf	printf@c& (0+255),w,b
 15304  01137E  B4D8               	btfsc	status,2,c
 15305  011380  D008               	goto	l1421
 15306  011382  D7B0               	goto	l1419
 15307  011384                     l10704:
 15308                           
 15309                           ; BSR set to: 1
 15310                           ;doprnt.c: 1208: (putch('0') );
 15311  011384  0E30               	movlw	48
 15312  011386  EC57  F0B8         	call	_putch
 15313                           
 15314                           ;doprnt.c: 1209: exp--;
 15315  01138A  0101               	movlb	1	; () banked
 15316  01138C  0780               	decf	printf@exp& (0+255),f,b
 15317  01138E  A0D8               	btfss	status,0,c
 15318  011390  0781               	decf	(printf@exp+1)& (0+255),f,b
 15319  011392                     l1421:
 15320                           
 15321                           ; BSR set to: 1
 15322                           
 15323                           ; BSR set to: 1
 15324  011392  BF81               	btfsc	(printf@exp+1)& (0+255),7,b
 15325  011394  D005               	goto	u12770
 15326  011396  5181               	movf	(printf@exp+1)& (0+255),w,b
 15327  011398  E1F5               	bnz	l10704
 15328  01139A  0580               	decf	printf@exp& (0+255),w,b
 15329  01139C  B0D8               	btfsc	status,0,c
 15330  01139E  D7F2               	goto	l1422
 15331  0113A0                     u12770:
 15332                           
 15333                           ; BSR set to: 1
 15334                           ;doprnt.c: 1210: }
 15335                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 15336                           
 15337                           ; BSR set to: 1
 15338  0113A0  BF8E               	btfsc	(printf@prec+1)& (0+255),7,b
 15339  0113A2  D009               	goto	l1424
 15340  0113A4  518E               	movf	(printf@prec+1)& (0+255),w,b
 15341  0113A6  E104               	bnz	u12780
 15342  0113A8  0E09               	movlw	9
 15343  0113AA  5D8D               	subwf	printf@prec& (0+255),w,b
 15344  0113AC  A0D8               	btfss	status,0,c
 15345  0113AE  D003               	goto	l1424
 15346  0113B0                     u12780:
 15347                           
 15348                           ; BSR set to: 1
 15349                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 15350  0113B0  0E08               	movlw	8
 15351  0113B2  6F8F               	movwf	printf@c& (0+255),b
 15352  0113B4  D002               	goto	l1425
 15353  0113B6                     l1424:
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;doprnt.c: 1213: else
 15357                           ;doprnt.c: 1214: c = prec;
 15358  0113B6  C18D  F18F         	movff	printf@prec,printf@c
 15359  0113BA                     l1425:
 15360                           
 15361                           ; BSR set to: 1
 15362                           ;doprnt.c: 1215: prec -= c;
 15363                           
 15364                           ; BSR set to: 1
 15365  0113BA  518F               	movf	printf@c& (0+255),w,b
 15366  0113BC  5F8D               	subwf	printf@prec& (0+255),f,b
 15367  0113BE  0E00               	movlw	0
 15368  0113C0  BF8F               	btfsc	printf@c& (0+255),7,b
 15369  0113C2  0EFF               	movlw	255
 15370  0113C4  5B8E               	subwfb	(printf@prec+1)& (0+255),f,b
 15371                           
 15372                           ; BSR set to: 1
 15373                           ;doprnt.c: 1219: if(c)
 15374  0113C6  518F               	movf	printf@c& (0+255),w,b
 15375  0113C8  B4D8               	btfsc	status,2,c
 15376  0113CA  D003               	goto	l1426
 15377                           
 15378                           ; BSR set to: 1
 15379                           ;doprnt.c: 1221: (putch('.') );
 15380  0113CC  0E2E               	movlw	46
 15381  0113CE  EC57  F0B8         	call	_putch
 15382  0113D2                     l1426:
 15383                           
 15384                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15385  0113D2  0101               	movlb	1	; () banked
 15386  0113D4  518F               	movf	printf@c& (0+255),w,b
 15387  0113D6  ECA3  F094         	call	_scale
 15388  0113DA  C155  F174         	movff	?_scale,_printf$3914
 15389  0113DE  C156  F175         	movff	?_scale+1,_printf$3914+1
 15390  0113E2  C157  F176         	movff	?_scale+2,_printf$3914+2
 15391                           
 15392                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15393  0113E6  C18A  F149         	movff	printf@fval,___ftmul@f2
 15394  0113EA  C18B  F14A         	movff	printf@fval+1,___ftmul@f2+1
 15395  0113EE  C18C  F14B         	movff	printf@fval+2,___ftmul@f2+2
 15396  0113F2  C174  F146         	movff	_printf$3914,___ftmul@f1
 15397  0113F6  C175  F147         	movff	_printf$3914+1,___ftmul@f1+1
 15398  0113FA  C176  F148         	movff	_printf$3914+2,___ftmul@f1+2
 15399  0113FE  EC4B  F0A7         	call	___ftmul	;wreg free
 15400  011402  C146  F155         	movff	?___ftmul,___fttol@f1
 15401  011406  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 15402  01140A  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 15403  01140E  ECCF  F0A6         	call	___fttol	;wreg free
 15404  011412  C155  F186         	movff	?___fttol,printf@val
 15405  011416  C156  F187         	movff	?___fttol+1,printf@val+1
 15406  01141A  C157  F188         	movff	?___fttol+2,printf@val+2
 15407  01141E  C158  F189         	movff	?___fttol+3,printf@val+3
 15408                           
 15409                           ;doprnt.c: 1228: while(c--) {
 15410  011422  D074               	goto	l1427
 15411  011424                     
 15412                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 15413  011424  C186  F117         	movff	printf@val,___lldiv@dividend
 15414  011428  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15415  01142C  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15416  011430  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15417  011434  0101               	movlb	1	; () banked
 15418  011436  518F               	movf	printf@c& (0+255),w,b
 15419  011438  0D04               	mullw	4
 15420  01143A  0E8F               	movlw	low _dpowers
 15421  01143C  24F3               	addwf	prodl,w,c
 15422  01143E  6EF6               	movwf	tblptrl,c
 15423  011440  0EEB               	movlw	high _dpowers
 15424  011442  20F4               	addwfc	prodh,w,c
 15425  011444  6EF7               	movwf	tblptrh,c
 15426  011446                     	if	1	;There are 3 active tblptr bytes
 15427  011446  6AF8               	clrf	tblptru,c
 15428  011448  0E00               	movlw	low (__mediumconst shr (0+16))
 15429  01144A  22F8               	addwfc	tblptru,f,c
 15430  01144C                     	endif
 15431  01144C  0009               	tblrd		*+
 15432  01144E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15433  011452  0009               	tblrd		*+
 15434  011454  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15435  011458  0009               	tblrd		*+
 15436  01145A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15437  01145E  000A               	tblrd		*-
 15438  011460  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15439  011464  ECBC  F0AF         	call	___lldiv	;wreg free
 15440  011468  C117  F182         	movff	?___lldiv,printf@tmpval
 15441  01146C  C118  F183         	movff	?___lldiv+1,printf@tmpval+1
 15442  011470  C119  F184         	movff	?___lldiv+2,printf@tmpval+2
 15443  011474  C11A  F185         	movff	?___lldiv+3,printf@tmpval+3
 15444                           
 15445                           ;doprnt.c: 1230: tmpval.vd %= 10;
 15446  011478  C182  F124         	movff	printf@tmpval,___llmod@dividend
 15447  01147C  C183  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 15448  011480  C184  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 15449  011484  C185  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 15450  011488  0E0A               	movlw	10
 15451  01148A  0101               	movlb	1	; () banked
 15452  01148C  6F28               	movwf	___llmod@divisor& (0+255),b
 15453  01148E  0E00               	movlw	0
 15454  011490  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15455  011492  0E00               	movlw	0
 15456  011494  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15457  011496  0E00               	movlw	0
 15458  011498  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15459  01149A  EC4E  F0B2         	call	___llmod	;wreg free
 15460  01149E  C124  F182         	movff	?___llmod,printf@tmpval
 15461  0114A2  C125  F183         	movff	?___llmod+1,printf@tmpval+1
 15462  0114A6  C126  F184         	movff	?___llmod+2,printf@tmpval+2
 15463  0114AA  C127  F185         	movff	?___llmod+3,printf@tmpval+3
 15464                           
 15465                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 15466  0114AE  0101               	movlb	1	; () banked
 15467  0114B0  5182               	movf	printf@tmpval& (0+255),w,b
 15468  0114B2  0F30               	addlw	48
 15469  0114B4  EC57  F0B8         	call	_putch
 15470                           
 15471                           ;doprnt.c: 1232: val %= dpowers[c];
 15472  0114B8  C186  F124         	movff	printf@val,___llmod@dividend
 15473  0114BC  C187  F125         	movff	printf@val+1,___llmod@dividend+1
 15474  0114C0  C188  F126         	movff	printf@val+2,___llmod@dividend+2
 15475  0114C4  C189  F127         	movff	printf@val+3,___llmod@dividend+3
 15476  0114C8  0101               	movlb	1	; () banked
 15477  0114CA  518F               	movf	printf@c& (0+255),w,b
 15478  0114CC  0D04               	mullw	4
 15479  0114CE  0E8F               	movlw	low _dpowers
 15480  0114D0  24F3               	addwf	prodl,w,c
 15481  0114D2  6EF6               	movwf	tblptrl,c
 15482  0114D4  0EEB               	movlw	high _dpowers
 15483  0114D6  20F4               	addwfc	prodh,w,c
 15484  0114D8  6EF7               	movwf	tblptrh,c
 15485  0114DA                     	if	1	;There are 3 active tblptr bytes
 15486  0114DA  6AF8               	clrf	tblptru,c
 15487  0114DC  0E00               	movlw	low (__mediumconst shr (0+16))
 15488  0114DE  22F8               	addwfc	tblptru,f,c
 15489  0114E0                     	endif
 15490  0114E0  0009               	tblrd		*+
 15491  0114E2  CFF5 F128          	movff	tablat,___llmod@divisor
 15492  0114E6  0009               	tblrd		*+
 15493  0114E8  CFF5 F129          	movff	tablat,___llmod@divisor+1
 15494  0114EC  0009               	tblrd		*+
 15495  0114EE  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 15496  0114F2  000A               	tblrd		*-
 15497  0114F4  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 15498  0114F8  EC4E  F0B2         	call	___llmod	;wreg free
 15499  0114FC  C124  F186         	movff	?___llmod,printf@val
 15500  011500  C125  F187         	movff	?___llmod+1,printf@val+1
 15501  011504  C126  F188         	movff	?___llmod+2,printf@val+2
 15502  011508  C127  F189         	movff	?___llmod+3,printf@val+3
 15503  01150C                     l1427:
 15504  01150C  0101               	movlb	1	; () banked
 15505  01150E  078F               	decf	printf@c& (0+255),f,b
 15506  011510  298F               	incf	printf@c& (0+255),w,b
 15507  011512  B4D8               	btfsc	status,2,c
 15508  011514  D008               	goto	l1430
 15509  011516  D786               	goto	l1428
 15510  011518                     
 15511                           ; BSR set to: 1
 15512                           ;doprnt.c: 1236: (putch('0') );
 15513                           
 15514                           ; BSR set to: 1
 15515  011518  0E30               	movlw	48
 15516  01151A  EC57  F0B8         	call	_putch
 15517                           
 15518                           ;doprnt.c: 1237: prec--;
 15519  01151E  0101               	movlb	1	; () banked
 15520  011520  078D               	decf	printf@prec& (0+255),f,b
 15521  011522  A0D8               	btfss	status,0,c
 15522  011524  078E               	decf	(printf@prec+1)& (0+255),f,b
 15523  011526                     l1430:
 15524                           
 15525                           ; BSR set to: 1
 15526                           
 15527                           ; BSR set to: 1
 15528  011526  518D               	movf	printf@prec& (0+255),w,b
 15529  011528  118E               	iorwf	(printf@prec+1)& (0+255),w,b
 15530  01152A  B4D8               	btfsc	status,2,c
 15531  01152C  D157               	goto	u12950
 15532  01152E  D7F4               	goto	l1431
 15533  011530                     l1395:
 15534                           
 15535                           ; BSR set to: 1
 15536                           ;doprnt.c: 1246: }
 15537                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15538                           
 15539                           ; BSR set to: 1
 15540  011530  0EC0               	movlw	192
 15541  011532  157E               	andwf	printf@flag& (0+255),w,b
 15542  011534  6F6E               	movwf	??_printf& (0+255),b
 15543  011536  0E00               	movlw	0
 15544  011538  157F               	andwf	(printf@flag+1)& (0+255),w,b
 15545  01153A  6F6F               	movwf	(??_printf+1)& (0+255),b
 15546  01153C  516E               	movf	??_printf& (0+255),w,b
 15547  01153E  116F               	iorwf	(??_printf+1)& (0+255),w,b
 15548  011540  A4D8               	btfss	status,2,c
 15549  011542  D01E               	goto	l1433
 15550                           
 15551                           ; BSR set to: 1
 15552                           ;doprnt.c: 1253: {
 15553                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 15554  011544  C17C  FFD9         	movff	printf@ap,fsr2l
 15555  011548  C17D  FFDA         	movff	printf@ap+1,fsr2h
 15556  01154C  CFDE F186          	movff	postinc2,printf@val
 15557  011550  CFDD F187          	movff	postdec2,printf@val+1
 15558  011554  0E00               	movlw	0
 15559  011556  BF87               	btfsc	(printf@val+1)& (0+255),7,b
 15560  011558  0EFF               	movlw	-1
 15561  01155A  6F88               	movwf	(printf@val+2)& (0+255),b
 15562  01155C  6F89               	movwf	(printf@val+3)& (0+255),b
 15563                           
 15564                           ; BSR set to: 1
 15565  01155E  0E02               	movlw	2
 15566  011560  277C               	addwf	printf@ap& (0+255),f,b
 15567  011562  0E00               	movlw	0
 15568  011564  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 15569                           
 15570                           ; BSR set to: 1
 15571                           ;doprnt.c: 1261: if((long)val < 0) {
 15572  011566  AF89               	btfss	(printf@val+3)& (0+255),7,b
 15573  011568  D01D               	goto	l1435
 15574                           
 15575                           ; BSR set to: 1
 15576                           ;doprnt.c: 1262: flag |= 0x03;
 15577  01156A  0E03               	movlw	3
 15578  01156C  137E               	iorwf	printf@flag& (0+255),f,b
 15579                           
 15580                           ; BSR set to: 1
 15581                           ;doprnt.c: 1263: val = -val;
 15582  01156E  1F89               	comf	(printf@val+3)& (0+255),f,b
 15583  011570  1F88               	comf	(printf@val+2)& (0+255),f,b
 15584  011572  1F87               	comf	(printf@val+1)& (0+255),f,b
 15585  011574  6D86               	negf	printf@val& (0+255),b
 15586  011576  0E00               	movlw	0
 15587  011578  2387               	addwfc	(printf@val+1)& (0+255),f,b
 15588  01157A  2388               	addwfc	(printf@val+2)& (0+255),f,b
 15589  01157C  2389               	addwfc	(printf@val+3)& (0+255),f,b
 15590                           
 15591                           ; BSR set to: 1
 15592                           ;doprnt.c: 1264: }
 15593                           ;doprnt.c: 1266: }
 15594  01157E  D012               	goto	l1435
 15595  011580                     l1433:
 15596                           
 15597                           ; BSR set to: 1
 15598                           ;doprnt.c: 1268: else
 15599                           ;doprnt.c: 1273: {
 15600                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15601                           
 15602                           ; BSR set to: 1
 15603  011580  C17C  FFD9         	movff	printf@ap,fsr2l
 15604  011584  C17D  FFDA         	movff	printf@ap+1,fsr2h
 15605  011588  CFDE F16E          	movff	postinc2,??_printf
 15606  01158C  CFDD F16F          	movff	postdec2,??_printf+1
 15607  011590  C16E  F186         	movff	??_printf,printf@val
 15608  011594  C16F  F187         	movff	??_printf+1,printf@val+1
 15609  011598  6B88               	clrf	(printf@val+2)& (0+255),b
 15610  01159A  6B89               	clrf	(printf@val+3)& (0+255),b
 15611                           
 15612                           ; BSR set to: 1
 15613  01159C  0E02               	movlw	2
 15614  01159E  277C               	addwf	printf@ap& (0+255),f,b
 15615  0115A0  0E00               	movlw	0
 15616  0115A2  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 15617  0115A4                     l1435:
 15618                           
 15619                           ; BSR set to: 1
 15620                           ;doprnt.c: 1287: }
 15621                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15622                           
 15623                           ; BSR set to: 1
 15624  0115A4  518D               	movf	printf@prec& (0+255),w,b
 15625  0115A6  118E               	iorwf	(printf@prec+1)& (0+255),w,b
 15626  0115A8  A4D8               	btfss	status,2,c
 15627  0115AA  D04B               	goto	l1437
 15628                           
 15629                           ; BSR set to: 1
 15630  0115AC  5186               	movf	printf@val& (0+255),w,b
 15631  0115AE  1187               	iorwf	(printf@val+1)& (0+255),w,b
 15632  0115B0  1188               	iorwf	(printf@val+2)& (0+255),w,b
 15633  0115B2  1189               	iorwf	(printf@val+3)& (0+255),w,b
 15634  0115B4  A4D8               	btfss	status,2,c
 15635  0115B6  D045               	goto	l1437
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;doprnt.c: 1291: prec++;
 15639  0115B8  4B8D               	infsnz	printf@prec& (0+255),f,b
 15640  0115BA  2B8E               	incf	(printf@prec+1)& (0+255),f,b
 15641                           
 15642                           ; BSR set to: 1
 15643                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 15644  0115BC  D042               	goto	l1437
 15645  0115BE                     
 15646                           ; BSR set to: 1
 15647                           ;doprnt.c: 1302: case 0xC0:
 15648                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15649                           
 15650                           ; BSR set to: 1
 15651                           
 15652                           ; BSR set to: 1
 15653  0115BE  0E01               	movlw	1
 15654  0115C0  6F8F               	movwf	printf@c& (0+255),b
 15655  0115C2                     l10764:
 15656                           
 15657                           ; BSR set to: 1
 15658  0115C2  0E0A               	movlw	10
 15659  0115C4  198F               	xorwf	printf@c& (0+255),w,b
 15660  0115C6  B4D8               	btfsc	status,2,c
 15661  0115C8  D047               	goto	l1443
 15662                           
 15663                           ; BSR set to: 1
 15664                           ;doprnt.c: 1306: if(val < dpowers[c])
 15665                           
 15666                           ; BSR set to: 1
 15667                           
 15668                           ; BSR set to: 1
 15669  0115CA  518F               	movf	printf@c& (0+255),w,b
 15670  0115CC  0D04               	mullw	4
 15671  0115CE  0E8F               	movlw	low _dpowers
 15672  0115D0  24F3               	addwf	prodl,w,c
 15673  0115D2  6EF6               	movwf	tblptrl,c
 15674  0115D4  0EEB               	movlw	high _dpowers
 15675  0115D6  20F4               	addwfc	prodh,w,c
 15676  0115D8  6EF7               	movwf	tblptrh,c
 15677  0115DA                     	if	1	;There are 3 active tblptr bytes
 15678  0115DA  6AF8               	clrf	tblptru,c
 15679  0115DC  0E00               	movlw	low (__mediumconst shr (0+16))
 15680  0115DE  22F8               	addwfc	tblptru,f,c
 15681  0115E0                     	endif
 15682  0115E0  0009               	tblrd		*+
 15683  0115E2  50F5               	movf	tablat,w,c
 15684  0115E4  5D86               	subwf	printf@val& (0+255),w,b
 15685  0115E6  0009               	tblrd		*+
 15686  0115E8  50F5               	movf	tablat,w,c
 15687  0115EA  5987               	subwfb	(printf@val+1)& (0+255),w,b
 15688  0115EC  0009               	tblrd		*+
 15689  0115EE  50F5               	movf	tablat,w,c
 15690  0115F0  5988               	subwfb	(printf@val+2)& (0+255),w,b
 15691  0115F2  0009               	tblrd		*+
 15692  0115F4  50F5               	movf	tablat,w,c
 15693  0115F6  5989               	subwfb	(printf@val+3)& (0+255),w,b
 15694  0115F8  A0D8               	btfss	status,0,c
 15695  0115FA  D02E               	goto	l1443
 15696                           
 15697                           ; BSR set to: 1
 15698                           
 15699                           ; BSR set to: 1
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;doprnt.c: 1307: break;
 15703  0115FC  2B8F               	incf	printf@c& (0+255),f,b
 15704  0115FE  D7E1               	goto	l10764
 15705  011600                     
 15706                           ; BSR set to: 1
 15707                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15708                           
 15709                           ; BSR set to: 1
 15710  011600  0E01               	movlw	1
 15711  011602  6F8F               	movwf	printf@c& (0+255),b
 15712  011604                     l10778:
 15713                           
 15714                           ; BSR set to: 1
 15715  011604  0E08               	movlw	8
 15716  011606  198F               	xorwf	printf@c& (0+255),w,b
 15717  011608  B4D8               	btfsc	status,2,c
 15718  01160A  D026               	goto	l1443
 15719                           
 15720                           ; BSR set to: 1
 15721                           ;doprnt.c: 1317: if(val < hexpowers[c])
 15722                           
 15723                           ; BSR set to: 1
 15724                           
 15725                           ; BSR set to: 1
 15726  01160C  518F               	movf	printf@c& (0+255),w,b
 15727  01160E  0D04               	mullw	4
 15728  011610  0E05               	movlw	low _hexpowers
 15729  011612  24F3               	addwf	prodl,w,c
 15730  011614  6EF6               	movwf	tblptrl,c
 15731  011616  0EEC               	movlw	high _hexpowers
 15732  011618  20F4               	addwfc	prodh,w,c
 15733  01161A  6EF7               	movwf	tblptrh,c
 15734  01161C                     	if	1	;There are 3 active tblptr bytes
 15735  01161C  6AF8               	clrf	tblptru,c
 15736  01161E  0E00               	movlw	low (__mediumconst shr (0+16))
 15737  011620  22F8               	addwfc	tblptru,f,c
 15738  011622                     	endif
 15739  011622  0009               	tblrd		*+
 15740  011624  50F5               	movf	tablat,w,c
 15741  011626  5D86               	subwf	printf@val& (0+255),w,b
 15742  011628  0009               	tblrd		*+
 15743  01162A  50F5               	movf	tablat,w,c
 15744  01162C  5987               	subwfb	(printf@val+1)& (0+255),w,b
 15745  01162E  0009               	tblrd		*+
 15746  011630  50F5               	movf	tablat,w,c
 15747  011632  5988               	subwfb	(printf@val+2)& (0+255),w,b
 15748  011634  0009               	tblrd		*+
 15749  011636  50F5               	movf	tablat,w,c
 15750  011638  5989               	subwfb	(printf@val+3)& (0+255),w,b
 15751  01163A  A0D8               	btfss	status,0,c
 15752  01163C  D00D               	goto	l1443
 15753                           
 15754                           ; BSR set to: 1
 15755                           
 15756                           ; BSR set to: 1
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;doprnt.c: 1318: break;
 15760  01163E  2B8F               	incf	printf@c& (0+255),f,b
 15761  011640  D7E1               	goto	l10778
 15762  011642                     l1437:
 15763                           
 15764                           ; BSR set to: 1
 15765                           
 15766                           ; BSR set to: 1
 15767  011642  517E               	movf	printf@flag& (0+255),w,b
 15768  011644  0BC0               	andlw	192
 15769                           
 15770                           ; Switch size 1, requested type "space"
 15771                           ; Number of cases is 3, Range of values is 0 to 192
 15772                           ; switch strategies available:
 15773                           ; Name         Instructions Cycles
 15774                           ; simple_byte           10     6 (average)
 15775                           ;	Chosen strategy is simple_byte
 15776  011646  0A00               	xorlw	0	; case 0
 15777  011648  B4D8               	btfsc	status,2,c
 15778  01164A  D7B9               	goto	l1438
 15779  01164C  0A80               	xorlw	128	; case 128
 15780  01164E  B4D8               	btfsc	status,2,c
 15781  011650  D7D7               	goto	l1444
 15782  011652  0A40               	xorlw	64	; case 192
 15783  011654  B4D8               	btfsc	status,2,c
 15784  011656  D7B3               	goto	l1438
 15785  011658                     l1443:
 15786                           
 15787                           ; BSR set to: 1
 15788                           ;doprnt.c: 1339: if(c < prec)
 15789                           
 15790                           ; BSR set to: 1
 15791  011658  0E80               	movlw	128
 15792  01165A  BF8F               	btfsc	printf@c& (0+255),7,b
 15793  01165C  0E7F               	movlw	127
 15794  01165E  6F6E               	movwf	??_printf& (0+255),b
 15795  011660  518D               	movf	printf@prec& (0+255),w,b
 15796  011662  5D8F               	subwf	printf@c& (0+255),w,b
 15797  011664  518E               	movf	(printf@prec+1)& (0+255),w,b
 15798  011666  0A80               	xorlw	128
 15799  011668  596E               	subwfb	??_printf& (0+255),w,b
 15800  01166A  B0D8               	btfsc	status,0,c
 15801  01166C  D003               	goto	l1448
 15802                           
 15803                           ; BSR set to: 1
 15804                           ;doprnt.c: 1340: c = prec;
 15805  01166E  C18D  F18F         	movff	printf@prec,printf@c
 15806  011672  D010               	goto	l1450
 15807  011674                     l1448:
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;doprnt.c: 1341: else if(prec < c)
 15811                           
 15812                           ; BSR set to: 1
 15813  011674  518E               	movf	(printf@prec+1)& (0+255),w,b
 15814  011676  0A80               	xorlw	128
 15815  011678  6F6E               	movwf	??_printf& (0+255),b
 15816  01167A  518F               	movf	printf@c& (0+255),w,b
 15817  01167C  5D8D               	subwf	printf@prec& (0+255),w,b
 15818  01167E  0E80               	movlw	128
 15819  011680  BF8F               	btfsc	printf@c& (0+255),7,b
 15820  011682  0E7F               	movlw	127
 15821  011684  596E               	subwfb	??_printf& (0+255),w,b
 15822  011686  B0D8               	btfsc	status,0,c
 15823  011688  D005               	goto	l1450
 15824                           
 15825                           ; BSR set to: 1
 15826                           ;doprnt.c: 1342: prec = c;
 15827  01168A  518F               	movf	printf@c& (0+255),w,b
 15828  01168C  6F8D               	movwf	printf@prec& (0+255),b
 15829  01168E  6B8E               	clrf	(printf@prec+1)& (0+255),b
 15830  011690  BF8D               	btfsc	printf@prec& (0+255),7,b
 15831  011692  078E               	decf	(printf@prec+1)& (0+255),f,b
 15832  011694                     l1450:
 15833                           
 15834                           ; BSR set to: 1
 15835                           ;doprnt.c: 1422: {
 15836                           ;doprnt.c: 1438: if(flag & 0x03)
 15837                           
 15838                           ; BSR set to: 1
 15839                           
 15840                           ; BSR set to: 1
 15841  011694  0E03               	movlw	3
 15842  011696  157E               	andwf	printf@flag& (0+255),w,b
 15843  011698  6F6E               	movwf	??_printf& (0+255),b
 15844  01169A  0E00               	movlw	0
 15845  01169C  157F               	andwf	(printf@flag+1)& (0+255),w,b
 15846  01169E  6F6F               	movwf	(??_printf+1)& (0+255),b
 15847  0116A0  516E               	movf	??_printf& (0+255),w,b
 15848  0116A2  116F               	iorwf	(??_printf+1)& (0+255),w,b
 15849  0116A4  B4D8               	btfsc	status,2,c
 15850  0116A6  D091               	goto	l1452
 15851                           
 15852                           ; BSR set to: 1
 15853                           ;doprnt.c: 1439: (putch('-') );
 15854  0116A8  0E2D               	movlw	45
 15855  0116AA  EC57  F0B8         	call	_putch
 15856                           
 15857                           ;doprnt.c: 1469: }
 15858                           ;doprnt.c: 1474: while(prec--) {
 15859  0116AE  D08D               	goto	l1452
 15860  0116B0                     
 15861                           ;doprnt.c: 1486: case 0xC0:
 15862                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15863  0116B0  C18D  F16E         	movff	printf@prec,??_printf
 15864  0116B4  C18E  F16F         	movff	printf@prec+1,??_printf+1
 15865  0116B8  0101               	movlb	1	; () banked
 15866  0116BA  90D8               	bcf	status,0,c
 15867  0116BC  376E               	rlcf	??_printf& (0+255),f,b
 15868  0116BE  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15869  0116C0  90D8               	bcf	status,0,c
 15870  0116C2  376E               	rlcf	??_printf& (0+255),f,b
 15871  0116C4  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15872  0116C6  0E8F               	movlw	low _dpowers
 15873  0116C8  256E               	addwf	??_printf& (0+255),w,b
 15874  0116CA  6EF6               	movwf	tblptrl,c
 15875  0116CC  0EEB               	movlw	high _dpowers
 15876  0116CE  216F               	addwfc	(??_printf+1)& (0+255),w,b
 15877  0116D0  6EF7               	movwf	tblptrh,c
 15878  0116D2                     	if	1	;There are 3 active tblptr bytes
 15879  0116D2  6AF8               	clrf	tblptru,c
 15880  0116D4  0E00               	movlw	low (__mediumconst shr (0+16))
 15881  0116D6  22F8               	addwfc	tblptru,f,c
 15882  0116D8                     	endif
 15883  0116D8  0009               	tblrd		*+
 15884  0116DA  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15885  0116DE  0009               	tblrd		*+
 15886  0116E0  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15887  0116E4  0009               	tblrd		*+
 15888  0116E6  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15889  0116EA  000A               	tblrd		*-
 15890  0116EC  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15891  0116F0  C186  F117         	movff	printf@val,___lldiv@dividend
 15892  0116F4  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15893  0116F8  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15894  0116FC  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15895  011700  ECBC  F0AF         	call	___lldiv	;wreg free
 15896  011704  C117  F124         	movff	?___lldiv,___llmod@dividend
 15897  011708  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 15898  01170C  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 15899  011710  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 15900  011714  0E0A               	movlw	10
 15901  011716  0101               	movlb	1	; () banked
 15902  011718  6F28               	movwf	___llmod@divisor& (0+255),b
 15903  01171A  0E00               	movlw	0
 15904  01171C  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15905  01171E  0E00               	movlw	0
 15906  011720  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15907  011722  0E00               	movlw	0
 15908  011724  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15909  011726  EC4E  F0B2         	call	___llmod	;wreg free
 15910  01172A  0101               	movlb	1	; () banked
 15911  01172C  5124               	movf	?___llmod& (0+255),w,b
 15912  01172E  0F30               	addlw	48
 15913  011730  6F8F               	movwf	printf@c& (0+255),b
 15914                           
 15915                           ;doprnt.c: 1491: break;
 15916  011732  D048               	goto	l1457
 15917  011734                     
 15918                           ; BSR set to: 1
 15919                           ;doprnt.c: 1499: {
 15920                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15921                           
 15922                           ; BSR set to: 1
 15923  011734  C186  F117         	movff	printf@val,___lldiv@dividend
 15924  011738  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15925  01173C  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15926  011740  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15927  011744  C18D  F16E         	movff	printf@prec,??_printf
 15928  011748  C18E  F16F         	movff	printf@prec+1,??_printf+1
 15929  01174C  90D8               	bcf	status,0,c
 15930  01174E  376E               	rlcf	??_printf& (0+255),f,b
 15931  011750  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15932  011752  90D8               	bcf	status,0,c
 15933  011754  376E               	rlcf	??_printf& (0+255),f,b
 15934  011756  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15935  011758  0E05               	movlw	low _hexpowers
 15936  01175A  256E               	addwf	??_printf& (0+255),w,b
 15937  01175C  6EF6               	movwf	tblptrl,c
 15938  01175E  0EEC               	movlw	high _hexpowers
 15939  011760  216F               	addwfc	(??_printf+1)& (0+255),w,b
 15940  011762  6EF7               	movwf	tblptrh,c
 15941  011764                     	if	1	;There are 3 active tblptr bytes
 15942  011764  6AF8               	clrf	tblptru,c
 15943  011766  0E00               	movlw	low (__mediumconst shr (0+16))
 15944  011768  22F8               	addwfc	tblptru,f,c
 15945  01176A                     	endif
 15946  01176A  0009               	tblrd		*+
 15947  01176C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15948  011770  0009               	tblrd		*+
 15949  011772  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15950  011776  0009               	tblrd		*+
 15951  011778  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15952  01177C  000A               	tblrd		*-
 15953  01177E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15954  011782  ECBC  F0AF         	call	___lldiv	;wreg free
 15955  011786  0101               	movlb	1	; () banked
 15956  011788  5117               	movf	?___lldiv& (0+255),w,b
 15957  01178A  0B0F               	andlw	15
 15958  01178C  6F77               	movwf	printf@idx& (0+255),b
 15959                           
 15960                           ; BSR set to: 1
 15961                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 15962  01178E  5177               	movf	printf@idx& (0+255),w,b
 15963  011790  0D01               	mullw	1
 15964  011792  0EE9               	movlw	low STR_136
 15965  011794  24F3               	addwf	prodl,w,c
 15966  011796  6EF6               	movwf	tblptrl,c
 15967  011798  0EFD               	movlw	high STR_136
 15968  01179A  20F4               	addwfc	prodh,w,c
 15969  01179C  6EF7               	movwf	tblptrh,c
 15970  01179E                     	if	1	;There are 3 active tblptr bytes
 15971  01179E  6AF8               	clrf	tblptru,c
 15972  0117A0  0E00               	movlw	low (__mediumconst shr (0+16))
 15973  0117A2  22F8               	addwfc	tblptru,f,c
 15974  0117A4                     	endif
 15975  0117A4  0008               	tblrd		*
 15976  0117A6  CFF5 F18F          	movff	tablat,printf@c
 15977                           
 15978                           ; BSR set to: 1
 15979                           ;doprnt.c: 1523: }
 15980                           
 15981                           ;doprnt.c: 1508: }
 15982                           ;doprnt.c: 1510: break;
 15983  0117AA  D00C               	goto	l1457
 15984  0117AC                     l10814:
 15985  0117AC  0101               	movlb	1	; () banked
 15986  0117AE  517E               	movf	printf@flag& (0+255),w,b
 15987  0117B0  0BC0               	andlw	192
 15988                           
 15989                           ; Switch size 1, requested type "space"
 15990                           ; Number of cases is 3, Range of values is 0 to 192
 15991                           ; switch strategies available:
 15992                           ; Name         Instructions Cycles
 15993                           ; simple_byte           10     6 (average)
 15994                           ;	Chosen strategy is simple_byte
 15995  0117B2  0A00               	xorlw	0	; case 0
 15996  0117B4  B4D8               	btfsc	status,2,c
 15997  0117B6  D77C               	goto	l1455
 15998  0117B8  0A80               	xorlw	128	; case 128
 15999  0117BA  B4D8               	btfsc	status,2,c
 16000  0117BC  D7BB               	goto	l1458
 16001  0117BE  0A40               	xorlw	64	; case 192
 16002  0117C0  B4D8               	btfsc	status,2,c
 16003  0117C2  D776               	goto	l1455
 16004  0117C4                     l1457:
 16005                           
 16006                           ; BSR set to: 1
 16007                           ;doprnt.c: 1524: (putch(c) );
 16008                           
 16009                           ; BSR set to: 1
 16010  0117C4  518F               	movf	printf@c& (0+255),w,b
 16011  0117C6  EC57  F0B8         	call	_putch
 16012  0117CA                     l1452:
 16013  0117CA  0101               	movlb	1	; () banked
 16014  0117CC  078D               	decf	printf@prec& (0+255),f,b
 16015  0117CE  A0D8               	btfss	status,0,c
 16016  0117D0  078E               	decf	(printf@prec+1)& (0+255),f,b
 16017  0117D2  298D               	incf	printf@prec& (0+255),w,b
 16018  0117D4  E1EB               	bnz	l10814
 16019  0117D6  298E               	incf	(printf@prec+1)& (0+255),w,b
 16020  0117D8  A4D8               	btfss	status,2,c
 16021  0117DA  D7E8               	goto	l1454
 16022  0117DC                     u12950:
 16023                           
 16024                           ; BSR set to: 1
 16025                           
 16026                           ; BSR set to: 1
 16027  0117DC  0101               	movlb	1	; () banked
 16028  0117DE  5164               	movf	printf@f& (0+255),w,b
 16029  0117E0  6F6E               	movwf	??_printf& (0+255),b
 16030  0117E2  5165               	movf	(printf@f+1)& (0+255),w,b
 16031  0117E4  6F6F               	movwf	(??_printf+1)& (0+255),b
 16032  0117E6  4B64               	infsnz	printf@f& (0+255),f,b
 16033  0117E8  2B65               	incf	(printf@f+1)& (0+255),f,b
 16034  0117EA  C16E  FFF6         	movff	??_printf,tblptrl
 16035  0117EE  C16F  FFF7         	movff	??_printf+1,tblptrh
 16036  0117F2  0E00               	movlw	low (__mediumconst shr (0+16))
 16037  0117F4  6EF8               	movwf	tblptru,c
 16038  0117F6  0E0D               	movlw	(high __ramtop+-1)
 16039  0117F8  64F7               	cpfsgt	tblptrh,c
 16040  0117FA  D003               	bra	u12967
 16041  0117FC  0008               	tblrd		*
 16042  0117FE  50F5               	movf	tablat,w,c
 16043  011800  D005               	bra	u12960
 16044  011802                     u12967:
 16045  011802  CFF6 FFE9          	movff	tblptrl,fsr0l
 16046  011806  CFF7 FFEA          	movff	tblptrh,fsr0h
 16047  01180A  50EF               	movf	indf0,w,c
 16048  01180C                     u12960:
 16049  01180C  0101               	movlb	1	; () banked
 16050  01180E  6F8F               	movwf	printf@c& (0+255),b
 16051  011810  518F               	movf	printf@c& (0+255),w,b
 16052  011812  B4D8               	btfsc	status,2,c
 16053  011814  0012               	return	
 16054  011816  EFB7  F086         	goto	l1367
 16055  01181A                     __end_of_printf:
 16056                           	opt stack 0
 16057                           tblptru	equ	0xFF8
 16058                           tblptrh	equ	0xFF7
 16059                           tblptrl	equ	0xFF6
 16060                           tablat	equ	0xFF5
 16061                           prodh	equ	0xFF4
 16062                           prodl	equ	0xFF3
 16063                           intcon	equ	0xFF2
 16064                           indf0	equ	0xFEF
 16065                           postinc0	equ	0xFEE
 16066                           fsr0h	equ	0xFEA
 16067                           fsr0l	equ	0xFE9
 16068                           wreg	equ	0xFE8
 16069                           indf1	equ	0xFE7
 16070                           postdec1	equ	0xFE5
 16071                           plusw1	equ	0xFE3
 16072                           fsr1h	equ	0xFE2
 16073                           fsr1l	equ	0xFE1
 16074                           indf2	equ	0xFDF
 16075                           postinc2	equ	0xFDE
 16076                           postdec2	equ	0xFDD
 16077                           plusw2	equ	0xFDB
 16078                           fsr2h	equ	0xFDA
 16079                           fsr2l	equ	0xFD9
 16080                           status	equ	0xFD8
 16081                           
 16082 ;; *************** function _scale *****************
 16083 ;; Defined at:
 16084 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  scl             1    wreg     char 
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;  scl             1   91[BANK1 ] char 
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  3   85[BANK1 ] char 
 16091 ;; Registers used:
 16092 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16098 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16099 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16101 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16102 ;;Total ram usage:        7 bytes
 16103 ;; Hardware stack levels used:    1
 16104 ;; Hardware stack levels required when called:   16
 16105 ;; This function calls:
 16106 ;;		___awdiv
 16107 ;;		___awmod
 16108 ;;		___ftmul
 16109 ;;		___wmul
 16110 ;; This function is called by:
 16111 ;;		_printf
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115                           	psect	text35
 16116  012946                     __ptext35:
 16117                           	opt stack 0
 16118  012946                     _scale:
 16119                           	opt stack 11
 16120                           
 16121                           ; BSR set to: 1
 16122                           ;incstack = 0
 16123                           ;scale@scl stored from wreg
 16124  012946  0101               	movlb	1	; () banked
 16125  012948  6F5B               	movwf	scale@scl& (0+255),b
 16126                           
 16127                           ;doprnt.c: 428: if(scl < 0) {
 16128  01294A  0101               	movlb	1	; () banked
 16129  01294C  AF5B               	btfss	scale@scl& (0+255),7,b
 16130  01294E  D11E               	goto	l1356
 16131                           
 16132                           ; BSR set to: 1
 16133                           ;doprnt.c: 429: scl = -scl;
 16134  012950  6D5B               	negf	scale@scl& (0+255),b
 16135                           
 16136                           ;doprnt.c: 430: if(scl>=110)
 16137  012952  515B               	movf	scale@scl& (0+255),w,b
 16138  012954  0A80               	xorlw	128
 16139  012956  0F12               	addlw	-238
 16140  012958  A0D8               	btfss	status,0,c
 16141  01295A  D0A0               	goto	l1357
 16142                           
 16143                           ; BSR set to: 1
 16144                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16145  01295C  0E00               	movlw	0
 16146  01295E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16147  012960  0E03               	movlw	3
 16148  012962  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16149  012964  0E00               	movlw	0
 16150  012966  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16151  012968  0E0A               	movlw	10
 16152  01296A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16153  01296C  0E00               	movlw	0
 16154  01296E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16155  012970  0E64               	movlw	100
 16156  012972  6F19               	movwf	___awmod@divisor& (0+255),b
 16157  012974  515B               	movf	scale@scl& (0+255),w,b
 16158  012976  6F17               	movwf	___awmod@dividend& (0+255),b
 16159  012978  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16160  01297A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16161  01297C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16162  01297E  EC74  F0B1         	call	___awmod	;wreg free
 16163  012982  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16164  012986  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16165  01298A  EC79  F0AF         	call	___awdiv	;wreg free
 16166  01298E  0E09               	movlw	9
 16167  012990  0101               	movlb	1	; () banked
 16168  012992  251D               	addwf	?___awdiv& (0+255),w,b
 16169  012994  6F25               	movwf	___wmul@multiplier& (0+255),b
 16170  012996  0E00               	movlw	0
 16171  012998  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16172  01299A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16173  01299C  ECF4  F0B6         	call	___wmul	;wreg free
 16174  0129A0  0EDE               	movlw	low __npowers_
 16175  0129A2  0101               	movlb	1	; () banked
 16176  0129A4  2525               	addwf	?___wmul& (0+255),w,b
 16177  0129A6  6EF6               	movwf	tblptrl,c
 16178  0129A8  0EEB               	movlw	high __npowers_
 16179  0129AA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16180  0129AC  6EF7               	movwf	tblptrh,c
 16181  0129AE                     	if	1	;There are 3 active tblptr bytes
 16182  0129AE  6AF8               	clrf	tblptru,c
 16183  0129B0  0E00               	movlw	low (__mediumconst shr (0+16))
 16184  0129B2  22F8               	addwfc	tblptru,f,c
 16185  0129B4                     	endif
 16186  0129B4  0009               	tblrd		*+
 16187  0129B6  CFF5 F149          	movff	tablat,___ftmul@f2
 16188  0129BA  0009               	tblrd		*+
 16189  0129BC  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16190  0129C0  000A               	tblrd		*-
 16191  0129C2  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16192  0129C6  0E00               	movlw	0
 16193  0129C8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16194  0129CA  0E64               	movlw	100
 16195  0129CC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16196  0129CE  515B               	movf	scale@scl& (0+255),w,b
 16197  0129D0  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16198  0129D2  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16199  0129D4  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16200  0129D6  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16201  0129D8  EC79  F0AF         	call	___awdiv	;wreg free
 16202  0129DC  0E12               	movlw	18
 16203  0129DE  0101               	movlb	1	; () banked
 16204  0129E0  251D               	addwf	?___awdiv& (0+255),w,b
 16205  0129E2  6F25               	movwf	___wmul@multiplier& (0+255),b
 16206  0129E4  0E00               	movlw	0
 16207  0129E6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16208  0129E8  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16209  0129EA  0E00               	movlw	0
 16210  0129EC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16211  0129EE  0E03               	movlw	3
 16212  0129F0  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16213  0129F2  ECF4  F0B6         	call	___wmul	;wreg free
 16214  0129F6  0EDE               	movlw	low __npowers_
 16215  0129F8  0101               	movlb	1	; () banked
 16216  0129FA  2525               	addwf	?___wmul& (0+255),w,b
 16217  0129FC  6EF6               	movwf	tblptrl,c
 16218  0129FE  0EEB               	movlw	high __npowers_
 16219  012A00  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16220  012A02  6EF7               	movwf	tblptrh,c
 16221  012A04                     	if	1	;There are 3 active tblptr bytes
 16222  012A04  6AF8               	clrf	tblptru,c
 16223  012A06  0E00               	movlw	low (__mediumconst shr (0+16))
 16224  012A08  22F8               	addwfc	tblptru,f,c
 16225  012A0A                     	endif
 16226  012A0A  0009               	tblrd		*+
 16227  012A0C  CFF5 F146          	movff	tablat,___ftmul@f1
 16228  012A10  0009               	tblrd		*+
 16229  012A12  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16230  012A16  000A               	tblrd		*-
 16231  012A18  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16232  012A1C  EC4B  F0A7         	call	___ftmul	;wreg free
 16233  012A20  C146  F158         	movff	?___ftmul,_scale$3913
 16234  012A24  C147  F159         	movff	?___ftmul+1,_scale$3913+1
 16235  012A28  C148  F15A         	movff	?___ftmul+2,_scale$3913+2
 16236                           
 16237                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16238  012A2C  C158  F146         	movff	_scale$3913,___ftmul@f1
 16239  012A30  C159  F147         	movff	_scale$3913+1,___ftmul@f1+1
 16240  012A34  C15A  F148         	movff	_scale$3913+2,___ftmul@f1+2
 16241  012A38  0E00               	movlw	0
 16242  012A3A  0101               	movlb	1	; () banked
 16243  012A3C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16244  012A3E  0E03               	movlw	3
 16245  012A40  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16246  012A42  0E00               	movlw	0
 16247  012A44  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16248  012A46  0E0A               	movlw	10
 16249  012A48  6F19               	movwf	___awmod@divisor& (0+255),b
 16250  012A4A  515B               	movf	scale@scl& (0+255),w,b
 16251  012A4C  6F17               	movwf	___awmod@dividend& (0+255),b
 16252  012A4E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16253  012A50  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16254  012A52  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16255  012A54  EC74  F0B1         	call	___awmod	;wreg free
 16256  012A58  C117  F125         	movff	?___awmod,___wmul@multiplier
 16257  012A5C  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16258  012A60  ECF4  F0B6         	call	___wmul	;wreg free
 16259  012A64  0EDE               	movlw	low __npowers_
 16260  012A66  0101               	movlb	1	; () banked
 16261  012A68  2525               	addwf	?___wmul& (0+255),w,b
 16262  012A6A  6EF6               	movwf	tblptrl,c
 16263  012A6C  0EEB               	movlw	high __npowers_
 16264  012A6E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16265  012A70  6EF7               	movwf	tblptrh,c
 16266  012A72                     	if	1	;There are 3 active tblptr bytes
 16267  012A72  6AF8               	clrf	tblptru,c
 16268  012A74  0E00               	movlw	low (__mediumconst shr (0+16))
 16269  012A76  22F8               	addwfc	tblptru,f,c
 16270  012A78                     	endif
 16271  012A78  0009               	tblrd		*+
 16272  012A7A  CFF5 F149          	movff	tablat,___ftmul@f2
 16273  012A7E  0009               	tblrd		*+
 16274  012A80  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16275  012A84  000A               	tblrd		*-
 16276  012A86  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16277  012A8A  EC4B  F0A7         	call	___ftmul	;wreg free
 16278  012A8E  C146  F155         	movff	?___ftmul,?_scale
 16279  012A92  C147  F156         	movff	?___ftmul+1,?_scale+1
 16280  012A96  C148  F157         	movff	?___ftmul+2,?_scale+2
 16281  012A9A  0012               	return	
 16282  012A9C                     l1357:
 16283                           
 16284                           ;doprnt.c: 432: else if(scl > 10)
 16285  012A9C  0101               	movlb	1	; () banked
 16286  012A9E  515B               	movf	scale@scl& (0+255),w,b
 16287  012AA0  0A80               	xorlw	128
 16288  012AA2  0F75               	addlw	-139
 16289  012AA4  A0D8               	btfss	status,0,c
 16290  012AA6  D05C               	goto	l1360
 16291                           
 16292                           ; BSR set to: 1
 16293                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16294  012AA8  0E00               	movlw	0
 16295  012AAA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16296  012AAC  0E0A               	movlw	10
 16297  012AAE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16298  012AB0  515B               	movf	scale@scl& (0+255),w,b
 16299  012AB2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16300  012AB4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16301  012AB6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16302  012AB8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16303  012ABA  EC79  F0AF         	call	___awdiv	;wreg free
 16304  012ABE  0E09               	movlw	9
 16305  012AC0  0101               	movlb	1	; () banked
 16306  012AC2  251D               	addwf	?___awdiv& (0+255),w,b
 16307  012AC4  6F25               	movwf	___wmul@multiplier& (0+255),b
 16308  012AC6  0E00               	movlw	0
 16309  012AC8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16310  012ACA  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16311  012ACC  0E00               	movlw	0
 16312  012ACE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16313  012AD0  0E03               	movlw	3
 16314  012AD2  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16315  012AD4  ECF4  F0B6         	call	___wmul	;wreg free
 16316  012AD8  0EDE               	movlw	low __npowers_
 16317  012ADA  0101               	movlb	1	; () banked
 16318  012ADC  2525               	addwf	?___wmul& (0+255),w,b
 16319  012ADE  6EF6               	movwf	tblptrl,c
 16320  012AE0  0EEB               	movlw	high __npowers_
 16321  012AE2  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16322  012AE4  6EF7               	movwf	tblptrh,c
 16323  012AE6                     	if	1	;There are 3 active tblptr bytes
 16324  012AE6  6AF8               	clrf	tblptru,c
 16325  012AE8  0E00               	movlw	low (__mediumconst shr (0+16))
 16326  012AEA  22F8               	addwfc	tblptru,f,c
 16327  012AEC                     	endif
 16328  012AEC  0009               	tblrd		*+
 16329  012AEE  CFF5 F146          	movff	tablat,___ftmul@f1
 16330  012AF2  0009               	tblrd		*+
 16331  012AF4  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16332  012AF8  000A               	tblrd		*-
 16333  012AFA  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16334  012AFE  0E00               	movlw	0
 16335  012B00  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16336  012B02  0E03               	movlw	3
 16337  012B04  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16338  012B06  0E00               	movlw	0
 16339  012B08  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16340  012B0A  0E0A               	movlw	10
 16341  012B0C  6F19               	movwf	___awmod@divisor& (0+255),b
 16342  012B0E  515B               	movf	scale@scl& (0+255),w,b
 16343  012B10  6F17               	movwf	___awmod@dividend& (0+255),b
 16344  012B12  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16345  012B14  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16346  012B16  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16347  012B18  EC74  F0B1         	call	___awmod	;wreg free
 16348  012B1C  C117  F125         	movff	?___awmod,___wmul@multiplier
 16349  012B20  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16350  012B24  ECF4  F0B6         	call	___wmul	;wreg free
 16351  012B28  0EDE               	movlw	low __npowers_
 16352  012B2A  0101               	movlb	1	; () banked
 16353  012B2C  2525               	addwf	?___wmul& (0+255),w,b
 16354  012B2E  6EF6               	movwf	tblptrl,c
 16355  012B30  0EEB               	movlw	high __npowers_
 16356  012B32  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16357  012B34  6EF7               	movwf	tblptrh,c
 16358  012B36                     	if	1	;There are 3 active tblptr bytes
 16359  012B36  6AF8               	clrf	tblptru,c
 16360  012B38  0E00               	movlw	low (__mediumconst shr (0+16))
 16361  012B3A  22F8               	addwfc	tblptru,f,c
 16362  012B3C                     	endif
 16363  012B3C  0009               	tblrd		*+
 16364  012B3E  CFF5 F149          	movff	tablat,___ftmul@f2
 16365  012B42  0009               	tblrd		*+
 16366  012B44  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16367  012B48  000A               	tblrd		*-
 16368  012B4A  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16369  012B4E  EC4B  F0A7         	call	___ftmul	;wreg free
 16370  012B52  C146  F155         	movff	?___ftmul,?_scale
 16371  012B56  C147  F156         	movff	?___ftmul+1,?_scale+1
 16372  012B5A  C148  F157         	movff	?___ftmul+2,?_scale+2
 16373  012B5E  0012               	return	
 16374  012B60                     l1360:
 16375                           
 16376                           ;doprnt.c: 434: return _npowers_[scl];
 16377  012B60  0101               	movlb	1	; () banked
 16378  012B62  515B               	movf	scale@scl& (0+255),w,b
 16379  012B64  0D03               	mullw	3
 16380  012B66  0EDE               	movlw	low __npowers_
 16381  012B68  24F3               	addwf	prodl,w,c
 16382  012B6A  6EF6               	movwf	tblptrl,c
 16383  012B6C  0EEB               	movlw	high __npowers_
 16384  012B6E  20F4               	addwfc	prodh,w,c
 16385  012B70  6EF7               	movwf	tblptrh,c
 16386  012B72                     	if	1	;There are 3 active tblptr bytes
 16387  012B72  6AF8               	clrf	tblptru,c
 16388  012B74  0E00               	movlw	low (__mediumconst shr (0+16))
 16389  012B76  22F8               	addwfc	tblptru,f,c
 16390  012B78                     	endif
 16391  012B78  0009               	tblrd		*+
 16392  012B7A  CFF5 F155          	movff	tablat,?_scale
 16393  012B7E  0009               	tblrd		*+
 16394  012B80  CFF5 F156          	movff	tablat,?_scale+1
 16395  012B84  000A               	tblrd		*-
 16396  012B86  CFF5 F157          	movff	tablat,?_scale+2
 16397                           
 16398                           ; BSR set to: 1
 16399  012B8A  0012               	return	
 16400  012B8C                     l1356:
 16401                           
 16402                           ; BSR set to: 1
 16403                           ;doprnt.c: 435: }
 16404                           ;doprnt.c: 436: if(scl>=110)
 16405                           
 16406                           ; BSR set to: 1
 16407  012B8C  515B               	movf	scale@scl& (0+255),w,b
 16408  012B8E  0A80               	xorlw	128
 16409  012B90  0F12               	addlw	-238
 16410  012B92  A0D8               	btfss	status,0,c
 16411  012B94  D0A0               	goto	l1361
 16412                           
 16413                           ; BSR set to: 1
 16414                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16415  012B96  0E00               	movlw	0
 16416  012B98  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16417  012B9A  0E03               	movlw	3
 16418  012B9C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16419  012B9E  0E00               	movlw	0
 16420  012BA0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16421  012BA2  0E0A               	movlw	10
 16422  012BA4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16423  012BA6  0E00               	movlw	0
 16424  012BA8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16425  012BAA  0E64               	movlw	100
 16426  012BAC  6F19               	movwf	___awmod@divisor& (0+255),b
 16427  012BAE  515B               	movf	scale@scl& (0+255),w,b
 16428  012BB0  6F17               	movwf	___awmod@dividend& (0+255),b
 16429  012BB2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16430  012BB4  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16431  012BB6  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16432  012BB8  EC74  F0B1         	call	___awmod	;wreg free
 16433  012BBC  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16434  012BC0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16435  012BC4  EC79  F0AF         	call	___awdiv	;wreg free
 16436  012BC8  0E09               	movlw	9
 16437  012BCA  0101               	movlb	1	; () banked
 16438  012BCC  251D               	addwf	?___awdiv& (0+255),w,b
 16439  012BCE  6F25               	movwf	___wmul@multiplier& (0+255),b
 16440  012BD0  0E00               	movlw	0
 16441  012BD2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16442  012BD4  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16443  012BD6  ECF4  F0B6         	call	___wmul	;wreg free
 16444  012BDA  0EB7               	movlw	low __powers_
 16445  012BDC  0101               	movlb	1	; () banked
 16446  012BDE  2525               	addwf	?___wmul& (0+255),w,b
 16447  012BE0  6EF6               	movwf	tblptrl,c
 16448  012BE2  0EEB               	movlw	high __powers_
 16449  012BE4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16450  012BE6  6EF7               	movwf	tblptrh,c
 16451  012BE8                     	if	1	;There are 3 active tblptr bytes
 16452  012BE8  6AF8               	clrf	tblptru,c
 16453  012BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 16454  012BEC  22F8               	addwfc	tblptru,f,c
 16455  012BEE                     	endif
 16456  012BEE  0009               	tblrd		*+
 16457  012BF0  CFF5 F149          	movff	tablat,___ftmul@f2
 16458  012BF4  0009               	tblrd		*+
 16459  012BF6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16460  012BFA  000A               	tblrd		*-
 16461  012BFC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16462  012C00  0E00               	movlw	0
 16463  012C02  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16464  012C04  0E64               	movlw	100
 16465  012C06  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16466  012C08  515B               	movf	scale@scl& (0+255),w,b
 16467  012C0A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16468  012C0C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16469  012C0E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16470  012C10  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16471  012C12  EC79  F0AF         	call	___awdiv	;wreg free
 16472  012C16  0E12               	movlw	18
 16473  012C18  0101               	movlb	1	; () banked
 16474  012C1A  251D               	addwf	?___awdiv& (0+255),w,b
 16475  012C1C  6F25               	movwf	___wmul@multiplier& (0+255),b
 16476  012C1E  0E00               	movlw	0
 16477  012C20  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16478  012C22  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16479  012C24  0E00               	movlw	0
 16480  012C26  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16481  012C28  0E03               	movlw	3
 16482  012C2A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16483  012C2C  ECF4  F0B6         	call	___wmul	;wreg free
 16484  012C30  0EB7               	movlw	low __powers_
 16485  012C32  0101               	movlb	1	; () banked
 16486  012C34  2525               	addwf	?___wmul& (0+255),w,b
 16487  012C36  6EF6               	movwf	tblptrl,c
 16488  012C38  0EEB               	movlw	high __powers_
 16489  012C3A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16490  012C3C  6EF7               	movwf	tblptrh,c
 16491  012C3E                     	if	1	;There are 3 active tblptr bytes
 16492  012C3E  6AF8               	clrf	tblptru,c
 16493  012C40  0E00               	movlw	low (__mediumconst shr (0+16))
 16494  012C42  22F8               	addwfc	tblptru,f,c
 16495  012C44                     	endif
 16496  012C44  0009               	tblrd		*+
 16497  012C46  CFF5 F146          	movff	tablat,___ftmul@f1
 16498  012C4A  0009               	tblrd		*+
 16499  012C4C  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16500  012C50  000A               	tblrd		*-
 16501  012C52  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16502  012C56  EC4B  F0A7         	call	___ftmul	;wreg free
 16503  012C5A  C146  F158         	movff	?___ftmul,_scale$3913
 16504  012C5E  C147  F159         	movff	?___ftmul+1,_scale$3913+1
 16505  012C62  C148  F15A         	movff	?___ftmul+2,_scale$3913+2
 16506                           
 16507                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16508  012C66  C158  F146         	movff	_scale$3913,___ftmul@f1
 16509  012C6A  C159  F147         	movff	_scale$3913+1,___ftmul@f1+1
 16510  012C6E  C15A  F148         	movff	_scale$3913+2,___ftmul@f1+2
 16511  012C72  0E00               	movlw	0
 16512  012C74  0101               	movlb	1	; () banked
 16513  012C76  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16514  012C78  0E03               	movlw	3
 16515  012C7A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16516  012C7C  0E00               	movlw	0
 16517  012C7E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16518  012C80  0E0A               	movlw	10
 16519  012C82  6F19               	movwf	___awmod@divisor& (0+255),b
 16520  012C84  515B               	movf	scale@scl& (0+255),w,b
 16521  012C86  6F17               	movwf	___awmod@dividend& (0+255),b
 16522  012C88  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16523  012C8A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16524  012C8C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16525  012C8E  EC74  F0B1         	call	___awmod	;wreg free
 16526  012C92  C117  F125         	movff	?___awmod,___wmul@multiplier
 16527  012C96  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16528  012C9A  ECF4  F0B6         	call	___wmul	;wreg free
 16529  012C9E  0EB7               	movlw	low __powers_
 16530  012CA0  0101               	movlb	1	; () banked
 16531  012CA2  2525               	addwf	?___wmul& (0+255),w,b
 16532  012CA4  6EF6               	movwf	tblptrl,c
 16533  012CA6  0EEB               	movlw	high __powers_
 16534  012CA8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16535  012CAA  6EF7               	movwf	tblptrh,c
 16536  012CAC                     	if	1	;There are 3 active tblptr bytes
 16537  012CAC  6AF8               	clrf	tblptru,c
 16538  012CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 16539  012CB0  22F8               	addwfc	tblptru,f,c
 16540  012CB2                     	endif
 16541  012CB2  0009               	tblrd		*+
 16542  012CB4  CFF5 F149          	movff	tablat,___ftmul@f2
 16543  012CB8  0009               	tblrd		*+
 16544  012CBA  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16545  012CBE  000A               	tblrd		*-
 16546  012CC0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16547  012CC4  EC4B  F0A7         	call	___ftmul	;wreg free
 16548  012CC8  C146  F155         	movff	?___ftmul,?_scale
 16549  012CCC  C147  F156         	movff	?___ftmul+1,?_scale+1
 16550  012CD0  C148  F157         	movff	?___ftmul+2,?_scale+2
 16551  012CD4  0012               	return	
 16552  012CD6                     l1361:
 16553                           
 16554                           ;doprnt.c: 438: else if(scl > 10)
 16555  012CD6  0101               	movlb	1	; () banked
 16556  012CD8  515B               	movf	scale@scl& (0+255),w,b
 16557  012CDA  0A80               	xorlw	128
 16558  012CDC  0F75               	addlw	-139
 16559  012CDE  A0D8               	btfss	status,0,c
 16560  012CE0  D05C               	goto	l1363
 16561                           
 16562                           ; BSR set to: 1
 16563                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16564  012CE2  0E00               	movlw	0
 16565  012CE4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16566  012CE6  0E0A               	movlw	10
 16567  012CE8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16568  012CEA  515B               	movf	scale@scl& (0+255),w,b
 16569  012CEC  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16570  012CEE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16571  012CF0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16572  012CF2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16573  012CF4  EC79  F0AF         	call	___awdiv	;wreg free
 16574  012CF8  0E09               	movlw	9
 16575  012CFA  0101               	movlb	1	; () banked
 16576  012CFC  251D               	addwf	?___awdiv& (0+255),w,b
 16577  012CFE  6F25               	movwf	___wmul@multiplier& (0+255),b
 16578  012D00  0E00               	movlw	0
 16579  012D02  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16580  012D04  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16581  012D06  0E00               	movlw	0
 16582  012D08  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16583  012D0A  0E03               	movlw	3
 16584  012D0C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16585  012D0E  ECF4  F0B6         	call	___wmul	;wreg free
 16586  012D12  0EB7               	movlw	low __powers_
 16587  012D14  0101               	movlb	1	; () banked
 16588  012D16  2525               	addwf	?___wmul& (0+255),w,b
 16589  012D18  6EF6               	movwf	tblptrl,c
 16590  012D1A  0EEB               	movlw	high __powers_
 16591  012D1C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16592  012D1E  6EF7               	movwf	tblptrh,c
 16593  012D20                     	if	1	;There are 3 active tblptr bytes
 16594  012D20  6AF8               	clrf	tblptru,c
 16595  012D22  0E00               	movlw	low (__mediumconst shr (0+16))
 16596  012D24  22F8               	addwfc	tblptru,f,c
 16597  012D26                     	endif
 16598  012D26  0009               	tblrd		*+
 16599  012D28  CFF5 F146          	movff	tablat,___ftmul@f1
 16600  012D2C  0009               	tblrd		*+
 16601  012D2E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16602  012D32  000A               	tblrd		*-
 16603  012D34  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16604  012D38  0E00               	movlw	0
 16605  012D3A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16606  012D3C  0E03               	movlw	3
 16607  012D3E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16608  012D40  0E00               	movlw	0
 16609  012D42  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16610  012D44  0E0A               	movlw	10
 16611  012D46  6F19               	movwf	___awmod@divisor& (0+255),b
 16612  012D48  515B               	movf	scale@scl& (0+255),w,b
 16613  012D4A  6F17               	movwf	___awmod@dividend& (0+255),b
 16614  012D4C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16615  012D4E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16616  012D50  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16617  012D52  EC74  F0B1         	call	___awmod	;wreg free
 16618  012D56  C117  F125         	movff	?___awmod,___wmul@multiplier
 16619  012D5A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16620  012D5E  ECF4  F0B6         	call	___wmul	;wreg free
 16621  012D62  0EB7               	movlw	low __powers_
 16622  012D64  0101               	movlb	1	; () banked
 16623  012D66  2525               	addwf	?___wmul& (0+255),w,b
 16624  012D68  6EF6               	movwf	tblptrl,c
 16625  012D6A  0EEB               	movlw	high __powers_
 16626  012D6C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16627  012D6E  6EF7               	movwf	tblptrh,c
 16628  012D70                     	if	1	;There are 3 active tblptr bytes
 16629  012D70  6AF8               	clrf	tblptru,c
 16630  012D72  0E00               	movlw	low (__mediumconst shr (0+16))
 16631  012D74  22F8               	addwfc	tblptru,f,c
 16632  012D76                     	endif
 16633  012D76  0009               	tblrd		*+
 16634  012D78  CFF5 F149          	movff	tablat,___ftmul@f2
 16635  012D7C  0009               	tblrd		*+
 16636  012D7E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16637  012D82  000A               	tblrd		*-
 16638  012D84  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16639  012D88  EC4B  F0A7         	call	___ftmul	;wreg free
 16640  012D8C  C146  F155         	movff	?___ftmul,?_scale
 16641  012D90  C147  F156         	movff	?___ftmul+1,?_scale+1
 16642  012D94  C148  F157         	movff	?___ftmul+2,?_scale+2
 16643  012D98  0012               	return	
 16644  012D9A                     l1363:
 16645                           
 16646                           ;doprnt.c: 440: return _powers_[scl];
 16647  012D9A  0101               	movlb	1	; () banked
 16648  012D9C  515B               	movf	scale@scl& (0+255),w,b
 16649  012D9E  0D03               	mullw	3
 16650  012DA0  0EB7               	movlw	low __powers_
 16651  012DA2  24F3               	addwf	prodl,w,c
 16652  012DA4  6EF6               	movwf	tblptrl,c
 16653  012DA6  0EEB               	movlw	high __powers_
 16654  012DA8  20F4               	addwfc	prodh,w,c
 16655  012DAA  6EF7               	movwf	tblptrh,c
 16656  012DAC                     	if	1	;There are 3 active tblptr bytes
 16657  012DAC  6AF8               	clrf	tblptru,c
 16658  012DAE  0E00               	movlw	low (__mediumconst shr (0+16))
 16659  012DB0  22F8               	addwfc	tblptru,f,c
 16660  012DB2                     	endif
 16661  012DB2  0009               	tblrd		*+
 16662  012DB4  CFF5 F155          	movff	tablat,?_scale
 16663  012DB8  0009               	tblrd		*+
 16664  012DBA  CFF5 F156          	movff	tablat,?_scale+1
 16665  012DBE  000A               	tblrd		*-
 16666  012DC0  CFF5 F157          	movff	tablat,?_scale+2
 16667  012DC4  0012               	return	
 16668  012DC6                     __end_of_scale:
 16669                           	opt stack 0
 16670                           tblptru	equ	0xFF8
 16671                           tblptrh	equ	0xFF7
 16672                           tblptrl	equ	0xFF6
 16673                           tablat	equ	0xFF5
 16674                           prodh	equ	0xFF4
 16675                           prodl	equ	0xFF3
 16676                           intcon	equ	0xFF2
 16677                           indf0	equ	0xFEF
 16678                           postinc0	equ	0xFEE
 16679                           fsr0h	equ	0xFEA
 16680                           fsr0l	equ	0xFE9
 16681                           wreg	equ	0xFE8
 16682                           indf1	equ	0xFE7
 16683                           postdec1	equ	0xFE5
 16684                           plusw1	equ	0xFE3
 16685                           fsr1h	equ	0xFE2
 16686                           fsr1l	equ	0xFE1
 16687                           indf2	equ	0xFDF
 16688                           postinc2	equ	0xFDE
 16689                           postdec2	equ	0xFDD
 16690                           plusw2	equ	0xFDB
 16691                           fsr2h	equ	0xFDA
 16692                           fsr2l	equ	0xFD9
 16693                           status	equ	0xFD8
 16694                           
 16695 ;; *************** function _putch *****************
 16696 ;; Defined at:
 16697 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;  txData          1    wreg     unsigned char 
 16700 ;; Auto vars:     Size  Location     Type
 16701 ;;  txData          1   24[BANK1 ] unsigned char 
 16702 ;; Return value:  Size  Location     Type
 16703 ;;                  1    wreg      void 
 16704 ;; Registers used:
 16705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16706 ;; Tracked objects:
 16707 ;;		On entry : 0/0
 16708 ;;		On exit  : 0/0
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16712 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16714 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16715 ;;Total ram usage:        1 bytes
 16716 ;; Hardware stack levels used:    1
 16717 ;; Hardware stack levels required when called:   15
 16718 ;; This function calls:
 16719 ;;		_EUSART2_Write
 16720 ;; This function is called by:
 16721 ;;		_printf
 16722 ;; This function uses a non-reentrant model
 16723 ;;
 16724                           
 16725                           	psect	text36
 16726  0170AE                     __ptext36:
 16727                           	opt stack 0
 16728  0170AE                     _putch:
 16729                           	opt stack 12
 16730                           
 16731                           ;incstack = 0
 16732                           ;putch@txData stored from wreg
 16733  0170AE  0101               	movlb	1	; () banked
 16734  0170B0  6F18               	movwf	putch@txData& (0+255),b
 16735                           
 16736                           ;eusart2.c: 195: EUSART2_Write(txData);
 16737  0170B2  0101               	movlb	1	; () banked
 16738  0170B4  5118               	movf	putch@txData& (0+255),w,b
 16739  0170B6  EC73  F0B4         	call	_EUSART2_Write
 16740  0170BA  0012               	return		;funcret
 16741  0170BC                     __end_of_putch:
 16742                           	opt stack 0
 16743                           tblptru	equ	0xFF8
 16744                           tblptrh	equ	0xFF7
 16745                           tblptrl	equ	0xFF6
 16746                           tablat	equ	0xFF5
 16747                           prodh	equ	0xFF4
 16748                           prodl	equ	0xFF3
 16749                           intcon	equ	0xFF2
 16750                           indf0	equ	0xFEF
 16751                           postinc0	equ	0xFEE
 16752                           fsr0h	equ	0xFEA
 16753                           fsr0l	equ	0xFE9
 16754                           wreg	equ	0xFE8
 16755                           indf1	equ	0xFE7
 16756                           postdec1	equ	0xFE5
 16757                           plusw1	equ	0xFE3
 16758                           fsr1h	equ	0xFE2
 16759                           fsr1l	equ	0xFE1
 16760                           indf2	equ	0xFDF
 16761                           postinc2	equ	0xFDE
 16762                           postdec2	equ	0xFDD
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function _EUSART2_Write *****************
 16769 ;; Defined at:
 16770 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  txData          1    wreg     unsigned char 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;  txData          1   23[BANK1 ] unsigned char 
 16775 ;; Return value:  Size  Location     Type
 16776 ;;                  1    wreg      void 
 16777 ;; Registers used:
 16778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16785 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16787 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16788 ;;Total ram usage:        1 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:   14
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		_putch
 16795 ;; This function uses a non-reentrant model
 16796 ;;
 16797                           
 16798                           	psect	text37
 16799  0168E6                     __ptext37:
 16800                           	opt stack 0
 16801  0168E6                     _EUSART2_Write:
 16802                           	opt stack 12
 16803                           
 16804                           ;incstack = 0
 16805                           ;EUSART2_Write@txData stored from wreg
 16806  0168E6  0101               	movlb	1	; () banked
 16807  0168E8  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 16808                           
 16809                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 16810  0168EA  D002               	goto	l388
 16811  0168EC                     l389:
 16812                           
 16813                           ; BSR set to: 1
 16814  0168EC  0004               	clrwdt		;# 
 16815                           
 16816                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 16817  0168EE  827E               	bsf	3966,1,c	;volatile
 16818  0168F0                     l388:
 16819  0168F0  0101               	movlb	1	; () banked
 16820  0168F2  51D4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 16821  0168F4  B4D8               	btfsc	status,2,c
 16822  0168F6  D7FA               	goto	l389
 16823                           
 16824                           ; BSR set to: 1
 16825                           ;eusart2.c: 167: }
 16826                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 16827  0168F8  927E               	bcf	3966,1,c	;volatile
 16828                           
 16829                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 16830  0168FA  010E               	movlb	14	; () banked
 16831  0168FC  BD2C               	btfsc	44,6,b	;volatile
 16832  0168FE  D003               	goto	l391
 16833                           
 16834                           ; BSR set to: 14
 16835                           ;eusart2.c: 172: {
 16836                           ;eusart2.c: 173: TX2REG = txData;
 16837  016900  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 16838                           
 16839                           ;eusart2.c: 174: }
 16840  016904  D013               	goto	l392
 16841  016906                     l391:
 16842                           
 16843                           ; BSR set to: 14
 16844                           ;eusart2.c: 175: else
 16845                           ;eusart2.c: 176: {
 16846                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 16847  016906  9D2C               	bcf	44,6,b	;volatile
 16848                           
 16849                           ; BSR set to: 14
 16850                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 16851  016908  0101               	movlb	1	; () banked
 16852  01690A  51D6               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 16853  01690C  0D01               	mullw	1
 16854  01690E  0E00               	movlw	low _eusart2TxBuffer
 16855  016910  24F3               	addwf	prodl,w,c
 16856  016912  6ED9               	movwf	fsr2l,c
 16857  016914  0E03               	movlw	high _eusart2TxBuffer
 16858  016916  20F4               	addwfc	prodh,w,c
 16859  016918  6EDA               	movwf	fsr2h,c
 16860  01691A  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 16861                           
 16862                           ; BSR set to: 1
 16863  01691E  2BD6               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 16864                           
 16865                           ; BSR set to: 1
 16866                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 16867  016920  0E7F               	movlw	127
 16868  016922  65D6               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 16869  016924  D002               	goto	l393
 16870                           
 16871                           ; BSR set to: 1
 16872                           ;eusart2.c: 180: {
 16873                           ;eusart2.c: 181: eusart2TxHead = 0;
 16874  016926  0E00               	movlw	0
 16875  016928  6FD6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16876  01692A                     l393:
 16877                           
 16878                           ; BSR set to: 1
 16879                           ;eusart2.c: 182: }
 16880                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 16881                           
 16882                           ; BSR set to: 1
 16883  01692A  07D4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 16884  01692C                     l392:
 16885                           
 16886                           ;eusart2.c: 184: }
 16887                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 16888                           
 16889                           ; BSR set to: 1
 16890  01692C  010E               	movlb	14	; () banked
 16891  01692E  8D2C               	bsf	44,6,b	;volatile
 16892                           
 16893                           ; BSR set to: 14
 16894  016930  0012               	return		;funcret
 16895  016932                     __end_of_EUSART2_Write:
 16896                           	opt stack 0
 16897                           tblptru	equ	0xFF8
 16898                           tblptrh	equ	0xFF7
 16899                           tblptrl	equ	0xFF6
 16900                           tablat	equ	0xFF5
 16901                           prodh	equ	0xFF4
 16902                           prodl	equ	0xFF3
 16903                           intcon	equ	0xFF2
 16904                           indf0	equ	0xFEF
 16905                           postinc0	equ	0xFEE
 16906                           fsr0h	equ	0xFEA
 16907                           fsr0l	equ	0xFE9
 16908                           wreg	equ	0xFE8
 16909                           indf1	equ	0xFE7
 16910                           postdec1	equ	0xFE5
 16911                           plusw1	equ	0xFE3
 16912                           fsr1h	equ	0xFE2
 16913                           fsr1l	equ	0xFE1
 16914                           indf2	equ	0xFDF
 16915                           postinc2	equ	0xFDE
 16916                           postdec2	equ	0xFDD
 16917                           plusw2	equ	0xFDB
 16918                           fsr2h	equ	0xFDA
 16919                           fsr2l	equ	0xFD9
 16920                           status	equ	0xFD8
 16921                           
 16922 ;; *************** function _isdigit *****************
 16923 ;; Defined at:
 16924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 16925 ;; Parameters:    Size  Location     Type
 16926 ;;  c               1    wreg     unsigned char 
 16927 ;; Auto vars:     Size  Location     Type
 16928 ;;  c               1   25[BANK1 ] unsigned char 
 16929 ;; Return value:  Size  Location     Type
 16930 ;;		None               void
 16931 ;; Registers used:
 16932 ;;		wreg, status,2, status,0
 16933 ;; Tracked objects:
 16934 ;;		On entry : 0/0
 16935 ;;		On exit  : 0/0
 16936 ;;		Unchanged: 0/0
 16937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16939 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16940 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16941 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16942 ;;Total ram usage:        3 bytes
 16943 ;; Hardware stack levels used:    1
 16944 ;; Hardware stack levels required when called:   14
 16945 ;; This function calls:
 16946 ;;		Nothing
 16947 ;; This function is called by:
 16948 ;;		_printf
 16949 ;;		_atoi
 16950 ;; This function uses a non-reentrant model
 16951 ;;
 16952                           
 16953                           	psect	text38
 16954  016F40                     __ptext38:
 16955                           	opt stack 0
 16956  016F40                     _isdigit:
 16957                           	opt stack 13
 16958                           
 16959                           ; BSR set to: 14
 16960                           ;incstack = 0
 16961                           ;isdigit@c stored from wreg
 16962  016F40  0101               	movlb	1	; () banked
 16963  016F42  6F19               	movwf	isdigit@c& (0+255),b
 16964  016F44  0E00               	movlw	0
 16965  016F46  0101               	movlb	1	; () banked
 16966  016F48  6F18               	movwf	_isdigit$3221& (0+255),b
 16967                           
 16968                           ; BSR set to: 1
 16969  016F4A  0E3A               	movlw	58
 16970  016F4C  6119               	cpfslt	isdigit@c& (0+255),b
 16971  016F4E  D005               	goto	l1889
 16972                           
 16973                           ; BSR set to: 1
 16974  016F50  0E2F               	movlw	47
 16975  016F52  6519               	cpfsgt	isdigit@c& (0+255),b
 16976  016F54  D002               	goto	l1889
 16977                           
 16978                           ; BSR set to: 1
 16979  016F56  0E01               	movlw	1
 16980  016F58  6F18               	movwf	_isdigit$3221& (0+255),b
 16981  016F5A                     l1889:
 16982                           
 16983                           ; BSR set to: 1
 16984                           
 16985                           ; BSR set to: 1
 16986  016F5A  C118  F117         	movff	_isdigit$3221,??_isdigit
 16987  016F5E  3117               	rrcf	??_isdigit& (0+255),w,b
 16988  016F60  0012               	return	
 16989  016F62                     __end_of_isdigit:
 16990                           	opt stack 0
 16991                           tblptru	equ	0xFF8
 16992                           tblptrh	equ	0xFF7
 16993                           tblptrl	equ	0xFF6
 16994                           tablat	equ	0xFF5
 16995                           prodh	equ	0xFF4
 16996                           prodl	equ	0xFF3
 16997                           intcon	equ	0xFF2
 16998                           indf0	equ	0xFEF
 16999                           postinc0	equ	0xFEE
 17000                           fsr0h	equ	0xFEA
 17001                           fsr0l	equ	0xFE9
 17002                           wreg	equ	0xFE8
 17003                           indf1	equ	0xFE7
 17004                           postdec1	equ	0xFE5
 17005                           plusw1	equ	0xFE3
 17006                           fsr1h	equ	0xFE2
 17007                           fsr1l	equ	0xFE1
 17008                           indf2	equ	0xFDF
 17009                           postinc2	equ	0xFDE
 17010                           postdec2	equ	0xFDD
 17011                           plusw2	equ	0xFDB
 17012                           fsr2h	equ	0xFDA
 17013                           fsr2l	equ	0xFD9
 17014                           status	equ	0xFD8
 17015                           
 17016 ;; *************** function _fround *****************
 17017 ;; Defined at:
 17018 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;  prec            1    wreg     unsigned char 
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;  prec            1   94[BANK1 ] unsigned char 
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  3   85[BANK1 ] unsigned char 
 17025 ;; Registers used:
 17026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17032 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17033 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17035 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17036 ;;Total ram usage:       10 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:   16
 17039 ;; This function calls:
 17040 ;;		___awdiv
 17041 ;;		___awmod
 17042 ;;		___ftmul
 17043 ;;		___wmul
 17044 ;; This function is called by:
 17045 ;;		_printf
 17046 ;; This function uses a non-reentrant model
 17047 ;;
 17048                           
 17049                           	psect	text39
 17050  01357E                     __ptext39:
 17051                           	opt stack 0
 17052  01357E                     _fround:
 17053                           	opt stack 11
 17054                           
 17055                           ; BSR set to: 1
 17056                           ;incstack = 0
 17057                           ;fround@prec stored from wreg
 17058  01357E  0101               	movlb	1	; () banked
 17059  013580  6F5E               	movwf	fround@prec& (0+255),b
 17060                           
 17061                           ;doprnt.c: 413: if(prec>=110)
 17062  013582  0E6D               	movlw	109
 17063  013584  0101               	movlb	1	; () banked
 17064  013586  655E               	cpfsgt	fround@prec& (0+255),b
 17065  013588  D0AF               	goto	l1350
 17066                           
 17067                           ; BSR set to: 1
 17068                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17069  01358A  0E00               	movlw	0
 17070  01358C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17071  01358E  0E03               	movlw	3
 17072  013590  6F27               	movwf	___wmul@multiplicand& (0+255),b
 17073  013592  0E00               	movlw	0
 17074  013594  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17075  013596  0E0A               	movlw	10
 17076  013598  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17077  01359A  0E00               	movlw	0
 17078  01359C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17079  01359E  0E64               	movlw	100
 17080  0135A0  6F19               	movwf	___awmod@divisor& (0+255),b
 17081  0135A2  C15E  F117         	movff	fround@prec,___awmod@dividend
 17082  0135A6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17083  0135A8  EC74  F0B1         	call	___awmod	;wreg free
 17084  0135AC  C117  F11D         	movff	?___awmod,___awdiv@dividend
 17085  0135B0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 17086  0135B4  EC79  F0AF         	call	___awdiv	;wreg free
 17087  0135B8  0E09               	movlw	9
 17088  0135BA  0101               	movlb	1	; () banked
 17089  0135BC  251D               	addwf	?___awdiv& (0+255),w,b
 17090  0135BE  6F25               	movwf	___wmul@multiplier& (0+255),b
 17091  0135C0  0E00               	movlw	0
 17092  0135C2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17093  0135C4  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 17094  0135C6  ECF4  F0B6         	call	___wmul	;wreg free
 17095  0135CA  0EDE               	movlw	low __npowers_
 17096  0135CC  0101               	movlb	1	; () banked
 17097  0135CE  2525               	addwf	?___wmul& (0+255),w,b
 17098  0135D0  6EF6               	movwf	tblptrl,c
 17099  0135D2  0EEB               	movlw	high __npowers_
 17100  0135D4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 17101  0135D6  6EF7               	movwf	tblptrh,c
 17102  0135D8                     	if	1	;There are 3 active tblptr bytes
 17103  0135D8  6AF8               	clrf	tblptru,c
 17104  0135DA  0E00               	movlw	low (__mediumconst shr (0+16))
 17105  0135DC  22F8               	addwfc	tblptru,f,c
 17106  0135DE                     	endif
 17107  0135DE  0009               	tblrd		*+
 17108  0135E0  CFF5 F149          	movff	tablat,___ftmul@f2
 17109  0135E4  0009               	tblrd		*+
 17110  0135E6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 17111  0135EA  000A               	tblrd		*-
 17112  0135EC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 17113  0135F0  0E00               	movlw	0
 17114  0135F2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17115  0135F4  0E64               	movlw	100
 17116  0135F6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17117  0135F8  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 17118  0135FC  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17119  0135FE  EC79  F0AF         	call	___awdiv	;wreg free
 17120  013602  0E12               	movlw	18
 17121  013604  0101               	movlb	1	; () banked
 17122  013606  251D               	addwf	?___awdiv& (0+255),w,b
 17123  013608  6F25               	movwf	___wmul@multiplier& (0+255),b
 17124  01360A  0E00               	movlw	0
 17125  01360C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17126  01360E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 17127  013610  0E00               	movlw	0
 17128  013612  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17129  013614  0E03               	movlw	3
 17130  013616  6F27               	movwf	___wmul@multiplicand& (0+255),b
 17131  013618  ECF4  F0B6         	call	___wmul	;wreg free
 17132  01361C  0EDE               	movlw	low __npowers_
 17133  01361E  0101               	movlb	1	; () banked
 17134  013620  2525               	addwf	?___wmul& (0+255),w,b
 17135  013622  6EF6               	movwf	tblptrl,c
 17136  013624  0EEB               	movlw	high __npowers_
 17137  013626  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 17138  013628  6EF7               	movwf	tblptrh,c
 17139  01362A                     	if	1	;There are 3 active tblptr bytes
 17140  01362A  6AF8               	clrf	tblptru,c
 17141  01362C  0E00               	movlw	low (__mediumconst shr (0+16))
 17142  01362E  22F8               	addwfc	tblptru,f,c
 17143  013630                     	endif
 17144  013630  0009               	tblrd		*+
 17145  013632  CFF5 F146          	movff	tablat,___ftmul@f1
 17146  013636  0009               	tblrd		*+
 17147  013638  CFF5 F147          	movff	tablat,___ftmul@f1+1
 17148  01363C  000A               	tblrd		*-
 17149  01363E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 17150  013642  EC4B  F0A7         	call	___ftmul	;wreg free
 17151  013646  C146  F15B         	movff	?___ftmul,_fround$3911
 17152  01364A  C147  F15C         	movff	?___ftmul+1,_fround$3911+1
 17153  01364E  C148  F15D         	movff	?___ftmul+2,_fround$3911+2
 17154                           
 17155                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17156  013652  0E00               	movlw	0
 17157  013654  0101               	movlb	1	; () banked
 17158  013656  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17159  013658  0E03               	movlw	3
 17160  01365A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 17161  01365C  0E00               	movlw	0
 17162  01365E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17163  013660  0E0A               	movlw	10
 17164  013662  6F19               	movwf	___awmod@divisor& (0+255),b
 17165  013664  C15E  F117         	movff	fround@prec,___awmod@dividend
 17166  013668  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17167  01366A  EC74  F0B1         	call	___awmod	;wreg free
 17168  01366E  C117  F125         	movff	?___awmod,___wmul@multiplier
 17169  013672  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 17170  013676  ECF4  F0B6         	call	___wmul	;wreg free
 17171  01367A  0EDE               	movlw	low __npowers_
 17172  01367C  0101               	movlb	1	; () banked
 17173  01367E  2525               	addwf	?___wmul& (0+255),w,b
 17174  013680  6EF6               	movwf	tblptrl,c
 17175  013682  0EEB               	movlw	high __npowers_
 17176  013684  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 17177  013686  6EF7               	movwf	tblptrh,c
 17178  013688                     	if	1	;There are 3 active tblptr bytes
 17179  013688  6AF8               	clrf	tblptru,c
 17180  01368A  0E00               	movlw	low (__mediumconst shr (0+16))
 17181  01368C  22F8               	addwfc	tblptru,f,c
 17182  01368E                     	endif
 17183  01368E  0009               	tblrd		*+
 17184  013690  CFF5 F149          	movff	tablat,___ftmul@f2
 17185  013694  0009               	tblrd		*+
 17186  013696  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 17187  01369A  000A               	tblrd		*-
 17188  01369C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 17189  0136A0  C15B  F146         	movff	_fround$3911,___ftmul@f1
 17190  0136A4  C15C  F147         	movff	_fround$3911+1,___ftmul@f1+1
 17191  0136A8  C15D  F148         	movff	_fround$3911+2,___ftmul@f1+2
 17192  0136AC  EC4B  F0A7         	call	___ftmul	;wreg free
 17193  0136B0  C146  F158         	movff	?___ftmul,_fround$3912
 17194  0136B4  C147  F159         	movff	?___ftmul+1,_fround$3912+1
 17195  0136B8  C148  F15A         	movff	?___ftmul+2,_fround$3912+2
 17196                           
 17197                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17198  0136BC  C158  F146         	movff	_fround$3912,___ftmul@f1
 17199  0136C0  C159  F147         	movff	_fround$3912+1,___ftmul@f1+1
 17200  0136C4  C15A  F148         	movff	_fround$3912+2,___ftmul@f1+2
 17201  0136C8  0E00               	movlw	0
 17202  0136CA  0101               	movlb	1	; () banked
 17203  0136CC  6F49               	movwf	___ftmul@f2& (0+255),b
 17204  0136CE  0E00               	movlw	0
 17205  0136D0  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 17206  0136D2  0E3F               	movlw	63
 17207  0136D4  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 17208  0136D6  EC4B  F0A7         	call	___ftmul	;wreg free
 17209  0136DA  C146  F155         	movff	?___ftmul,?_fround
 17210  0136DE  C147  F156         	movff	?___ftmul+1,?_fround+1
 17211  0136E2  C148  F157         	movff	?___ftmul+2,?_fround+2
 17212  0136E6  0012               	return	
 17213  0136E8                     l1350:
 17214                           
 17215                           ;doprnt.c: 415: else if(prec > 10)
 17216  0136E8  0E0A               	movlw	10
 17217  0136EA  0101               	movlb	1	; () banked
 17218  0136EC  655E               	cpfsgt	fround@prec& (0+255),b
 17219  0136EE  D06D               	goto	l1353
 17220                           
 17221                           ; BSR set to: 1
 17222                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17223  0136F0  0E00               	movlw	0
 17224  0136F2  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17225  0136F4  0E03               	movlw	3
 17226  0136F6  6F27               	movwf	___wmul@multiplicand& (0+255),b
 17227  0136F8  0E00               	movlw	0
 17228  0136FA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 17229  0136FC  0E0A               	movlw	10
 17230  0136FE  6F19               	movwf	___awmod@divisor& (0+255),b
 17231  013700  C15E  F117         	movff	fround@prec,___awmod@dividend
 17232  013704  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 17233  013706  EC74  F0B1         	call	___awmod	;wreg free
 17234  01370A  C117  F125         	movff	?___awmod,___wmul@multiplier
 17235  01370E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 17236  013712  ECF4  F0B6         	call	___wmul	;wreg free
 17237  013716  0EDE               	movlw	low __npowers_
 17238  013718  0101               	movlb	1	; () banked
 17239  01371A  2525               	addwf	?___wmul& (0+255),w,b
 17240  01371C  6EF6               	movwf	tblptrl,c
 17241  01371E  0EEB               	movlw	high __npowers_
 17242  013720  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 17243  013722  6EF7               	movwf	tblptrh,c
 17244  013724                     	if	1	;There are 3 active tblptr bytes
 17245  013724  6AF8               	clrf	tblptru,c
 17246  013726  0E00               	movlw	low (__mediumconst shr (0+16))
 17247  013728  22F8               	addwfc	tblptru,f,c
 17248  01372A                     	endif
 17249  01372A  0009               	tblrd		*+
 17250  01372C  CFF5 F149          	movff	tablat,___ftmul@f2
 17251  013730  0009               	tblrd		*+
 17252  013732  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 17253  013736  000A               	tblrd		*-
 17254  013738  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 17255  01373C  0E00               	movlw	0
 17256  01373E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17257  013740  0E0A               	movlw	10
 17258  013742  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17259  013744  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 17260  013748  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 17261  01374A  EC79  F0AF         	call	___awdiv	;wreg free
 17262  01374E  0E09               	movlw	9
 17263  013750  0101               	movlb	1	; () banked
 17264  013752  251D               	addwf	?___awdiv& (0+255),w,b
 17265  013754  6F25               	movwf	___wmul@multiplier& (0+255),b
 17266  013756  0E00               	movlw	0
 17267  013758  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 17268  01375A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 17269  01375C  0E00               	movlw	0
 17270  01375E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17271  013760  0E03               	movlw	3
 17272  013762  6F27               	movwf	___wmul@multiplicand& (0+255),b
 17273  013764  ECF4  F0B6         	call	___wmul	;wreg free
 17274  013768  0EDE               	movlw	low __npowers_
 17275  01376A  0101               	movlb	1	; () banked
 17276  01376C  2525               	addwf	?___wmul& (0+255),w,b
 17277  01376E  6EF6               	movwf	tblptrl,c
 17278  013770  0EEB               	movlw	high __npowers_
 17279  013772  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 17280  013774  6EF7               	movwf	tblptrh,c
 17281  013776                     	if	1	;There are 3 active tblptr bytes
 17282  013776  6AF8               	clrf	tblptru,c
 17283  013778  0E00               	movlw	low (__mediumconst shr (0+16))
 17284  01377A  22F8               	addwfc	tblptru,f,c
 17285  01377C                     	endif
 17286  01377C  0009               	tblrd		*+
 17287  01377E  CFF5 F146          	movff	tablat,___ftmul@f1
 17288  013782  0009               	tblrd		*+
 17289  013784  CFF5 F147          	movff	tablat,___ftmul@f1+1
 17290  013788  000A               	tblrd		*-
 17291  01378A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 17292  01378E  EC4B  F0A7         	call	___ftmul	;wreg free
 17293  013792  C146  F15B         	movff	?___ftmul,_fround$3911
 17294  013796  C147  F15C         	movff	?___ftmul+1,_fround$3911+1
 17295  01379A  C148  F15D         	movff	?___ftmul+2,_fround$3911+2
 17296                           
 17297                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17298  01379E  C15B  F146         	movff	_fround$3911,___ftmul@f1
 17299  0137A2  C15C  F147         	movff	_fround$3911+1,___ftmul@f1+1
 17300  0137A6  C15D  F148         	movff	_fround$3911+2,___ftmul@f1+2
 17301  0137AA  0E00               	movlw	0
 17302  0137AC  0101               	movlb	1	; () banked
 17303  0137AE  6F49               	movwf	___ftmul@f2& (0+255),b
 17304  0137B0  0E00               	movlw	0
 17305  0137B2  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 17306  0137B4  0E3F               	movlw	63
 17307  0137B6  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 17308  0137B8  EC4B  F0A7         	call	___ftmul	;wreg free
 17309  0137BC  C146  F155         	movff	?___ftmul,?_fround
 17310  0137C0  C147  F156         	movff	?___ftmul+1,?_fround+1
 17311  0137C4  C148  F157         	movff	?___ftmul+2,?_fround+2
 17312  0137C8  0012               	return	
 17313  0137CA                     l1353:
 17314                           
 17315                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17316  0137CA  0101               	movlb	1	; () banked
 17317  0137CC  515E               	movf	fround@prec& (0+255),w,b
 17318  0137CE  0D03               	mullw	3
 17319  0137D0  0EDE               	movlw	low __npowers_
 17320  0137D2  24F3               	addwf	prodl,w,c
 17321  0137D4  6EF6               	movwf	tblptrl,c
 17322  0137D6  0EEB               	movlw	high __npowers_
 17323  0137D8  20F4               	addwfc	prodh,w,c
 17324  0137DA  6EF7               	movwf	tblptrh,c
 17325  0137DC                     	if	1	;There are 3 active tblptr bytes
 17326  0137DC  6AF8               	clrf	tblptru,c
 17327  0137DE  0E00               	movlw	low (__mediumconst shr (0+16))
 17328  0137E0  22F8               	addwfc	tblptru,f,c
 17329  0137E2                     	endif
 17330  0137E2  0009               	tblrd		*+
 17331  0137E4  CFF5 F146          	movff	tablat,___ftmul@f1
 17332  0137E8  0009               	tblrd		*+
 17333  0137EA  CFF5 F147          	movff	tablat,___ftmul@f1+1
 17334  0137EE  000A               	tblrd		*-
 17335  0137F0  CFF5 F148          	movff	tablat,___ftmul@f1+2
 17336  0137F4  0E00               	movlw	0
 17337  0137F6  6F49               	movwf	___ftmul@f2& (0+255),b
 17338  0137F8  0E00               	movlw	0
 17339  0137FA  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 17340  0137FC  0E3F               	movlw	63
 17341  0137FE  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 17342  013800  EC4B  F0A7         	call	___ftmul	;wreg free
 17343  013804  C146  F155         	movff	?___ftmul,?_fround
 17344  013808  C147  F156         	movff	?___ftmul+1,?_fround+1
 17345  01380C  C148  F157         	movff	?___ftmul+2,?_fround+2
 17346  013810  0012               	return	
 17347  013812                     __end_of_fround:
 17348                           	opt stack 0
 17349                           tblptru	equ	0xFF8
 17350                           tblptrh	equ	0xFF7
 17351                           tblptrl	equ	0xFF6
 17352                           tablat	equ	0xFF5
 17353                           prodh	equ	0xFF4
 17354                           prodl	equ	0xFF3
 17355                           intcon	equ	0xFF2
 17356                           indf0	equ	0xFEF
 17357                           postinc0	equ	0xFEE
 17358                           fsr0h	equ	0xFEA
 17359                           fsr0l	equ	0xFE9
 17360                           wreg	equ	0xFE8
 17361                           indf1	equ	0xFE7
 17362                           postdec1	equ	0xFE5
 17363                           plusw1	equ	0xFE3
 17364                           fsr1h	equ	0xFE2
 17365                           fsr1l	equ	0xFE1
 17366                           indf2	equ	0xFDF
 17367                           postinc2	equ	0xFDE
 17368                           postdec2	equ	0xFDD
 17369                           plusw2	equ	0xFDB
 17370                           fsr2h	equ	0xFDA
 17371                           fsr2l	equ	0xFD9
 17372                           status	equ	0xFD8
 17373                           
 17374 ;; *************** function ___wmul *****************
 17375 ;; Defined at:
 17376 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 17377 ;; Parameters:    Size  Location     Type
 17378 ;;  multiplier      2   37[BANK1 ] unsigned int 
 17379 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 17380 ;; Auto vars:     Size  Location     Type
 17381 ;;  product         2   41[BANK1 ] unsigned int 
 17382 ;; Return value:  Size  Location     Type
 17383 ;;                  2   37[BANK1 ] unsigned int 
 17384 ;; Registers used:
 17385 ;;		wreg, status,2, status,0, prodl, prodh
 17386 ;; Tracked objects:
 17387 ;;		On entry : 0/0
 17388 ;;		On exit  : 0/0
 17389 ;;		Unchanged: 0/0
 17390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17391 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17392 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17394 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17395 ;;Total ram usage:        6 bytes
 17396 ;; Hardware stack levels used:    1
 17397 ;; Hardware stack levels required when called:   14
 17398 ;; This function calls:
 17399 ;;		Nothing
 17400 ;; This function is called by:
 17401 ;;		_ringBufferLUT
 17402 ;;		_fround
 17403 ;;		_scale
 17404 ;;		_printf
 17405 ;;		_atoi
 17406 ;; This function uses a non-reentrant model
 17407 ;;
 17408                           
 17409                           	psect	text40
 17410  016DE8                     __ptext40:
 17411                           	opt stack 0
 17412  016DE8                     ___wmul:
 17413                           	opt stack 12
 17414                           
 17415                           ;incstack = 0
 17416  016DE8  0101               	movlb	1	; () banked
 17417  016DEA  5125               	movf	___wmul@multiplier& (0+255),w,b
 17418  016DEC  0327               	mulwf	___wmul@multiplicand& (0+255),b
 17419  016DEE  CFF3 F129          	movff	prodl,___wmul@product
 17420  016DF2  CFF4 F12A          	movff	prodh,___wmul@product+1
 17421  016DF6  5125               	movf	___wmul@multiplier& (0+255),w,b
 17422  016DF8  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17423  016DFA  50F3               	movf	prodl,w,c
 17424  016DFC  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 17425  016DFE  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17426  016E00  0327               	mulwf	___wmul@multiplicand& (0+255),b
 17427  016E02  50F3               	movf	prodl,w,c
 17428  016E04  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 17429                           
 17430                           ; BSR set to: 1
 17431  016E06  C129  F125         	movff	___wmul@product,?___wmul
 17432  016E0A  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 17433  016E0E  0012               	return	
 17434  016E10                     __end_of___wmul:
 17435                           	opt stack 0
 17436                           tblptru	equ	0xFF8
 17437                           tblptrh	equ	0xFF7
 17438                           tblptrl	equ	0xFF6
 17439                           tablat	equ	0xFF5
 17440                           prodh	equ	0xFF4
 17441                           prodl	equ	0xFF3
 17442                           intcon	equ	0xFF2
 17443                           indf0	equ	0xFEF
 17444                           postinc0	equ	0xFEE
 17445                           fsr0h	equ	0xFEA
 17446                           fsr0l	equ	0xFE9
 17447                           wreg	equ	0xFE8
 17448                           indf1	equ	0xFE7
 17449                           postdec1	equ	0xFE5
 17450                           plusw1	equ	0xFE3
 17451                           fsr1h	equ	0xFE2
 17452                           fsr1l	equ	0xFE1
 17453                           indf2	equ	0xFDF
 17454                           postinc2	equ	0xFDE
 17455                           postdec2	equ	0xFDD
 17456                           plusw2	equ	0xFDB
 17457                           fsr2h	equ	0xFDA
 17458                           fsr2l	equ	0xFD9
 17459                           status	equ	0xFD8
 17460                           
 17461 ;; *************** function ___ftmul *****************
 17462 ;; Defined at:
 17463 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;  f1              3   70[BANK1 ] float 
 17466 ;;  f2              3   73[BANK1 ] float 
 17467 ;; Auto vars:     Size  Location     Type
 17468 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 17469 ;;  sign            1   84[BANK1 ] unsigned char 
 17470 ;;  cntr            1   83[BANK1 ] unsigned char 
 17471 ;;  exp             1   79[BANK1 ] unsigned char 
 17472 ;; Return value:  Size  Location     Type
 17473 ;;                  3   70[BANK1 ] float 
 17474 ;; Registers used:
 17475 ;;		wreg, status,2, status,0, cstack
 17476 ;; Tracked objects:
 17477 ;;		On entry : 0/0
 17478 ;;		On exit  : 0/0
 17479 ;;		Unchanged: 0/0
 17480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17481 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17482 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17483 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17484 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17485 ;;Total ram usage:       15 bytes
 17486 ;; Hardware stack levels used:    1
 17487 ;; Hardware stack levels required when called:   15
 17488 ;; This function calls:
 17489 ;;		___ftpack
 17490 ;; This function is called by:
 17491 ;;		_ringBufferLUT
 17492 ;;		_fround
 17493 ;;		_scale
 17494 ;;		_printf
 17495 ;; This function uses a non-reentrant model
 17496 ;;
 17497                           
 17498                           	psect	text41
 17499  014E96                     __ptext41:
 17500                           	opt stack 0
 17501  014E96                     ___ftmul:
 17502                           	opt stack 11
 17503                           
 17504                           ; BSR set to: 1
 17505                           ;incstack = 0
 17506  014E96  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 17507  014E9A  0101               	movlb	1	; () banked
 17508  014E9C  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 17509  014E9E  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 17510  014EA0  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 17511  014EA2  374C               	rlcf	??___ftmul& (0+255),f,b
 17512  014EA4  E301               	bnc	u11521
 17513  014EA6  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 17514  014EA8                     u11521:
 17515  014EA8  514C               	movf	??___ftmul& (0+255),w,b
 17516  014EAA  6F4F               	movwf	___ftmul@exp& (0+255),b
 17517  014EAC  514F               	movf	___ftmul@exp& (0+255),w,b
 17518  014EAE  A4D8               	btfss	status,2,c
 17519  014EB0  D007               	goto	l1853
 17520                           
 17521                           ; BSR set to: 1
 17522  014EB2  0E00               	movlw	0
 17523  014EB4  6F46               	movwf	?___ftmul& (0+255),b
 17524  014EB6  0E00               	movlw	0
 17525  014EB8  6F47               	movwf	(?___ftmul+1)& (0+255),b
 17526  014EBA  0E00               	movlw	0
 17527  014EBC  6F48               	movwf	(?___ftmul+2)& (0+255),b
 17528                           
 17529                           ; BSR set to: 1
 17530  014EBE  0012               	return	
 17531  014EC0                     l1853:
 17532                           
 17533                           ; BSR set to: 1
 17534                           
 17535                           ; BSR set to: 1
 17536  014EC0  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 17537  014EC4  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 17538  014EC6  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 17539  014EC8  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 17540  014ECA  374C               	rlcf	??___ftmul& (0+255),f,b
 17541  014ECC  E301               	bnc	u11541
 17542  014ECE  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 17543  014ED0                     u11541:
 17544  014ED0  514C               	movf	??___ftmul& (0+255),w,b
 17545  014ED2  6F54               	movwf	___ftmul@sign& (0+255),b
 17546  014ED4  5154               	movf	___ftmul@sign& (0+255),w,b
 17547  014ED6  A4D8               	btfss	status,2,c
 17548  014ED8  D007               	goto	l1855
 17549                           
 17550                           ; BSR set to: 1
 17551  014EDA  0E00               	movlw	0
 17552  014EDC  6F46               	movwf	?___ftmul& (0+255),b
 17553  014EDE  0E00               	movlw	0
 17554  014EE0  6F47               	movwf	(?___ftmul+1)& (0+255),b
 17555  014EE2  0E00               	movlw	0
 17556  014EE4  6F48               	movwf	(?___ftmul+2)& (0+255),b
 17557                           
 17558                           ; BSR set to: 1
 17559  014EE6  0012               	return	
 17560  014EE8                     l1855:
 17561                           
 17562                           ; BSR set to: 1
 17563                           
 17564                           ; BSR set to: 1
 17565  014EE8  5154               	movf	___ftmul@sign& (0+255),w,b
 17566  014EEA  0F7B               	addlw	123
 17567  014EEC  274F               	addwf	___ftmul@exp& (0+255),f,b
 17568                           
 17569                           ; BSR set to: 1
 17570  014EEE  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 17571  014EF2  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 17572  014EF4  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 17573  014EF6  0E80               	movlw	128
 17574  014EF8  1754               	andwf	___ftmul@sign& (0+255),f,b
 17575                           
 17576                           ; BSR set to: 1
 17577  014EFA  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 17578                           
 17579                           ; BSR set to: 1
 17580  014EFC  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 17581                           
 17582                           ; BSR set to: 1
 17583  014EFE  0EFF               	movlw	255
 17584  014F00  1749               	andwf	___ftmul@f2& (0+255),f,b
 17585  014F02  0EFF               	movlw	255
 17586  014F04  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 17587  014F06  0E00               	movlw	0
 17588  014F08  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 17589                           
 17590                           ; BSR set to: 1
 17591  014F0A  0E00               	movlw	0
 17592  014F0C  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 17593  014F0E  0E00               	movlw	0
 17594  014F10  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 17595  014F12  0E00               	movlw	0
 17596  014F14  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 17597                           
 17598                           ; BSR set to: 1
 17599  014F16  0E07               	movlw	7
 17600  014F18  6F53               	movwf	___ftmul@cntr& (0+255),b
 17601  014F1A                     
 17602                           ; BSR set to: 1
 17603                           
 17604                           ; BSR set to: 1
 17605  014F1A  A146               	btfss	___ftmul@f1& (0+255),0,b
 17606  014F1C  D006               	goto	l1857
 17607                           
 17608                           ; BSR set to: 1
 17609  014F1E  5149               	movf	___ftmul@f2& (0+255),w,b
 17610  014F20  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 17611  014F22  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 17612  014F24  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 17613  014F26  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 17614  014F28  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 17615  014F2A                     l1857:
 17616                           
 17617                           ; BSR set to: 1
 17618                           
 17619                           ; BSR set to: 1
 17620  014F2A  90D8               	bcf	status,0,c
 17621  014F2C  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 17622  014F2E  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 17623  014F30  3346               	rrcf	___ftmul@f1& (0+255),f,b
 17624  014F32  90D8               	bcf	status,0,c
 17625  014F34  3749               	rlcf	___ftmul@f2& (0+255),f,b
 17626  014F36  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 17627  014F38  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 17628                           
 17629                           ; BSR set to: 1
 17630  014F3A  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 17631  014F3C  D7EE               	goto	l1856
 17632                           
 17633                           ; BSR set to: 1
 17634                           
 17635                           ; BSR set to: 1
 17636  014F3E  0E09               	movlw	9
 17637  014F40  6F53               	movwf	___ftmul@cntr& (0+255),b
 17638  014F42                     
 17639                           ; BSR set to: 1
 17640                           
 17641                           ; BSR set to: 1
 17642  014F42  A146               	btfss	___ftmul@f1& (0+255),0,b
 17643  014F44  D006               	goto	l1860
 17644                           
 17645                           ; BSR set to: 1
 17646  014F46  5149               	movf	___ftmul@f2& (0+255),w,b
 17647  014F48  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 17648  014F4A  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 17649  014F4C  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 17650  014F4E  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 17651  014F50  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 17652  014F52                     l1860:
 17653                           
 17654                           ; BSR set to: 1
 17655                           
 17656                           ; BSR set to: 1
 17657  014F52  90D8               	bcf	status,0,c
 17658  014F54  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 17659  014F56  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 17660  014F58  3346               	rrcf	___ftmul@f1& (0+255),f,b
 17661  014F5A  90D8               	bcf	status,0,c
 17662  014F5C  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 17663  014F5E  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 17664  014F60  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 17665                           
 17666                           ; BSR set to: 1
 17667  014F62  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 17668  014F64  D7EE               	goto	l1859
 17669                           
 17670                           ; BSR set to: 1
 17671                           
 17672                           ; BSR set to: 1
 17673  014F66  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 17674  014F6A  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 17675  014F6E  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 17676  014F72  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 17677  014F76  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 17678  014F7A  EC22  F0AC         	call	___ftpack	;wreg free
 17679  014F7E  C117  F146         	movff	?___ftpack,?___ftmul
 17680  014F82  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 17681  014F86  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 17682  014F8A  0012               	return	
 17683  014F8C                     __end_of___ftmul:
 17684                           	opt stack 0
 17685                           tblptru	equ	0xFF8
 17686                           tblptrh	equ	0xFF7
 17687                           tblptrl	equ	0xFF6
 17688                           tablat	equ	0xFF5
 17689                           prodh	equ	0xFF4
 17690                           prodl	equ	0xFF3
 17691                           intcon	equ	0xFF2
 17692                           indf0	equ	0xFEF
 17693                           postinc0	equ	0xFEE
 17694                           fsr0h	equ	0xFEA
 17695                           fsr0l	equ	0xFE9
 17696                           wreg	equ	0xFE8
 17697                           indf1	equ	0xFE7
 17698                           postdec1	equ	0xFE5
 17699                           plusw1	equ	0xFE3
 17700                           fsr1h	equ	0xFE2
 17701                           fsr1l	equ	0xFE1
 17702                           indf2	equ	0xFDF
 17703                           postinc2	equ	0xFDE
 17704                           postdec2	equ	0xFDD
 17705                           plusw2	equ	0xFDB
 17706                           fsr2h	equ	0xFDA
 17707                           fsr2l	equ	0xFD9
 17708                           status	equ	0xFD8
 17709                           
 17710 ;; *************** function ___awmod *****************
 17711 ;; Defined at:
 17712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17713 ;; Parameters:    Size  Location     Type
 17714 ;;  dividend        2   23[BANK1 ] int 
 17715 ;;  divisor         2   25[BANK1 ] int 
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;  sign            1   28[BANK1 ] unsigned char 
 17718 ;;  counter         1   27[BANK1 ] unsigned char 
 17719 ;; Return value:  Size  Location     Type
 17720 ;;                  2   23[BANK1 ] int 
 17721 ;; Registers used:
 17722 ;;		wreg, status,2, status,0
 17723 ;; Tracked objects:
 17724 ;;		On entry : 0/0
 17725 ;;		On exit  : 0/0
 17726 ;;		Unchanged: 0/0
 17727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17728 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17729 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17731 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17732 ;;Total ram usage:        6 bytes
 17733 ;; Hardware stack levels used:    1
 17734 ;; Hardware stack levels required when called:   14
 17735 ;; This function calls:
 17736 ;;		Nothing
 17737 ;; This function is called by:
 17738 ;;		_fround
 17739 ;;		_scale
 17740 ;; This function uses a non-reentrant model
 17741 ;;
 17742                           
 17743                           	psect	text42
 17744  0162E8                     __ptext42:
 17745                           	opt stack 0
 17746  0162E8                     ___awmod:
 17747                           	opt stack 12
 17748                           
 17749                           ;incstack = 0
 17750  0162E8  0E00               	movlw	0
 17751  0162EA  0101               	movlb	1	; () banked
 17752  0162EC  6F1C               	movwf	___awmod@sign& (0+255),b
 17753                           
 17754                           ; BSR set to: 1
 17755  0162EE  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17756  0162F0  D006               	goto	l1694
 17757                           
 17758                           ; BSR set to: 1
 17759  0162F2  6D17               	negf	___awmod@dividend& (0+255),b
 17760  0162F4  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17761  0162F6  B0D8               	btfsc	status,0,c
 17762  0162F8  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17763                           
 17764                           ; BSR set to: 1
 17765  0162FA  0E01               	movlw	1
 17766  0162FC  6F1C               	movwf	___awmod@sign& (0+255),b
 17767  0162FE                     l1694:
 17768                           
 17769                           ; BSR set to: 1
 17770                           
 17771                           ; BSR set to: 1
 17772  0162FE  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17773  016300  D004               	goto	l1695
 17774                           
 17775                           ; BSR set to: 1
 17776  016302  6D19               	negf	___awmod@divisor& (0+255),b
 17777  016304  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 17778  016306  B0D8               	btfsc	status,0,c
 17779  016308  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 17780  01630A                     l1695:
 17781                           
 17782                           ; BSR set to: 1
 17783                           
 17784                           ; BSR set to: 1
 17785  01630A  5119               	movf	___awmod@divisor& (0+255),w,b
 17786  01630C  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17787  01630E  B4D8               	btfsc	status,2,c
 17788  016310  D018               	goto	l1702
 17789                           
 17790                           ; BSR set to: 1
 17791  016312  0E01               	movlw	1
 17792  016314  6F1B               	movwf	___awmod@counter& (0+255),b
 17793  016316  D004               	goto	l1697
 17794  016318                     
 17795                           ; BSR set to: 1
 17796                           
 17797                           ; BSR set to: 1
 17798  016318  90D8               	bcf	status,0,c
 17799  01631A  3719               	rlcf	___awmod@divisor& (0+255),f,b
 17800  01631C  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17801  01631E  2B1B               	incf	___awmod@counter& (0+255),f,b
 17802  016320                     l1697:
 17803                           
 17804                           ; BSR set to: 1
 17805                           
 17806                           ; BSR set to: 1
 17807  016320  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17808  016322  D7FA               	goto	l1698
 17809  016324                     u11690:
 17810                           
 17811                           ; BSR set to: 1
 17812                           
 17813                           ; BSR set to: 1
 17814                           
 17815                           ; BSR set to: 1
 17816  016324  5119               	movf	___awmod@divisor& (0+255),w,b
 17817  016326  5D17               	subwf	___awmod@dividend& (0+255),w,b
 17818  016328  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17819  01632A  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17820  01632C  A0D8               	btfss	status,0,c
 17821  01632E  D004               	goto	l1701
 17822                           
 17823                           ; BSR set to: 1
 17824  016330  5119               	movf	___awmod@divisor& (0+255),w,b
 17825  016332  5F17               	subwf	___awmod@dividend& (0+255),f,b
 17826  016334  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17827  016336  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17828  016338                     l1701:
 17829                           
 17830                           ; BSR set to: 1
 17831                           
 17832                           ; BSR set to: 1
 17833  016338  90D8               	bcf	status,0,c
 17834  01633A  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17835  01633C  3319               	rrcf	___awmod@divisor& (0+255),f,b
 17836                           
 17837                           ; BSR set to: 1
 17838  01633E  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 17839  016340  D7F1               	goto	u11690
 17840  016342                     l1702:
 17841                           
 17842                           ; BSR set to: 1
 17843                           
 17844                           ; BSR set to: 1
 17845                           
 17846                           ; BSR set to: 1
 17847  016342  511C               	movf	___awmod@sign& (0+255),w,b
 17848  016344  B4D8               	btfsc	status,2,c
 17849  016346  D004               	goto	l1703
 17850                           
 17851                           ; BSR set to: 1
 17852  016348  6D17               	negf	___awmod@dividend& (0+255),b
 17853  01634A  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17854  01634C  B0D8               	btfsc	status,0,c
 17855  01634E  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17856  016350                     l1703:
 17857                           
 17858                           ; BSR set to: 1
 17859                           
 17860                           ; BSR set to: 1
 17861  016350  C117  F117         	movff	___awmod@dividend,?___awmod
 17862  016354  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 17863  016358  0012               	return	
 17864  01635A                     __end_of___awmod:
 17865                           	opt stack 0
 17866                           tblptru	equ	0xFF8
 17867                           tblptrh	equ	0xFF7
 17868                           tblptrl	equ	0xFF6
 17869                           tablat	equ	0xFF5
 17870                           prodh	equ	0xFF4
 17871                           prodl	equ	0xFF3
 17872                           intcon	equ	0xFF2
 17873                           indf0	equ	0xFEF
 17874                           postinc0	equ	0xFEE
 17875                           fsr0h	equ	0xFEA
 17876                           fsr0l	equ	0xFE9
 17877                           wreg	equ	0xFE8
 17878                           indf1	equ	0xFE7
 17879                           postdec1	equ	0xFE5
 17880                           plusw1	equ	0xFE3
 17881                           fsr1h	equ	0xFE2
 17882                           fsr1l	equ	0xFE1
 17883                           indf2	equ	0xFDF
 17884                           postinc2	equ	0xFDE
 17885                           postdec2	equ	0xFDD
 17886                           plusw2	equ	0xFDB
 17887                           fsr2h	equ	0xFDA
 17888                           fsr2l	equ	0xFD9
 17889                           status	equ	0xFD8
 17890                           
 17891 ;; *************** function ___awdiv *****************
 17892 ;; Defined at:
 17893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 17894 ;; Parameters:    Size  Location     Type
 17895 ;;  dividend        2   29[BANK1 ] int 
 17896 ;;  divisor         2   31[BANK1 ] int 
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;  quotient        2   35[BANK1 ] int 
 17899 ;;  sign            1   34[BANK1 ] unsigned char 
 17900 ;;  counter         1   33[BANK1 ] unsigned char 
 17901 ;; Return value:  Size  Location     Type
 17902 ;;                  2   29[BANK1 ] int 
 17903 ;; Registers used:
 17904 ;;		wreg, status,2, status,0
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17910 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17911 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17913 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17914 ;;Total ram usage:        8 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; Hardware stack levels required when called:   14
 17917 ;; This function calls:
 17918 ;;		Nothing
 17919 ;; This function is called by:
 17920 ;;		_fround
 17921 ;;		_scale
 17922 ;;		_printf
 17923 ;; This function uses a non-reentrant model
 17924 ;;
 17925                           
 17926                           	psect	text43
 17927  015EF2                     __ptext43:
 17928                           	opt stack 0
 17929  015EF2                     ___awdiv:
 17930                           	opt stack 12
 17931                           
 17932                           ; BSR set to: 1
 17933                           ;incstack = 0
 17934  015EF2  0E00               	movlw	0
 17935  015EF4  0101               	movlb	1	; () banked
 17936  015EF6  6F22               	movwf	___awdiv@sign& (0+255),b
 17937                           
 17938                           ; BSR set to: 1
 17939  015EF8  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17940  015EFA  D006               	goto	l1681
 17941                           
 17942                           ; BSR set to: 1
 17943  015EFC  6D1F               	negf	___awdiv@divisor& (0+255),b
 17944  015EFE  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17945  015F00  B0D8               	btfsc	status,0,c
 17946  015F02  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17947                           
 17948                           ; BSR set to: 1
 17949  015F04  0E01               	movlw	1
 17950  015F06  6F22               	movwf	___awdiv@sign& (0+255),b
 17951  015F08                     l1681:
 17952                           
 17953                           ; BSR set to: 1
 17954                           
 17955                           ; BSR set to: 1
 17956  015F08  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17957  015F0A  D006               	goto	l1682
 17958                           
 17959                           ; BSR set to: 1
 17960  015F0C  6D1D               	negf	___awdiv@dividend& (0+255),b
 17961  015F0E  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17962  015F10  B0D8               	btfsc	status,0,c
 17963  015F12  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17964                           
 17965                           ; BSR set to: 1
 17966  015F14  0E01               	movlw	1
 17967  015F16  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 17968  015F18                     l1682:
 17969                           
 17970                           ; BSR set to: 1
 17971                           
 17972                           ; BSR set to: 1
 17973  015F18  0E00               	movlw	0
 17974  015F1A  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 17975  015F1C  0E00               	movlw	0
 17976  015F1E  6F23               	movwf	___awdiv@quotient& (0+255),b
 17977                           
 17978                           ; BSR set to: 1
 17979  015F20  511F               	movf	___awdiv@divisor& (0+255),w,b
 17980  015F22  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17981  015F24  B4D8               	btfsc	status,2,c
 17982  015F26  D01C               	goto	l1689
 17983                           
 17984                           ; BSR set to: 1
 17985  015F28  0E01               	movlw	1
 17986  015F2A  6F21               	movwf	___awdiv@counter& (0+255),b
 17987  015F2C  D004               	goto	l1684
 17988  015F2E                     
 17989                           ; BSR set to: 1
 17990                           
 17991                           ; BSR set to: 1
 17992  015F2E  90D8               	bcf	status,0,c
 17993  015F30  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 17994  015F32  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17995  015F34  2B21               	incf	___awdiv@counter& (0+255),f,b
 17996  015F36                     l1684:
 17997                           
 17998                           ; BSR set to: 1
 17999                           
 18000                           ; BSR set to: 1
 18001  015F36  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18002  015F38  D7FA               	goto	l1685
 18003  015F3A                     u11630:
 18004                           
 18005                           ; BSR set to: 1
 18006                           
 18007                           ; BSR set to: 1
 18008                           
 18009                           ; BSR set to: 1
 18010  015F3A  90D8               	bcf	status,0,c
 18011  015F3C  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 18012  015F3E  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18013                           
 18014                           ; BSR set to: 1
 18015  015F40  511F               	movf	___awdiv@divisor& (0+255),w,b
 18016  015F42  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 18017  015F44  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18018  015F46  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18019  015F48  A0D8               	btfss	status,0,c
 18020  015F4A  D005               	goto	l1688
 18021                           
 18022                           ; BSR set to: 1
 18023  015F4C  511F               	movf	___awdiv@divisor& (0+255),w,b
 18024  015F4E  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 18025  015F50  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18026  015F52  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18027                           
 18028                           ; BSR set to: 1
 18029  015F54  8123               	bsf	___awdiv@quotient& (0+255),0,b
 18030  015F56                     l1688:
 18031                           
 18032                           ; BSR set to: 1
 18033                           
 18034                           ; BSR set to: 1
 18035  015F56  90D8               	bcf	status,0,c
 18036  015F58  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18037  015F5A  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 18038                           
 18039                           ; BSR set to: 1
 18040  015F5C  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 18041  015F5E  D7ED               	goto	u11630
 18042  015F60                     l1689:
 18043                           
 18044                           ; BSR set to: 1
 18045                           
 18046                           ; BSR set to: 1
 18047                           
 18048                           ; BSR set to: 1
 18049  015F60  5122               	movf	___awdiv@sign& (0+255),w,b
 18050  015F62  B4D8               	btfsc	status,2,c
 18051  015F64  D004               	goto	l1690
 18052                           
 18053                           ; BSR set to: 1
 18054  015F66  6D23               	negf	___awdiv@quotient& (0+255),b
 18055  015F68  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18056  015F6A  B0D8               	btfsc	status,0,c
 18057  015F6C  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18058  015F6E                     l1690:
 18059                           
 18060                           ; BSR set to: 1
 18061                           
 18062                           ; BSR set to: 1
 18063  015F6E  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 18064  015F72  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 18065  015F76  0012               	return	
 18066  015F78                     __end_of___awdiv:
 18067                           	opt stack 0
 18068                           tblptru	equ	0xFF8
 18069                           tblptrh	equ	0xFF7
 18070                           tblptrl	equ	0xFF6
 18071                           tablat	equ	0xFF5
 18072                           prodh	equ	0xFF4
 18073                           prodl	equ	0xFF3
 18074                           intcon	equ	0xFF2
 18075                           indf0	equ	0xFEF
 18076                           postinc0	equ	0xFEE
 18077                           fsr0h	equ	0xFEA
 18078                           fsr0l	equ	0xFE9
 18079                           wreg	equ	0xFE8
 18080                           indf1	equ	0xFE7
 18081                           postdec1	equ	0xFE5
 18082                           plusw1	equ	0xFE3
 18083                           fsr1h	equ	0xFE2
 18084                           fsr1l	equ	0xFE1
 18085                           indf2	equ	0xFDF
 18086                           postinc2	equ	0xFDE
 18087                           postdec2	equ	0xFDD
 18088                           plusw2	equ	0xFDB
 18089                           fsr2h	equ	0xFDA
 18090                           fsr2l	equ	0xFD9
 18091                           status	equ	0xFD8
 18092                           
 18093 ;; *************** function __tdiv_to_l_ *****************
 18094 ;; Defined at:
 18095 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 18096 ;; Parameters:    Size  Location     Type
 18097 ;;  f1              3   23[BANK1 ] float 
 18098 ;;  f2              3   26[BANK1 ] float 
 18099 ;; Auto vars:     Size  Location     Type
 18100 ;;  quot            4   32[BANK1 ] unsigned long 
 18101 ;;  exp1            1   37[BANK1 ] unsigned char 
 18102 ;;  cntr            1   36[BANK1 ] unsigned char 
 18103 ;; Return value:  Size  Location     Type
 18104 ;;                  4   23[BANK1 ] unsigned long 
 18105 ;; Registers used:
 18106 ;;		wreg, status,2, status,0
 18107 ;; Tracked objects:
 18108 ;;		On entry : 0/0
 18109 ;;		On exit  : 0/0
 18110 ;;		Unchanged: 0/0
 18111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18112 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18113 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18114 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18115 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18116 ;;Total ram usage:       15 bytes
 18117 ;; Hardware stack levels used:    1
 18118 ;; Hardware stack levels required when called:   14
 18119 ;; This function calls:
 18120 ;;		Nothing
 18121 ;; This function is called by:
 18122 ;;		_printf
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           	psect	text44
 18127  0147CA                     __ptext44:
 18128                           	opt stack 0
 18129  0147CA                     __tdiv_to_l_:
 18130                           	opt stack 13
 18131                           
 18132                           ; BSR set to: 1
 18133                           ;incstack = 0
 18134  0147CA  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 18135  0147CE  0101               	movlb	1	; () banked
 18136  0147D0  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 18137  0147D2  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 18138  0147D4  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 18139  0147D6  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 18140  0147D8  E301               	bnc	u11921
 18141  0147DA  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 18142  0147DC                     u11921:
 18143  0147DC  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 18144  0147DE  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 18145  0147E0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18146  0147E2  A4D8               	btfss	status,2,c
 18147  0147E4  D009               	goto	l1829
 18148                           
 18149                           ; BSR set to: 1
 18150  0147E6  0E00               	movlw	0
 18151  0147E8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18152  0147EA  0E00               	movlw	0
 18153  0147EC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18154  0147EE  0E00               	movlw	0
 18155  0147F0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18156  0147F2  0E00               	movlw	0
 18157  0147F4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18158                           
 18159                           ; BSR set to: 1
 18160  0147F6  0012               	return	
 18161  0147F8                     l1829:
 18162                           
 18163                           ; BSR set to: 1
 18164                           
 18165                           ; BSR set to: 1
 18166  0147F8  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 18167  0147FC  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 18168  0147FE  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 18169  014800  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18170  014802  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 18171  014804  E301               	bnc	u11941
 18172  014806  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 18173  014808                     u11941:
 18174  014808  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 18175  01480A  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 18176  01480C  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 18177  01480E  A4D8               	btfss	status,2,c
 18178  014810  D009               	goto	l1831
 18179                           
 18180                           ; BSR set to: 1
 18181  014812  0E00               	movlw	0
 18182  014814  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18183  014816  0E00               	movlw	0
 18184  014818  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18185  01481A  0E00               	movlw	0
 18186  01481C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18187  01481E  0E00               	movlw	0
 18188  014820  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18189                           
 18190                           ; BSR set to: 1
 18191  014822  0012               	return	
 18192  014824                     l1831:
 18193                           
 18194                           ; BSR set to: 1
 18195                           
 18196                           ; BSR set to: 1
 18197  014824  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 18198                           
 18199                           ; BSR set to: 1
 18200  014826  0EFF               	movlw	255
 18201  014828  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 18202  01482A  0EFF               	movlw	255
 18203  01482C  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18204  01482E  0E00               	movlw	0
 18205  014830  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18206  014832  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 18207                           
 18208                           ; BSR set to: 1
 18209  014834  0EFF               	movlw	255
 18210  014836  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 18211  014838  0EFF               	movlw	255
 18212  01483A  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 18213  01483C  0E00               	movlw	0
 18214  01483E  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 18215                           
 18216                           ; BSR set to: 1
 18217  014840  0E00               	movlw	0
 18218  014842  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 18219  014844  0E00               	movlw	0
 18220  014846  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 18221  014848  0E00               	movlw	0
 18222  01484A  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 18223  01484C  0E00               	movlw	0
 18224  01484E  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 18225                           
 18226                           ; BSR set to: 1
 18227  014850  0E7F               	movlw	127
 18228  014852  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 18229                           
 18230                           ; BSR set to: 1
 18231  014854  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 18232  014856  0F98               	addlw	152
 18233  014858  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 18234                           
 18235                           ; BSR set to: 1
 18236  01485A  0E18               	movlw	24
 18237  01485C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 18238  01485E                     l1832:
 18239                           
 18240                           ; BSR set to: 1
 18241  01485E  90D8               	bcf	status,0,c
 18242  014860  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18243  014862  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18244  014864  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18245  014866  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18246                           
 18247                           ; BSR set to: 1
 18248  014868  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 18249  01486A  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 18250  01486C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18251  01486E  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 18252  014870  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 18253  014872  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 18254  014874  A0D8               	btfss	status,0,c
 18255  014876  D007               	goto	l1833
 18256                           
 18257                           ; BSR set to: 1
 18258  014878  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 18259  01487A  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 18260  01487C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18261  01487E  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18262  014880  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 18263  014882  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18264                           
 18265                           ; BSR set to: 1
 18266  014884  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 18267  014886                     l1833:
 18268                           
 18269                           ; BSR set to: 1
 18270  014886  90D8               	bcf	status,0,c
 18271  014888  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 18272  01488A  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18273  01488C  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18274                           
 18275                           ; BSR set to: 1
 18276  01488E  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 18277  014890  D7E6               	goto	l1832
 18278                           
 18279                           ; BSR set to: 1
 18280                           
 18281                           ; BSR set to: 1
 18282  014892  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 18283  014894  D016               	goto	l1835
 18284                           
 18285                           ; BSR set to: 1
 18286  014896  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18287  014898  0A80               	xorlw	128
 18288  01489A  0F97               	addlw	151
 18289  01489C  B0D8               	btfsc	status,0,c
 18290  01489E  D009               	goto	l1836
 18291                           
 18292                           ; BSR set to: 1
 18293  0148A0  0E00               	movlw	0
 18294  0148A2  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18295  0148A4  0E00               	movlw	0
 18296  0148A6  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18297  0148A8  0E00               	movlw	0
 18298  0148AA  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18299  0148AC  0E00               	movlw	0
 18300  0148AE  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18301                           
 18302                           ; BSR set to: 1
 18303  0148B0  0012               	return	
 18304  0148B2                     l1836:
 18305                           
 18306                           ; BSR set to: 1
 18307                           
 18308                           ; BSR set to: 1
 18309                           
 18310                           ; BSR set to: 1
 18311  0148B2  90D8               	bcf	status,0,c
 18312  0148B4  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18313  0148B6  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18314  0148B8  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18315  0148BA  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 18316                           
 18317                           ; BSR set to: 1
 18318  0148BC  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 18319  0148BE  D7F9               	goto	l1836
 18320                           
 18321                           ; BSR set to: 1
 18322  0148C0  D015               	goto	u12000
 18323  0148C2                     l1835:
 18324                           
 18325                           ; BSR set to: 1
 18326                           
 18327                           ; BSR set to: 1
 18328  0148C2  0E17               	movlw	23
 18329  0148C4  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 18330  0148C6  D00F               	goto	l1841
 18331                           
 18332                           ; BSR set to: 1
 18333  0148C8  0E00               	movlw	0
 18334  0148CA  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18335  0148CC  0E00               	movlw	0
 18336  0148CE  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18337  0148D0  0E00               	movlw	0
 18338  0148D2  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18339  0148D4  0E00               	movlw	0
 18340  0148D6  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18341                           
 18342                           ; BSR set to: 1
 18343  0148D8  0012               	return	
 18344  0148DA                     
 18345                           ; BSR set to: 1
 18346                           
 18347                           ; BSR set to: 1
 18348  0148DA  90D8               	bcf	status,0,c
 18349  0148DC  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18350  0148DE  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18351  0148E0  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18352  0148E2  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18353  0148E4  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 18354  0148E6                     l1841:
 18355                           
 18356                           ; BSR set to: 1
 18357                           
 18358                           ; BSR set to: 1
 18359  0148E6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18360  0148E8  A4D8               	btfss	status,2,c
 18361  0148EA  D7F7               	goto	l1842
 18362  0148EC                     u12000:
 18363                           
 18364                           ; BSR set to: 1
 18365                           
 18366                           ; BSR set to: 1
 18367  0148EC  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 18368  0148F0  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 18369  0148F4  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 18370  0148F8  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 18371                           
 18372                           ; BSR set to: 1
 18373  0148FC  0012               	return		;funcret
 18374  0148FE                     __end_of__tdiv_to_l_:
 18375                           	opt stack 0
 18376                           tblptru	equ	0xFF8
 18377                           tblptrh	equ	0xFF7
 18378                           tblptrl	equ	0xFF6
 18379                           tablat	equ	0xFF5
 18380                           prodh	equ	0xFF4
 18381                           prodl	equ	0xFF3
 18382                           intcon	equ	0xFF2
 18383                           indf0	equ	0xFEF
 18384                           postinc0	equ	0xFEE
 18385                           fsr0h	equ	0xFEA
 18386                           fsr0l	equ	0xFE9
 18387                           wreg	equ	0xFE8
 18388                           indf1	equ	0xFE7
 18389                           postdec1	equ	0xFE5
 18390                           plusw1	equ	0xFE3
 18391                           fsr1h	equ	0xFE2
 18392                           fsr1l	equ	0xFE1
 18393                           indf2	equ	0xFDF
 18394                           postinc2	equ	0xFDE
 18395                           postdec2	equ	0xFDD
 18396                           plusw2	equ	0xFDB
 18397                           fsr2h	equ	0xFDA
 18398                           fsr2l	equ	0xFD9
 18399                           status	equ	0xFD8
 18400                           
 18401 ;; *************** function __div_to_l_ *****************
 18402 ;; Defined at:
 18403 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 18404 ;; Parameters:    Size  Location     Type
 18405 ;;  f1              3   23[BANK1 ] unsigned long 
 18406 ;;  f2              3   26[BANK1 ] unsigned long 
 18407 ;; Auto vars:     Size  Location     Type
 18408 ;;  quot            4   29[BANK1 ] unsigned long 
 18409 ;;  exp1            1   34[BANK1 ] unsigned char 
 18410 ;;  cntr            1   33[BANK1 ] unsigned char 
 18411 ;; Return value:  Size  Location     Type
 18412 ;;                  4   23[BANK1 ] unsigned long 
 18413 ;; Registers used:
 18414 ;;		wreg, status,2, status,0
 18415 ;; Tracked objects:
 18416 ;;		On entry : 0/0
 18417 ;;		On exit  : 0/0
 18418 ;;		Unchanged: 0/0
 18419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18420 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18421 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18423 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18424 ;;Total ram usage:       12 bytes
 18425 ;; Hardware stack levels used:    1
 18426 ;; Hardware stack levels required when called:   14
 18427 ;; This function calls:
 18428 ;;		Nothing
 18429 ;; This function is called by:
 18430 ;;		_printf
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           	psect	text45
 18435  014A30                     __ptext45:
 18436                           	opt stack 0
 18437  014A30                     __div_to_l_:
 18438                           	opt stack 13
 18439                           
 18440                           ; BSR set to: 1
 18441                           ;incstack = 0
 18442  014A30  0101               	movlb	1	; () banked
 18443  014A32  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 18444  014A34  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 18445  014A36  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 18446  014A38  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 18447  014A3A  A4D8               	btfss	status,2,c
 18448  014A3C  D009               	goto	l1725
 18449                           
 18450                           ; BSR set to: 1
 18451  014A3E  0E00               	movlw	0
 18452  014A40  6F17               	movwf	?__div_to_l_& (0+255),b
 18453  014A42  0E00               	movlw	0
 18454  014A44  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18455  014A46  0E00               	movlw	0
 18456  014A48  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18457  014A4A  0E00               	movlw	0
 18458  014A4C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18459                           
 18460                           ; BSR set to: 1
 18461  014A4E  0012               	return	
 18462  014A50                     l1725:
 18463                           
 18464                           ; BSR set to: 1
 18465                           
 18466                           ; BSR set to: 1
 18467  014A50  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 18468  014A52  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 18469  014A54  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 18470  014A56  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 18471  014A58  A4D8               	btfss	status,2,c
 18472  014A5A  D009               	goto	l1727
 18473                           
 18474                           ; BSR set to: 1
 18475  014A5C  0E00               	movlw	0
 18476  014A5E  6F17               	movwf	?__div_to_l_& (0+255),b
 18477  014A60  0E00               	movlw	0
 18478  014A62  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18479  014A64  0E00               	movlw	0
 18480  014A66  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18481  014A68  0E00               	movlw	0
 18482  014A6A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18483                           
 18484                           ; BSR set to: 1
 18485  014A6C  0012               	return	
 18486  014A6E                     l1727:
 18487                           
 18488                           ; BSR set to: 1
 18489                           
 18490                           ; BSR set to: 1
 18491  014A6E  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 18492                           
 18493                           ; BSR set to: 1
 18494  014A70  0EFF               	movlw	255
 18495  014A72  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 18496  014A74  0EFF               	movlw	255
 18497  014A76  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 18498  014A78  0EFF               	movlw	255
 18499  014A7A  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 18500  014A7C  0E00               	movlw	0
 18501  014A7E  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 18502                           
 18503                           ; BSR set to: 1
 18504  014A80  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 18505  014A82  0EFF               	movlw	255
 18506  014A84  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 18507  014A86  0EFF               	movlw	255
 18508  014A88  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 18509  014A8A  0EFF               	movlw	255
 18510  014A8C  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 18511  014A8E  0E00               	movlw	0
 18512  014A90  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 18513                           
 18514                           ; BSR set to: 1
 18515  014A92  0E00               	movlw	0
 18516  014A94  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 18517  014A96  0E00               	movlw	0
 18518  014A98  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 18519  014A9A  0E00               	movlw	0
 18520  014A9C  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 18521  014A9E  0E00               	movlw	0
 18522  014AA0  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 18523                           
 18524                           ; BSR set to: 1
 18525  014AA2  0E7F               	movlw	127
 18526  014AA4  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 18527                           
 18528                           ; BSR set to: 1
 18529  014AA6  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 18530  014AA8  0FA0               	addlw	160
 18531  014AAA  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 18532                           
 18533                           ; BSR set to: 1
 18534  014AAC  0E20               	movlw	32
 18535  014AAE  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 18536  014AB0                     
 18537                           ; BSR set to: 1
 18538                           
 18539                           ; BSR set to: 1
 18540  014AB0  90D8               	bcf	status,0,c
 18541  014AB2  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 18542  014AB4  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18543  014AB6  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18544  014AB8  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18545                           
 18546                           ; BSR set to: 1
 18547  014ABA  511A               	movf	__div_to_l_@f2& (0+255),w,b
 18548  014ABC  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 18549  014ABE  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18550  014AC0  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 18551  014AC2  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18552  014AC4  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 18553  014AC6  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18554  014AC8  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 18555  014ACA  A0D8               	btfss	status,0,c
 18556  014ACC  D009               	goto	l1729
 18557                           
 18558                           ; BSR set to: 1
 18559  014ACE  511A               	movf	__div_to_l_@f2& (0+255),w,b
 18560  014AD0  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 18561  014AD2  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18562  014AD4  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 18563  014AD6  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18564  014AD8  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 18565  014ADA  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18566  014ADC  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 18567                           
 18568                           ; BSR set to: 1
 18569  014ADE  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 18570  014AE0                     l1729:
 18571                           
 18572                           ; BSR set to: 1
 18573                           
 18574                           ; BSR set to: 1
 18575  014AE0  90D8               	bcf	status,0,c
 18576  014AE2  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 18577  014AE4  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 18578  014AE6  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 18579  014AE8  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 18580                           
 18581                           ; BSR set to: 1
 18582  014AEA  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 18583  014AEC  D7E1               	goto	l1728
 18584                           
 18585                           ; BSR set to: 1
 18586                           
 18587                           ; BSR set to: 1
 18588  014AEE  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 18589  014AF0  D016               	goto	l1731
 18590                           
 18591                           ; BSR set to: 1
 18592  014AF2  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 18593  014AF4  0A80               	xorlw	128
 18594  014AF6  0F9F               	addlw	159
 18595  014AF8  B0D8               	btfsc	status,0,c
 18596  014AFA  D009               	goto	l1732
 18597                           
 18598                           ; BSR set to: 1
 18599  014AFC  0E00               	movlw	0
 18600  014AFE  6F17               	movwf	?__div_to_l_& (0+255),b
 18601  014B00  0E00               	movlw	0
 18602  014B02  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18603  014B04  0E00               	movlw	0
 18604  014B06  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18605  014B08  0E00               	movlw	0
 18606  014B0A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18607                           
 18608                           ; BSR set to: 1
 18609  014B0C  0012               	return	
 18610  014B0E                     l1732:
 18611                           
 18612                           ; BSR set to: 1
 18613                           
 18614                           ; BSR set to: 1
 18615                           
 18616                           ; BSR set to: 1
 18617  014B0E  90D8               	bcf	status,0,c
 18618  014B10  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 18619  014B12  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 18620  014B14  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 18621  014B16  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 18622                           
 18623                           ; BSR set to: 1
 18624  014B18  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 18625  014B1A  D7F9               	goto	l1732
 18626                           
 18627                           ; BSR set to: 1
 18628  014B1C  D015               	goto	u12070
 18629  014B1E                     l1731:
 18630                           
 18631                           ; BSR set to: 1
 18632                           
 18633                           ; BSR set to: 1
 18634  014B1E  0E1F               	movlw	31
 18635  014B20  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 18636  014B22  D00F               	goto	l1737
 18637                           
 18638                           ; BSR set to: 1
 18639  014B24  0E00               	movlw	0
 18640  014B26  6F17               	movwf	?__div_to_l_& (0+255),b
 18641  014B28  0E00               	movlw	0
 18642  014B2A  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18643  014B2C  0E00               	movlw	0
 18644  014B2E  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18645  014B30  0E00               	movlw	0
 18646  014B32  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18647                           
 18648                           ; BSR set to: 1
 18649  014B34  0012               	return	
 18650  014B36                     
 18651                           ; BSR set to: 1
 18652                           
 18653                           ; BSR set to: 1
 18654  014B36  90D8               	bcf	status,0,c
 18655  014B38  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 18656  014B3A  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18657  014B3C  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18658  014B3E  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18659  014B40  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 18660  014B42                     l1737:
 18661                           
 18662                           ; BSR set to: 1
 18663                           
 18664                           ; BSR set to: 1
 18665  014B42  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 18666  014B44  A4D8               	btfss	status,2,c
 18667  014B46  D7F7               	goto	l1738
 18668  014B48                     u12070:
 18669                           
 18670                           ; BSR set to: 1
 18671                           
 18672                           ; BSR set to: 1
 18673  014B48  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 18674  014B4C  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 18675  014B50  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 18676  014B54  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 18677                           
 18678                           ; BSR set to: 1
 18679  014B58  0012               	return		;funcret
 18680  014B5A                     __end_of__div_to_l_:
 18681                           	opt stack 0
 18682                           tblptru	equ	0xFF8
 18683                           tblptrh	equ	0xFF7
 18684                           tblptrl	equ	0xFF6
 18685                           tablat	equ	0xFF5
 18686                           prodh	equ	0xFF4
 18687                           prodl	equ	0xFF3
 18688                           intcon	equ	0xFF2
 18689                           indf0	equ	0xFEF
 18690                           postinc0	equ	0xFEE
 18691                           fsr0h	equ	0xFEA
 18692                           fsr0l	equ	0xFE9
 18693                           wreg	equ	0xFE8
 18694                           indf1	equ	0xFE7
 18695                           postdec1	equ	0xFE5
 18696                           plusw1	equ	0xFE3
 18697                           fsr1h	equ	0xFE2
 18698                           fsr1l	equ	0xFE1
 18699                           indf2	equ	0xFDF
 18700                           postinc2	equ	0xFDE
 18701                           postdec2	equ	0xFDD
 18702                           plusw2	equ	0xFDB
 18703                           fsr2h	equ	0xFDA
 18704                           fsr2l	equ	0xFD9
 18705                           status	equ	0xFD8
 18706                           
 18707 ;; *************** function ___lltoft *****************
 18708 ;; Defined at:
 18709 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 18710 ;; Parameters:    Size  Location     Type
 18711 ;;  c               4   31[BANK1 ] unsigned long 
 18712 ;; Auto vars:     Size  Location     Type
 18713 ;;  exp             1   39[BANK1 ] unsigned char 
 18714 ;; Return value:  Size  Location     Type
 18715 ;;                  3   31[BANK1 ] float 
 18716 ;; Registers used:
 18717 ;;		wreg, status,2, status,0, cstack
 18718 ;; Tracked objects:
 18719 ;;		On entry : 0/0
 18720 ;;		On exit  : 0/0
 18721 ;;		Unchanged: 0/0
 18722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18723 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18724 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18725 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18726 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18727 ;;Total ram usage:        9 bytes
 18728 ;; Hardware stack levels used:    1
 18729 ;; Hardware stack levels required when called:   15
 18730 ;; This function calls:
 18731 ;;		___ftpack
 18732 ;; This function is called by:
 18733 ;;		_printf
 18734 ;; This function uses a non-reentrant model
 18735 ;;
 18736                           
 18737                           	psect	text46
 18738  01668C                     __ptext46:
 18739                           	opt stack 0
 18740  01668C                     ___lltoft:
 18741                           	opt stack 12
 18742                           
 18743                           ; BSR set to: 1
 18744                           ;incstack = 0
 18745  01668C  0E8E               	movlw	142
 18746  01668E  0101               	movlb	1	; () banked
 18747  016690  6F27               	movwf	___lltoft@exp& (0+255),b
 18748  016692  D006               	goto	l1950
 18749  016694                     
 18750                           ; BSR set to: 1
 18751                           
 18752                           ; BSR set to: 1
 18753  016694  90D8               	bcf	status,0,c
 18754  016696  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 18755  016698  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 18756  01669A  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 18757  01669C  331F               	rrcf	___lltoft@c& (0+255),f,b
 18758  01669E  2B27               	incf	___lltoft@exp& (0+255),f,b
 18759  0166A0                     l1950:
 18760                           
 18761                           ; BSR set to: 1
 18762                           
 18763                           ; BSR set to: 1
 18764  0166A0  0E00               	movlw	0
 18765  0166A2  151F               	andwf	___lltoft@c& (0+255),w,b
 18766  0166A4  6F23               	movwf	??___lltoft& (0+255),b
 18767  0166A6  0E00               	movlw	0
 18768  0166A8  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 18769  0166AA  6F24               	movwf	(??___lltoft+1)& (0+255),b
 18770  0166AC  0E00               	movlw	0
 18771  0166AE  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 18772  0166B0  6F25               	movwf	(??___lltoft+2)& (0+255),b
 18773  0166B2  0EFF               	movlw	255
 18774  0166B4  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 18775  0166B6  6F26               	movwf	(??___lltoft+3)& (0+255),b
 18776  0166B8  5123               	movf	??___lltoft& (0+255),w,b
 18777  0166BA  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 18778  0166BC  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 18779  0166BE  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 18780  0166C0  A4D8               	btfss	status,2,c
 18781  0166C2  D7E8               	goto	l1951
 18782                           
 18783                           ; BSR set to: 1
 18784                           
 18785                           ; BSR set to: 1
 18786  0166C4  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 18787  0166C8  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 18788  0166CC  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 18789  0166D0  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 18790  0166D4  0E00               	movlw	0
 18791  0166D6  6F1B               	movwf	___ftpack@sign& (0+255),b
 18792  0166D8  EC22  F0AC         	call	___ftpack	;wreg free
 18793  0166DC  C117  F11F         	movff	?___ftpack,?___lltoft
 18794  0166E0  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 18795  0166E4  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 18796  0166E8  0012               	return	
 18797  0166EA                     __end_of___lltoft:
 18798                           	opt stack 0
 18799                           tblptru	equ	0xFF8
 18800                           tblptrh	equ	0xFF7
 18801                           tblptrl	equ	0xFF6
 18802                           tablat	equ	0xFF5
 18803                           prodh	equ	0xFF4
 18804                           prodl	equ	0xFF3
 18805                           intcon	equ	0xFF2
 18806                           indf0	equ	0xFEF
 18807                           postinc0	equ	0xFEE
 18808                           fsr0h	equ	0xFEA
 18809                           fsr0l	equ	0xFE9
 18810                           wreg	equ	0xFE8
 18811                           indf1	equ	0xFE7
 18812                           postdec1	equ	0xFE5
 18813                           plusw1	equ	0xFE3
 18814                           fsr1h	equ	0xFE2
 18815                           fsr1l	equ	0xFE1
 18816                           indf2	equ	0xFDF
 18817                           postinc2	equ	0xFDE
 18818                           postdec2	equ	0xFDD
 18819                           plusw2	equ	0xFDB
 18820                           fsr2h	equ	0xFDA
 18821                           fsr2l	equ	0xFD9
 18822                           status	equ	0xFD8
 18823                           
 18824 ;; *************** function ___llmod *****************
 18825 ;; Defined at:
 18826 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18827 ;; Parameters:    Size  Location     Type
 18828 ;;  dividend        4   36[BANK1 ] unsigned long 
 18829 ;;  divisor         4   40[BANK1 ] unsigned long 
 18830 ;; Auto vars:     Size  Location     Type
 18831 ;;  counter         1   44[BANK1 ] unsigned char 
 18832 ;; Return value:  Size  Location     Type
 18833 ;;                  4   36[BANK1 ] unsigned long 
 18834 ;; Registers used:
 18835 ;;		wreg, status,2, status,0
 18836 ;; Tracked objects:
 18837 ;;		On entry : 0/0
 18838 ;;		On exit  : 0/0
 18839 ;;		Unchanged: 0/0
 18840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18841 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18842 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18844 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18845 ;;Total ram usage:        9 bytes
 18846 ;; Hardware stack levels used:    1
 18847 ;; Hardware stack levels required when called:   14
 18848 ;; This function calls:
 18849 ;;		Nothing
 18850 ;; This function is called by:
 18851 ;;		_printf
 18852 ;; This function uses a non-reentrant model
 18853 ;;
 18854                           
 18855                           	psect	text47
 18856  01649C                     __ptext47:
 18857                           	opt stack 0
 18858  01649C                     ___llmod:
 18859                           	opt stack 13
 18860                           
 18861                           ;incstack = 0
 18862  01649C  0101               	movlb	1	; () banked
 18863  01649E  5128               	movf	___llmod@divisor& (0+255),w,b
 18864  0164A0  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 18865  0164A2  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 18866  0164A4  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 18867  0164A6  B4D8               	btfsc	status,2,c
 18868  0164A8  D024               	goto	l1944
 18869                           
 18870                           ; BSR set to: 1
 18871  0164AA  0E01               	movlw	1
 18872  0164AC  6F2C               	movwf	___llmod@counter& (0+255),b
 18873  0164AE  D006               	goto	l1939
 18874  0164B0                     
 18875                           ; BSR set to: 1
 18876                           
 18877                           ; BSR set to: 1
 18878  0164B0  90D8               	bcf	status,0,c
 18879  0164B2  3728               	rlcf	___llmod@divisor& (0+255),f,b
 18880  0164B4  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 18881  0164B6  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 18882  0164B8  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 18883  0164BA  2B2C               	incf	___llmod@counter& (0+255),f,b
 18884  0164BC                     l1939:
 18885                           
 18886                           ; BSR set to: 1
 18887                           
 18888                           ; BSR set to: 1
 18889  0164BC  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 18890  0164BE  D7F8               	goto	l1940
 18891  0164C0                     u12330:
 18892                           
 18893                           ; BSR set to: 1
 18894                           
 18895                           ; BSR set to: 1
 18896                           
 18897                           ; BSR set to: 1
 18898  0164C0  5128               	movf	___llmod@divisor& (0+255),w,b
 18899  0164C2  5D24               	subwf	___llmod@dividend& (0+255),w,b
 18900  0164C4  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18901  0164C6  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 18902  0164C8  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18903  0164CA  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 18904  0164CC  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18905  0164CE  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 18906  0164D0  A0D8               	btfss	status,0,c
 18907  0164D2  D008               	goto	l1943
 18908                           
 18909                           ; BSR set to: 1
 18910  0164D4  5128               	movf	___llmod@divisor& (0+255),w,b
 18911  0164D6  5F24               	subwf	___llmod@dividend& (0+255),f,b
 18912  0164D8  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18913  0164DA  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 18914  0164DC  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18915  0164DE  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 18916  0164E0  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18917  0164E2  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 18918  0164E4                     l1943:
 18919                           
 18920                           ; BSR set to: 1
 18921                           
 18922                           ; BSR set to: 1
 18923  0164E4  90D8               	bcf	status,0,c
 18924  0164E6  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 18925  0164E8  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 18926  0164EA  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 18927  0164EC  3328               	rrcf	___llmod@divisor& (0+255),f,b
 18928                           
 18929                           ; BSR set to: 1
 18930  0164EE  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 18931  0164F0  D7E7               	goto	u12330
 18932  0164F2                     l1944:
 18933                           
 18934                           ; BSR set to: 1
 18935                           
 18936                           ; BSR set to: 1
 18937  0164F2  C124  F124         	movff	___llmod@dividend,?___llmod
 18938  0164F6  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 18939  0164FA  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 18940  0164FE  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 18941                           
 18942                           ; BSR set to: 1
 18943  016502  0012               	return		;funcret
 18944  016504                     __end_of___llmod:
 18945                           	opt stack 0
 18946                           tblptru	equ	0xFF8
 18947                           tblptrh	equ	0xFF7
 18948                           tblptrl	equ	0xFF6
 18949                           tablat	equ	0xFF5
 18950                           prodh	equ	0xFF4
 18951                           prodl	equ	0xFF3
 18952                           intcon	equ	0xFF2
 18953                           indf0	equ	0xFEF
 18954                           postinc0	equ	0xFEE
 18955                           fsr0h	equ	0xFEA
 18956                           fsr0l	equ	0xFE9
 18957                           wreg	equ	0xFE8
 18958                           indf1	equ	0xFE7
 18959                           postdec1	equ	0xFE5
 18960                           plusw1	equ	0xFE3
 18961                           fsr1h	equ	0xFE2
 18962                           fsr1l	equ	0xFE1
 18963                           indf2	equ	0xFDF
 18964                           postinc2	equ	0xFDE
 18965                           postdec2	equ	0xFDD
 18966                           plusw2	equ	0xFDB
 18967                           fsr2h	equ	0xFDA
 18968                           fsr2l	equ	0xFD9
 18969                           status	equ	0xFD8
 18970                           
 18971 ;; *************** function ___lldiv *****************
 18972 ;; Defined at:
 18973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;  dividend        4   23[BANK1 ] unsigned long 
 18976 ;;  divisor         4   27[BANK1 ] unsigned long 
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;  quotient        4   31[BANK1 ] unsigned long 
 18979 ;;  counter         1   35[BANK1 ] unsigned char 
 18980 ;; Return value:  Size  Location     Type
 18981 ;;                  4   23[BANK1 ] unsigned long 
 18982 ;; Registers used:
 18983 ;;		wreg, status,2, status,0
 18984 ;; Tracked objects:
 18985 ;;		On entry : 0/0
 18986 ;;		On exit  : 0/0
 18987 ;;		Unchanged: 0/0
 18988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18989 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18990 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18992 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18993 ;;Total ram usage:       13 bytes
 18994 ;; Hardware stack levels used:    1
 18995 ;; Hardware stack levels required when called:   14
 18996 ;; This function calls:
 18997 ;;		Nothing
 18998 ;; This function is called by:
 18999 ;;		_printf
 19000 ;; This function uses a non-reentrant model
 19001 ;;
 19002                           
 19003                           	psect	text48
 19004  015F78                     __ptext48:
 19005                           	opt stack 0
 19006  015F78                     ___lldiv:
 19007                           	opt stack 13
 19008                           
 19009                           ; BSR set to: 1
 19010                           ;incstack = 0
 19011  015F78  0E00               	movlw	0
 19012  015F7A  0101               	movlb	1	; () banked
 19013  015F7C  6F1F               	movwf	___lldiv@quotient& (0+255),b
 19014  015F7E  0E00               	movlw	0
 19015  015F80  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 19016  015F82  0E00               	movlw	0
 19017  015F84  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 19018  015F86  0E00               	movlw	0
 19019  015F88  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 19020                           
 19021                           ; BSR set to: 1
 19022  015F8A  511B               	movf	___lldiv@divisor& (0+255),w,b
 19023  015F8C  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19024  015F8E  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19025  015F90  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19026  015F92  B4D8               	btfsc	status,2,c
 19027  015F94  D02A               	goto	l1934
 19028                           
 19029                           ; BSR set to: 1
 19030  015F96  0E01               	movlw	1
 19031  015F98  6F23               	movwf	___lldiv@counter& (0+255),b
 19032  015F9A  D006               	goto	l1929
 19033  015F9C                     
 19034                           ; BSR set to: 1
 19035                           
 19036                           ; BSR set to: 1
 19037  015F9C  90D8               	bcf	status,0,c
 19038  015F9E  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 19039  015FA0  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19040  015FA2  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19041  015FA4  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19042  015FA6  2B23               	incf	___lldiv@counter& (0+255),f,b
 19043  015FA8                     l1929:
 19044                           
 19045                           ; BSR set to: 1
 19046                           
 19047                           ; BSR set to: 1
 19048  015FA8  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 19049  015FAA  D7F8               	goto	l1930
 19050  015FAC                     u12300:
 19051                           
 19052                           ; BSR set to: 1
 19053                           
 19054                           ; BSR set to: 1
 19055                           
 19056                           ; BSR set to: 1
 19057  015FAC  90D8               	bcf	status,0,c
 19058  015FAE  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 19059  015FB0  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19060  015FB2  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19061  015FB4  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19062                           
 19063                           ; BSR set to: 1
 19064  015FB6  511B               	movf	___lldiv@divisor& (0+255),w,b
 19065  015FB8  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 19066  015FBA  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19067  015FBC  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19068  015FBE  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19069  015FC0  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19070  015FC2  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19071  015FC4  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19072  015FC6  A0D8               	btfss	status,0,c
 19073  015FC8  D009               	goto	l1933
 19074                           
 19075                           ; BSR set to: 1
 19076  015FCA  511B               	movf	___lldiv@divisor& (0+255),w,b
 19077  015FCC  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 19078  015FCE  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19079  015FD0  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19080  015FD2  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19081  015FD4  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19082  015FD6  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19083  015FD8  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19084                           
 19085                           ; BSR set to: 1
 19086  015FDA  811F               	bsf	___lldiv@quotient& (0+255),0,b
 19087  015FDC                     l1933:
 19088                           
 19089                           ; BSR set to: 1
 19090                           
 19091                           ; BSR set to: 1
 19092  015FDC  90D8               	bcf	status,0,c
 19093  015FDE  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 19094  015FE0  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 19095  015FE2  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 19096  015FE4  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 19097                           
 19098                           ; BSR set to: 1
 19099  015FE6  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 19100  015FE8  D7E1               	goto	u12300
 19101  015FEA                     l1934:
 19102                           
 19103                           ; BSR set to: 1
 19104                           
 19105                           ; BSR set to: 1
 19106  015FEA  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 19107  015FEE  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 19108  015FF2  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 19109  015FF6  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 19110                           
 19111                           ; BSR set to: 1
 19112  015FFA  0012               	return		;funcret
 19113  015FFC                     __end_of___lldiv:
 19114                           	opt stack 0
 19115                           tblptru	equ	0xFF8
 19116                           tblptrh	equ	0xFF7
 19117                           tblptrl	equ	0xFF6
 19118                           tablat	equ	0xFF5
 19119                           prodh	equ	0xFF4
 19120                           prodl	equ	0xFF3
 19121                           intcon	equ	0xFF2
 19122                           indf0	equ	0xFEF
 19123                           postinc0	equ	0xFEE
 19124                           fsr0h	equ	0xFEA
 19125                           fsr0l	equ	0xFE9
 19126                           wreg	equ	0xFE8
 19127                           indf1	equ	0xFE7
 19128                           postdec1	equ	0xFE5
 19129                           plusw1	equ	0xFE3
 19130                           fsr1h	equ	0xFE2
 19131                           fsr1l	equ	0xFE1
 19132                           indf2	equ	0xFDF
 19133                           postinc2	equ	0xFDE
 19134                           postdec2	equ	0xFDD
 19135                           plusw2	equ	0xFDB
 19136                           fsr2h	equ	0xFDA
 19137                           fsr2l	equ	0xFD9
 19138                           status	equ	0xFD8
 19139                           
 19140 ;; *************** function ___fttol *****************
 19141 ;; Defined at:
 19142 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 19143 ;; Parameters:    Size  Location     Type
 19144 ;;  f1              3   85[BANK1 ] float 
 19145 ;; Auto vars:     Size  Location     Type
 19146 ;;  lval            4   95[BANK1 ] unsigned long 
 19147 ;;  exp1            1   99[BANK1 ] unsigned char 
 19148 ;;  sign1           1   94[BANK1 ] unsigned char 
 19149 ;; Return value:  Size  Location     Type
 19150 ;;                  4   85[BANK1 ] long 
 19151 ;; Registers used:
 19152 ;;		wreg, status,2, status,0
 19153 ;; Tracked objects:
 19154 ;;		On entry : 0/0
 19155 ;;		On exit  : 0/0
 19156 ;;		Unchanged: 0/0
 19157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19158 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19159 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19160 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19161 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19162 ;;Total ram usage:       15 bytes
 19163 ;; Hardware stack levels used:    1
 19164 ;; Hardware stack levels required when called:   14
 19165 ;; This function calls:
 19166 ;;		Nothing
 19167 ;; This function is called by:
 19168 ;;		_printf
 19169 ;; This function uses a non-reentrant model
 19170 ;;
 19171                           
 19172                           	psect	text49
 19173  014D9E                     __ptext49:
 19174                           	opt stack 0
 19175  014D9E                     ___fttol:
 19176                           	opt stack 13
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;incstack = 0
 19180  014D9E  C157  F159         	movff	___fttol@f1+2,??___fttol
 19181  014DA2  0101               	movlb	1	; () banked
 19182  014DA4  6B5A               	clrf	(??___fttol+1)& (0+255),b
 19183  014DA6  6B5B               	clrf	(??___fttol+2)& (0+255),b
 19184  014DA8  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19185  014DAA  3759               	rlcf	??___fttol& (0+255),f,b
 19186  014DAC  E301               	bnc	u12211
 19187  014DAE  815A               	bsf	(??___fttol+1)& (0+255),0,b
 19188  014DB0                     u12211:
 19189  014DB0  5159               	movf	??___fttol& (0+255),w,b
 19190  014DB2  6F63               	movwf	___fttol@exp1& (0+255),b
 19191  014DB4  5163               	movf	___fttol@exp1& (0+255),w,b
 19192  014DB6  A4D8               	btfss	status,2,c
 19193  014DB8  D009               	goto	l1874
 19194                           
 19195                           ; BSR set to: 1
 19196  014DBA  0E00               	movlw	0
 19197  014DBC  6F55               	movwf	?___fttol& (0+255),b
 19198  014DBE  0E00               	movlw	0
 19199  014DC0  6F56               	movwf	(?___fttol+1)& (0+255),b
 19200  014DC2  0E00               	movlw	0
 19201  014DC4  6F57               	movwf	(?___fttol+2)& (0+255),b
 19202  014DC6  0E00               	movlw	0
 19203  014DC8  6F58               	movwf	(?___fttol+3)& (0+255),b
 19204                           
 19205                           ; BSR set to: 1
 19206  014DCA  0012               	return	
 19207  014DCC                     l1874:
 19208                           
 19209                           ; BSR set to: 1
 19210                           
 19211                           ; BSR set to: 1
 19212  014DCC  0E17               	movlw	23
 19213  014DCE  6F59               	movwf	??___fttol& (0+255),b
 19214  014DD0  C155  F15A         	movff	___fttol@f1,??___fttol+1
 19215  014DD4  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 19216  014DD8  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 19217  014DDC  2959               	incf	??___fttol& (0+255),w,b
 19218  014DDE  6F5D               	movwf	(??___fttol+4)& (0+255),b
 19219  014DE0  D004               	goto	u12230
 19220  014DE2                     u12235:
 19221  014DE2  90D8               	bcf	status,0,c
 19222  014DE4  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 19223  014DE6  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 19224  014DE8  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 19225  014DEA                     u12230:
 19226  014DEA  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 19227  014DEC  D7FA               	goto	u12235
 19228  014DEE  0101               	movlb	1	; () banked
 19229  014DF0  515A               	movf	(??___fttol+1)& (0+255),w,b
 19230  014DF2  6F5E               	movwf	___fttol@sign1& (0+255),b
 19231                           
 19232                           ; BSR set to: 1
 19233  014DF4  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 19234                           
 19235                           ; BSR set to: 1
 19236  014DF6  0EFF               	movlw	255
 19237  014DF8  1755               	andwf	___fttol@f1& (0+255),f,b
 19238  014DFA  0EFF               	movlw	255
 19239  014DFC  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 19240  014DFE  0E00               	movlw	0
 19241  014E00  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 19242                           
 19243                           ; BSR set to: 1
 19244  014E02  5155               	movf	___fttol@f1& (0+255),w,b
 19245  014E04  6F5F               	movwf	___fttol@lval& (0+255),b
 19246  014E06  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 19247  014E08  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 19248  014E0A  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 19249  014E0C  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 19250  014E0E  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 19251                           
 19252                           ; BSR set to: 1
 19253  014E10  0E8E               	movlw	142
 19254  014E12  5F63               	subwf	___fttol@exp1& (0+255),f,b
 19255                           
 19256                           ; BSR set to: 1
 19257  014E14  AF63               	btfss	___fttol@exp1& (0+255),7,b
 19258  014E16  D016               	goto	l1876
 19259                           
 19260                           ; BSR set to: 1
 19261  014E18  5163               	movf	___fttol@exp1& (0+255),w,b
 19262  014E1A  0A80               	xorlw	128
 19263  014E1C  0F8F               	addlw	143
 19264  014E1E  B0D8               	btfsc	status,0,c
 19265  014E20  D009               	goto	l1877
 19266                           
 19267                           ; BSR set to: 1
 19268  014E22  0E00               	movlw	0
 19269  014E24  6F55               	movwf	?___fttol& (0+255),b
 19270  014E26  0E00               	movlw	0
 19271  014E28  6F56               	movwf	(?___fttol+1)& (0+255),b
 19272  014E2A  0E00               	movlw	0
 19273  014E2C  6F57               	movwf	(?___fttol+2)& (0+255),b
 19274  014E2E  0E00               	movlw	0
 19275  014E30  6F58               	movwf	(?___fttol+3)& (0+255),b
 19276                           
 19277                           ; BSR set to: 1
 19278  014E32  0012               	return	
 19279  014E34                     l1877:
 19280                           
 19281                           ; BSR set to: 1
 19282                           
 19283                           ; BSR set to: 1
 19284                           
 19285                           ; BSR set to: 1
 19286  014E34  90D8               	bcf	status,0,c
 19287  014E36  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19288  014E38  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19289  014E3A  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19290  014E3C  335F               	rrcf	___fttol@lval& (0+255),f,b
 19291                           
 19292                           ; BSR set to: 1
 19293  014E3E  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 19294  014E40  D7F9               	goto	l1877
 19295                           
 19296                           ; BSR set to: 1
 19297  014E42  D015               	goto	u12270
 19298  014E44                     l1876:
 19299                           
 19300                           ; BSR set to: 1
 19301                           
 19302                           ; BSR set to: 1
 19303  014E44  0E17               	movlw	23
 19304  014E46  6563               	cpfsgt	___fttol@exp1& (0+255),b
 19305  014E48  D00F               	goto	l1882
 19306                           
 19307                           ; BSR set to: 1
 19308  014E4A  0E00               	movlw	0
 19309  014E4C  6F55               	movwf	?___fttol& (0+255),b
 19310  014E4E  0E00               	movlw	0
 19311  014E50  6F56               	movwf	(?___fttol+1)& (0+255),b
 19312  014E52  0E00               	movlw	0
 19313  014E54  6F57               	movwf	(?___fttol+2)& (0+255),b
 19314  014E56  0E00               	movlw	0
 19315  014E58  6F58               	movwf	(?___fttol+3)& (0+255),b
 19316                           
 19317                           ; BSR set to: 1
 19318  014E5A  0012               	return	
 19319  014E5C                     
 19320                           ; BSR set to: 1
 19321                           
 19322                           ; BSR set to: 1
 19323  014E5C  90D8               	bcf	status,0,c
 19324  014E5E  375F               	rlcf	___fttol@lval& (0+255),f,b
 19325  014E60  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19326  014E62  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19327  014E64  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19328  014E66  0763               	decf	___fttol@exp1& (0+255),f,b
 19329  014E68                     l1882:
 19330                           
 19331                           ; BSR set to: 1
 19332                           
 19333                           ; BSR set to: 1
 19334  014E68  5163               	movf	___fttol@exp1& (0+255),w,b
 19335  014E6A  A4D8               	btfss	status,2,c
 19336  014E6C  D7F7               	goto	l1883
 19337  014E6E                     u12270:
 19338                           
 19339                           ; BSR set to: 1
 19340                           
 19341                           ; BSR set to: 1
 19342                           
 19343                           ; BSR set to: 1
 19344  014E6E  515E               	movf	___fttol@sign1& (0+255),w,b
 19345  014E70  B4D8               	btfsc	status,2,c
 19346  014E72  D008               	goto	l1885
 19347                           
 19348                           ; BSR set to: 1
 19349  014E74  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 19350  014E76  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 19351  014E78  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 19352  014E7A  6D5F               	negf	___fttol@lval& (0+255),b
 19353  014E7C  0E00               	movlw	0
 19354  014E7E  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19355  014E80  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19356  014E82  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19357  014E84                     l1885:
 19358                           
 19359                           ; BSR set to: 1
 19360                           
 19361                           ; BSR set to: 1
 19362  014E84  C15F  F155         	movff	___fttol@lval,?___fttol
 19363  014E88  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 19364  014E8C  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 19365  014E90  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 19366  014E94  0012               	return	
 19367  014E96                     __end_of___fttol:
 19368                           	opt stack 0
 19369                           tblptru	equ	0xFF8
 19370                           tblptrh	equ	0xFF7
 19371                           tblptrl	equ	0xFF6
 19372                           tablat	equ	0xFF5
 19373                           prodh	equ	0xFF4
 19374                           prodl	equ	0xFF3
 19375                           intcon	equ	0xFF2
 19376                           indf0	equ	0xFEF
 19377                           postinc0	equ	0xFEE
 19378                           fsr0h	equ	0xFEA
 19379                           fsr0l	equ	0xFE9
 19380                           wreg	equ	0xFE8
 19381                           indf1	equ	0xFE7
 19382                           postdec1	equ	0xFE5
 19383                           plusw1	equ	0xFE3
 19384                           fsr1h	equ	0xFE2
 19385                           fsr1l	equ	0xFE1
 19386                           indf2	equ	0xFDF
 19387                           postinc2	equ	0xFDE
 19388                           postdec2	equ	0xFDD
 19389                           plusw2	equ	0xFDB
 19390                           fsr2h	equ	0xFDA
 19391                           fsr2l	equ	0xFD9
 19392                           status	equ	0xFD8
 19393                           
 19394 ;; *************** function ___ftsub *****************
 19395 ;; Defined at:
 19396 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 19397 ;; Parameters:    Size  Location     Type
 19398 ;;  f1              3   55[BANK1 ] float 
 19399 ;;  f2              3   58[BANK1 ] float 
 19400 ;; Auto vars:     Size  Location     Type
 19401 ;;		None
 19402 ;; Return value:  Size  Location     Type
 19403 ;;                  3   55[BANK1 ] float 
 19404 ;; Registers used:
 19405 ;;		wreg, status,2, status,0, cstack
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/0
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19411 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19414 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19415 ;;Total ram usage:        6 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; Hardware stack levels required when called:   16
 19418 ;; This function calls:
 19419 ;;		___ftadd
 19420 ;; This function is called by:
 19421 ;;		_printf
 19422 ;; This function uses a non-reentrant model
 19423 ;;
 19424                           
 19425                           	psect	text50
 19426  016ADC                     __ptext50:
 19427                           	opt stack 0
 19428  016ADC                     ___ftsub:
 19429                           	opt stack 11
 19430                           
 19431                           ; BSR set to: 1
 19432                           ;incstack = 0
 19433  016ADC  0101               	movlb	1	; () banked
 19434  016ADE  513A               	movf	___ftsub@f2& (0+255),w,b
 19435  016AE0  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 19436  016AE2  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 19437  016AE4  B4D8               	btfsc	status,2,c
 19438  016AE6  D006               	goto	l1870
 19439                           
 19440                           ; BSR set to: 1
 19441  016AE8  0E00               	movlw	0
 19442  016AEA  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 19443  016AEC  0E00               	movlw	0
 19444  016AEE  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 19445  016AF0  0E80               	movlw	128
 19446  016AF2  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 19447  016AF4                     l1870:
 19448                           
 19449                           ; BSR set to: 1
 19450                           
 19451                           ; BSR set to: 1
 19452  016AF4  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 19453  016AF8  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 19454  016AFC  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 19455  016B00  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 19456  016B04  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 19457  016B08  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 19458  016B0C  EC6D  F0A1         	call	___ftadd	;wreg free
 19459  016B10  C12B  F137         	movff	?___ftadd,?___ftsub
 19460  016B14  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 19461  016B18  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 19462  016B1C  0012               	return	
 19463  016B1E                     __end_of___ftsub:
 19464                           	opt stack 0
 19465                           tblptru	equ	0xFF8
 19466                           tblptrh	equ	0xFF7
 19467                           tblptrl	equ	0xFF6
 19468                           tablat	equ	0xFF5
 19469                           prodh	equ	0xFF4
 19470                           prodl	equ	0xFF3
 19471                           intcon	equ	0xFF2
 19472                           indf0	equ	0xFEF
 19473                           postinc0	equ	0xFEE
 19474                           fsr0h	equ	0xFEA
 19475                           fsr0l	equ	0xFE9
 19476                           wreg	equ	0xFE8
 19477                           indf1	equ	0xFE7
 19478                           postdec1	equ	0xFE5
 19479                           plusw1	equ	0xFE3
 19480                           fsr1h	equ	0xFE2
 19481                           fsr1l	equ	0xFE1
 19482                           indf2	equ	0xFDF
 19483                           postinc2	equ	0xFDE
 19484                           postdec2	equ	0xFDD
 19485                           plusw2	equ	0xFDB
 19486                           fsr2h	equ	0xFDA
 19487                           fsr2l	equ	0xFD9
 19488                           status	equ	0xFD8
 19489                           
 19490 ;; *************** function ___ftadd *****************
 19491 ;; Defined at:
 19492 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 19493 ;; Parameters:    Size  Location     Type
 19494 ;;  f1              3   43[BANK1 ] float 
 19495 ;;  f2              3   46[BANK1 ] float 
 19496 ;; Auto vars:     Size  Location     Type
 19497 ;;  exp1            1   54[BANK1 ] unsigned char 
 19498 ;;  exp2            1   53[BANK1 ] unsigned char 
 19499 ;;  sign            1   52[BANK1 ] unsigned char 
 19500 ;; Return value:  Size  Location     Type
 19501 ;;                  3   43[BANK1 ] float 
 19502 ;; Registers used:
 19503 ;;		wreg, status,2, status,0, cstack
 19504 ;; Tracked objects:
 19505 ;;		On entry : 0/0
 19506 ;;		On exit  : 0/0
 19507 ;;		Unchanged: 0/0
 19508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19509 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19510 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19511 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19512 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19513 ;;Total ram usage:       12 bytes
 19514 ;; Hardware stack levels used:    1
 19515 ;; Hardware stack levels required when called:   15
 19516 ;; This function calls:
 19517 ;;		___ftpack
 19518 ;; This function is called by:
 19519 ;;		_ringBufferLUT
 19520 ;;		_printf
 19521 ;;		___ftsub
 19522 ;; This function uses a non-reentrant model
 19523 ;;
 19524                           
 19525                           	psect	text51
 19526  0142DA                     __ptext51:
 19527                           	opt stack 0
 19528  0142DA                     ___ftadd:
 19529                           	opt stack 11
 19530                           
 19531                           ;incstack = 0
 19532  0142DA  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 19533  0142DE  0101               	movlb	1	; () banked
 19534  0142E0  6B32               	clrf	(??___ftadd+1)& (0+255),b
 19535  0142E2  6B33               	clrf	(??___ftadd+2)& (0+255),b
 19536  0142E4  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 19537  0142E6  3731               	rlcf	??___ftadd& (0+255),f,b
 19538  0142E8  E301               	bnc	u11311
 19539  0142EA  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 19540  0142EC                     u11311:
 19541  0142EC  5131               	movf	??___ftadd& (0+255),w,b
 19542  0142EE  6F36               	movwf	___ftadd@exp1& (0+255),b
 19543  0142F0  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 19544  0142F4  6B32               	clrf	(??___ftadd+1)& (0+255),b
 19545  0142F6  6B33               	clrf	(??___ftadd+2)& (0+255),b
 19546  0142F8  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 19547  0142FA  3731               	rlcf	??___ftadd& (0+255),f,b
 19548  0142FC  E301               	bnc	u11321
 19549  0142FE  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 19550  014300                     u11321:
 19551  014300  5131               	movf	??___ftadd& (0+255),w,b
 19552  014302  6F35               	movwf	___ftadd@exp2& (0+255),b
 19553                           
 19554                           ; BSR set to: 1
 19555  014304  5136               	movf	___ftadd@exp1& (0+255),w,b
 19556  014306  B4D8               	btfsc	status,2,c
 19557  014308  D00B               	goto	u11350
 19558                           
 19559                           ; BSR set to: 1
 19560  01430A  5135               	movf	___ftadd@exp2& (0+255),w,b
 19561  01430C  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 19562  01430E  B0D8               	btfsc	status,0,c
 19563  014310  D00E               	goto	l1788
 19564                           
 19565                           ; BSR set to: 1
 19566  014312  5136               	movf	___ftadd@exp1& (0+255),w,b
 19567  014314  0800               	sublw	0
 19568  014316  2535               	addwf	___ftadd@exp2& (0+255),w,b
 19569  014318  6F31               	movwf	??___ftadd& (0+255),b
 19570  01431A  0E18               	movlw	24
 19571  01431C  6531               	cpfsgt	??___ftadd& (0+255),b
 19572  01431E  D007               	goto	l1788
 19573  014320                     u11350:
 19574                           
 19575                           ; BSR set to: 1
 19576  014320  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 19577  014324  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 19578  014328  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 19579  01432C  0012               	return	
 19580  01432E                     l1788:
 19581                           
 19582                           ; BSR set to: 1
 19583                           
 19584                           ; BSR set to: 1
 19585  01432E  5135               	movf	___ftadd@exp2& (0+255),w,b
 19586  014330  B4D8               	btfsc	status,2,c
 19587  014332  D00B               	goto	u11380
 19588                           
 19589                           ; BSR set to: 1
 19590  014334  5136               	movf	___ftadd@exp1& (0+255),w,b
 19591  014336  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 19592  014338  B0D8               	btfsc	status,0,c
 19593  01433A  D00E               	goto	l1792
 19594                           
 19595                           ; BSR set to: 1
 19596  01433C  5135               	movf	___ftadd@exp2& (0+255),w,b
 19597  01433E  0800               	sublw	0
 19598  014340  2536               	addwf	___ftadd@exp1& (0+255),w,b
 19599  014342  6F31               	movwf	??___ftadd& (0+255),b
 19600  014344  0E18               	movlw	24
 19601  014346  6531               	cpfsgt	??___ftadd& (0+255),b
 19602  014348  D007               	goto	l1792
 19603  01434A                     u11380:
 19604                           
 19605                           ; BSR set to: 1
 19606  01434A  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 19607  01434E  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 19608  014352  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 19609  014356  0012               	return	
 19610  014358                     l1792:
 19611                           
 19612                           ; BSR set to: 1
 19613                           
 19614                           ; BSR set to: 1
 19615  014358  0E06               	movlw	6
 19616  01435A  6F34               	movwf	___ftadd@sign& (0+255),b
 19617                           
 19618                           ; BSR set to: 1
 19619  01435C  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 19620                           
 19621                           ; BSR set to: 1
 19622  01435E  8F34               	bsf	___ftadd@sign& (0+255),7,b
 19623                           
 19624                           ; BSR set to: 1
 19625                           
 19626                           ; BSR set to: 1
 19627  014360  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 19628                           
 19629                           ; BSR set to: 1
 19630  014362  8D34               	bsf	___ftadd@sign& (0+255),6,b
 19631                           
 19632                           ; BSR set to: 1
 19633  014364  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 19634                           
 19635                           ; BSR set to: 1
 19636  014366  0EFF               	movlw	255
 19637  014368  172B               	andwf	___ftadd@f1& (0+255),f,b
 19638  01436A  0EFF               	movlw	255
 19639  01436C  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 19640  01436E  0E00               	movlw	0
 19641  014370  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 19642  014372  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 19643                           
 19644                           ; BSR set to: 1
 19645  014374  0EFF               	movlw	255
 19646  014376  172E               	andwf	___ftadd@f2& (0+255),f,b
 19647  014378  0EFF               	movlw	255
 19648  01437A  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 19649  01437C  0E00               	movlw	0
 19650  01437E  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 19651                           
 19652                           ; BSR set to: 1
 19653  014380  5135               	movf	___ftadd@exp2& (0+255),w,b
 19654  014382  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 19655  014384  B0D8               	btfsc	status,0,c
 19656  014386  D01B               	goto	l1797
 19657  014388                     u11410:
 19658                           
 19659                           ; BSR set to: 1
 19660                           
 19661                           ; BSR set to: 1
 19662  014388  90D8               	bcf	status,0,c
 19663  01438A  372E               	rlcf	___ftadd@f2& (0+255),f,b
 19664  01438C  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 19665  01438E  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 19666  014390  0735               	decf	___ftadd@exp2& (0+255),f,b
 19667                           
 19668                           ; BSR set to: 1
 19669  014392  5136               	movf	___ftadd@exp1& (0+255),w,b
 19670  014394  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 19671  014396  B4D8               	btfsc	status,2,c
 19672  014398  D00D               	goto	l1802
 19673                           
 19674                           ; BSR set to: 1
 19675  01439A  0734               	decf	___ftadd@sign& (0+255),f,b
 19676  01439C  C134  F131         	movff	___ftadd@sign,??___ftadd
 19677  0143A0  0E07               	movlw	7
 19678  0143A2  1731               	andwf	??___ftadd& (0+255),f,b
 19679  0143A4  B4D8               	btfsc	status,2,c
 19680  0143A6  D006               	goto	l1802
 19681  0143A8  D7EF               	goto	u11410
 19682  0143AA                     
 19683                           ; BSR set to: 1
 19684                           
 19685                           ; BSR set to: 1
 19686  0143AA  90D8               	bcf	status,0,c
 19687  0143AC  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 19688  0143AE  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 19689  0143B0  332B               	rrcf	___ftadd@f1& (0+255),f,b
 19690  0143B2  2B36               	incf	___ftadd@exp1& (0+255),f,b
 19691  0143B4                     l1802:
 19692                           
 19693                           ; BSR set to: 1
 19694                           
 19695                           ; BSR set to: 1
 19696  0143B4  5135               	movf	___ftadd@exp2& (0+255),w,b
 19697  0143B6  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 19698  0143B8  B4D8               	btfsc	status,2,c
 19699  0143BA  D01F               	goto	u11480
 19700  0143BC  D7F6               	goto	l1803
 19701  0143BE                     l1797:
 19702                           
 19703                           ; BSR set to: 1
 19704                           
 19705                           ; BSR set to: 1
 19706  0143BE  5136               	movf	___ftadd@exp1& (0+255),w,b
 19707  0143C0  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 19708  0143C2  B0D8               	btfsc	status,0,c
 19709  0143C4  D01A               	goto	u11480
 19710  0143C6                     u11450:
 19711                           
 19712                           ; BSR set to: 1
 19713                           
 19714                           ; BSR set to: 1
 19715  0143C6  90D8               	bcf	status,0,c
 19716  0143C8  372B               	rlcf	___ftadd@f1& (0+255),f,b
 19717  0143CA  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 19718  0143CC  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 19719  0143CE  0736               	decf	___ftadd@exp1& (0+255),f,b
 19720                           
 19721                           ; BSR set to: 1
 19722  0143D0  5136               	movf	___ftadd@exp1& (0+255),w,b
 19723  0143D2  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 19724  0143D4  B4D8               	btfsc	status,2,c
 19725  0143D6  D00D               	goto	l1811
 19726                           
 19727                           ; BSR set to: 1
 19728  0143D8  0734               	decf	___ftadd@sign& (0+255),f,b
 19729  0143DA  C134  F131         	movff	___ftadd@sign,??___ftadd
 19730  0143DE  0E07               	movlw	7
 19731  0143E0  1731               	andwf	??___ftadd& (0+255),f,b
 19732  0143E2  B4D8               	btfsc	status,2,c
 19733  0143E4  D006               	goto	l1811
 19734  0143E6  D7EF               	goto	u11450
 19735  0143E8                     
 19736                           ; BSR set to: 1
 19737                           
 19738                           ; BSR set to: 1
 19739  0143E8  90D8               	bcf	status,0,c
 19740  0143EA  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 19741  0143EC  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 19742  0143EE  332E               	rrcf	___ftadd@f2& (0+255),f,b
 19743  0143F0  2B35               	incf	___ftadd@exp2& (0+255),f,b
 19744  0143F2                     l1811:
 19745                           
 19746                           ; BSR set to: 1
 19747                           
 19748                           ; BSR set to: 1
 19749  0143F2  5135               	movf	___ftadd@exp2& (0+255),w,b
 19750  0143F4  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 19751  0143F6  A4D8               	btfss	status,2,c
 19752  0143F8  D7F7               	goto	l1812
 19753  0143FA                     u11480:
 19754                           
 19755                           ; BSR set to: 1
 19756                           
 19757                           ; BSR set to: 1
 19758                           
 19759                           ; BSR set to: 1
 19760  0143FA  AF34               	btfss	___ftadd@sign& (0+255),7,b
 19761  0143FC  D00C               	goto	l1814
 19762                           
 19763                           ; BSR set to: 1
 19764  0143FE  0EFF               	movlw	255
 19765  014400  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 19766  014402  0EFF               	movlw	255
 19767  014404  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 19768  014406  0EFF               	movlw	255
 19769  014408  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 19770  01440A  0E01               	movlw	1
 19771  01440C  272B               	addwf	___ftadd@f1& (0+255),f,b
 19772  01440E  0E00               	movlw	0
 19773  014410  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 19774  014412  0E00               	movlw	0
 19775  014414  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 19776  014416                     l1814:
 19777                           
 19778                           ; BSR set to: 1
 19779  014416  AD34               	btfss	___ftadd@sign& (0+255),6,b
 19780  014418  D00C               	goto	l1815
 19781                           
 19782                           ; BSR set to: 1
 19783  01441A  0EFF               	movlw	255
 19784  01441C  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 19785  01441E  0EFF               	movlw	255
 19786  014420  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 19787  014422  0EFF               	movlw	255
 19788  014424  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 19789  014426  0E01               	movlw	1
 19790  014428  272E               	addwf	___ftadd@f2& (0+255),f,b
 19791  01442A  0E00               	movlw	0
 19792  01442C  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19793  01442E  0E00               	movlw	0
 19794  014430  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19795  014432                     l1815:
 19796                           
 19797                           ; BSR set to: 1
 19798                           
 19799                           ; BSR set to: 1
 19800  014432  0E00               	movlw	0
 19801  014434  6F34               	movwf	___ftadd@sign& (0+255),b
 19802                           
 19803                           ; BSR set to: 1
 19804  014436  512B               	movf	___ftadd@f1& (0+255),w,b
 19805  014438  272E               	addwf	___ftadd@f2& (0+255),f,b
 19806  01443A  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 19807  01443C  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19808  01443E  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 19809  014440  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19810                           
 19811                           ; BSR set to: 1
 19812  014442  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 19813  014444  D00E               	goto	l1816
 19814                           
 19815                           ; BSR set to: 1
 19816  014446  0EFF               	movlw	255
 19817  014448  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 19818  01444A  0EFF               	movlw	255
 19819  01444C  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 19820  01444E  0EFF               	movlw	255
 19821  014450  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 19822  014452  0E01               	movlw	1
 19823  014454  272E               	addwf	___ftadd@f2& (0+255),f,b
 19824  014456  0E00               	movlw	0
 19825  014458  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19826  01445A  0E00               	movlw	0
 19827  01445C  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19828                           
 19829                           ; BSR set to: 1
 19830  01445E  0E01               	movlw	1
 19831  014460  6F34               	movwf	___ftadd@sign& (0+255),b
 19832  014462                     l1816:
 19833                           
 19834                           ; BSR set to: 1
 19835                           
 19836                           ; BSR set to: 1
 19837  014462  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 19838  014466  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 19839  01446A  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 19840  01446E  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 19841  014472  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 19842  014476  EC22  F0AC         	call	___ftpack	;wreg free
 19843  01447A  C117  F12B         	movff	?___ftpack,?___ftadd
 19844  01447E  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 19845  014482  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 19846  014486  0012               	return	
 19847  014488                     __end_of___ftadd:
 19848                           	opt stack 0
 19849                           tblptru	equ	0xFF8
 19850                           tblptrh	equ	0xFF7
 19851                           tblptrl	equ	0xFF6
 19852                           tablat	equ	0xFF5
 19853                           prodh	equ	0xFF4
 19854                           prodl	equ	0xFF3
 19855                           intcon	equ	0xFF2
 19856                           indf0	equ	0xFEF
 19857                           postinc0	equ	0xFEE
 19858                           fsr0h	equ	0xFEA
 19859                           fsr0l	equ	0xFE9
 19860                           wreg	equ	0xFE8
 19861                           indf1	equ	0xFE7
 19862                           postdec1	equ	0xFE5
 19863                           plusw1	equ	0xFE3
 19864                           fsr1h	equ	0xFE2
 19865                           fsr1l	equ	0xFE1
 19866                           indf2	equ	0xFDF
 19867                           postinc2	equ	0xFDE
 19868                           postdec2	equ	0xFDD
 19869                           plusw2	equ	0xFDB
 19870                           fsr2h	equ	0xFDA
 19871                           fsr2l	equ	0xFD9
 19872                           status	equ	0xFD8
 19873                           
 19874 ;; *************** function ___ftpack *****************
 19875 ;; Defined at:
 19876 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  arg             3   23[BANK1 ] unsigned um
 19879 ;;  exp             1   26[BANK1 ] unsigned char 
 19880 ;;  sign            1   27[BANK1 ] unsigned char 
 19881 ;; Auto vars:     Size  Location     Type
 19882 ;;		None
 19883 ;; Return value:  Size  Location     Type
 19884 ;;                  3   23[BANK1 ] float 
 19885 ;; Registers used:
 19886 ;;		wreg, status,2, status,0
 19887 ;; Tracked objects:
 19888 ;;		On entry : 0/0
 19889 ;;		On exit  : 0/0
 19890 ;;		Unchanged: 0/0
 19891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19892 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19894 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19895 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19896 ;;Total ram usage:        8 bytes
 19897 ;; Hardware stack levels used:    1
 19898 ;; Hardware stack levels required when called:   14
 19899 ;; This function calls:
 19900 ;;		Nothing
 19901 ;; This function is called by:
 19902 ;;		___awtoft
 19903 ;;		___ftadd
 19904 ;;		___ftdiv
 19905 ;;		___ftmul
 19906 ;;		___lltoft
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text52
 19911  015844                     __ptext52:
 19912                           	opt stack 0
 19913  015844                     ___ftpack:
 19914                           	opt stack 11
 19915                           
 19916                           ;incstack = 0
 19917  015844  0101               	movlb	1	; () banked
 19918  015846  511A               	movf	___ftpack@exp& (0+255),w,b
 19919  015848  B4D8               	btfsc	status,2,c
 19920  01584A  D005               	goto	u10930
 19921                           
 19922                           ; BSR set to: 1
 19923  01584C  5117               	movf	___ftpack@arg& (0+255),w,b
 19924  01584E  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 19925  015850  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 19926  015852  A4D8               	btfss	status,2,c
 19927  015854  D00C               	goto	l1757
 19928  015856                     u10930:
 19929                           
 19930                           ; BSR set to: 1
 19931                           
 19932                           ; BSR set to: 1
 19933  015856  0E00               	movlw	0
 19934  015858  6F17               	movwf	?___ftpack& (0+255),b
 19935  01585A  0E00               	movlw	0
 19936  01585C  6F18               	movwf	(?___ftpack+1)& (0+255),b
 19937  01585E  0E00               	movlw	0
 19938  015860  6F19               	movwf	(?___ftpack+2)& (0+255),b
 19939                           
 19940                           ; BSR set to: 1
 19941  015862  0012               	return	
 19942  015864                     
 19943                           ; BSR set to: 1
 19944                           
 19945                           ; BSR set to: 1
 19946  015864  2B1A               	incf	___ftpack@exp& (0+255),f,b
 19947  015866  90D8               	bcf	status,0,c
 19948  015868  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19949  01586A  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19950  01586C  3317               	rrcf	___ftpack@arg& (0+255),f,b
 19951  01586E                     l1757:
 19952                           
 19953                           ; BSR set to: 1
 19954                           
 19955                           ; BSR set to: 1
 19956  01586E  0E00               	movlw	0
 19957  015870  1517               	andwf	___ftpack@arg& (0+255),w,b
 19958  015872  6F1C               	movwf	??___ftpack& (0+255),b
 19959  015874  0E00               	movlw	0
 19960  015876  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19961  015878  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 19962  01587A  0EFE               	movlw	254
 19963  01587C  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19964  01587E  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 19965  015880  511C               	movf	??___ftpack& (0+255),w,b
 19966  015882  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 19967  015884  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 19968  015886  B4D8               	btfsc	status,2,c
 19969  015888  D00C               	goto	l1760
 19970  01588A  D7EC               	goto	l1758
 19971  01588C                     
 19972                           ; BSR set to: 1
 19973                           
 19974                           ; BSR set to: 1
 19975  01588C  2B1A               	incf	___ftpack@exp& (0+255),f,b
 19976                           
 19977                           ; BSR set to: 1
 19978  01588E  0E01               	movlw	1
 19979  015890  2717               	addwf	___ftpack@arg& (0+255),f,b
 19980  015892  0E00               	movlw	0
 19981  015894  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 19982  015896  0E00               	movlw	0
 19983  015898  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 19984  01589A  90D8               	bcf	status,0,c
 19985  01589C  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19986  01589E  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19987  0158A0  3317               	rrcf	___ftpack@arg& (0+255),f,b
 19988  0158A2                     l1760:
 19989                           
 19990                           ; BSR set to: 1
 19991                           
 19992                           ; BSR set to: 1
 19993  0158A2  0E00               	movlw	0
 19994  0158A4  1517               	andwf	___ftpack@arg& (0+255),w,b
 19995  0158A6  6F1C               	movwf	??___ftpack& (0+255),b
 19996  0158A8  0E00               	movlw	0
 19997  0158AA  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19998  0158AC  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 19999  0158AE  0EFF               	movlw	255
 20000  0158B0  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20001  0158B2  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 20002  0158B4  511C               	movf	??___ftpack& (0+255),w,b
 20003  0158B6  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 20004  0158B8  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 20005  0158BA  B4D8               	btfsc	status,2,c
 20006  0158BC  D006               	goto	l1763
 20007  0158BE  D7E6               	goto	l1761
 20008  0158C0                     
 20009                           ; BSR set to: 1
 20010                           
 20011                           ; BSR set to: 1
 20012  0158C0  071A               	decf	___ftpack@exp& (0+255),f,b
 20013  0158C2  90D8               	bcf	status,0,c
 20014  0158C4  3717               	rlcf	___ftpack@arg& (0+255),f,b
 20015  0158C6  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 20016  0158C8  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 20017  0158CA                     l1763:
 20018                           
 20019                           ; BSR set to: 1
 20020                           
 20021                           ; BSR set to: 1
 20022  0158CA  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 20023  0158CC  D003               	goto	u10970
 20024                           
 20025                           ; BSR set to: 1
 20026  0158CE  0E02               	movlw	2
 20027  0158D0  611A               	cpfslt	___ftpack@exp& (0+255),b
 20028  0158D2  D7F6               	goto	l1764
 20029  0158D4                     u10970:
 20030                           
 20031                           ; BSR set to: 1
 20032                           
 20033                           ; BSR set to: 1
 20034  0158D4  A11A               	btfss	___ftpack@exp& (0+255),0,b
 20035                           
 20036                           ; BSR set to: 1
 20037  0158D6  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 20038                           
 20039                           ; BSR set to: 1
 20040                           
 20041                           ; BSR set to: 1
 20042  0158D8  90D8               	bcf	status,0,c
 20043  0158DA  331A               	rrcf	___ftpack@exp& (0+255),f,b
 20044  0158DC  511A               	movf	___ftpack@exp& (0+255),w,b
 20045  0158DE  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 20046                           
 20047                           ; BSR set to: 1
 20048  0158E0  511B               	movf	___ftpack@sign& (0+255),w,b
 20049  0158E2  A4D8               	btfss	status,2,c
 20050                           
 20051                           ; BSR set to: 1
 20052  0158E4  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 20053                           
 20054                           ; BSR set to: 1
 20055                           
 20056                           ; BSR set to: 1
 20057  0158E6  C117  F117         	movff	___ftpack@arg,?___ftpack
 20058  0158EA  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 20059  0158EE  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 20060  0158F2  0012               	return	
 20061  0158F4                     __end_of___ftpack:
 20062                           	opt stack 0
 20063                           tblptru	equ	0xFF8
 20064                           tblptrh	equ	0xFF7
 20065                           tblptrl	equ	0xFF6
 20066                           tablat	equ	0xFF5
 20067                           prodh	equ	0xFF4
 20068                           prodl	equ	0xFF3
 20069                           intcon	equ	0xFF2
 20070                           indf0	equ	0xFEF
 20071                           postinc0	equ	0xFEE
 20072                           fsr0h	equ	0xFEA
 20073                           fsr0l	equ	0xFE9
 20074                           wreg	equ	0xFE8
 20075                           indf1	equ	0xFE7
 20076                           postdec1	equ	0xFE5
 20077                           plusw1	equ	0xFE3
 20078                           fsr1h	equ	0xFE2
 20079                           fsr1l	equ	0xFE1
 20080                           indf2	equ	0xFDF
 20081                           postinc2	equ	0xFDE
 20082                           postdec2	equ	0xFDD
 20083                           plusw2	equ	0xFDB
 20084                           fsr2h	equ	0xFDA
 20085                           fsr2l	equ	0xFD9
 20086                           status	equ	0xFD8
 20087                           
 20088 ;; *************** function ___ftneg *****************
 20089 ;; Defined at:
 20090 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 20091 ;; Parameters:    Size  Location     Type
 20092 ;;  f1              3   35[BANK1 ] float 
 20093 ;; Auto vars:     Size  Location     Type
 20094 ;;		None
 20095 ;; Return value:  Size  Location     Type
 20096 ;;                  3   35[BANK1 ] float 
 20097 ;; Registers used:
 20098 ;;		wreg, status,2, status,0
 20099 ;; Tracked objects:
 20100 ;;		On entry : 0/0
 20101 ;;		On exit  : 0/0
 20102 ;;		Unchanged: 0/0
 20103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20104 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20107 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20108 ;;Total ram usage:        3 bytes
 20109 ;; Hardware stack levels used:    1
 20110 ;; Hardware stack levels required when called:   14
 20111 ;; This function calls:
 20112 ;;		Nothing
 20113 ;; This function is called by:
 20114 ;;		_ringBufferLUT
 20115 ;;		_printf
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           	psect	text53
 20120  016E86                     __ptext53:
 20121                           	opt stack 0
 20122  016E86                     ___ftneg:
 20123                           	opt stack 13
 20124                           
 20125                           ; BSR set to: 1
 20126                           ;incstack = 0
 20127  016E86  0101               	movlb	1	; () banked
 20128  016E88  5123               	movf	___ftneg@f1& (0+255),w,b
 20129  016E8A  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 20130  016E8C  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 20131  016E8E  B4D8               	btfsc	status,2,c
 20132  016E90  D006               	goto	l1864
 20133                           
 20134                           ; BSR set to: 1
 20135  016E92  0E00               	movlw	0
 20136  016E94  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 20137  016E96  0E00               	movlw	0
 20138  016E98  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 20139  016E9A  0E80               	movlw	128
 20140  016E9C  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 20141  016E9E                     l1864:
 20142                           
 20143                           ; BSR set to: 1
 20144  016E9E  C123  F123         	movff	___ftneg@f1,?___ftneg
 20145  016EA2  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 20146  016EA6  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 20147                           
 20148                           ; BSR set to: 1
 20149  016EAA  0012               	return		;funcret
 20150  016EAC                     __end_of___ftneg:
 20151                           	opt stack 0
 20152                           tblptru	equ	0xFF8
 20153                           tblptrh	equ	0xFF7
 20154                           tblptrl	equ	0xFF6
 20155                           tablat	equ	0xFF5
 20156                           prodh	equ	0xFF4
 20157                           prodl	equ	0xFF3
 20158                           intcon	equ	0xFF2
 20159                           indf0	equ	0xFEF
 20160                           postinc0	equ	0xFEE
 20161                           fsr0h	equ	0xFEA
 20162                           fsr0l	equ	0xFE9
 20163                           wreg	equ	0xFE8
 20164                           indf1	equ	0xFE7
 20165                           postdec1	equ	0xFE5
 20166                           plusw1	equ	0xFE3
 20167                           fsr1h	equ	0xFE2
 20168                           fsr1l	equ	0xFE1
 20169                           indf2	equ	0xFDF
 20170                           postinc2	equ	0xFDE
 20171                           postdec2	equ	0xFDD
 20172                           plusw2	equ	0xFDB
 20173                           fsr2h	equ	0xFDA
 20174                           fsr2l	equ	0xFD9
 20175                           status	equ	0xFD8
 20176                           
 20177 ;; *************** function ___ftge *****************
 20178 ;; Defined at:
 20179 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 20180 ;; Parameters:    Size  Location     Type
 20181 ;;  ff1             3   23[BANK1 ] float 
 20182 ;;  ff2             3   26[BANK1 ] float 
 20183 ;; Auto vars:     Size  Location     Type
 20184 ;;		None
 20185 ;; Return value:  Size  Location     Type
 20186 ;;		None               void
 20187 ;; Registers used:
 20188 ;;		wreg, status,2, status,0
 20189 ;; Tracked objects:
 20190 ;;		On entry : 0/0
 20191 ;;		On exit  : 0/0
 20192 ;;		Unchanged: 0/0
 20193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20194 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20196 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20197 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20198 ;;Total ram usage:        9 bytes
 20199 ;; Hardware stack levels used:    1
 20200 ;; Hardware stack levels required when called:   14
 20201 ;; This function calls:
 20202 ;;		Nothing
 20203 ;; This function is called by:
 20204 ;;		_printf
 20205 ;; This function uses a non-reentrant model
 20206 ;;
 20207                           
 20208                           	psect	text54
 20209  015B9C                     __ptext54:
 20210                           	opt stack 0
 20211  015B9C                     ___ftge:
 20212                           	opt stack 13
 20213                           
 20214                           ; BSR set to: 1
 20215                           ;incstack = 0
 20216  015B9C  0101               	movlb	1	; () banked
 20217  015B9E  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 20218  015BA0  D016               	goto	l1846
 20219                           
 20220                           ; BSR set to: 1
 20221  015BA2  C117  F11D         	movff	___ftge@ff1,??___ftge
 20222  015BA6  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 20223  015BAA  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 20224  015BAE  1F1D               	comf	??___ftge& (0+255),f,b
 20225  015BB0  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 20226  015BB2  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 20227  015BB4  2B1D               	incf	??___ftge& (0+255),f,b
 20228  015BB6  0E00               	movlw	0
 20229  015BB8  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 20230  015BBA  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 20231  015BBC  0E00               	movlw	0
 20232  015BBE  251D               	addwf	??___ftge& (0+255),w,b
 20233  015BC0  6F17               	movwf	___ftge@ff1& (0+255),b
 20234  015BC2  0E00               	movlw	0
 20235  015BC4  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 20236  015BC6  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 20237  015BC8  0E80               	movlw	128
 20238  015BCA  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 20239  015BCC  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 20240  015BCE                     l1846:
 20241                           
 20242                           ; BSR set to: 1
 20243                           
 20244                           ; BSR set to: 1
 20245  015BCE  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 20246  015BD0  D016               	goto	l1847
 20247                           
 20248                           ; BSR set to: 1
 20249  015BD2  C11A  F11D         	movff	___ftge@ff2,??___ftge
 20250  015BD6  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 20251  015BDA  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 20252  015BDE  1F1D               	comf	??___ftge& (0+255),f,b
 20253  015BE0  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 20254  015BE2  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 20255  015BE4  2B1D               	incf	??___ftge& (0+255),f,b
 20256  015BE6  0E00               	movlw	0
 20257  015BE8  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 20258  015BEA  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 20259  015BEC  0E00               	movlw	0
 20260  015BEE  251D               	addwf	??___ftge& (0+255),w,b
 20261  015BF0  6F1A               	movwf	___ftge@ff2& (0+255),b
 20262  015BF2  0E00               	movlw	0
 20263  015BF4  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 20264  015BF6  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 20265  015BF8  0E80               	movlw	128
 20266  015BFA  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 20267  015BFC  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 20268  015BFE                     l1847:
 20269                           
 20270                           ; BSR set to: 1
 20271                           
 20272                           ; BSR set to: 1
 20273  015BFE  0E00               	movlw	0
 20274  015C00  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 20275  015C02  0E00               	movlw	0
 20276  015C04  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 20277  015C06  0E80               	movlw	128
 20278  015C08  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 20279                           
 20280                           ; BSR set to: 1
 20281  015C0A  0E00               	movlw	0
 20282  015C0C  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 20283  015C0E  0E00               	movlw	0
 20284  015C10  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 20285  015C12  0E80               	movlw	128
 20286  015C14  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 20287  015C16  511A               	movf	___ftge@ff2& (0+255),w,b
 20288  015C18  5D17               	subwf	___ftge@ff1& (0+255),w,b
 20289  015C1A  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 20290  015C1C  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 20291  015C1E  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 20292  015C20  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 20293  015C22  B0D8               	btfsc	status,0,c
 20294  015C24  D002               	goto	l9590
 20295                           
 20296                           ; BSR set to: 1
 20297  015C26  90D8               	bcf	status,0,c
 20298  015C28  0012               	return	
 20299  015C2A                     l9590:
 20300                           
 20301                           ; BSR set to: 1
 20302                           
 20303                           ; BSR set to: 1
 20304  015C2A  80D8               	bsf	status,0,c
 20305                           
 20306                           ; BSR set to: 1
 20307  015C2C  0012               	return	
 20308  015C2E                     __end_of___ftge:
 20309                           	opt stack 0
 20310                           tblptru	equ	0xFF8
 20311                           tblptrh	equ	0xFF7
 20312                           tblptrl	equ	0xFF6
 20313                           tablat	equ	0xFF5
 20314                           prodh	equ	0xFF4
 20315                           prodl	equ	0xFF3
 20316                           intcon	equ	0xFF2
 20317                           indf0	equ	0xFEF
 20318                           postinc0	equ	0xFEE
 20319                           fsr0h	equ	0xFEA
 20320                           fsr0l	equ	0xFE9
 20321                           wreg	equ	0xFE8
 20322                           indf1	equ	0xFE7
 20323                           postdec1	equ	0xFE5
 20324                           plusw1	equ	0xFE3
 20325                           fsr1h	equ	0xFE2
 20326                           fsr1l	equ	0xFE1
 20327                           indf2	equ	0xFDF
 20328                           postinc2	equ	0xFDE
 20329                           postdec2	equ	0xFDD
 20330                           plusw2	equ	0xFDB
 20331                           fsr2h	equ	0xFDA
 20332                           fsr2l	equ	0xFD9
 20333                           status	equ	0xFD8
 20334                           
 20335 ;; *************** function _SYSTEM_Initialize *****************
 20336 ;; Defined at:
 20337 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20338 ;; Parameters:    Size  Location     Type
 20339 ;;		None
 20340 ;; Auto vars:     Size  Location     Type
 20341 ;;		None
 20342 ;; Return value:  Size  Location     Type
 20343 ;;                  1    wreg      void 
 20344 ;; Registers used:
 20345 ;;		wreg, status,2, status,0, cstack
 20346 ;; Tracked objects:
 20347 ;;		On entry : 0/0
 20348 ;;		On exit  : 0/0
 20349 ;;		Unchanged: 0/0
 20350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20355 ;;Total ram usage:        0 bytes
 20356 ;; Hardware stack levels used:    1
 20357 ;; Hardware stack levels required when called:   16
 20358 ;; This function calls:
 20359 ;;		_ADCC_Initialize
 20360 ;;		_EUSART2_Initialize
 20361 ;;		_FVR_Initialize
 20362 ;;		_HLVD_Initialize
 20363 ;;		_INTERRUPT_Initialize
 20364 ;;		_OSCILLATOR_Initialize
 20365 ;;		_PIN_MANAGER_Initialize
 20366 ;;		_PMD_Initialize
 20367 ;;		_TMR5_Initialize
 20368 ;;		_TMR6_Initialize
 20369 ;;		_TMR7_Initialize
 20370 ;; This function is called by:
 20371 ;;		_main
 20372 ;; This function uses a non-reentrant model
 20373 ;;
 20374                           
 20375                           	psect	text55
 20376  016DBA                     __ptext55:
 20377                           	opt stack 0
 20378  016DBA                     _SYSTEM_Initialize:
 20379                           	opt stack 14
 20380                           
 20381                           ;mcc.c: 52: INTERRUPT_Initialize();
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;incstack = 0
 20385  016DBA  EC13  F0B8         	call	_INTERRUPT_Initialize	;wreg free
 20386                           
 20387                           ;mcc.c: 53: PMD_Initialize();
 20388  016DBE  ECD0  F0B7         	call	_PMD_Initialize	;wreg free
 20389                           
 20390                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 20391  016DC2  EC7D  F0AD         	call	_PIN_MANAGER_Initialize	;wreg free
 20392                           
 20393                           ;mcc.c: 55: OSCILLATOR_Initialize();
 20394  016DC6  ECDE  F0B7         	call	_OSCILLATOR_Initialize	;wreg free
 20395                           
 20396                           ;mcc.c: 56: HLVD_Initialize();
 20397  016DCA  EC48  F0B8         	call	_HLVD_Initialize	;wreg free
 20398                           
 20399                           ;mcc.c: 57: FVR_Initialize();
 20400  016DCE  EC9A  F0B8         	call	_FVR_Initialize	;wreg free
 20401                           
 20402                           ;mcc.c: 58: TMR7_Initialize();
 20403  016DD2  EC4C  F0B4         	call	_TMR7_Initialize	;wreg free
 20404                           
 20405                           ;mcc.c: 59: TMR6_Initialize();
 20406  016DD6  ECAC  F0B6         	call	_TMR6_Initialize	;wreg free
 20407                           
 20408                           ;mcc.c: 60: ADCC_Initialize();
 20409  016DDA  ECB5  F0B2         	call	_ADCC_Initialize	;wreg free
 20410                           
 20411                           ;mcc.c: 61: TMR5_Initialize();
 20412  016DDE  EC99  F0B4         	call	_TMR5_Initialize	;wreg free
 20413                           
 20414                           ;mcc.c: 62: EUSART2_Initialize();
 20415  016DE2  ECE5  F0B1         	call	_EUSART2_Initialize	;wreg free
 20416  016DE6  0012               	return		;funcret
 20417  016DE8                     __end_of_SYSTEM_Initialize:
 20418                           	opt stack 0
 20419                           tblptru	equ	0xFF8
 20420                           tblptrh	equ	0xFF7
 20421                           tblptrl	equ	0xFF6
 20422                           tablat	equ	0xFF5
 20423                           prodh	equ	0xFF4
 20424                           prodl	equ	0xFF3
 20425                           intcon	equ	0xFF2
 20426                           indf0	equ	0xFEF
 20427                           postinc0	equ	0xFEE
 20428                           fsr0h	equ	0xFEA
 20429                           fsr0l	equ	0xFE9
 20430                           wreg	equ	0xFE8
 20431                           indf1	equ	0xFE7
 20432                           postdec1	equ	0xFE5
 20433                           plusw1	equ	0xFE3
 20434                           fsr1h	equ	0xFE2
 20435                           fsr1l	equ	0xFE1
 20436                           indf2	equ	0xFDF
 20437                           postinc2	equ	0xFDE
 20438                           postdec2	equ	0xFDD
 20439                           plusw2	equ	0xFDB
 20440                           fsr2h	equ	0xFDA
 20441                           fsr2l	equ	0xFD9
 20442                           status	equ	0xFD8
 20443                           
 20444 ;; *************** function _TMR7_Initialize *****************
 20445 ;; Defined at:
 20446 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 20447 ;; Parameters:    Size  Location     Type
 20448 ;;		None
 20449 ;; Auto vars:     Size  Location     Type
 20450 ;;		None
 20451 ;; Return value:  Size  Location     Type
 20452 ;;                  1    wreg      void 
 20453 ;; Registers used:
 20454 ;;		wreg, status,2, status,0, cstack
 20455 ;; Tracked objects:
 20456 ;;		On entry : 0/0
 20457 ;;		On exit  : 0/0
 20458 ;;		Unchanged: 0/0
 20459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20462 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20463 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20464 ;;Total ram usage:        2 bytes
 20465 ;; Hardware stack levels used:    1
 20466 ;; Hardware stack levels required when called:   15
 20467 ;; This function calls:
 20468 ;;		_TMR7_SetInterruptHandler
 20469 ;; This function is called by:
 20470 ;;		_SYSTEM_Initialize
 20471 ;; This function uses a non-reentrant model
 20472 ;;
 20473                           
 20474                           	psect	text56
 20475  016898                     __ptext56:
 20476                           	opt stack 0
 20477  016898                     _TMR7_Initialize:
 20478                           	opt stack 14
 20479                           
 20480                           ;tmr7.c: 69: T7GCON = 0x00;
 20481                           
 20482                           ;incstack = 0
 20483  016898  0E00               	movlw	0
 20484  01689A  010F               	movlb	15	; () banked
 20485  01689C  6F31               	movwf	49,b	;volatile
 20486                           
 20487                           ;tmr7.c: 72: T7GATE = 0x00;
 20488  01689E  0E00               	movlw	0
 20489  0168A0  6F32               	movwf	50,b	;volatile
 20490                           
 20491                           ;tmr7.c: 75: T7CLK = 0x03;
 20492  0168A2  0E03               	movlw	3
 20493  0168A4  6F33               	movwf	51,b	;volatile
 20494                           
 20495                           ;tmr7.c: 78: TMR7H = 0x3C;
 20496  0168A6  0E3C               	movlw	60
 20497  0168A8  6F2F               	movwf	47,b	;volatile
 20498                           
 20499                           ;tmr7.c: 81: TMR7L = 0xB0;
 20500  0168AA  0EB0               	movlw	176
 20501  0168AC  6F2E               	movwf	46,b	;volatile
 20502                           
 20503                           ; BSR set to: 15
 20504                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 20505  0168AE  512E               	movf	46,w,b	;volatile
 20506  0168B0  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 20507  0168B4  0101               	movlb	1	; () banked
 20508  0168B6  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 20509  0168B8  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 20510  0168BC  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 20511  0168BE  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 20512  0168C0  6FCF               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 20513  0168C2  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 20514  0168C4  6FD0               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 20515                           
 20516                           ; BSR set to: 1
 20517                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 20518  0168C6  010E               	movlb	14	; () banked
 20519  0168C8  9D38               	bcf	56,6,b	;volatile
 20520                           
 20521                           ; BSR set to: 14
 20522                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 20523  0168CA  8D2E               	bsf	46,6,b	;volatile
 20524                           
 20525                           ; BSR set to: 14
 20526                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 20527  0168CC  0E56               	movlw	low _TMR7_DefaultInterruptHandler
 20528  0168CE  0101               	movlb	1	; () banked
 20529  0168D0  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 20530  0168D2  0E71               	movlw	high _TMR7_DefaultInterruptHandler
 20531  0168D4  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20532  0168D6  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 20533  0168D8  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20534  0168DA  EC5E  F0B8         	call	_TMR7_SetInterruptHandler	;wreg free
 20535                           
 20536                           ;tmr7.c: 96: T7CON = 0x31;
 20537  0168DE  0E31               	movlw	49
 20538  0168E0  010F               	movlb	15	; () banked
 20539  0168E2  6F30               	movwf	48,b	;volatile
 20540                           
 20541                           ; BSR set to: 15
 20542  0168E4  0012               	return		;funcret
 20543  0168E6                     __end_of_TMR7_Initialize:
 20544                           	opt stack 0
 20545                           tblptru	equ	0xFF8
 20546                           tblptrh	equ	0xFF7
 20547                           tblptrl	equ	0xFF6
 20548                           tablat	equ	0xFF5
 20549                           prodh	equ	0xFF4
 20550                           prodl	equ	0xFF3
 20551                           intcon	equ	0xFF2
 20552                           indf0	equ	0xFEF
 20553                           postinc0	equ	0xFEE
 20554                           fsr0h	equ	0xFEA
 20555                           fsr0l	equ	0xFE9
 20556                           wreg	equ	0xFE8
 20557                           indf1	equ	0xFE7
 20558                           postdec1	equ	0xFE5
 20559                           plusw1	equ	0xFE3
 20560                           fsr1h	equ	0xFE2
 20561                           fsr1l	equ	0xFE1
 20562                           indf2	equ	0xFDF
 20563                           postinc2	equ	0xFDE
 20564                           postdec2	equ	0xFDD
 20565                           plusw2	equ	0xFDB
 20566                           fsr2h	equ	0xFDA
 20567                           fsr2l	equ	0xFD9
 20568                           status	equ	0xFD8
 20569                           
 20570 ;; *************** function _TMR7_SetInterruptHandler *****************
 20571 ;; Defined at:
 20572 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 20573 ;; Parameters:    Size  Location     Type
 20574 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20575 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 20576 ;; Auto vars:     Size  Location     Type
 20577 ;;		None
 20578 ;; Return value:  Size  Location     Type
 20579 ;;                  1    wreg      void 
 20580 ;; Registers used:
 20581 ;;		wreg, status,2, status,0
 20582 ;; Tracked objects:
 20583 ;;		On entry : 0/0
 20584 ;;		On exit  : 0/0
 20585 ;;		Unchanged: 0/0
 20586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20587 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20590 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20591 ;;Total ram usage:        3 bytes
 20592 ;; Hardware stack levels used:    1
 20593 ;; Hardware stack levels required when called:   14
 20594 ;; This function calls:
 20595 ;;		Nothing
 20596 ;; This function is called by:
 20597 ;;		_TMR7_Initialize
 20598 ;;		_main
 20599 ;; This function uses a non-reentrant model
 20600 ;;
 20601                           
 20602                           	psect	text57
 20603  0170BC                     __ptext57:
 20604                           	opt stack 0
 20605  0170BC                     _TMR7_SetInterruptHandler:
 20606                           	opt stack 16
 20607                           
 20608                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 20609                           
 20610                           ; BSR set to: 15
 20611                           ;incstack = 0
 20612  0170BC  C117  F1C1         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 20613  0170C0  C118  F1C2         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 20614  0170C4  C119  F1C3         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 20615  0170C8  0012               	return		;funcret
 20616  0170CA                     __end_of_TMR7_SetInterruptHandler:
 20617                           	opt stack 0
 20618                           tblptru	equ	0xFF8
 20619                           tblptrh	equ	0xFF7
 20620                           tblptrl	equ	0xFF6
 20621                           tablat	equ	0xFF5
 20622                           prodh	equ	0xFF4
 20623                           prodl	equ	0xFF3
 20624                           intcon	equ	0xFF2
 20625                           indf0	equ	0xFEF
 20626                           postinc0	equ	0xFEE
 20627                           fsr0h	equ	0xFEA
 20628                           fsr0l	equ	0xFE9
 20629                           wreg	equ	0xFE8
 20630                           indf1	equ	0xFE7
 20631                           postdec1	equ	0xFE5
 20632                           plusw1	equ	0xFE3
 20633                           fsr1h	equ	0xFE2
 20634                           fsr1l	equ	0xFE1
 20635                           indf2	equ	0xFDF
 20636                           postinc2	equ	0xFDE
 20637                           postdec2	equ	0xFDD
 20638                           plusw2	equ	0xFDB
 20639                           fsr2h	equ	0xFDA
 20640                           fsr2l	equ	0xFD9
 20641                           status	equ	0xFD8
 20642                           
 20643 ;; *************** function _TMR6_Initialize *****************
 20644 ;; Defined at:
 20645 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 20646 ;; Parameters:    Size  Location     Type
 20647 ;;		None
 20648 ;; Auto vars:     Size  Location     Type
 20649 ;;		None
 20650 ;; Return value:  Size  Location     Type
 20651 ;;                  1    wreg      void 
 20652 ;; Registers used:
 20653 ;;		wreg, status,2, status,0, cstack
 20654 ;; Tracked objects:
 20655 ;;		On entry : 0/0
 20656 ;;		On exit  : 0/0
 20657 ;;		Unchanged: 0/0
 20658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20663 ;;Total ram usage:        0 bytes
 20664 ;; Hardware stack levels used:    1
 20665 ;; Hardware stack levels required when called:   15
 20666 ;; This function calls:
 20667 ;;		_TMR6_SetInterruptHandler
 20668 ;; This function is called by:
 20669 ;;		_SYSTEM_Initialize
 20670 ;; This function uses a non-reentrant model
 20671 ;;
 20672                           
 20673                           	psect	text58
 20674  016D58                     __ptext58:
 20675                           	opt stack 0
 20676  016D58                     _TMR6_Initialize:
 20677                           	opt stack 14
 20678                           
 20679                           ;tmr6.c: 69: T6CLKCON = 0x04;
 20680                           
 20681                           ;incstack = 0
 20682  016D58  0E04               	movlw	4
 20683  016D5A  6EB3               	movwf	4019,c	;volatile
 20684                           
 20685                           ;tmr6.c: 72: T6HLT = 0x20;
 20686  016D5C  0E20               	movlw	32
 20687  016D5E  6EB2               	movwf	4018,c	;volatile
 20688                           
 20689                           ;tmr6.c: 75: T6RST = 0x00;
 20690  016D60  0E00               	movlw	0
 20691  016D62  6EB4               	movwf	4020,c	;volatile
 20692                           
 20693                           ;tmr6.c: 78: T6PR = 0xF1;
 20694  016D64  0EF1               	movlw	241
 20695  016D66  6EB0               	movwf	4016,c	;volatile
 20696                           
 20697                           ;tmr6.c: 81: T6TMR = 0x00;
 20698  016D68  0E00               	movlw	0
 20699  016D6A  6EAF               	movwf	4015,c	;volatile
 20700                           
 20701                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 20702  016D6C  010E               	movlb	14	; () banked
 20703  016D6E  9B38               	bcf	56,5,b	;volatile
 20704                           
 20705                           ; BSR set to: 14
 20706                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 20707  016D70  8B2E               	bsf	46,5,b	;volatile
 20708                           
 20709                           ; BSR set to: 14
 20710                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 20711  016D72  0E58               	movlw	low _TMR6_DefaultInterruptHandler
 20712  016D74  0101               	movlb	1	; () banked
 20713  016D76  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 20714  016D78  0E71               	movlw	high _TMR6_DefaultInterruptHandler
 20715  016D7A  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20716  016D7C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 20717  016D7E  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20718  016D80  EC65  F0B8         	call	_TMR6_SetInterruptHandler	;wreg free
 20719                           
 20720                           ;tmr6.c: 93: T6CON = 0xBF;
 20721  016D84  0EBF               	movlw	191
 20722  016D86  6EB1               	movwf	4017,c	;volatile
 20723  016D88  0012               	return		;funcret
 20724  016D8A                     __end_of_TMR6_Initialize:
 20725                           	opt stack 0
 20726                           tblptru	equ	0xFF8
 20727                           tblptrh	equ	0xFF7
 20728                           tblptrl	equ	0xFF6
 20729                           tablat	equ	0xFF5
 20730                           prodh	equ	0xFF4
 20731                           prodl	equ	0xFF3
 20732                           intcon	equ	0xFF2
 20733                           indf0	equ	0xFEF
 20734                           postinc0	equ	0xFEE
 20735                           fsr0h	equ	0xFEA
 20736                           fsr0l	equ	0xFE9
 20737                           wreg	equ	0xFE8
 20738                           indf1	equ	0xFE7
 20739                           postdec1	equ	0xFE5
 20740                           plusw1	equ	0xFE3
 20741                           fsr1h	equ	0xFE2
 20742                           fsr1l	equ	0xFE1
 20743                           indf2	equ	0xFDF
 20744                           postinc2	equ	0xFDE
 20745                           postdec2	equ	0xFDD
 20746                           plusw2	equ	0xFDB
 20747                           fsr2h	equ	0xFDA
 20748                           fsr2l	equ	0xFD9
 20749                           status	equ	0xFD8
 20750                           
 20751 ;; *************** function _TMR6_SetInterruptHandler *****************
 20752 ;; Defined at:
 20753 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 20754 ;; Parameters:    Size  Location     Type
 20755 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20756 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 20757 ;; Auto vars:     Size  Location     Type
 20758 ;;		None
 20759 ;; Return value:  Size  Location     Type
 20760 ;;                  1    wreg      void 
 20761 ;; Registers used:
 20762 ;;		wreg, status,2, status,0
 20763 ;; Tracked objects:
 20764 ;;		On entry : 0/0
 20765 ;;		On exit  : 0/0
 20766 ;;		Unchanged: 0/0
 20767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20768 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20771 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20772 ;;Total ram usage:        3 bytes
 20773 ;; Hardware stack levels used:    1
 20774 ;; Hardware stack levels required when called:   14
 20775 ;; This function calls:
 20776 ;;		Nothing
 20777 ;; This function is called by:
 20778 ;;		_TMR6_Initialize
 20779 ;;		_main
 20780 ;; This function uses a non-reentrant model
 20781 ;;
 20782                           
 20783                           	psect	text59
 20784  0170CA                     __ptext59:
 20785                           	opt stack 0
 20786  0170CA                     _TMR6_SetInterruptHandler:
 20787                           	opt stack 16
 20788                           
 20789                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 20790                           
 20791                           ;incstack = 0
 20792  0170CA  C117  F1C4         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 20793  0170CE  C118  F1C5         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 20794  0170D2  C119  F1C6         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 20795  0170D6  0012               	return		;funcret
 20796  0170D8                     __end_of_TMR6_SetInterruptHandler:
 20797                           	opt stack 0
 20798                           tblptru	equ	0xFF8
 20799                           tblptrh	equ	0xFF7
 20800                           tblptrl	equ	0xFF6
 20801                           tablat	equ	0xFF5
 20802                           prodh	equ	0xFF4
 20803                           prodl	equ	0xFF3
 20804                           intcon	equ	0xFF2
 20805                           indf0	equ	0xFEF
 20806                           postinc0	equ	0xFEE
 20807                           fsr0h	equ	0xFEA
 20808                           fsr0l	equ	0xFE9
 20809                           wreg	equ	0xFE8
 20810                           indf1	equ	0xFE7
 20811                           postdec1	equ	0xFE5
 20812                           plusw1	equ	0xFE3
 20813                           fsr1h	equ	0xFE2
 20814                           fsr1l	equ	0xFE1
 20815                           indf2	equ	0xFDF
 20816                           postinc2	equ	0xFDE
 20817                           postdec2	equ	0xFDD
 20818                           plusw2	equ	0xFDB
 20819                           fsr2h	equ	0xFDA
 20820                           fsr2l	equ	0xFD9
 20821                           status	equ	0xFD8
 20822                           
 20823 ;; *************** function _TMR5_Initialize *****************
 20824 ;; Defined at:
 20825 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 20826 ;; Parameters:    Size  Location     Type
 20827 ;;		None
 20828 ;; Auto vars:     Size  Location     Type
 20829 ;;		None
 20830 ;; Return value:  Size  Location     Type
 20831 ;;                  1    wreg      void 
 20832 ;; Registers used:
 20833 ;;		wreg, status,2, status,0, cstack
 20834 ;; Tracked objects:
 20835 ;;		On entry : 0/0
 20836 ;;		On exit  : 0/0
 20837 ;;		Unchanged: 0/0
 20838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20841 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20842 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20843 ;;Total ram usage:        2 bytes
 20844 ;; Hardware stack levels used:    1
 20845 ;; Hardware stack levels required when called:   15
 20846 ;; This function calls:
 20847 ;;		_TMR5_SetInterruptHandler
 20848 ;; This function is called by:
 20849 ;;		_SYSTEM_Initialize
 20850 ;; This function uses a non-reentrant model
 20851 ;;
 20852                           
 20853                           	psect	text60
 20854  016932                     __ptext60:
 20855                           	opt stack 0
 20856  016932                     _TMR5_Initialize:
 20857                           	opt stack 14
 20858                           
 20859                           ;tmr5.c: 69: T5GCON = 0x00;
 20860                           
 20861                           ;incstack = 0
 20862  016932  0E00               	movlw	0
 20863  016934  6EC4               	movwf	4036,c	;volatile
 20864                           
 20865                           ;tmr5.c: 72: T5GATE = 0x00;
 20866  016936  0E00               	movlw	0
 20867  016938  6EC5               	movwf	4037,c	;volatile
 20868                           
 20869                           ;tmr5.c: 75: T5CLK = 0x01;
 20870  01693A  0E01               	movlw	1
 20871  01693C  6EC6               	movwf	4038,c	;volatile
 20872                           
 20873                           ;tmr5.c: 78: TMR5H = 0x00;
 20874  01693E  0E00               	movlw	0
 20875  016940  6EC2               	movwf	4034,c	;volatile
 20876                           
 20877                           ;tmr5.c: 81: TMR5L = 0x00;
 20878  016942  0E00               	movlw	0
 20879  016944  6EC1               	movwf	4033,c	;volatile
 20880                           
 20881                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 20882  016946  50C1               	movf	4033,w,c	;volatile
 20883  016948  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 20884  01694C  0101               	movlb	1	; () banked
 20885  01694E  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 20886  016950  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 20887  016954  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 20888  016956  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 20889  016958  6FCD               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 20890  01695A  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 20891  01695C  6FCE               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 20892                           
 20893                           ; BSR set to: 1
 20894                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 20895  01695E  010E               	movlb	14	; () banked
 20896  016960  9938               	bcf	56,4,b	;volatile
 20897                           
 20898                           ; BSR set to: 14
 20899                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 20900  016962  892E               	bsf	46,4,b	;volatile
 20901                           
 20902                           ; BSR set to: 14
 20903                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 20904  016964  0E5A               	movlw	low _TMR5_DefaultInterruptHandler
 20905  016966  0101               	movlb	1	; () banked
 20906  016968  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 20907  01696A  0E71               	movlw	high _TMR5_DefaultInterruptHandler
 20908  01696C  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20909  01696E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 20910  016970  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20911  016972  EC6C  F0B8         	call	_TMR5_SetInterruptHandler	;wreg free
 20912                           
 20913                           ;tmr5.c: 96: T5CON = 0x13;
 20914  016976  0E13               	movlw	19
 20915  016978  6EC3               	movwf	4035,c	;volatile
 20916  01697A  0012               	return		;funcret
 20917  01697C                     __end_of_TMR5_Initialize:
 20918                           	opt stack 0
 20919                           tblptru	equ	0xFF8
 20920                           tblptrh	equ	0xFF7
 20921                           tblptrl	equ	0xFF6
 20922                           tablat	equ	0xFF5
 20923                           prodh	equ	0xFF4
 20924                           prodl	equ	0xFF3
 20925                           intcon	equ	0xFF2
 20926                           indf0	equ	0xFEF
 20927                           postinc0	equ	0xFEE
 20928                           fsr0h	equ	0xFEA
 20929                           fsr0l	equ	0xFE9
 20930                           wreg	equ	0xFE8
 20931                           indf1	equ	0xFE7
 20932                           postdec1	equ	0xFE5
 20933                           plusw1	equ	0xFE3
 20934                           fsr1h	equ	0xFE2
 20935                           fsr1l	equ	0xFE1
 20936                           indf2	equ	0xFDF
 20937                           postinc2	equ	0xFDE
 20938                           postdec2	equ	0xFDD
 20939                           plusw2	equ	0xFDB
 20940                           fsr2h	equ	0xFDA
 20941                           fsr2l	equ	0xFD9
 20942                           status	equ	0xFD8
 20943                           
 20944 ;; *************** function _TMR5_SetInterruptHandler *****************
 20945 ;; Defined at:
 20946 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 20947 ;; Parameters:    Size  Location     Type
 20948 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20949 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 20950 ;; Auto vars:     Size  Location     Type
 20951 ;;		None
 20952 ;; Return value:  Size  Location     Type
 20953 ;;                  1    wreg      void 
 20954 ;; Registers used:
 20955 ;;		wreg, status,2, status,0
 20956 ;; Tracked objects:
 20957 ;;		On entry : 0/0
 20958 ;;		On exit  : 0/0
 20959 ;;		Unchanged: 0/0
 20960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20961 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20964 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20965 ;;Total ram usage:        3 bytes
 20966 ;; Hardware stack levels used:    1
 20967 ;; Hardware stack levels required when called:   14
 20968 ;; This function calls:
 20969 ;;		Nothing
 20970 ;; This function is called by:
 20971 ;;		_TMR5_Initialize
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975                           	psect	text61
 20976  0170D8                     __ptext61:
 20977                           	opt stack 0
 20978  0170D8                     _TMR5_SetInterruptHandler:
 20979                           	opt stack 14
 20980                           
 20981                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 20982                           
 20983                           ;incstack = 0
 20984  0170D8  C117  F1BE         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 20985  0170DC  C118  F1BF         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 20986  0170E0  C119  F1C0         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 20987  0170E4  0012               	return		;funcret
 20988  0170E6                     __end_of_TMR5_SetInterruptHandler:
 20989                           	opt stack 0
 20990                           tblptru	equ	0xFF8
 20991                           tblptrh	equ	0xFF7
 20992                           tblptrl	equ	0xFF6
 20993                           tablat	equ	0xFF5
 20994                           prodh	equ	0xFF4
 20995                           prodl	equ	0xFF3
 20996                           intcon	equ	0xFF2
 20997                           indf0	equ	0xFEF
 20998                           postinc0	equ	0xFEE
 20999                           fsr0h	equ	0xFEA
 21000                           fsr0l	equ	0xFE9
 21001                           wreg	equ	0xFE8
 21002                           indf1	equ	0xFE7
 21003                           postdec1	equ	0xFE5
 21004                           plusw1	equ	0xFE3
 21005                           fsr1h	equ	0xFE2
 21006                           fsr1l	equ	0xFE1
 21007                           indf2	equ	0xFDF
 21008                           postinc2	equ	0xFDE
 21009                           postdec2	equ	0xFDD
 21010                           plusw2	equ	0xFDB
 21011                           fsr2h	equ	0xFDA
 21012                           fsr2l	equ	0xFD9
 21013                           status	equ	0xFD8
 21014                           
 21015 ;; *************** function _PMD_Initialize *****************
 21016 ;; Defined at:
 21017 ;;		line 83 in file "mcc_generated_files/mcc.c"
 21018 ;; Parameters:    Size  Location     Type
 21019 ;;		None
 21020 ;; Auto vars:     Size  Location     Type
 21021 ;;		None
 21022 ;; Return value:  Size  Location     Type
 21023 ;;                  1    wreg      void 
 21024 ;; Registers used:
 21025 ;;		wreg, status,2
 21026 ;; Tracked objects:
 21027 ;;		On entry : 0/0
 21028 ;;		On exit  : 0/0
 21029 ;;		Unchanged: 0/0
 21030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21035 ;;Total ram usage:        0 bytes
 21036 ;; Hardware stack levels used:    1
 21037 ;; Hardware stack levels required when called:   14
 21038 ;; This function calls:
 21039 ;;		Nothing
 21040 ;; This function is called by:
 21041 ;;		_SYSTEM_Initialize
 21042 ;; This function uses a non-reentrant model
 21043 ;;
 21044                           
 21045                           	psect	text62
 21046  016FA0                     __ptext62:
 21047                           	opt stack 0
 21048  016FA0                     _PMD_Initialize:
 21049                           	opt stack 15
 21050                           
 21051                           ;mcc.c: 86: PMD0 = 0x00;
 21052                           
 21053                           ;incstack = 0
 21054  016FA0  0E00               	movlw	0
 21055  016FA2  010E               	movlb	14	; () banked
 21056  016FA4  6F4C               	movwf	76,b	;volatile
 21057                           
 21058                           ;mcc.c: 88: PMD1 = 0x00;
 21059  016FA6  0E00               	movlw	0
 21060  016FA8  6F4D               	movwf	77,b	;volatile
 21061                           
 21062                           ;mcc.c: 90: PMD2 = 0x00;
 21063  016FAA  0E00               	movlw	0
 21064  016FAC  6F4E               	movwf	78,b	;volatile
 21065                           
 21066                           ;mcc.c: 92: PMD3 = 0x00;
 21067  016FAE  0E00               	movlw	0
 21068  016FB0  6F4F               	movwf	79,b	;volatile
 21069                           
 21070                           ;mcc.c: 94: PMD4 = 0x00;
 21071  016FB2  0E00               	movlw	0
 21072  016FB4  6F50               	movwf	80,b	;volatile
 21073                           
 21074                           ;mcc.c: 96: PMD5 = 0x00;
 21075  016FB6  0E00               	movlw	0
 21076  016FB8  6F51               	movwf	81,b	;volatile
 21077                           
 21078                           ; BSR set to: 14
 21079  016FBA  0012               	return		;funcret
 21080  016FBC                     __end_of_PMD_Initialize:
 21081                           	opt stack 0
 21082                           tblptru	equ	0xFF8
 21083                           tblptrh	equ	0xFF7
 21084                           tblptrl	equ	0xFF6
 21085                           tablat	equ	0xFF5
 21086                           prodh	equ	0xFF4
 21087                           prodl	equ	0xFF3
 21088                           intcon	equ	0xFF2
 21089                           indf0	equ	0xFEF
 21090                           postinc0	equ	0xFEE
 21091                           fsr0h	equ	0xFEA
 21092                           fsr0l	equ	0xFE9
 21093                           wreg	equ	0xFE8
 21094                           indf1	equ	0xFE7
 21095                           postdec1	equ	0xFE5
 21096                           plusw1	equ	0xFE3
 21097                           fsr1h	equ	0xFE2
 21098                           fsr1l	equ	0xFE1
 21099                           indf2	equ	0xFDF
 21100                           postinc2	equ	0xFDE
 21101                           postdec2	equ	0xFDD
 21102                           plusw2	equ	0xFDB
 21103                           fsr2h	equ	0xFDA
 21104                           fsr2l	equ	0xFD9
 21105                           status	equ	0xFD8
 21106                           
 21107 ;; *************** function _PIN_MANAGER_Initialize *****************
 21108 ;; Defined at:
 21109 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;		None
 21112 ;; Auto vars:     Size  Location     Type
 21113 ;;		None
 21114 ;; Return value:  Size  Location     Type
 21115 ;;                  1    wreg      void 
 21116 ;; Registers used:
 21117 ;;		wreg, status,2
 21118 ;; Tracked objects:
 21119 ;;		On entry : 0/0
 21120 ;;		On exit  : 0/0
 21121 ;;		Unchanged: 0/0
 21122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21127 ;;Total ram usage:        0 bytes
 21128 ;; Hardware stack levels used:    1
 21129 ;; Hardware stack levels required when called:   14
 21130 ;; This function calls:
 21131 ;;		Nothing
 21132 ;; This function is called by:
 21133 ;;		_SYSTEM_Initialize
 21134 ;; This function uses a non-reentrant model
 21135 ;;
 21136                           
 21137                           	psect	text63
 21138  015AFA                     __ptext63:
 21139                           	opt stack 0
 21140  015AFA                     _PIN_MANAGER_Initialize:
 21141                           	opt stack 15
 21142                           
 21143                           ;pin_manager.c: 62: LATE = 0x00;
 21144                           
 21145                           ; BSR set to: 14
 21146                           ;incstack = 0
 21147  015AFA  0E00               	movlw	0
 21148  015AFC  6E7D               	movwf	3965,c	;volatile
 21149                           
 21150                           ;pin_manager.c: 63: LATD = 0x00;
 21151  015AFE  0E00               	movlw	0
 21152  015B00  6E7C               	movwf	3964,c	;volatile
 21153                           
 21154                           ;pin_manager.c: 64: LATA = 0x00;
 21155  015B02  0E00               	movlw	0
 21156  015B04  6E79               	movwf	3961,c	;volatile
 21157                           
 21158                           ;pin_manager.c: 65: LATF = 0x00;
 21159  015B06  0E00               	movlw	0
 21160  015B08  6E7E               	movwf	3966,c	;volatile
 21161                           
 21162                           ;pin_manager.c: 66: LATB = 0x00;
 21163  015B0A  0E00               	movlw	0
 21164  015B0C  6E7A               	movwf	3962,c	;volatile
 21165                           
 21166                           ;pin_manager.c: 67: LATG = 0x00;
 21167  015B0E  0E00               	movlw	0
 21168  015B10  6E7F               	movwf	3967,c	;volatile
 21169                           
 21170                           ;pin_manager.c: 68: LATC = 0x00;
 21171  015B12  0E00               	movlw	0
 21172  015B14  6E7B               	movwf	3963,c	;volatile
 21173                           
 21174                           ;pin_manager.c: 69: LATH = 0x00;
 21175  015B16  0E00               	movlw	0
 21176  015B18  6E80               	movwf	3968,c	;volatile
 21177                           
 21178                           ;pin_manager.c: 74: TRISE = 0xFF;
 21179  015B1A  6885               	setf	3973,c	;volatile
 21180                           
 21181                           ;pin_manager.c: 75: TRISF = 0xF0;
 21182  015B1C  0EF0               	movlw	240
 21183  015B1E  6E86               	movwf	3974,c	;volatile
 21184                           
 21185                           ;pin_manager.c: 76: TRISA = 0xFF;
 21186  015B20  6881               	setf	3969,c	;volatile
 21187                           
 21188                           ;pin_manager.c: 77: TRISG = 0x5C;
 21189  015B22  0E5C               	movlw	92
 21190  015B24  6E87               	movwf	3975,c	;volatile
 21191                           
 21192                           ;pin_manager.c: 78: TRISB = 0xFF;
 21193  015B26  6882               	setf	3970,c	;volatile
 21194                           
 21195                           ;pin_manager.c: 79: TRISH = 0x0F;
 21196  015B28  0E0F               	movlw	15
 21197  015B2A  6E88               	movwf	3976,c	;volatile
 21198                           
 21199                           ;pin_manager.c: 80: TRISC = 0xFF;
 21200  015B2C  6883               	setf	3971,c	;volatile
 21201                           
 21202                           ;pin_manager.c: 81: TRISD = 0xFF;
 21203  015B2E  6884               	setf	3972,c	;volatile
 21204                           
 21205                           ;pin_manager.c: 86: ANSELD = 0xFF;
 21206  015B30  010E               	movlb	14	; () banked
 21207  015B32  69A7               	setf	167,b	;volatile
 21208                           
 21209                           ; BSR set to: 14
 21210                           ;pin_manager.c: 87: ANSELB = 0xFF;
 21211  015B34  699A               	setf	154,b	;volatile
 21212                           
 21213                           ; BSR set to: 14
 21214                           ;pin_manager.c: 88: ANSELE = 0xFF;
 21215  015B36  69AF               	setf	175,b	;volatile
 21216                           
 21217                           ;pin_manager.c: 89: ANSELG = 0x3C;
 21218  015B38  0E3C               	movlw	60
 21219  015B3A  6FBC               	movwf	188,b	;volatile
 21220                           
 21221                           ;pin_manager.c: 90: ANSELF = 0xF0;
 21222  015B3C  0EF0               	movlw	240
 21223  015B3E  6FB4               	movwf	180,b	;volatile
 21224                           
 21225                           ; BSR set to: 14
 21226                           ;pin_manager.c: 91: ANSELA = 0xFF;
 21227  015B40  6992               	setf	146,b	;volatile
 21228                           
 21229                           ;pin_manager.c: 96: WPUD = 0x00;
 21230  015B42  0E00               	movlw	0
 21231  015B44  6FA6               	movwf	166,b	;volatile
 21232                           
 21233                           ;pin_manager.c: 97: WPUF = 0x00;
 21234  015B46  0E00               	movlw	0
 21235  015B48  6FB3               	movwf	179,b	;volatile
 21236                           
 21237                           ;pin_manager.c: 98: WPUE = 0x00;
 21238  015B4A  0E00               	movlw	0
 21239  015B4C  6FAE               	movwf	174,b	;volatile
 21240                           
 21241                           ;pin_manager.c: 99: WPUB = 0x00;
 21242  015B4E  0E00               	movlw	0
 21243  015B50  6F99               	movwf	153,b	;volatile
 21244                           
 21245                           ;pin_manager.c: 100: WPUG = 0x00;
 21246  015B52  0E00               	movlw	0
 21247  015B54  6FBB               	movwf	187,b	;volatile
 21248                           
 21249                           ;pin_manager.c: 101: WPUA = 0x00;
 21250  015B56  0E00               	movlw	0
 21251  015B58  6F91               	movwf	145,b	;volatile
 21252                           
 21253                           ;pin_manager.c: 102: WPUC = 0x00;
 21254  015B5A  0E00               	movlw	0
 21255  015B5C  6FA1               	movwf	161,b	;volatile
 21256                           
 21257                           ;pin_manager.c: 103: WPUH = 0x00;
 21258  015B5E  0E00               	movlw	0
 21259  015B60  6FC0               	movwf	192,b	;volatile
 21260                           
 21261                           ;pin_manager.c: 108: ODCONE = 0x00;
 21262  015B62  0E00               	movlw	0
 21263  015B64  6FAD               	movwf	173,b	;volatile
 21264                           
 21265                           ;pin_manager.c: 109: ODCONF = 0x01;
 21266  015B66  0E01               	movlw	1
 21267  015B68  6FB2               	movwf	178,b	;volatile
 21268                           
 21269                           ;pin_manager.c: 110: ODCONA = 0x00;
 21270  015B6A  0E00               	movlw	0
 21271  015B6C  6F90               	movwf	144,b	;volatile
 21272                           
 21273                           ;pin_manager.c: 111: ODCONG = 0x00;
 21274  015B6E  0E00               	movlw	0
 21275  015B70  6FBA               	movwf	186,b	;volatile
 21276                           
 21277                           ;pin_manager.c: 112: ODCONB = 0x00;
 21278  015B72  0E00               	movlw	0
 21279  015B74  6F98               	movwf	152,b	;volatile
 21280                           
 21281                           ;pin_manager.c: 113: ODCONH = 0x00;
 21282  015B76  0E00               	movlw	0
 21283  015B78  6FBF               	movwf	191,b	;volatile
 21284                           
 21285                           ;pin_manager.c: 114: ODCONC = 0x00;
 21286  015B7A  0E00               	movlw	0
 21287  015B7C  6FA0               	movwf	160,b	;volatile
 21288                           
 21289                           ;pin_manager.c: 115: ODCOND = 0x00;
 21290  015B7E  0E00               	movlw	0
 21291  015B80  6FA5               	movwf	165,b	;volatile
 21292                           
 21293                           ; BSR set to: 14
 21294                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 21295  015B82  698F               	setf	143,b	;volatile
 21296                           
 21297                           ; BSR set to: 14
 21298                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 21299  015B84  6997               	setf	151,b	;volatile
 21300                           
 21301                           ; BSR set to: 14
 21302                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 21303  015B86  699F               	setf	159,b	;volatile
 21304                           
 21305                           ; BSR set to: 14
 21306                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 21307  015B88  69A4               	setf	164,b	;volatile
 21308                           
 21309                           ; BSR set to: 14
 21310                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 21311  015B8A  69AC               	setf	172,b	;volatile
 21312                           
 21313                           ; BSR set to: 14
 21314                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 21315  015B8C  69B1               	setf	177,b	;volatile
 21316                           
 21317                           ; BSR set to: 14
 21318                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 21319  015B8E  69B9               	setf	185,b	;volatile
 21320                           
 21321                           ; BSR set to: 14
 21322                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 21323  015B90  69BE               	setf	190,b	;volatile
 21324                           
 21325                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 21326  015B92  0E0E               	movlw	14
 21327  015B94  6F89               	movwf	137,b	;volatile
 21328                           
 21329                           ;pin_manager.c: 137: RX2PPS = 0x36;
 21330  015B96  0E36               	movlw	54
 21331  015B98  6F11               	movwf	17,b	;volatile
 21332                           
 21333                           ; BSR set to: 14
 21334  015B9A  0012               	return		;funcret
 21335  015B9C                     __end_of_PIN_MANAGER_Initialize:
 21336                           	opt stack 0
 21337                           tblptru	equ	0xFF8
 21338                           tblptrh	equ	0xFF7
 21339                           tblptrl	equ	0xFF6
 21340                           tablat	equ	0xFF5
 21341                           prodh	equ	0xFF4
 21342                           prodl	equ	0xFF3
 21343                           intcon	equ	0xFF2
 21344                           indf0	equ	0xFEF
 21345                           postinc0	equ	0xFEE
 21346                           fsr0h	equ	0xFEA
 21347                           fsr0l	equ	0xFE9
 21348                           wreg	equ	0xFE8
 21349                           indf1	equ	0xFE7
 21350                           postdec1	equ	0xFE5
 21351                           plusw1	equ	0xFE3
 21352                           fsr1h	equ	0xFE2
 21353                           fsr1l	equ	0xFE1
 21354                           indf2	equ	0xFDF
 21355                           postinc2	equ	0xFDE
 21356                           postdec2	equ	0xFDD
 21357                           plusw2	equ	0xFDB
 21358                           fsr2h	equ	0xFDA
 21359                           fsr2l	equ	0xFD9
 21360                           status	equ	0xFD8
 21361                           
 21362 ;; *************** function _OSCILLATOR_Initialize *****************
 21363 ;; Defined at:
 21364 ;;		line 65 in file "mcc_generated_files/mcc.c"
 21365 ;; Parameters:    Size  Location     Type
 21366 ;;		None
 21367 ;; Auto vars:     Size  Location     Type
 21368 ;;		None
 21369 ;; Return value:  Size  Location     Type
 21370 ;;                  1    wreg      void 
 21371 ;; Registers used:
 21372 ;;		wreg, status,2
 21373 ;; Tracked objects:
 21374 ;;		On entry : 0/0
 21375 ;;		On exit  : 0/0
 21376 ;;		Unchanged: 0/0
 21377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21382 ;;Total ram usage:        0 bytes
 21383 ;; Hardware stack levels used:    1
 21384 ;; Hardware stack levels required when called:   14
 21385 ;; This function calls:
 21386 ;;		Nothing
 21387 ;; This function is called by:
 21388 ;;		_SYSTEM_Initialize
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392                           	psect	text64
 21393  016FBC                     __ptext64:
 21394                           	opt stack 0
 21395  016FBC                     _OSCILLATOR_Initialize:
 21396                           	opt stack 15
 21397                           
 21398                           ;mcc.c: 68: OSCCON1 = 0x20;
 21399                           
 21400                           ; BSR set to: 14
 21401                           ;incstack = 0
 21402  016FBC  0E20               	movlw	32
 21403  016FBE  010E               	movlb	14	; () banked
 21404  016FC0  6F43               	movwf	67,b	;volatile
 21405                           
 21406                           ;mcc.c: 70: OSCCON3 = 0x00;
 21407  016FC2  0E00               	movlw	0
 21408  016FC4  6F45               	movwf	69,b	;volatile
 21409                           
 21410                           ;mcc.c: 72: OSCEN = 0x00;
 21411  016FC6  0E00               	movlw	0
 21412  016FC8  6F47               	movwf	71,b	;volatile
 21413                           
 21414                           ;mcc.c: 74: OSCFRQ = 0x02;
 21415  016FCA  0E02               	movlw	2
 21416  016FCC  6F49               	movwf	73,b	;volatile
 21417                           
 21418                           ;mcc.c: 76: OSCTUNE = 0x00;
 21419  016FCE  0E00               	movlw	0
 21420  016FD0  6F48               	movwf	72,b	;volatile
 21421  016FD2                     
 21422                           ; BSR set to: 14
 21423                           
 21424                           ; BSR set to: 14
 21425                           ;mcc.c: 79: {
 21426  016FD2  B146               	btfsc	70,0,b	;volatile
 21427  016FD4  0012               	return	
 21428  016FD6  D7FD               	goto	l57
 21429  016FD8                     __end_of_OSCILLATOR_Initialize:
 21430                           	opt stack 0
 21431                           tblptru	equ	0xFF8
 21432                           tblptrh	equ	0xFF7
 21433                           tblptrl	equ	0xFF6
 21434                           tablat	equ	0xFF5
 21435                           prodh	equ	0xFF4
 21436                           prodl	equ	0xFF3
 21437                           intcon	equ	0xFF2
 21438                           indf0	equ	0xFEF
 21439                           postinc0	equ	0xFEE
 21440                           fsr0h	equ	0xFEA
 21441                           fsr0l	equ	0xFE9
 21442                           wreg	equ	0xFE8
 21443                           indf1	equ	0xFE7
 21444                           postdec1	equ	0xFE5
 21445                           plusw1	equ	0xFE3
 21446                           fsr1h	equ	0xFE2
 21447                           fsr1l	equ	0xFE1
 21448                           indf2	equ	0xFDF
 21449                           postinc2	equ	0xFDE
 21450                           postdec2	equ	0xFDD
 21451                           plusw2	equ	0xFDB
 21452                           fsr2h	equ	0xFDA
 21453                           fsr2l	equ	0xFD9
 21454                           status	equ	0xFD8
 21455                           
 21456 ;; *************** function _INTERRUPT_Initialize *****************
 21457 ;; Defined at:
 21458 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21459 ;; Parameters:    Size  Location     Type
 21460 ;;		None
 21461 ;; Auto vars:     Size  Location     Type
 21462 ;;		None
 21463 ;; Return value:  Size  Location     Type
 21464 ;;                  1    wreg      void 
 21465 ;; Registers used:
 21466 ;;		None
 21467 ;; Tracked objects:
 21468 ;;		On entry : 0/0
 21469 ;;		On exit  : 0/0
 21470 ;;		Unchanged: 0/0
 21471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21476 ;;Total ram usage:        0 bytes
 21477 ;; Hardware stack levels used:    1
 21478 ;; Hardware stack levels required when called:   14
 21479 ;; This function calls:
 21480 ;;		Nothing
 21481 ;; This function is called by:
 21482 ;;		_SYSTEM_Initialize
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           	psect	text65
 21487  017026                     __ptext65:
 21488                           	opt stack 0
 21489  017026                     _INTERRUPT_Initialize:
 21490                           	opt stack 15
 21491                           
 21492                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 21493                           
 21494                           ; BSR set to: 14
 21495                           ;incstack = 0
 21496  017026  8AF2               	bsf	intcon,5,c	;volatile
 21497                           
 21498                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 21499  017028  010E               	movlb	14	; () banked
 21500  01702A  8F22               	bsf	34,7,b	;volatile
 21501                           
 21502                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 21503  01702C  8924               	bsf	36,4,b	;volatile
 21504                           
 21505                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 21506  01702E  8120               	bsf	32,0,b	;volatile
 21507                           
 21508                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 21509  017030  9B24               	bcf	36,5,b	;volatile
 21510                           
 21511                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 21512  017032  9D22               	bcf	34,6,b	;volatile
 21513                           
 21514                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 21515  017034  9D24               	bcf	36,6,b	;volatile
 21516                           
 21517                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 21518  017036  9F21               	bcf	33,7,b	;volatile
 21519                           
 21520                           ; BSR set to: 14
 21521  017038  0012               	return		;funcret
 21522  01703A                     __end_of_INTERRUPT_Initialize:
 21523                           	opt stack 0
 21524                           tblptru	equ	0xFF8
 21525                           tblptrh	equ	0xFF7
 21526                           tblptrl	equ	0xFF6
 21527                           tablat	equ	0xFF5
 21528                           prodh	equ	0xFF4
 21529                           prodl	equ	0xFF3
 21530                           intcon	equ	0xFF2
 21531                           indf0	equ	0xFEF
 21532                           postinc0	equ	0xFEE
 21533                           fsr0h	equ	0xFEA
 21534                           fsr0l	equ	0xFE9
 21535                           wreg	equ	0xFE8
 21536                           indf1	equ	0xFE7
 21537                           postdec1	equ	0xFE5
 21538                           plusw1	equ	0xFE3
 21539                           fsr1h	equ	0xFE2
 21540                           fsr1l	equ	0xFE1
 21541                           indf2	equ	0xFDF
 21542                           postinc2	equ	0xFDE
 21543                           postdec2	equ	0xFDD
 21544                           plusw2	equ	0xFDB
 21545                           fsr2h	equ	0xFDA
 21546                           fsr2l	equ	0xFD9
 21547                           status	equ	0xFD8
 21548                           
 21549 ;; *************** function _HLVD_Initialize *****************
 21550 ;; Defined at:
 21551 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;		None
 21554 ;; Auto vars:     Size  Location     Type
 21555 ;;		None
 21556 ;; Return value:  Size  Location     Type
 21557 ;;                  1    wreg      void 
 21558 ;; Registers used:
 21559 ;;		wreg, status,2
 21560 ;; Tracked objects:
 21561 ;;		On entry : 0/0
 21562 ;;		On exit  : 0/0
 21563 ;;		Unchanged: 0/0
 21564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21569 ;;Total ram usage:        0 bytes
 21570 ;; Hardware stack levels used:    1
 21571 ;; Hardware stack levels required when called:   14
 21572 ;; This function calls:
 21573 ;;		Nothing
 21574 ;; This function is called by:
 21575 ;;		_SYSTEM_Initialize
 21576 ;; This function uses a non-reentrant model
 21577 ;;
 21578                           
 21579                           	psect	text66
 21580  017090                     __ptext66:
 21581                           	opt stack 0
 21582  017090                     _HLVD_Initialize:
 21583                           	opt stack 15
 21584                           
 21585                           ;hlvd.c: 62: HLVDCON1 = 0x08;
 21586                           
 21587                           ; BSR set to: 14
 21588                           ;incstack = 0
 21589  017090  0E08               	movlw	8
 21590  017092  010E               	movlb	14	; () banked
 21591  017094  6FC3               	movwf	195,b	;volatile
 21592                           
 21593                           ;hlvd.c: 64: HLVDCON0 = 0x81;
 21594  017096  0E81               	movlw	129
 21595  017098  6FC2               	movwf	194,b	;volatile
 21596                           
 21597                           ; BSR set to: 14
 21598                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 21599  01709A  9F35               	bcf	53,7,b	;volatile
 21600                           
 21601                           ; BSR set to: 14
 21602                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 21603  01709C  8F2B               	bsf	43,7,b	;volatile
 21604                           
 21605                           ; BSR set to: 14
 21606  01709E  0012               	return		;funcret
 21607  0170A0                     __end_of_HLVD_Initialize:
 21608                           	opt stack 0
 21609                           tblptru	equ	0xFF8
 21610                           tblptrh	equ	0xFF7
 21611                           tblptrl	equ	0xFF6
 21612                           tablat	equ	0xFF5
 21613                           prodh	equ	0xFF4
 21614                           prodl	equ	0xFF3
 21615                           intcon	equ	0xFF2
 21616                           indf0	equ	0xFEF
 21617                           postinc0	equ	0xFEE
 21618                           fsr0h	equ	0xFEA
 21619                           fsr0l	equ	0xFE9
 21620                           wreg	equ	0xFE8
 21621                           indf1	equ	0xFE7
 21622                           postdec1	equ	0xFE5
 21623                           plusw1	equ	0xFE3
 21624                           fsr1h	equ	0xFE2
 21625                           fsr1l	equ	0xFE1
 21626                           indf2	equ	0xFDF
 21627                           postinc2	equ	0xFDE
 21628                           postdec2	equ	0xFDD
 21629                           plusw2	equ	0xFDB
 21630                           fsr2h	equ	0xFDA
 21631                           fsr2l	equ	0xFD9
 21632                           status	equ	0xFD8
 21633                           
 21634 ;; *************** function _FVR_Initialize *****************
 21635 ;; Defined at:
 21636 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21637 ;; Parameters:    Size  Location     Type
 21638 ;;		None
 21639 ;; Auto vars:     Size  Location     Type
 21640 ;;		None
 21641 ;; Return value:  Size  Location     Type
 21642 ;;                  1    wreg      void 
 21643 ;; Registers used:
 21644 ;;		wreg, status,2
 21645 ;; Tracked objects:
 21646 ;;		On entry : 0/0
 21647 ;;		On exit  : 0/0
 21648 ;;		Unchanged: 0/0
 21649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21654 ;;Total ram usage:        0 bytes
 21655 ;; Hardware stack levels used:    1
 21656 ;; Hardware stack levels required when called:   14
 21657 ;; This function calls:
 21658 ;;		Nothing
 21659 ;; This function is called by:
 21660 ;;		_SYSTEM_Initialize
 21661 ;; This function uses a non-reentrant model
 21662 ;;
 21663                           
 21664                           	psect	text67
 21665  017134                     __ptext67:
 21666                           	opt stack 0
 21667  017134                     _FVR_Initialize:
 21668                           	opt stack 15
 21669                           
 21670                           ;fvr.c: 61: FVRCON = 0xA6;
 21671                           
 21672                           ; BSR set to: 14
 21673                           ;incstack = 0
 21674  017134  0EA6               	movlw	166
 21675  017136  010E               	movlb	14	; () banked
 21676  017138  6FC4               	movwf	196,b	;volatile
 21677                           
 21678                           ; BSR set to: 14
 21679  01713A  0012               	return		;funcret
 21680  01713C                     __end_of_FVR_Initialize:
 21681                           	opt stack 0
 21682                           tblptru	equ	0xFF8
 21683                           tblptrh	equ	0xFF7
 21684                           tblptrl	equ	0xFF6
 21685                           tablat	equ	0xFF5
 21686                           prodh	equ	0xFF4
 21687                           prodl	equ	0xFF3
 21688                           intcon	equ	0xFF2
 21689                           indf0	equ	0xFEF
 21690                           postinc0	equ	0xFEE
 21691                           fsr0h	equ	0xFEA
 21692                           fsr0l	equ	0xFE9
 21693                           wreg	equ	0xFE8
 21694                           indf1	equ	0xFE7
 21695                           postdec1	equ	0xFE5
 21696                           plusw1	equ	0xFE3
 21697                           fsr1h	equ	0xFE2
 21698                           fsr1l	equ	0xFE1
 21699                           indf2	equ	0xFDF
 21700                           postinc2	equ	0xFDE
 21701                           postdec2	equ	0xFDD
 21702                           plusw2	equ	0xFDB
 21703                           fsr2h	equ	0xFDA
 21704                           fsr2l	equ	0xFD9
 21705                           status	equ	0xFD8
 21706                           
 21707 ;; *************** function _EUSART2_Initialize *****************
 21708 ;; Defined at:
 21709 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;		None
 21712 ;; Auto vars:     Size  Location     Type
 21713 ;;		None
 21714 ;; Return value:  Size  Location     Type
 21715 ;;                  1    wreg      void 
 21716 ;; Registers used:
 21717 ;;		wreg, status,2, status,0, cstack
 21718 ;; Tracked objects:
 21719 ;;		On entry : 0/0
 21720 ;;		On exit  : 0/0
 21721 ;;		Unchanged: 0/0
 21722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21727 ;;Total ram usage:        0 bytes
 21728 ;; Hardware stack levels used:    1
 21729 ;; Hardware stack levels required when called:   15
 21730 ;; This function calls:
 21731 ;;		_EUSART2_SetRxInterruptHandler
 21732 ;;		_EUSART2_SetTxInterruptHandler
 21733 ;; This function is called by:
 21734 ;;		_SYSTEM_Initialize
 21735 ;; This function uses a non-reentrant model
 21736 ;;
 21737                           
 21738                           	psect	text68
 21739  0163CA                     __ptext68:
 21740                           	opt stack 0
 21741  0163CA                     _EUSART2_Initialize:
 21742                           	opt stack 14
 21743                           
 21744                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 21745                           
 21746                           ; BSR set to: 14
 21747                           ;incstack = 0
 21748  0163CA  827E               	bsf	3966,1,c	;volatile
 21749                           
 21750                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 21751  0163CC  010E               	movlb	14	; () banked
 21752  0163CE  9F2C               	bcf	44,7,b	;volatile
 21753                           
 21754                           ; BSR set to: 14
 21755                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 21756  0163D0  0EF4               	movlw	low _EUSART2_Receive_ISR
 21757  0163D2  0101               	movlb	1	; () banked
 21758  0163D4  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 21759  0163D6  0E58               	movlw	high _EUSART2_Receive_ISR
 21760  0163D8  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 21761  0163DA  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 21762  0163DC  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 21763  0163DE  EC7A  F0B8         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 21764                           
 21765                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 21766  0163E2  010E               	movlb	14	; () banked
 21767  0163E4  9D2C               	bcf	44,6,b	;volatile
 21768                           
 21769                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 21770  0163E6  0E88               	movlw	low _EUSART2_Transmit_ISR
 21771  0163E8  0101               	movlb	1	; () banked
 21772  0163EA  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 21773  0163EC  0E6C               	movlw	high _EUSART2_Transmit_ISR
 21774  0163EE  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 21775  0163F0  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 21776  0163F2  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 21777  0163F4  EC73  F0B8         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 21778                           
 21779                           ;eusart2.c: 91: BAUD2CON = 0x08;
 21780  0163F8  0E08               	movlw	8
 21781  0163FA  010E               	movlb	14	; () banked
 21782  0163FC  6FF7               	movwf	247,b	;volatile
 21783                           
 21784                           ; BSR set to: 14
 21785                           ;eusart2.c: 94: RC2STA = 0x90;
 21786  0163FE  0E90               	movlw	144
 21787  016400  6FF5               	movwf	245,b	;volatile
 21788                           
 21789                           ; BSR set to: 14
 21790                           ;eusart2.c: 97: TX2STA = 0x24;
 21791  016402  0E24               	movlw	36
 21792  016404  6FF6               	movwf	246,b	;volatile
 21793                           
 21794                           ; BSR set to: 14
 21795                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 21796  016406  0E8A               	movlw	138
 21797  016408  6FF3               	movwf	243,b	;volatile
 21798                           
 21799                           ; BSR set to: 14
 21800                           ;eusart2.c: 103: SP2BRGH = 0x00;
 21801  01640A  0E00               	movlw	0
 21802  01640C  6FF4               	movwf	244,b	;volatile
 21803                           
 21804                           ; BSR set to: 14
 21805                           ;eusart2.c: 107: eusart2TxHead = 0;
 21806  01640E  0E00               	movlw	0
 21807  016410  0101               	movlb	1	; () banked
 21808  016412  6FD6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21809                           
 21810                           ; BSR set to: 1
 21811                           ;eusart2.c: 108: eusart2TxTail = 0;
 21812  016414  0E00               	movlw	0
 21813  016416  6FD5               	movwf	_eusart2TxTail& (0+255),b	;volatile
 21814                           
 21815                           ; BSR set to: 1
 21816                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 21817  016418  0E80               	movlw	128
 21818  01641A  6FD4               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 21819                           
 21820                           ; BSR set to: 1
 21821                           ;eusart2.c: 111: eusart2RxHead = 0;
 21822  01641C  0E00               	movlw	0
 21823  01641E  0100               	movlb	0	; () banked
 21824  016420  6FED               	movwf	_eusart2RxHead& (0+255),b	;volatile
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;eusart2.c: 112: eusart2RxTail = 0;
 21828  016422  0E00               	movlw	0
 21829  016424  0101               	movlb	1	; () banked
 21830  016426  6FD3               	movwf	_eusart2RxTail& (0+255),b	;volatile
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;eusart2.c: 113: eusart2RxCount = 0;
 21834  016428  0E00               	movlw	0
 21835  01642A  6FD2               	movwf	_eusart2RxCount& (0+255),b	;volatile
 21836                           
 21837                           ; BSR set to: 1
 21838                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 21839  01642C  010E               	movlb	14	; () banked
 21840  01642E  8F2C               	bsf	44,7,b	;volatile
 21841                           
 21842                           ; BSR set to: 14
 21843                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 21844  016430  927E               	bcf	3966,1,c	;volatile
 21845                           
 21846                           ; BSR set to: 14
 21847  016432  0012               	return		;funcret
 21848  016434                     __end_of_EUSART2_Initialize:
 21849                           	opt stack 0
 21850                           tblptru	equ	0xFF8
 21851                           tblptrh	equ	0xFF7
 21852                           tblptrl	equ	0xFF6
 21853                           tablat	equ	0xFF5
 21854                           prodh	equ	0xFF4
 21855                           prodl	equ	0xFF3
 21856                           intcon	equ	0xFF2
 21857                           indf0	equ	0xFEF
 21858                           postinc0	equ	0xFEE
 21859                           fsr0h	equ	0xFEA
 21860                           fsr0l	equ	0xFE9
 21861                           wreg	equ	0xFE8
 21862                           indf1	equ	0xFE7
 21863                           postdec1	equ	0xFE5
 21864                           plusw1	equ	0xFE3
 21865                           fsr1h	equ	0xFE2
 21866                           fsr1l	equ	0xFE1
 21867                           indf2	equ	0xFDF
 21868                           postinc2	equ	0xFDE
 21869                           postdec2	equ	0xFDD
 21870                           plusw2	equ	0xFDB
 21871                           fsr2h	equ	0xFDA
 21872                           fsr2l	equ	0xFD9
 21873                           status	equ	0xFD8
 21874                           
 21875 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 21876 ;; Defined at:
 21877 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 21878 ;; Parameters:    Size  Location     Type
 21879 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21880 ;;		 -> EUSART2_Transmit_ISR(1), 
 21881 ;; Auto vars:     Size  Location     Type
 21882 ;;		None
 21883 ;; Return value:  Size  Location     Type
 21884 ;;                  1    wreg      void 
 21885 ;; Registers used:
 21886 ;;		wreg, status,2, status,0
 21887 ;; Tracked objects:
 21888 ;;		On entry : 0/0
 21889 ;;		On exit  : 0/0
 21890 ;;		Unchanged: 0/0
 21891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21892 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21895 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21896 ;;Total ram usage:        3 bytes
 21897 ;; Hardware stack levels used:    1
 21898 ;; Hardware stack levels required when called:   14
 21899 ;; This function calls:
 21900 ;;		Nothing
 21901 ;; This function is called by:
 21902 ;;		_EUSART2_Initialize
 21903 ;; This function uses a non-reentrant model
 21904 ;;
 21905                           
 21906                           	psect	text69
 21907  0170E6                     __ptext69:
 21908                           	opt stack 0
 21909  0170E6                     _EUSART2_SetTxInterruptHandler:
 21910                           	opt stack 14
 21911                           
 21912                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 21913                           
 21914                           ; BSR set to: 14
 21915                           ;incstack = 0
 21916  0170E6  C117  F1CA         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 21917  0170EA  C118  F1CB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 21918  0170EE  C119  F1CC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 21919  0170F2  0012               	return		;funcret
 21920  0170F4                     __end_of_EUSART2_SetTxInterruptHandler:
 21921                           	opt stack 0
 21922                           tblptru	equ	0xFF8
 21923                           tblptrh	equ	0xFF7
 21924                           tblptrl	equ	0xFF6
 21925                           tablat	equ	0xFF5
 21926                           prodh	equ	0xFF4
 21927                           prodl	equ	0xFF3
 21928                           intcon	equ	0xFF2
 21929                           indf0	equ	0xFEF
 21930                           postinc0	equ	0xFEE
 21931                           fsr0h	equ	0xFEA
 21932                           fsr0l	equ	0xFE9
 21933                           wreg	equ	0xFE8
 21934                           indf1	equ	0xFE7
 21935                           postdec1	equ	0xFE5
 21936                           plusw1	equ	0xFE3
 21937                           fsr1h	equ	0xFE2
 21938                           fsr1l	equ	0xFE1
 21939                           indf2	equ	0xFDF
 21940                           postinc2	equ	0xFDE
 21941                           postdec2	equ	0xFDD
 21942                           plusw2	equ	0xFDB
 21943                           fsr2h	equ	0xFDA
 21944                           fsr2l	equ	0xFD9
 21945                           status	equ	0xFD8
 21946                           
 21947 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 21948 ;; Defined at:
 21949 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 21950 ;; Parameters:    Size  Location     Type
 21951 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21952 ;;		 -> EUSART2_Receive_ISR(1), 
 21953 ;; Auto vars:     Size  Location     Type
 21954 ;;		None
 21955 ;; Return value:  Size  Location     Type
 21956 ;;                  1    wreg      void 
 21957 ;; Registers used:
 21958 ;;		wreg, status,2, status,0
 21959 ;; Tracked objects:
 21960 ;;		On entry : 0/0
 21961 ;;		On exit  : 0/0
 21962 ;;		Unchanged: 0/0
 21963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21964 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21967 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21968 ;;Total ram usage:        3 bytes
 21969 ;; Hardware stack levels used:    1
 21970 ;; Hardware stack levels required when called:   14
 21971 ;; This function calls:
 21972 ;;		Nothing
 21973 ;; This function is called by:
 21974 ;;		_EUSART2_Initialize
 21975 ;; This function uses a non-reentrant model
 21976 ;;
 21977                           
 21978                           	psect	text70
 21979  0170F4                     __ptext70:
 21980                           	opt stack 0
 21981  0170F4                     _EUSART2_SetRxInterruptHandler:
 21982                           	opt stack 14
 21983                           
 21984                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 21985                           
 21986                           ;incstack = 0
 21987  0170F4  C117  F1C7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 21988  0170F8  C118  F1C8         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 21989  0170FC  C119  F1C9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 21990  017100  0012               	return		;funcret
 21991  017102                     __end_of_EUSART2_SetRxInterruptHandler:
 21992                           	opt stack 0
 21993                           tblptru	equ	0xFF8
 21994                           tblptrh	equ	0xFF7
 21995                           tblptrl	equ	0xFF6
 21996                           tablat	equ	0xFF5
 21997                           prodh	equ	0xFF4
 21998                           prodl	equ	0xFF3
 21999                           intcon	equ	0xFF2
 22000                           indf0	equ	0xFEF
 22001                           postinc0	equ	0xFEE
 22002                           fsr0h	equ	0xFEA
 22003                           fsr0l	equ	0xFE9
 22004                           wreg	equ	0xFE8
 22005                           indf1	equ	0xFE7
 22006                           postdec1	equ	0xFE5
 22007                           plusw1	equ	0xFE3
 22008                           fsr1h	equ	0xFE2
 22009                           fsr1l	equ	0xFE1
 22010                           indf2	equ	0xFDF
 22011                           postinc2	equ	0xFDE
 22012                           postdec2	equ	0xFDD
 22013                           plusw2	equ	0xFDB
 22014                           fsr2h	equ	0xFDA
 22015                           fsr2l	equ	0xFD9
 22016                           status	equ	0xFD8
 22017                           
 22018 ;; *************** function _ADCC_Initialize *****************
 22019 ;; Defined at:
 22020 ;;		line 63 in file "mcc_generated_files/adcc.c"
 22021 ;; Parameters:    Size  Location     Type
 22022 ;;		None
 22023 ;; Auto vars:     Size  Location     Type
 22024 ;;		None
 22025 ;; Return value:  Size  Location     Type
 22026 ;;                  1    wreg      void 
 22027 ;; Registers used:
 22028 ;;		wreg, status,2, status,0, cstack
 22029 ;; Tracked objects:
 22030 ;;		On entry : 0/0
 22031 ;;		On exit  : 0/0
 22032 ;;		Unchanged: 0/0
 22033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22038 ;;Total ram usage:        0 bytes
 22039 ;; Hardware stack levels used:    1
 22040 ;; Hardware stack levels required when called:   15
 22041 ;; This function calls:
 22042 ;;		_ADCC_SetADIInterruptHandler
 22043 ;; This function is called by:
 22044 ;;		_SYSTEM_Initialize
 22045 ;; This function uses a non-reentrant model
 22046 ;;
 22047                           
 22048                           	psect	text71
 22049  01656A                     __ptext71:
 22050                           	opt stack 0
 22051  01656A                     _ADCC_Initialize:
 22052                           	opt stack 14
 22053                           
 22054                           ;adcc.c: 67: ADLTHL = 0x00;
 22055                           
 22056                           ;incstack = 0
 22057  01656A  0E00               	movlw	0
 22058  01656C  6E6A               	movwf	3946,c	;volatile
 22059                           
 22060                           ;adcc.c: 69: ADLTHH = 0x00;
 22061  01656E  0E00               	movlw	0
 22062  016570  6E6B               	movwf	3947,c	;volatile
 22063                           
 22064                           ;adcc.c: 71: ADUTHL = 0x00;
 22065  016572  0E00               	movlw	0
 22066  016574  6E6C               	movwf	3948,c	;volatile
 22067                           
 22068                           ;adcc.c: 73: ADUTHH = 0x00;
 22069  016576  0E00               	movlw	0
 22070  016578  6E6D               	movwf	3949,c	;volatile
 22071                           
 22072                           ;adcc.c: 75: ADSTPTL = 0x00;
 22073  01657A  0E00               	movlw	0
 22074  01657C  6E68               	movwf	3944,c	;volatile
 22075                           
 22076                           ;adcc.c: 77: ADSTPTH = 0x00;
 22077  01657E  0E00               	movlw	0
 22078  016580  6E69               	movwf	3945,c	;volatile
 22079                           
 22080                           ;adcc.c: 79: ADRPT = 0x00;
 22081  016582  0E00               	movlw	0
 22082  016584  6E66               	movwf	3942,c	;volatile
 22083                           
 22084                           ;adcc.c: 81: ADPCH = 0x00;
 22085  016586  0E00               	movlw	0
 22086  016588  010F               	movlb	15	; () banked
 22087  01658A  6F5F               	movwf	95,b	;volatile
 22088                           
 22089                           ;adcc.c: 83: ADCAP = 0x00;
 22090  01658C  0E00               	movlw	0
 22091  01658E  6F5D               	movwf	93,b	;volatile
 22092                           
 22093                           ;adcc.c: 85: ADCON1 = 0x00;
 22094  016590  0E00               	movlw	0
 22095  016592  6F59               	movwf	89,b	;volatile
 22096                           
 22097                           ;adcc.c: 87: ADCON2 = 0x04;
 22098  016594  0E04               	movlw	4
 22099  016596  6F5A               	movwf	90,b	;volatile
 22100                           
 22101                           ;adcc.c: 89: ADCON3 = 0x00;
 22102  016598  0E00               	movlw	0
 22103  01659A  6F5B               	movwf	91,b	;volatile
 22104                           
 22105                           ;adcc.c: 91: ADSTAT = 0x00;
 22106  01659C  0E00               	movlw	0
 22107  01659E  6E65               	movwf	3941,c	;volatile
 22108                           
 22109                           ;adcc.c: 93: ADREF = 0x12;
 22110  0165A0  0E12               	movlw	18
 22111  0165A2  6F58               	movwf	88,b	;volatile
 22112                           
 22113                           ;adcc.c: 95: ADACT = 0x00;
 22114  0165A4  0E00               	movlw	0
 22115  0165A6  6F56               	movwf	86,b	;volatile
 22116                           
 22117                           ;adcc.c: 97: ADCLK = 0x00;
 22118  0165A8  0E00               	movlw	0
 22119  0165AA  6F57               	movwf	87,b	;volatile
 22120                           
 22121                           ;adcc.c: 99: ADCON0 = 0x94;
 22122  0165AC  0E94               	movlw	148
 22123  0165AE  6E60               	movwf	3936,c	;volatile
 22124                           
 22125                           ;adcc.c: 101: ADACQ = 0x00;
 22126  0165B0  0E00               	movlw	0
 22127  0165B2  6F5C               	movwf	92,b	;volatile
 22128                           
 22129                           ; BSR set to: 15
 22130                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 22131  0165B4  010E               	movlb	14	; () banked
 22132  0165B6  9134               	bcf	52,0,b	;volatile
 22133                           
 22134                           ; BSR set to: 14
 22135                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 22136  0165B8  812A               	bsf	42,0,b	;volatile
 22137                           
 22138                           ; BSR set to: 14
 22139                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 22140  0165BA  0E5C               	movlw	low _ADCC_DefaultInterruptHandler
 22141  0165BC  0101               	movlb	1	; () banked
 22142  0165BE  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 22143  0165C0  0E71               	movlw	high _ADCC_DefaultInterruptHandler
 22144  0165C2  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 22145  0165C4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22146  0165C6  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 22147  0165C8  EC81  F0B8         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22148  0165CC  0012               	return		;funcret
 22149  0165CE                     __end_of_ADCC_Initialize:
 22150                           	opt stack 0
 22151                           tblptru	equ	0xFF8
 22152                           tblptrh	equ	0xFF7
 22153                           tblptrl	equ	0xFF6
 22154                           tablat	equ	0xFF5
 22155                           prodh	equ	0xFF4
 22156                           prodl	equ	0xFF3
 22157                           intcon	equ	0xFF2
 22158                           indf0	equ	0xFEF
 22159                           postinc0	equ	0xFEE
 22160                           fsr0h	equ	0xFEA
 22161                           fsr0l	equ	0xFE9
 22162                           wreg	equ	0xFE8
 22163                           indf1	equ	0xFE7
 22164                           postdec1	equ	0xFE5
 22165                           plusw1	equ	0xFE3
 22166                           fsr1h	equ	0xFE2
 22167                           fsr1l	equ	0xFE1
 22168                           indf2	equ	0xFDF
 22169                           postinc2	equ	0xFDE
 22170                           postdec2	equ	0xFDD
 22171                           plusw2	equ	0xFDB
 22172                           fsr2h	equ	0xFDA
 22173                           fsr2l	equ	0xFD9
 22174                           status	equ	0xFD8
 22175                           
 22176 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 22177 ;; Defined at:
 22178 ;;		line 306 in file "mcc_generated_files/adcc.c"
 22179 ;; Parameters:    Size  Location     Type
 22180 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22181 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 22182 ;; Auto vars:     Size  Location     Type
 22183 ;;		None
 22184 ;; Return value:  Size  Location     Type
 22185 ;;                  1    wreg      void 
 22186 ;; Registers used:
 22187 ;;		wreg, status,2, status,0
 22188 ;; Tracked objects:
 22189 ;;		On entry : 0/0
 22190 ;;		On exit  : 0/0
 22191 ;;		Unchanged: 0/0
 22192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22193 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22196 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22197 ;;Total ram usage:        3 bytes
 22198 ;; Hardware stack levels used:    1
 22199 ;; Hardware stack levels required when called:   14
 22200 ;; This function calls:
 22201 ;;		Nothing
 22202 ;; This function is called by:
 22203 ;;		_ADCC_Initialize
 22204 ;;		_main
 22205 ;; This function uses a non-reentrant model
 22206 ;;
 22207                           
 22208                           	psect	text72
 22209  017102                     __ptext72:
 22210                           	opt stack 0
 22211  017102                     _ADCC_SetADIInterruptHandler:
 22212                           	opt stack 14
 22213                           
 22214                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 22215                           
 22216                           ;incstack = 0
 22217  017102  C117  F0E6         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 22218  017106  C118  F0E7         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 22219  01710A  C119  F0E8         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 22220  01710E  0012               	return		;funcret
 22221  017110                     __end_of_ADCC_SetADIInterruptHandler:
 22222                           	opt stack 0
 22223                           tblptru	equ	0xFF8
 22224                           tblptrh	equ	0xFF7
 22225                           tblptrl	equ	0xFF6
 22226                           tablat	equ	0xFF5
 22227                           prodh	equ	0xFF4
 22228                           prodl	equ	0xFF3
 22229                           intcon	equ	0xFF2
 22230                           indf0	equ	0xFEF
 22231                           postinc0	equ	0xFEE
 22232                           fsr0h	equ	0xFEA
 22233                           fsr0l	equ	0xFE9
 22234                           wreg	equ	0xFE8
 22235                           indf1	equ	0xFE7
 22236                           postdec1	equ	0xFE5
 22237                           plusw1	equ	0xFE3
 22238                           fsr1h	equ	0xFE2
 22239                           fsr1l	equ	0xFE1
 22240                           indf2	equ	0xFDF
 22241                           postinc2	equ	0xFDE
 22242                           postdec2	equ	0xFDD
 22243                           plusw2	equ	0xFDB
 22244                           fsr2h	equ	0xFDA
 22245                           fsr2l	equ	0xFD9
 22246                           status	equ	0xFD8
 22247                           
 22248 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 22249 ;; Defined at:
 22250 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 22251 ;; Parameters:    Size  Location     Type
 22252 ;;		None
 22253 ;; Auto vars:     Size  Location     Type
 22254 ;;		None
 22255 ;; Return value:  Size  Location     Type
 22256 ;;                  1    wreg      void 
 22257 ;; Registers used:
 22258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22259 ;; Tracked objects:
 22260 ;;		On entry : 0/0
 22261 ;;		On exit  : 0/0
 22262 ;;		Unchanged: 0/0
 22263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22266 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22267 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22268 ;;Total ram usage:       21 bytes
 22269 ;; Hardware stack levels used:    1
 22270 ;; Hardware stack levels required when called:   13
 22271 ;; This function calls:
 22272 ;;		Absolute function
 22273 ;;		_EUSART2_Transmit_ISR
 22274 ;;		_HLVD_ISR
 22275 ;;		_TMR6_ISR
 22276 ;;		_TMR7_ISR
 22277 ;; This function is called by:
 22278 ;;		Interrupt level 1
 22279 ;; This function uses a non-reentrant model
 22280 ;;
 22281                           
 22282                           	psect	intcodelo
 22283  000018                     __pintcodelo:
 22284                           	opt stack 0
 22285  000018                     _INTERRUPT_InterruptManagerLow:
 22286                           	opt stack 9
 22287                           
 22288                           ;incstack = 0
 22289  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 22290  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 22291  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 22292  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 22293  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 22294  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 22295  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 22296  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 22297  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 22298  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 22299  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 22300  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 22301  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 22302  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 22303  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 22304  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 22305  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 22306  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 22307  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 22308  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 22309  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 22310  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 22311                           
 22312                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 22313  00006E  010E               	movlb	14	; () banked
 22314  000070  BB2E               	btfsc	46,5,b	;volatile
 22315                           
 22316                           ; BSR set to: 14
 22317  000072  AB38               	btfss	56,5,b	;volatile
 22318  000074  D003               	goto	i1l223
 22319                           
 22320                           ; BSR set to: 14
 22321                           ;interrupt_manager.c: 108: {
 22322                           ;interrupt_manager.c: 109: TMR6_ISR();
 22323  000076  EC08  F0B7         	call	_TMR6_ISR	;wreg free
 22324                           
 22325                           ;interrupt_manager.c: 110: }
 22326  00007A  D01B               	goto	i1l229
 22327  00007C                     i1l223:
 22328                           
 22329                           ; BSR set to: 14
 22330                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 22331  00007C  BD2C               	btfsc	44,6,b	;volatile
 22332                           
 22333                           ; BSR set to: 14
 22334  00007E  AD36               	btfss	54,6,b	;volatile
 22335  000080  D00D               	goto	i1l225
 22336                           
 22337                           ; BSR set to: 14
 22338                           ;interrupt_manager.c: 112: {
 22339                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 22340  000082  D801               	call	i1u1981_28
 22341  000084  D016               	goto	i1l229
 22342  000086                     i1u1981_28:
 22343  000086  0005               	push	
 22344  000088  6EFA               	movwf	pclath,c
 22345  00008A  0101               	movlb	1	; () banked
 22346  00008C  51CA               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 22347  00008E  6EFD               	movwf	tosl,c
 22348  000090  51CB               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 22349  000092  6EFE               	movwf	tosh,c
 22350  000094  51CC               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 22351  000096  6EFF               	movwf	tosu,c
 22352  000098  50FA               	movf	pclath,w,c
 22353  00009A  0012               	return		;indir
 22354  00009C                     i1l225:
 22355                           
 22356                           ; BSR set to: 14
 22357                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 22358  00009C  BD2E               	btfsc	46,6,b	;volatile
 22359                           
 22360                           ; BSR set to: 14
 22361  00009E  AD38               	btfss	56,6,b	;volatile
 22362  0000A0  D003               	goto	i1l227
 22363                           
 22364                           ; BSR set to: 14
 22365                           ;interrupt_manager.c: 116: {
 22366                           ;interrupt_manager.c: 117: TMR7_ISR();
 22367  0000A2  EC5F  F0B6         	call	_TMR7_ISR	;wreg free
 22368                           
 22369                           ;interrupt_manager.c: 118: }
 22370  0000A6  D005               	goto	i1l229
 22371  0000A8                     i1l227:
 22372                           
 22373                           ; BSR set to: 14
 22374                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 22375  0000A8  BF2B               	btfsc	43,7,b	;volatile
 22376                           
 22377                           ; BSR set to: 14
 22378  0000AA  AF35               	btfss	53,7,b	;volatile
 22379  0000AC  D002               	goto	i1l229
 22380                           
 22381                           ; BSR set to: 14
 22382                           ;interrupt_manager.c: 120: {
 22383                           ;interrupt_manager.c: 121: HLVD_ISR();
 22384  0000AE  EC9E  F0B8         	call	_HLVD_ISR	;wreg free
 22385  0000B2                     i1l229:
 22386                           
 22387                           ;interrupt_manager.c: 123: else
 22388                           ;interrupt_manager.c: 124: {
 22389  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 22390  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 22391  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 22392  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 22393  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 22394  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 22395  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 22396  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 22397  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 22398  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 22399  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 22400  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 22401  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 22402  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 22403  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 22404  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 22405  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 22406  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 22407  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 22408  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 22409  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 22410  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 22411  000108  0010               	retfie	
 22412  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 22413                           	opt stack 0
 22414                           tosu	equ	0xFFF
 22415                           tosh	equ	0xFFE
 22416                           tosl	equ	0xFFD
 22417                           pclatu	equ	0xFFB
 22418                           pclath	equ	0xFFA
 22419                           tblptru	equ	0xFF8
 22420                           tblptrh	equ	0xFF7
 22421                           tblptrl	equ	0xFF6
 22422                           tablat	equ	0xFF5
 22423                           prodh	equ	0xFF4
 22424                           prodl	equ	0xFF3
 22425                           intcon	equ	0xFF2
 22426                           indf0	equ	0xFEF
 22427                           postinc0	equ	0xFEE
 22428                           fsr0h	equ	0xFEA
 22429                           fsr0l	equ	0xFE9
 22430                           wreg	equ	0xFE8
 22431                           indf1	equ	0xFE7
 22432                           postdec1	equ	0xFE5
 22433                           plusw1	equ	0xFE3
 22434                           fsr1h	equ	0xFE2
 22435                           fsr1l	equ	0xFE1
 22436                           bsr	equ	0xFE0
 22437                           indf2	equ	0xFDF
 22438                           postinc2	equ	0xFDE
 22439                           postdec2	equ	0xFDD
 22440                           plusw2	equ	0xFDB
 22441                           fsr2h	equ	0xFDA
 22442                           fsr2l	equ	0xFD9
 22443                           status	equ	0xFD8
 22444                           
 22445 ;; *************** function _TMR7_ISR *****************
 22446 ;; Defined at:
 22447 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 22448 ;; Parameters:    Size  Location     Type
 22449 ;;		None
 22450 ;; Auto vars:     Size  Location     Type
 22451 ;;		None
 22452 ;; Return value:  Size  Location     Type
 22453 ;;                  1    wreg      void 
 22454 ;; Registers used:
 22455 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 22456 ;; Tracked objects:
 22457 ;;		On entry : 0/0
 22458 ;;		On exit  : 0/0
 22459 ;;		Unchanged: 0/0
 22460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22465 ;;Total ram usage:        0 bytes
 22466 ;; Hardware stack levels used:    1
 22467 ;; Hardware stack levels required when called:   12
 22468 ;; This function calls:
 22469 ;;		Absolute function
 22470 ;;		_TMR7_DefaultInterruptHandler
 22471 ;;		_TMR7_WriteTimer
 22472 ;;		_acquisitionTimerCallback
 22473 ;; This function is called by:
 22474 ;;		_INTERRUPT_InterruptManagerLow
 22475 ;; This function uses a non-reentrant model
 22476 ;;
 22477                           
 22478                           	psect	text74
 22479  016CBE                     __ptext74:
 22480                           	opt stack 0
 22481  016CBE                     _TMR7_ISR:
 22482                           	opt stack 9
 22483                           
 22484                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 22485                           
 22486                           ;incstack = 0
 22487  016CBE  010E               	movlb	14	; () banked
 22488  016CC0  9D38               	bcf	56,6,b	;volatile
 22489                           
 22490                           ; BSR set to: 14
 22491                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 22492  016CC2  C1CF  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 22493  016CC6  C1D0  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 22494  016CCA  EC56  F0B7         	call	_TMR7_WriteTimer	;wreg free
 22495                           
 22496                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 22497  016CCE  0101               	movlb	1	; () banked
 22498  016CD0  51C1               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22499  016CD2  11C2               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22500  016CD4  11C3               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22501  016CD6  B4D8               	btfsc	status,2,c
 22502  016CD8  0012               	return	
 22503                           
 22504                           ; BSR set to: 1
 22505                           ;tmr7.c: 172: {
 22506                           ;tmr7.c: 173: TMR7_InterruptHandler();
 22507  016CDA  D801               	call	i1u1963_28
 22508  016CDC  0012               	return	
 22509  016CDE                     i1u1963_28:
 22510  016CDE  0005               	push	
 22511  016CE0  6EFA               	movwf	pclath,c
 22512  016CE2  51C1               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22513  016CE4  6EFD               	movwf	tosl,c
 22514  016CE6  51C2               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22515  016CE8  6EFE               	movwf	tosh,c
 22516  016CEA  51C3               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22517  016CEC  6EFF               	movwf	tosu,c
 22518  016CEE  50FA               	movf	pclath,w,c
 22519  016CF0  0012               	return		;indir
 22520  016CF2                     __end_of_TMR7_ISR:
 22521                           	opt stack 0
 22522                           tosu	equ	0xFFF
 22523                           tosh	equ	0xFFE
 22524                           tosl	equ	0xFFD
 22525                           pclatu	equ	0xFFB
 22526                           pclath	equ	0xFFA
 22527                           tblptru	equ	0xFF8
 22528                           tblptrh	equ	0xFF7
 22529                           tblptrl	equ	0xFF6
 22530                           tablat	equ	0xFF5
 22531                           prodh	equ	0xFF4
 22532                           prodl	equ	0xFF3
 22533                           intcon	equ	0xFF2
 22534                           indf0	equ	0xFEF
 22535                           postinc0	equ	0xFEE
 22536                           fsr0h	equ	0xFEA
 22537                           fsr0l	equ	0xFE9
 22538                           wreg	equ	0xFE8
 22539                           indf1	equ	0xFE7
 22540                           postdec1	equ	0xFE5
 22541                           plusw1	equ	0xFE3
 22542                           fsr1h	equ	0xFE2
 22543                           fsr1l	equ	0xFE1
 22544                           bsr	equ	0xFE0
 22545                           indf2	equ	0xFDF
 22546                           postinc2	equ	0xFDE
 22547                           postdec2	equ	0xFDD
 22548                           plusw2	equ	0xFDB
 22549                           fsr2h	equ	0xFDA
 22550                           fsr2l	equ	0xFD9
 22551                           status	equ	0xFD8
 22552                           
 22553 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 22554 ;; Defined at:
 22555 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 22556 ;; Parameters:    Size  Location     Type
 22557 ;;		None
 22558 ;; Auto vars:     Size  Location     Type
 22559 ;;		None
 22560 ;; Return value:  Size  Location     Type
 22561 ;;                  1    wreg      void 
 22562 ;; Registers used:
 22563 ;;		None
 22564 ;; Tracked objects:
 22565 ;;		On entry : 0/0
 22566 ;;		On exit  : 0/0
 22567 ;;		Unchanged: 0/0
 22568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22573 ;;Total ram usage:        0 bytes
 22574 ;; Hardware stack levels used:    1
 22575 ;; Hardware stack levels required when called:   10
 22576 ;; This function calls:
 22577 ;;		Nothing
 22578 ;; This function is called by:
 22579 ;;		_TMR7_Initialize
 22580 ;;		_TMR7_ISR
 22581 ;; This function uses a non-reentrant model
 22582 ;;
 22583                           
 22584                           	psect	text75
 22585  017156                     __ptext75:
 22586                           	opt stack 0
 22587  017156                     _TMR7_DefaultInterruptHandler:
 22588                           	opt stack 10
 22589                           
 22590                           ;incstack = 0
 22591  017156  0012               	return		;funcret
 22592  017158                     __end_of_TMR7_DefaultInterruptHandler:
 22593                           	opt stack 0
 22594                           tosu	equ	0xFFF
 22595                           tosh	equ	0xFFE
 22596                           tosl	equ	0xFFD
 22597                           pclatu	equ	0xFFB
 22598                           pclath	equ	0xFFA
 22599                           tblptru	equ	0xFF8
 22600                           tblptrh	equ	0xFF7
 22601                           tblptrl	equ	0xFF6
 22602                           tablat	equ	0xFF5
 22603                           prodh	equ	0xFF4
 22604                           prodl	equ	0xFF3
 22605                           intcon	equ	0xFF2
 22606                           indf0	equ	0xFEF
 22607                           postinc0	equ	0xFEE
 22608                           fsr0h	equ	0xFEA
 22609                           fsr0l	equ	0xFE9
 22610                           wreg	equ	0xFE8
 22611                           indf1	equ	0xFE7
 22612                           postdec1	equ	0xFE5
 22613                           plusw1	equ	0xFE3
 22614                           fsr1h	equ	0xFE2
 22615                           fsr1l	equ	0xFE1
 22616                           bsr	equ	0xFE0
 22617                           indf2	equ	0xFDF
 22618                           postinc2	equ	0xFDE
 22619                           postdec2	equ	0xFDD
 22620                           plusw2	equ	0xFDB
 22621                           fsr2h	equ	0xFDA
 22622                           fsr2l	equ	0xFD9
 22623                           status	equ	0xFD8
 22624                           
 22625 ;; *************** function _acquisitionTimerCallback *****************
 22626 ;; Defined at:
 22627 ;;		line 332 in file "main.c"
 22628 ;; Parameters:    Size  Location     Type
 22629 ;;		None
 22630 ;; Auto vars:     Size  Location     Type
 22631 ;;		None
 22632 ;; Return value:  Size  Location     Type
 22633 ;;                  1    wreg      void 
 22634 ;; Registers used:
 22635 ;;		wreg, status,2, cstack
 22636 ;; Tracked objects:
 22637 ;;		On entry : 0/0
 22638 ;;		On exit  : 0/0
 22639 ;;		Unchanged: 0/0
 22640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22645 ;;Total ram usage:        0 bytes
 22646 ;; Hardware stack levels used:    1
 22647 ;; Hardware stack levels required when called:   11
 22648 ;; This function calls:
 22649 ;;		_ADCC_IsConversionDone
 22650 ;;		_ADCC_StartConversion
 22651 ;;		_TMR7_StopTimer
 22652 ;; This function is called by:
 22653 ;;		_main
 22654 ;;		_TMR7_ISR
 22655 ;; This function uses a non-reentrant model
 22656 ;;
 22657                           
 22658                           	psect	text76
 22659  015782                     __ptext76:
 22660                           	opt stack 0
 22661  015782                     _acquisitionTimerCallback:
 22662                           	opt stack 9
 22663                           
 22664                           ;main.c: 335: ADCC_StartConversion(channel_VSS);
 22665                           
 22666                           ;incstack = 0
 22667  015782  0E3C               	movlw	60
 22668  015784  EC88  F0B8         	call	_ADCC_StartConversion
 22669                           
 22670                           ;main.c: 338: while(!ADCC_IsConversionDone()) {
 22671  015788  D007               	goto	i1l932
 22672  01578A                     i1l931:
 22673                           
 22674                           ;main.c: 340: if (adc_error_flag) {
 22675  01578A  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22676  01578C  D005               	goto	i1l932
 22677                           
 22678                           ;main.c: 343: PIE5bits.TMR7IE = 0;
 22679  01578E  010E               	movlb	14	; () banked
 22680  015790  9D2E               	bcf	46,6,b	;volatile
 22681                           
 22682                           ; BSR set to: 14
 22683                           ;main.c: 344: TMR7_StopTimer();
 22684  015792  ECA5  F0B8         	call	_TMR7_StopTimer	;wreg free
 22685                           
 22686                           ;main.c: 345: return;
 22687  015796  0012               	return	
 22688  015798                     i1l932:
 22689  015798  EC8F  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22690  01579C  0900               	iorlw	0
 22691  01579E  B4D8               	btfsc	status,2,c
 22692  0157A0  D7F4               	goto	i1l931
 22693                           
 22694                           ;main.c: 347: }
 22695                           ;main.c: 349: }
 22696                           ;main.c: 352: ADCC_StartConversion(channel_FVR_buf1);
 22697  0157A2  0E3F               	movlw	63
 22698  0157A4  EC88  F0B8         	call	_ADCC_StartConversion
 22699                           
 22700                           ;main.c: 355: while(!ADCC_IsConversionDone()) {
 22701  0157A8  D007               	goto	i1l937
 22702  0157AA                     i1l936:
 22703                           
 22704                           ;main.c: 357: if (adc_error_flag) {
 22705  0157AA  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22706  0157AC  D005               	goto	i1l937
 22707                           
 22708                           ;main.c: 360: PIE5bits.TMR7IE = 0;
 22709  0157AE  010E               	movlb	14	; () banked
 22710  0157B0  9D2E               	bcf	46,6,b	;volatile
 22711                           
 22712                           ; BSR set to: 14
 22713                           ;main.c: 361: TMR7_StopTimer();
 22714  0157B2  ECA5  F0B8         	call	_TMR7_StopTimer	;wreg free
 22715                           
 22716                           ;main.c: 362: return;
 22717  0157B6  0012               	return	
 22718  0157B8                     i1l937:
 22719  0157B8  EC8F  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22720  0157BC  0900               	iorlw	0
 22721  0157BE  B4D8               	btfsc	status,2,c
 22722  0157C0  D7F4               	goto	i1l936
 22723                           
 22724                           ;main.c: 364: }
 22725                           ;main.c: 366: }
 22726                           ;main.c: 369: ADCC_StartConversion(POS3P3_ADC);
 22727  0157C2  0E22               	movlw	34
 22728  0157C4  EC88  F0B8         	call	_ADCC_StartConversion
 22729                           
 22730                           ;main.c: 372: while(!ADCC_IsConversionDone()) {
 22731  0157C8  D007               	goto	i1l941
 22732  0157CA                     i1l940:
 22733                           
 22734                           ;main.c: 374: if (adc_error_flag) {
 22735  0157CA  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22736  0157CC  D005               	goto	i1l941
 22737                           
 22738                           ;main.c: 377: PIE5bits.TMR7IE = 0;
 22739  0157CE  010E               	movlb	14	; () banked
 22740  0157D0  9D2E               	bcf	46,6,b	;volatile
 22741                           
 22742                           ; BSR set to: 14
 22743                           ;main.c: 378: TMR7_StopTimer();
 22744  0157D2  ECA5  F0B8         	call	_TMR7_StopTimer	;wreg free
 22745                           
 22746                           ;main.c: 379: return;
 22747  0157D6  0012               	return	
 22748  0157D8                     i1l941:
 22749  0157D8  EC8F  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22750  0157DC  0900               	iorlw	0
 22751  0157DE  B4D8               	btfsc	status,2,c
 22752  0157E0  D7F4               	goto	i1l940
 22753                           
 22754                           ;main.c: 381: }
 22755                           ;main.c: 383: }
 22756                           ;main.c: 386: ADCC_StartConversion(ISNS_ADC);
 22757  0157E2  0E00               	movlw	0
 22758  0157E4  EC88  F0B8         	call	_ADCC_StartConversion
 22759                           
 22760                           ;main.c: 389: while(!ADCC_IsConversionDone()) {
 22761  0157E8  D007               	goto	i1l945
 22762  0157EA                     i1l944:
 22763                           
 22764                           ;main.c: 391: if (adc_error_flag) {
 22765  0157EA  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22766  0157EC  D005               	goto	i1l945
 22767                           
 22768                           ;main.c: 394: PIE5bits.TMR7IE = 0;
 22769  0157EE  010E               	movlb	14	; () banked
 22770  0157F0  9D2E               	bcf	46,6,b	;volatile
 22771                           
 22772                           ; BSR set to: 14
 22773                           ;main.c: 395: TMR7_StopTimer();
 22774  0157F2  ECA5  F0B8         	call	_TMR7_StopTimer	;wreg free
 22775                           
 22776                           ;main.c: 396: return;
 22777  0157F6  0012               	return	
 22778  0157F8                     i1l945:
 22779  0157F8  EC8F  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22780  0157FC  0900               	iorlw	0
 22781  0157FE  B4D8               	btfsc	status,2,c
 22782  015800  D7F4               	goto	i1l944
 22783                           
 22784                           ;main.c: 398: }
 22785                           ;main.c: 400: }
 22786                           ;main.c: 403: ADCC_StartConversion(POS12_ADC);
 22787  015802  0E04               	movlw	4
 22788  015804  EC88  F0B8         	call	_ADCC_StartConversion
 22789                           
 22790                           ;main.c: 406: while(!ADCC_IsConversionDone()) {
 22791  015808  D007               	goto	i1l949
 22792  01580A                     i1l948:
 22793                           
 22794                           ;main.c: 408: if (adc_error_flag) {
 22795  01580A  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22796  01580C  D005               	goto	i1l949
 22797                           
 22798                           ;main.c: 411: PIE5bits.TMR7IE = 0;
 22799  01580E  010E               	movlb	14	; () banked
 22800  015810  9D2E               	bcf	46,6,b	;volatile
 22801                           
 22802                           ; BSR set to: 14
 22803                           ;main.c: 412: TMR7_StopTimer();
 22804  015812  ECA5  F0B8         	call	_TMR7_StopTimer	;wreg free
 22805                           
 22806                           ;main.c: 413: return;
 22807  015816  0012               	return	
 22808  015818                     i1l949:
 22809  015818  EC8F  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22810  01581C  0900               	iorlw	0
 22811  01581E  B4D8               	btfsc	status,2,c
 22812  015820  D7F4               	goto	i1l948
 22813                           
 22814                           ;main.c: 415: }
 22815                           ;main.c: 417: }
 22816                           ;main.c: 420: ADCC_StartConversion(channel_Temp);
 22817  015822  0E3D               	movlw	61
 22818  015824  EC88  F0B8         	call	_ADCC_StartConversion
 22819                           
 22820                           ;main.c: 423: while(!ADCC_IsConversionDone()) {
 22821  015828  D007               	goto	i1l953
 22822  01582A                     i1l952:
 22823                           
 22824                           ;main.c: 425: if (adc_error_flag) {
 22825  01582A  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22826  01582C  D005               	goto	i1l953
 22827                           
 22828                           ;main.c: 428: PIE5bits.TMR7IE == 0;
 22829  01582E  010E               	movlb	14	; () banked
 22830  015830  512E               	movf	46,w,b	;volatile
 22831                           
 22832                           ; BSR set to: 14
 22833                           ;main.c: 429: TMR7_StopTimer();
 22834  015832  ECA5  F0B8         	call	_TMR7_StopTimer	;wreg free
 22835                           
 22836                           ;main.c: 430: return;
 22837  015836  0012               	return	
 22838  015838                     i1l953:
 22839  015838  EC8F  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22840  01583C  0900               	iorlw	0
 22841  01583E  A4D8               	btfss	status,2,c
 22842  015840  0012               	return	
 22843  015842  D7F3               	goto	i1l952
 22844  015844                     __end_of_acquisitionTimerCallback:
 22845                           	opt stack 0
 22846                           tosu	equ	0xFFF
 22847                           tosh	equ	0xFFE
 22848                           tosl	equ	0xFFD
 22849                           pclatu	equ	0xFFB
 22850                           pclath	equ	0xFFA
 22851                           tblptru	equ	0xFF8
 22852                           tblptrh	equ	0xFF7
 22853                           tblptrl	equ	0xFF6
 22854                           tablat	equ	0xFF5
 22855                           prodh	equ	0xFF4
 22856                           prodl	equ	0xFF3
 22857                           intcon	equ	0xFF2
 22858                           indf0	equ	0xFEF
 22859                           postinc0	equ	0xFEE
 22860                           fsr0h	equ	0xFEA
 22861                           fsr0l	equ	0xFE9
 22862                           wreg	equ	0xFE8
 22863                           indf1	equ	0xFE7
 22864                           postdec1	equ	0xFE5
 22865                           plusw1	equ	0xFE3
 22866                           fsr1h	equ	0xFE2
 22867                           fsr1l	equ	0xFE1
 22868                           bsr	equ	0xFE0
 22869                           indf2	equ	0xFDF
 22870                           postinc2	equ	0xFDE
 22871                           postdec2	equ	0xFDD
 22872                           plusw2	equ	0xFDB
 22873                           fsr2h	equ	0xFDA
 22874                           fsr2l	equ	0xFD9
 22875                           status	equ	0xFD8
 22876                           
 22877 ;; *************** function _TMR7_StopTimer *****************
 22878 ;; Defined at:
 22879 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 22880 ;; Parameters:    Size  Location     Type
 22881 ;;		None
 22882 ;; Auto vars:     Size  Location     Type
 22883 ;;		None
 22884 ;; Return value:  Size  Location     Type
 22885 ;;                  1    wreg      void 
 22886 ;; Registers used:
 22887 ;;		None
 22888 ;; Tracked objects:
 22889 ;;		On entry : 0/0
 22890 ;;		On exit  : 0/0
 22891 ;;		Unchanged: 0/0
 22892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22897 ;;Total ram usage:        0 bytes
 22898 ;; Hardware stack levels used:    1
 22899 ;; Hardware stack levels required when called:   10
 22900 ;; This function calls:
 22901 ;;		Nothing
 22902 ;; This function is called by:
 22903 ;;		_acquisitionTimerCallback
 22904 ;; This function uses a non-reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text77
 22908  01714A                     __ptext77:
 22909                           	opt stack 0
 22910  01714A                     _TMR7_StopTimer:
 22911                           	opt stack 9
 22912                           
 22913                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 22914                           
 22915                           ;incstack = 0
 22916  01714A  010F               	movlb	15	; () banked
 22917  01714C  9130               	bcf	48,0,b	;volatile
 22918                           
 22919                           ; BSR set to: 15
 22920  01714E  0012               	return		;funcret
 22921  017150                     __end_of_TMR7_StopTimer:
 22922                           	opt stack 0
 22923                           tosu	equ	0xFFF
 22924                           tosh	equ	0xFFE
 22925                           tosl	equ	0xFFD
 22926                           pclatu	equ	0xFFB
 22927                           pclath	equ	0xFFA
 22928                           tblptru	equ	0xFF8
 22929                           tblptrh	equ	0xFF7
 22930                           tblptrl	equ	0xFF6
 22931                           tablat	equ	0xFF5
 22932                           prodh	equ	0xFF4
 22933                           prodl	equ	0xFF3
 22934                           intcon	equ	0xFF2
 22935                           indf0	equ	0xFEF
 22936                           postinc0	equ	0xFEE
 22937                           fsr0h	equ	0xFEA
 22938                           fsr0l	equ	0xFE9
 22939                           wreg	equ	0xFE8
 22940                           indf1	equ	0xFE7
 22941                           postdec1	equ	0xFE5
 22942                           plusw1	equ	0xFE3
 22943                           fsr1h	equ	0xFE2
 22944                           fsr1l	equ	0xFE1
 22945                           bsr	equ	0xFE0
 22946                           indf2	equ	0xFDF
 22947                           postinc2	equ	0xFDE
 22948                           postdec2	equ	0xFDD
 22949                           plusw2	equ	0xFDB
 22950                           fsr2h	equ	0xFDA
 22951                           fsr2l	equ	0xFD9
 22952                           status	equ	0xFD8
 22953                           
 22954 ;; *************** function _ADCC_StartConversion *****************
 22955 ;; Defined at:
 22956 ;;		line 112 in file "mcc_generated_files/adcc.c"
 22957 ;; Parameters:    Size  Location     Type
 22958 ;;  channel         1    wreg     enum E17310
 22959 ;; Auto vars:     Size  Location     Type
 22960 ;;  channel         1    0[BANK1 ] enum E17310
 22961 ;; Return value:  Size  Location     Type
 22962 ;;                  1    wreg      void 
 22963 ;; Registers used:
 22964 ;;		wreg
 22965 ;; Tracked objects:
 22966 ;;		On entry : 0/0
 22967 ;;		On exit  : 0/0
 22968 ;;		Unchanged: 0/0
 22969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22971 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22973 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22974 ;;Total ram usage:        1 bytes
 22975 ;; Hardware stack levels used:    1
 22976 ;; Hardware stack levels required when called:   10
 22977 ;; This function calls:
 22978 ;;		Nothing
 22979 ;; This function is called by:
 22980 ;;		_acquisitionTimerCallback
 22981 ;; This function uses a non-reentrant model
 22982 ;;
 22983                           
 22984                           	psect	text78
 22985  017110                     __ptext78:
 22986                           	opt stack 0
 22987  017110                     _ADCC_StartConversion:
 22988                           	opt stack 9
 22989                           
 22990                           ; BSR set to: 15
 22991                           ;incstack = 0
 22992                           ;ADCC_StartConversion@channel stored from wreg
 22993  017110  0101               	movlb	1	; () banked
 22994  017112  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 22995                           
 22996                           ;adcc.c: 115: ADPCH = channel;
 22997  017114  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 22998                           
 22999                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 23000  017118  8E60               	bsf	3936,7,c	;volatile
 23001                           
 23002                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 23003  01711A  8060               	bsf	3936,0,c	;volatile
 23004  01711C  0012               	return		;funcret
 23005  01711E                     __end_of_ADCC_StartConversion:
 23006                           	opt stack 0
 23007                           tosu	equ	0xFFF
 23008                           tosh	equ	0xFFE
 23009                           tosl	equ	0xFFD
 23010                           pclatu	equ	0xFFB
 23011                           pclath	equ	0xFFA
 23012                           tblptru	equ	0xFF8
 23013                           tblptrh	equ	0xFF7
 23014                           tblptrl	equ	0xFF6
 23015                           tablat	equ	0xFF5
 23016                           prodh	equ	0xFF4
 23017                           prodl	equ	0xFF3
 23018                           intcon	equ	0xFF2
 23019                           indf0	equ	0xFEF
 23020                           postinc0	equ	0xFEE
 23021                           fsr0h	equ	0xFEA
 23022                           fsr0l	equ	0xFE9
 23023                           wreg	equ	0xFE8
 23024                           indf1	equ	0xFE7
 23025                           postdec1	equ	0xFE5
 23026                           plusw1	equ	0xFE3
 23027                           fsr1h	equ	0xFE2
 23028                           fsr1l	equ	0xFE1
 23029                           bsr	equ	0xFE0
 23030                           indf2	equ	0xFDF
 23031                           postinc2	equ	0xFDE
 23032                           postdec2	equ	0xFDD
 23033                           plusw2	equ	0xFDB
 23034                           fsr2h	equ	0xFDA
 23035                           fsr2l	equ	0xFD9
 23036                           status	equ	0xFD8
 23037                           
 23038 ;; *************** function _ADCC_IsConversionDone *****************
 23039 ;; Defined at:
 23040 ;;		line 124 in file "mcc_generated_files/adcc.c"
 23041 ;; Parameters:    Size  Location     Type
 23042 ;;		None
 23043 ;; Auto vars:     Size  Location     Type
 23044 ;;		None
 23045 ;; Return value:  Size  Location     Type
 23046 ;;                  1    wreg      unsigned char 
 23047 ;; Registers used:
 23048 ;;		wreg
 23049 ;; Tracked objects:
 23050 ;;		On entry : 0/0
 23051 ;;		On exit  : 0/0
 23052 ;;		Unchanged: 0/0
 23053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23058 ;;Total ram usage:        0 bytes
 23059 ;; Hardware stack levels used:    1
 23060 ;; Hardware stack levels required when called:   10
 23061 ;; This function calls:
 23062 ;;		Nothing
 23063 ;; This function is called by:
 23064 ;;		_acquisitionTimerCallback
 23065 ;; This function uses a non-reentrant model
 23066 ;;
 23067                           
 23068                           	psect	text79
 23069  01711E                     __ptext79:
 23070                           	opt stack 0
 23071  01711E                     _ADCC_IsConversionDone:
 23072                           	opt stack 9
 23073                           
 23074                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 23075                           
 23076                           ;incstack = 0
 23077  01711E  B060               	btfsc	3936,0,c	;volatile
 23078  017120  D002               	goto	i1u816_20
 23079  017122  0E01               	movlw	1
 23080  017124  0012               	return	
 23081  017126                     i1u816_20:
 23082  017126  0E00               	movlw	0
 23083  017128  0012               	return	
 23084  01712A                     __end_of_ADCC_IsConversionDone:
 23085                           	opt stack 0
 23086                           tosu	equ	0xFFF
 23087                           tosh	equ	0xFFE
 23088                           tosl	equ	0xFFD
 23089                           pclatu	equ	0xFFB
 23090                           pclath	equ	0xFFA
 23091                           tblptru	equ	0xFF8
 23092                           tblptrh	equ	0xFF7
 23093                           tblptrl	equ	0xFF6
 23094                           tablat	equ	0xFF5
 23095                           prodh	equ	0xFF4
 23096                           prodl	equ	0xFF3
 23097                           intcon	equ	0xFF2
 23098                           indf0	equ	0xFEF
 23099                           postinc0	equ	0xFEE
 23100                           fsr0h	equ	0xFEA
 23101                           fsr0l	equ	0xFE9
 23102                           wreg	equ	0xFE8
 23103                           indf1	equ	0xFE7
 23104                           postdec1	equ	0xFE5
 23105                           plusw1	equ	0xFE3
 23106                           fsr1h	equ	0xFE2
 23107                           fsr1l	equ	0xFE1
 23108                           bsr	equ	0xFE0
 23109                           indf2	equ	0xFDF
 23110                           postinc2	equ	0xFDE
 23111                           postdec2	equ	0xFDD
 23112                           plusw2	equ	0xFDB
 23113                           fsr2h	equ	0xFDA
 23114                           fsr2l	equ	0xFD9
 23115                           status	equ	0xFD8
 23116                           
 23117 ;; *************** function _TMR7_WriteTimer *****************
 23118 ;; Defined at:
 23119 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 23120 ;; Parameters:    Size  Location     Type
 23121 ;;  timerVal        2    0[BANK1 ] unsigned int 
 23122 ;; Auto vars:     Size  Location     Type
 23123 ;;		None
 23124 ;; Return value:  Size  Location     Type
 23125 ;;                  1    wreg      void 
 23126 ;; Registers used:
 23127 ;;		wreg, status,2
 23128 ;; Tracked objects:
 23129 ;;		On entry : 0/0
 23130 ;;		On exit  : 0/0
 23131 ;;		Unchanged: 0/0
 23132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23133 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23136 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23137 ;;Total ram usage:        2 bytes
 23138 ;; Hardware stack levels used:    1
 23139 ;; Hardware stack levels required when called:   10
 23140 ;; This function calls:
 23141 ;;		Nothing
 23142 ;; This function is called by:
 23143 ;;		_TMR7_ISR
 23144 ;;		_TMR7_Reload
 23145 ;; This function uses a non-reentrant model
 23146 ;;
 23147                           
 23148                           	psect	text80
 23149  016EAC                     __ptext80:
 23150                           	opt stack 0
 23151  016EAC                     _TMR7_WriteTimer:
 23152                           	opt stack 10
 23153                           
 23154                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 23155                           
 23156                           ;incstack = 0
 23157  016EAC  010F               	movlb	15	; () banked
 23158  016EAE  A530               	btfss	48,2,b	;volatile
 23159  016EB0  D009               	goto	i1l640
 23160                           
 23161                           ; BSR set to: 15
 23162                           ;tmr7.c: 130: {
 23163                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 23164  016EB2  9130               	bcf	48,0,b	;volatile
 23165                           
 23166                           ; BSR set to: 15
 23167                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 23168  016EB4  0101               	movlb	1	; () banked
 23169  016EB6  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23170  016EB8  010F               	movlb	15	; () banked
 23171  016EBA  6F2F               	movwf	47,b	;volatile
 23172                           
 23173                           ; BSR set to: 15
 23174                           ;tmr7.c: 136: TMR7L = timerVal;
 23175  016EBC  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23176                           
 23177                           ; BSR set to: 15
 23178                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 23179  016EC0  8130               	bsf	48,0,b	;volatile
 23180                           
 23181                           ;tmr7.c: 140: }
 23182  016EC2  0012               	return	
 23183  016EC4                     i1l640:
 23184                           
 23185                           ; BSR set to: 15
 23186                           ;tmr7.c: 141: else
 23187                           ;tmr7.c: 142: {
 23188                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 23189                           
 23190                           ; BSR set to: 15
 23191  016EC4  0101               	movlb	1	; () banked
 23192  016EC6  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23193  016EC8  010F               	movlb	15	; () banked
 23194  016ECA  6F2F               	movwf	47,b	;volatile
 23195                           
 23196                           ; BSR set to: 15
 23197                           ;tmr7.c: 145: TMR7L = timerVal;
 23198  016ECC  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23199  016ED0  0012               	return	
 23200  016ED2                     __end_of_TMR7_WriteTimer:
 23201                           	opt stack 0
 23202                           tosu	equ	0xFFF
 23203                           tosh	equ	0xFFE
 23204                           tosl	equ	0xFFD
 23205                           pclatu	equ	0xFFB
 23206                           pclath	equ	0xFFA
 23207                           tblptru	equ	0xFF8
 23208                           tblptrh	equ	0xFF7
 23209                           tblptrl	equ	0xFF6
 23210                           tablat	equ	0xFF5
 23211                           prodh	equ	0xFF4
 23212                           prodl	equ	0xFF3
 23213                           intcon	equ	0xFF2
 23214                           indf0	equ	0xFEF
 23215                           postinc0	equ	0xFEE
 23216                           fsr0h	equ	0xFEA
 23217                           fsr0l	equ	0xFE9
 23218                           wreg	equ	0xFE8
 23219                           indf1	equ	0xFE7
 23220                           postdec1	equ	0xFE5
 23221                           plusw1	equ	0xFE3
 23222                           fsr1h	equ	0xFE2
 23223                           fsr1l	equ	0xFE1
 23224                           bsr	equ	0xFE0
 23225                           indf2	equ	0xFDF
 23226                           postinc2	equ	0xFDE
 23227                           postdec2	equ	0xFDD
 23228                           plusw2	equ	0xFDB
 23229                           fsr2h	equ	0xFDA
 23230                           fsr2l	equ	0xFD9
 23231                           status	equ	0xFD8
 23232                           
 23233 ;; *************** function _TMR6_ISR *****************
 23234 ;; Defined at:
 23235 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 23236 ;; Parameters:    Size  Location     Type
 23237 ;;		None
 23238 ;; Auto vars:     Size  Location     Type
 23239 ;;		None
 23240 ;; Return value:  Size  Location     Type
 23241 ;;                  1    wreg      void 
 23242 ;; Registers used:
 23243 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23244 ;; Tracked objects:
 23245 ;;		On entry : 0/0
 23246 ;;		On exit  : 0/0
 23247 ;;		Unchanged: 0/0
 23248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23253 ;;Total ram usage:        0 bytes
 23254 ;; Hardware stack levels used:    1
 23255 ;; Hardware stack levels required when called:   11
 23256 ;; This function calls:
 23257 ;;		Absolute function
 23258 ;;		_TMR6_DefaultInterruptHandler
 23259 ;;		_heartbeatTimerCallback
 23260 ;; This function is called by:
 23261 ;;		_INTERRUPT_InterruptManagerLow
 23262 ;; This function uses a non-reentrant model
 23263 ;;
 23264                           
 23265                           	psect	text81
 23266  016E10                     __ptext81:
 23267                           	opt stack 0
 23268  016E10                     _TMR6_ISR:
 23269                           	opt stack 10
 23270                           
 23271                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 23272                           
 23273                           ; BSR set to: 15
 23274                           ;incstack = 0
 23275  016E10  010E               	movlb	14	; () banked
 23276  016E12  9B38               	bcf	56,5,b	;volatile
 23277                           
 23278                           ; BSR set to: 14
 23279                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 23280  016E14  0101               	movlb	1	; () banked
 23281  016E16  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23282  016E18  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23283  016E1A  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23284  016E1C  B4D8               	btfsc	status,2,c
 23285  016E1E  0012               	return	
 23286                           
 23287                           ; BSR set to: 1
 23288                           ;tmr6.c: 172: {
 23289                           ;tmr6.c: 173: TMR6_InterruptHandler();
 23290  016E20  D801               	call	i1u1961_28
 23291  016E22  0012               	return	
 23292  016E24                     i1u1961_28:
 23293  016E24  0005               	push	
 23294  016E26  6EFA               	movwf	pclath,c
 23295  016E28  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23296  016E2A  6EFD               	movwf	tosl,c
 23297  016E2C  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23298  016E2E  6EFE               	movwf	tosh,c
 23299  016E30  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23300  016E32  6EFF               	movwf	tosu,c
 23301  016E34  50FA               	movf	pclath,w,c
 23302  016E36  0012               	return		;indir
 23303  016E38                     __end_of_TMR6_ISR:
 23304                           	opt stack 0
 23305                           tosu	equ	0xFFF
 23306                           tosh	equ	0xFFE
 23307                           tosl	equ	0xFFD
 23308                           pclatu	equ	0xFFB
 23309                           pclath	equ	0xFFA
 23310                           tblptru	equ	0xFF8
 23311                           tblptrh	equ	0xFF7
 23312                           tblptrl	equ	0xFF6
 23313                           tablat	equ	0xFF5
 23314                           prodh	equ	0xFF4
 23315                           prodl	equ	0xFF3
 23316                           intcon	equ	0xFF2
 23317                           indf0	equ	0xFEF
 23318                           postinc0	equ	0xFEE
 23319                           fsr0h	equ	0xFEA
 23320                           fsr0l	equ	0xFE9
 23321                           wreg	equ	0xFE8
 23322                           indf1	equ	0xFE7
 23323                           postdec1	equ	0xFE5
 23324                           plusw1	equ	0xFE3
 23325                           fsr1h	equ	0xFE2
 23326                           fsr1l	equ	0xFE1
 23327                           bsr	equ	0xFE0
 23328                           indf2	equ	0xFDF
 23329                           postinc2	equ	0xFDE
 23330                           postdec2	equ	0xFDD
 23331                           plusw2	equ	0xFDB
 23332                           fsr2h	equ	0xFDA
 23333                           fsr2l	equ	0xFD9
 23334                           status	equ	0xFD8
 23335                           
 23336 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 23337 ;; Defined at:
 23338 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 23339 ;; Parameters:    Size  Location     Type
 23340 ;;		None
 23341 ;; Auto vars:     Size  Location     Type
 23342 ;;		None
 23343 ;; Return value:  Size  Location     Type
 23344 ;;                  1    wreg      void 
 23345 ;; Registers used:
 23346 ;;		None
 23347 ;; Tracked objects:
 23348 ;;		On entry : 0/0
 23349 ;;		On exit  : 0/0
 23350 ;;		Unchanged: 0/0
 23351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23356 ;;Total ram usage:        0 bytes
 23357 ;; Hardware stack levels used:    1
 23358 ;; Hardware stack levels required when called:   10
 23359 ;; This function calls:
 23360 ;;		Nothing
 23361 ;; This function is called by:
 23362 ;;		_TMR6_Initialize
 23363 ;;		_TMR6_ISR
 23364 ;; This function uses a non-reentrant model
 23365 ;;
 23366                           
 23367                           	psect	text82
 23368  017158                     __ptext82:
 23369                           	opt stack 0
 23370  017158                     _TMR6_DefaultInterruptHandler:
 23371                           	opt stack 10
 23372                           
 23373                           ;incstack = 0
 23374  017158  0012               	return		;funcret
 23375  01715A                     __end_of_TMR6_DefaultInterruptHandler:
 23376                           	opt stack 0
 23377                           tosu	equ	0xFFF
 23378                           tosh	equ	0xFFE
 23379                           tosl	equ	0xFFD
 23380                           pclatu	equ	0xFFB
 23381                           pclath	equ	0xFFA
 23382                           tblptru	equ	0xFF8
 23383                           tblptrh	equ	0xFF7
 23384                           tblptrl	equ	0xFF6
 23385                           tablat	equ	0xFF5
 23386                           prodh	equ	0xFF4
 23387                           prodl	equ	0xFF3
 23388                           intcon	equ	0xFF2
 23389                           indf0	equ	0xFEF
 23390                           postinc0	equ	0xFEE
 23391                           fsr0h	equ	0xFEA
 23392                           fsr0l	equ	0xFE9
 23393                           wreg	equ	0xFE8
 23394                           indf1	equ	0xFE7
 23395                           postdec1	equ	0xFE5
 23396                           plusw1	equ	0xFE3
 23397                           fsr1h	equ	0xFE2
 23398                           fsr1l	equ	0xFE1
 23399                           bsr	equ	0xFE0
 23400                           indf2	equ	0xFDF
 23401                           postinc2	equ	0xFDE
 23402                           postdec2	equ	0xFDD
 23403                           plusw2	equ	0xFDB
 23404                           fsr2h	equ	0xFDA
 23405                           fsr2l	equ	0xFD9
 23406                           status	equ	0xFD8
 23407                           
 23408 ;; *************** function _heartbeatTimerCallback *****************
 23409 ;; Defined at:
 23410 ;;		line 131 in file "main.c"
 23411 ;; Parameters:    Size  Location     Type
 23412 ;;		None
 23413 ;; Auto vars:     Size  Location     Type
 23414 ;;		None
 23415 ;; Return value:  Size  Location     Type
 23416 ;;                  1    wreg      void 
 23417 ;; Registers used:
 23418 ;;		wreg, status,2, status,0
 23419 ;; Tracked objects:
 23420 ;;		On entry : 0/0
 23421 ;;		On exit  : 0/0
 23422 ;;		Unchanged: 0/0
 23423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23426 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23427 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23428 ;;Total ram usage:        1 bytes
 23429 ;; Hardware stack levels used:    1
 23430 ;; Hardware stack levels required when called:   10
 23431 ;; This function calls:
 23432 ;;		Nothing
 23433 ;; This function is called by:
 23434 ;;		_main
 23435 ;;		_TMR6_ISR
 23436 ;; This function uses a non-reentrant model
 23437 ;;
 23438                           
 23439                           	psect	text83
 23440  016B60                     __ptext83:
 23441                           	opt stack 0
 23442  016B60                     _heartbeatTimerCallback:
 23443                           	opt stack 10
 23444                           
 23445                           ;main.c: 134: LATFbits.LATF2 = !LATFbits.LATF2;
 23446                           
 23447                           ;incstack = 0
 23448  016B60  B47E               	btfsc	3966,2,c	;volatile
 23449  016B62  D004               	goto	i1u929_20
 23450  016B64  0101               	movlb	1	; () banked
 23451  016B66  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23452  016B68  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 23453  016B6A  D002               	goto	i1u930_28
 23454  016B6C                     i1u929_20:
 23455  016B6C  0101               	movlb	1	; () banked
 23456  016B6E  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23457  016B70                     i1u930_28:
 23458  016B70  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23459  016B72  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23460  016B74  507E               	movf	3966,w,c	;volatile
 23461  016B76  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23462  016B78  0BFB               	andlw	-5
 23463  016B7A  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23464  016B7C  6E7E               	movwf	3966,c	;volatile
 23465                           
 23466                           ;main.c: 137: dev_on_time++;
 23467  016B7E  0E01               	movlw	1
 23468  016B80  27B7               	addwf	_dev_on_time& (0+255),f,b	;volatile
 23469  016B82  0E00               	movlw	0
 23470  016B84  23B8               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 23471  016B86  23B9               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 23472  016B88  23BA               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 23473                           
 23474                           ; BSR set to: 1
 23475                           ;main.c: 140: if (load_enable) {
 23476  016B8A  A45E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23477  016B8C  D006               	goto	i1l900
 23478                           
 23479                           ; BSR set to: 1
 23480                           ;main.c: 142: load_on_time++;
 23481  016B8E  0E01               	movlw	1
 23482  016B90  27B3               	addwf	_load_on_time& (0+255),f,b	;volatile
 23483  016B92  0E00               	movlw	0
 23484  016B94  23B4               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 23485  016B96  23B5               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 23486  016B98  23B6               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 23487  016B9A                     i1l900:
 23488                           
 23489                           ; BSR set to: 1
 23490  016B9A  0004               	clrwdt		;# 
 23491  016B9C  0012               	return		;funcret
 23492  016B9E                     __end_of_heartbeatTimerCallback:
 23493                           	opt stack 0
 23494                           tosu	equ	0xFFF
 23495                           tosh	equ	0xFFE
 23496                           tosl	equ	0xFFD
 23497                           pclatu	equ	0xFFB
 23498                           pclath	equ	0xFFA
 23499                           tblptru	equ	0xFF8
 23500                           tblptrh	equ	0xFF7
 23501                           tblptrl	equ	0xFF6
 23502                           tablat	equ	0xFF5
 23503                           prodh	equ	0xFF4
 23504                           prodl	equ	0xFF3
 23505                           intcon	equ	0xFF2
 23506                           indf0	equ	0xFEF
 23507                           postinc0	equ	0xFEE
 23508                           fsr0h	equ	0xFEA
 23509                           fsr0l	equ	0xFE9
 23510                           wreg	equ	0xFE8
 23511                           indf1	equ	0xFE7
 23512                           postdec1	equ	0xFE5
 23513                           plusw1	equ	0xFE3
 23514                           fsr1h	equ	0xFE2
 23515                           fsr1l	equ	0xFE1
 23516                           bsr	equ	0xFE0
 23517                           indf2	equ	0xFDF
 23518                           postinc2	equ	0xFDE
 23519                           postdec2	equ	0xFDD
 23520                           plusw2	equ	0xFDB
 23521                           fsr2h	equ	0xFDA
 23522                           fsr2l	equ	0xFD9
 23523                           status	equ	0xFD8
 23524                           
 23525 ;; *************** function _HLVD_ISR *****************
 23526 ;; Defined at:
 23527 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 23528 ;; Parameters:    Size  Location     Type
 23529 ;;		None
 23530 ;; Auto vars:     Size  Location     Type
 23531 ;;		None
 23532 ;; Return value:  Size  Location     Type
 23533 ;;                  1    wreg      void 
 23534 ;; Registers used:
 23535 ;;		None
 23536 ;; Tracked objects:
 23537 ;;		On entry : 0/0
 23538 ;;		On exit  : 0/0
 23539 ;;		Unchanged: 0/0
 23540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23545 ;;Total ram usage:        0 bytes
 23546 ;; Hardware stack levels used:    1
 23547 ;; Hardware stack levels required when called:   10
 23548 ;; This function calls:
 23549 ;;		Nothing
 23550 ;; This function is called by:
 23551 ;;		_INTERRUPT_InterruptManagerLow
 23552 ;; This function uses a non-reentrant model
 23553 ;;
 23554                           
 23555                           	psect	text84
 23556  01713C                     __ptext84:
 23557                           	opt stack 0
 23558  01713C                     _HLVD_ISR:
 23559                           	opt stack 11
 23560                           
 23561                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 23562                           
 23563                           ;incstack = 0
 23564  01713C  010E               	movlb	14	; () banked
 23565  01713E  9F35               	bcf	53,7,b	;volatile
 23566                           
 23567                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 23568  017140  805E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 23569                           
 23570                           ; BSR set to: 14
 23571  017142  0012               	return		;funcret
 23572  017144                     __end_of_HLVD_ISR:
 23573                           	opt stack 0
 23574                           tosu	equ	0xFFF
 23575                           tosh	equ	0xFFE
 23576                           tosl	equ	0xFFD
 23577                           pclatu	equ	0xFFB
 23578                           pclath	equ	0xFFA
 23579                           tblptru	equ	0xFF8
 23580                           tblptrh	equ	0xFF7
 23581                           tblptrl	equ	0xFF6
 23582                           tablat	equ	0xFF5
 23583                           prodh	equ	0xFF4
 23584                           prodl	equ	0xFF3
 23585                           intcon	equ	0xFF2
 23586                           indf0	equ	0xFEF
 23587                           postinc0	equ	0xFEE
 23588                           fsr0h	equ	0xFEA
 23589                           fsr0l	equ	0xFE9
 23590                           wreg	equ	0xFE8
 23591                           indf1	equ	0xFE7
 23592                           postdec1	equ	0xFE5
 23593                           plusw1	equ	0xFE3
 23594                           fsr1h	equ	0xFE2
 23595                           fsr1l	equ	0xFE1
 23596                           bsr	equ	0xFE0
 23597                           indf2	equ	0xFDF
 23598                           postinc2	equ	0xFDE
 23599                           postdec2	equ	0xFDD
 23600                           plusw2	equ	0xFDB
 23601                           fsr2h	equ	0xFDA
 23602                           fsr2l	equ	0xFD9
 23603                           status	equ	0xFD8
 23604                           
 23605 ;; *************** function _EUSART2_Transmit_ISR *****************
 23606 ;; Defined at:
 23607 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 23608 ;; Parameters:    Size  Location     Type
 23609 ;;		None
 23610 ;; Auto vars:     Size  Location     Type
 23611 ;;		None
 23612 ;; Return value:  Size  Location     Type
 23613 ;;                  1    wreg      void 
 23614 ;; Registers used:
 23615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23616 ;; Tracked objects:
 23617 ;;		On entry : 0/0
 23618 ;;		On exit  : 0/0
 23619 ;;		Unchanged: 0/0
 23620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23625 ;;Total ram usage:        0 bytes
 23626 ;; Hardware stack levels used:    1
 23627 ;; Hardware stack levels required when called:   10
 23628 ;; This function calls:
 23629 ;;		Nothing
 23630 ;; This function is called by:
 23631 ;;		_EUSART2_Initialize
 23632 ;;		_INTERRUPT_InterruptManagerLow
 23633 ;; This function uses a non-reentrant model
 23634 ;;
 23635                           
 23636                           	psect	text85
 23637  016C88                     __ptext85:
 23638                           	opt stack 0
 23639  016C88                     _EUSART2_Transmit_ISR:
 23640                           	opt stack 11
 23641                           
 23642                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 23643                           
 23644                           ; BSR set to: 14
 23645                           ;incstack = 0
 23646  016C88  0E80               	movlw	128
 23647  016C8A  0101               	movlb	1	; () banked
 23648  016C8C  61D4               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 23649  016C8E  D014               	goto	i1l403
 23650                           
 23651                           ; BSR set to: 1
 23652                           ;eusart2.c: 203: {
 23653                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 23654  016C90  51D5               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 23655  016C92  0D01               	mullw	1
 23656  016C94  0E00               	movlw	low _eusart2TxBuffer
 23657  016C96  24F3               	addwf	prodl,w,c
 23658  016C98  6ED9               	movwf	fsr2l,c
 23659  016C9A  0E03               	movlw	high _eusart2TxBuffer
 23660  016C9C  20F4               	addwfc	prodh,w,c
 23661  016C9E  6EDA               	movwf	fsr2h,c
 23662  016CA0  50DF               	movf	indf2,w,c
 23663  016CA2  010E               	movlb	14	; () banked
 23664  016CA4  6FF2               	movwf	242,b	;volatile
 23665                           
 23666                           ; BSR set to: 14
 23667  016CA6  0101               	movlb	1	; () banked
 23668  016CA8  2BD5               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 23672  016CAA  0E7F               	movlw	127
 23673  016CAC  65D5               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 23674  016CAE  D002               	goto	i1l404
 23675                           
 23676                           ; BSR set to: 1
 23677                           ;eusart2.c: 206: {
 23678                           ;eusart2.c: 207: eusart2TxTail = 0;
 23679  016CB0  0E00               	movlw	0
 23680  016CB2  6FD5               	movwf	_eusart2TxTail& (0+255),b	;volatile
 23681  016CB4                     i1l404:
 23682                           
 23683                           ; BSR set to: 1
 23684                           ;eusart2.c: 208: }
 23685                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 23686                           
 23687                           ; BSR set to: 1
 23688  016CB4  2BD4               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 23689                           
 23690                           ;eusart2.c: 210: }
 23691  016CB6  0012               	return	
 23692  016CB8                     i1l403:
 23693                           
 23694                           ; BSR set to: 1
 23695                           ;eusart2.c: 211: else
 23696                           ;eusart2.c: 212: {
 23697                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 23698  016CB8  010E               	movlb	14	; () banked
 23699  016CBA  9D2C               	bcf	44,6,b	;volatile
 23700  016CBC  0012               	return	
 23701  016CBE                     __end_of_EUSART2_Transmit_ISR:
 23702                           	opt stack 0
 23703                           tosu	equ	0xFFF
 23704                           tosh	equ	0xFFE
 23705                           tosl	equ	0xFFD
 23706                           pclatu	equ	0xFFB
 23707                           pclath	equ	0xFFA
 23708                           tblptru	equ	0xFF8
 23709                           tblptrh	equ	0xFF7
 23710                           tblptrl	equ	0xFF6
 23711                           tablat	equ	0xFF5
 23712                           prodh	equ	0xFF4
 23713                           prodl	equ	0xFF3
 23714                           intcon	equ	0xFF2
 23715                           indf0	equ	0xFEF
 23716                           postinc0	equ	0xFEE
 23717                           fsr0h	equ	0xFEA
 23718                           fsr0l	equ	0xFE9
 23719                           wreg	equ	0xFE8
 23720                           indf1	equ	0xFE7
 23721                           postdec1	equ	0xFE5
 23722                           plusw1	equ	0xFE3
 23723                           fsr1h	equ	0xFE2
 23724                           fsr1l	equ	0xFE1
 23725                           bsr	equ	0xFE0
 23726                           indf2	equ	0xFDF
 23727                           postinc2	equ	0xFDE
 23728                           postdec2	equ	0xFDD
 23729                           plusw2	equ	0xFDB
 23730                           fsr2h	equ	0xFDA
 23731                           fsr2l	equ	0xFD9
 23732                           status	equ	0xFD8
 23733                           
 23734 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 23735 ;; Defined at:
 23736 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 23737 ;; Parameters:    Size  Location     Type
 23738 ;;		None
 23739 ;; Auto vars:     Size  Location     Type
 23740 ;;		None
 23741 ;; Return value:  Size  Location     Type
 23742 ;;                  1    wreg      void 
 23743 ;; Registers used:
 23744 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23745 ;; Tracked objects:
 23746 ;;		On entry : 0/0
 23747 ;;		On exit  : 0/0
 23748 ;;		Unchanged: 0/0
 23749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23752 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23753 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23754 ;;Total ram usage:       18 bytes
 23755 ;; Hardware stack levels used:    1
 23756 ;; Hardware stack levels required when called:    9
 23757 ;; This function calls:
 23758 ;;		Absolute function
 23759 ;;		_ADCC_ISR
 23760 ;;		_EUSART2_Receive_ISR
 23761 ;;		_TMR5_ISR
 23762 ;; This function is called by:
 23763 ;;		Interrupt level 2
 23764 ;; This function uses a non-reentrant model
 23765 ;;
 23766                           
 23767                           	psect	intcode
 23768  000008                     __pintcode:
 23769                           	opt stack 0
 23770  000008                     _INTERRUPT_InterruptManagerHigh:
 23771                           	opt stack 9
 23772                           
 23773                           ;incstack = 0
 23774  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23775  00000A  EF5B  F0AB         	goto	int_func
 23776                           tosu	equ	0xFFF
 23777                           tosh	equ	0xFFE
 23778                           tosl	equ	0xFFD
 23779                           pclatu	equ	0xFFB
 23780                           pclath	equ	0xFFA
 23781                           tblptru	equ	0xFF8
 23782                           tblptrh	equ	0xFF7
 23783                           tblptrl	equ	0xFF6
 23784                           tablat	equ	0xFF5
 23785                           prodh	equ	0xFF4
 23786                           prodl	equ	0xFF3
 23787                           intcon	equ	0xFF2
 23788                           indf0	equ	0xFEF
 23789                           postinc0	equ	0xFEE
 23790                           fsr0h	equ	0xFEA
 23791                           fsr0l	equ	0xFE9
 23792                           wreg	equ	0xFE8
 23793                           indf1	equ	0xFE7
 23794                           postdec1	equ	0xFE5
 23795                           plusw1	equ	0xFE3
 23796                           fsr1h	equ	0xFE2
 23797                           fsr1l	equ	0xFE1
 23798                           bsr	equ	0xFE0
 23799                           indf2	equ	0xFDF
 23800                           postinc2	equ	0xFDE
 23801                           postdec2	equ	0xFDD
 23802                           plusw2	equ	0xFDB
 23803                           fsr2h	equ	0xFDA
 23804                           fsr2l	equ	0xFD9
 23805                           status	equ	0xFD8
 23806                           
 23807                           	psect	intcode_body
 23808  0156B6                     __pintcode_body:
 23809                           	opt stack 9
 23810  0156B6                     int_func:
 23811                           	opt stack 9
 23812  0156B6  CFFA F0B6          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 23813  0156BA  CFFB F0B7          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 23814  0156BE  CFE9 F0B8          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 23815  0156C2  CFEA F0B9          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 23816  0156C6  CFE1 F0BA          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 23817  0156CA  CFE2 F0BB          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 23818  0156CE  CFD9 F0BC          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 23819  0156D2  CFDA F0BD          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 23820  0156D6  CFF3 F0BE          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 23821  0156DA  CFF4 F0BF          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 23822  0156DE  CFF6 F0C0          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 23823  0156E2  CFF7 F0C1          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 23824  0156E6  CFF8 F0C2          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 23825  0156EA  CFF5 F0C3          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 23826  0156EE  C05F  F0C4         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 23827  0156F2  C060  F0C5         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 23828  0156F6  C061  F0C6         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 23829  0156FA  C062  F0C7         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 23830                           
 23831                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 23832  0156FE  010E               	movlb	14	; () banked
 23833  015700  BF2C               	btfsc	44,7,b	;volatile
 23834                           
 23835                           ; BSR set to: 14
 23836  015702  AF36               	btfss	54,7,b	;volatile
 23837  015704  D00D               	goto	i2l212
 23838                           
 23839                           ; BSR set to: 14
 23840                           ;interrupt_manager.c: 87: {
 23841                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 23842  015706  D801               	call	i2u1972_48
 23843  015708  D016               	goto	i2l216
 23844  01570A                     i2u1972_48:
 23845  01570A  0005               	push	
 23846  01570C  6EFA               	movwf	pclath,c
 23847  01570E  0101               	movlb	1	; () banked
 23848  015710  51C7               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 23849  015712  6EFD               	movwf	tosl,c
 23850  015714  51C8               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 23851  015716  6EFE               	movwf	tosh,c
 23852  015718  51C9               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 23853  01571A  6EFF               	movwf	tosu,c
 23854  01571C  50FA               	movf	pclath,w,c
 23855  01571E  0012               	return		;indir
 23856  015720                     i2l212:
 23857                           
 23858                           ; BSR set to: 14
 23859                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 23860  015720  B92E               	btfsc	46,4,b	;volatile
 23861                           
 23862                           ; BSR set to: 14
 23863  015722  A938               	btfss	56,4,b	;volatile
 23864  015724  D003               	goto	i2l214
 23865                           
 23866                           ; BSR set to: 14
 23867                           ;interrupt_manager.c: 91: {
 23868                           ;interrupt_manager.c: 92: TMR5_ISR();
 23869  015726  EC79  F0B6         	call	_TMR5_ISR	;wreg free
 23870                           
 23871                           ;interrupt_manager.c: 93: }
 23872  01572A  D005               	goto	i2l216
 23873  01572C                     i2l214:
 23874                           
 23875                           ; BSR set to: 14
 23876                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 23877  01572C  B12A               	btfsc	42,0,b	;volatile
 23878                           
 23879                           ; BSR set to: 14
 23880  01572E  A134               	btfss	52,0,b	;volatile
 23881  015730  D002               	goto	i2l216
 23882                           
 23883                           ; BSR set to: 14
 23884                           ;interrupt_manager.c: 95: {
 23885                           ;interrupt_manager.c: 96: ADCC_ISR();
 23886  015732  EC1C  F0B7         	call	_ADCC_ISR	;wreg free
 23887  015736                     i2l216:
 23888                           
 23889                           ;interrupt_manager.c: 98: else
 23890                           ;interrupt_manager.c: 99: {
 23891  015736  C0C7  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 23892  01573A  C0C6  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 23893  01573E  C0C5  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 23894  015742  C0C4  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 23895  015746  C0C3  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 23896  01574A  C0C2  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 23897  01574E  C0C1  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 23898  015752  C0C0  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 23899  015756  C0BF  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 23900  01575A  C0BE  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 23901  01575E  C0BD  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 23902  015762  C0BC  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 23903  015766  C0BB  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 23904  01576A  C0BA  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 23905  01576E  C0B9  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 23906  015772  C0B8  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 23907  015776  C0B7  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 23908  01577A  C0B6  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 23909  01577E  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23910  015780  0011               	retfie		f
 23911  015782                     __end_of_INTERRUPT_InterruptManagerHigh:
 23912                           	opt stack 0
 23913                           tosu	equ	0xFFF
 23914                           tosh	equ	0xFFE
 23915                           tosl	equ	0xFFD
 23916                           pclatu	equ	0xFFB
 23917                           pclath	equ	0xFFA
 23918                           tblptru	equ	0xFF8
 23919                           tblptrh	equ	0xFF7
 23920                           tblptrl	equ	0xFF6
 23921                           tablat	equ	0xFF5
 23922                           prodh	equ	0xFF4
 23923                           prodl	equ	0xFF3
 23924                           intcon	equ	0xFF2
 23925                           indf0	equ	0xFEF
 23926                           postinc0	equ	0xFEE
 23927                           fsr0h	equ	0xFEA
 23928                           fsr0l	equ	0xFE9
 23929                           wreg	equ	0xFE8
 23930                           indf1	equ	0xFE7
 23931                           postdec1	equ	0xFE5
 23932                           plusw1	equ	0xFE3
 23933                           fsr1h	equ	0xFE2
 23934                           fsr1l	equ	0xFE1
 23935                           bsr	equ	0xFE0
 23936                           indf2	equ	0xFDF
 23937                           postinc2	equ	0xFDE
 23938                           postdec2	equ	0xFDD
 23939                           plusw2	equ	0xFDB
 23940                           fsr2h	equ	0xFDA
 23941                           fsr2l	equ	0xFD9
 23942                           status	equ	0xFD8
 23943                           
 23944 ;; *************** function _TMR5_ISR *****************
 23945 ;; Defined at:
 23946 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23947 ;; Parameters:    Size  Location     Type
 23948 ;;		None
 23949 ;; Auto vars:     Size  Location     Type
 23950 ;;		None
 23951 ;; Return value:  Size  Location     Type
 23952 ;;                  1    wreg      void 
 23953 ;; Registers used:
 23954 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23955 ;; Tracked objects:
 23956 ;;		On entry : 0/0
 23957 ;;		On exit  : 0/0
 23958 ;;		Unchanged: 0/0
 23959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23964 ;;Total ram usage:        0 bytes
 23965 ;; Hardware stack levels used:    1
 23966 ;; Hardware stack levels required when called:    1
 23967 ;; This function calls:
 23968 ;;		Absolute function
 23969 ;;		_TMR5_DefaultInterruptHandler
 23970 ;;		_TMR5_WriteTimer
 23971 ;; This function is called by:
 23972 ;;		_INTERRUPT_InterruptManagerHigh
 23973 ;; This function uses a non-reentrant model
 23974 ;;
 23975                           
 23976                           	psect	text87
 23977  016CF2                     __ptext87:
 23978                           	opt stack 0
 23979  016CF2                     _TMR5_ISR:
 23980                           	opt stack 16
 23981                           
 23982                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 23983                           
 23984                           ;incstack = 0
 23985  016CF2  010E               	movlb	14	; () banked
 23986  016CF4  9938               	bcf	56,4,b	;volatile
 23987                           
 23988                           ; BSR set to: 14
 23989                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 23990  016CF6  C1CD  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 23991  016CFA  C1CE  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 23992  016CFE  ECEC  F0B7         	call	_TMR5_WriteTimer	;wreg free
 23993                           
 23994                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 23995  016D02  0101               	movlb	1	; () banked
 23996  016D04  51BE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23997  016D06  11BF               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23998  016D08  11C0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23999  016D0A  B4D8               	btfsc	status,2,c
 24000  016D0C  0012               	return	
 24001                           
 24002                           ; BSR set to: 1
 24003                           ;tmr5.c: 172: {
 24004                           ;tmr5.c: 173: TMR5_InterruptHandler();
 24005  016D0E  D801               	call	i2u1957_48
 24006  016D10  0012               	return	
 24007  016D12                     i2u1957_48:
 24008  016D12  0005               	push	
 24009  016D14  6EFA               	movwf	pclath,c
 24010  016D16  51BE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24011  016D18  6EFD               	movwf	tosl,c
 24012  016D1A  51BF               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24013  016D1C  6EFE               	movwf	tosh,c
 24014  016D1E  51C0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24015  016D20  6EFF               	movwf	tosu,c
 24016  016D22  50FA               	movf	pclath,w,c
 24017  016D24  0012               	return		;indir
 24018  016D26                     __end_of_TMR5_ISR:
 24019                           	opt stack 0
 24020                           tosu	equ	0xFFF
 24021                           tosh	equ	0xFFE
 24022                           tosl	equ	0xFFD
 24023                           pclatu	equ	0xFFB
 24024                           pclath	equ	0xFFA
 24025                           tblptru	equ	0xFF8
 24026                           tblptrh	equ	0xFF7
 24027                           tblptrl	equ	0xFF6
 24028                           tablat	equ	0xFF5
 24029                           prodh	equ	0xFF4
 24030                           prodl	equ	0xFF3
 24031                           intcon	equ	0xFF2
 24032                           indf0	equ	0xFEF
 24033                           postinc0	equ	0xFEE
 24034                           fsr0h	equ	0xFEA
 24035                           fsr0l	equ	0xFE9
 24036                           wreg	equ	0xFE8
 24037                           indf1	equ	0xFE7
 24038                           postdec1	equ	0xFE5
 24039                           plusw1	equ	0xFE3
 24040                           fsr1h	equ	0xFE2
 24041                           fsr1l	equ	0xFE1
 24042                           bsr	equ	0xFE0
 24043                           indf2	equ	0xFDF
 24044                           postinc2	equ	0xFDE
 24045                           postdec2	equ	0xFDD
 24046                           plusw2	equ	0xFDB
 24047                           fsr2h	equ	0xFDA
 24048                           fsr2l	equ	0xFD9
 24049                           status	equ	0xFD8
 24050                           
 24051 ;; *************** function _TMR5_WriteTimer *****************
 24052 ;; Defined at:
 24053 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 24054 ;; Parameters:    Size  Location     Type
 24055 ;;  timerVal        2    0[COMRAM] unsigned int 
 24056 ;; Auto vars:     Size  Location     Type
 24057 ;;		None
 24058 ;; Return value:  Size  Location     Type
 24059 ;;                  1    wreg      void 
 24060 ;; Registers used:
 24061 ;;		wreg, status,2
 24062 ;; Tracked objects:
 24063 ;;		On entry : 0/0
 24064 ;;		On exit  : 0/0
 24065 ;;		Unchanged: 0/0
 24066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24071 ;;Total ram usage:        2 bytes
 24072 ;; Hardware stack levels used:    1
 24073 ;; This function calls:
 24074 ;;		Nothing
 24075 ;; This function is called by:
 24076 ;;		_TMR5_ISR
 24077 ;;		_TMR5_Reload
 24078 ;; This function uses a non-reentrant model
 24079 ;;
 24080                           
 24081                           	psect	text88
 24082  016FD8                     __ptext88:
 24083                           	opt stack 0
 24084  016FD8                     _TMR5_WriteTimer:
 24085                           	opt stack 16
 24086                           
 24087                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 24088                           
 24089                           ;incstack = 0
 24090  016FD8  A4C3               	btfss	4035,2,c	;volatile
 24091  016FDA  D007               	goto	i2l714
 24092                           
 24093                           ;tmr5.c: 130: {
 24094                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 24095  016FDC  90C3               	bcf	4035,0,c	;volatile
 24096                           
 24097                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 24098  016FDE  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24099  016FE0  6EC2               	movwf	4034,c	;volatile
 24100                           
 24101                           ;tmr5.c: 136: TMR5L = timerVal;
 24102  016FE2  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24103                           
 24104                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 24105  016FE6  80C3               	bsf	4035,0,c	;volatile
 24106                           
 24107                           ;tmr5.c: 140: }
 24108  016FE8  0012               	return	
 24109  016FEA                     i2l714:
 24110                           
 24111                           ;tmr5.c: 141: else
 24112                           ;tmr5.c: 142: {
 24113                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 24114  016FEA  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24115  016FEC  6EC2               	movwf	4034,c	;volatile
 24116                           
 24117                           ;tmr5.c: 145: TMR5L = timerVal;
 24118  016FEE  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24119  016FF2  0012               	return	
 24120  016FF4                     __end_of_TMR5_WriteTimer:
 24121                           	opt stack 0
 24122                           tosu	equ	0xFFF
 24123                           tosh	equ	0xFFE
 24124                           tosl	equ	0xFFD
 24125                           pclatu	equ	0xFFB
 24126                           pclath	equ	0xFFA
 24127                           tblptru	equ	0xFF8
 24128                           tblptrh	equ	0xFF7
 24129                           tblptrl	equ	0xFF6
 24130                           tablat	equ	0xFF5
 24131                           prodh	equ	0xFF4
 24132                           prodl	equ	0xFF3
 24133                           intcon	equ	0xFF2
 24134                           indf0	equ	0xFEF
 24135                           postinc0	equ	0xFEE
 24136                           fsr0h	equ	0xFEA
 24137                           fsr0l	equ	0xFE9
 24138                           wreg	equ	0xFE8
 24139                           indf1	equ	0xFE7
 24140                           postdec1	equ	0xFE5
 24141                           plusw1	equ	0xFE3
 24142                           fsr1h	equ	0xFE2
 24143                           fsr1l	equ	0xFE1
 24144                           bsr	equ	0xFE0
 24145                           indf2	equ	0xFDF
 24146                           postinc2	equ	0xFDE
 24147                           postdec2	equ	0xFDD
 24148                           plusw2	equ	0xFDB
 24149                           fsr2h	equ	0xFDA
 24150                           fsr2l	equ	0xFD9
 24151                           status	equ	0xFD8
 24152                           
 24153 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24154 ;; Defined at:
 24155 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24156 ;; Parameters:    Size  Location     Type
 24157 ;;		None
 24158 ;; Auto vars:     Size  Location     Type
 24159 ;;		None
 24160 ;; Return value:  Size  Location     Type
 24161 ;;                  1    wreg      void 
 24162 ;; Registers used:
 24163 ;;		None
 24164 ;; Tracked objects:
 24165 ;;		On entry : 0/0
 24166 ;;		On exit  : 0/0
 24167 ;;		Unchanged: 0/0
 24168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24173 ;;Total ram usage:        0 bytes
 24174 ;; Hardware stack levels used:    1
 24175 ;; This function calls:
 24176 ;;		Nothing
 24177 ;; This function is called by:
 24178 ;;		_TMR5_Initialize
 24179 ;;		_TMR5_ISR
 24180 ;; This function uses a non-reentrant model
 24181 ;;
 24182                           
 24183                           	psect	text89
 24184  01715A                     __ptext89:
 24185                           	opt stack 0
 24186  01715A                     _TMR5_DefaultInterruptHandler:
 24187                           	opt stack 16
 24188                           
 24189                           ;incstack = 0
 24190  01715A  0012               	return		;funcret
 24191  01715C                     __end_of_TMR5_DefaultInterruptHandler:
 24192                           	opt stack 0
 24193                           tosu	equ	0xFFF
 24194                           tosh	equ	0xFFE
 24195                           tosl	equ	0xFFD
 24196                           pclatu	equ	0xFFB
 24197                           pclath	equ	0xFFA
 24198                           tblptru	equ	0xFF8
 24199                           tblptrh	equ	0xFF7
 24200                           tblptrl	equ	0xFF6
 24201                           tablat	equ	0xFF5
 24202                           prodh	equ	0xFF4
 24203                           prodl	equ	0xFF3
 24204                           intcon	equ	0xFF2
 24205                           indf0	equ	0xFEF
 24206                           postinc0	equ	0xFEE
 24207                           fsr0h	equ	0xFEA
 24208                           fsr0l	equ	0xFE9
 24209                           wreg	equ	0xFE8
 24210                           indf1	equ	0xFE7
 24211                           postdec1	equ	0xFE5
 24212                           plusw1	equ	0xFE3
 24213                           fsr1h	equ	0xFE2
 24214                           fsr1l	equ	0xFE1
 24215                           bsr	equ	0xFE0
 24216                           indf2	equ	0xFDF
 24217                           postinc2	equ	0xFDE
 24218                           postdec2	equ	0xFDD
 24219                           plusw2	equ	0xFDB
 24220                           fsr2h	equ	0xFDA
 24221                           fsr2l	equ	0xFD9
 24222                           status	equ	0xFD8
 24223                           
 24224 ;; *************** function _EUSART2_Receive_ISR *****************
 24225 ;; Defined at:
 24226 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 24227 ;; Parameters:    Size  Location     Type
 24228 ;;		None
 24229 ;; Auto vars:     Size  Location     Type
 24230 ;;		None
 24231 ;; Return value:  Size  Location     Type
 24232 ;;                  1    wreg      void 
 24233 ;; Registers used:
 24234 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24235 ;; Tracked objects:
 24236 ;;		On entry : 0/0
 24237 ;;		On exit  : 0/0
 24238 ;;		Unchanged: 0/0
 24239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24244 ;;Total ram usage:        0 bytes
 24245 ;; Hardware stack levels used:    1
 24246 ;; Hardware stack levels required when called:    4
 24247 ;; This function calls:
 24248 ;;		i2_printf
 24249 ;; This function is called by:
 24250 ;;		_EUSART2_Initialize
 24251 ;;		_INTERRUPT_InterruptManagerHigh
 24252 ;; This function uses a non-reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text90
 24256  0158F4                     __ptext90:
 24257                           	opt stack 0
 24258  0158F4                     _EUSART2_Receive_ISR:
 24259                           	opt stack 13
 24260                           
 24261                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 24262                           
 24263                           ;incstack = 0
 24264  0158F4  010E               	movlb	14	; () banked
 24265  0158F6  A3F5               	btfss	245,1,b	;volatile
 24266  0158F8  D003               	goto	i2l409
 24267                           
 24268                           ; BSR set to: 14
 24269                           ;eusart2.c: 221: {
 24270                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 24271  0158FA  99F5               	bcf	245,4,b	;volatile
 24272                           
 24273                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 24274  0158FC  89F5               	bsf	245,4,b	;volatile
 24275                           
 24276                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 24277  0158FE  827E               	bsf	3966,1,c	;volatile
 24278  015900                     i2l409:
 24279                           
 24280                           ; BSR set to: 14
 24281                           ;eusart2.c: 227: }
 24282                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 24283  015900  927E               	bcf	3966,1,c	;volatile
 24284                           
 24285                           ; BSR set to: 14
 24286                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 24287  015902  0100               	movlb	0	; () banked
 24288  015904  51ED               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24289  015906  0D01               	mullw	1
 24290  015908  0E00               	movlw	low _eusart2RxBuffer
 24291  01590A  24F3               	addwf	prodl,w,c
 24292  01590C  6ED9               	movwf	fsr2l,c
 24293  01590E  0E02               	movlw	high _eusart2RxBuffer
 24294  015910  20F4               	addwfc	prodh,w,c
 24295  015912  6EDA               	movwf	fsr2h,c
 24296  015914  CEF1 FFDF          	movff	3825,indf2	;volatile
 24297                           
 24298                           ; BSR set to: 0
 24299  015918  2BED               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 24300                           
 24301                           ; BSR set to: 0
 24302                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 24303  01591A  0E3F               	movlw	63
 24304  01591C  65ED               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 24305  01591E  D002               	goto	i2l410
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;eusart2.c: 234: {
 24309                           ;eusart2.c: 235: eusart2RxHead = 0;
 24310  015920  0E00               	movlw	0
 24311  015922  6FED               	movwf	_eusart2RxHead& (0+255),b	;volatile
 24312  015924                     i2l410:
 24313                           
 24314                           ; BSR set to: 0
 24315                           ;eusart2.c: 236: }
 24316                           ;eusart2.c: 237: eusart2RxCount++;
 24317                           
 24318                           ; BSR set to: 0
 24319  015924  0101               	movlb	1	; () banked
 24320  015926  2BD2               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 24321                           
 24322                           ; BSR set to: 1
 24323                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 24324  015928  0E0A               	movlw	10
 24325  01592A  010E               	movlb	14	; () banked
 24326  01592C  19F1               	xorwf	241,w,b	;volatile
 24327  01592E  B4D8               	btfsc	status,2,c
 24328  015930  D004               	goto	i2u1967_40
 24329                           
 24330                           ; BSR set to: 14
 24331  015932  0E0D               	movlw	13
 24332  015934  19F1               	xorwf	241,w,b	;volatile
 24333  015936  A4D8               	btfss	status,2,c
 24334  015938  D006               	goto	i2l411
 24335  01593A                     i2u1967_40:
 24336                           
 24337                           ; BSR set to: 14
 24338                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 24339  01593A  0100               	movlb	0	; () banked
 24340  01593C  81FF               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24341                           
 24342                           ; BSR set to: 0
 24343                           ;eusart2.c: 248: RC2REG = 0;
 24344  01593E  0E00               	movlw	0
 24345  015940  010E               	movlb	14	; () banked
 24346  015942  6FF1               	movwf	241,b	;volatile
 24347                           
 24348                           ;eusart2.c: 250: }
 24349  015944  D002               	goto	i2l414
 24350  015946                     i2l411:
 24351                           
 24352                           ; BSR set to: 14
 24353                           ;eusart2.c: 252: else {
 24354                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 24355  015946  0100               	movlb	0	; () banked
 24356  015948  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24357  01594A                     i2l414:
 24358                           
 24359                           ;eusart2.c: 256: }
 24360                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 24361                           
 24362                           ; BSR set to: 0
 24363  01594A  0E08               	movlw	8
 24364  01594C  010E               	movlb	14	; () banked
 24365  01594E  19F1               	xorwf	241,w,b	;volatile
 24366  015950  A4D8               	btfss	status,2,c
 24367  015952  0012               	return	
 24368                           
 24369                           ; BSR set to: 14
 24370                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 24371  015954  0100               	movlb	0	; () banked
 24372  015956  51ED               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24373  015958  0D01               	mullw	1
 24374  01595A  0E00               	movlw	low _eusart2RxBuffer
 24375  01595C  24F3               	addwf	prodl,w,c
 24376  01595E  6ED9               	movwf	fsr2l,c
 24377  015960  0E02               	movlw	high _eusart2RxBuffer
 24378  015962  20F4               	addwfc	prodh,w,c
 24379  015964  6EDA               	movwf	fsr2h,c
 24380  015966  0E00               	movlw	0
 24381  015968  6EDF               	movwf	indf2,c
 24382                           
 24383                           ; BSR set to: 0
 24384                           ;eusart2.c: 262: eusart2RxHead--;
 24385  01596A  07ED               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24386                           
 24387                           ; BSR set to: 0
 24388                           ;eusart2.c: 265: printf("\033[K");
 24389  01596C  0EC4               	movlw	low STR_1
 24390  01596E  6F66               	movwf	i2printf@f& (0+255),b
 24391  015970  0EFF               	movlw	high STR_1
 24392  015972  6F67               	movwf	(i2printf@f+1)& (0+255),b
 24393  015974  EC0D  F08C         	call	i2_printf	;wreg free
 24394                           
 24395                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 24396  015978  0101               	movlb	1	; () banked
 24397  01597A  51D3               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 24398  01597C  0100               	movlb	0	; () banked
 24399  01597E  19ED               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 24400  015980  B4D8               	btfsc	status,2,c
 24401  015982  D00B               	goto	i2l416
 24402                           
 24403                           ; BSR set to: 0
 24404                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 24405  015984  51ED               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24406  015986  0D01               	mullw	1
 24407  015988  0E00               	movlw	low _eusart2RxBuffer
 24408  01598A  24F3               	addwf	prodl,w,c
 24409  01598C  6ED9               	movwf	fsr2l,c
 24410  01598E  0E02               	movlw	high _eusart2RxBuffer
 24411  015990  20F4               	addwfc	prodh,w,c
 24412  015992  6EDA               	movwf	fsr2h,c
 24413  015994  0E00               	movlw	0
 24414  015996  6EDF               	movwf	indf2,c
 24415                           
 24416                           ; BSR set to: 0
 24417                           ;eusart2.c: 270: eusart2RxHead--;
 24418  015998  07ED               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24419  01599A                     i2l416:
 24420                           
 24421                           ; BSR set to: 0
 24422                           ;eusart2.c: 272: }
 24423                           ;eusart2.c: 274: RC2REG = 0;
 24424                           
 24425                           ; BSR set to: 0
 24426  01599A  0E00               	movlw	0
 24427  01599C  010E               	movlb	14	; () banked
 24428  01599E  6FF1               	movwf	241,b	;volatile
 24429  0159A0  0012               	return	
 24430  0159A2                     __end_of_EUSART2_Receive_ISR:
 24431                           	opt stack 0
 24432                           tosu	equ	0xFFF
 24433                           tosh	equ	0xFFE
 24434                           tosl	equ	0xFFD
 24435                           pclatu	equ	0xFFB
 24436                           pclath	equ	0xFFA
 24437                           tblptru	equ	0xFF8
 24438                           tblptrh	equ	0xFF7
 24439                           tblptrl	equ	0xFF6
 24440                           tablat	equ	0xFF5
 24441                           prodh	equ	0xFF4
 24442                           prodl	equ	0xFF3
 24443                           intcon	equ	0xFF2
 24444                           indf0	equ	0xFEF
 24445                           postinc0	equ	0xFEE
 24446                           fsr0h	equ	0xFEA
 24447                           fsr0l	equ	0xFE9
 24448                           wreg	equ	0xFE8
 24449                           indf1	equ	0xFE7
 24450                           postdec1	equ	0xFE5
 24451                           plusw1	equ	0xFE3
 24452                           fsr1h	equ	0xFE2
 24453                           fsr1l	equ	0xFE1
 24454                           bsr	equ	0xFE0
 24455                           indf2	equ	0xFDF
 24456                           postinc2	equ	0xFDE
 24457                           postdec2	equ	0xFDD
 24458                           plusw2	equ	0xFDB
 24459                           fsr2h	equ	0xFDA
 24460                           fsr2l	equ	0xFD9
 24461                           status	equ	0xFD8
 24462                           
 24463 ;; *************** function i2_printf *****************
 24464 ;; Defined at:
 24465 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 24466 ;; Parameters:    Size  Location     Type
 24467 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 24468 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(37), 
 24469 ;;		 -> STR_115(33), STR_114(2031), STR_112(53), STR_110(58), 
 24470 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 24471 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 24472 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 24473 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 24474 ;;		 -> STR_81(34), STR_79(34), STR_77(35), STR_75(45), 
 24475 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 24476 ;;		 -> STR_59(49), STR_58(64), STR_56(34), STR_54(82), 
 24477 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 24478 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 24479 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 24480 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 24481 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;  printf          4   35[BANK0 ] unsigned long 
 24484 ;;  printf          4   28[BANK0 ] struct .
 24485 ;;  printf          3   32[BANK0 ] struct .
 24486 ;;  printf          2   39[BANK0 ] int 
 24487 ;;  printf          2   26[BANK0 ] int 
 24488 ;;  printf          2   24[BANK0 ] unsigned short 
 24489 ;;  printf          2   22[BANK0 ] PTR void [1]
 24490 ;;		 -> ?i2_printf(2), ?_printf(2), 
 24491 ;;  printf          2   20[BANK0 ] PTR const unsigned char 
 24492 ;;		 -> STR_135(7), printf@c(1), STR_134(30), STR_133(22), 
 24493 ;;		 -> STR_132(21), STR_131(27), STR_130(29), STR_129(41), 
 24494 ;;		 -> STR_128(28), STR_127(32), STR_126(25), STR_125(19), 
 24495 ;;		 -> STR_124(16), STR_123(15), RAM(3561), ringBufferLUT@channel_name(22), 
 24496 ;;		 -> TRIAC_Firing_Angle(3), 
 24497 ;;  printf          2   18[BANK0 ] unsigned int 
 24498 ;;  printf          2    0        int 
 24499 ;;  printf          1   41[BANK0 ] char 
 24500 ;;  printf          1   17[BANK0 ] unsigned char 
 24501 ;;  printf          1    0        unsigned char 
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  2    6[BANK0 ] int 
 24504 ;; Registers used:
 24505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24512 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24513 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24514 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24515 ;;Total ram usage:       36 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:    3
 24518 ;; This function calls:
 24519 ;;		i2___awdiv
 24520 ;;		i2___ftadd
 24521 ;;		i2___ftge
 24522 ;;		i2___ftmul
 24523 ;;		i2___ftneg
 24524 ;;		i2___ftsub
 24525 ;;		i2___fttol
 24526 ;;		i2___lldiv
 24527 ;;		i2___llmod
 24528 ;;		i2___lltoft
 24529 ;;		i2___wmul
 24530 ;;		i2__div_to_l_
 24531 ;;		i2__tdiv_to_l_
 24532 ;;		i2_fround
 24533 ;;		i2_isdigit
 24534 ;;		i2_putch
 24535 ;;		i2_scale
 24536 ;; This function is called by:
 24537 ;;		_EUSART2_Receive_ISR
 24538 ;; This function uses a non-reentrant model
 24539 ;;
 24540                           
 24541                           	psect	text91
 24542  01181A                     __ptext91:
 24543                           	opt stack 0
 24544  01181A                     i2_printf:
 24545                           	opt stack 13
 24546                           
 24547                           ;doprnt.c: 466: va_list ap;
 24548                           ;doprnt.c: 499: signed char c;
 24549                           ;doprnt.c: 501: int width;
 24550                           ;doprnt.c: 504: int prec;
 24551                           ;doprnt.c: 508: unsigned short flag;
 24552                           ;doprnt.c: 515: char d;
 24553                           ;doprnt.c: 516: double fval;
 24554                           ;doprnt.c: 517: int exp;
 24555                           ;doprnt.c: 523: union {
 24556                           ;doprnt.c: 524: unsigned long vd;
 24557                           ;doprnt.c: 525: double integ;
 24558                           ;doprnt.c: 526: } tmpval;
 24559                           ;doprnt.c: 528: unsigned long val;
 24560                           ;doprnt.c: 529: unsigned len;
 24561                           ;doprnt.c: 530: const char * cp;
 24562                           ;doprnt.c: 533: *ap = __va_start();
 24563                           
 24564                           ; BSR set to: 14
 24565                           ;incstack = 0
 24566  01181A  0E68               	movlw	low (?i2_printf+2)
 24567  01181C  0100               	movlb	0	; () banked
 24568  01181E  6F76               	movwf	i2printf@ap& (0+255),b
 24569  011820  0E00               	movlw	high (?i2_printf+2)
 24570  011822  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 24571                           
 24572                           ;doprnt.c: 536: while(c = *f++) {
 24573  011824  EF48  F091         	goto	i2u1953_40
 24574  011828                     
 24575                           ; BSR set to: 0
 24576                           ;doprnt.c: 538: if(c != '%')
 24577                           
 24578                           ; BSR set to: 0
 24579  011828  0E25               	movlw	37
 24580  01182A  1989               	xorwf	i2printf@c& (0+255),w,b
 24581  01182C  B4D8               	btfsc	status,2,c
 24582  01182E  D005               	goto	i2l1368
 24583                           
 24584                           ; BSR set to: 0
 24585                           ;doprnt.c: 540: {
 24586                           ;doprnt.c: 541: (putch(c) );
 24587  011830  5189               	movf	i2printf@c& (0+255),w,b
 24588  011832  EC95  F0B8         	call	i2_putch
 24589                           
 24590                           ;doprnt.c: 542: continue;
 24591  011836  EF48  F091         	goto	i2u1953_40
 24592  01183A                     i2l1368:
 24593                           
 24594                           ;doprnt.c: 543: }
 24595                           ;doprnt.c: 548: flag = 0;
 24596  01183A  0E00               	movlw	0
 24597  01183C  0100               	movlb	0	; () banked
 24598  01183E  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 24599  011840  0E00               	movlw	0
 24600  011842  6F78               	movwf	i2printf@flag& (0+255),b
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;doprnt.c: 611: if(*f == '.') {
 24604  011844  C066  FFF6         	movff	i2printf@f,tblptrl
 24605  011848  C067  FFF7         	movff	i2printf@f+1,tblptrh
 24606  01184C  0E00               	movlw	low (__mediumconst shr (0+16))
 24607  01184E  6EF8               	movwf	tblptru,c
 24608  011850  0E0D               	movlw	(high __ramtop+-1)
 24609  011852  64F7               	cpfsgt	tblptrh,c
 24610  011854  D003               	bra	i2u1903_47
 24611  011856  0008               	tblrd		*
 24612  011858  50F5               	movf	tablat,w,c
 24613  01185A  D005               	bra	i2u1903_40
 24614  01185C                     i2u1903_47:
 24615  01185C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24616  011860  CFF7 FFEA          	movff	tblptrh,fsr0h
 24617  011864  50EF               	movf	indf0,w,c
 24618  011866                     i2u1903_40:
 24619  011866  0A2E               	xorlw	46
 24620  011868  A4D8               	btfss	status,2,c
 24621  01186A  D048               	goto	i2l1369
 24622                           
 24623                           ;doprnt.c: 612: flag |= 0x4000;
 24624  01186C  0100               	movlb	0	; () banked
 24625  01186E  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 24626                           
 24627                           ;doprnt.c: 613: f++;
 24628  011870  4B66               	infsnz	i2printf@f& (0+255),f,b
 24629  011872  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24630                           
 24631                           ; BSR set to: 0
 24632                           ;doprnt.c: 620: {
 24633                           ;doprnt.c: 621: prec = 0;
 24634  011874  0E00               	movlw	0
 24635  011876  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24636  011878  0E00               	movlw	0
 24637  01187A  6F87               	movwf	i2printf@prec& (0+255),b
 24638                           
 24639                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 24640  01187C  D029               	goto	i2l1370
 24641  01187E                     
 24642                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 24643                           
 24644                           ; BSR set to: 0
 24645  01187E  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 24646  011882  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 24647  011886  0E00               	movlw	0
 24648  011888  6E12               	movwf	i2___wmul@multiplicand+1,c
 24649  01188A  0E0A               	movlw	10
 24650  01188C  6E11               	movwf	i2___wmul@multiplicand,c
 24651  01188E  EC69  F0B7         	call	i2___wmul	;wreg free
 24652  011892  C066  FFF6         	movff	i2printf@f,tblptrl
 24653  011896  C067  FFF7         	movff	i2printf@f+1,tblptrh
 24654  01189A  0E00               	movlw	low (__mediumconst shr (0+16))
 24655  01189C  6EF8               	movwf	tblptru,c
 24656  01189E  0E0D               	movlw	(high __ramtop+-1)
 24657  0118A0  64F7               	cpfsgt	tblptrh,c
 24658  0118A2  D003               	bra	i2u1905_47
 24659  0118A4  0008               	tblrd		*
 24660  0118A6  50F5               	movf	tablat,w,c
 24661  0118A8  D005               	bra	i2u1905_40
 24662  0118AA                     i2u1905_47:
 24663  0118AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 24664  0118AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 24665  0118B2  50EF               	movf	indf0,w,c
 24666  0118B4                     i2u1905_40:
 24667  0118B4  0100               	movlb	0	; () banked
 24668  0118B6  6F68               	movwf	??i2_printf& (0+255),b
 24669  0118B8  5168               	movf	??i2_printf& (0+255),w,b
 24670  0118BA  260F               	addwf	?i2___wmul,f,c
 24671  0118BC  0E00               	movlw	0
 24672  0118BE  2210               	addwfc	?i2___wmul+1,f,c
 24673  0118C0  0ED0               	movlw	208
 24674  0118C2  240F               	addwf	?i2___wmul,w,c
 24675  0118C4  6F87               	movwf	i2printf@prec& (0+255),b
 24676  0118C6  0EFF               	movlw	255
 24677  0118C8  2010               	addwfc	?i2___wmul+1,w,c
 24678  0118CA  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24679                           
 24680                           ; BSR set to: 0
 24681  0118CC  4B66               	infsnz	i2printf@f& (0+255),f,b
 24682  0118CE  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24683  0118D0                     i2l1370:
 24684                           
 24685                           ; BSR set to: 0
 24686                           
 24687                           ; BSR set to: 0
 24688  0118D0  C066  FFF6         	movff	i2printf@f,tblptrl
 24689  0118D4  C067  FFF7         	movff	i2printf@f+1,tblptrh
 24690  0118D8  0E00               	movlw	low (__mediumconst shr (0+16))
 24691  0118DA  6EF8               	movwf	tblptru,c
 24692  0118DC  0E0D               	movlw	(high __ramtop+-1)
 24693  0118DE  64F7               	cpfsgt	tblptrh,c
 24694  0118E0  D003               	bra	i2u1906_47
 24695  0118E2  0008               	tblrd		*
 24696  0118E4  50F5               	movf	tablat,w,c
 24697  0118E6  D005               	bra	i2u1906_40
 24698  0118E8                     i2u1906_47:
 24699  0118E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 24700  0118EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 24701  0118F0  50EF               	movf	indf0,w,c
 24702  0118F2                     i2u1906_40:
 24703  0118F2  ECC1  F0B7         	call	i2_isdigit
 24704  0118F6  A0D8               	btfss	status,0,c
 24705  0118F8  D07E               	goto	i2l1374
 24706  0118FA  D7C1               	goto	i2l1371
 24707  0118FC                     i2l1369:
 24708                           
 24709                           ;doprnt.c: 626: prec = 0;
 24710  0118FC  0E00               	movlw	0
 24711  0118FE  0100               	movlb	0	; () banked
 24712  011900  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24713  011902  0E00               	movlw	0
 24714  011904  6F87               	movwf	i2printf@prec& (0+255),b
 24715                           
 24716                           ; BSR set to: 0
 24717                           ;doprnt.c: 628: flag |= 0x1000;
 24718  011906  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;doprnt.c: 630: }
 24722                           ;doprnt.c: 635: switch(c = *f++) {
 24723  011908  D076               	goto	i2l1374
 24724  01190A                     
 24725                           ; BSR set to: 0
 24726                           ;doprnt.c: 663: flag |= 0x400;
 24727                           
 24728                           ; BSR set to: 0
 24729  01190A  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 24730                           
 24731                           ; BSR set to: 0
 24732                           ;doprnt.c: 698: case 'i':
 24733                           ;doprnt.c: 699: break;
 24734                           
 24735                           ; BSR set to: 0
 24736                           
 24737                           ;doprnt.c: 697: case 'd':
 24738                           
 24739                           ;doprnt.c: 664: break;
 24740  01190C  D0A8               	goto	i2l1378
 24741  01190E                     
 24742                           ; BSR set to: 0
 24743                           ;doprnt.c: 718: case 'x':
 24744                           ;doprnt.c: 721: flag |= 0x80;
 24745                           
 24746                           ; BSR set to: 0
 24747                           
 24748                           ; BSR set to: 0
 24749  01190E  8F78               	bsf	i2printf@flag& (0+255),7,b
 24750                           
 24751                           ;doprnt.c: 723: break;
 24752  011910  D0A6               	goto	i2l1378
 24753  011912                     
 24754                           ; BSR set to: 0
 24755                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24756                           
 24757                           ; BSR set to: 0
 24758  011912  C076  FFD9         	movff	i2printf@ap,fsr2l
 24759  011916  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 24760  01191A  CFDE F074          	movff	postinc2,i2printf@cp
 24761  01191E  CFDD F075          	movff	postdec2,i2printf@cp+1
 24762                           
 24763                           ; BSR set to: 0
 24764  011922  0E02               	movlw	2
 24765  011924  2776               	addwf	i2printf@ap& (0+255),f,b
 24766  011926  0E00               	movlw	0
 24767  011928  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24768                           
 24769                           ; BSR set to: 0
 24770                           ;doprnt.c: 740: if(!cp)
 24771  01192A  5174               	movf	i2printf@cp& (0+255),w,b
 24772  01192C  1175               	iorwf	(i2printf@cp+1)& (0+255),w,b
 24773  01192E  A4D8               	btfss	status,2,c
 24774  011930  D004               	goto	i2l1384
 24775                           
 24776                           ; BSR set to: 0
 24777                           ;doprnt.c: 741: cp = "(null)";
 24778  011932  0E85               	movlw	low STR_135
 24779  011934  6F74               	movwf	i2printf@cp& (0+255),b
 24780  011936  0EFF               	movlw	high STR_135
 24781  011938  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 24782  01193A                     i2l1384:
 24783                           
 24784                           ; BSR set to: 0
 24785                           ;doprnt.c: 745: len = 0;
 24786                           
 24787                           ; BSR set to: 0
 24788  01193A  0E00               	movlw	0
 24789  01193C  6F73               	movwf	(i2printf@len+1)& (0+255),b
 24790  01193E  0E00               	movlw	0
 24791  011940  6F72               	movwf	i2printf@len& (0+255),b
 24792                           
 24793                           ;doprnt.c: 746: while(cp[len])
 24794  011942  D003               	goto	i2l1385
 24795  011944                     
 24796                           ;doprnt.c: 747: len++;
 24797                           
 24798                           ; BSR set to: 0
 24799  011944  0100               	movlb	0	; () banked
 24800  011946  4B72               	infsnz	i2printf@len& (0+255),f,b
 24801  011948  2B73               	incf	(i2printf@len+1)& (0+255),f,b
 24802  01194A                     i2l1385:
 24803                           
 24804                           ; BSR set to: 0
 24805                           
 24806                           ; BSR set to: 0
 24807  01194A  5172               	movf	i2printf@len& (0+255),w,b
 24808  01194C  2574               	addwf	i2printf@cp& (0+255),w,b
 24809  01194E  6F68               	movwf	??i2_printf& (0+255),b
 24810  011950  5173               	movf	(i2printf@len+1)& (0+255),w,b
 24811  011952  2175               	addwfc	(i2printf@cp+1)& (0+255),w,b
 24812  011954  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24813  011956  C068  FFF6         	movff	??i2_printf,tblptrl
 24814  01195A  C069  FFF7         	movff	??i2_printf+1,tblptrh
 24815  01195E  0E00               	movlw	low (__mediumconst shr (0+16))
 24816  011960  6EF8               	movwf	tblptru,c
 24817  011962  0E0D               	movlw	(high __ramtop+-1)
 24818  011964  64F7               	cpfsgt	tblptrh,c
 24819  011966  D003               	bra	i2u1909_47
 24820  011968  0008               	tblrd		*
 24821  01196A  50F5               	movf	tablat,w,c
 24822  01196C  D005               	bra	i2u1909_40
 24823  01196E                     i2u1909_47:
 24824  01196E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24825  011972  CFF7 FFEA          	movff	tblptrh,fsr0h
 24826  011976  50EF               	movf	indf0,w,c
 24827  011978                     i2u1909_40:
 24828  011978  0900               	iorlw	0
 24829  01197A  A4D8               	btfss	status,2,c
 24830  01197C  D7E3               	goto	i2l1386
 24831  01197E                     i2u1910_40:
 24832                           
 24833                           ;doprnt.c: 753: if(prec && prec < len)
 24834                           
 24835                           ;doprnt.c: 750: dostring:
 24836  01197E  0100               	movlb	0	; () banked
 24837  011980  5187               	movf	i2printf@prec& (0+255),w,b
 24838  011982  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 24839  011984  B4D8               	btfsc	status,2,c
 24840  011986  D021               	goto	i2l1390
 24841                           
 24842                           ; BSR set to: 0
 24843  011988  5172               	movf	i2printf@len& (0+255),w,b
 24844  01198A  5D87               	subwf	i2printf@prec& (0+255),w,b
 24845  01198C  5173               	movf	(i2printf@len+1)& (0+255),w,b
 24846  01198E  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 24847  011990  B0D8               	btfsc	status,0,c
 24848  011992  D01B               	goto	i2l1390
 24849                           
 24850                           ; BSR set to: 0
 24851                           ;doprnt.c: 754: len = prec;
 24852  011994  C087  F072         	movff	i2printf@prec,i2printf@len
 24853  011998  C088  F073         	movff	i2printf@prec+1,i2printf@len+1
 24854                           
 24855                           ; BSR set to: 0
 24856                           ;doprnt.c: 767: while(len--)
 24857  01199C  D016               	goto	i2l1390
 24858  01199E                     i2l14926:
 24859                           
 24860                           ; BSR set to: 0
 24861                           ;doprnt.c: 768: (putch(*cp++) );
 24862  01199E  C074  FFF6         	movff	i2printf@cp,tblptrl
 24863  0119A2  C075  FFF7         	movff	i2printf@cp+1,tblptrh
 24864  0119A6  0E00               	movlw	low (__mediumconst shr (0+16))
 24865  0119A8  6EF8               	movwf	tblptru,c
 24866  0119AA  0E0D               	movlw	(high __ramtop+-1)
 24867  0119AC  64F7               	cpfsgt	tblptrh,c
 24868  0119AE  D003               	bra	i2u1913_47
 24869  0119B0  0008               	tblrd		*
 24870  0119B2  50F5               	movf	tablat,w,c
 24871  0119B4  D005               	bra	i2u1913_40
 24872  0119B6                     i2u1913_47:
 24873  0119B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 24874  0119BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 24875  0119BE  50EF               	movf	indf0,w,c
 24876  0119C0                     i2u1913_40:
 24877  0119C0  EC95  F0B8         	call	i2_putch
 24878  0119C4  0100               	movlb	0	; () banked
 24879  0119C6  4B74               	infsnz	i2printf@cp& (0+255),f,b
 24880  0119C8  2B75               	incf	(i2printf@cp+1)& (0+255),f,b
 24881  0119CA                     i2l1390:
 24882                           
 24883                           ; BSR set to: 0
 24884                           
 24885                           ; BSR set to: 0
 24886  0119CA  0772               	decf	i2printf@len& (0+255),f,b
 24887  0119CC  A0D8               	btfss	status,0,c
 24888  0119CE  0773               	decf	(i2printf@len+1)& (0+255),f,b
 24889  0119D0  2972               	incf	i2printf@len& (0+255),w,b
 24890  0119D2  E1E5               	bnz	i2l14926
 24891  0119D4  2973               	incf	(i2printf@len+1)& (0+255),w,b
 24892  0119D6  B4D8               	btfsc	status,2,c
 24893  0119D8  EF48  F091         	goto	i2u1953_40
 24894  0119DC  D7E0               	goto	i2l1391
 24895  0119DE                     
 24896                           ; BSR set to: 0
 24897                           ;doprnt.c: 805: cp = (char *)&c;
 24898                           
 24899                           ; BSR set to: 0
 24900  0119DE  0E89               	movlw	low i2printf@c
 24901  0119E0  6F74               	movwf	i2printf@cp& (0+255),b
 24902  0119E2  0E00               	movlw	high i2printf@c
 24903  0119E4  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 24904                           
 24905                           ; BSR set to: 0
 24906                           ;doprnt.c: 806: len = 1;
 24907  0119E6  0E00               	movlw	0
 24908  0119E8  6F73               	movwf	(i2printf@len+1)& (0+255),b
 24909  0119EA  0E01               	movlw	1
 24910  0119EC  6F72               	movwf	i2printf@len& (0+255),b
 24911                           
 24912                           ;doprnt.c: 807: goto dostring;
 24913  0119EE  D7C7               	goto	i2u1910_40
 24914  0119F0                     
 24915                           ; BSR set to: 0
 24916                           ;doprnt.c: 818: flag |= 0xC0;
 24917                           
 24918                           ; BSR set to: 0
 24919  0119F0  0EC0               	movlw	192
 24920  0119F2  1378               	iorwf	i2printf@flag& (0+255),f,b
 24921                           
 24922                           ; BSR set to: 0
 24923                           ;doprnt.c: 822: }
 24924                           
 24925                           ;doprnt.c: 819: break;
 24926  0119F4  D034               	goto	i2l1378
 24927  0119F6                     i2l1374:
 24928                           
 24929                           ; BSR set to: 0
 24930  0119F6  0100               	movlb	0	; () banked
 24931  0119F8  5166               	movf	i2printf@f& (0+255),w,b
 24932  0119FA  6F68               	movwf	??i2_printf& (0+255),b
 24933  0119FC  5167               	movf	(i2printf@f+1)& (0+255),w,b
 24934  0119FE  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24935  011A00  4B66               	infsnz	i2printf@f& (0+255),f,b
 24936  011A02  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24937  011A04  C068  FFF6         	movff	??i2_printf,tblptrl
 24938  011A08  C069  FFF7         	movff	??i2_printf+1,tblptrh
 24939  011A0C  0E00               	movlw	low (__mediumconst shr (0+16))
 24940  011A0E  6EF8               	movwf	tblptru,c
 24941  011A10  0E0D               	movlw	(high __ramtop+-1)
 24942  011A12  64F7               	cpfsgt	tblptrh,c
 24943  011A14  D003               	bra	i2u1915_47
 24944  011A16  0008               	tblrd		*
 24945  011A18  50F5               	movf	tablat,w,c
 24946  011A1A  D005               	bra	i2u1915_40
 24947  011A1C                     i2u1915_47:
 24948  011A1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24949  011A20  CFF7 FFEA          	movff	tblptrh,fsr0h
 24950  011A24  50EF               	movf	indf0,w,c
 24951  011A26                     i2u1915_40:
 24952  011A26  0100               	movlb	0	; () banked
 24953  011A28  6F89               	movwf	i2printf@c& (0+255),b
 24954  011A2A  5189               	movf	i2printf@c& (0+255),w,b
 24955                           
 24956                           ; Switch size 1, requested type "space"
 24957                           ; Number of cases is 8, Range of values is 0 to 120
 24958                           ; switch strategies available:
 24959                           ; Name         Instructions Cycles
 24960                           ; simple_byte           25    13 (average)
 24961                           ;	Chosen strategy is simple_byte
 24962  011A2C  0A00               	xorlw	0	; case 0
 24963  011A2E  B4D8               	btfsc	status,2,c
 24964  011A30  0012               	return	
 24965  011A32  0A58               	xorlw	88	; case 88
 24966  011A34  B4D8               	btfsc	status,2,c
 24967  011A36  D76B               	goto	i2l1381
 24968  011A38  0A3C               	xorlw	60	; case 100
 24969  011A3A  B4D8               	btfsc	status,2,c
 24970  011A3C  D010               	goto	i2l1378
 24971  011A3E  0A02               	xorlw	2	; case 102
 24972  011A40  B4D8               	btfsc	status,2,c
 24973  011A42  D763               	goto	i2l1377
 24974  011A44  0A0F               	xorlw	15	; case 105
 24975  011A46  B4D8               	btfsc	status,2,c
 24976  011A48  D00A               	goto	i2l1378
 24977  011A4A  0A1A               	xorlw	26	; case 115
 24978  011A4C  B4D8               	btfsc	status,2,c
 24979  011A4E  D761               	goto	i2l1383
 24980  011A50  0A06               	xorlw	6	; case 117
 24981  011A52  B4D8               	btfsc	status,2,c
 24982  011A54  D7CD               	goto	i2l1394
 24983  011A56  0A0D               	xorlw	13	; case 120
 24984  011A58  B4D8               	btfsc	status,2,c
 24985  011A5A  D759               	goto	i2l1381
 24986  011A5C  D7C0               	goto	i2l1393
 24987  011A5E                     i2l1378:
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;doprnt.c: 825: if(flag & (0x700)) {
 24991                           
 24992                           ; BSR set to: 0
 24993  011A5E  0E07               	movlw	7
 24994  011A60  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 24995  011A62  B4D8               	btfsc	status,2,c
 24996  011A64  D2C0               	goto	i2l1395
 24997                           
 24998                           ; BSR set to: 0
 24999                           ;doprnt.c: 827: if(flag & 0x1000)
 25000  011A66  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 25001  011A68  D004               	goto	i2l1396
 25002                           
 25003                           ; BSR set to: 0
 25004                           ;doprnt.c: 829: prec = 6;
 25005  011A6A  0E00               	movlw	0
 25006  011A6C  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 25007  011A6E  0E06               	movlw	6
 25008  011A70  6F87               	movwf	i2printf@prec& (0+255),b
 25009  011A72                     i2l1396:
 25010                           
 25011                           ; BSR set to: 0
 25012                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25013                           
 25014                           ; BSR set to: 0
 25015  011A72  C076  FFD9         	movff	i2printf@ap,fsr2l
 25016  011A76  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 25017  011A7A  CFDE F080          	movff	postinc2,i2printf@fval
 25018  011A7E  CFDE F081          	movff	postinc2,i2printf@fval+1
 25019  011A82  CFDD F082          	movff	postdec2,i2printf@fval+2
 25020                           
 25021                           ; BSR set to: 0
 25022  011A86  0E03               	movlw	3
 25023  011A88  2776               	addwf	i2printf@ap& (0+255),f,b
 25024  011A8A  0E00               	movlw	0
 25025  011A8C  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25026                           
 25027                           ; BSR set to: 0
 25028                           ;doprnt.c: 831: if(fval < 0.0) {
 25029  011A8E  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 25030  011A90  D011               	goto	i2l1397
 25031                           
 25032                           ; BSR set to: 0
 25033                           ;doprnt.c: 832: fval = -fval;
 25034  011A92  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 25035  011A96  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 25036  011A9A  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 25037  011A9E  EC7C  F0B7         	call	i2___ftneg	;wreg free
 25038  011AA2  C024  F080         	movff	?i2___ftneg,i2printf@fval
 25039  011AA6  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 25040  011AAA  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 25041                           
 25042                           ;doprnt.c: 833: flag |= 0x03;
 25043  011AAE  0E03               	movlw	3
 25044  011AB0  0100               	movlb	0	; () banked
 25045  011AB2  1378               	iorwf	i2printf@flag& (0+255),f,b
 25046  011AB4                     i2l1397:
 25047                           
 25048                           ; BSR set to: 0
 25049                           ;doprnt.c: 834: }
 25050                           ;doprnt.c: 835: exp = 0;
 25051                           
 25052                           ; BSR set to: 0
 25053  011AB4  0E00               	movlw	0
 25054  011AB6  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 25055  011AB8  0E00               	movlw	0
 25056  011ABA  6F7A               	movwf	i2printf@exp& (0+255),b
 25057                           
 25058                           ; BSR set to: 0
 25059                           ;doprnt.c: 836: if( fval!=0) {
 25060  011ABC  5180               	movf	i2printf@fval& (0+255),w,b
 25061  011ABE  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25062  011AC0  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25063  011AC2  B4D8               	btfsc	status,2,c
 25064  011AC4  D086               	goto	i2l1402
 25065                           
 25066                           ; BSR set to: 0
 25067                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 25068  011AC6  0E82               	movlw	130
 25069  011AC8  6F68               	movwf	??i2_printf& (0+255),b
 25070  011ACA  0EFF               	movlw	255
 25071  011ACC  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25072  011ACE  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 25073  011AD2  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 25074  011AD6  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 25075  011ADA  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 25076  011ADE  0E10               	movlw	16
 25077  011AE0  D005               	goto	i2u1920_40
 25078  011AE2                     i2u1920_45:
 25079  011AE2  90D8               	bcf	status,0,c
 25080  011AE4  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 25081  011AE6  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 25082  011AE8  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 25083  011AEA  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 25084  011AEC                     i2u1920_40:
 25085  011AEC  2EE8               	decfsz	wreg,f,c
 25086  011AEE  D7F9               	goto	i2u1920_45
 25087  011AF0  516A               	movf	(??i2_printf+2)& (0+255),w,b
 25088  011AF2  2568               	addwf	??i2_printf& (0+255),w,b
 25089  011AF4  6F7A               	movwf	i2printf@exp& (0+255),b
 25090  011AF6  0E00               	movlw	0
 25091  011AF8  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 25092  011AFA  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 25093                           
 25094                           ; BSR set to: 0
 25095                           ;doprnt.c: 838: exp--;
 25096  011AFC  077A               	decf	i2printf@exp& (0+255),f,b
 25097  011AFE  A0D8               	btfss	status,0,c
 25098  011B00  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 25099                           
 25100                           ; BSR set to: 0
 25101                           ;doprnt.c: 839: exp *= 3;
 25102  011B02  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 25103  011B06  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 25104  011B0A  0E00               	movlw	0
 25105  011B0C  6E12               	movwf	i2___wmul@multiplicand+1,c
 25106  011B0E  0E03               	movlw	3
 25107  011B10  6E11               	movwf	i2___wmul@multiplicand,c
 25108  011B12  EC69  F0B7         	call	i2___wmul	;wreg free
 25109  011B16  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 25110  011B1A  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 25111                           
 25112                           ;doprnt.c: 840: exp /= 10;
 25113  011B1E  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 25114  011B22  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 25115  011B26  0E00               	movlw	0
 25116  011B28  6E0A               	movwf	i2___awdiv@divisor+1,c
 25117  011B2A  0E0A               	movlw	10
 25118  011B2C  6E09               	movwf	i2___awdiv@divisor,c
 25119  011B2E  ECFE  F0AF         	call	i2___awdiv	;wreg free
 25120  011B32  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 25121  011B36  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 25122                           
 25123                           ;doprnt.c: 841: if(exp < 0)
 25124  011B3A  0100               	movlb	0	; () banked
 25125  011B3C  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 25126  011B3E  D003               	goto	i2l1399
 25127                           
 25128                           ; BSR set to: 0
 25129                           ;doprnt.c: 842: exp--;
 25130  011B40  077A               	decf	i2printf@exp& (0+255),f,b
 25131  011B42  A0D8               	btfss	status,0,c
 25132  011B44  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 25133  011B46                     i2l1399:
 25134                           
 25135                           ; BSR set to: 0
 25136                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25137                           
 25138                           ; BSR set to: 0
 25139  011B46  517A               	movf	i2printf@exp& (0+255),w,b
 25140  011B48  0800               	sublw	0
 25141  011B4A  ECE3  F096         	call	i2_scale
 25142  011B4E  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 25143  011B52  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 25144  011B56  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 25145                           
 25146                           ;doprnt.c: 847: tmpval.integ *= fval;
 25147  011B5A  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 25148  011B5E  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 25149  011B62  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 25150  011B66  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 25151  011B6A  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 25152  011B6E  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 25153  011B72  EC40  F0A8         	call	i2___ftmul	;wreg free
 25154  011B76  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 25155  011B7A  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 25156  011B7E  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 25157                           
 25158                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25159  011B82  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 25160  011B86  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 25161  011B8A  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 25162  011B8E  0E00               	movlw	0
 25163  011B90  6E2D               	movwf	i2___ftge@ff2,c
 25164  011B92  0E80               	movlw	128
 25165  011B94  6E2E               	movwf	i2___ftge@ff2+1,c
 25166  011B96  0E3F               	movlw	63
 25167  011B98  6E2F               	movwf	i2___ftge@ff2+2,c
 25168  011B9A  EC5F  F0AE         	call	i2___ftge	;wreg free
 25169  011B9E  B0D8               	btfsc	status,0,c
 25170  011BA0  D005               	goto	i2l1400
 25171                           
 25172                           ;doprnt.c: 849: exp--;
 25173  011BA2  0100               	movlb	0	; () banked
 25174  011BA4  077A               	decf	i2printf@exp& (0+255),f,b
 25175  011BA6  A0D8               	btfss	status,0,c
 25176  011BA8  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 25177  011BAA  D013               	goto	i2l1402
 25178  011BAC                     i2l1400:
 25179                           
 25180                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25181                           
 25182                           ; BSR set to: 0
 25183  011BAC  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 25184  011BB0  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 25185  011BB4  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 25186  011BB8  0E00               	movlw	0
 25187  011BBA  6E2D               	movwf	i2___ftge@ff2,c
 25188  011BBC  0E20               	movlw	32
 25189  011BBE  6E2E               	movwf	i2___ftge@ff2+1,c
 25190  011BC0  0E41               	movlw	65
 25191  011BC2  6E2F               	movwf	i2___ftge@ff2+2,c
 25192  011BC4  EC5F  F0AE         	call	i2___ftge	;wreg free
 25193  011BC8  A0D8               	btfss	status,0,c
 25194  011BCA  D003               	goto	i2l1402
 25195                           
 25196                           ;doprnt.c: 851: exp++;
 25197  011BCC  0100               	movlb	0	; () banked
 25198  011BCE  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 25199  011BD0  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 25200  011BD2                     i2l1402:
 25201                           
 25202                           ;doprnt.c: 852: }
 25203                           ;doprnt.c: 1112: if(prec <= 12)
 25204                           
 25205                           ; BSR set to: 0
 25206                           
 25207                           ; BSR set to: 0
 25208                           
 25209                           ; BSR set to: 0
 25210  011BD2  0100               	movlb	0	; () banked
 25211  011BD4  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25212  011BD6  D006               	goto	i2u1924_40
 25213  011BD8  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25214  011BDA  E11B               	bnz	i2l14990
 25215  011BDC  0E0D               	movlw	13
 25216  011BDE  5D87               	subwf	i2printf@prec& (0+255),w,b
 25217  011BE0  B0D8               	btfsc	status,0,c
 25218  011BE2  D017               	goto	i2l1403
 25219  011BE4                     i2u1924_40:
 25220                           
 25221                           ; BSR set to: 0
 25222                           ;doprnt.c: 1113: fval += fround(prec);
 25223  011BE4  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 25224  011BE8  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 25225  011BEC  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 25226  011BF0  5187               	movf	i2printf@prec& (0+255),w,b
 25227  011BF2  EC09  F09C         	call	i2_fround
 25228  011BF6  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 25229  011BFA  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 25230  011BFE  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 25231  011C02  EC44  F0A2         	call	i2___ftadd	;wreg free
 25232  011C06  C040  F080         	movff	?i2___ftadd,i2printf@fval
 25233  011C0A  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 25234  011C0E  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 25235  011C12                     i2l1403:
 25236  011C12                     i2l14990:
 25237                           
 25238                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25239  011C12  0100               	movlb	0	; () banked
 25240  011C14  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25241  011C16  D006               	goto	i2u1925_40
 25242  011C18  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 25243  011C1A  E120               	bnz	i2l14998
 25244  011C1C  0E0A               	movlw	10
 25245  011C1E  5D7A               	subwf	i2printf@exp& (0+255),w,b
 25246  011C20  B0D8               	btfsc	status,0,c
 25247  011C22  D01C               	goto	i2u1928_40
 25248  011C24                     i2u1925_40:
 25249                           
 25250                           ; BSR set to: 0
 25251  011C24  5180               	movf	i2printf@fval& (0+255),w,b
 25252  011C26  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25253  011C28  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25254  011C2A  B4D8               	btfsc	status,2,c
 25255  011C2C  D056               	goto	i2l1404
 25256                           
 25257                           ; BSR set to: 0
 25258  011C2E  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 25259  011C32  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 25260  011C36  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 25261  011C3A  ECC6  F0A7         	call	i2___fttol	;wreg free
 25262  011C3E  503D               	movf	?i2___fttol,w,c
 25263  011C40  103E               	iorwf	?i2___fttol+1,w,c
 25264  011C42  103F               	iorwf	?i2___fttol+2,w,c
 25265  011C44  1040               	iorwf	?i2___fttol+3,w,c
 25266  011C46  A4D8               	btfss	status,2,c
 25267  011C48  D048               	goto	i2l1404
 25268  011C4A  0100               	movlb	0	; () banked
 25269  011C4C  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25270  011C4E  D045               	goto	i2l1404
 25271  011C50  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 25272  011C52  E104               	bnz	i2l14998
 25273  011C54  0E02               	movlw	2
 25274  011C56  5D7A               	subwf	i2printf@exp& (0+255),w,b
 25275  011C58  A0D8               	btfss	status,0,c
 25276  011C5A  D03F               	goto	i2l1404
 25277  011C5C                     i2u1928_40:
 25278  011C5C                     i2l14998:
 25279                           
 25280                           ; BSR set to: 0
 25281                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25282  011C5C  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 25283  011C60  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 25284  011C64  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 25285  011C68  0E70               	movlw	112
 25286  011C6A  6E2D               	movwf	i2___ftge@ff2,c
 25287  011C6C  0E89               	movlw	137
 25288  011C6E  6E2E               	movwf	i2___ftge@ff2+1,c
 25289  011C70  0E40               	movlw	64
 25290  011C72  6E2F               	movwf	i2___ftge@ff2+2,c
 25291  011C74  EC5F  F0AE         	call	i2___ftge	;wreg free
 25292  011C78  B0D8               	btfsc	status,0,c
 25293  011C7A  D003               	goto	i2l1407
 25294                           
 25295                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25296  011C7C  0100               	movlb	0	; () banked
 25297  011C7E  0EF7               	movlw	247
 25298  011C80  D002               	goto	L13
 25299  011C82                     i2l1407:
 25300                           
 25301                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25302                           
 25303                           ; BSR set to: 0
 25304  011C82  0100               	movlb	0	; () banked
 25305  011C84  0EF8               	movlw	248
 25306  011C86                     L13:
 25307  011C86  277A               	addwf	i2printf@exp& (0+255),f,b
 25308  011C88  0EFF               	movlw	255
 25309  011C8A  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25310                           
 25311                           ; BSR set to: 0
 25312                           ;doprnt.c: 1124: }
 25313                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 25314                           
 25315                           ; BSR set to: 0
 25316  011C8C  517A               	movf	i2printf@exp& (0+255),w,b
 25317  011C8E  ECE3  F096         	call	i2_scale
 25318  011C92  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 25319  011C96  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 25320  011C9A  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 25321                           
 25322                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25323  011C9E  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 25324  011CA2  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 25325  011CA6  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 25326  011CAA  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 25327  011CAE  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 25328  011CB2  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 25329  011CB6  EC7F  F0A4         	call	i2__tdiv_to_l_	;wreg free
 25330  011CBA  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 25331  011CBE  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 25332  011CC2  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 25333  011CC6  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 25334                           
 25335                           ;doprnt.c: 1129: fval = 0.0;
 25336  011CCA  0E00               	movlw	0
 25337  011CCC  0100               	movlb	0	; () banked
 25338  011CCE  6F80               	movwf	i2printf@fval& (0+255),b
 25339  011CD0  0E00               	movlw	0
 25340  011CD2  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 25341  011CD4  0E00               	movlw	0
 25342  011CD6  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 25343                           
 25344                           ;doprnt.c: 1130: } else {
 25345  011CD8  D033               	goto	i2l1413
 25346  011CDA                     i2l1404:
 25347                           
 25348                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25349                           
 25350                           ; BSR set to: 0
 25351  011CDA  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 25352  011CDE  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 25353  011CE2  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 25354  011CE6  ECC6  F0A7         	call	i2___fttol	;wreg free
 25355  011CEA  C03D  F083         	movff	?i2___fttol,i2printf@val
 25356  011CEE  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 25357  011CF2  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 25358  011CF6  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 25359                           
 25360                           ;doprnt.c: 1132: fval -= (double)val;
 25361  011CFA  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 25362  011CFE  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 25363  011D02  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 25364  011D06  C083  F009         	movff	i2printf@val,i2___lltoft@c
 25365  011D0A  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 25366  011D0E  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 25367  011D12  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 25368  011D16  EC75  F0B3         	call	i2___lltoft	;wreg free
 25369  011D1A  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 25370  011D1E  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 25371  011D22  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 25372  011D26  EC8F  F0B5         	call	i2___ftsub	;wreg free
 25373  011D2A  C060  F080         	movff	?i2___ftsub,i2printf@fval
 25374  011D2E  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 25375  011D32  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 25376                           
 25377                           ;doprnt.c: 1133: exp = 0;
 25378  011D36  0E00               	movlw	0
 25379  011D38  0100               	movlb	0	; () banked
 25380  011D3A  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 25381  011D3C  0E00               	movlw	0
 25382  011D3E  6F7A               	movwf	i2printf@exp& (0+255),b
 25383  011D40                     i2l1413:
 25384                           
 25385                           ; BSR set to: 0
 25386                           ;doprnt.c: 1134: }
 25387                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25388                           
 25389                           ; BSR set to: 0
 25390  011D40  0E01               	movlw	1
 25391  011D42  6F89               	movwf	i2printf@c& (0+255),b
 25392  011D44                     i2l15018:
 25393                           
 25394                           ; BSR set to: 0
 25395  011D44  0E0A               	movlw	10
 25396  011D46  1989               	xorwf	i2printf@c& (0+255),w,b
 25397  011D48  B4D8               	btfsc	status,2,c
 25398  011D4A  D01B               	goto	i2u1932_40
 25399                           
 25400                           ; BSR set to: 0
 25401                           ;doprnt.c: 1137: if(val < dpowers[c])
 25402                           
 25403                           ; BSR set to: 0
 25404                           
 25405                           ; BSR set to: 0
 25406  011D4C  5189               	movf	i2printf@c& (0+255),w,b
 25407  011D4E  0D04               	mullw	4
 25408  011D50  0E8F               	movlw	low _dpowers
 25409  011D52  24F3               	addwf	prodl,w,c
 25410  011D54  6EF6               	movwf	tblptrl,c
 25411  011D56  0EEB               	movlw	high _dpowers
 25412  011D58  20F4               	addwfc	prodh,w,c
 25413  011D5A  6EF7               	movwf	tblptrh,c
 25414  011D5C                     	if	1	;There are 3 active tblptr bytes
 25415  011D5C  6AF8               	clrf	tblptru,c
 25416  011D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 25417  011D60  22F8               	addwfc	tblptru,f,c
 25418  011D62                     	endif
 25419  011D62  0009               	tblrd		*+
 25420  011D64  50F5               	movf	tablat,w,c
 25421  011D66  5D83               	subwf	i2printf@val& (0+255),w,b
 25422  011D68  0009               	tblrd		*+
 25423  011D6A  50F5               	movf	tablat,w,c
 25424  011D6C  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25425  011D6E  0009               	tblrd		*+
 25426  011D70  50F5               	movf	tablat,w,c
 25427  011D72  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25428  011D74  0009               	tblrd		*+
 25429  011D76  50F5               	movf	tablat,w,c
 25430  011D78  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25431  011D7A  A0D8               	btfss	status,0,c
 25432  011D7C  D002               	goto	i2u1932_40
 25433                           
 25434                           ; BSR set to: 0
 25435                           
 25436                           ; BSR set to: 0
 25437                           
 25438                           ; BSR set to: 0
 25439                           ;doprnt.c: 1138: break;
 25440  011D7E  2B89               	incf	i2printf@c& (0+255),f,b
 25441  011D80  D7E1               	goto	i2l15018
 25442  011D82                     i2u1932_40:
 25443                           
 25444                           ; BSR set to: 0
 25445                           ;doprnt.c: 1175: {
 25446                           ;doprnt.c: 1188: if(flag & 0x03)
 25447                           
 25448                           ; BSR set to: 0
 25449  011D82  0E03               	movlw	3
 25450  011D84  1578               	andwf	i2printf@flag& (0+255),w,b
 25451  011D86  6F68               	movwf	??i2_printf& (0+255),b
 25452  011D88  0E00               	movlw	0
 25453  011D8A  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 25454  011D8C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25455  011D8E  5168               	movf	??i2_printf& (0+255),w,b
 25456  011D90  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 25457  011D92  B4D8               	btfsc	status,2,c
 25458  011D94  D04D               	goto	i2l1418
 25459                           
 25460                           ; BSR set to: 0
 25461                           ;doprnt.c: 1190: (putch('-') );
 25462  011D96  0E2D               	movlw	45
 25463  011D98  EC95  F0B8         	call	i2_putch
 25464                           
 25465                           ;doprnt.c: 1195: }
 25466                           ;doprnt.c: 1196: while(c--) {
 25467  011D9C  D049               	goto	i2l1418
 25468  011D9E                     
 25469                           ;doprnt.c: 1200: {
 25470                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 25471  011D9E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25472  011DA2  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25473  011DA6  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25474  011DAA  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25475  011DAE  0100               	movlb	0	; () banked
 25476  011DB0  5189               	movf	i2printf@c& (0+255),w,b
 25477  011DB2  0D04               	mullw	4
 25478  011DB4  0E8F               	movlw	low _dpowers
 25479  011DB6  24F3               	addwf	prodl,w,c
 25480  011DB8  6EF6               	movwf	tblptrl,c
 25481  011DBA  0EEB               	movlw	high _dpowers
 25482  011DBC  20F4               	addwfc	prodh,w,c
 25483  011DBE  6EF7               	movwf	tblptrh,c
 25484  011DC0                     	if	1	;There are 3 active tblptr bytes
 25485  011DC0  6AF8               	clrf	tblptru,c
 25486  011DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 25487  011DC4  22F8               	addwfc	tblptru,f,c
 25488  011DC6                     	endif
 25489  011DC6  0009               	tblrd		*+
 25490  011DC8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25491  011DCC  0009               	tblrd		*+
 25492  011DCE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25493  011DD2  0009               	tblrd		*+
 25494  011DD4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25495  011DD8  000A               	tblrd		*-
 25496  011DDA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25497  011DDE  EC40  F0B0         	call	i2___lldiv	;wreg free
 25498  011DE2  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 25499  011DE6  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25500  011DEA  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25501  011DEE  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25502                           
 25503                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25504  011DF2  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25505  011DF6  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25506  011DFA  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25507  011DFE  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25508  011E02  0E0A               	movlw	10
 25509  011E04  6E12               	movwf	i2___llmod@divisor,c
 25510  011E06  0E00               	movlw	0
 25511  011E08  6E13               	movwf	i2___llmod@divisor+1,c
 25512  011E0A  0E00               	movlw	0
 25513  011E0C  6E14               	movwf	i2___llmod@divisor+2,c
 25514  011E0E  0E00               	movlw	0
 25515  011E10  6E15               	movwf	i2___llmod@divisor+3,c
 25516  011E12  EC82  F0B2         	call	i2___llmod	;wreg free
 25517  011E16  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 25518  011E1A  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 25519  011E1E  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 25520  011E22  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 25521                           
 25522                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 25523  011E26  0100               	movlb	0	; () banked
 25524  011E28  517C               	movf	i2printf@tmpval& (0+255),w,b
 25525  011E2A  0F30               	addlw	48
 25526  011E2C  EC95  F0B8         	call	i2_putch
 25527  011E30                     i2l1418:
 25528  011E30  0100               	movlb	0	; () banked
 25529  011E32  0789               	decf	i2printf@c& (0+255),f,b
 25530  011E34  2989               	incf	i2printf@c& (0+255),w,b
 25531  011E36  B4D8               	btfsc	status,2,c
 25532  011E38  D008               	goto	i2l1421
 25533  011E3A  D7B1               	goto	i2l1419
 25534  011E3C                     i2l15042:
 25535                           
 25536                           ; BSR set to: 0
 25537                           ;doprnt.c: 1208: (putch('0') );
 25538  011E3C  0E30               	movlw	48
 25539  011E3E  EC95  F0B8         	call	i2_putch
 25540                           
 25541                           ;doprnt.c: 1209: exp--;
 25542  011E42  0100               	movlb	0	; () banked
 25543  011E44  077A               	decf	i2printf@exp& (0+255),f,b
 25544  011E46  A0D8               	btfss	status,0,c
 25545  011E48  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 25546  011E4A                     i2l1421:
 25547                           
 25548                           ; BSR set to: 0
 25549                           
 25550                           ; BSR set to: 0
 25551  011E4A  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25552  011E4C  D005               	goto	i2u1935_40
 25553  011E4E  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 25554  011E50  E1F5               	bnz	i2l15042
 25555  011E52  057A               	decf	i2printf@exp& (0+255),w,b
 25556  011E54  B0D8               	btfsc	status,0,c
 25557  011E56  D7F2               	goto	i2l1422
 25558  011E58                     i2u1935_40:
 25559                           
 25560                           ; BSR set to: 0
 25561                           ;doprnt.c: 1210: }
 25562                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25563                           
 25564                           ; BSR set to: 0
 25565  011E58  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25566  011E5A  D009               	goto	i2l1424
 25567  011E5C  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25568  011E5E  E104               	bnz	i2u1936_40
 25569  011E60  0E09               	movlw	9
 25570  011E62  5D87               	subwf	i2printf@prec& (0+255),w,b
 25571  011E64  A0D8               	btfss	status,0,c
 25572  011E66  D003               	goto	i2l1424
 25573  011E68                     i2u1936_40:
 25574                           
 25575                           ; BSR set to: 0
 25576                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25577  011E68  0E08               	movlw	8
 25578  011E6A  6F89               	movwf	i2printf@c& (0+255),b
 25579  011E6C  D002               	goto	i2l1425
 25580  011E6E                     i2l1424:
 25581                           
 25582                           ; BSR set to: 0
 25583                           ;doprnt.c: 1213: else
 25584                           ;doprnt.c: 1214: c = prec;
 25585  011E6E  C087  F089         	movff	i2printf@prec,i2printf@c
 25586  011E72                     i2l1425:
 25587                           
 25588                           ; BSR set to: 0
 25589                           ;doprnt.c: 1215: prec -= c;
 25590                           
 25591                           ; BSR set to: 0
 25592  011E72  5189               	movf	i2printf@c& (0+255),w,b
 25593  011E74  5F87               	subwf	i2printf@prec& (0+255),f,b
 25594  011E76  0E00               	movlw	0
 25595  011E78  BF89               	btfsc	i2printf@c& (0+255),7,b
 25596  011E7A  0EFF               	movlw	255
 25597  011E7C  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;doprnt.c: 1219: if(c)
 25601  011E7E  5189               	movf	i2printf@c& (0+255),w,b
 25602  011E80  B4D8               	btfsc	status,2,c
 25603  011E82  D003               	goto	i2l1426
 25604                           
 25605                           ; BSR set to: 0
 25606                           ;doprnt.c: 1221: (putch('.') );
 25607  011E84  0E2E               	movlw	46
 25608  011E86  EC95  F0B8         	call	i2_putch
 25609  011E8A                     i2l1426:
 25610                           
 25611                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25612  011E8A  0100               	movlb	0	; () banked
 25613  011E8C  5189               	movf	i2printf@c& (0+255),w,b
 25614  011E8E  ECE3  F096         	call	i2_scale
 25615  011E92  C036  F06E         	movff	?i2_scale,i2_printf$4114
 25616  011E96  C037  F06F         	movff	?i2_scale+1,i2_printf$4114+1
 25617  011E9A  C038  F070         	movff	?i2_scale+2,i2_printf$4114+2
 25618                           
 25619                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25620  011E9E  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 25621  011EA2  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 25622  011EA6  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 25623  011EAA  C06E  F027         	movff	i2_printf$4114,i2___ftmul@f1
 25624  011EAE  C06F  F028         	movff	i2_printf$4114+1,i2___ftmul@f1+1
 25625  011EB2  C070  F029         	movff	i2_printf$4114+2,i2___ftmul@f1+2
 25626  011EB6  EC40  F0A8         	call	i2___ftmul	;wreg free
 25627  011EBA  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 25628  011EBE  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 25629  011EC2  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 25630  011EC6  ECC6  F0A7         	call	i2___fttol	;wreg free
 25631  011ECA  C03D  F083         	movff	?i2___fttol,i2printf@val
 25632  011ECE  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 25633  011ED2  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 25634  011ED6  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 25635                           
 25636                           ;doprnt.c: 1228: while(c--) {
 25637  011EDA  D073               	goto	i2l1427
 25638  011EDC                     
 25639                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25640  011EDC  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25641  011EE0  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25642  011EE4  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25643  011EE8  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25644  011EEC  0100               	movlb	0	; () banked
 25645  011EEE  5189               	movf	i2printf@c& (0+255),w,b
 25646  011EF0  0D04               	mullw	4
 25647  011EF2  0E8F               	movlw	low _dpowers
 25648  011EF4  24F3               	addwf	prodl,w,c
 25649  011EF6  6EF6               	movwf	tblptrl,c
 25650  011EF8  0EEB               	movlw	high _dpowers
 25651  011EFA  20F4               	addwfc	prodh,w,c
 25652  011EFC  6EF7               	movwf	tblptrh,c
 25653  011EFE                     	if	1	;There are 3 active tblptr bytes
 25654  011EFE  6AF8               	clrf	tblptru,c
 25655  011F00  0E00               	movlw	low (__mediumconst shr (0+16))
 25656  011F02  22F8               	addwfc	tblptru,f,c
 25657  011F04                     	endif
 25658  011F04  0009               	tblrd		*+
 25659  011F06  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25660  011F0A  0009               	tblrd		*+
 25661  011F0C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25662  011F10  0009               	tblrd		*+
 25663  011F12  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25664  011F16  000A               	tblrd		*-
 25665  011F18  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25666  011F1C  EC40  F0B0         	call	i2___lldiv	;wreg free
 25667  011F20  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 25668  011F24  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25669  011F28  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25670  011F2C  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25671                           
 25672                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25673  011F30  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25674  011F34  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25675  011F38  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25676  011F3C  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25677  011F40  0E0A               	movlw	10
 25678  011F42  6E12               	movwf	i2___llmod@divisor,c
 25679  011F44  0E00               	movlw	0
 25680  011F46  6E13               	movwf	i2___llmod@divisor+1,c
 25681  011F48  0E00               	movlw	0
 25682  011F4A  6E14               	movwf	i2___llmod@divisor+2,c
 25683  011F4C  0E00               	movlw	0
 25684  011F4E  6E15               	movwf	i2___llmod@divisor+3,c
 25685  011F50  EC82  F0B2         	call	i2___llmod	;wreg free
 25686  011F54  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 25687  011F58  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 25688  011F5C  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 25689  011F60  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 25690                           
 25691                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 25692  011F64  0100               	movlb	0	; () banked
 25693  011F66  517C               	movf	i2printf@tmpval& (0+255),w,b
 25694  011F68  0F30               	addlw	48
 25695  011F6A  EC95  F0B8         	call	i2_putch
 25696                           
 25697                           ;doprnt.c: 1232: val %= dpowers[c];
 25698  011F6E  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 25699  011F72  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 25700  011F76  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 25701  011F7A  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 25702  011F7E  0100               	movlb	0	; () banked
 25703  011F80  5189               	movf	i2printf@c& (0+255),w,b
 25704  011F82  0D04               	mullw	4
 25705  011F84  0E8F               	movlw	low _dpowers
 25706  011F86  24F3               	addwf	prodl,w,c
 25707  011F88  6EF6               	movwf	tblptrl,c
 25708  011F8A  0EEB               	movlw	high _dpowers
 25709  011F8C  20F4               	addwfc	prodh,w,c
 25710  011F8E  6EF7               	movwf	tblptrh,c
 25711  011F90                     	if	1	;There are 3 active tblptr bytes
 25712  011F90  6AF8               	clrf	tblptru,c
 25713  011F92  0E00               	movlw	low (__mediumconst shr (0+16))
 25714  011F94  22F8               	addwfc	tblptru,f,c
 25715  011F96                     	endif
 25716  011F96  0009               	tblrd		*+
 25717  011F98  CFF5 F012          	movff	tablat,i2___llmod@divisor
 25718  011F9C  0009               	tblrd		*+
 25719  011F9E  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 25720  011FA2  0009               	tblrd		*+
 25721  011FA4  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 25722  011FA8  000A               	tblrd		*-
 25723  011FAA  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 25724  011FAE  EC82  F0B2         	call	i2___llmod	;wreg free
 25725  011FB2  C00E  F083         	movff	?i2___llmod,i2printf@val
 25726  011FB6  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 25727  011FBA  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 25728  011FBE  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 25729  011FC2                     i2l1427:
 25730  011FC2  0100               	movlb	0	; () banked
 25731  011FC4  0789               	decf	i2printf@c& (0+255),f,b
 25732  011FC6  2989               	incf	i2printf@c& (0+255),w,b
 25733  011FC8  B4D8               	btfsc	status,2,c
 25734  011FCA  D008               	goto	i2l1430
 25735  011FCC  D787               	goto	i2l1428
 25736  011FCE                     
 25737                           ; BSR set to: 0
 25738                           ;doprnt.c: 1236: (putch('0') );
 25739                           
 25740                           ; BSR set to: 0
 25741  011FCE  0E30               	movlw	48
 25742  011FD0  EC95  F0B8         	call	i2_putch
 25743                           
 25744                           ;doprnt.c: 1237: prec--;
 25745  011FD4  0100               	movlb	0	; () banked
 25746  011FD6  0787               	decf	i2printf@prec& (0+255),f,b
 25747  011FD8  A0D8               	btfss	status,0,c
 25748  011FDA  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 25749  011FDC                     i2l1430:
 25750                           
 25751                           ; BSR set to: 0
 25752                           
 25753                           ; BSR set to: 0
 25754  011FDC  5187               	movf	i2printf@prec& (0+255),w,b
 25755  011FDE  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25756  011FE0  B4D8               	btfsc	status,2,c
 25757  011FE2  D156               	goto	i2u1953_40
 25758  011FE4  D7F4               	goto	i2l1431
 25759  011FE6                     i2l1395:
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;doprnt.c: 1246: }
 25763                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25764                           
 25765                           ; BSR set to: 0
 25766  011FE6  0EC0               	movlw	192
 25767  011FE8  1578               	andwf	i2printf@flag& (0+255),w,b
 25768  011FEA  6F68               	movwf	??i2_printf& (0+255),b
 25769  011FEC  0E00               	movlw	0
 25770  011FEE  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 25771  011FF0  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25772  011FF2  5168               	movf	??i2_printf& (0+255),w,b
 25773  011FF4  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 25774  011FF6  A4D8               	btfss	status,2,c
 25775  011FF8  D01E               	goto	i2l1433
 25776                           
 25777                           ; BSR set to: 0
 25778                           ;doprnt.c: 1253: {
 25779                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25780  011FFA  C076  FFD9         	movff	i2printf@ap,fsr2l
 25781  011FFE  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 25782  012002  CFDE F083          	movff	postinc2,i2printf@val
 25783  012006  CFDD F084          	movff	postdec2,i2printf@val+1
 25784  01200A  0E00               	movlw	0
 25785  01200C  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 25786  01200E  0EFF               	movlw	-1
 25787  012010  6F85               	movwf	(i2printf@val+2)& (0+255),b
 25788  012012  6F86               	movwf	(i2printf@val+3)& (0+255),b
 25789                           
 25790                           ; BSR set to: 0
 25791  012014  0E02               	movlw	2
 25792  012016  2776               	addwf	i2printf@ap& (0+255),f,b
 25793  012018  0E00               	movlw	0
 25794  01201A  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25795                           
 25796                           ; BSR set to: 0
 25797                           ;doprnt.c: 1261: if((long)val < 0) {
 25798  01201C  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 25799  01201E  D01D               	goto	i2l1435
 25800                           
 25801                           ; BSR set to: 0
 25802                           ;doprnt.c: 1262: flag |= 0x03;
 25803  012020  0E03               	movlw	3
 25804  012022  1378               	iorwf	i2printf@flag& (0+255),f,b
 25805                           
 25806                           ; BSR set to: 0
 25807                           ;doprnt.c: 1263: val = -val;
 25808  012024  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 25809  012026  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 25810  012028  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 25811  01202A  6D83               	negf	i2printf@val& (0+255),b
 25812  01202C  0E00               	movlw	0
 25813  01202E  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 25814  012030  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 25815  012032  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 25816                           
 25817                           ; BSR set to: 0
 25818                           ;doprnt.c: 1264: }
 25819                           ;doprnt.c: 1266: }
 25820  012034  D012               	goto	i2l1435
 25821  012036                     i2l1433:
 25822                           
 25823                           ; BSR set to: 0
 25824                           ;doprnt.c: 1268: else
 25825                           ;doprnt.c: 1273: {
 25826                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25827                           
 25828                           ; BSR set to: 0
 25829  012036  C076  FFD9         	movff	i2printf@ap,fsr2l
 25830  01203A  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 25831  01203E  CFDE F068          	movff	postinc2,??i2_printf
 25832  012042  CFDD F069          	movff	postdec2,??i2_printf+1
 25833  012046  C068  F083         	movff	??i2_printf,i2printf@val
 25834  01204A  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 25835  01204E  6B85               	clrf	(i2printf@val+2)& (0+255),b
 25836  012050  6B86               	clrf	(i2printf@val+3)& (0+255),b
 25837                           
 25838                           ; BSR set to: 0
 25839  012052  0E02               	movlw	2
 25840  012054  2776               	addwf	i2printf@ap& (0+255),f,b
 25841  012056  0E00               	movlw	0
 25842  012058  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25843  01205A                     i2l1435:
 25844                           
 25845                           ; BSR set to: 0
 25846                           ;doprnt.c: 1287: }
 25847                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25848                           
 25849                           ; BSR set to: 0
 25850  01205A  5187               	movf	i2printf@prec& (0+255),w,b
 25851  01205C  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25852  01205E  A4D8               	btfss	status,2,c
 25853  012060  D04B               	goto	i2l1437
 25854                           
 25855                           ; BSR set to: 0
 25856  012062  5183               	movf	i2printf@val& (0+255),w,b
 25857  012064  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 25858  012066  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 25859  012068  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 25860  01206A  A4D8               	btfss	status,2,c
 25861  01206C  D045               	goto	i2l1437
 25862                           
 25863                           ; BSR set to: 0
 25864                           ;doprnt.c: 1291: prec++;
 25865  01206E  4B87               	infsnz	i2printf@prec& (0+255),f,b
 25866  012070  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 25867                           
 25868                           ; BSR set to: 0
 25869                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25870  012072  D042               	goto	i2l1437
 25871  012074                     
 25872                           ; BSR set to: 0
 25873                           ;doprnt.c: 1302: case 0xC0:
 25874                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25875                           
 25876                           ; BSR set to: 0
 25877                           
 25878                           ; BSR set to: 0
 25879  012074  0E01               	movlw	1
 25880  012076  6F89               	movwf	i2printf@c& (0+255),b
 25881  012078                     i2l15102:
 25882                           
 25883                           ; BSR set to: 0
 25884  012078  0E0A               	movlw	10
 25885  01207A  1989               	xorwf	i2printf@c& (0+255),w,b
 25886  01207C  B4D8               	btfsc	status,2,c
 25887  01207E  D047               	goto	i2l1443
 25888                           
 25889                           ; BSR set to: 0
 25890                           ;doprnt.c: 1306: if(val < dpowers[c])
 25891                           
 25892                           ; BSR set to: 0
 25893                           
 25894                           ; BSR set to: 0
 25895  012080  5189               	movf	i2printf@c& (0+255),w,b
 25896  012082  0D04               	mullw	4
 25897  012084  0E8F               	movlw	low _dpowers
 25898  012086  24F3               	addwf	prodl,w,c
 25899  012088  6EF6               	movwf	tblptrl,c
 25900  01208A  0EEB               	movlw	high _dpowers
 25901  01208C  20F4               	addwfc	prodh,w,c
 25902  01208E  6EF7               	movwf	tblptrh,c
 25903  012090                     	if	1	;There are 3 active tblptr bytes
 25904  012090  6AF8               	clrf	tblptru,c
 25905  012092  0E00               	movlw	low (__mediumconst shr (0+16))
 25906  012094  22F8               	addwfc	tblptru,f,c
 25907  012096                     	endif
 25908  012096  0009               	tblrd		*+
 25909  012098  50F5               	movf	tablat,w,c
 25910  01209A  5D83               	subwf	i2printf@val& (0+255),w,b
 25911  01209C  0009               	tblrd		*+
 25912  01209E  50F5               	movf	tablat,w,c
 25913  0120A0  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25914  0120A2  0009               	tblrd		*+
 25915  0120A4  50F5               	movf	tablat,w,c
 25916  0120A6  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25917  0120A8  0009               	tblrd		*+
 25918  0120AA  50F5               	movf	tablat,w,c
 25919  0120AC  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25920  0120AE  A0D8               	btfss	status,0,c
 25921  0120B0  D02E               	goto	i2l1443
 25922                           
 25923                           ; BSR set to: 0
 25924                           
 25925                           ; BSR set to: 0
 25926                           
 25927                           ; BSR set to: 0
 25928                           ;doprnt.c: 1307: break;
 25929  0120B2  2B89               	incf	i2printf@c& (0+255),f,b
 25930  0120B4  D7E1               	goto	i2l15102
 25931  0120B6                     
 25932                           ; BSR set to: 0
 25933                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25934                           
 25935                           ; BSR set to: 0
 25936  0120B6  0E01               	movlw	1
 25937  0120B8  6F89               	movwf	i2printf@c& (0+255),b
 25938  0120BA                     i2l15116:
 25939                           
 25940                           ; BSR set to: 0
 25941  0120BA  0E08               	movlw	8
 25942  0120BC  1989               	xorwf	i2printf@c& (0+255),w,b
 25943  0120BE  B4D8               	btfsc	status,2,c
 25944  0120C0  D026               	goto	i2l1443
 25945                           
 25946                           ; BSR set to: 0
 25947                           ;doprnt.c: 1317: if(val < hexpowers[c])
 25948                           
 25949                           ; BSR set to: 0
 25950                           
 25951                           ; BSR set to: 0
 25952  0120C2  5189               	movf	i2printf@c& (0+255),w,b
 25953  0120C4  0D04               	mullw	4
 25954  0120C6  0E05               	movlw	low _hexpowers
 25955  0120C8  24F3               	addwf	prodl,w,c
 25956  0120CA  6EF6               	movwf	tblptrl,c
 25957  0120CC  0EEC               	movlw	high _hexpowers
 25958  0120CE  20F4               	addwfc	prodh,w,c
 25959  0120D0  6EF7               	movwf	tblptrh,c
 25960  0120D2                     	if	1	;There are 3 active tblptr bytes
 25961  0120D2  6AF8               	clrf	tblptru,c
 25962  0120D4  0E00               	movlw	low (__mediumconst shr (0+16))
 25963  0120D6  22F8               	addwfc	tblptru,f,c
 25964  0120D8                     	endif
 25965  0120D8  0009               	tblrd		*+
 25966  0120DA  50F5               	movf	tablat,w,c
 25967  0120DC  5D83               	subwf	i2printf@val& (0+255),w,b
 25968  0120DE  0009               	tblrd		*+
 25969  0120E0  50F5               	movf	tablat,w,c
 25970  0120E2  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25971  0120E4  0009               	tblrd		*+
 25972  0120E6  50F5               	movf	tablat,w,c
 25973  0120E8  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25974  0120EA  0009               	tblrd		*+
 25975  0120EC  50F5               	movf	tablat,w,c
 25976  0120EE  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25977  0120F0  A0D8               	btfss	status,0,c
 25978  0120F2  D00D               	goto	i2l1443
 25979                           
 25980                           ; BSR set to: 0
 25981                           
 25982                           ; BSR set to: 0
 25983                           
 25984                           ; BSR set to: 0
 25985                           ;doprnt.c: 1318: break;
 25986  0120F4  2B89               	incf	i2printf@c& (0+255),f,b
 25987  0120F6  D7E1               	goto	i2l15116
 25988  0120F8                     i2l1437:
 25989                           
 25990                           ; BSR set to: 0
 25991                           
 25992                           ; BSR set to: 0
 25993  0120F8  5178               	movf	i2printf@flag& (0+255),w,b
 25994  0120FA  0BC0               	andlw	192
 25995                           
 25996                           ; Switch size 1, requested type "space"
 25997                           ; Number of cases is 3, Range of values is 0 to 192
 25998                           ; switch strategies available:
 25999                           ; Name         Instructions Cycles
 26000                           ; simple_byte           10     6 (average)
 26001                           ;	Chosen strategy is simple_byte
 26002  0120FC  0A00               	xorlw	0	; case 0
 26003  0120FE  B4D8               	btfsc	status,2,c
 26004  012100  D7B9               	goto	i2l1438
 26005  012102  0A80               	xorlw	128	; case 128
 26006  012104  B4D8               	btfsc	status,2,c
 26007  012106  D7D7               	goto	i2l1444
 26008  012108  0A40               	xorlw	64	; case 192
 26009  01210A  B4D8               	btfsc	status,2,c
 26010  01210C  D7B3               	goto	i2l1438
 26011  01210E                     i2l1443:
 26012                           
 26013                           ; BSR set to: 0
 26014                           ;doprnt.c: 1339: if(c < prec)
 26015                           
 26016                           ; BSR set to: 0
 26017  01210E  0E80               	movlw	128
 26018  012110  BF89               	btfsc	i2printf@c& (0+255),7,b
 26019  012112  0E7F               	movlw	127
 26020  012114  6F68               	movwf	??i2_printf& (0+255),b
 26021  012116  5187               	movf	i2printf@prec& (0+255),w,b
 26022  012118  5D89               	subwf	i2printf@c& (0+255),w,b
 26023  01211A  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 26024  01211C  0A80               	xorlw	128
 26025  01211E  5968               	subwfb	??i2_printf& (0+255),w,b
 26026  012120  B0D8               	btfsc	status,0,c
 26027  012122  D003               	goto	i2l1448
 26028                           
 26029                           ; BSR set to: 0
 26030                           ;doprnt.c: 1340: c = prec;
 26031  012124  C087  F089         	movff	i2printf@prec,i2printf@c
 26032  012128  D010               	goto	i2l1450
 26033  01212A                     i2l1448:
 26034                           
 26035                           ; BSR set to: 0
 26036                           ;doprnt.c: 1341: else if(prec < c)
 26037                           
 26038                           ; BSR set to: 0
 26039  01212A  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 26040  01212C  0A80               	xorlw	128
 26041  01212E  6F68               	movwf	??i2_printf& (0+255),b
 26042  012130  5189               	movf	i2printf@c& (0+255),w,b
 26043  012132  5D87               	subwf	i2printf@prec& (0+255),w,b
 26044  012134  0E80               	movlw	128
 26045  012136  BF89               	btfsc	i2printf@c& (0+255),7,b
 26046  012138  0E7F               	movlw	127
 26047  01213A  5968               	subwfb	??i2_printf& (0+255),w,b
 26048  01213C  B0D8               	btfsc	status,0,c
 26049  01213E  D005               	goto	i2l1450
 26050                           
 26051                           ; BSR set to: 0
 26052                           ;doprnt.c: 1342: prec = c;
 26053  012140  5189               	movf	i2printf@c& (0+255),w,b
 26054  012142  6F87               	movwf	i2printf@prec& (0+255),b
 26055  012144  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 26056  012146  BF87               	btfsc	i2printf@prec& (0+255),7,b
 26057  012148  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 26058  01214A                     i2l1450:
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;doprnt.c: 1422: {
 26062                           ;doprnt.c: 1438: if(flag & 0x03)
 26063                           
 26064                           ; BSR set to: 0
 26065                           
 26066                           ; BSR set to: 0
 26067  01214A  0E03               	movlw	3
 26068  01214C  1578               	andwf	i2printf@flag& (0+255),w,b
 26069  01214E  6F68               	movwf	??i2_printf& (0+255),b
 26070  012150  0E00               	movlw	0
 26071  012152  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 26072  012154  6F69               	movwf	(??i2_printf+1)& (0+255),b
 26073  012156  5168               	movf	??i2_printf& (0+255),w,b
 26074  012158  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 26075  01215A  B4D8               	btfsc	status,2,c
 26076  01215C  D090               	goto	i2l1452
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;doprnt.c: 1439: (putch('-') );
 26080  01215E  0E2D               	movlw	45
 26081  012160  EC95  F0B8         	call	i2_putch
 26082                           
 26083                           ;doprnt.c: 1469: }
 26084                           ;doprnt.c: 1474: while(prec--) {
 26085  012164  D08C               	goto	i2l1452
 26086  012166                     
 26087                           ;doprnt.c: 1486: case 0xC0:
 26088                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26089  012166  C087  F068         	movff	i2printf@prec,??i2_printf
 26090  01216A  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 26091  01216E  0100               	movlb	0	; () banked
 26092  012170  90D8               	bcf	status,0,c
 26093  012172  3768               	rlcf	??i2_printf& (0+255),f,b
 26094  012174  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 26095  012176  90D8               	bcf	status,0,c
 26096  012178  3768               	rlcf	??i2_printf& (0+255),f,b
 26097  01217A  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 26098  01217C  0E8F               	movlw	low _dpowers
 26099  01217E  2568               	addwf	??i2_printf& (0+255),w,b
 26100  012180  6EF6               	movwf	tblptrl,c
 26101  012182  0EEB               	movlw	high _dpowers
 26102  012184  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 26103  012186  6EF7               	movwf	tblptrh,c
 26104  012188                     	if	1	;There are 3 active tblptr bytes
 26105  012188  6AF8               	clrf	tblptru,c
 26106  01218A  0E00               	movlw	low (__mediumconst shr (0+16))
 26107  01218C  22F8               	addwfc	tblptru,f,c
 26108  01218E                     	endif
 26109  01218E  0009               	tblrd		*+
 26110  012190  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26111  012194  0009               	tblrd		*+
 26112  012196  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26113  01219A  0009               	tblrd		*+
 26114  01219C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26115  0121A0  000A               	tblrd		*-
 26116  0121A2  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26117  0121A6  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 26118  0121AA  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26119  0121AE  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26120  0121B2  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26121  0121B6  EC40  F0B0         	call	i2___lldiv	;wreg free
 26122  0121BA  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 26123  0121BE  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 26124  0121C2  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 26125  0121C6  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 26126  0121CA  0E0A               	movlw	10
 26127  0121CC  6E12               	movwf	i2___llmod@divisor,c
 26128  0121CE  0E00               	movlw	0
 26129  0121D0  6E13               	movwf	i2___llmod@divisor+1,c
 26130  0121D2  0E00               	movlw	0
 26131  0121D4  6E14               	movwf	i2___llmod@divisor+2,c
 26132  0121D6  0E00               	movlw	0
 26133  0121D8  6E15               	movwf	i2___llmod@divisor+3,c
 26134  0121DA  EC82  F0B2         	call	i2___llmod	;wreg free
 26135  0121DE  500E               	movf	?i2___llmod,w,c
 26136  0121E0  0F30               	addlw	48
 26137  0121E2  0100               	movlb	0	; () banked
 26138  0121E4  6F89               	movwf	i2printf@c& (0+255),b
 26139                           
 26140                           ;doprnt.c: 1491: break;
 26141  0121E6  D048               	goto	i2l1457
 26142  0121E8                     
 26143                           ; BSR set to: 0
 26144                           ;doprnt.c: 1499: {
 26145                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26146                           
 26147                           ; BSR set to: 0
 26148  0121E8  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 26149  0121EC  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26150  0121F0  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26151  0121F4  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26152  0121F8  C087  F068         	movff	i2printf@prec,??i2_printf
 26153  0121FC  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 26154  012200  90D8               	bcf	status,0,c
 26155  012202  3768               	rlcf	??i2_printf& (0+255),f,b
 26156  012204  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 26157  012206  90D8               	bcf	status,0,c
 26158  012208  3768               	rlcf	??i2_printf& (0+255),f,b
 26159  01220A  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 26160  01220C  0E05               	movlw	low _hexpowers
 26161  01220E  2568               	addwf	??i2_printf& (0+255),w,b
 26162  012210  6EF6               	movwf	tblptrl,c
 26163  012212  0EEC               	movlw	high _hexpowers
 26164  012214  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 26165  012216  6EF7               	movwf	tblptrh,c
 26166  012218                     	if	1	;There are 3 active tblptr bytes
 26167  012218  6AF8               	clrf	tblptru,c
 26168  01221A  0E00               	movlw	low (__mediumconst shr (0+16))
 26169  01221C  22F8               	addwfc	tblptru,f,c
 26170  01221E                     	endif
 26171  01221E  0009               	tblrd		*+
 26172  012220  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26173  012224  0009               	tblrd		*+
 26174  012226  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26175  01222A  0009               	tblrd		*+
 26176  01222C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26177  012230  000A               	tblrd		*-
 26178  012232  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26179  012236  EC40  F0B0         	call	i2___lldiv	;wreg free
 26180  01223A  5001               	movf	?i2___lldiv,w,c
 26181  01223C  0B0F               	andlw	15
 26182  01223E  0100               	movlb	0	; () banked
 26183  012240  6F71               	movwf	i2printf@idx& (0+255),b
 26184                           
 26185                           ; BSR set to: 0
 26186                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26187  012242  5171               	movf	i2printf@idx& (0+255),w,b
 26188  012244  0D01               	mullw	1
 26189  012246  0EE9               	movlw	low STR_136
 26190  012248  24F3               	addwf	prodl,w,c
 26191  01224A  6EF6               	movwf	tblptrl,c
 26192  01224C  0EFD               	movlw	high STR_136
 26193  01224E  20F4               	addwfc	prodh,w,c
 26194  012250  6EF7               	movwf	tblptrh,c
 26195  012252                     	if	1	;There are 3 active tblptr bytes
 26196  012252  6AF8               	clrf	tblptru,c
 26197  012254  0E00               	movlw	low (__mediumconst shr (0+16))
 26198  012256  22F8               	addwfc	tblptru,f,c
 26199  012258                     	endif
 26200  012258  0008               	tblrd		*
 26201  01225A  CFF5 F089          	movff	tablat,i2printf@c
 26202                           
 26203                           ; BSR set to: 0
 26204                           ;doprnt.c: 1523: }
 26205                           
 26206                           ;doprnt.c: 1508: }
 26207                           ;doprnt.c: 1510: break;
 26208  01225E  D00C               	goto	i2l1457
 26209  012260                     i2l15152:
 26210  012260  0100               	movlb	0	; () banked
 26211  012262  5178               	movf	i2printf@flag& (0+255),w,b
 26212  012264  0BC0               	andlw	192
 26213                           
 26214                           ; Switch size 1, requested type "space"
 26215                           ; Number of cases is 3, Range of values is 0 to 192
 26216                           ; switch strategies available:
 26217                           ; Name         Instructions Cycles
 26218                           ; simple_byte           10     6 (average)
 26219                           ;	Chosen strategy is simple_byte
 26220  012266  0A00               	xorlw	0	; case 0
 26221  012268  B4D8               	btfsc	status,2,c
 26222  01226A  D77D               	goto	i2l1455
 26223  01226C  0A80               	xorlw	128	; case 128
 26224  01226E  B4D8               	btfsc	status,2,c
 26225  012270  D7BB               	goto	i2l1458
 26226  012272  0A40               	xorlw	64	; case 192
 26227  012274  B4D8               	btfsc	status,2,c
 26228  012276  D777               	goto	i2l1455
 26229  012278                     i2l1457:
 26230                           
 26231                           ; BSR set to: 0
 26232                           ;doprnt.c: 1524: (putch(c) );
 26233                           
 26234                           ; BSR set to: 0
 26235  012278  5189               	movf	i2printf@c& (0+255),w,b
 26236  01227A  EC95  F0B8         	call	i2_putch
 26237  01227E                     i2l1452:
 26238  01227E  0100               	movlb	0	; () banked
 26239  012280  0787               	decf	i2printf@prec& (0+255),f,b
 26240  012282  A0D8               	btfss	status,0,c
 26241  012284  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 26242  012286  2987               	incf	i2printf@prec& (0+255),w,b
 26243  012288  E1EB               	bnz	i2l15152
 26244  01228A  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 26245  01228C  A4D8               	btfss	status,2,c
 26246  01228E  D7E8               	goto	i2l1454
 26247  012290                     i2u1953_40:
 26248                           
 26249                           ; BSR set to: 0
 26250                           
 26251                           ; BSR set to: 0
 26252  012290  0100               	movlb	0	; () banked
 26253  012292  5166               	movf	i2printf@f& (0+255),w,b
 26254  012294  6F68               	movwf	??i2_printf& (0+255),b
 26255  012296  5167               	movf	(i2printf@f+1)& (0+255),w,b
 26256  012298  6F69               	movwf	(??i2_printf+1)& (0+255),b
 26257  01229A  4B66               	infsnz	i2printf@f& (0+255),f,b
 26258  01229C  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 26259  01229E  C068  FFF6         	movff	??i2_printf,tblptrl
 26260  0122A2  C069  FFF7         	movff	??i2_printf+1,tblptrh
 26261  0122A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26262  0122A8  6EF8               	movwf	tblptru,c
 26263  0122AA  0E0D               	movlw	(high __ramtop+-1)
 26264  0122AC  64F7               	cpfsgt	tblptrh,c
 26265  0122AE  D003               	bra	i2u1954_47
 26266  0122B0  0008               	tblrd		*
 26267  0122B2  50F5               	movf	tablat,w,c
 26268  0122B4  D005               	bra	i2u1954_40
 26269  0122B6                     i2u1954_47:
 26270  0122B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 26271  0122BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 26272  0122BE  50EF               	movf	indf0,w,c
 26273  0122C0                     i2u1954_40:
 26274  0122C0  0100               	movlb	0	; () banked
 26275  0122C2  6F89               	movwf	i2printf@c& (0+255),b
 26276  0122C4  5189               	movf	i2printf@c& (0+255),w,b
 26277  0122C6  B4D8               	btfsc	status,2,c
 26278  0122C8  0012               	return	
 26279  0122CA  EF14  F08C         	goto	i2l1367
 26280  0122CE                     __end_ofi2_printf:
 26281                           	opt stack 0
 26282                           tosu	equ	0xFFF
 26283                           tosh	equ	0xFFE
 26284                           tosl	equ	0xFFD
 26285                           pclatu	equ	0xFFB
 26286                           pclath	equ	0xFFA
 26287                           tblptru	equ	0xFF8
 26288                           tblptrh	equ	0xFF7
 26289                           tblptrl	equ	0xFF6
 26290                           tablat	equ	0xFF5
 26291                           prodh	equ	0xFF4
 26292                           prodl	equ	0xFF3
 26293                           intcon	equ	0xFF2
 26294                           indf0	equ	0xFEF
 26295                           postinc0	equ	0xFEE
 26296                           fsr0h	equ	0xFEA
 26297                           fsr0l	equ	0xFE9
 26298                           wreg	equ	0xFE8
 26299                           indf1	equ	0xFE7
 26300                           postdec1	equ	0xFE5
 26301                           plusw1	equ	0xFE3
 26302                           fsr1h	equ	0xFE2
 26303                           fsr1l	equ	0xFE1
 26304                           bsr	equ	0xFE0
 26305                           indf2	equ	0xFDF
 26306                           postinc2	equ	0xFDE
 26307                           postdec2	equ	0xFDD
 26308                           plusw2	equ	0xFDB
 26309                           fsr2h	equ	0xFDA
 26310                           fsr2l	equ	0xFD9
 26311                           status	equ	0xFD8
 26312                           
 26313 ;; *************** function i2_scale *****************
 26314 ;; Defined at:
 26315 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26316 ;; Parameters:    Size  Location     Type
 26317 ;;  scl             1    wreg     char 
 26318 ;; Auto vars:     Size  Location     Type
 26319 ;;  scl             1   59[COMRAM] char 
 26320 ;; Return value:  Size  Location     Type
 26321 ;;                  3   53[COMRAM] char 
 26322 ;; Registers used:
 26323 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26324 ;; Tracked objects:
 26325 ;;		On entry : 0/0
 26326 ;;		On exit  : 0/0
 26327 ;;		Unchanged: 0/0
 26328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26329 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26330 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26332 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26333 ;;Total ram usage:        7 bytes
 26334 ;; Hardware stack levels used:    1
 26335 ;; Hardware stack levels required when called:    2
 26336 ;; This function calls:
 26337 ;;		i2___awdiv
 26338 ;;		i2___awmod
 26339 ;;		i2___ftmul
 26340 ;;		i2___wmul
 26341 ;; This function is called by:
 26342 ;;		i2_printf
 26343 ;; This function uses a non-reentrant model
 26344 ;;
 26345                           
 26346                           	psect	text92
 26347  012DC6                     __ptext92:
 26348                           	opt stack 0
 26349  012DC6                     i2_scale:
 26350                           	opt stack 13
 26351                           
 26352                           ; BSR set to: 0
 26353                           ;incstack = 0
 26354                           ;i2scale@scl stored from wreg
 26355  012DC6  6E3C               	movwf	i2scale@scl,c
 26356                           
 26357                           ;doprnt.c: 428: if(scl < 0) {
 26358  012DC8  AE3C               	btfss	i2scale@scl,7,c
 26359  012DCA  D113               	goto	i2l1356
 26360                           
 26361                           ;doprnt.c: 429: scl = -scl;
 26362  012DCC  6C3C               	negf	i2scale@scl,c
 26363                           
 26364                           ;doprnt.c: 430: if(scl>=110)
 26365  012DCE  503C               	movf	i2scale@scl,w,c
 26366  012DD0  0A80               	xorlw	128
 26367  012DD2  0F12               	addlw	-238
 26368  012DD4  A0D8               	btfss	status,0,c
 26369  012DD6  D09A               	goto	i2l1357
 26370                           
 26371                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26372  012DD8  0E00               	movlw	0
 26373  012DDA  6E12               	movwf	i2___wmul@multiplicand+1,c
 26374  012DDC  0E03               	movlw	3
 26375  012DDE  6E11               	movwf	i2___wmul@multiplicand,c
 26376  012DE0  0E00               	movlw	0
 26377  012DE2  6E0A               	movwf	i2___awdiv@divisor+1,c
 26378  012DE4  0E0A               	movlw	10
 26379  012DE6  6E09               	movwf	i2___awdiv@divisor,c
 26380  012DE8  0E00               	movlw	0
 26381  012DEA  6E04               	movwf	i2___awmod@divisor+1,c
 26382  012DEC  0E64               	movlw	100
 26383  012DEE  6E03               	movwf	i2___awmod@divisor,c
 26384  012DF0  503C               	movf	i2scale@scl,w,c
 26385  012DF2  6E01               	movwf	i2___awmod@dividend,c
 26386  012DF4  6A02               	clrf	i2___awmod@dividend+1,c
 26387  012DF6  BE01               	btfsc	i2___awmod@dividend,7,c
 26388  012DF8  0602               	decf	i2___awmod@dividend+1,f,c
 26389  012DFA  ECAD  F0B1         	call	i2___awmod	;wreg free
 26390  012DFE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26391  012E02  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26392  012E06  ECFE  F0AF         	call	i2___awdiv	;wreg free
 26393  012E0A  0E09               	movlw	9
 26394  012E0C  2407               	addwf	?i2___awdiv,w,c
 26395  012E0E  6E0F               	movwf	i2___wmul@multiplier,c
 26396  012E10  0E00               	movlw	0
 26397  012E12  2008               	addwfc	?i2___awdiv+1,w,c
 26398  012E14  6E10               	movwf	i2___wmul@multiplier+1,c
 26399  012E16  EC69  F0B7         	call	i2___wmul	;wreg free
 26400  012E1A  0EDE               	movlw	low __npowers_
 26401  012E1C  240F               	addwf	?i2___wmul,w,c
 26402  012E1E  6EF6               	movwf	tblptrl,c
 26403  012E20  0EEB               	movlw	high __npowers_
 26404  012E22  2010               	addwfc	?i2___wmul+1,w,c
 26405  012E24  6EF7               	movwf	tblptrh,c
 26406  012E26                     	if	1	;There are 3 active tblptr bytes
 26407  012E26  6AF8               	clrf	tblptru,c
 26408  012E28  0E00               	movlw	low (__mediumconst shr (0+16))
 26409  012E2A  22F8               	addwfc	tblptru,f,c
 26410  012E2C                     	endif
 26411  012E2C  0009               	tblrd		*+
 26412  012E2E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26413  012E32  0009               	tblrd		*+
 26414  012E34  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26415  012E38  000A               	tblrd		*-
 26416  012E3A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26417  012E3E  0E00               	movlw	0
 26418  012E40  6E0A               	movwf	i2___awdiv@divisor+1,c
 26419  012E42  0E64               	movlw	100
 26420  012E44  6E09               	movwf	i2___awdiv@divisor,c
 26421  012E46  503C               	movf	i2scale@scl,w,c
 26422  012E48  6E07               	movwf	i2___awdiv@dividend,c
 26423  012E4A  6A08               	clrf	i2___awdiv@dividend+1,c
 26424  012E4C  BE07               	btfsc	i2___awdiv@dividend,7,c
 26425  012E4E  0608               	decf	i2___awdiv@dividend+1,f,c
 26426  012E50  ECFE  F0AF         	call	i2___awdiv	;wreg free
 26427  012E54  0E12               	movlw	18
 26428  012E56  2407               	addwf	?i2___awdiv,w,c
 26429  012E58  6E0F               	movwf	i2___wmul@multiplier,c
 26430  012E5A  0E00               	movlw	0
 26431  012E5C  2008               	addwfc	?i2___awdiv+1,w,c
 26432  012E5E  6E10               	movwf	i2___wmul@multiplier+1,c
 26433  012E60  0E00               	movlw	0
 26434  012E62  6E12               	movwf	i2___wmul@multiplicand+1,c
 26435  012E64  0E03               	movlw	3
 26436  012E66  6E11               	movwf	i2___wmul@multiplicand,c
 26437  012E68  EC69  F0B7         	call	i2___wmul	;wreg free
 26438  012E6C  0EDE               	movlw	low __npowers_
 26439  012E6E  240F               	addwf	?i2___wmul,w,c
 26440  012E70  6EF6               	movwf	tblptrl,c
 26441  012E72  0EEB               	movlw	high __npowers_
 26442  012E74  2010               	addwfc	?i2___wmul+1,w,c
 26443  012E76  6EF7               	movwf	tblptrh,c
 26444  012E78                     	if	1	;There are 3 active tblptr bytes
 26445  012E78  6AF8               	clrf	tblptru,c
 26446  012E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 26447  012E7C  22F8               	addwfc	tblptru,f,c
 26448  012E7E                     	endif
 26449  012E7E  0009               	tblrd		*+
 26450  012E80  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26451  012E84  0009               	tblrd		*+
 26452  012E86  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26453  012E8A  000A               	tblrd		*-
 26454  012E8C  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26455  012E90  EC40  F0A8         	call	i2___ftmul	;wreg free
 26456  012E94  C027  F039         	movff	?i2___ftmul,i2_scale$4113
 26457  012E98  C028  F03A         	movff	?i2___ftmul+1,i2_scale$4113+1
 26458  012E9C  C029  F03B         	movff	?i2___ftmul+2,i2_scale$4113+2
 26459                           
 26460                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26461  012EA0  C039  F027         	movff	i2_scale$4113,i2___ftmul@f1
 26462  012EA4  C03A  F028         	movff	i2_scale$4113+1,i2___ftmul@f1+1
 26463  012EA8  C03B  F029         	movff	i2_scale$4113+2,i2___ftmul@f1+2
 26464  012EAC  0E00               	movlw	0
 26465  012EAE  6E12               	movwf	i2___wmul@multiplicand+1,c
 26466  012EB0  0E03               	movlw	3
 26467  012EB2  6E11               	movwf	i2___wmul@multiplicand,c
 26468  012EB4  0E00               	movlw	0
 26469  012EB6  6E04               	movwf	i2___awmod@divisor+1,c
 26470  012EB8  0E0A               	movlw	10
 26471  012EBA  6E03               	movwf	i2___awmod@divisor,c
 26472  012EBC  503C               	movf	i2scale@scl,w,c
 26473  012EBE  6E01               	movwf	i2___awmod@dividend,c
 26474  012EC0  6A02               	clrf	i2___awmod@dividend+1,c
 26475  012EC2  BE01               	btfsc	i2___awmod@dividend,7,c
 26476  012EC4  0602               	decf	i2___awmod@dividend+1,f,c
 26477  012EC6  ECAD  F0B1         	call	i2___awmod	;wreg free
 26478  012ECA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26479  012ECE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26480  012ED2  EC69  F0B7         	call	i2___wmul	;wreg free
 26481  012ED6  0EDE               	movlw	low __npowers_
 26482  012ED8  240F               	addwf	?i2___wmul,w,c
 26483  012EDA  6EF6               	movwf	tblptrl,c
 26484  012EDC  0EEB               	movlw	high __npowers_
 26485  012EDE  2010               	addwfc	?i2___wmul+1,w,c
 26486  012EE0  6EF7               	movwf	tblptrh,c
 26487  012EE2                     	if	1	;There are 3 active tblptr bytes
 26488  012EE2  6AF8               	clrf	tblptru,c
 26489  012EE4  0E00               	movlw	low (__mediumconst shr (0+16))
 26490  012EE6  22F8               	addwfc	tblptru,f,c
 26491  012EE8                     	endif
 26492  012EE8  0009               	tblrd		*+
 26493  012EEA  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26494  012EEE  0009               	tblrd		*+
 26495  012EF0  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26496  012EF4  000A               	tblrd		*-
 26497  012EF6  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26498  012EFA  EC40  F0A8         	call	i2___ftmul	;wreg free
 26499  012EFE  C027  F036         	movff	?i2___ftmul,?i2_scale
 26500  012F02  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26501  012F06  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26502  012F0A  0012               	return	
 26503  012F0C                     i2l1357:
 26504                           
 26505                           ;doprnt.c: 432: else if(scl > 10)
 26506  012F0C  503C               	movf	i2scale@scl,w,c
 26507  012F0E  0A80               	xorlw	128
 26508  012F10  0F75               	addlw	-139
 26509  012F12  A0D8               	btfss	status,0,c
 26510  012F14  D059               	goto	i2l1360
 26511                           
 26512                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26513  012F16  0E00               	movlw	0
 26514  012F18  6E0A               	movwf	i2___awdiv@divisor+1,c
 26515  012F1A  0E0A               	movlw	10
 26516  012F1C  6E09               	movwf	i2___awdiv@divisor,c
 26517  012F1E  503C               	movf	i2scale@scl,w,c
 26518  012F20  6E07               	movwf	i2___awdiv@dividend,c
 26519  012F22  6A08               	clrf	i2___awdiv@dividend+1,c
 26520  012F24  BE07               	btfsc	i2___awdiv@dividend,7,c
 26521  012F26  0608               	decf	i2___awdiv@dividend+1,f,c
 26522  012F28  ECFE  F0AF         	call	i2___awdiv	;wreg free
 26523  012F2C  0E09               	movlw	9
 26524  012F2E  2407               	addwf	?i2___awdiv,w,c
 26525  012F30  6E0F               	movwf	i2___wmul@multiplier,c
 26526  012F32  0E00               	movlw	0
 26527  012F34  2008               	addwfc	?i2___awdiv+1,w,c
 26528  012F36  6E10               	movwf	i2___wmul@multiplier+1,c
 26529  012F38  0E00               	movlw	0
 26530  012F3A  6E12               	movwf	i2___wmul@multiplicand+1,c
 26531  012F3C  0E03               	movlw	3
 26532  012F3E  6E11               	movwf	i2___wmul@multiplicand,c
 26533  012F40  EC69  F0B7         	call	i2___wmul	;wreg free
 26534  012F44  0EDE               	movlw	low __npowers_
 26535  012F46  240F               	addwf	?i2___wmul,w,c
 26536  012F48  6EF6               	movwf	tblptrl,c
 26537  012F4A  0EEB               	movlw	high __npowers_
 26538  012F4C  2010               	addwfc	?i2___wmul+1,w,c
 26539  012F4E  6EF7               	movwf	tblptrh,c
 26540  012F50                     	if	1	;There are 3 active tblptr bytes
 26541  012F50  6AF8               	clrf	tblptru,c
 26542  012F52  0E00               	movlw	low (__mediumconst shr (0+16))
 26543  012F54  22F8               	addwfc	tblptru,f,c
 26544  012F56                     	endif
 26545  012F56  0009               	tblrd		*+
 26546  012F58  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26547  012F5C  0009               	tblrd		*+
 26548  012F5E  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26549  012F62  000A               	tblrd		*-
 26550  012F64  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26551  012F68  0E00               	movlw	0
 26552  012F6A  6E12               	movwf	i2___wmul@multiplicand+1,c
 26553  012F6C  0E03               	movlw	3
 26554  012F6E  6E11               	movwf	i2___wmul@multiplicand,c
 26555  012F70  0E00               	movlw	0
 26556  012F72  6E04               	movwf	i2___awmod@divisor+1,c
 26557  012F74  0E0A               	movlw	10
 26558  012F76  6E03               	movwf	i2___awmod@divisor,c
 26559  012F78  503C               	movf	i2scale@scl,w,c
 26560  012F7A  6E01               	movwf	i2___awmod@dividend,c
 26561  012F7C  6A02               	clrf	i2___awmod@dividend+1,c
 26562  012F7E  BE01               	btfsc	i2___awmod@dividend,7,c
 26563  012F80  0602               	decf	i2___awmod@dividend+1,f,c
 26564  012F82  ECAD  F0B1         	call	i2___awmod	;wreg free
 26565  012F86  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26566  012F8A  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26567  012F8E  EC69  F0B7         	call	i2___wmul	;wreg free
 26568  012F92  0EDE               	movlw	low __npowers_
 26569  012F94  240F               	addwf	?i2___wmul,w,c
 26570  012F96  6EF6               	movwf	tblptrl,c
 26571  012F98  0EEB               	movlw	high __npowers_
 26572  012F9A  2010               	addwfc	?i2___wmul+1,w,c
 26573  012F9C  6EF7               	movwf	tblptrh,c
 26574  012F9E                     	if	1	;There are 3 active tblptr bytes
 26575  012F9E  6AF8               	clrf	tblptru,c
 26576  012FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 26577  012FA2  22F8               	addwfc	tblptru,f,c
 26578  012FA4                     	endif
 26579  012FA4  0009               	tblrd		*+
 26580  012FA6  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26581  012FAA  0009               	tblrd		*+
 26582  012FAC  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26583  012FB0  000A               	tblrd		*-
 26584  012FB2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26585  012FB6  EC40  F0A8         	call	i2___ftmul	;wreg free
 26586  012FBA  C027  F036         	movff	?i2___ftmul,?i2_scale
 26587  012FBE  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26588  012FC2  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26589  012FC6  0012               	return	
 26590  012FC8                     i2l1360:
 26591                           
 26592                           ;doprnt.c: 434: return _npowers_[scl];
 26593  012FC8  503C               	movf	i2scale@scl,w,c
 26594  012FCA  0D03               	mullw	3
 26595  012FCC  0EDE               	movlw	low __npowers_
 26596  012FCE  24F3               	addwf	prodl,w,c
 26597  012FD0  6EF6               	movwf	tblptrl,c
 26598  012FD2  0EEB               	movlw	high __npowers_
 26599  012FD4  20F4               	addwfc	prodh,w,c
 26600  012FD6  6EF7               	movwf	tblptrh,c
 26601  012FD8                     	if	1	;There are 3 active tblptr bytes
 26602  012FD8  6AF8               	clrf	tblptru,c
 26603  012FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 26604  012FDC  22F8               	addwfc	tblptru,f,c
 26605  012FDE                     	endif
 26606  012FDE  0009               	tblrd		*+
 26607  012FE0  CFF5 F036          	movff	tablat,?i2_scale
 26608  012FE4  0009               	tblrd		*+
 26609  012FE6  CFF5 F037          	movff	tablat,?i2_scale+1
 26610  012FEA  000A               	tblrd		*-
 26611  012FEC  CFF5 F038          	movff	tablat,?i2_scale+2
 26612  012FF0  0012               	return	
 26613  012FF2                     i2l1356:
 26614                           
 26615                           ;doprnt.c: 435: }
 26616                           ;doprnt.c: 436: if(scl>=110)
 26617  012FF2  503C               	movf	i2scale@scl,w,c
 26618  012FF4  0A80               	xorlw	128
 26619  012FF6  0F12               	addlw	-238
 26620  012FF8  A0D8               	btfss	status,0,c
 26621  012FFA  D09A               	goto	i2l1361
 26622                           
 26623                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26624  012FFC  0E00               	movlw	0
 26625  012FFE  6E12               	movwf	i2___wmul@multiplicand+1,c
 26626  013000  0E03               	movlw	3
 26627  013002  6E11               	movwf	i2___wmul@multiplicand,c
 26628  013004  0E00               	movlw	0
 26629  013006  6E0A               	movwf	i2___awdiv@divisor+1,c
 26630  013008  0E0A               	movlw	10
 26631  01300A  6E09               	movwf	i2___awdiv@divisor,c
 26632  01300C  0E00               	movlw	0
 26633  01300E  6E04               	movwf	i2___awmod@divisor+1,c
 26634  013010  0E64               	movlw	100
 26635  013012  6E03               	movwf	i2___awmod@divisor,c
 26636  013014  503C               	movf	i2scale@scl,w,c
 26637  013016  6E01               	movwf	i2___awmod@dividend,c
 26638  013018  6A02               	clrf	i2___awmod@dividend+1,c
 26639  01301A  BE01               	btfsc	i2___awmod@dividend,7,c
 26640  01301C  0602               	decf	i2___awmod@dividend+1,f,c
 26641  01301E  ECAD  F0B1         	call	i2___awmod	;wreg free
 26642  013022  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26643  013026  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26644  01302A  ECFE  F0AF         	call	i2___awdiv	;wreg free
 26645  01302E  0E09               	movlw	9
 26646  013030  2407               	addwf	?i2___awdiv,w,c
 26647  013032  6E0F               	movwf	i2___wmul@multiplier,c
 26648  013034  0E00               	movlw	0
 26649  013036  2008               	addwfc	?i2___awdiv+1,w,c
 26650  013038  6E10               	movwf	i2___wmul@multiplier+1,c
 26651  01303A  EC69  F0B7         	call	i2___wmul	;wreg free
 26652  01303E  0EB7               	movlw	low __powers_
 26653  013040  240F               	addwf	?i2___wmul,w,c
 26654  013042  6EF6               	movwf	tblptrl,c
 26655  013044  0EEB               	movlw	high __powers_
 26656  013046  2010               	addwfc	?i2___wmul+1,w,c
 26657  013048  6EF7               	movwf	tblptrh,c
 26658  01304A                     	if	1	;There are 3 active tblptr bytes
 26659  01304A  6AF8               	clrf	tblptru,c
 26660  01304C  0E00               	movlw	low (__mediumconst shr (0+16))
 26661  01304E  22F8               	addwfc	tblptru,f,c
 26662  013050                     	endif
 26663  013050  0009               	tblrd		*+
 26664  013052  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26665  013056  0009               	tblrd		*+
 26666  013058  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26667  01305C  000A               	tblrd		*-
 26668  01305E  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26669  013062  0E00               	movlw	0
 26670  013064  6E0A               	movwf	i2___awdiv@divisor+1,c
 26671  013066  0E64               	movlw	100
 26672  013068  6E09               	movwf	i2___awdiv@divisor,c
 26673  01306A  503C               	movf	i2scale@scl,w,c
 26674  01306C  6E07               	movwf	i2___awdiv@dividend,c
 26675  01306E  6A08               	clrf	i2___awdiv@dividend+1,c
 26676  013070  BE07               	btfsc	i2___awdiv@dividend,7,c
 26677  013072  0608               	decf	i2___awdiv@dividend+1,f,c
 26678  013074  ECFE  F0AF         	call	i2___awdiv	;wreg free
 26679  013078  0E12               	movlw	18
 26680  01307A  2407               	addwf	?i2___awdiv,w,c
 26681  01307C  6E0F               	movwf	i2___wmul@multiplier,c
 26682  01307E  0E00               	movlw	0
 26683  013080  2008               	addwfc	?i2___awdiv+1,w,c
 26684  013082  6E10               	movwf	i2___wmul@multiplier+1,c
 26685  013084  0E00               	movlw	0
 26686  013086  6E12               	movwf	i2___wmul@multiplicand+1,c
 26687  013088  0E03               	movlw	3
 26688  01308A  6E11               	movwf	i2___wmul@multiplicand,c
 26689  01308C  EC69  F0B7         	call	i2___wmul	;wreg free
 26690  013090  0EB7               	movlw	low __powers_
 26691  013092  240F               	addwf	?i2___wmul,w,c
 26692  013094  6EF6               	movwf	tblptrl,c
 26693  013096  0EEB               	movlw	high __powers_
 26694  013098  2010               	addwfc	?i2___wmul+1,w,c
 26695  01309A  6EF7               	movwf	tblptrh,c
 26696  01309C                     	if	1	;There are 3 active tblptr bytes
 26697  01309C  6AF8               	clrf	tblptru,c
 26698  01309E  0E00               	movlw	low (__mediumconst shr (0+16))
 26699  0130A0  22F8               	addwfc	tblptru,f,c
 26700  0130A2                     	endif
 26701  0130A2  0009               	tblrd		*+
 26702  0130A4  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26703  0130A8  0009               	tblrd		*+
 26704  0130AA  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26705  0130AE  000A               	tblrd		*-
 26706  0130B0  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26707  0130B4  EC40  F0A8         	call	i2___ftmul	;wreg free
 26708  0130B8  C027  F039         	movff	?i2___ftmul,i2_scale$4113
 26709  0130BC  C028  F03A         	movff	?i2___ftmul+1,i2_scale$4113+1
 26710  0130C0  C029  F03B         	movff	?i2___ftmul+2,i2_scale$4113+2
 26711                           
 26712                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26713  0130C4  C039  F027         	movff	i2_scale$4113,i2___ftmul@f1
 26714  0130C8  C03A  F028         	movff	i2_scale$4113+1,i2___ftmul@f1+1
 26715  0130CC  C03B  F029         	movff	i2_scale$4113+2,i2___ftmul@f1+2
 26716  0130D0  0E00               	movlw	0
 26717  0130D2  6E12               	movwf	i2___wmul@multiplicand+1,c
 26718  0130D4  0E03               	movlw	3
 26719  0130D6  6E11               	movwf	i2___wmul@multiplicand,c
 26720  0130D8  0E00               	movlw	0
 26721  0130DA  6E04               	movwf	i2___awmod@divisor+1,c
 26722  0130DC  0E0A               	movlw	10
 26723  0130DE  6E03               	movwf	i2___awmod@divisor,c
 26724  0130E0  503C               	movf	i2scale@scl,w,c
 26725  0130E2  6E01               	movwf	i2___awmod@dividend,c
 26726  0130E4  6A02               	clrf	i2___awmod@dividend+1,c
 26727  0130E6  BE01               	btfsc	i2___awmod@dividend,7,c
 26728  0130E8  0602               	decf	i2___awmod@dividend+1,f,c
 26729  0130EA  ECAD  F0B1         	call	i2___awmod	;wreg free
 26730  0130EE  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26731  0130F2  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26732  0130F6  EC69  F0B7         	call	i2___wmul	;wreg free
 26733  0130FA  0EB7               	movlw	low __powers_
 26734  0130FC  240F               	addwf	?i2___wmul,w,c
 26735  0130FE  6EF6               	movwf	tblptrl,c
 26736  013100  0EEB               	movlw	high __powers_
 26737  013102  2010               	addwfc	?i2___wmul+1,w,c
 26738  013104  6EF7               	movwf	tblptrh,c
 26739  013106                     	if	1	;There are 3 active tblptr bytes
 26740  013106  6AF8               	clrf	tblptru,c
 26741  013108  0E00               	movlw	low (__mediumconst shr (0+16))
 26742  01310A  22F8               	addwfc	tblptru,f,c
 26743  01310C                     	endif
 26744  01310C  0009               	tblrd		*+
 26745  01310E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26746  013112  0009               	tblrd		*+
 26747  013114  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26748  013118  000A               	tblrd		*-
 26749  01311A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26750  01311E  EC40  F0A8         	call	i2___ftmul	;wreg free
 26751  013122  C027  F036         	movff	?i2___ftmul,?i2_scale
 26752  013126  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26753  01312A  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26754  01312E  0012               	return	
 26755  013130                     i2l1361:
 26756                           
 26757                           ;doprnt.c: 438: else if(scl > 10)
 26758  013130  503C               	movf	i2scale@scl,w,c
 26759  013132  0A80               	xorlw	128
 26760  013134  0F75               	addlw	-139
 26761  013136  A0D8               	btfss	status,0,c
 26762  013138  D059               	goto	i2l1363
 26763                           
 26764                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 26765  01313A  0E00               	movlw	0
 26766  01313C  6E0A               	movwf	i2___awdiv@divisor+1,c
 26767  01313E  0E0A               	movlw	10
 26768  013140  6E09               	movwf	i2___awdiv@divisor,c
 26769  013142  503C               	movf	i2scale@scl,w,c
 26770  013144  6E07               	movwf	i2___awdiv@dividend,c
 26771  013146  6A08               	clrf	i2___awdiv@dividend+1,c
 26772  013148  BE07               	btfsc	i2___awdiv@dividend,7,c
 26773  01314A  0608               	decf	i2___awdiv@dividend+1,f,c
 26774  01314C  ECFE  F0AF         	call	i2___awdiv	;wreg free
 26775  013150  0E09               	movlw	9
 26776  013152  2407               	addwf	?i2___awdiv,w,c
 26777  013154  6E0F               	movwf	i2___wmul@multiplier,c
 26778  013156  0E00               	movlw	0
 26779  013158  2008               	addwfc	?i2___awdiv+1,w,c
 26780  01315A  6E10               	movwf	i2___wmul@multiplier+1,c
 26781  01315C  0E00               	movlw	0
 26782  01315E  6E12               	movwf	i2___wmul@multiplicand+1,c
 26783  013160  0E03               	movlw	3
 26784  013162  6E11               	movwf	i2___wmul@multiplicand,c
 26785  013164  EC69  F0B7         	call	i2___wmul	;wreg free
 26786  013168  0EB7               	movlw	low __powers_
 26787  01316A  240F               	addwf	?i2___wmul,w,c
 26788  01316C  6EF6               	movwf	tblptrl,c
 26789  01316E  0EEB               	movlw	high __powers_
 26790  013170  2010               	addwfc	?i2___wmul+1,w,c
 26791  013172  6EF7               	movwf	tblptrh,c
 26792  013174                     	if	1	;There are 3 active tblptr bytes
 26793  013174  6AF8               	clrf	tblptru,c
 26794  013176  0E00               	movlw	low (__mediumconst shr (0+16))
 26795  013178  22F8               	addwfc	tblptru,f,c
 26796  01317A                     	endif
 26797  01317A  0009               	tblrd		*+
 26798  01317C  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26799  013180  0009               	tblrd		*+
 26800  013182  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26801  013186  000A               	tblrd		*-
 26802  013188  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26803  01318C  0E00               	movlw	0
 26804  01318E  6E12               	movwf	i2___wmul@multiplicand+1,c
 26805  013190  0E03               	movlw	3
 26806  013192  6E11               	movwf	i2___wmul@multiplicand,c
 26807  013194  0E00               	movlw	0
 26808  013196  6E04               	movwf	i2___awmod@divisor+1,c
 26809  013198  0E0A               	movlw	10
 26810  01319A  6E03               	movwf	i2___awmod@divisor,c
 26811  01319C  503C               	movf	i2scale@scl,w,c
 26812  01319E  6E01               	movwf	i2___awmod@dividend,c
 26813  0131A0  6A02               	clrf	i2___awmod@dividend+1,c
 26814  0131A2  BE01               	btfsc	i2___awmod@dividend,7,c
 26815  0131A4  0602               	decf	i2___awmod@dividend+1,f,c
 26816  0131A6  ECAD  F0B1         	call	i2___awmod	;wreg free
 26817  0131AA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26818  0131AE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26819  0131B2  EC69  F0B7         	call	i2___wmul	;wreg free
 26820  0131B6  0EB7               	movlw	low __powers_
 26821  0131B8  240F               	addwf	?i2___wmul,w,c
 26822  0131BA  6EF6               	movwf	tblptrl,c
 26823  0131BC  0EEB               	movlw	high __powers_
 26824  0131BE  2010               	addwfc	?i2___wmul+1,w,c
 26825  0131C0  6EF7               	movwf	tblptrh,c
 26826  0131C2                     	if	1	;There are 3 active tblptr bytes
 26827  0131C2  6AF8               	clrf	tblptru,c
 26828  0131C4  0E00               	movlw	low (__mediumconst shr (0+16))
 26829  0131C6  22F8               	addwfc	tblptru,f,c
 26830  0131C8                     	endif
 26831  0131C8  0009               	tblrd		*+
 26832  0131CA  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26833  0131CE  0009               	tblrd		*+
 26834  0131D0  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26835  0131D4  000A               	tblrd		*-
 26836  0131D6  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26837  0131DA  EC40  F0A8         	call	i2___ftmul	;wreg free
 26838  0131DE  C027  F036         	movff	?i2___ftmul,?i2_scale
 26839  0131E2  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26840  0131E6  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26841  0131EA  0012               	return	
 26842  0131EC                     i2l1363:
 26843                           
 26844                           ;doprnt.c: 440: return _powers_[scl];
 26845  0131EC  503C               	movf	i2scale@scl,w,c
 26846  0131EE  0D03               	mullw	3
 26847  0131F0  0EB7               	movlw	low __powers_
 26848  0131F2  24F3               	addwf	prodl,w,c
 26849  0131F4  6EF6               	movwf	tblptrl,c
 26850  0131F6  0EEB               	movlw	high __powers_
 26851  0131F8  20F4               	addwfc	prodh,w,c
 26852  0131FA  6EF7               	movwf	tblptrh,c
 26853  0131FC                     	if	1	;There are 3 active tblptr bytes
 26854  0131FC  6AF8               	clrf	tblptru,c
 26855  0131FE  0E00               	movlw	low (__mediumconst shr (0+16))
 26856  013200  22F8               	addwfc	tblptru,f,c
 26857  013202                     	endif
 26858  013202  0009               	tblrd		*+
 26859  013204  CFF5 F036          	movff	tablat,?i2_scale
 26860  013208  0009               	tblrd		*+
 26861  01320A  CFF5 F037          	movff	tablat,?i2_scale+1
 26862  01320E  000A               	tblrd		*-
 26863  013210  CFF5 F038          	movff	tablat,?i2_scale+2
 26864  013214  0012               	return	
 26865  013216                     __end_ofi2_scale:
 26866                           	opt stack 0
 26867                           tosu	equ	0xFFF
 26868                           tosh	equ	0xFFE
 26869                           tosl	equ	0xFFD
 26870                           pclatu	equ	0xFFB
 26871                           pclath	equ	0xFFA
 26872                           tblptru	equ	0xFF8
 26873                           tblptrh	equ	0xFF7
 26874                           tblptrl	equ	0xFF6
 26875                           tablat	equ	0xFF5
 26876                           prodh	equ	0xFF4
 26877                           prodl	equ	0xFF3
 26878                           intcon	equ	0xFF2
 26879                           indf0	equ	0xFEF
 26880                           postinc0	equ	0xFEE
 26881                           fsr0h	equ	0xFEA
 26882                           fsr0l	equ	0xFE9
 26883                           wreg	equ	0xFE8
 26884                           indf1	equ	0xFE7
 26885                           postdec1	equ	0xFE5
 26886                           plusw1	equ	0xFE3
 26887                           fsr1h	equ	0xFE2
 26888                           fsr1l	equ	0xFE1
 26889                           bsr	equ	0xFE0
 26890                           indf2	equ	0xFDF
 26891                           postinc2	equ	0xFDE
 26892                           postdec2	equ	0xFDD
 26893                           plusw2	equ	0xFDB
 26894                           fsr2h	equ	0xFDA
 26895                           fsr2l	equ	0xFD9
 26896                           status	equ	0xFD8
 26897                           
 26898 ;; *************** function i2_putch *****************
 26899 ;; Defined at:
 26900 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 26901 ;; Parameters:    Size  Location     Type
 26902 ;;  txData          1    wreg     unsigned char 
 26903 ;; Auto vars:     Size  Location     Type
 26904 ;;  txData          1    1[COMRAM] unsigned char 
 26905 ;; Return value:  Size  Location     Type
 26906 ;;                  1    wreg      void 
 26907 ;; Registers used:
 26908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26909 ;; Tracked objects:
 26910 ;;		On entry : 0/0
 26911 ;;		On exit  : 0/0
 26912 ;;		Unchanged: 0/0
 26913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26918 ;;Total ram usage:        1 bytes
 26919 ;; Hardware stack levels used:    1
 26920 ;; Hardware stack levels required when called:    1
 26921 ;; This function calls:
 26922 ;;		i2_EUSART2_Write
 26923 ;; This function is called by:
 26924 ;;		i2_printf
 26925 ;; This function uses a non-reentrant model
 26926 ;;
 26927                           
 26928                           	psect	text93
 26929  01712A                     __ptext93:
 26930                           	opt stack 0
 26931  01712A                     i2_putch:
 26932                           	opt stack 14
 26933                           
 26934                           ;incstack = 0
 26935                           ;i2putch@txData stored from wreg
 26936  01712A  6E02               	movwf	i2putch@txData,c
 26937                           
 26938                           ;eusart2.c: 195: EUSART2_Write(txData);
 26939  01712C  5002               	movf	i2putch@txData,w,c
 26940  01712E  ECBE  F0B4         	call	i2_EUSART2_Write
 26941  017132  0012               	return		;funcret
 26942  017134                     __end_ofi2_putch:
 26943                           	opt stack 0
 26944                           tosu	equ	0xFFF
 26945                           tosh	equ	0xFFE
 26946                           tosl	equ	0xFFD
 26947                           pclatu	equ	0xFFB
 26948                           pclath	equ	0xFFA
 26949                           tblptru	equ	0xFF8
 26950                           tblptrh	equ	0xFF7
 26951                           tblptrl	equ	0xFF6
 26952                           tablat	equ	0xFF5
 26953                           prodh	equ	0xFF4
 26954                           prodl	equ	0xFF3
 26955                           intcon	equ	0xFF2
 26956                           indf0	equ	0xFEF
 26957                           postinc0	equ	0xFEE
 26958                           fsr0h	equ	0xFEA
 26959                           fsr0l	equ	0xFE9
 26960                           wreg	equ	0xFE8
 26961                           indf1	equ	0xFE7
 26962                           postdec1	equ	0xFE5
 26963                           plusw1	equ	0xFE3
 26964                           fsr1h	equ	0xFE2
 26965                           fsr1l	equ	0xFE1
 26966                           bsr	equ	0xFE0
 26967                           indf2	equ	0xFDF
 26968                           postinc2	equ	0xFDE
 26969                           postdec2	equ	0xFDD
 26970                           plusw2	equ	0xFDB
 26971                           fsr2h	equ	0xFDA
 26972                           fsr2l	equ	0xFD9
 26973                           status	equ	0xFD8
 26974                           
 26975 ;; *************** function i2_EUSART2_Write *****************
 26976 ;; Defined at:
 26977 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 26978 ;; Parameters:    Size  Location     Type
 26979 ;;  txData          1    wreg     unsigned char 
 26980 ;; Auto vars:     Size  Location     Type
 26981 ;;  txData          1    0[COMRAM] unsigned char 
 26982 ;; Return value:  Size  Location     Type
 26983 ;;                  1    wreg      void 
 26984 ;; Registers used:
 26985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26986 ;; Tracked objects:
 26987 ;;		On entry : 0/0
 26988 ;;		On exit  : 0/0
 26989 ;;		Unchanged: 0/0
 26990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26995 ;;Total ram usage:        1 bytes
 26996 ;; Hardware stack levels used:    1
 26997 ;; This function calls:
 26998 ;;		Nothing
 26999 ;; This function is called by:
 27000 ;;		i2_putch
 27001 ;; This function uses a non-reentrant model
 27002 ;;
 27003                           
 27004                           	psect	text94
 27005  01697C                     __ptext94:
 27006                           	opt stack 0
 27007  01697C                     i2_EUSART2_Write:
 27008                           	opt stack 14
 27009                           
 27010                           ;incstack = 0
 27011                           ;i2EUSART2_Write@txData stored from wreg
 27012  01697C  6E01               	movwf	i2EUSART2_Write@txData,c
 27013                           
 27014                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 27015  01697E  D002               	goto	i2l388
 27016  016980                     i2l389:
 27017                           
 27018                           ; BSR set to: 1
 27019  016980  0004               	clrwdt		;# 
 27020                           
 27021                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 27022  016982  827E               	bsf	3966,1,c	;volatile
 27023  016984                     i2l388:
 27024  016984  0101               	movlb	1	; () banked
 27025  016986  51D4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27026  016988  B4D8               	btfsc	status,2,c
 27027  01698A  D7FA               	goto	i2l389
 27028                           
 27029                           ; BSR set to: 1
 27030                           ;eusart2.c: 167: }
 27031                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 27032  01698C  927E               	bcf	3966,1,c	;volatile
 27033                           
 27034                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 27035  01698E  010E               	movlb	14	; () banked
 27036  016990  BD2C               	btfsc	44,6,b	;volatile
 27037  016992  D003               	goto	i2l391
 27038                           
 27039                           ; BSR set to: 14
 27040                           ;eusart2.c: 172: {
 27041                           ;eusart2.c: 173: TX2REG = txData;
 27042  016994  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 27043                           
 27044                           ;eusart2.c: 174: }
 27045  016998  D013               	goto	i2l392
 27046  01699A                     i2l391:
 27047                           
 27048                           ; BSR set to: 14
 27049                           ;eusart2.c: 175: else
 27050                           ;eusart2.c: 176: {
 27051                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 27052  01699A  9D2C               	bcf	44,6,b	;volatile
 27053                           
 27054                           ; BSR set to: 14
 27055                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 27056  01699C  0101               	movlb	1	; () banked
 27057  01699E  51D6               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27058  0169A0  0D01               	mullw	1
 27059  0169A2  0E00               	movlw	low _eusart2TxBuffer
 27060  0169A4  24F3               	addwf	prodl,w,c
 27061  0169A6  6ED9               	movwf	fsr2l,c
 27062  0169A8  0E03               	movlw	high _eusart2TxBuffer
 27063  0169AA  20F4               	addwfc	prodh,w,c
 27064  0169AC  6EDA               	movwf	fsr2h,c
 27065  0169AE  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 27066                           
 27067                           ; BSR set to: 1
 27068  0169B2  2BD6               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27069                           
 27070                           ; BSR set to: 1
 27071                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27072  0169B4  0E7F               	movlw	127
 27073  0169B6  65D6               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27074  0169B8  D002               	goto	i2l393
 27075                           
 27076                           ; BSR set to: 1
 27077                           ;eusart2.c: 180: {
 27078                           ;eusart2.c: 181: eusart2TxHead = 0;
 27079  0169BA  0E00               	movlw	0
 27080  0169BC  6FD6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27081  0169BE                     i2l393:
 27082                           
 27083                           ; BSR set to: 1
 27084                           ;eusart2.c: 182: }
 27085                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 27086                           
 27087                           ; BSR set to: 1
 27088  0169BE  07D4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27089  0169C0                     i2l392:
 27090                           
 27091                           ;eusart2.c: 184: }
 27092                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 27093                           
 27094                           ; BSR set to: 1
 27095  0169C0  010E               	movlb	14	; () banked
 27096  0169C2  8D2C               	bsf	44,6,b	;volatile
 27097                           
 27098                           ; BSR set to: 14
 27099  0169C4  0012               	return		;funcret
 27100  0169C6                     __end_ofi2_EUSART2_Write:
 27101                           	opt stack 0
 27102                           tosu	equ	0xFFF
 27103                           tosh	equ	0xFFE
 27104                           tosl	equ	0xFFD
 27105                           pclatu	equ	0xFFB
 27106                           pclath	equ	0xFFA
 27107                           tblptru	equ	0xFF8
 27108                           tblptrh	equ	0xFF7
 27109                           tblptrl	equ	0xFF6
 27110                           tablat	equ	0xFF5
 27111                           prodh	equ	0xFF4
 27112                           prodl	equ	0xFF3
 27113                           intcon	equ	0xFF2
 27114                           indf0	equ	0xFEF
 27115                           postinc0	equ	0xFEE
 27116                           fsr0h	equ	0xFEA
 27117                           fsr0l	equ	0xFE9
 27118                           wreg	equ	0xFE8
 27119                           indf1	equ	0xFE7
 27120                           postdec1	equ	0xFE5
 27121                           plusw1	equ	0xFE3
 27122                           fsr1h	equ	0xFE2
 27123                           fsr1l	equ	0xFE1
 27124                           bsr	equ	0xFE0
 27125                           indf2	equ	0xFDF
 27126                           postinc2	equ	0xFDE
 27127                           postdec2	equ	0xFDD
 27128                           plusw2	equ	0xFDB
 27129                           fsr2h	equ	0xFDA
 27130                           fsr2l	equ	0xFD9
 27131                           status	equ	0xFD8
 27132                           
 27133 ;; *************** function i2_isdigit *****************
 27134 ;; Defined at:
 27135 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27136 ;; Parameters:    Size  Location     Type
 27137 ;;  c               1    wreg     unsigned char 
 27138 ;; Auto vars:     Size  Location     Type
 27139 ;;  c               1    2[COMRAM] unsigned char 
 27140 ;; Return value:  Size  Location     Type
 27141 ;;		None               void
 27142 ;; Registers used:
 27143 ;;		wreg, status,2, status,0
 27144 ;; Tracked objects:
 27145 ;;		On entry : 0/0
 27146 ;;		On exit  : 0/0
 27147 ;;		Unchanged: 0/0
 27148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27152 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27153 ;;Total ram usage:        3 bytes
 27154 ;; Hardware stack levels used:    1
 27155 ;; This function calls:
 27156 ;;		Nothing
 27157 ;; This function is called by:
 27158 ;;		i2_printf
 27159 ;; This function uses a non-reentrant model
 27160 ;;
 27161                           
 27162                           	psect	text95
 27163  016F82                     __ptext95:
 27164                           	opt stack 0
 27165  016F82                     i2_isdigit:
 27166                           	opt stack 15
 27167                           
 27168                           ; BSR set to: 14
 27169                           ;incstack = 0
 27170                           ;i2isdigit@c stored from wreg
 27171  016F82  6E03               	movwf	i2isdigit@c,c
 27172  016F84  0E00               	movlw	0
 27173  016F86  6E02               	movwf	i2_isdigit$3221,c
 27174  016F88  0E3A               	movlw	58
 27175  016F8A  6003               	cpfslt	i2isdigit@c,c
 27176  016F8C  D005               	goto	i2l1889
 27177  016F8E  0E2F               	movlw	47
 27178  016F90  6403               	cpfsgt	i2isdigit@c,c
 27179  016F92  D002               	goto	i2l1889
 27180  016F94  0E01               	movlw	1
 27181  016F96  6E02               	movwf	i2_isdigit$3221,c
 27182  016F98                     i2l1889:
 27183  016F98  C002  F001         	movff	i2_isdigit$3221,??i2_isdigit
 27184  016F9C  3001               	rrcf	??i2_isdigit,w,c
 27185  016F9E  0012               	return	
 27186  016FA0                     __end_ofi2_isdigit:
 27187                           	opt stack 0
 27188                           tosu	equ	0xFFF
 27189                           tosh	equ	0xFFE
 27190                           tosl	equ	0xFFD
 27191                           pclatu	equ	0xFFB
 27192                           pclath	equ	0xFFA
 27193                           tblptru	equ	0xFF8
 27194                           tblptrh	equ	0xFF7
 27195                           tblptrl	equ	0xFF6
 27196                           tablat	equ	0xFF5
 27197                           prodh	equ	0xFF4
 27198                           prodl	equ	0xFF3
 27199                           intcon	equ	0xFF2
 27200                           indf0	equ	0xFEF
 27201                           postinc0	equ	0xFEE
 27202                           fsr0h	equ	0xFEA
 27203                           fsr0l	equ	0xFE9
 27204                           wreg	equ	0xFE8
 27205                           indf1	equ	0xFE7
 27206                           postdec1	equ	0xFE5
 27207                           plusw1	equ	0xFE3
 27208                           fsr1h	equ	0xFE2
 27209                           fsr1l	equ	0xFE1
 27210                           bsr	equ	0xFE0
 27211                           indf2	equ	0xFDF
 27212                           postinc2	equ	0xFDE
 27213                           postdec2	equ	0xFDD
 27214                           plusw2	equ	0xFDB
 27215                           fsr2h	equ	0xFDA
 27216                           fsr2l	equ	0xFD9
 27217                           status	equ	0xFD8
 27218                           
 27219 ;; *************** function i2_fround *****************
 27220 ;; Defined at:
 27221 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27222 ;; Parameters:    Size  Location     Type
 27223 ;;  prec            1    wreg     unsigned char 
 27224 ;; Auto vars:     Size  Location     Type
 27225 ;;  prec            1   62[COMRAM] unsigned char 
 27226 ;; Return value:  Size  Location     Type
 27227 ;;                  3   53[COMRAM] unsigned char 
 27228 ;; Registers used:
 27229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27230 ;; Tracked objects:
 27231 ;;		On entry : 0/0
 27232 ;;		On exit  : 0/0
 27233 ;;		Unchanged: 0/0
 27234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27235 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27236 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27238 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27239 ;;Total ram usage:       10 bytes
 27240 ;; Hardware stack levels used:    1
 27241 ;; Hardware stack levels required when called:    2
 27242 ;; This function calls:
 27243 ;;		i2___awdiv
 27244 ;;		i2___awmod
 27245 ;;		i2___ftmul
 27246 ;;		i2___wmul
 27247 ;; This function is called by:
 27248 ;;		i2_printf
 27249 ;; This function uses a non-reentrant model
 27250 ;;
 27251                           
 27252                           	psect	text96
 27253  013812                     __ptext96:
 27254                           	opt stack 0
 27255  013812                     i2_fround:
 27256                           	opt stack 13
 27257                           
 27258                           ;incstack = 0
 27259                           ;i2fround@prec stored from wreg
 27260  013812  6E3F               	movwf	i2fround@prec,c
 27261                           
 27262                           ;doprnt.c: 413: if(prec>=110)
 27263  013814  0E6D               	movlw	109
 27264  013816  643F               	cpfsgt	i2fround@prec,c
 27265  013818  D0A8               	goto	i2l1350
 27266                           
 27267                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27268  01381A  0E00               	movlw	0
 27269  01381C  6E12               	movwf	i2___wmul@multiplicand+1,c
 27270  01381E  0E03               	movlw	3
 27271  013820  6E11               	movwf	i2___wmul@multiplicand,c
 27272  013822  0E00               	movlw	0
 27273  013824  6E0A               	movwf	i2___awdiv@divisor+1,c
 27274  013826  0E0A               	movlw	10
 27275  013828  6E09               	movwf	i2___awdiv@divisor,c
 27276  01382A  0E00               	movlw	0
 27277  01382C  6E04               	movwf	i2___awmod@divisor+1,c
 27278  01382E  0E64               	movlw	100
 27279  013830  6E03               	movwf	i2___awmod@divisor,c
 27280  013832  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 27281  013836  6A02               	clrf	i2___awmod@dividend+1,c
 27282  013838  ECAD  F0B1         	call	i2___awmod	;wreg free
 27283  01383C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 27284  013840  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 27285  013844  ECFE  F0AF         	call	i2___awdiv	;wreg free
 27286  013848  0E09               	movlw	9
 27287  01384A  2407               	addwf	?i2___awdiv,w,c
 27288  01384C  6E0F               	movwf	i2___wmul@multiplier,c
 27289  01384E  0E00               	movlw	0
 27290  013850  2008               	addwfc	?i2___awdiv+1,w,c
 27291  013852  6E10               	movwf	i2___wmul@multiplier+1,c
 27292  013854  EC69  F0B7         	call	i2___wmul	;wreg free
 27293  013858  0EDE               	movlw	low __npowers_
 27294  01385A  240F               	addwf	?i2___wmul,w,c
 27295  01385C  6EF6               	movwf	tblptrl,c
 27296  01385E  0EEB               	movlw	high __npowers_
 27297  013860  2010               	addwfc	?i2___wmul+1,w,c
 27298  013862  6EF7               	movwf	tblptrh,c
 27299  013864                     	if	1	;There are 3 active tblptr bytes
 27300  013864  6AF8               	clrf	tblptru,c
 27301  013866  0E00               	movlw	low (__mediumconst shr (0+16))
 27302  013868  22F8               	addwfc	tblptru,f,c
 27303  01386A                     	endif
 27304  01386A  0009               	tblrd		*+
 27305  01386C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 27306  013870  0009               	tblrd		*+
 27307  013872  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 27308  013876  000A               	tblrd		*-
 27309  013878  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 27310  01387C  0E00               	movlw	0
 27311  01387E  6E0A               	movwf	i2___awdiv@divisor+1,c
 27312  013880  0E64               	movlw	100
 27313  013882  6E09               	movwf	i2___awdiv@divisor,c
 27314  013884  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27315  013888  6A08               	clrf	i2___awdiv@dividend+1,c
 27316  01388A  ECFE  F0AF         	call	i2___awdiv	;wreg free
 27317  01388E  0E12               	movlw	18
 27318  013890  2407               	addwf	?i2___awdiv,w,c
 27319  013892  6E0F               	movwf	i2___wmul@multiplier,c
 27320  013894  0E00               	movlw	0
 27321  013896  2008               	addwfc	?i2___awdiv+1,w,c
 27322  013898  6E10               	movwf	i2___wmul@multiplier+1,c
 27323  01389A  0E00               	movlw	0
 27324  01389C  6E12               	movwf	i2___wmul@multiplicand+1,c
 27325  01389E  0E03               	movlw	3
 27326  0138A0  6E11               	movwf	i2___wmul@multiplicand,c
 27327  0138A2  EC69  F0B7         	call	i2___wmul	;wreg free
 27328  0138A6  0EDE               	movlw	low __npowers_
 27329  0138A8  240F               	addwf	?i2___wmul,w,c
 27330  0138AA  6EF6               	movwf	tblptrl,c
 27331  0138AC  0EEB               	movlw	high __npowers_
 27332  0138AE  2010               	addwfc	?i2___wmul+1,w,c
 27333  0138B0  6EF7               	movwf	tblptrh,c
 27334  0138B2                     	if	1	;There are 3 active tblptr bytes
 27335  0138B2  6AF8               	clrf	tblptru,c
 27336  0138B4  0E00               	movlw	low (__mediumconst shr (0+16))
 27337  0138B6  22F8               	addwfc	tblptru,f,c
 27338  0138B8                     	endif
 27339  0138B8  0009               	tblrd		*+
 27340  0138BA  CFF5 F027          	movff	tablat,i2___ftmul@f1
 27341  0138BE  0009               	tblrd		*+
 27342  0138C0  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 27343  0138C4  000A               	tblrd		*-
 27344  0138C6  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 27345  0138CA  EC40  F0A8         	call	i2___ftmul	;wreg free
 27346  0138CE  C027  F03C         	movff	?i2___ftmul,i2_fround$4111
 27347  0138D2  C028  F03D         	movff	?i2___ftmul+1,i2_fround$4111+1
 27348  0138D6  C029  F03E         	movff	?i2___ftmul+2,i2_fround$4111+2
 27349                           
 27350                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27351  0138DA  0E00               	movlw	0
 27352  0138DC  6E12               	movwf	i2___wmul@multiplicand+1,c
 27353  0138DE  0E03               	movlw	3
 27354  0138E0  6E11               	movwf	i2___wmul@multiplicand,c
 27355  0138E2  0E00               	movlw	0
 27356  0138E4  6E04               	movwf	i2___awmod@divisor+1,c
 27357  0138E6  0E0A               	movlw	10
 27358  0138E8  6E03               	movwf	i2___awmod@divisor,c
 27359  0138EA  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 27360  0138EE  6A02               	clrf	i2___awmod@dividend+1,c
 27361  0138F0  ECAD  F0B1         	call	i2___awmod	;wreg free
 27362  0138F4  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 27363  0138F8  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 27364  0138FC  EC69  F0B7         	call	i2___wmul	;wreg free
 27365  013900  0EDE               	movlw	low __npowers_
 27366  013902  240F               	addwf	?i2___wmul,w,c
 27367  013904  6EF6               	movwf	tblptrl,c
 27368  013906  0EEB               	movlw	high __npowers_
 27369  013908  2010               	addwfc	?i2___wmul+1,w,c
 27370  01390A  6EF7               	movwf	tblptrh,c
 27371  01390C                     	if	1	;There are 3 active tblptr bytes
 27372  01390C  6AF8               	clrf	tblptru,c
 27373  01390E  0E00               	movlw	low (__mediumconst shr (0+16))
 27374  013910  22F8               	addwfc	tblptru,f,c
 27375  013912                     	endif
 27376  013912  0009               	tblrd		*+
 27377  013914  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 27378  013918  0009               	tblrd		*+
 27379  01391A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 27380  01391E  000A               	tblrd		*-
 27381  013920  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 27382  013924  C03C  F027         	movff	i2_fround$4111,i2___ftmul@f1
 27383  013928  C03D  F028         	movff	i2_fround$4111+1,i2___ftmul@f1+1
 27384  01392C  C03E  F029         	movff	i2_fround$4111+2,i2___ftmul@f1+2
 27385  013930  EC40  F0A8         	call	i2___ftmul	;wreg free
 27386  013934  C027  F039         	movff	?i2___ftmul,i2_fround$4112
 27387  013938  C028  F03A         	movff	?i2___ftmul+1,i2_fround$4112+1
 27388  01393C  C029  F03B         	movff	?i2___ftmul+2,i2_fround$4112+2
 27389                           
 27390                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27391  013940  C039  F027         	movff	i2_fround$4112,i2___ftmul@f1
 27392  013944  C03A  F028         	movff	i2_fround$4112+1,i2___ftmul@f1+1
 27393  013948  C03B  F029         	movff	i2_fround$4112+2,i2___ftmul@f1+2
 27394  01394C  0E00               	movlw	0
 27395  01394E  6E2A               	movwf	i2___ftmul@f2,c
 27396  013950  0E00               	movlw	0
 27397  013952  6E2B               	movwf	i2___ftmul@f2+1,c
 27398  013954  0E3F               	movlw	63
 27399  013956  6E2C               	movwf	i2___ftmul@f2+2,c
 27400  013958  EC40  F0A8         	call	i2___ftmul	;wreg free
 27401  01395C  C027  F036         	movff	?i2___ftmul,?i2_fround
 27402  013960  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 27403  013964  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 27404  013968  0012               	return	
 27405  01396A                     i2l1350:
 27406                           
 27407                           ;doprnt.c: 415: else if(prec > 10)
 27408  01396A  0E0A               	movlw	10
 27409  01396C  643F               	cpfsgt	i2fround@prec,c
 27410  01396E  D069               	goto	i2l1353
 27411                           
 27412                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27413  013970  0E00               	movlw	0
 27414  013972  6E12               	movwf	i2___wmul@multiplicand+1,c
 27415  013974  0E03               	movlw	3
 27416  013976  6E11               	movwf	i2___wmul@multiplicand,c
 27417  013978  0E00               	movlw	0
 27418  01397A  6E04               	movwf	i2___awmod@divisor+1,c
 27419  01397C  0E0A               	movlw	10
 27420  01397E  6E03               	movwf	i2___awmod@divisor,c
 27421  013980  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 27422  013984  6A02               	clrf	i2___awmod@dividend+1,c
 27423  013986  ECAD  F0B1         	call	i2___awmod	;wreg free
 27424  01398A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 27425  01398E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 27426  013992  EC69  F0B7         	call	i2___wmul	;wreg free
 27427  013996  0EDE               	movlw	low __npowers_
 27428  013998  240F               	addwf	?i2___wmul,w,c
 27429  01399A  6EF6               	movwf	tblptrl,c
 27430  01399C  0EEB               	movlw	high __npowers_
 27431  01399E  2010               	addwfc	?i2___wmul+1,w,c
 27432  0139A0  6EF7               	movwf	tblptrh,c
 27433  0139A2                     	if	1	;There are 3 active tblptr bytes
 27434  0139A2  6AF8               	clrf	tblptru,c
 27435  0139A4  0E00               	movlw	low (__mediumconst shr (0+16))
 27436  0139A6  22F8               	addwfc	tblptru,f,c
 27437  0139A8                     	endif
 27438  0139A8  0009               	tblrd		*+
 27439  0139AA  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 27440  0139AE  0009               	tblrd		*+
 27441  0139B0  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 27442  0139B4  000A               	tblrd		*-
 27443  0139B6  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 27444  0139BA  0E00               	movlw	0
 27445  0139BC  6E0A               	movwf	i2___awdiv@divisor+1,c
 27446  0139BE  0E0A               	movlw	10
 27447  0139C0  6E09               	movwf	i2___awdiv@divisor,c
 27448  0139C2  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27449  0139C6  6A08               	clrf	i2___awdiv@dividend+1,c
 27450  0139C8  ECFE  F0AF         	call	i2___awdiv	;wreg free
 27451  0139CC  0E09               	movlw	9
 27452  0139CE  2407               	addwf	?i2___awdiv,w,c
 27453  0139D0  6E0F               	movwf	i2___wmul@multiplier,c
 27454  0139D2  0E00               	movlw	0
 27455  0139D4  2008               	addwfc	?i2___awdiv+1,w,c
 27456  0139D6  6E10               	movwf	i2___wmul@multiplier+1,c
 27457  0139D8  0E00               	movlw	0
 27458  0139DA  6E12               	movwf	i2___wmul@multiplicand+1,c
 27459  0139DC  0E03               	movlw	3
 27460  0139DE  6E11               	movwf	i2___wmul@multiplicand,c
 27461  0139E0  EC69  F0B7         	call	i2___wmul	;wreg free
 27462  0139E4  0EDE               	movlw	low __npowers_
 27463  0139E6  240F               	addwf	?i2___wmul,w,c
 27464  0139E8  6EF6               	movwf	tblptrl,c
 27465  0139EA  0EEB               	movlw	high __npowers_
 27466  0139EC  2010               	addwfc	?i2___wmul+1,w,c
 27467  0139EE  6EF7               	movwf	tblptrh,c
 27468  0139F0                     	if	1	;There are 3 active tblptr bytes
 27469  0139F0  6AF8               	clrf	tblptru,c
 27470  0139F2  0E00               	movlw	low (__mediumconst shr (0+16))
 27471  0139F4  22F8               	addwfc	tblptru,f,c
 27472  0139F6                     	endif
 27473  0139F6  0009               	tblrd		*+
 27474  0139F8  CFF5 F027          	movff	tablat,i2___ftmul@f1
 27475  0139FC  0009               	tblrd		*+
 27476  0139FE  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 27477  013A02  000A               	tblrd		*-
 27478  013A04  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 27479  013A08  EC40  F0A8         	call	i2___ftmul	;wreg free
 27480  013A0C  C027  F03C         	movff	?i2___ftmul,i2_fround$4111
 27481  013A10  C028  F03D         	movff	?i2___ftmul+1,i2_fround$4111+1
 27482  013A14  C029  F03E         	movff	?i2___ftmul+2,i2_fround$4111+2
 27483                           
 27484                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27485  013A18  C03C  F027         	movff	i2_fround$4111,i2___ftmul@f1
 27486  013A1C  C03D  F028         	movff	i2_fround$4111+1,i2___ftmul@f1+1
 27487  013A20  C03E  F029         	movff	i2_fround$4111+2,i2___ftmul@f1+2
 27488  013A24  0E00               	movlw	0
 27489  013A26  6E2A               	movwf	i2___ftmul@f2,c
 27490  013A28  0E00               	movlw	0
 27491  013A2A  6E2B               	movwf	i2___ftmul@f2+1,c
 27492  013A2C  0E3F               	movlw	63
 27493  013A2E  6E2C               	movwf	i2___ftmul@f2+2,c
 27494  013A30  EC40  F0A8         	call	i2___ftmul	;wreg free
 27495  013A34  C027  F036         	movff	?i2___ftmul,?i2_fround
 27496  013A38  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 27497  013A3C  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 27498  013A40  0012               	return	
 27499  013A42                     i2l1353:
 27500                           
 27501                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27502  013A42  503F               	movf	i2fround@prec,w,c
 27503  013A44  0D03               	mullw	3
 27504  013A46  0EDE               	movlw	low __npowers_
 27505  013A48  24F3               	addwf	prodl,w,c
 27506  013A4A  6EF6               	movwf	tblptrl,c
 27507  013A4C  0EEB               	movlw	high __npowers_
 27508  013A4E  20F4               	addwfc	prodh,w,c
 27509  013A50  6EF7               	movwf	tblptrh,c
 27510  013A52                     	if	1	;There are 3 active tblptr bytes
 27511  013A52  6AF8               	clrf	tblptru,c
 27512  013A54  0E00               	movlw	low (__mediumconst shr (0+16))
 27513  013A56  22F8               	addwfc	tblptru,f,c
 27514  013A58                     	endif
 27515  013A58  0009               	tblrd		*+
 27516  013A5A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 27517  013A5E  0009               	tblrd		*+
 27518  013A60  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 27519  013A64  000A               	tblrd		*-
 27520  013A66  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 27521  013A6A  0E00               	movlw	0
 27522  013A6C  6E2A               	movwf	i2___ftmul@f2,c
 27523  013A6E  0E00               	movlw	0
 27524  013A70  6E2B               	movwf	i2___ftmul@f2+1,c
 27525  013A72  0E3F               	movlw	63
 27526  013A74  6E2C               	movwf	i2___ftmul@f2+2,c
 27527  013A76  EC40  F0A8         	call	i2___ftmul	;wreg free
 27528  013A7A  C027  F036         	movff	?i2___ftmul,?i2_fround
 27529  013A7E  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 27530  013A82  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 27531  013A86  0012               	return	
 27532  013A88                     __end_ofi2_fround:
 27533                           	opt stack 0
 27534                           tosu	equ	0xFFF
 27535                           tosh	equ	0xFFE
 27536                           tosl	equ	0xFFD
 27537                           pclatu	equ	0xFFB
 27538                           pclath	equ	0xFFA
 27539                           tblptru	equ	0xFF8
 27540                           tblptrh	equ	0xFF7
 27541                           tblptrl	equ	0xFF6
 27542                           tablat	equ	0xFF5
 27543                           prodh	equ	0xFF4
 27544                           prodl	equ	0xFF3
 27545                           intcon	equ	0xFF2
 27546                           indf0	equ	0xFEF
 27547                           postinc0	equ	0xFEE
 27548                           fsr0h	equ	0xFEA
 27549                           fsr0l	equ	0xFE9
 27550                           wreg	equ	0xFE8
 27551                           indf1	equ	0xFE7
 27552                           postdec1	equ	0xFE5
 27553                           plusw1	equ	0xFE3
 27554                           fsr1h	equ	0xFE2
 27555                           fsr1l	equ	0xFE1
 27556                           bsr	equ	0xFE0
 27557                           indf2	equ	0xFDF
 27558                           postinc2	equ	0xFDE
 27559                           postdec2	equ	0xFDD
 27560                           plusw2	equ	0xFDB
 27561                           fsr2h	equ	0xFDA
 27562                           fsr2l	equ	0xFD9
 27563                           status	equ	0xFD8
 27564                           
 27565 ;; *************** function i2___awmod *****************
 27566 ;; Defined at:
 27567 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 27568 ;; Parameters:    Size  Location     Type
 27569 ;;  dividend        2    0[COMRAM] int 
 27570 ;;  divisor         2    2[COMRAM] int 
 27571 ;; Auto vars:     Size  Location     Type
 27572 ;;  __awmod         1    5[COMRAM] unsigned char 
 27573 ;;  __awmod         1    4[COMRAM] unsigned char 
 27574 ;; Return value:  Size  Location     Type
 27575 ;;                  2    0[COMRAM] int 
 27576 ;; Registers used:
 27577 ;;		wreg, status,2, status,0
 27578 ;; Tracked objects:
 27579 ;;		On entry : 0/0
 27580 ;;		On exit  : 0/0
 27581 ;;		Unchanged: 0/0
 27582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27586 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27587 ;;Total ram usage:        6 bytes
 27588 ;; Hardware stack levels used:    1
 27589 ;; This function calls:
 27590 ;;		Nothing
 27591 ;; This function is called by:
 27592 ;;		i2_fround
 27593 ;;		i2_scale
 27594 ;; This function uses a non-reentrant model
 27595 ;;
 27596                           
 27597                           	psect	text97
 27598  01635A                     __ptext97:
 27599                           	opt stack 0
 27600  01635A                     i2___awmod:
 27601                           	opt stack 14
 27602                           
 27603                           ;incstack = 0
 27604  01635A  0E00               	movlw	0
 27605  01635C  6E06               	movwf	i2___awmod@sign,c
 27606  01635E  AE02               	btfss	i2___awmod@dividend+1,7,c
 27607  016360  D006               	goto	i2l1694
 27608  016362  6C01               	negf	i2___awmod@dividend,c
 27609  016364  1E02               	comf	i2___awmod@dividend+1,f,c
 27610  016366  B0D8               	btfsc	status,0,c
 27611  016368  2A02               	incf	i2___awmod@dividend+1,f,c
 27612  01636A  0E01               	movlw	1
 27613  01636C  6E06               	movwf	i2___awmod@sign,c
 27614  01636E                     i2l1694:
 27615  01636E  AE04               	btfss	i2___awmod@divisor+1,7,c
 27616  016370  D004               	goto	i2l1695
 27617  016372  6C03               	negf	i2___awmod@divisor,c
 27618  016374  1E04               	comf	i2___awmod@divisor+1,f,c
 27619  016376  B0D8               	btfsc	status,0,c
 27620  016378  2A04               	incf	i2___awmod@divisor+1,f,c
 27621  01637A                     i2l1695:
 27622  01637A  5003               	movf	i2___awmod@divisor,w,c
 27623  01637C  1004               	iorwf	i2___awmod@divisor+1,w,c
 27624  01637E  B4D8               	btfsc	status,2,c
 27625  016380  D018               	goto	i2l1702
 27626  016382  0E01               	movlw	1
 27627  016384  6E05               	movwf	i2___awmod@counter,c
 27628  016386  D004               	goto	i2l1697
 27629  016388  90D8               	bcf	status,0,c
 27630  01638A  3603               	rlcf	i2___awmod@divisor,f,c
 27631  01638C  3604               	rlcf	i2___awmod@divisor+1,f,c
 27632  01638E  2A05               	incf	i2___awmod@counter,f,c
 27633  016390                     i2l1697:
 27634  016390  AE04               	btfss	i2___awmod@divisor+1,7,c
 27635  016392  D7FA               	goto	i2l1698
 27636  016394                     i2u1347_40:
 27637  016394  5003               	movf	i2___awmod@divisor,w,c
 27638  016396  5C01               	subwf	i2___awmod@dividend,w,c
 27639  016398  5004               	movf	i2___awmod@divisor+1,w,c
 27640  01639A  5802               	subwfb	i2___awmod@dividend+1,w,c
 27641  01639C  A0D8               	btfss	status,0,c
 27642  01639E  D004               	goto	i2l1701
 27643  0163A0  5003               	movf	i2___awmod@divisor,w,c
 27644  0163A2  5E01               	subwf	i2___awmod@dividend,f,c
 27645  0163A4  5004               	movf	i2___awmod@divisor+1,w,c
 27646  0163A6  5A02               	subwfb	i2___awmod@dividend+1,f,c
 27647  0163A8                     i2l1701:
 27648  0163A8  90D8               	bcf	status,0,c
 27649  0163AA  3204               	rrcf	i2___awmod@divisor+1,f,c
 27650  0163AC  3203               	rrcf	i2___awmod@divisor,f,c
 27651  0163AE  2E05               	decfsz	i2___awmod@counter,f,c
 27652  0163B0  D7F1               	goto	i2u1347_40
 27653  0163B2                     i2l1702:
 27654  0163B2  5006               	movf	i2___awmod@sign,w,c
 27655  0163B4  B4D8               	btfsc	status,2,c
 27656  0163B6  D004               	goto	i2l1703
 27657  0163B8  6C01               	negf	i2___awmod@dividend,c
 27658  0163BA  1E02               	comf	i2___awmod@dividend+1,f,c
 27659  0163BC  B0D8               	btfsc	status,0,c
 27660  0163BE  2A02               	incf	i2___awmod@dividend+1,f,c
 27661  0163C0                     i2l1703:
 27662  0163C0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 27663  0163C4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 27664  0163C8  0012               	return	
 27665  0163CA                     __end_ofi2___awmod:
 27666                           	opt stack 0
 27667                           tosu	equ	0xFFF
 27668                           tosh	equ	0xFFE
 27669                           tosl	equ	0xFFD
 27670                           pclatu	equ	0xFFB
 27671                           pclath	equ	0xFFA
 27672                           tblptru	equ	0xFF8
 27673                           tblptrh	equ	0xFF7
 27674                           tblptrl	equ	0xFF6
 27675                           tablat	equ	0xFF5
 27676                           prodh	equ	0xFF4
 27677                           prodl	equ	0xFF3
 27678                           intcon	equ	0xFF2
 27679                           indf0	equ	0xFEF
 27680                           postinc0	equ	0xFEE
 27681                           fsr0h	equ	0xFEA
 27682                           fsr0l	equ	0xFE9
 27683                           wreg	equ	0xFE8
 27684                           indf1	equ	0xFE7
 27685                           postdec1	equ	0xFE5
 27686                           plusw1	equ	0xFE3
 27687                           fsr1h	equ	0xFE2
 27688                           fsr1l	equ	0xFE1
 27689                           bsr	equ	0xFE0
 27690                           indf2	equ	0xFDF
 27691                           postinc2	equ	0xFDE
 27692                           postdec2	equ	0xFDD
 27693                           plusw2	equ	0xFDB
 27694                           fsr2h	equ	0xFDA
 27695                           fsr2l	equ	0xFD9
 27696                           status	equ	0xFD8
 27697                           
 27698 ;; *************** function i2___awdiv *****************
 27699 ;; Defined at:
 27700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 27701 ;; Parameters:    Size  Location     Type
 27702 ;;  dividend        2    6[COMRAM] int 
 27703 ;;  divisor         2    8[COMRAM] int 
 27704 ;; Auto vars:     Size  Location     Type
 27705 ;;  __awdiv         2   12[COMRAM] int 
 27706 ;;  __awdiv         1   11[COMRAM] unsigned char 
 27707 ;;  __awdiv         1   10[COMRAM] unsigned char 
 27708 ;; Return value:  Size  Location     Type
 27709 ;;                  2    6[COMRAM] int 
 27710 ;; Registers used:
 27711 ;;		wreg, status,2, status,0
 27712 ;; Tracked objects:
 27713 ;;		On entry : 0/0
 27714 ;;		On exit  : 0/0
 27715 ;;		Unchanged: 0/0
 27716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27718 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;Total ram usage:        8 bytes
 27722 ;; Hardware stack levels used:    1
 27723 ;; This function calls:
 27724 ;;		Nothing
 27725 ;; This function is called by:
 27726 ;;		i2_fround
 27727 ;;		i2_scale
 27728 ;;		i2_printf
 27729 ;; This function uses a non-reentrant model
 27730 ;;
 27731                           
 27732                           	psect	text98
 27733  015FFC                     __ptext98:
 27734                           	opt stack 0
 27735  015FFC                     i2___awdiv:
 27736                           	opt stack 14
 27737                           
 27738                           ;incstack = 0
 27739  015FFC  0E00               	movlw	0
 27740  015FFE  6E0C               	movwf	i2___awdiv@sign,c
 27741  016000  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27742  016002  D006               	goto	i2l1681
 27743  016004  6C09               	negf	i2___awdiv@divisor,c
 27744  016006  1E0A               	comf	i2___awdiv@divisor+1,f,c
 27745  016008  B0D8               	btfsc	status,0,c
 27746  01600A  2A0A               	incf	i2___awdiv@divisor+1,f,c
 27747  01600C  0E01               	movlw	1
 27748  01600E  6E0C               	movwf	i2___awdiv@sign,c
 27749  016010                     i2l1681:
 27750  016010  AE08               	btfss	i2___awdiv@dividend+1,7,c
 27751  016012  D006               	goto	i2l1682
 27752  016014  6C07               	negf	i2___awdiv@dividend,c
 27753  016016  1E08               	comf	i2___awdiv@dividend+1,f,c
 27754  016018  B0D8               	btfsc	status,0,c
 27755  01601A  2A08               	incf	i2___awdiv@dividend+1,f,c
 27756  01601C  0E01               	movlw	1
 27757  01601E  1A0C               	xorwf	i2___awdiv@sign,f,c
 27758  016020                     i2l1682:
 27759  016020  0E00               	movlw	0
 27760  016022  6E0E               	movwf	i2___awdiv@quotient+1,c
 27761  016024  0E00               	movlw	0
 27762  016026  6E0D               	movwf	i2___awdiv@quotient,c
 27763  016028  5009               	movf	i2___awdiv@divisor,w,c
 27764  01602A  100A               	iorwf	i2___awdiv@divisor+1,w,c
 27765  01602C  B4D8               	btfsc	status,2,c
 27766  01602E  D01C               	goto	i2l1689
 27767  016030  0E01               	movlw	1
 27768  016032  6E0B               	movwf	i2___awdiv@counter,c
 27769  016034  D004               	goto	i2l1684
 27770  016036  90D8               	bcf	status,0,c
 27771  016038  3609               	rlcf	i2___awdiv@divisor,f,c
 27772  01603A  360A               	rlcf	i2___awdiv@divisor+1,f,c
 27773  01603C  2A0B               	incf	i2___awdiv@counter,f,c
 27774  01603E                     i2l1684:
 27775  01603E  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27776  016040  D7FA               	goto	i2l1685
 27777  016042                     i2u1341_40:
 27778  016042  90D8               	bcf	status,0,c
 27779  016044  360D               	rlcf	i2___awdiv@quotient,f,c
 27780  016046  360E               	rlcf	i2___awdiv@quotient+1,f,c
 27781  016048  5009               	movf	i2___awdiv@divisor,w,c
 27782  01604A  5C07               	subwf	i2___awdiv@dividend,w,c
 27783  01604C  500A               	movf	i2___awdiv@divisor+1,w,c
 27784  01604E  5808               	subwfb	i2___awdiv@dividend+1,w,c
 27785  016050  A0D8               	btfss	status,0,c
 27786  016052  D005               	goto	i2l1688
 27787  016054  5009               	movf	i2___awdiv@divisor,w,c
 27788  016056  5E07               	subwf	i2___awdiv@dividend,f,c
 27789  016058  500A               	movf	i2___awdiv@divisor+1,w,c
 27790  01605A  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 27791  01605C  800D               	bsf	i2___awdiv@quotient,0,c
 27792  01605E                     i2l1688:
 27793  01605E  90D8               	bcf	status,0,c
 27794  016060  320A               	rrcf	i2___awdiv@divisor+1,f,c
 27795  016062  3209               	rrcf	i2___awdiv@divisor,f,c
 27796  016064  2E0B               	decfsz	i2___awdiv@counter,f,c
 27797  016066  D7ED               	goto	i2u1341_40
 27798  016068                     i2l1689:
 27799  016068  500C               	movf	i2___awdiv@sign,w,c
 27800  01606A  B4D8               	btfsc	status,2,c
 27801  01606C  D004               	goto	i2l1690
 27802  01606E  6C0D               	negf	i2___awdiv@quotient,c
 27803  016070  1E0E               	comf	i2___awdiv@quotient+1,f,c
 27804  016072  B0D8               	btfsc	status,0,c
 27805  016074  2A0E               	incf	i2___awdiv@quotient+1,f,c
 27806  016076                     i2l1690:
 27807  016076  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 27808  01607A  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 27809  01607E  0012               	return	
 27810  016080                     __end_ofi2___awdiv:
 27811                           	opt stack 0
 27812                           tosu	equ	0xFFF
 27813                           tosh	equ	0xFFE
 27814                           tosl	equ	0xFFD
 27815                           pclatu	equ	0xFFB
 27816                           pclath	equ	0xFFA
 27817                           tblptru	equ	0xFF8
 27818                           tblptrh	equ	0xFF7
 27819                           tblptrl	equ	0xFF6
 27820                           tablat	equ	0xFF5
 27821                           prodh	equ	0xFF4
 27822                           prodl	equ	0xFF3
 27823                           intcon	equ	0xFF2
 27824                           indf0	equ	0xFEF
 27825                           postinc0	equ	0xFEE
 27826                           fsr0h	equ	0xFEA
 27827                           fsr0l	equ	0xFE9
 27828                           wreg	equ	0xFE8
 27829                           indf1	equ	0xFE7
 27830                           postdec1	equ	0xFE5
 27831                           plusw1	equ	0xFE3
 27832                           fsr1h	equ	0xFE2
 27833                           fsr1l	equ	0xFE1
 27834                           bsr	equ	0xFE0
 27835                           indf2	equ	0xFDF
 27836                           postinc2	equ	0xFDE
 27837                           postdec2	equ	0xFDD
 27838                           plusw2	equ	0xFDB
 27839                           fsr2h	equ	0xFDA
 27840                           fsr2l	equ	0xFD9
 27841                           status	equ	0xFD8
 27842                           
 27843 ;; *************** function i2__tdiv_to_l_ *****************
 27844 ;; Defined at:
 27845 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 27846 ;; Parameters:    Size  Location     Type
 27847 ;;  f1              3    0[COMRAM] float 
 27848 ;;  f2              3    3[COMRAM] float 
 27849 ;; Auto vars:     Size  Location     Type
 27850 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 27851 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 27852 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 27853 ;; Return value:  Size  Location     Type
 27854 ;;                  4    0[COMRAM] unsigned long 
 27855 ;; Registers used:
 27856 ;;		wreg, status,2, status,0
 27857 ;; Tracked objects:
 27858 ;;		On entry : 0/0
 27859 ;;		On exit  : 0/0
 27860 ;;		Unchanged: 0/0
 27861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27862 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27863 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27864 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27865 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27866 ;;Total ram usage:       15 bytes
 27867 ;; Hardware stack levels used:    1
 27868 ;; This function calls:
 27869 ;;		Nothing
 27870 ;; This function is called by:
 27871 ;;		i2_printf
 27872 ;; This function uses a non-reentrant model
 27873 ;;
 27874                           
 27875                           	psect	text99
 27876  0148FE                     __ptext99:
 27877                           	opt stack 0
 27878  0148FE                     i2__tdiv_to_l_:
 27879                           	opt stack 15
 27880                           
 27881                           ;incstack = 0
 27882  0148FE  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 27883  014902  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 27884  014904  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 27885  014906  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 27886  014908  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 27887  01490A  E301               	bnc	u1438_41
 27888  01490C  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 27889  01490E                     u1438_41:
 27890  01490E  5007               	movf	??i2__tdiv_to_l_,w,c
 27891  014910  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 27892  014912  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27893  014914  A4D8               	btfss	status,2,c
 27894  014916  D009               	goto	i2l1829
 27895  014918  0E00               	movlw	0
 27896  01491A  6E01               	movwf	?i2__tdiv_to_l_,c
 27897  01491C  0E00               	movlw	0
 27898  01491E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27899  014920  0E00               	movlw	0
 27900  014922  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27901  014924  0E00               	movlw	0
 27902  014926  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27903  014928  0012               	return	
 27904  01492A                     i2l1829:
 27905  01492A  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 27906  01492E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 27907  014930  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 27908  014932  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 27909  014934  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 27910  014936  E301               	bnc	u1440_41
 27911  014938  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 27912  01493A                     u1440_41:
 27913  01493A  5007               	movf	??i2__tdiv_to_l_,w,c
 27914  01493C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 27915  01493E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 27916  014940  A4D8               	btfss	status,2,c
 27917  014942  D009               	goto	i2l1831
 27918  014944  0E00               	movlw	0
 27919  014946  6E01               	movwf	?i2__tdiv_to_l_,c
 27920  014948  0E00               	movlw	0
 27921  01494A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27922  01494C  0E00               	movlw	0
 27923  01494E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27924  014950  0E00               	movlw	0
 27925  014952  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27926  014954  0012               	return	
 27927  014956                     i2l1831:
 27928  014956  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 27929  014958  0EFF               	movlw	255
 27930  01495A  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 27931  01495C  0EFF               	movlw	255
 27932  01495E  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 27933  014960  0E00               	movlw	0
 27934  014962  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 27935  014964  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 27936  014966  0EFF               	movlw	255
 27937  014968  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 27938  01496A  0EFF               	movlw	255
 27939  01496C  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 27940  01496E  0E00               	movlw	0
 27941  014970  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 27942  014972  0E00               	movlw	0
 27943  014974  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 27944  014976  0E00               	movlw	0
 27945  014978  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 27946  01497A  0E00               	movlw	0
 27947  01497C  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 27948  01497E  0E00               	movlw	0
 27949  014980  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 27950  014982  0E7F               	movlw	127
 27951  014984  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 27952  014986  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 27953  014988  0F98               	addlw	152
 27954  01498A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 27955  01498C  0E18               	movlw	24
 27956  01498E  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 27957  014990                     i2l1832:
 27958  014990  90D8               	bcf	status,0,c
 27959  014992  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 27960  014994  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 27961  014996  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 27962  014998  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 27963  01499A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 27964  01499C  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 27965  01499E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 27966  0149A0  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 27967  0149A2  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 27968  0149A4  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 27969  0149A6  A0D8               	btfss	status,0,c
 27970  0149A8  D007               	goto	i2l1833
 27971  0149AA  5004               	movf	i2__tdiv_to_l_@f2,w,c
 27972  0149AC  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 27973  0149AE  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 27974  0149B0  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 27975  0149B2  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 27976  0149B4  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 27977  0149B6  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 27978  0149B8                     i2l1833:
 27979  0149B8  90D8               	bcf	status,0,c
 27980  0149BA  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 27981  0149BC  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 27982  0149BE  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 27983  0149C0  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 27984  0149C2  D7E6               	goto	i2l1832
 27985  0149C4  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 27986  0149C6  D016               	goto	i2l1835
 27987  0149C8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27988  0149CA  0A80               	xorlw	128
 27989  0149CC  0F97               	addlw	151
 27990  0149CE  B0D8               	btfsc	status,0,c
 27991  0149D0  D009               	goto	i2l1836
 27992  0149D2  0E00               	movlw	0
 27993  0149D4  6E01               	movwf	?i2__tdiv_to_l_,c
 27994  0149D6  0E00               	movlw	0
 27995  0149D8  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27996  0149DA  0E00               	movlw	0
 27997  0149DC  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27998  0149DE  0E00               	movlw	0
 27999  0149E0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28000  0149E2  0012               	return	
 28001  0149E4                     i2l1836:
 28002  0149E4  90D8               	bcf	status,0,c
 28003  0149E6  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 28004  0149E8  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 28005  0149EA  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 28006  0149EC  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 28007  0149EE  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 28008  0149F0  D7F9               	goto	i2l1836
 28009  0149F2  D015               	goto	i2u1446_40
 28010  0149F4                     i2l1835:
 28011  0149F4  0E17               	movlw	23
 28012  0149F6  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 28013  0149F8  D00F               	goto	i2l1841
 28014  0149FA  0E00               	movlw	0
 28015  0149FC  6E01               	movwf	?i2__tdiv_to_l_,c
 28016  0149FE  0E00               	movlw	0
 28017  014A00  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28018  014A02  0E00               	movlw	0
 28019  014A04  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28020  014A06  0E00               	movlw	0
 28021  014A08  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28022  014A0A  0012               	return	
 28023  014A0C  90D8               	bcf	status,0,c
 28024  014A0E  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28025  014A10  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28026  014A12  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28027  014A14  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28028  014A16  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 28029  014A18                     i2l1841:
 28030  014A18  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28031  014A1A  A4D8               	btfss	status,2,c
 28032  014A1C  D7F7               	goto	i2l1842
 28033  014A1E                     i2u1446_40:
 28034  014A1E  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 28035  014A22  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 28036  014A26  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 28037  014A2A  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 28038  014A2E  0012               	return		;funcret
 28039  014A30                     __end_ofi2__tdiv_to_l_:
 28040                           	opt stack 0
 28041                           tosu	equ	0xFFF
 28042                           tosh	equ	0xFFE
 28043                           tosl	equ	0xFFD
 28044                           pclatu	equ	0xFFB
 28045                           pclath	equ	0xFFA
 28046                           tblptru	equ	0xFF8
 28047                           tblptrh	equ	0xFF7
 28048                           tblptrl	equ	0xFF6
 28049                           tablat	equ	0xFF5
 28050                           prodh	equ	0xFF4
 28051                           prodl	equ	0xFF3
 28052                           intcon	equ	0xFF2
 28053                           indf0	equ	0xFEF
 28054                           postinc0	equ	0xFEE
 28055                           fsr0h	equ	0xFEA
 28056                           fsr0l	equ	0xFE9
 28057                           wreg	equ	0xFE8
 28058                           indf1	equ	0xFE7
 28059                           postdec1	equ	0xFE5
 28060                           plusw1	equ	0xFE3
 28061                           fsr1h	equ	0xFE2
 28062                           fsr1l	equ	0xFE1
 28063                           bsr	equ	0xFE0
 28064                           indf2	equ	0xFDF
 28065                           postinc2	equ	0xFDE
 28066                           postdec2	equ	0xFDD
 28067                           plusw2	equ	0xFDB
 28068                           fsr2h	equ	0xFDA
 28069                           fsr2l	equ	0xFD9
 28070                           status	equ	0xFD8
 28071                           
 28072 ;; *************** function i2__div_to_l_ *****************
 28073 ;; Defined at:
 28074 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 28075 ;; Parameters:    Size  Location     Type
 28076 ;;  f1              3    0[COMRAM] unsigned long 
 28077 ;;  f2              3    3[COMRAM] unsigned long 
 28078 ;; Auto vars:     Size  Location     Type
 28079 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 28080 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 28081 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 28082 ;; Return value:  Size  Location     Type
 28083 ;;                  4    0[COMRAM] unsigned long 
 28084 ;; Registers used:
 28085 ;;		wreg, status,2, status,0
 28086 ;; Tracked objects:
 28087 ;;		On entry : 0/0
 28088 ;;		On exit  : 0/0
 28089 ;;		Unchanged: 0/0
 28090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28091 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28094 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28095 ;;Total ram usage:       12 bytes
 28096 ;; Hardware stack levels used:    1
 28097 ;; This function calls:
 28098 ;;		Nothing
 28099 ;; This function is called by:
 28100 ;;		i2_printf
 28101 ;; This function uses a non-reentrant model
 28102 ;;
 28103                           
 28104                           	psect	text100
 28105  014B5A                     __ptext100:
 28106                           	opt stack 0
 28107  014B5A                     i2__div_to_l_:
 28108                           	opt stack 15
 28109                           
 28110                           ;incstack = 0
 28111  014B5A  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 28112  014B5C  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 28113  014B5E  6E0C               	movwf	i2__div_to_l_@exp1,c
 28114  014B60  500C               	movf	i2__div_to_l_@exp1,w,c
 28115  014B62  A4D8               	btfss	status,2,c
 28116  014B64  D009               	goto	i2l1725
 28117  014B66  0E00               	movlw	0
 28118  014B68  6E01               	movwf	?i2__div_to_l_,c
 28119  014B6A  0E00               	movlw	0
 28120  014B6C  6E02               	movwf	?i2__div_to_l_+1,c
 28121  014B6E  0E00               	movlw	0
 28122  014B70  6E03               	movwf	?i2__div_to_l_+2,c
 28123  014B72  0E00               	movlw	0
 28124  014B74  6E04               	movwf	?i2__div_to_l_+3,c
 28125  014B76  0012               	return	
 28126  014B78                     i2l1725:
 28127  014B78  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 28128  014B7A  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 28129  014B7C  6E0B               	movwf	i2__div_to_l_@cntr,c
 28130  014B7E  500B               	movf	i2__div_to_l_@cntr,w,c
 28131  014B80  A4D8               	btfss	status,2,c
 28132  014B82  D009               	goto	i2l1727
 28133  014B84  0E00               	movlw	0
 28134  014B86  6E01               	movwf	?i2__div_to_l_,c
 28135  014B88  0E00               	movlw	0
 28136  014B8A  6E02               	movwf	?i2__div_to_l_+1,c
 28137  014B8C  0E00               	movlw	0
 28138  014B8E  6E03               	movwf	?i2__div_to_l_+2,c
 28139  014B90  0E00               	movlw	0
 28140  014B92  6E04               	movwf	?i2__div_to_l_+3,c
 28141  014B94  0012               	return	
 28142  014B96                     i2l1727:
 28143  014B96  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 28144  014B98  0EFF               	movlw	255
 28145  014B9A  1601               	andwf	i2__div_to_l_@f1,f,c
 28146  014B9C  0EFF               	movlw	255
 28147  014B9E  1602               	andwf	i2__div_to_l_@f1+1,f,c
 28148  014BA0  0EFF               	movlw	255
 28149  014BA2  1603               	andwf	i2__div_to_l_@f1+2,f,c
 28150  014BA4  0E00               	movlw	0
 28151  014BA6  1604               	andwf	i2__div_to_l_@f1+3,f,c
 28152  014BA8  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 28153  014BAA  0EFF               	movlw	255
 28154  014BAC  1604               	andwf	i2__div_to_l_@f2,f,c
 28155  014BAE  0EFF               	movlw	255
 28156  014BB0  1605               	andwf	i2__div_to_l_@f2+1,f,c
 28157  014BB2  0EFF               	movlw	255
 28158  014BB4  1606               	andwf	i2__div_to_l_@f2+2,f,c
 28159  014BB6  0E00               	movlw	0
 28160  014BB8  1607               	andwf	i2__div_to_l_@f2+3,f,c
 28161  014BBA  0E00               	movlw	0
 28162  014BBC  6E07               	movwf	i2__div_to_l_@quot,c
 28163  014BBE  0E00               	movlw	0
 28164  014BC0  6E08               	movwf	i2__div_to_l_@quot+1,c
 28165  014BC2  0E00               	movlw	0
 28166  014BC4  6E09               	movwf	i2__div_to_l_@quot+2,c
 28167  014BC6  0E00               	movlw	0
 28168  014BC8  6E0A               	movwf	i2__div_to_l_@quot+3,c
 28169  014BCA  0E7F               	movlw	127
 28170  014BCC  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 28171  014BCE  500B               	movf	i2__div_to_l_@cntr,w,c
 28172  014BD0  0FA0               	addlw	160
 28173  014BD2  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 28174  014BD4  0E20               	movlw	32
 28175  014BD6  6E0B               	movwf	i2__div_to_l_@cntr,c
 28176  014BD8  90D8               	bcf	status,0,c
 28177  014BDA  3607               	rlcf	i2__div_to_l_@quot,f,c
 28178  014BDC  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 28179  014BDE  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 28180  014BE0  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 28181  014BE2  5004               	movf	i2__div_to_l_@f2,w,c
 28182  014BE4  5C01               	subwf	i2__div_to_l_@f1,w,c
 28183  014BE6  5005               	movf	i2__div_to_l_@f2+1,w,c
 28184  014BE8  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 28185  014BEA  5006               	movf	i2__div_to_l_@f2+2,w,c
 28186  014BEC  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 28187  014BEE  5007               	movf	i2__div_to_l_@f2+3,w,c
 28188  014BF0  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 28189  014BF2  A0D8               	btfss	status,0,c
 28190  014BF4  D009               	goto	i2l1729
 28191  014BF6  5004               	movf	i2__div_to_l_@f2,w,c
 28192  014BF8  5E01               	subwf	i2__div_to_l_@f1,f,c
 28193  014BFA  5005               	movf	i2__div_to_l_@f2+1,w,c
 28194  014BFC  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 28195  014BFE  5006               	movf	i2__div_to_l_@f2+2,w,c
 28196  014C00  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 28197  014C02  5007               	movf	i2__div_to_l_@f2+3,w,c
 28198  014C04  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 28199  014C06  8007               	bsf	i2__div_to_l_@quot,0,c
 28200  014C08                     i2l1729:
 28201  014C08  90D8               	bcf	status,0,c
 28202  014C0A  3601               	rlcf	i2__div_to_l_@f1,f,c
 28203  014C0C  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 28204  014C0E  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 28205  014C10  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 28206  014C12  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 28207  014C14  D7E1               	goto	i2l1728
 28208  014C16  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 28209  014C18  D016               	goto	i2l1731
 28210  014C1A  500C               	movf	i2__div_to_l_@exp1,w,c
 28211  014C1C  0A80               	xorlw	128
 28212  014C1E  0F9F               	addlw	159
 28213  014C20  B0D8               	btfsc	status,0,c
 28214  014C22  D009               	goto	i2l1732
 28215  014C24  0E00               	movlw	0
 28216  014C26  6E01               	movwf	?i2__div_to_l_,c
 28217  014C28  0E00               	movlw	0
 28218  014C2A  6E02               	movwf	?i2__div_to_l_+1,c
 28219  014C2C  0E00               	movlw	0
 28220  014C2E  6E03               	movwf	?i2__div_to_l_+2,c
 28221  014C30  0E00               	movlw	0
 28222  014C32  6E04               	movwf	?i2__div_to_l_+3,c
 28223  014C34  0012               	return	
 28224  014C36                     i2l1732:
 28225  014C36  90D8               	bcf	status,0,c
 28226  014C38  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 28227  014C3A  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 28228  014C3C  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 28229  014C3E  3207               	rrcf	i2__div_to_l_@quot,f,c
 28230  014C40  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 28231  014C42  D7F9               	goto	i2l1732
 28232  014C44  D015               	goto	i2u1437_40
 28233  014C46                     i2l1731:
 28234  014C46  0E1F               	movlw	31
 28235  014C48  640C               	cpfsgt	i2__div_to_l_@exp1,c
 28236  014C4A  D00F               	goto	i2l1737
 28237  014C4C  0E00               	movlw	0
 28238  014C4E  6E01               	movwf	?i2__div_to_l_,c
 28239  014C50  0E00               	movlw	0
 28240  014C52  6E02               	movwf	?i2__div_to_l_+1,c
 28241  014C54  0E00               	movlw	0
 28242  014C56  6E03               	movwf	?i2__div_to_l_+2,c
 28243  014C58  0E00               	movlw	0
 28244  014C5A  6E04               	movwf	?i2__div_to_l_+3,c
 28245  014C5C  0012               	return	
 28246  014C5E  90D8               	bcf	status,0,c
 28247  014C60  3607               	rlcf	i2__div_to_l_@quot,f,c
 28248  014C62  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 28249  014C64  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 28250  014C66  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 28251  014C68  060C               	decf	i2__div_to_l_@exp1,f,c
 28252  014C6A                     i2l1737:
 28253  014C6A  500C               	movf	i2__div_to_l_@exp1,w,c
 28254  014C6C  A4D8               	btfss	status,2,c
 28255  014C6E  D7F7               	goto	i2l1738
 28256  014C70                     i2u1437_40:
 28257  014C70  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 28258  014C74  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 28259  014C78  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 28260  014C7C  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 28261  014C80  0012               	return		;funcret
 28262  014C82                     __end_ofi2__div_to_l_:
 28263                           	opt stack 0
 28264                           tosu	equ	0xFFF
 28265                           tosh	equ	0xFFE
 28266                           tosl	equ	0xFFD
 28267                           pclatu	equ	0xFFB
 28268                           pclath	equ	0xFFA
 28269                           tblptru	equ	0xFF8
 28270                           tblptrh	equ	0xFF7
 28271                           tblptrl	equ	0xFF6
 28272                           tablat	equ	0xFF5
 28273                           prodh	equ	0xFF4
 28274                           prodl	equ	0xFF3
 28275                           intcon	equ	0xFF2
 28276                           indf0	equ	0xFEF
 28277                           postinc0	equ	0xFEE
 28278                           fsr0h	equ	0xFEA
 28279                           fsr0l	equ	0xFE9
 28280                           wreg	equ	0xFE8
 28281                           indf1	equ	0xFE7
 28282                           postdec1	equ	0xFE5
 28283                           plusw1	equ	0xFE3
 28284                           fsr1h	equ	0xFE2
 28285                           fsr1l	equ	0xFE1
 28286                           bsr	equ	0xFE0
 28287                           indf2	equ	0xFDF
 28288                           postinc2	equ	0xFDE
 28289                           postdec2	equ	0xFDD
 28290                           plusw2	equ	0xFDB
 28291                           fsr2h	equ	0xFDA
 28292                           fsr2l	equ	0xFD9
 28293                           status	equ	0xFD8
 28294                           
 28295 ;; *************** function i2___lltoft *****************
 28296 ;; Defined at:
 28297 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 28298 ;; Parameters:    Size  Location     Type
 28299 ;;  c               4    8[COMRAM] unsigned long 
 28300 ;; Auto vars:     Size  Location     Type
 28301 ;;  __lltoft        1   16[COMRAM] unsigned char 
 28302 ;; Return value:  Size  Location     Type
 28303 ;;                  3    8[COMRAM] float 
 28304 ;; Registers used:
 28305 ;;		wreg, status,2, status,0, cstack
 28306 ;; Tracked objects:
 28307 ;;		On entry : 0/0
 28308 ;;		On exit  : 0/0
 28309 ;;		Unchanged: 0/0
 28310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28314 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28315 ;;Total ram usage:        9 bytes
 28316 ;; Hardware stack levels used:    1
 28317 ;; Hardware stack levels required when called:    1
 28318 ;; This function calls:
 28319 ;;		i2___ftpack
 28320 ;; This function is called by:
 28321 ;;		i2_printf
 28322 ;; This function uses a non-reentrant model
 28323 ;;
 28324                           
 28325                           	psect	text101
 28326  0166EA                     __ptext101:
 28327                           	opt stack 0
 28328  0166EA                     i2___lltoft:
 28329                           	opt stack 14
 28330                           
 28331                           ;incstack = 0
 28332  0166EA  0E8E               	movlw	142
 28333  0166EC  6E11               	movwf	i2___lltoft@exp,c
 28334  0166EE  D006               	goto	i2l1950
 28335  0166F0  90D8               	bcf	status,0,c
 28336  0166F2  320C               	rrcf	i2___lltoft@c+3,f,c
 28337  0166F4  320B               	rrcf	i2___lltoft@c+2,f,c
 28338  0166F6  320A               	rrcf	i2___lltoft@c+1,f,c
 28339  0166F8  3209               	rrcf	i2___lltoft@c,f,c
 28340  0166FA  2A11               	incf	i2___lltoft@exp,f,c
 28341  0166FC                     i2l1950:
 28342  0166FC  0E00               	movlw	0
 28343  0166FE  1409               	andwf	i2___lltoft@c,w,c
 28344  016700  6E0D               	movwf	??i2___lltoft& (0+255),c
 28345  016702  0E00               	movlw	0
 28346  016704  140A               	andwf	i2___lltoft@c+1,w,c
 28347  016706  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 28348  016708  0E00               	movlw	0
 28349  01670A  140B               	andwf	i2___lltoft@c+2,w,c
 28350  01670C  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 28351  01670E  0EFF               	movlw	255
 28352  016710  140C               	andwf	i2___lltoft@c+3,w,c
 28353  016712  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 28354  016714  500D               	movf	??i2___lltoft,w,c
 28355  016716  100E               	iorwf	??i2___lltoft+1,w,c
 28356  016718  100F               	iorwf	??i2___lltoft+2,w,c
 28357  01671A  1010               	iorwf	??i2___lltoft+3,w,c
 28358  01671C  A4D8               	btfss	status,2,c
 28359  01671E  D7E8               	goto	i2l1951
 28360  016720  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 28361  016724  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 28362  016728  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 28363  01672C  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 28364  016730  0E00               	movlw	0
 28365  016732  6E05               	movwf	i2___ftpack@sign,c
 28366  016734  ECD1  F0AC         	call	i2___ftpack	;wreg free
 28367  016738  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 28368  01673C  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 28369  016740  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 28370  016744  0012               	return	
 28371  016746                     __end_ofi2___lltoft:
 28372                           	opt stack 0
 28373                           tosu	equ	0xFFF
 28374                           tosh	equ	0xFFE
 28375                           tosl	equ	0xFFD
 28376                           pclatu	equ	0xFFB
 28377                           pclath	equ	0xFFA
 28378                           tblptru	equ	0xFF8
 28379                           tblptrh	equ	0xFF7
 28380                           tblptrl	equ	0xFF6
 28381                           tablat	equ	0xFF5
 28382                           prodh	equ	0xFF4
 28383                           prodl	equ	0xFF3
 28384                           intcon	equ	0xFF2
 28385                           indf0	equ	0xFEF
 28386                           postinc0	equ	0xFEE
 28387                           fsr0h	equ	0xFEA
 28388                           fsr0l	equ	0xFE9
 28389                           wreg	equ	0xFE8
 28390                           indf1	equ	0xFE7
 28391                           postdec1	equ	0xFE5
 28392                           plusw1	equ	0xFE3
 28393                           fsr1h	equ	0xFE2
 28394                           fsr1l	equ	0xFE1
 28395                           bsr	equ	0xFE0
 28396                           indf2	equ	0xFDF
 28397                           postinc2	equ	0xFDE
 28398                           postdec2	equ	0xFDD
 28399                           plusw2	equ	0xFDB
 28400                           fsr2h	equ	0xFDA
 28401                           fsr2l	equ	0xFD9
 28402                           status	equ	0xFD8
 28403                           
 28404 ;; *************** function i2___llmod *****************
 28405 ;; Defined at:
 28406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 28407 ;; Parameters:    Size  Location     Type
 28408 ;;  dividend        4   13[COMRAM] unsigned long 
 28409 ;;  divisor         4   17[COMRAM] unsigned long 
 28410 ;; Auto vars:     Size  Location     Type
 28411 ;;  __llmod         1   21[COMRAM] unsigned char 
 28412 ;; Return value:  Size  Location     Type
 28413 ;;                  4   13[COMRAM] unsigned long 
 28414 ;; Registers used:
 28415 ;;		wreg, status,2, status,0
 28416 ;; Tracked objects:
 28417 ;;		On entry : 0/0
 28418 ;;		On exit  : 0/0
 28419 ;;		Unchanged: 0/0
 28420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28424 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28425 ;;Total ram usage:        9 bytes
 28426 ;; Hardware stack levels used:    1
 28427 ;; This function calls:
 28428 ;;		Nothing
 28429 ;; This function is called by:
 28430 ;;		i2_printf
 28431 ;; This function uses a non-reentrant model
 28432 ;;
 28433                           
 28434                           	psect	text102
 28435  016504                     __ptext102:
 28436                           	opt stack 0
 28437  016504                     i2___llmod:
 28438                           	opt stack 15
 28439                           
 28440                           ;incstack = 0
 28441  016504  5012               	movf	i2___llmod@divisor,w,c
 28442  016506  1013               	iorwf	i2___llmod@divisor+1,w,c
 28443  016508  1014               	iorwf	i2___llmod@divisor+2,w,c
 28444  01650A  1015               	iorwf	i2___llmod@divisor+3,w,c
 28445  01650C  B4D8               	btfsc	status,2,c
 28446  01650E  D024               	goto	i2l1944
 28447  016510  0E01               	movlw	1
 28448  016512  6E16               	movwf	i2___llmod@counter,c
 28449  016514  D006               	goto	i2l1939
 28450  016516  90D8               	bcf	status,0,c
 28451  016518  3612               	rlcf	i2___llmod@divisor,f,c
 28452  01651A  3613               	rlcf	i2___llmod@divisor+1,f,c
 28453  01651C  3614               	rlcf	i2___llmod@divisor+2,f,c
 28454  01651E  3615               	rlcf	i2___llmod@divisor+3,f,c
 28455  016520  2A16               	incf	i2___llmod@counter,f,c
 28456  016522                     i2l1939:
 28457  016522  AE15               	btfss	i2___llmod@divisor+3,7,c
 28458  016524  D7F8               	goto	i2l1940
 28459  016526                     i2u1453_40:
 28460  016526  5012               	movf	i2___llmod@divisor,w,c
 28461  016528  5C0E               	subwf	i2___llmod@dividend,w,c
 28462  01652A  5013               	movf	i2___llmod@divisor+1,w,c
 28463  01652C  580F               	subwfb	i2___llmod@dividend+1,w,c
 28464  01652E  5014               	movf	i2___llmod@divisor+2,w,c
 28465  016530  5810               	subwfb	i2___llmod@dividend+2,w,c
 28466  016532  5015               	movf	i2___llmod@divisor+3,w,c
 28467  016534  5811               	subwfb	i2___llmod@dividend+3,w,c
 28468  016536  A0D8               	btfss	status,0,c
 28469  016538  D008               	goto	i2l1943
 28470  01653A  5012               	movf	i2___llmod@divisor,w,c
 28471  01653C  5E0E               	subwf	i2___llmod@dividend,f,c
 28472  01653E  5013               	movf	i2___llmod@divisor+1,w,c
 28473  016540  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 28474  016542  5014               	movf	i2___llmod@divisor+2,w,c
 28475  016544  5A10               	subwfb	i2___llmod@dividend+2,f,c
 28476  016546  5015               	movf	i2___llmod@divisor+3,w,c
 28477  016548  5A11               	subwfb	i2___llmod@dividend+3,f,c
 28478  01654A                     i2l1943:
 28479  01654A  90D8               	bcf	status,0,c
 28480  01654C  3215               	rrcf	i2___llmod@divisor+3,f,c
 28481  01654E  3214               	rrcf	i2___llmod@divisor+2,f,c
 28482  016550  3213               	rrcf	i2___llmod@divisor+1,f,c
 28483  016552  3212               	rrcf	i2___llmod@divisor,f,c
 28484  016554  2E16               	decfsz	i2___llmod@counter,f,c
 28485  016556  D7E7               	goto	i2u1453_40
 28486  016558                     i2l1944:
 28487  016558  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 28488  01655C  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 28489  016560  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 28490  016564  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 28491  016568  0012               	return		;funcret
 28492  01656A                     __end_ofi2___llmod:
 28493                           	opt stack 0
 28494                           tosu	equ	0xFFF
 28495                           tosh	equ	0xFFE
 28496                           tosl	equ	0xFFD
 28497                           pclatu	equ	0xFFB
 28498                           pclath	equ	0xFFA
 28499                           tblptru	equ	0xFF8
 28500                           tblptrh	equ	0xFF7
 28501                           tblptrl	equ	0xFF6
 28502                           tablat	equ	0xFF5
 28503                           prodh	equ	0xFF4
 28504                           prodl	equ	0xFF3
 28505                           intcon	equ	0xFF2
 28506                           indf0	equ	0xFEF
 28507                           postinc0	equ	0xFEE
 28508                           fsr0h	equ	0xFEA
 28509                           fsr0l	equ	0xFE9
 28510                           wreg	equ	0xFE8
 28511                           indf1	equ	0xFE7
 28512                           postdec1	equ	0xFE5
 28513                           plusw1	equ	0xFE3
 28514                           fsr1h	equ	0xFE2
 28515                           fsr1l	equ	0xFE1
 28516                           bsr	equ	0xFE0
 28517                           indf2	equ	0xFDF
 28518                           postinc2	equ	0xFDE
 28519                           postdec2	equ	0xFDD
 28520                           plusw2	equ	0xFDB
 28521                           fsr2h	equ	0xFDA
 28522                           fsr2l	equ	0xFD9
 28523                           status	equ	0xFD8
 28524                           
 28525 ;; *************** function i2___lldiv *****************
 28526 ;; Defined at:
 28527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 28528 ;; Parameters:    Size  Location     Type
 28529 ;;  dividend        4    0[COMRAM] unsigned long 
 28530 ;;  divisor         4    4[COMRAM] unsigned long 
 28531 ;; Auto vars:     Size  Location     Type
 28532 ;;  __lldiv         4    8[COMRAM] unsigned long 
 28533 ;;  __lldiv         1   12[COMRAM] unsigned char 
 28534 ;; Return value:  Size  Location     Type
 28535 ;;                  4    0[COMRAM] unsigned long 
 28536 ;; Registers used:
 28537 ;;		wreg, status,2, status,0
 28538 ;; Tracked objects:
 28539 ;;		On entry : 0/0
 28540 ;;		On exit  : 0/0
 28541 ;;		Unchanged: 0/0
 28542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28543 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28544 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28546 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28547 ;;Total ram usage:       13 bytes
 28548 ;; Hardware stack levels used:    1
 28549 ;; This function calls:
 28550 ;;		Nothing
 28551 ;; This function is called by:
 28552 ;;		i2_printf
 28553 ;; This function uses a non-reentrant model
 28554 ;;
 28555                           
 28556                           	psect	text103
 28557  016080                     __ptext103:
 28558                           	opt stack 0
 28559  016080                     i2___lldiv:
 28560                           	opt stack 15
 28561                           
 28562                           ;incstack = 0
 28563  016080  0E00               	movlw	0
 28564  016082  6E09               	movwf	i2___lldiv@quotient,c
 28565  016084  0E00               	movlw	0
 28566  016086  6E0A               	movwf	i2___lldiv@quotient+1,c
 28567  016088  0E00               	movlw	0
 28568  01608A  6E0B               	movwf	i2___lldiv@quotient+2,c
 28569  01608C  0E00               	movlw	0
 28570  01608E  6E0C               	movwf	i2___lldiv@quotient+3,c
 28571  016090  5005               	movf	i2___lldiv@divisor,w,c
 28572  016092  1006               	iorwf	i2___lldiv@divisor+1,w,c
 28573  016094  1007               	iorwf	i2___lldiv@divisor+2,w,c
 28574  016096  1008               	iorwf	i2___lldiv@divisor+3,w,c
 28575  016098  B4D8               	btfsc	status,2,c
 28576  01609A  D02A               	goto	i2l1934
 28577  01609C  0E01               	movlw	1
 28578  01609E  6E0D               	movwf	i2___lldiv@counter,c
 28579  0160A0  D006               	goto	i2l1929
 28580  0160A2  90D8               	bcf	status,0,c
 28581  0160A4  3605               	rlcf	i2___lldiv@divisor,f,c
 28582  0160A6  3606               	rlcf	i2___lldiv@divisor+1,f,c
 28583  0160A8  3607               	rlcf	i2___lldiv@divisor+2,f,c
 28584  0160AA  3608               	rlcf	i2___lldiv@divisor+3,f,c
 28585  0160AC  2A0D               	incf	i2___lldiv@counter,f,c
 28586  0160AE                     i2l1929:
 28587  0160AE  AE08               	btfss	i2___lldiv@divisor+3,7,c
 28588  0160B0  D7F8               	goto	i2l1930
 28589  0160B2                     i2u1450_40:
 28590  0160B2  90D8               	bcf	status,0,c
 28591  0160B4  3609               	rlcf	i2___lldiv@quotient,f,c
 28592  0160B6  360A               	rlcf	i2___lldiv@quotient+1,f,c
 28593  0160B8  360B               	rlcf	i2___lldiv@quotient+2,f,c
 28594  0160BA  360C               	rlcf	i2___lldiv@quotient+3,f,c
 28595  0160BC  5005               	movf	i2___lldiv@divisor,w,c
 28596  0160BE  5C01               	subwf	i2___lldiv@dividend,w,c
 28597  0160C0  5006               	movf	i2___lldiv@divisor+1,w,c
 28598  0160C2  5802               	subwfb	i2___lldiv@dividend+1,w,c
 28599  0160C4  5007               	movf	i2___lldiv@divisor+2,w,c
 28600  0160C6  5803               	subwfb	i2___lldiv@dividend+2,w,c
 28601  0160C8  5008               	movf	i2___lldiv@divisor+3,w,c
 28602  0160CA  5804               	subwfb	i2___lldiv@dividend+3,w,c
 28603  0160CC  A0D8               	btfss	status,0,c
 28604  0160CE  D009               	goto	i2l1933
 28605  0160D0  5005               	movf	i2___lldiv@divisor,w,c
 28606  0160D2  5E01               	subwf	i2___lldiv@dividend,f,c
 28607  0160D4  5006               	movf	i2___lldiv@divisor+1,w,c
 28608  0160D6  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 28609  0160D8  5007               	movf	i2___lldiv@divisor+2,w,c
 28610  0160DA  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 28611  0160DC  5008               	movf	i2___lldiv@divisor+3,w,c
 28612  0160DE  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 28613  0160E0  8009               	bsf	i2___lldiv@quotient,0,c
 28614  0160E2                     i2l1933:
 28615  0160E2  90D8               	bcf	status,0,c
 28616  0160E4  3208               	rrcf	i2___lldiv@divisor+3,f,c
 28617  0160E6  3207               	rrcf	i2___lldiv@divisor+2,f,c
 28618  0160E8  3206               	rrcf	i2___lldiv@divisor+1,f,c
 28619  0160EA  3205               	rrcf	i2___lldiv@divisor,f,c
 28620  0160EC  2E0D               	decfsz	i2___lldiv@counter,f,c
 28621  0160EE  D7E1               	goto	i2u1450_40
 28622  0160F0                     i2l1934:
 28623  0160F0  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 28624  0160F4  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 28625  0160F8  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 28626  0160FC  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 28627  016100  0012               	return		;funcret
 28628  016102                     __end_ofi2___lldiv:
 28629                           	opt stack 0
 28630                           tosu	equ	0xFFF
 28631                           tosh	equ	0xFFE
 28632                           tosl	equ	0xFFD
 28633                           pclatu	equ	0xFFB
 28634                           pclath	equ	0xFFA
 28635                           tblptru	equ	0xFF8
 28636                           tblptrh	equ	0xFF7
 28637                           tblptrl	equ	0xFF6
 28638                           tablat	equ	0xFF5
 28639                           prodh	equ	0xFF4
 28640                           prodl	equ	0xFF3
 28641                           intcon	equ	0xFF2
 28642                           indf0	equ	0xFEF
 28643                           postinc0	equ	0xFEE
 28644                           fsr0h	equ	0xFEA
 28645                           fsr0l	equ	0xFE9
 28646                           wreg	equ	0xFE8
 28647                           indf1	equ	0xFE7
 28648                           postdec1	equ	0xFE5
 28649                           plusw1	equ	0xFE3
 28650                           fsr1h	equ	0xFE2
 28651                           fsr1l	equ	0xFE1
 28652                           bsr	equ	0xFE0
 28653                           indf2	equ	0xFDF
 28654                           postinc2	equ	0xFDE
 28655                           postdec2	equ	0xFDD
 28656                           plusw2	equ	0xFDB
 28657                           fsr2h	equ	0xFDA
 28658                           fsr2l	equ	0xFD9
 28659                           status	equ	0xFD8
 28660                           
 28661 ;; *************** function _ADCC_ISR *****************
 28662 ;; Defined at:
 28663 ;;		line 297 in file "mcc_generated_files/adcc.c"
 28664 ;; Parameters:    Size  Location     Type
 28665 ;;		None
 28666 ;; Auto vars:     Size  Location     Type
 28667 ;;		None
 28668 ;; Return value:  Size  Location     Type
 28669 ;;                  1    wreg      void 
 28670 ;; Registers used:
 28671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28672 ;; Tracked objects:
 28673 ;;		On entry : 0/0
 28674 ;;		On exit  : 0/0
 28675 ;;		Unchanged: 0/0
 28676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28681 ;;Total ram usage:        0 bytes
 28682 ;; Hardware stack levels used:    1
 28683 ;; Hardware stack levels required when called:    8
 28684 ;; This function calls:
 28685 ;;		Absolute function
 28686 ;;		_ADCC_DefaultInterruptHandler
 28687 ;;		_ADCPostProcessingCallback
 28688 ;; This function is called by:
 28689 ;;		_INTERRUPT_InterruptManagerHigh
 28690 ;; This function uses a non-reentrant model
 28691 ;;
 28692                           
 28693                           	psect	text104
 28694  016E38                     __ptext104:
 28695                           	opt stack 0
 28696  016E38                     _ADCC_ISR:
 28697                           	opt stack 9
 28698                           
 28699                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 28700                           
 28701                           ;incstack = 0
 28702  016E38  010E               	movlb	14	; () banked
 28703  016E3A  9134               	bcf	52,0,b	;volatile
 28704                           
 28705                           ; BSR set to: 14
 28706                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 28707  016E3C  0100               	movlb	0	; () banked
 28708  016E3E  51E6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28709  016E40  11E7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28710  016E42  11E8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28711  016E44  B4D8               	btfsc	status,2,c
 28712  016E46  0012               	return	
 28713                           
 28714                           ; BSR set to: 0
 28715                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 28716  016E48  D801               	call	i2u1959_48
 28717  016E4A  0012               	return	
 28718  016E4C                     i2u1959_48:
 28719  016E4C  0005               	push	
 28720  016E4E  6EFA               	movwf	pclath,c
 28721  016E50  51E6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28722  016E52  6EFD               	movwf	tosl,c
 28723  016E54  51E7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28724  016E56  6EFE               	movwf	tosh,c
 28725  016E58  51E8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28726  016E5A  6EFF               	movwf	tosu,c
 28727  016E5C  50FA               	movf	pclath,w,c
 28728  016E5E  0012               	return		;indir
 28729  016E60                     __end_of_ADCC_ISR:
 28730                           	opt stack 0
 28731                           tosu	equ	0xFFF
 28732                           tosh	equ	0xFFE
 28733                           tosl	equ	0xFFD
 28734                           pclatu	equ	0xFFB
 28735                           pclath	equ	0xFFA
 28736                           tblptru	equ	0xFF8
 28737                           tblptrh	equ	0xFF7
 28738                           tblptrl	equ	0xFF6
 28739                           tablat	equ	0xFF5
 28740                           prodh	equ	0xFF4
 28741                           prodl	equ	0xFF3
 28742                           intcon	equ	0xFF2
 28743                           indf0	equ	0xFEF
 28744                           postinc0	equ	0xFEE
 28745                           fsr0h	equ	0xFEA
 28746                           fsr0l	equ	0xFE9
 28747                           wreg	equ	0xFE8
 28748                           indf1	equ	0xFE7
 28749                           postdec1	equ	0xFE5
 28750                           plusw1	equ	0xFE3
 28751                           fsr1h	equ	0xFE2
 28752                           fsr1l	equ	0xFE1
 28753                           bsr	equ	0xFE0
 28754                           indf2	equ	0xFDF
 28755                           postinc2	equ	0xFDE
 28756                           postdec2	equ	0xFDD
 28757                           plusw2	equ	0xFDB
 28758                           fsr2h	equ	0xFDA
 28759                           fsr2l	equ	0xFD9
 28760                           status	equ	0xFD8
 28761                           
 28762 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28763 ;; Defined at:
 28764 ;;		line 310 in file "mcc_generated_files/adcc.c"
 28765 ;; Parameters:    Size  Location     Type
 28766 ;;		None
 28767 ;; Auto vars:     Size  Location     Type
 28768 ;;		None
 28769 ;; Return value:  Size  Location     Type
 28770 ;;                  1    wreg      void 
 28771 ;; Registers used:
 28772 ;;		None
 28773 ;; Tracked objects:
 28774 ;;		On entry : 0/0
 28775 ;;		On exit  : 0/0
 28776 ;;		Unchanged: 0/0
 28777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28782 ;;Total ram usage:        0 bytes
 28783 ;; Hardware stack levels used:    1
 28784 ;; This function calls:
 28785 ;;		Nothing
 28786 ;; This function is called by:
 28787 ;;		_ADCC_Initialize
 28788 ;;		_ADCC_ISR
 28789 ;; This function uses a non-reentrant model
 28790 ;;
 28791                           
 28792                           	psect	text105
 28793  01715C                     __ptext105:
 28794                           	opt stack 0
 28795  01715C                     _ADCC_DefaultInterruptHandler:
 28796                           	opt stack 16
 28797                           
 28798                           ;incstack = 0
 28799  01715C  0012               	return		;funcret
 28800  01715E                     __end_of_ADCC_DefaultInterruptHandler:
 28801                           	opt stack 0
 28802                           tosu	equ	0xFFF
 28803                           tosh	equ	0xFFE
 28804                           tosl	equ	0xFFD
 28805                           pclatu	equ	0xFFB
 28806                           pclath	equ	0xFFA
 28807                           tblptru	equ	0xFF8
 28808                           tblptrh	equ	0xFF7
 28809                           tblptrl	equ	0xFF6
 28810                           tablat	equ	0xFF5
 28811                           prodh	equ	0xFF4
 28812                           prodl	equ	0xFF3
 28813                           intcon	equ	0xFF2
 28814                           indf0	equ	0xFEF
 28815                           postinc0	equ	0xFEE
 28816                           fsr0h	equ	0xFEA
 28817                           fsr0l	equ	0xFE9
 28818                           wreg	equ	0xFE8
 28819                           indf1	equ	0xFE7
 28820                           postdec1	equ	0xFE5
 28821                           plusw1	equ	0xFE3
 28822                           fsr1h	equ	0xFE2
 28823                           fsr1l	equ	0xFE1
 28824                           bsr	equ	0xFE0
 28825                           indf2	equ	0xFDF
 28826                           postinc2	equ	0xFDE
 28827                           postdec2	equ	0xFDD
 28828                           plusw2	equ	0xFDB
 28829                           fsr2h	equ	0xFDA
 28830                           fsr2l	equ	0xFD9
 28831                           status	equ	0xFD8
 28832                           
 28833 ;; *************** function _ADCPostProcessingCallback *****************
 28834 ;; Defined at:
 28835 ;;		line 152 in file "main.c"
 28836 ;; Parameters:    Size  Location     Type
 28837 ;;		None
 28838 ;; Auto vars:     Size  Location     Type
 28839 ;;  currentADCCh    1   79[BANK0 ] enum E17425
 28840 ;; Return value:  Size  Location     Type
 28841 ;;                  1    wreg      void 
 28842 ;; Registers used:
 28843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28844 ;; Tracked objects:
 28845 ;;		On entry : 0/0
 28846 ;;		On exit  : 0/0
 28847 ;;		Unchanged: 0/0
 28848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28850 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28852 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28853 ;;Total ram usage:       16 bytes
 28854 ;; Hardware stack levels used:    1
 28855 ;; Hardware stack levels required when called:    7
 28856 ;; This function calls:
 28857 ;;		_ADCC_GetConversionResult
 28858 ;;		___lwtoft
 28859 ;;		_currentMeasuredToPeak
 28860 ;;		_peakToRMS
 28861 ;;		i2_TMR7_StopTimer
 28862 ;;		i2___ftadd
 28863 ;;		i2___ftdiv
 28864 ;;		i2___ftge
 28865 ;;		i2___ftmul
 28866 ;;		i2___ftneg
 28867 ;; This function is called by:
 28868 ;;		_main
 28869 ;;		_ADCC_ISR
 28870 ;; This function uses a non-reentrant model
 28871 ;;
 28872                           
 28873                           	psect	text106
 28874  0122CE                     __ptext106:
 28875                           	opt stack 0
 28876  0122CE                     _ADCPostProcessingCallback:
 28877                           	opt stack 9
 28878                           
 28879                           ;main.c: 154: adcc_channel_t currentADCChannel = ADPCH;
 28880                           
 28881                           ;incstack = 0
 28882  0122CE  CF5F F0AF          	movff	3935,ADCPostProcessingCallback@currentADCChannel	;volatile
 28883                           
 28884                           ;main.c: 156: switch (currentADCChannel) {
 28885  0122D2  D324               	goto	i2l904
 28886  0122D4                     
 28887                           ;main.c: 160: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 28888  0122D4  EC1D  F0B8         	call	_ADCC_GetConversionResult	;wreg free
 28889  0122D8  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28890  0122DC  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28891  0122E0  EC8E  F0B7         	call	___lwtoft	;wreg free
 28892  0122E4  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28893  0122E8  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28894  0122EC  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28895  0122F0  0E68               	movlw	104
 28896  0122F2  6E2A               	movwf	i2___ftmul@f2,c
 28897  0122F4  0E53               	movlw	83
 28898  0122F6  6E2B               	movwf	i2___ftmul@f2+1,c
 28899  0122F8  0E3B               	movlw	59
 28900  0122FA  6E2C               	movwf	i2___ftmul@f2+2,c
 28901  0122FC  EC40  F0A8         	call	i2___ftmul	;wreg free
 28902  012300  C027  F0E3         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 28903  012304  C028  F0E4         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 28904  012308  C029  F0E5         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 28905                           
 28906                           ;main.c: 162: if (AVSS_ADC_Result > 0.01) {
 28907  01230C  0ED7               	movlw	215
 28908  01230E  6E2A               	movwf	i2___ftge@ff1,c
 28909  012310  0E23               	movlw	35
 28910  012312  6E2B               	movwf	i2___ftge@ff1+1,c
 28911  012314  0E3C               	movlw	60
 28912  012316  6E2C               	movwf	i2___ftge@ff1+2,c
 28913  012318  C0E3  F02D         	movff	_AVSS_ADC_Result,i2___ftge@ff2	;volatile
 28914  01231C  C0E4  F02E         	movff	_AVSS_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28915  012320  C0E5  F02F         	movff	_AVSS_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28916  012324  EC5F  F0AE         	call	i2___ftge	;wreg free
 28917  012328  B0D8               	btfsc	status,0,c
 28918  01232A  0012               	return	
 28919                           
 28920                           ;main.c: 164: LATFbits.LATF3 = 1;
 28921  01232C  867E               	bsf	3966,3,c	;volatile
 28922                           
 28923                           ;main.c: 165: adc_error_flag = 1;
 28924  01232E  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28925                           
 28926                           ;main.c: 167: PIE5bits.TMR7IE == 0;
 28927  012330  010E               	movlb	14	; () banked
 28928  012332  512E               	movf	46,w,b	;volatile
 28929                           
 28930                           ; BSR set to: 14
 28931                           ;main.c: 168: TMR7_StopTimer();
 28932  012334  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 28933                           
 28934                           ;main.c: 171: }
 28935                           ;main.c: 173: break;
 28936                           
 28937                           ;main.c: 169: return;
 28938  012338  0012               	return	
 28939  01233A                     
 28940                           ;main.c: 178: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 28941  01233A  0E68               	movlw	104
 28942  01233C  6E2A               	movwf	i2___ftmul@f2,c
 28943  01233E  0E53               	movlw	83
 28944  012340  6E2B               	movwf	i2___ftmul@f2+1,c
 28945  012342  0E3B               	movlw	59
 28946  012344  6E2C               	movwf	i2___ftmul@f2+2,c
 28947  012346  EC1D  F0B8         	call	_ADCC_GetConversionResult	;wreg free
 28948  01234A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28949  01234E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28950  012352  EC8E  F0B7         	call	___lwtoft	;wreg free
 28951  012356  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28952  01235A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28953  01235E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28954  012362  EC40  F0A8         	call	i2___ftmul	;wreg free
 28955  012366  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 28956  01236A  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 28957  01236E  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 28958  012372  C0E3  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 28959  012376  C0E4  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 28960  01237A  C0E5  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 28961  01237E  EC44  F0A2         	call	i2___ftadd	;wreg free
 28962  012382  C040  F0EE         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 28963  012386  C041  F0EF         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 28964  01238A  C042  F0F0         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 28965                           
 28966                           ;main.c: 179: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 28967  01238E  0E12               	movlw	18
 28968  012390  6E15               	movwf	i2___ftdiv@f1,c
 28969  012392  0E03               	movlw	3
 28970  012394  6E16               	movwf	i2___ftdiv@f1+1,c
 28971  012396  0E40               	movlw	64
 28972  012398  6E17               	movwf	i2___ftdiv@f1+2,c
 28973  01239A  C0EE  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 28974  01239E  C0EF  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 28975  0123A2  C0F0  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 28976  0123A6  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 28977  0123AA  C015  F0E0         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 28978  0123AE  C016  F0E1         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 28979  0123B2  C017  F0E2         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 28980                           
 28981                           ;main.c: 181: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0) {
 28982  0123B6  0E00               	movlw	0
 28983  0123B8  6E2A               	movwf	i2___ftge@ff1,c
 28984  0123BA  0E20               	movlw	32
 28985  0123BC  6E2B               	movwf	i2___ftge@ff1+1,c
 28986  0123BE  0E40               	movlw	64
 28987  0123C0  6E2C               	movwf	i2___ftge@ff1+2,c
 28988  0123C2  C0EE  F02D         	movff	_FVR_ADC_Result,i2___ftge@ff2	;volatile
 28989  0123C6  C0EF  F02E         	movff	_FVR_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28990  0123CA  C0F0  F02F         	movff	_FVR_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28991  0123CE  EC5F  F0AE         	call	i2___ftge	;wreg free
 28992  0123D2  A0D8               	btfss	status,0,c
 28993  0123D4  D010               	goto	i2u1894_40
 28994  0123D6  C0EE  F02A         	movff	_FVR_ADC_Result,i2___ftge@ff1	;volatile
 28995  0123DA  C0EF  F02B         	movff	_FVR_ADC_Result+1,i2___ftge@ff1+1	;volatile
 28996  0123DE  C0F0  F02C         	movff	_FVR_ADC_Result+2,i2___ftge@ff1+2	;volatile
 28997  0123E2  0E00               	movlw	0
 28998  0123E4  6E2D               	movwf	i2___ftge@ff2,c
 28999  0123E6  0E00               	movlw	0
 29000  0123E8  6E2E               	movwf	i2___ftge@ff2+1,c
 29001  0123EA  0E40               	movlw	64
 29002  0123EC  6E2F               	movwf	i2___ftge@ff2+2,c
 29003  0123EE  EC5F  F0AE         	call	i2___ftge	;wreg free
 29004  0123F2  B0D8               	btfsc	status,0,c
 29005  0123F4  0012               	return	
 29006  0123F6                     i2u1894_40:
 29007                           
 29008                           ;main.c: 183: LATFbits.LATF3 = 1;
 29009  0123F6  867E               	bsf	3966,3,c	;volatile
 29010                           
 29011                           ;main.c: 184: adc_error_flag = 1;
 29012  0123F8  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29013                           
 29014                           ;main.c: 186: PIE5bits.TMR7IE == 0;
 29015  0123FA  010E               	movlb	14	; () banked
 29016  0123FC  512E               	movf	46,w,b	;volatile
 29017                           
 29018                           ; BSR set to: 14
 29019                           ;main.c: 187: TMR7_StopTimer();
 29020  0123FE  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29021                           
 29022                           ;main.c: 190: }
 29023                           ;main.c: 193: break;
 29024                           
 29025                           ;main.c: 188: return;
 29026  012402  0012               	return	
 29027  012404                     
 29028                           ;main.c: 198: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 29029  012404  C0E0  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 29030  012408  C0E1  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 29031  01240C  C0E2  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 29032  012410  EC1D  F0B8         	call	_ADCC_GetConversionResult	;wreg free
 29033  012414  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 29034  012418  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 29035  01241C  EC8E  F0B7         	call	___lwtoft	;wreg free
 29036  012420  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 29037  012424  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 29038  012428  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 29039  01242C  EC40  F0A8         	call	i2___ftmul	;wreg free
 29040  012430  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$4100
 29041  012434  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4100+1
 29042  012438  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4100+2
 29043                           
 29044                           ;main.c: 198: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 29045  01243C  C0B3  F027         	movff	_ADCPostProcessingCallback$4100,i2___ftmul@f1
 29046  012440  C0B4  F028         	movff	_ADCPostProcessingCallback$4100+1,i2___ftmul@f1+1
 29047  012444  C0B5  F029         	movff	_ADCPostProcessingCallback$4100+2,i2___ftmul@f1+2
 29048  012448  0E68               	movlw	104
 29049  01244A  6E2A               	movwf	i2___ftmul@f2,c
 29050  01244C  0ED3               	movlw	211
 29051  01244E  6E2B               	movwf	i2___ftmul@f2+1,c
 29052  012450  0E3B               	movlw	59
 29053  012452  6E2C               	movwf	i2___ftmul@f2+2,c
 29054  012454  EC40  F0A8         	call	i2___ftmul	;wreg free
 29055  012458  C027  F0DD         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 29056  01245C  C028  F0DE         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 29057  012460  C029  F0DF         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 29058                           
 29059                           ;main.c: 200: if (POS3P3_ADC_Result > 3.5) {
 29060  012464  0E00               	movlw	0
 29061  012466  6E2A               	movwf	i2___ftge@ff1,c
 29062  012468  0E60               	movlw	96
 29063  01246A  6E2B               	movwf	i2___ftge@ff1+1,c
 29064  01246C  0E40               	movlw	64
 29065  01246E  6E2C               	movwf	i2___ftge@ff1+2,c
 29066  012470  C0DD  F02D         	movff	_POS3P3_ADC_Result,i2___ftge@ff2	;volatile
 29067  012474  C0DE  F02E         	movff	_POS3P3_ADC_Result+1,i2___ftge@ff2+1	;volatile
 29068  012478  C0DF  F02F         	movff	_POS3P3_ADC_Result+2,i2___ftge@ff2+2	;volatile
 29069  01247C  EC5F  F0AE         	call	i2___ftge	;wreg free
 29070  012480  B0D8               	btfsc	status,0,c
 29071  012482  0012               	return	
 29072                           
 29073                           ;main.c: 202: LATFbits.LATF3 = 1;
 29074  012484  867E               	bsf	3966,3,c	;volatile
 29075                           
 29076                           ;main.c: 203: adc_error_flag = 1;
 29077  012486  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29078                           
 29079                           ;main.c: 205: PIE5bits.TMR7IE == 0;
 29080  012488  010E               	movlb	14	; () banked
 29081  01248A  512E               	movf	46,w,b	;volatile
 29082                           
 29083                           ; BSR set to: 14
 29084                           ;main.c: 206: TMR7_StopTimer();
 29085  01248C  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29086                           
 29087                           ;main.c: 209: }
 29088                           ;main.c: 211: break;
 29089                           
 29090                           ;main.c: 207: return;
 29091  012490  0012               	return	
 29092  012492                     
 29093                           ;main.c: 216: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 29094  012492  0EC0               	movlw	192
 29095  012494  6E18               	movwf	i2___ftdiv@f2,c
 29096  012496  0E7F               	movlw	127
 29097  012498  6E19               	movwf	i2___ftdiv@f2+1,c
 29098  01249A  0E44               	movlw	68
 29099  01249C  6E1A               	movwf	i2___ftdiv@f2+2,c
 29100  01249E  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 29101  0124A2  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 29102  0124A6  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 29103  0124AA  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 29104  0124AE  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 29105  0124B2  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 29106  0124B6  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 29107  0124BA  EC1D  F0B8         	call	_ADCC_GetConversionResult	;wreg free
 29108  0124BE  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 29109  0124C2  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 29110  0124C6  EC8E  F0B7         	call	___lwtoft	;wreg free
 29111  0124CA  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 29112  0124CE  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 29113  0124D2  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 29114  0124D6  EC40  F0A8         	call	i2___ftmul	;wreg free
 29115  0124DA  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$4100
 29116  0124DE  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4100+1
 29117  0124E2  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4100+2
 29118                           
 29119                           ;main.c: 216: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 29120  0124E6  C0B3  F027         	movff	_ADCPostProcessingCallback$4100,i2___ftmul@f1
 29121  0124EA  C0B4  F028         	movff	_ADCPostProcessingCallback$4100+1,i2___ftmul@f1+1
 29122  0124EE  C0B5  F029         	movff	_ADCPostProcessingCallback$4100+2,i2___ftmul@f1+2
 29123  0124F2  0E5E               	movlw	94
 29124  0124F4  6E2A               	movwf	i2___ftmul@f2,c
 29125  0124F6  0EF2               	movlw	242
 29126  0124F8  6E2B               	movwf	i2___ftmul@f2+1,c
 29127  0124FA  0E3F               	movlw	63
 29128  0124FC  6E2C               	movwf	i2___ftmul@f2+2,c
 29129  0124FE  EC40  F0A8         	call	i2___ftmul	;wreg free
 29130  012502  C027  F0CE         	movff	?i2___ftmul,_Imeas	;volatile
 29131  012506  C028  F0CF         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 29132  01250A  C029  F0D0         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 29133                           
 29134                           ;main.c: 220: if (LATGbits.LATG0 != 1) {
 29135  01250E  B07F               	btfsc	3967,0,c	;volatile
 29136  012510  D083               	goto	i2l916
 29137                           
 29138                           ;main.c: 225: if (load_enable) {
 29139  012512  A45E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 29140  012514  D029               	goto	i2l917
 29141                           
 29142                           ;main.c: 228: if (dimming_period < 0x7FEE) {
 29143  012516  0EEE               	movlw	238
 29144  012518  0100               	movlb	0	; () banked
 29145  01251A  5DFA               	subwf	_dimming_period& (0+255),w,b	;volatile
 29146  01251C  0E7F               	movlw	127
 29147  01251E  59FB               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 29148  012520  B0D8               	btfsc	status,0,c
 29149  012522  D007               	goto	i2l918
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;main.c: 230: Ipk = Imeas;
 29153  012524  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 29154  012528  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 29155  01252C  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 29156                           
 29157                           ;main.c: 232: }
 29158  012530  D014               	goto	i2l919
 29159  012532                     i2l918:
 29160                           
 29161                           ; BSR set to: 0
 29162                           ;main.c: 235: else {
 29163                           ;main.c: 237: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 29164                           
 29165                           ; BSR set to: 0
 29166  012532  C0CE  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 29167  012536  C0CF  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 29168  01253A  C0D0  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 29169  01253E  C0FC  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 29170  012542  C0FD  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 29171  012546  C0FE  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 29172  01254A  ECE7  F0B2         	call	_currentMeasuredToPeak	;wreg free
 29173  01254E  C073  F0D1         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 29174  012552  C074  F0D2         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 29175  012556  C075  F0D3         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 29176  01255A                     i2l919:
 29177                           
 29178                           ;main.c: 239: }
 29179                           ;main.c: 241: Vpk = Vpk_const;
 29180  01255A  C0F4  F0D4         	movff	_Vpk_const,_Vpk	;volatile
 29181  01255E  C0F5  F0D5         	movff	_Vpk_const+1,_Vpk+1	;volatile
 29182  012562  C0F6  F0D6         	movff	_Vpk_const+2,_Vpk+2	;volatile
 29183                           
 29184                           ;main.c: 243: }
 29185  012566  D00D               	goto	i2l920
 29186  012568                     i2l917:
 29187                           
 29188                           ;main.c: 245: else {
 29189                           ;main.c: 247: Ipk = 0.0;
 29190  012568  0E00               	movlw	0
 29191  01256A  0100               	movlb	0	; () banked
 29192  01256C  6FD1               	movwf	_Ipk& (0+255),b	;volatile
 29193  01256E  0E00               	movlw	0
 29194  012570  6FD2               	movwf	(_Ipk+1)& (0+255),b	;volatile
 29195  012572  0E00               	movlw	0
 29196  012574  6FD3               	movwf	(_Ipk+2)& (0+255),b	;volatile
 29197                           
 29198                           ;main.c: 248: Vpk = 0.0;
 29199  012576  0E00               	movlw	0
 29200  012578  6FD4               	movwf	_Vpk& (0+255),b	;volatile
 29201  01257A  0E00               	movlw	0
 29202  01257C  6FD5               	movwf	(_Vpk+1)& (0+255),b	;volatile
 29203  01257E  0E00               	movlw	0
 29204  012580  6FD6               	movwf	(_Vpk+2)& (0+255),b	;volatile
 29205  012582                     i2l920:
 29206                           
 29207                           ;main.c: 250: }
 29208                           ;main.c: 252: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 29209                           
 29210                           ; BSR set to: 0
 29211  012582  C0FC  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29212  012586  C0FD  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29213  01258A  C0FE  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29214  01258E  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 29215  012592  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29216  012596  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29217  01259A  ECA9  F09F         	call	_peakToRMS	;wreg free
 29218  01259E  C094  F0B0         	movff	?_peakToRMS,_ADCPostProcessingCallback$4101
 29219  0125A2  C095  F0B1         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4101+1
 29220  0125A6  C096  F0B2         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4101+2
 29221                           
 29222                           ;main.c: 250: }
 29223                           ;main.c: 252: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 29224  0125AA  C0B0  F040         	movff	_ADCPostProcessingCallback$4101,i2___ftadd@f1
 29225  0125AE  C0B1  F041         	movff	_ADCPostProcessingCallback$4101+1,i2___ftadd@f1+1
 29226  0125B2  C0B2  F042         	movff	_ADCPostProcessingCallback$4101+2,i2___ftadd@f1+2
 29227  0125B6  C0F1  F043         	movff	_Irms_offset,i2___ftadd@f2
 29228  0125BA  C0F2  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 29229  0125BE  C0F3  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 29230  0125C2  EC44  F0A2         	call	i2___ftadd	;wreg free
 29231  0125C6  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 29232  0125CA  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 29233  0125CE  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 29234                           
 29235                           ;main.c: 253: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 29236  0125D2  C0D4  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 29237  0125D6  C0D5  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 29238  0125DA  C0D6  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 29239  0125DE  C0FC  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29240  0125E2  C0FD  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29241  0125E6  C0FE  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29242  0125EA  ECA9  F09F         	call	_peakToRMS	;wreg free
 29243  0125EE  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 29244  0125F2  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 29245  0125F6  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 29246                           
 29247                           ;main.c: 254: Avg_Power = Vrms * Irms;
 29248  0125FA  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 29249  0125FE  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 29250  012602  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 29251  012606  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 29252  01260A  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 29253  01260E  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 29254  012612  EC40  F0A8         	call	i2___ftmul	;wreg free
 29255  012616  D052               	goto	L14
 29256  012618                     i2l916:
 29257                           
 29258                           ;main.c: 259: else {
 29259                           ;main.c: 261: Ipk = Imeas;
 29260  012618  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 29261  01261C  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 29262  012620  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 29263                           
 29264                           ;main.c: 262: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 29265  012624  0E00               	movlw	0
 29266  012626  0100               	movlb	0	; () banked
 29267  012628  6F97               	movwf	peakToRMS@Angle& (0+255),b
 29268  01262A  0E00               	movlw	0
 29269  01262C  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 29270  01262E  0E00               	movlw	0
 29271  012630  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 29272  012632  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 29273  012636  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29274  01263A  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29275  01263E  ECA9  F09F         	call	_peakToRMS	;wreg free
 29276  012642  C094  F0B0         	movff	?_peakToRMS,_ADCPostProcessingCallback$4101
 29277  012646  C095  F0B1         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4101+1
 29278  01264A  C096  F0B2         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4101+2
 29279                           
 29280                           ;main.c: 262: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 29281  01264E  C0B0  F040         	movff	_ADCPostProcessingCallback$4101,i2___ftadd@f1
 29282  012652  C0B1  F041         	movff	_ADCPostProcessingCallback$4101+1,i2___ftadd@f1+1
 29283  012656  C0B2  F042         	movff	_ADCPostProcessingCallback$4101+2,i2___ftadd@f1+2
 29284  01265A  C0F1  F043         	movff	_Irms_offset,i2___ftadd@f2
 29285  01265E  C0F2  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 29286  012662  C0F3  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 29287  012666  EC44  F0A2         	call	i2___ftadd	;wreg free
 29288  01266A  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 29289  01266E  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 29290  012672  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 29291                           
 29292                           ;main.c: 263: Vrms = peakToRMS(Vpk_const, 0.0);
 29293  012676  C0F4  F094         	movff	_Vpk_const,peakToRMS@Peak
 29294  01267A  C0F5  F095         	movff	_Vpk_const+1,peakToRMS@Peak+1
 29295  01267E  C0F6  F096         	movff	_Vpk_const+2,peakToRMS@Peak+2
 29296  012682  0E00               	movlw	0
 29297  012684  0100               	movlb	0	; () banked
 29298  012686  6F97               	movwf	peakToRMS@Angle& (0+255),b
 29299  012688  0E00               	movlw	0
 29300  01268A  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 29301  01268C  0E00               	movlw	0
 29302  01268E  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 29303  012690  ECA9  F09F         	call	_peakToRMS	;wreg free
 29304  012694  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 29305  012698  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 29306  01269C  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 29307                           
 29308                           ;main.c: 264: Avg_Power = Vrms * Irms;
 29309  0126A0  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 29310  0126A4  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 29311  0126A8  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 29312  0126AC  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 29313  0126B0  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 29314  0126B4  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 29315  0126B8  EC40  F0A8         	call	i2___ftmul	;wreg free
 29316  0126BC                     L14:
 29317  0126BC  C027  F1BB         	movff	?i2___ftmul,_Avg_Power	;volatile
 29318  0126C0  C028  F1BC         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 29319  0126C4  C029  F1BD         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 29320                           
 29321                           ;main.c: 266: }
 29322                           ;main.c: 268: if (Irms > 5.0) {
 29323  0126C8  0E00               	movlw	0
 29324  0126CA  6E2A               	movwf	i2___ftge@ff1,c
 29325  0126CC  0EA0               	movlw	160
 29326  0126CE  6E2B               	movwf	i2___ftge@ff1+1,c
 29327  0126D0  0E40               	movlw	64
 29328  0126D2  6E2C               	movwf	i2___ftge@ff1+2,c
 29329  0126D4  C0CB  F02D         	movff	_Irms,i2___ftge@ff2	;volatile
 29330  0126D8  C0CC  F02E         	movff	_Irms+1,i2___ftge@ff2+1	;volatile
 29331  0126DC  C0CD  F02F         	movff	_Irms+2,i2___ftge@ff2+2	;volatile
 29332  0126E0  EC5F  F0AE         	call	i2___ftge	;wreg free
 29333  0126E4  B0D8               	btfsc	status,0,c
 29334  0126E6  0012               	return	
 29335                           
 29336                           ;main.c: 270: LATFbits.LATF3 = 1;
 29337  0126E8  867E               	bsf	3966,3,c	;volatile
 29338                           
 29339                           ;main.c: 271: adc_error_flag = 1;
 29340  0126EA  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29341                           
 29342                           ;main.c: 273: PIE5bits.TMR7IE == 0;
 29343  0126EC  010E               	movlb	14	; () banked
 29344  0126EE  512E               	movf	46,w,b	;volatile
 29345                           
 29346                           ; BSR set to: 14
 29347                           ;main.c: 274: TMR7_StopTimer();
 29348  0126F0  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29349                           
 29350                           ;main.c: 277: }
 29351                           ;main.c: 279: break;
 29352                           
 29353                           ;main.c: 275: return;
 29354  0126F4  0012               	return	
 29355  0126F6                     
 29356                           ;main.c: 284: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 29357  0126F6  0EC0               	movlw	192
 29358  0126F8  6E18               	movwf	i2___ftdiv@f2,c
 29359  0126FA  0E7F               	movlw	127
 29360  0126FC  6E19               	movwf	i2___ftdiv@f2+1,c
 29361  0126FE  0E44               	movlw	68
 29362  012700  6E1A               	movwf	i2___ftdiv@f2+2,c
 29363  012702  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 29364  012706  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 29365  01270A  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 29366  01270E  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 29367  012712  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 29368  012716  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 29369  01271A  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 29370  01271E  EC1D  F0B8         	call	_ADCC_GetConversionResult	;wreg free
 29371  012722  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 29372  012726  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 29373  01272A  EC8E  F0B7         	call	___lwtoft	;wreg free
 29374  01272E  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 29375  012732  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 29376  012736  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 29377  01273A  EC40  F0A8         	call	i2___ftmul	;wreg free
 29378  01273E  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$4100
 29379  012742  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4100+1
 29380  012746  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4100+2
 29381                           
 29382                           ;main.c: 284: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 29383  01274A  C0B3  F027         	movff	_ADCPostProcessingCallback$4100,i2___ftmul@f1
 29384  01274E  C0B4  F028         	movff	_ADCPostProcessingCallback$4100+1,i2___ftmul@f1+1
 29385  012752  C0B5  F029         	movff	_ADCPostProcessingCallback$4100+2,i2___ftmul@f1+2
 29386  012756  0EF8               	movlw	248
 29387  012758  6E2A               	movwf	i2___ftmul@f2,c
 29388  01275A  0E80               	movlw	128
 29389  01275C  6E2B               	movwf	i2___ftmul@f2+1,c
 29390  01275E  0E40               	movlw	64
 29391  012760  6E2C               	movwf	i2___ftmul@f2+2,c
 29392  012762  EC40  F0A8         	call	i2___ftmul	;wreg free
 29393  012766  C027  F0DA         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 29394  01276A  C028  F0DB         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 29395  01276E  C029  F0DC         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 29396                           
 29397                           ;main.c: 286: if (POS12_ADC_Result > 13.6) {
 29398  012772  0E9A               	movlw	154
 29399  012774  6E2A               	movwf	i2___ftge@ff1,c
 29400  012776  0E59               	movlw	89
 29401  012778  6E2B               	movwf	i2___ftge@ff1+1,c
 29402  01277A  0E41               	movlw	65
 29403  01277C  6E2C               	movwf	i2___ftge@ff1+2,c
 29404  01277E  C0DA  F02D         	movff	_POS12_ADC_Result,i2___ftge@ff2	;volatile
 29405  012782  C0DB  F02E         	movff	_POS12_ADC_Result+1,i2___ftge@ff2+1	;volatile
 29406  012786  C0DC  F02F         	movff	_POS12_ADC_Result+2,i2___ftge@ff2+2	;volatile
 29407  01278A  EC5F  F0AE         	call	i2___ftge	;wreg free
 29408  01278E  B0D8               	btfsc	status,0,c
 29409  012790  0012               	return	
 29410                           
 29411                           ;main.c: 288: LATFbits.LATF3 = 1;
 29412  012792  867E               	bsf	3966,3,c	;volatile
 29413                           
 29414                           ;main.c: 289: adc_error_flag = 1;
 29415  012794  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29416                           
 29417                           ;main.c: 291: PIE5bits.TMR7IE == 0;
 29418  012796  010E               	movlb	14	; () banked
 29419  012798  512E               	movf	46,w,b	;volatile
 29420                           
 29421                           ; BSR set to: 14
 29422                           ;main.c: 292: TMR7_StopTimer();
 29423  01279A  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29424                           
 29425                           ;main.c: 295: }
 29426                           ;main.c: 297: break;
 29427                           
 29428                           ;main.c: 293: return;
 29429  01279E  0012               	return	
 29430  0127A0                     
 29431                           ;main.c: 302: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29432  0127A0  0E00               	movlw	0
 29433  0127A2  6E18               	movwf	i2___ftdiv@f2,c
 29434  0127A4  0E00               	movlw	0
 29435  0127A6  6E19               	movwf	i2___ftdiv@f2+1,c
 29436  0127A8  0E40               	movlw	64
 29437  0127AA  6E1A               	movwf	i2___ftdiv@f2+2,c
 29438  0127AC  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 29439  0127B0  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 29440  0127B4  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 29441  0127B8  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 29442  0127BC  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 29443  0127C0  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 29444  0127C4  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 29445  0127C8  0E00               	movlw	0
 29446  0127CA  6E43               	movwf	i2___ftadd@f2,c
 29447  0127CC  0E80               	movlw	128
 29448  0127CE  6E44               	movwf	i2___ftadd@f2+1,c
 29449  0127D0  0E3F               	movlw	63
 29450  0127D2  6E45               	movwf	i2___ftadd@f2+2,c
 29451  0127D4  0EC0               	movlw	192
 29452  0127D6  6E18               	movwf	i2___ftdiv@f2,c
 29453  0127D8  0E7F               	movlw	127
 29454  0127DA  6E19               	movwf	i2___ftdiv@f2+1,c
 29455  0127DC  0E44               	movlw	68
 29456  0127DE  6E1A               	movwf	i2___ftdiv@f2+2,c
 29457  0127E0  EC1D  F0B8         	call	_ADCC_GetConversionResult	;wreg free
 29458  0127E4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 29459  0127E8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 29460  0127EC  EC8E  F0B7         	call	___lwtoft	;wreg free
 29461  0127F0  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 29462  0127F4  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 29463  0127F8  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 29464  0127FC  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 29465  012800  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 29466  012804  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 29467  012808  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 29468  01280C  EC7C  F0B7         	call	i2___ftneg	;wreg free
 29469  012810  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29470  012814  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29471  012818  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29472  01281C  EC44  F0A2         	call	i2___ftadd	;wreg free
 29473  012820  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 29474  012824  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 29475  012828  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 29476  01282C  EC40  F0A8         	call	i2___ftmul	;wreg free
 29477  012830  C027  F0A6         	movff	?i2___ftmul,_ADCPostProcessingCallback$4102
 29478  012834  C028  F0A7         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4102+1
 29479  012838  C029  F0A8         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4102+2
 29480                           
 29481                           ;main.c: 302: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29482  01283C  0E04               	movlw	4
 29483  01283E  6E18               	movwf	i2___ftdiv@f2,c
 29484  012840  0EAD               	movlw	173
 29485  012842  6E19               	movwf	i2___ftdiv@f2+1,c
 29486  012844  0E3A               	movlw	58
 29487  012846  6E1A               	movwf	i2___ftdiv@f2+2,c
 29488  012848  0EB4               	movlw	180
 29489  01284A  6E43               	movwf	i2___ftadd@f2,c
 29490  01284C  0E28               	movlw	40
 29491  01284E  6E44               	movwf	i2___ftadd@f2+1,c
 29492  012850  0E3F               	movlw	63
 29493  012852  6E45               	movwf	i2___ftadd@f2+2,c
 29494  012854  C0A6  F024         	movff	_ADCPostProcessingCallback$4102,i2___ftneg@f1
 29495  012858  C0A7  F025         	movff	_ADCPostProcessingCallback$4102+1,i2___ftneg@f1+1
 29496  01285C  C0A8  F026         	movff	_ADCPostProcessingCallback$4102+2,i2___ftneg@f1+2
 29497  012860  EC7C  F0B7         	call	i2___ftneg	;wreg free
 29498  012864  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29499  012868  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29500  01286C  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29501  012870  EC44  F0A2         	call	i2___ftadd	;wreg free
 29502  012874  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 29503  012878  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 29504  01287C  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 29505  012880  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 29506  012884  C015  F0A9         	movff	?i2___ftdiv,_ADCPostProcessingCallback$4103
 29507  012888  C016  F0AA         	movff	?i2___ftdiv+1,_ADCPostProcessingCallback$4103+1
 29508  01288C  C017  F0AB         	movff	?i2___ftdiv+2,_ADCPostProcessingCallback$4103+2
 29509                           
 29510                           ;main.c: 302: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29511  012890  C0F7  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 29512  012894  C0F8  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 29513  012898  C0F9  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 29514  01289C  C0A9  F040         	movff	_ADCPostProcessingCallback$4103,i2___ftadd@f1
 29515  0128A0  C0AA  F041         	movff	_ADCPostProcessingCallback$4103+1,i2___ftadd@f1+1
 29516  0128A4  C0AB  F042         	movff	_ADCPostProcessingCallback$4103+2,i2___ftadd@f1+2
 29517  0128A8  EC44  F0A2         	call	i2___ftadd	;wreg free
 29518  0128AC  C040  F0AC         	movff	?i2___ftadd,_ADCPostProcessingCallback$4104
 29519  0128B0  C041  F0AD         	movff	?i2___ftadd+1,_ADCPostProcessingCallback$4104+1
 29520  0128B4  C042  F0AE         	movff	?i2___ftadd+2,_ADCPostProcessingCallback$4104+2
 29521                           
 29522                           ;main.c: 302: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29523  0128B8  C0AC  F040         	movff	_ADCPostProcessingCallback$4104,i2___ftadd@f1
 29524  0128BC  C0AD  F041         	movff	_ADCPostProcessingCallback$4104+1,i2___ftadd@f1+1
 29525  0128C0  C0AE  F042         	movff	_ADCPostProcessingCallback$4104+2,i2___ftadd@f1+2
 29526  0128C4  0E00               	movlw	0
 29527  0128C6  6E43               	movwf	i2___ftadd@f2,c
 29528  0128C8  0E20               	movlw	32
 29529  0128CA  6E44               	movwf	i2___ftadd@f2+1,c
 29530  0128CC  0EC2               	movlw	194
 29531  0128CE  6E45               	movwf	i2___ftadd@f2+2,c
 29532  0128D0  EC44  F0A2         	call	i2___ftadd	;wreg free
 29533  0128D4  C040  F0D7         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 29534  0128D8  C041  F0D8         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 29535  0128DC  C042  F0D9         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 29536                           
 29537                           ;main.c: 304: if (Temp_ADC_Result > 40.0) {
 29538  0128E0  0E00               	movlw	0
 29539  0128E2  6E2A               	movwf	i2___ftge@ff1,c
 29540  0128E4  0E20               	movlw	32
 29541  0128E6  6E2B               	movwf	i2___ftge@ff1+1,c
 29542  0128E8  0E42               	movlw	66
 29543  0128EA  6E2C               	movwf	i2___ftge@ff1+2,c
 29544  0128EC  C0D7  F02D         	movff	_Temp_ADC_Result,i2___ftge@ff2	;volatile
 29545  0128F0  C0D8  F02E         	movff	_Temp_ADC_Result+1,i2___ftge@ff2+1	;volatile
 29546  0128F4  C0D9  F02F         	movff	_Temp_ADC_Result+2,i2___ftge@ff2+2	;volatile
 29547  0128F8  EC5F  F0AE         	call	i2___ftge	;wreg free
 29548  0128FC  B0D8               	btfsc	status,0,c
 29549  0128FE  0012               	return	
 29550                           
 29551                           ;main.c: 306: LATFbits.LATF3 = 1;
 29552  012900  867E               	bsf	3966,3,c	;volatile
 29553                           
 29554                           ;main.c: 307: adc_error_flag = 1;
 29555  012902  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29556                           
 29557                           ;main.c: 309: PIE5bits.TMR7IE == 0;
 29558  012904  010E               	movlb	14	; () banked
 29559  012906  512E               	movf	46,w,b	;volatile
 29560                           
 29561                           ; BSR set to: 14
 29562                           ;main.c: 310: TMR7_StopTimer();
 29563  012908  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29564                           
 29565                           ;main.c: 313: }
 29566                           ;main.c: 315: break;
 29567                           
 29568                           ;main.c: 311: return;
 29569  01290C  0012               	return	
 29570  01290E                     i2l927:
 29571                           
 29572                           ; BSR set to: 0
 29573                           ;main.c: 320: LATFbits.LATF3 = 1;
 29574  01290E  867E               	bsf	3966,3,c	;volatile
 29575                           
 29576                           ;main.c: 321: adc_error_flag = 1;
 29577  012910  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;main.c: 323: PIE5bits.TMR7IE == 0;
 29581  012912  010E               	movlb	14	; () banked
 29582  012914  512E               	movf	46,w,b	;volatile
 29583                           
 29584                           ; BSR set to: 14
 29585                           ;main.c: 324: TMR7_StopTimer();
 29586  012916  ECA8  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29587                           
 29588                           ;main.c: 327: }
 29589                           
 29590                           ;main.c: 325: break;
 29591  01291A  0012               	return	
 29592  01291C                     i2l904:
 29593  01291C  0100               	movlb	0	; () banked
 29594  01291E  51AF               	movf	ADCPostProcessingCallback@currentADCChannel& (0+255),w,b
 29595                           
 29596                           ; Switch size 1, requested type "space"
 29597                           ; Number of cases is 6, Range of values is 0 to 63
 29598                           ; switch strategies available:
 29599                           ; Name         Instructions Cycles
 29600                           ; simple_byte           19    10 (average)
 29601                           ;	Chosen strategy is simple_byte
 29602  012920  0A00               	xorlw	0	; case 0
 29603  012922  B4D8               	btfsc	status,2,c
 29604  012924  D5B6               	goto	i2l915
 29605  012926  0A04               	xorlw	4	; case 4
 29606  012928  B4D8               	btfsc	status,2,c
 29607  01292A  D6E5               	goto	i2l923
 29608  01292C  0A26               	xorlw	38	; case 34
 29609  01292E  B4D8               	btfsc	status,2,c
 29610  012930  D569               	goto	i2l913
 29611  012932  0A1E               	xorlw	30	; case 60
 29612  012934  B4D8               	btfsc	status,2,c
 29613  012936  D4CE               	goto	i2l905
 29614  012938  0A01               	xorlw	1	; case 61
 29615  01293A  B4D8               	btfsc	status,2,c
 29616  01293C  D731               	goto	i2l925
 29617  01293E  0A02               	xorlw	2	; case 63
 29618  012940  B4D8               	btfsc	status,2,c
 29619  012942  D4FB               	goto	i2l909
 29620  012944  D7E4               	goto	i2l927
 29621  012946                     __end_of_ADCPostProcessingCallback:
 29622                           	opt stack 0
 29623                           tosu	equ	0xFFF
 29624                           tosh	equ	0xFFE
 29625                           tosl	equ	0xFFD
 29626                           pclatu	equ	0xFFB
 29627                           pclath	equ	0xFFA
 29628                           tblptru	equ	0xFF8
 29629                           tblptrh	equ	0xFF7
 29630                           tblptrl	equ	0xFF6
 29631                           tablat	equ	0xFF5
 29632                           prodh	equ	0xFF4
 29633                           prodl	equ	0xFF3
 29634                           intcon	equ	0xFF2
 29635                           indf0	equ	0xFEF
 29636                           postinc0	equ	0xFEE
 29637                           fsr0h	equ	0xFEA
 29638                           fsr0l	equ	0xFE9
 29639                           wreg	equ	0xFE8
 29640                           indf1	equ	0xFE7
 29641                           postdec1	equ	0xFE5
 29642                           plusw1	equ	0xFE3
 29643                           fsr1h	equ	0xFE2
 29644                           fsr1l	equ	0xFE1
 29645                           bsr	equ	0xFE0
 29646                           indf2	equ	0xFDF
 29647                           postinc2	equ	0xFDE
 29648                           postdec2	equ	0xFDD
 29649                           plusw2	equ	0xFDB
 29650                           fsr2h	equ	0xFDA
 29651                           fsr2l	equ	0xFD9
 29652                           status	equ	0xFD8
 29653                           
 29654 ;; *************** function i2_TMR7_StopTimer *****************
 29655 ;; Defined at:
 29656 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 29657 ;; Parameters:    Size  Location     Type
 29658 ;;		None
 29659 ;; Auto vars:     Size  Location     Type
 29660 ;;		None
 29661 ;; Return value:  Size  Location     Type
 29662 ;;                  1    wreg      void 
 29663 ;; Registers used:
 29664 ;;		None
 29665 ;; Tracked objects:
 29666 ;;		On entry : 0/0
 29667 ;;		On exit  : 0/0
 29668 ;;		Unchanged: 0/0
 29669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29674 ;;Total ram usage:        0 bytes
 29675 ;; Hardware stack levels used:    1
 29676 ;; This function calls:
 29677 ;;		Nothing
 29678 ;; This function is called by:
 29679 ;;		_ADCPostProcessingCallback
 29680 ;; This function uses a non-reentrant model
 29681 ;;
 29682                           
 29683                           	psect	text107
 29684  017150                     __ptext107:
 29685                           	opt stack 0
 29686  017150                     i2_TMR7_StopTimer:
 29687                           	opt stack 15
 29688                           
 29689                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 29690                           
 29691                           ;incstack = 0
 29692  017150  010F               	movlb	15	; () banked
 29693  017152  9130               	bcf	48,0,b	;volatile
 29694                           
 29695                           ; BSR set to: 15
 29696  017154  0012               	return		;funcret
 29697  017156                     __end_ofi2_TMR7_StopTimer:
 29698                           	opt stack 0
 29699                           tosu	equ	0xFFF
 29700                           tosh	equ	0xFFE
 29701                           tosl	equ	0xFFD
 29702                           pclatu	equ	0xFFB
 29703                           pclath	equ	0xFFA
 29704                           tblptru	equ	0xFF8
 29705                           tblptrh	equ	0xFF7
 29706                           tblptrl	equ	0xFF6
 29707                           tablat	equ	0xFF5
 29708                           prodh	equ	0xFF4
 29709                           prodl	equ	0xFF3
 29710                           intcon	equ	0xFF2
 29711                           indf0	equ	0xFEF
 29712                           postinc0	equ	0xFEE
 29713                           fsr0h	equ	0xFEA
 29714                           fsr0l	equ	0xFE9
 29715                           wreg	equ	0xFE8
 29716                           indf1	equ	0xFE7
 29717                           postdec1	equ	0xFE5
 29718                           plusw1	equ	0xFE3
 29719                           fsr1h	equ	0xFE2
 29720                           fsr1l	equ	0xFE1
 29721                           bsr	equ	0xFE0
 29722                           indf2	equ	0xFDF
 29723                           postinc2	equ	0xFDE
 29724                           postdec2	equ	0xFDD
 29725                           plusw2	equ	0xFDB
 29726                           fsr2h	equ	0xFDA
 29727                           fsr2l	equ	0xFD9
 29728                           status	equ	0xFD8
 29729                           
 29730 ;; *************** function _peakToRMS *****************
 29731 ;; Defined at:
 29732 ;;		line 95 in file "main.c"
 29733 ;; Parameters:    Size  Location     Type
 29734 ;;  Peak            3   52[BANK0 ] void 
 29735 ;;  Angle           3   55[BANK0 ] void 
 29736 ;; Auto vars:     Size  Location     Type
 29737 ;;  RMS             3   67[BANK0 ] void 
 29738 ;; Return value:  Size  Location     Type
 29739 ;;                  3   52[BANK0 ] void 
 29740 ;; Registers used:
 29741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29742 ;; Tracked objects:
 29743 ;;		On entry : 0/0
 29744 ;;		On exit  : 0/0
 29745 ;;		Unchanged: 0/0
 29746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29747 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29748 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29750 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29751 ;;Total ram usage:       18 bytes
 29752 ;; Hardware stack levels used:    1
 29753 ;; Hardware stack levels required when called:    6
 29754 ;; This function calls:
 29755 ;;		_acos
 29756 ;;		_sin
 29757 ;;		_sqrt
 29758 ;;		i2___ftadd
 29759 ;;		i2___ftdiv
 29760 ;;		i2___ftmul
 29761 ;;		i2___ftneg
 29762 ;; This function is called by:
 29763 ;;		_ADCPostProcessingCallback
 29764 ;; This function uses a non-reentrant model
 29765 ;;
 29766                           
 29767                           	psect	text108
 29768  013F52                     __ptext108:
 29769                           	opt stack 0
 29770  013F52                     _peakToRMS:
 29771                           	opt stack 9
 29772                           
 29773                           ;main.c: 98: double RMS = 0.0;
 29774                           
 29775                           ; BSR set to: 15
 29776                           ;incstack = 0
 29777  013F52  0E00               	movlw	0
 29778  013F54  0100               	movlb	0	; () banked
 29779  013F56  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 29780  013F58  0E00               	movlw	0
 29781  013F5A  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 29782  013F5C  0E00               	movlw	0
 29783  013F5E  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 29784                           
 29785                           ; BSR set to: 0
 29786                           ;main.c: 101: RMS = 2.0 * acos(-1.0);
 29787  013F60  0E00               	movlw	0
 29788  013F62  6F8E               	movwf	acos@x& (0+255),b
 29789  013F64  0E80               	movlw	128
 29790  013F66  6F8F               	movwf	(acos@x+1)& (0+255),b
 29791  013F68  0EBF               	movlw	191
 29792  013F6A  6F90               	movwf	(acos@x+2)& (0+255),b
 29793  013F6C  ECCF  F0B3         	call	_acos	;wreg free
 29794  013F70  C08E  F0A0         	movff	?_acos,_peakToRMS$4097
 29795  013F74  C08F  F0A1         	movff	?_acos+1,_peakToRMS$4097+1
 29796  013F78  C090  F0A2         	movff	?_acos+2,_peakToRMS$4097+2
 29797                           
 29798                           ;main.c: 101: RMS = 2.0 * acos(-1.0);
 29799  013F7C  C0A0  F027         	movff	_peakToRMS$4097,i2___ftmul@f1
 29800  013F80  C0A1  F028         	movff	_peakToRMS$4097+1,i2___ftmul@f1+1
 29801  013F84  C0A2  F029         	movff	_peakToRMS$4097+2,i2___ftmul@f1+2
 29802  013F88  0E00               	movlw	0
 29803  013F8A  6E2A               	movwf	i2___ftmul@f2,c
 29804  013F8C  0E00               	movlw	0
 29805  013F8E  6E2B               	movwf	i2___ftmul@f2+1,c
 29806  013F90  0E40               	movlw	64
 29807  013F92  6E2C               	movwf	i2___ftmul@f2+2,c
 29808  013F94  EC40  F0A8         	call	i2___ftmul	;wreg free
 29809  013F98  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 29810  013F9C  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 29811  013FA0  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 29812                           
 29813                           ;main.c: 102: RMS = RMS - (2.0 * Angle);
 29814  013FA4  0E00               	movlw	0
 29815  013FA6  6E2A               	movwf	i2___ftmul@f2,c
 29816  013FA8  0E00               	movlw	0
 29817  013FAA  6E2B               	movwf	i2___ftmul@f2+1,c
 29818  013FAC  0E40               	movlw	64
 29819  013FAE  6E2C               	movwf	i2___ftmul@f2+2,c
 29820  013FB0  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 29821  013FB4  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 29822  013FB8  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 29823  013FBC  EC40  F0A8         	call	i2___ftmul	;wreg free
 29824  013FC0  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 29825  013FC4  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 29826  013FC8  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 29827  013FCC  EC7C  F0B7         	call	i2___ftneg	;wreg free
 29828  013FD0  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29829  013FD4  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29830  013FD8  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29831  013FDC  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 29832  013FE0  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 29833  013FE4  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 29834  013FE8  EC44  F0A2         	call	i2___ftadd	;wreg free
 29835  013FEC  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 29836  013FF0  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 29837  013FF4  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 29838                           
 29839                           ;main.c: 103: RMS = RMS + sin(2.0 * Angle);
 29840  013FF8  0E00               	movlw	0
 29841  013FFA  6E2A               	movwf	i2___ftmul@f2,c
 29842  013FFC  0E00               	movlw	0
 29843  013FFE  6E2B               	movwf	i2___ftmul@f2+1,c
 29844  014000  0E40               	movlw	64
 29845  014002  6E2C               	movwf	i2___ftmul@f2+2,c
 29846  014004  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 29847  014008  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 29848  01400C  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 29849  014010  EC40  F0A8         	call	i2___ftmul	;wreg free
 29850  014014  C027  F09A         	movff	?i2___ftmul,_peakToRMS$4098
 29851  014018  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$4098+1
 29852  01401C  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$4098+2
 29853                           
 29854                           ;main.c: 103: RMS = RMS + sin(2.0 * Angle);
 29855  014020  C09A  F066         	movff	_peakToRMS$4098,sin@f
 29856  014024  C09B  F067         	movff	_peakToRMS$4098+1,sin@f+1
 29857  014028  C09C  F068         	movff	_peakToRMS$4098+2,sin@f+2
 29858  01402C  EC7A  F09E         	call	_sin	;wreg free
 29859  014030  C066  F09D         	movff	?_sin,_peakToRMS$4099
 29860  014034  C067  F09E         	movff	?_sin+1,_peakToRMS$4099+1
 29861  014038  C068  F09F         	movff	?_sin+2,_peakToRMS$4099+2
 29862                           
 29863                           ;main.c: 103: RMS = RMS + sin(2.0 * Angle);
 29864  01403C  C09D  F040         	movff	_peakToRMS$4099,i2___ftadd@f1
 29865  014040  C09E  F041         	movff	_peakToRMS$4099+1,i2___ftadd@f1+1
 29866  014044  C09F  F042         	movff	_peakToRMS$4099+2,i2___ftadd@f1+2
 29867  014048  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 29868  01404C  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 29869  014050  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 29870  014054  EC44  F0A2         	call	i2___ftadd	;wreg free
 29871  014058  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 29872  01405C  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 29873  014060  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 29874                           
 29875                           ;main.c: 104: RMS = RMS / (4.0 * acos(-1.0));
 29876  014064  0E00               	movlw	0
 29877  014066  0100               	movlb	0	; () banked
 29878  014068  6F8E               	movwf	acos@x& (0+255),b
 29879  01406A  0E80               	movlw	128
 29880  01406C  6F8F               	movwf	(acos@x+1)& (0+255),b
 29881  01406E  0EBF               	movlw	191
 29882  014070  6F90               	movwf	(acos@x+2)& (0+255),b
 29883  014072  ECCF  F0B3         	call	_acos	;wreg free
 29884  014076  C08E  F0A0         	movff	?_acos,_peakToRMS$4097
 29885  01407A  C08F  F0A1         	movff	?_acos+1,_peakToRMS$4097+1
 29886  01407E  C090  F0A2         	movff	?_acos+2,_peakToRMS$4097+2
 29887                           
 29888                           ;main.c: 104: RMS = RMS / (4.0 * acos(-1.0));
 29889  014082  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 29890  014086  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 29891  01408A  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 29892  01408E  0E00               	movlw	0
 29893  014090  6E2A               	movwf	i2___ftmul@f2,c
 29894  014092  0E80               	movlw	128
 29895  014094  6E2B               	movwf	i2___ftmul@f2+1,c
 29896  014096  0E40               	movlw	64
 29897  014098  6E2C               	movwf	i2___ftmul@f2+2,c
 29898  01409A  C0A0  F027         	movff	_peakToRMS$4097,i2___ftmul@f1
 29899  01409E  C0A1  F028         	movff	_peakToRMS$4097+1,i2___ftmul@f1+1
 29900  0140A2  C0A2  F029         	movff	_peakToRMS$4097+2,i2___ftmul@f1+2
 29901  0140A6  EC40  F0A8         	call	i2___ftmul	;wreg free
 29902  0140AA  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 29903  0140AE  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 29904  0140B2  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 29905  0140B6  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 29906  0140BA  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 29907  0140BE  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 29908  0140C2  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 29909                           
 29910                           ;main.c: 105: RMS = sqrt(RMS);
 29911  0140C6  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 29912  0140CA  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 29913  0140CE  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 29914  0140D2  EC1A  F0A3         	call	_sqrt	;wreg free
 29915  0140D6  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 29916  0140DA  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 29917  0140DE  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 29918                           
 29919                           ;main.c: 106: RMS = Peak * RMS;
 29920  0140E2  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 29921  0140E6  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 29922  0140EA  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 29923  0140EE  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 29924  0140F2  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 29925  0140F6  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 29926  0140FA  EC40  F0A8         	call	i2___ftmul	;wreg free
 29927  0140FE  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 29928  014102  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 29929  014106  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 29930                           
 29931                           ;main.c: 107: return RMS;
 29932  01410A  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 29933  01410E  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 29934  014112  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 29935  014116  0012               	return	
 29936  014118                     __end_of_peakToRMS:
 29937                           	opt stack 0
 29938                           tosu	equ	0xFFF
 29939                           tosh	equ	0xFFE
 29940                           tosl	equ	0xFFD
 29941                           pclatu	equ	0xFFB
 29942                           pclath	equ	0xFFA
 29943                           tblptru	equ	0xFF8
 29944                           tblptrh	equ	0xFF7
 29945                           tblptrl	equ	0xFF6
 29946                           tablat	equ	0xFF5
 29947                           prodh	equ	0xFF4
 29948                           prodl	equ	0xFF3
 29949                           intcon	equ	0xFF2
 29950                           indf0	equ	0xFEF
 29951                           postinc0	equ	0xFEE
 29952                           fsr0h	equ	0xFEA
 29953                           fsr0l	equ	0xFE9
 29954                           wreg	equ	0xFE8
 29955                           indf1	equ	0xFE7
 29956                           postdec1	equ	0xFE5
 29957                           plusw1	equ	0xFE3
 29958                           fsr1h	equ	0xFE2
 29959                           fsr1l	equ	0xFE1
 29960                           bsr	equ	0xFE0
 29961                           indf2	equ	0xFDF
 29962                           postinc2	equ	0xFDE
 29963                           postdec2	equ	0xFDD
 29964                           plusw2	equ	0xFDB
 29965                           fsr2h	equ	0xFDA
 29966                           fsr2l	equ	0xFD9
 29967                           status	equ	0xFD8
 29968                           
 29969 ;; *************** function _acos *****************
 29970 ;; Defined at:
 29971 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 29972 ;; Parameters:    Size  Location     Type
 29973 ;;  x               3   46[BANK0 ] void 
 29974 ;; Auto vars:     Size  Location     Type
 29975 ;;		None
 29976 ;; Return value:  Size  Location     Type
 29977 ;;                  3   46[BANK0 ] void 
 29978 ;; Registers used:
 29979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29980 ;; Tracked objects:
 29981 ;;		On entry : 0/0
 29982 ;;		On exit  : 0/0
 29983 ;;		Unchanged: 0/0
 29984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29985 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29986 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29988 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29989 ;;Total ram usage:        6 bytes
 29990 ;; Hardware stack levels used:    1
 29991 ;; Hardware stack levels required when called:    5
 29992 ;; This function calls:
 29993 ;;		_asin
 29994 ;;		i2___ftadd
 29995 ;;		i2___ftneg
 29996 ;; This function is called by:
 29997 ;;		_peakToRMS
 29998 ;; This function uses a non-reentrant model
 29999 ;;
 30000                           
 30001                           	psect	text109
 30002  01679E                     __ptext109:
 30003                           	opt stack 0
 30004  01679E                     _acos:
 30005                           	opt stack 9
 30006                           
 30007                           ;incstack = 0
 30008  01679E  C08E  F079         	movff	acos@x,asin@x
 30009  0167A2  C08F  F07A         	movff	acos@x+1,asin@x+1
 30010  0167A6  C090  F07B         	movff	acos@x+2,asin@x+2
 30011  0167AA  EC44  F09D         	call	_asin	;wreg free
 30012  0167AE  C079  F091         	movff	?_asin,_acos$4105
 30013  0167B2  C07A  F092         	movff	?_asin+1,_acos$4105+1
 30014  0167B6  C07B  F093         	movff	?_asin+2,_acos$4105+2
 30015  0167BA  C091  F024         	movff	_acos$4105,i2___ftneg@f1
 30016  0167BE  C092  F025         	movff	_acos$4105+1,i2___ftneg@f1+1
 30017  0167C2  C093  F026         	movff	_acos$4105+2,i2___ftneg@f1+2
 30018  0167C6  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30019  0167CA  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30020  0167CE  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30021  0167D2  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30022  0167D6  0E10               	movlw	16
 30023  0167D8  6E43               	movwf	i2___ftadd@f2,c
 30024  0167DA  0EC9               	movlw	201
 30025  0167DC  6E44               	movwf	i2___ftadd@f2+1,c
 30026  0167DE  0E3F               	movlw	63
 30027  0167E0  6E45               	movwf	i2___ftadd@f2+2,c
 30028  0167E2  EC44  F0A2         	call	i2___ftadd	;wreg free
 30029  0167E6  C040  F08E         	movff	?i2___ftadd,?_acos
 30030  0167EA  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 30031  0167EE  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 30032  0167F2  0012               	return	
 30033  0167F4                     __end_of_acos:
 30034                           	opt stack 0
 30035                           tosu	equ	0xFFF
 30036                           tosh	equ	0xFFE
 30037                           tosl	equ	0xFFD
 30038                           pclatu	equ	0xFFB
 30039                           pclath	equ	0xFFA
 30040                           tblptru	equ	0xFF8
 30041                           tblptrh	equ	0xFF7
 30042                           tblptrl	equ	0xFF6
 30043                           tablat	equ	0xFF5
 30044                           prodh	equ	0xFF4
 30045                           prodl	equ	0xFF3
 30046                           intcon	equ	0xFF2
 30047                           indf0	equ	0xFEF
 30048                           postinc0	equ	0xFEE
 30049                           fsr0h	equ	0xFEA
 30050                           fsr0l	equ	0xFE9
 30051                           wreg	equ	0xFE8
 30052                           indf1	equ	0xFE7
 30053                           postdec1	equ	0xFE5
 30054                           plusw1	equ	0xFE3
 30055                           fsr1h	equ	0xFE2
 30056                           fsr1l	equ	0xFE1
 30057                           bsr	equ	0xFE0
 30058                           indf2	equ	0xFDF
 30059                           postinc2	equ	0xFDE
 30060                           postdec2	equ	0xFDD
 30061                           plusw2	equ	0xFDB
 30062                           fsr2h	equ	0xFDA
 30063                           fsr2l	equ	0xFD9
 30064                           status	equ	0xFD8
 30065                           
 30066 ;; *************** function _asin *****************
 30067 ;; Defined at:
 30068 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 30069 ;; Parameters:    Size  Location     Type
 30070 ;;  x               3   25[BANK0 ] void 
 30071 ;; Auto vars:     Size  Location     Type
 30072 ;;  y               3   40[BANK0 ] void 
 30073 ;;  sgn             3   28[BANK0 ] void 
 30074 ;; Return value:  Size  Location     Type
 30075 ;;                  3   25[BANK0 ] void 
 30076 ;; Registers used:
 30077 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30078 ;; Tracked objects:
 30079 ;;		On entry : 0/0
 30080 ;;		On exit  : 0/0
 30081 ;;		Unchanged: 0/0
 30082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30083 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30084 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30086 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30087 ;;Total ram usage:       21 bytes
 30088 ;; Hardware stack levels used:    1
 30089 ;; Hardware stack levels required when called:    4
 30090 ;; This function calls:
 30091 ;;		_atan
 30092 ;;		_fabs
 30093 ;;		_sqrt
 30094 ;;		i2___ftadd
 30095 ;;		i2___ftdiv
 30096 ;;		i2___ftge
 30097 ;;		i2___ftmul
 30098 ;;		i2___ftneg
 30099 ;; This function is called by:
 30100 ;;		_acos
 30101 ;; This function uses a non-reentrant model
 30102 ;;
 30103                           
 30104                           	psect	text110
 30105  013A88                     __ptext110:
 30106                           	opt stack 0
 30107  013A88                     _asin:
 30108                           	opt stack 9
 30109                           
 30110                           ;incstack = 0
 30111  013A88  0E00               	movlw	0
 30112  013A8A  6E2A               	movwf	i2___ftge@ff1,c
 30113  013A8C  0E80               	movlw	128
 30114  013A8E  6E2B               	movwf	i2___ftge@ff1+1,c
 30115  013A90  0E3F               	movlw	63
 30116  013A92  6E2C               	movwf	i2___ftge@ff1+2,c
 30117  013A94  C079  F027         	movff	asin@x,fabs@d
 30118  013A98  C07A  F028         	movff	asin@x+1,fabs@d+1
 30119  013A9C  C07B  F029         	movff	asin@x+2,fabs@d+2
 30120  013AA0  ECC5  F0B6         	call	_fabs	;wreg free
 30121  013AA4  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 30122  013AA8  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 30123  013AAC  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 30124  013AB0  EC5F  F0AE         	call	i2___ftge	;wreg free
 30125  013AB4  B0D8               	btfsc	status,0,c
 30126  013AB6  D00D               	goto	i2l1605
 30127  013AB8  0E00               	movlw	0
 30128  013ABA  0102               	movlb	2	; () banked
 30129  013ABC  6F41               	movwf	(_errno+1)& (0+255),b
 30130  013ABE  0E21               	movlw	33
 30131  013AC0  6F40               	movwf	_errno& (0+255),b
 30132  013AC2  0E00               	movlw	0
 30133  013AC4  0100               	movlb	0	; () banked
 30134  013AC6  6F79               	movwf	?_asin& (0+255),b
 30135  013AC8  0E00               	movlw	0
 30136  013ACA  6F7A               	movwf	(?_asin+1)& (0+255),b
 30137  013ACC  0E00               	movlw	0
 30138  013ACE  6F7B               	movwf	(?_asin+2)& (0+255),b
 30139                           
 30140                           ; BSR set to: 0
 30141  013AD0  0012               	return	
 30142  013AD2                     i2l1605:
 30143                           
 30144                           ; BSR set to: 0
 30145  013AD2  0E00               	movlw	0
 30146  013AD4  0100               	movlb	0	; () banked
 30147  013AD6  6F7C               	movwf	asin@sgn& (0+255),b
 30148  013AD8  0E80               	movlw	128
 30149  013ADA  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 30150  013ADC  0E3F               	movlw	63
 30151  013ADE  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 30152                           
 30153                           ; BSR set to: 0
 30154  013AE0  C079  F02A         	movff	asin@x,i2___ftmul@f2
 30155  013AE4  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 30156  013AE8  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 30157  013AEC  C079  F027         	movff	asin@x,i2___ftmul@f1
 30158  013AF0  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 30159  013AF4  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 30160  013AF8  EC40  F0A8         	call	i2___ftmul	;wreg free
 30161  013AFC  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 30162  013B00  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 30163  013B04  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 30164  013B08  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30165  013B0C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30166  013B10  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30167  013B14  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30168  013B18  0E00               	movlw	0
 30169  013B1A  6E43               	movwf	i2___ftadd@f2,c
 30170  013B1C  0E80               	movlw	128
 30171  013B1E  6E44               	movwf	i2___ftadd@f2+1,c
 30172  013B20  0E3F               	movlw	63
 30173  013B22  6E45               	movwf	i2___ftadd@f2+2,c
 30174  013B24  EC44  F0A2         	call	i2___ftadd	;wreg free
 30175  013B28  C040  F07F         	movff	?i2___ftadd,_asin$4106
 30176  013B2C  C041  F080         	movff	?i2___ftadd+1,_asin$4106+1
 30177  013B30  C042  F081         	movff	?i2___ftadd+2,_asin$4106+2
 30178  013B34  C07F  F066         	movff	_asin$4106,sqrt@a
 30179  013B38  C080  F067         	movff	_asin$4106+1,sqrt@a+1
 30180  013B3C  C081  F068         	movff	_asin$4106+2,sqrt@a+2
 30181  013B40  EC1A  F0A3         	call	_sqrt	;wreg free
 30182  013B44  C066  F088         	movff	?_sqrt,asin@y
 30183  013B48  C067  F089         	movff	?_sqrt+1,asin@y+1
 30184  013B4C  C068  F08A         	movff	?_sqrt+2,asin@y+2
 30185  013B50  C079  F027         	movff	asin@x,fabs@d
 30186  013B54  C07A  F028         	movff	asin@x+1,fabs@d+1
 30187  013B58  C07B  F029         	movff	asin@x+2,fabs@d+2
 30188  013B5C  ECC5  F0B6         	call	_fabs	;wreg free
 30189  013B60  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 30190  013B64  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 30191  013B68  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 30192  013B6C  0EC3               	movlw	195
 30193  013B6E  6E2D               	movwf	i2___ftge@ff2,c
 30194  013B70  0E35               	movlw	53
 30195  013B72  6E2E               	movwf	i2___ftge@ff2+1,c
 30196  013B74  0E3F               	movlw	63
 30197  013B76  6E2F               	movwf	i2___ftge@ff2+2,c
 30198  013B78  EC5F  F0AE         	call	i2___ftge	;wreg free
 30199  013B7C  B0D8               	btfsc	status,0,c
 30200  013B7E  D023               	goto	i2l1607
 30201  013B80  C079  F015         	movff	asin@x,i2___ftdiv@f1
 30202  013B84  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 30203  013B88  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 30204  013B8C  C088  F018         	movff	asin@y,i2___ftdiv@f2
 30205  013B90  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 30206  013B94  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 30207  013B98  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 30208  013B9C  C015  F08B         	movff	?i2___ftdiv,_asin$4107
 30209  013BA0  C016  F08C         	movff	?i2___ftdiv+1,_asin$4107+1
 30210  013BA4  C017  F08D         	movff	?i2___ftdiv+2,_asin$4107+2
 30211  013BA8  C08B  F058         	movff	_asin$4107,atan@f
 30212  013BAC  C08C  F059         	movff	_asin$4107+1,atan@f+1
 30213  013BB0  C08D  F05A         	movff	_asin$4107+2,atan@f+2
 30214  013BB4  EC8C  F0A0         	call	_atan	;wreg free
 30215  013BB8  C058  F079         	movff	?_atan,?_asin
 30216  013BBC  C059  F07A         	movff	?_atan+1,?_asin+1
 30217  013BC0  C05A  F07B         	movff	?_atan+2,?_asin+2
 30218  013BC4  0012               	return	
 30219  013BC6                     i2l1607:
 30220  013BC6  0100               	movlb	0	; () banked
 30221  013BC8  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 30222  013BCA  D055               	goto	i2l1608
 30223                           
 30224                           ; BSR set to: 0
 30225  013BCC  C079  F018         	movff	asin@x,i2___ftdiv@f2
 30226  013BD0  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 30227  013BD4  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 30228  013BD8  C088  F024         	movff	asin@y,i2___ftneg@f1
 30229  013BDC  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 30230  013BE0  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 30231  013BE4  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30232  013BE8  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 30233  013BEC  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 30234  013BF0  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 30235  013BF4  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 30236  013BF8  C015  F08B         	movff	?i2___ftdiv,_asin$4107
 30237  013BFC  C016  F08C         	movff	?i2___ftdiv+1,_asin$4107+1
 30238  013C00  C017  F08D         	movff	?i2___ftdiv+2,_asin$4107+2
 30239  013C04  C08B  F058         	movff	_asin$4107,atan@f
 30240  013C08  C08C  F059         	movff	_asin$4107+1,atan@f+1
 30241  013C0C  C08D  F05A         	movff	_asin$4107+2,atan@f+2
 30242  013C10  EC8C  F0A0         	call	_atan	;wreg free
 30243  013C14  C058  F085         	movff	?_atan,_asin$4108
 30244  013C18  C059  F086         	movff	?_atan+1,_asin$4108+1
 30245  013C1C  C05A  F087         	movff	?_atan+2,_asin$4108+2
 30246  013C20  0E10               	movlw	16
 30247  013C22  6E43               	movwf	i2___ftadd@f2,c
 30248  013C24  0EC9               	movlw	201
 30249  013C26  6E44               	movwf	i2___ftadd@f2+1,c
 30250  013C28  0E3F               	movlw	63
 30251  013C2A  6E45               	movwf	i2___ftadd@f2+2,c
 30252  013C2C  C085  F024         	movff	_asin$4108,i2___ftneg@f1
 30253  013C30  C086  F025         	movff	_asin$4108+1,i2___ftneg@f1+1
 30254  013C34  C087  F026         	movff	_asin$4108+2,i2___ftneg@f1+2
 30255  013C38  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30256  013C3C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30257  013C40  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30258  013C44  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30259  013C48  EC44  F0A2         	call	i2___ftadd	;wreg free
 30260  013C4C  C040  F082         	movff	?i2___ftadd,_asin$4109
 30261  013C50  C041  F083         	movff	?i2___ftadd+1,_asin$4109+1
 30262  013C54  C042  F084         	movff	?i2___ftadd+2,_asin$4109+2
 30263  013C58  C082  F024         	movff	_asin$4109,i2___ftneg@f1
 30264  013C5C  C083  F025         	movff	_asin$4109+1,i2___ftneg@f1+1
 30265  013C60  C084  F026         	movff	_asin$4109+2,i2___ftneg@f1+2
 30266  013C64  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30267  013C68  C024  F079         	movff	?i2___ftneg,?_asin
 30268  013C6C  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 30269  013C70  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 30270  013C74  0012               	return	
 30271  013C76                     i2l1608:
 30272  013C76  C079  F018         	movff	asin@x,i2___ftdiv@f2
 30273  013C7A  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 30274  013C7E  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 30275  013C82  C088  F015         	movff	asin@y,i2___ftdiv@f1
 30276  013C86  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 30277  013C8A  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 30278  013C8E  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 30279  013C92  C015  F08B         	movff	?i2___ftdiv,_asin$4107
 30280  013C96  C016  F08C         	movff	?i2___ftdiv+1,_asin$4107+1
 30281  013C9A  C017  F08D         	movff	?i2___ftdiv+2,_asin$4107+2
 30282  013C9E  C08B  F058         	movff	_asin$4107,atan@f
 30283  013CA2  C08C  F059         	movff	_asin$4107+1,atan@f+1
 30284  013CA6  C08D  F05A         	movff	_asin$4107+2,atan@f+2
 30285  013CAA  EC8C  F0A0         	call	_atan	;wreg free
 30286  013CAE  C058  F085         	movff	?_atan,_asin$4108
 30287  013CB2  C059  F086         	movff	?_atan+1,_asin$4108+1
 30288  013CB6  C05A  F087         	movff	?_atan+2,_asin$4108+2
 30289  013CBA  C085  F024         	movff	_asin$4108,i2___ftneg@f1
 30290  013CBE  C086  F025         	movff	_asin$4108+1,i2___ftneg@f1+1
 30291  013CC2  C087  F026         	movff	_asin$4108+2,i2___ftneg@f1+2
 30292  013CC6  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30293  013CCA  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30294  013CCE  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30295  013CD2  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30296  013CD6  0E10               	movlw	16
 30297  013CD8  6E43               	movwf	i2___ftadd@f2,c
 30298  013CDA  0EC9               	movlw	201
 30299  013CDC  6E44               	movwf	i2___ftadd@f2+1,c
 30300  013CDE  0E3F               	movlw	63
 30301  013CE0  6E45               	movwf	i2___ftadd@f2+2,c
 30302  013CE2  EC44  F0A2         	call	i2___ftadd	;wreg free
 30303  013CE6  C040  F079         	movff	?i2___ftadd,?_asin
 30304  013CEA  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 30305  013CEE  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 30306  013CF2  0012               	return	
 30307  013CF4                     __end_of_asin:
 30308                           	opt stack 0
 30309                           tosu	equ	0xFFF
 30310                           tosh	equ	0xFFE
 30311                           tosl	equ	0xFFD
 30312                           pclatu	equ	0xFFB
 30313                           pclath	equ	0xFFA
 30314                           tblptru	equ	0xFF8
 30315                           tblptrh	equ	0xFF7
 30316                           tblptrl	equ	0xFF6
 30317                           tablat	equ	0xFF5
 30318                           prodh	equ	0xFF4
 30319                           prodl	equ	0xFF3
 30320                           intcon	equ	0xFF2
 30321                           indf0	equ	0xFEF
 30322                           postinc0	equ	0xFEE
 30323                           fsr0h	equ	0xFEA
 30324                           fsr0l	equ	0xFE9
 30325                           wreg	equ	0xFE8
 30326                           indf1	equ	0xFE7
 30327                           postdec1	equ	0xFE5
 30328                           plusw1	equ	0xFE3
 30329                           fsr1h	equ	0xFE2
 30330                           fsr1l	equ	0xFE1
 30331                           bsr	equ	0xFE0
 30332                           indf2	equ	0xFDF
 30333                           postinc2	equ	0xFDE
 30334                           postdec2	equ	0xFDD
 30335                           plusw2	equ	0xFDB
 30336                           fsr2h	equ	0xFDA
 30337                           fsr2l	equ	0xFD9
 30338                           status	equ	0xFD8
 30339                           
 30340 ;; *************** function _sqrt *****************
 30341 ;; Defined at:
 30342 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 30343 ;; Parameters:    Size  Location     Type
 30344 ;;  a               3    6[BANK0 ] void 
 30345 ;; Auto vars:     Size  Location     Type
 30346 ;;  x               3   22[BANK0 ] void 
 30347 ;;  q               3   19[BANK0 ] void 
 30348 ;;  z               3   16[BANK0 ] void 
 30349 ;;  og              3   12[BANK0 ] void 
 30350 ;;  i               1   15[BANK0 ] unsigned char 
 30351 ;; Return value:  Size  Location     Type
 30352 ;;                  3    6[BANK0 ] unsigned char 
 30353 ;; Registers used:
 30354 ;;		wreg, status,2, status,0, cstack
 30355 ;; Tracked objects:
 30356 ;;		On entry : 0/0
 30357 ;;		On exit  : 0/0
 30358 ;;		Unchanged: 0/0
 30359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30360 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30361 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30362 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30363 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30364 ;;Total ram usage:       19 bytes
 30365 ;; Hardware stack levels used:    1
 30366 ;; Hardware stack levels required when called:    3
 30367 ;; This function calls:
 30368 ;;		i2___ftge
 30369 ;;		i2___ftmul
 30370 ;;		i2___ftsub
 30371 ;; This function is called by:
 30372 ;;		_peakToRMS
 30373 ;;		_asin
 30374 ;; This function uses a non-reentrant model
 30375 ;;
 30376                           
 30377                           	psect	text111
 30378  014634                     __ptext111:
 30379                           	opt stack 0
 30380  014634                     _sqrt:
 30381                           	opt stack 11
 30382                           
 30383                           ;incstack = 0
 30384  014634  0E00               	movlw	0
 30385  014636  6E2A               	movwf	i2___ftge@ff1,c
 30386  014638  0E00               	movlw	0
 30387  01463A  6E2B               	movwf	i2___ftge@ff1+1,c
 30388  01463C  0E00               	movlw	0
 30389  01463E  6E2C               	movwf	i2___ftge@ff1+2,c
 30390  014640  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 30391  014644  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 30392  014648  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 30393  01464C  EC5F  F0AE         	call	i2___ftge	;wreg free
 30394  014650  A0D8               	btfss	status,0,c
 30395  014652  D010               	goto	i2l2147
 30396  014654  0100               	movlb	0	; () banked
 30397  014656  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 30398  014658  D005               	goto	i2l2148
 30399                           
 30400                           ; BSR set to: 0
 30401  01465A  0E00               	movlw	0
 30402  01465C  0102               	movlb	2	; () banked
 30403  01465E  6F41               	movwf	(_errno+1)& (0+255),b
 30404  014660  0E21               	movlw	33
 30405  014662  6F40               	movwf	_errno& (0+255),b
 30406  014664                     i2l2148:
 30407  014664  0E00               	movlw	0
 30408  014666  0100               	movlb	0	; () banked
 30409  014668  6F66               	movwf	?_sqrt& (0+255),b
 30410  01466A  0E00               	movlw	0
 30411  01466C  6F67               	movwf	(?_sqrt+1)& (0+255),b
 30412  01466E  0E00               	movlw	0
 30413  014670  6F68               	movwf	(?_sqrt+2)& (0+255),b
 30414                           
 30415                           ; BSR set to: 0
 30416  014672  0012               	return	
 30417  014674                     i2l2147:
 30418  014674  C066  F070         	movff	sqrt@a,sqrt@z
 30419  014678  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 30420  01467C  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 30421  014680  C066  F069         	movff	sqrt@a,??_sqrt
 30422  014684  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 30423  014688  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 30424  01468C  0100               	movlb	0	; () banked
 30425  01468E  1F69               	comf	??_sqrt& (0+255),f,b
 30426  014690  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 30427  014692  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 30428  014694  2B69               	incf	??_sqrt& (0+255),f,b
 30429  014696  0E00               	movlw	0
 30430  014698  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 30431  01469A  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 30432  01469C  0EC8               	movlw	200
 30433  01469E  2569               	addwf	??_sqrt& (0+255),w,b
 30434  0146A0  6F76               	movwf	sqrt@x& (0+255),b
 30435  0146A2  0E6E               	movlw	110
 30436  0146A4  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 30437  0146A6  6F77               	movwf	(sqrt@x+1)& (0+255),b
 30438  0146A8  0EBE               	movlw	190
 30439  0146AA  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 30440  0146AC  6F78               	movwf	(sqrt@x+2)& (0+255),b
 30441                           
 30442                           ; BSR set to: 0
 30443  0146AE  90D8               	bcf	status,0,c
 30444  0146B0  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 30445  0146B2  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 30446  0146B4  3376               	rrcf	sqrt@x& (0+255),f,b
 30447                           
 30448                           ; BSR set to: 0
 30449  0146B6  0E00               	movlw	0
 30450  0146B8  5F70               	subwf	sqrt@z& (0+255),f,b
 30451  0146BA  0E80               	movlw	128
 30452  0146BC  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 30453  0146BE  0E00               	movlw	0
 30454  0146C0  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 30455                           
 30456                           ; BSR set to: 0
 30457  0146C2  0E04               	movlw	4
 30458  0146C4  6F6F               	movwf	sqrt@i& (0+255),b
 30459  0146C6                     
 30460                           ; BSR set to: 0
 30461                           
 30462                           ; BSR set to: 0
 30463  0146C6  C076  F06C         	movff	sqrt@x,sqrt@og
 30464  0146CA  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 30465  0146CE  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 30466                           
 30467                           ; BSR set to: 0
 30468  0146D2  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 30469  0146D6  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 30470  0146DA  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 30471  0146DE  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 30472  0146E2  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 30473  0146E6  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 30474  0146EA  EC40  F0A8         	call	i2___ftmul	;wreg free
 30475  0146EE  C027  F073         	movff	?i2___ftmul,sqrt@q
 30476  0146F2  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 30477  0146F6  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 30478  0146FA  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 30479  0146FE  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 30480  014702  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 30481  014706  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 30482  01470A  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 30483  01470E  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 30484  014712  EC40  F0A8         	call	i2___ftmul	;wreg free
 30485  014716  C027  F073         	movff	?i2___ftmul,sqrt@q
 30486  01471A  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 30487  01471E  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 30488  014722  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 30489  014726  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 30490  01472A  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 30491  01472E  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 30492  014732  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 30493  014736  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 30494  01473A  EC40  F0A8         	call	i2___ftmul	;wreg free
 30495  01473E  C027  F073         	movff	?i2___ftmul,sqrt@q
 30496  014742  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 30497  014746  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 30498  01474A  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 30499  01474E  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 30500  014752  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 30501  014756  0E00               	movlw	0
 30502  014758  6E2A               	movwf	i2___ftmul@f2,c
 30503  01475A  0EC0               	movlw	192
 30504  01475C  6E2B               	movwf	i2___ftmul@f2+1,c
 30505  01475E  0E3F               	movlw	63
 30506  014760  6E2C               	movwf	i2___ftmul@f2+2,c
 30507  014762  EC40  F0A8         	call	i2___ftmul	;wreg free
 30508  014766  C027  F076         	movff	?i2___ftmul,sqrt@x
 30509  01476A  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 30510  01476E  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 30511  014772  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 30512  014776  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 30513  01477A  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 30514  01477E  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 30515  014782  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 30516  014786  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 30517  01478A  EC8F  F0B5         	call	i2___ftsub	;wreg free
 30518  01478E  C060  F076         	movff	?i2___ftsub,sqrt@x
 30519  014792  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 30520  014796  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 30521  01479A  0100               	movlb	0	; () banked
 30522  01479C  2F6F               	decfsz	sqrt@i& (0+255),f,b
 30523  01479E  D793               	goto	i2l2150
 30524                           
 30525                           ; BSR set to: 0
 30526                           
 30527                           ; BSR set to: 0
 30528  0147A0  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 30529  0147A4  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 30530  0147A8  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 30531  0147AC  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 30532  0147B0  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 30533  0147B4  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 30534  0147B8  EC40  F0A8         	call	i2___ftmul	;wreg free
 30535  0147BC  C027  F066         	movff	?i2___ftmul,?_sqrt
 30536  0147C0  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 30537  0147C4  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 30538  0147C8  0012               	return	
 30539  0147CA                     __end_of_sqrt:
 30540                           	opt stack 0
 30541                           tosu	equ	0xFFF
 30542                           tosh	equ	0xFFE
 30543                           tosl	equ	0xFFD
 30544                           pclatu	equ	0xFFB
 30545                           pclath	equ	0xFFA
 30546                           tblptru	equ	0xFF8
 30547                           tblptrh	equ	0xFF7
 30548                           tblptrl	equ	0xFF6
 30549                           tablat	equ	0xFF5
 30550                           prodh	equ	0xFF4
 30551                           prodl	equ	0xFF3
 30552                           intcon	equ	0xFF2
 30553                           indf0	equ	0xFEF
 30554                           postinc0	equ	0xFEE
 30555                           fsr0h	equ	0xFEA
 30556                           fsr0l	equ	0xFE9
 30557                           wreg	equ	0xFE8
 30558                           indf1	equ	0xFE7
 30559                           postdec1	equ	0xFE5
 30560                           plusw1	equ	0xFE3
 30561                           fsr1h	equ	0xFE2
 30562                           fsr1l	equ	0xFE1
 30563                           bsr	equ	0xFE0
 30564                           indf2	equ	0xFDF
 30565                           postinc2	equ	0xFDE
 30566                           postdec2	equ	0xFDD
 30567                           plusw2	equ	0xFDB
 30568                           fsr2h	equ	0xFDA
 30569                           fsr2l	equ	0xFD9
 30570                           status	equ	0xFD8
 30571                           
 30572 ;; *************** function _atan *****************
 30573 ;; Defined at:
 30574 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 30575 ;; Parameters:    Size  Location     Type
 30576 ;;  f               3   87[COMRAM] unsigned char 
 30577 ;; Auto vars:     Size  Location     Type
 30578 ;;  val             3   10[BANK0 ] unsigned char 
 30579 ;;  val_squared     3    7[BANK0 ] unsigned char 
 30580 ;;  x               3    3[BANK0 ] unsigned char 
 30581 ;;  y               3    0[BANK0 ] unsigned char 
 30582 ;;  recip           1    6[BANK0 ] unsigned char 
 30583 ;; Return value:  Size  Location     Type
 30584 ;;                  3   87[COMRAM] unsigned char 
 30585 ;; Registers used:
 30586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30587 ;; Tracked objects:
 30588 ;;		On entry : 0/0
 30589 ;;		On exit  : 0/0
 30590 ;;		Unchanged: 0/0
 30591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30592 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30593 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30595 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30596 ;;Total ram usage:       16 bytes
 30597 ;; Hardware stack levels used:    1
 30598 ;; Hardware stack levels required when called:    3
 30599 ;; This function calls:
 30600 ;;		_eval_poly
 30601 ;;		_fabs
 30602 ;;		i2___ftadd
 30603 ;;		i2___ftdiv
 30604 ;;		i2___ftge
 30605 ;;		i2___ftmul
 30606 ;;		i2___ftneg
 30607 ;; This function is called by:
 30608 ;;		_asin
 30609 ;; This function uses a non-reentrant model
 30610 ;;
 30611                           
 30612                           	psect	text112
 30613  014118                     __ptext112:
 30614                           	opt stack 0
 30615  014118                     _atan:
 30616                           	opt stack 9
 30617                           
 30618                           ;incstack = 0
 30619  014118  C058  F027         	movff	atan@f,fabs@d
 30620  01411C  C059  F028         	movff	atan@f+1,fabs@d+1
 30621  014120  C05A  F029         	movff	atan@f+2,fabs@d+2
 30622  014124  ECC5  F0B6         	call	_fabs	;wreg free
 30623  014128  C027  F06A         	movff	?_fabs,atan@val
 30624  01412C  C028  F06B         	movff	?_fabs+1,atan@val+1
 30625  014130  C029  F06C         	movff	?_fabs+2,atan@val+2
 30626  014134  0100               	movlb	0	; () banked
 30627  014136  516A               	movf	atan@val& (0+255),w,b
 30628  014138  116B               	iorwf	(atan@val+1)& (0+255),w,b
 30629  01413A  116C               	iorwf	(atan@val+2)& (0+255),w,b
 30630  01413C  A4D8               	btfss	status,2,c
 30631  01413E  D007               	goto	i2l1624
 30632                           
 30633                           ; BSR set to: 0
 30634  014140  0E00               	movlw	0
 30635  014142  6E58               	movwf	?_atan,c
 30636  014144  0E00               	movlw	0
 30637  014146  6E59               	movwf	?_atan+1,c
 30638  014148  0E00               	movlw	0
 30639  01414A  6E5A               	movwf	?_atan+2,c
 30640                           
 30641                           ; BSR set to: 0
 30642  01414C  0012               	return	
 30643  01414E                     i2l1624:
 30644                           
 30645                           ; BSR set to: 0
 30646                           
 30647                           ; BSR set to: 0
 30648  01414E  0E00               	movlw	0
 30649  014150  6E2A               	movwf	i2___ftge@ff1,c
 30650  014152  0E80               	movlw	128
 30651  014154  6E2B               	movwf	i2___ftge@ff1+1,c
 30652  014156  0E3F               	movlw	63
 30653  014158  6E2C               	movwf	i2___ftge@ff1+2,c
 30654  01415A  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 30655  01415E  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 30656  014162  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 30657  014166  EC5F  F0AE         	call	i2___ftge	;wreg free
 30658  01416A  B0D8               	btfsc	status,0,c
 30659  01416C  D002               	goto	i2u1856_40
 30660  01416E  0E01               	movlw	1
 30661  014170  D001               	goto	i2u1857_40
 30662  014172                     i2u1856_40:
 30663  014172  0E00               	movlw	0
 30664  014174                     i2u1857_40:
 30665  014174  0100               	movlb	0	; () banked
 30666  014176  6F66               	movwf	atan@recip& (0+255),b
 30667  014178  5166               	movf	atan@recip& (0+255),w,b
 30668  01417A  B4D8               	btfsc	status,2,c
 30669  01417C  D014               	goto	i2l1626
 30670                           
 30671                           ; BSR set to: 0
 30672  01417E  0E00               	movlw	0
 30673  014180  6E15               	movwf	i2___ftdiv@f1,c
 30674  014182  0E80               	movlw	128
 30675  014184  6E16               	movwf	i2___ftdiv@f1+1,c
 30676  014186  0E3F               	movlw	63
 30677  014188  6E17               	movwf	i2___ftdiv@f1+2,c
 30678  01418A  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 30679  01418E  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 30680  014192  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 30681  014196  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 30682  01419A  C015  F06A         	movff	?i2___ftdiv,atan@val
 30683  01419E  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 30684  0141A2  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 30685  0141A6                     i2l1626:
 30686  0141A6  C06A  F027         	movff	atan@val,i2___ftmul@f1
 30687  0141AA  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 30688  0141AE  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 30689  0141B2  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 30690  0141B6  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 30691  0141BA  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 30692  0141BE  EC40  F0A8         	call	i2___ftmul	;wreg free
 30693  0141C2  C027  F067         	movff	?i2___ftmul,atan@val_squared
 30694  0141C6  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 30695  0141CA  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 30696  0141CE  C067  F04C         	movff	atan@val_squared,eval_poly@x
 30697  0141D2  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 30698  0141D6  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 30699  0141DA  0E46               	movlw	low atan@coeff_b
 30700  0141DC  6E4F               	movwf	eval_poly@d,c
 30701  0141DE  0EEC               	movlw	high atan@coeff_b
 30702  0141E0  6E50               	movwf	eval_poly@d+1,c
 30703  0141E2  0E00               	movlw	0
 30704  0141E4  6E52               	movwf	eval_poly@n+1,c
 30705  0141E6  0E04               	movlw	4
 30706  0141E8  6E51               	movwf	eval_poly@n,c
 30707  0141EA  EC82  F0AA         	call	_eval_poly	;wreg free
 30708  0141EE  C04C  F060         	movff	?_eval_poly,atan@y
 30709  0141F2  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 30710  0141F6  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 30711  0141FA  C067  F04C         	movff	atan@val_squared,eval_poly@x
 30712  0141FE  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 30713  014202  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 30714  014206  0E25               	movlw	low atan@coeff_a
 30715  014208  6E4F               	movwf	eval_poly@d,c
 30716  01420A  0EEC               	movlw	high atan@coeff_a
 30717  01420C  6E50               	movwf	eval_poly@d+1,c
 30718  01420E  0E00               	movlw	0
 30719  014210  6E52               	movwf	eval_poly@n+1,c
 30720  014212  0E05               	movlw	5
 30721  014214  6E51               	movwf	eval_poly@n,c
 30722  014216  EC82  F0AA         	call	_eval_poly	;wreg free
 30723  01421A  C04C  F063         	movff	?_eval_poly,atan@x
 30724  01421E  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 30725  014222  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 30726  014226  C06A  F027         	movff	atan@val,i2___ftmul@f1
 30727  01422A  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 30728  01422E  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 30729  014232  C060  F018         	movff	atan@y,i2___ftdiv@f2
 30730  014236  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 30731  01423A  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 30732  01423E  C063  F015         	movff	atan@x,i2___ftdiv@f1
 30733  014242  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 30734  014246  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 30735  01424A  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 30736  01424E  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 30737  014252  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 30738  014256  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 30739  01425A  EC40  F0A8         	call	i2___ftmul	;wreg free
 30740  01425E  C027  F06A         	movff	?i2___ftmul,atan@val
 30741  014262  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 30742  014266  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 30743  01426A  0100               	movlb	0	; () banked
 30744  01426C  5166               	movf	atan@recip& (0+255),w,b
 30745  01426E  B4D8               	btfsc	status,2,c
 30746  014270  D01C               	goto	i2l1627
 30747                           
 30748                           ; BSR set to: 0
 30749  014272  C06A  F024         	movff	atan@val,i2___ftneg@f1
 30750  014276  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 30751  01427A  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 30752  01427E  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30753  014282  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30754  014286  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30755  01428A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30756  01428E  0E10               	movlw	16
 30757  014290  6E43               	movwf	i2___ftadd@f2,c
 30758  014292  0EC9               	movlw	201
 30759  014294  6E44               	movwf	i2___ftadd@f2+1,c
 30760  014296  0E3F               	movlw	63
 30761  014298  6E45               	movwf	i2___ftadd@f2+2,c
 30762  01429A  EC44  F0A2         	call	i2___ftadd	;wreg free
 30763  01429E  C040  F06A         	movff	?i2___ftadd,atan@val
 30764  0142A2  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 30765  0142A6  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 30766  0142AA                     i2l1627:
 30767  0142AA  BE5A               	btfsc	atan@f+2,7,c
 30768  0142AC  D007               	goto	i2l1629
 30769  0142AE  C06A  F058         	movff	atan@val,?_atan
 30770  0142B2  C06B  F059         	movff	atan@val+1,?_atan+1
 30771  0142B6  C06C  F05A         	movff	atan@val+2,?_atan+2
 30772  0142BA  0012               	return	
 30773  0142BC                     i2l1629:
 30774  0142BC  C06A  F024         	movff	atan@val,i2___ftneg@f1
 30775  0142C0  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 30776  0142C4  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 30777  0142C8  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30778  0142CC  C024  F058         	movff	?i2___ftneg,?_atan
 30779  0142D0  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 30780  0142D4  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 30781  0142D8  0012               	return	
 30782  0142DA                     __end_of_atan:
 30783                           	opt stack 0
 30784                           tosu	equ	0xFFF
 30785                           tosh	equ	0xFFE
 30786                           tosl	equ	0xFFD
 30787                           pclatu	equ	0xFFB
 30788                           pclath	equ	0xFFA
 30789                           tblptru	equ	0xFF8
 30790                           tblptrh	equ	0xFF7
 30791                           tblptrl	equ	0xFF6
 30792                           tablat	equ	0xFF5
 30793                           prodh	equ	0xFF4
 30794                           prodl	equ	0xFF3
 30795                           intcon	equ	0xFF2
 30796                           indf0	equ	0xFEF
 30797                           postinc0	equ	0xFEE
 30798                           fsr0h	equ	0xFEA
 30799                           fsr0l	equ	0xFE9
 30800                           wreg	equ	0xFE8
 30801                           indf1	equ	0xFE7
 30802                           postdec1	equ	0xFE5
 30803                           plusw1	equ	0xFE3
 30804                           fsr1h	equ	0xFE2
 30805                           fsr1l	equ	0xFE1
 30806                           bsr	equ	0xFE0
 30807                           indf2	equ	0xFDF
 30808                           postinc2	equ	0xFDE
 30809                           postdec2	equ	0xFDD
 30810                           plusw2	equ	0xFDB
 30811                           fsr2h	equ	0xFDA
 30812                           fsr2l	equ	0xFD9
 30813                           status	equ	0xFD8
 30814                           
 30815 ;; *************** function _fabs *****************
 30816 ;; Defined at:
 30817 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 30818 ;; Parameters:    Size  Location     Type
 30819 ;;  d               3   38[COMRAM] unsigned char 
 30820 ;; Auto vars:     Size  Location     Type
 30821 ;;		None
 30822 ;; Return value:  Size  Location     Type
 30823 ;;                  3   38[COMRAM] unsigned char 
 30824 ;; Registers used:
 30825 ;;		wreg, status,2, status,0, cstack
 30826 ;; Tracked objects:
 30827 ;;		On entry : 0/0
 30828 ;;		On exit  : 0/0
 30829 ;;		Unchanged: 0/0
 30830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30831 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30835 ;;Total ram usage:        3 bytes
 30836 ;; Hardware stack levels used:    1
 30837 ;; Hardware stack levels required when called:    1
 30838 ;; This function calls:
 30839 ;;		i2___ftneg
 30840 ;; This function is called by:
 30841 ;;		_asin
 30842 ;;		_atan
 30843 ;; This function uses a non-reentrant model
 30844 ;;
 30845                           
 30846                           	psect	text113
 30847  016D8A                     __ptext113:
 30848                           	opt stack 0
 30849  016D8A                     _fabs:
 30850                           	opt stack 11
 30851                           
 30852                           ;incstack = 0
 30853  016D8A  AE29               	btfss	fabs@d+2,7,c
 30854  016D8C  D00F               	goto	i2l1721
 30855  016D8E  C027  F024         	movff	fabs@d,i2___ftneg@f1
 30856  016D92  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 30857  016D96  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 30858  016D9A  EC7C  F0B7         	call	i2___ftneg	;wreg free
 30859  016D9E  C024  F027         	movff	?i2___ftneg,?_fabs
 30860  016DA2  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 30861  016DA6  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 30862  016DAA  0012               	return	
 30863  016DAC                     i2l1721:
 30864  016DAC  C027  F027         	movff	fabs@d,?_fabs
 30865  016DB0  C028  F028         	movff	fabs@d+1,?_fabs+1
 30866  016DB4  C029  F029         	movff	fabs@d+2,?_fabs+2
 30867  016DB8  0012               	return		;funcret
 30868  016DBA                     __end_of_fabs:
 30869                           	opt stack 0
 30870                           tosu	equ	0xFFF
 30871                           tosh	equ	0xFFE
 30872                           tosl	equ	0xFFD
 30873                           pclatu	equ	0xFFB
 30874                           pclath	equ	0xFFA
 30875                           tblptru	equ	0xFF8
 30876                           tblptrh	equ	0xFF7
 30877                           tblptrl	equ	0xFF6
 30878                           tablat	equ	0xFF5
 30879                           prodh	equ	0xFF4
 30880                           prodl	equ	0xFF3
 30881                           intcon	equ	0xFF2
 30882                           indf0	equ	0xFEF
 30883                           postinc0	equ	0xFEE
 30884                           fsr0h	equ	0xFEA
 30885                           fsr0l	equ	0xFE9
 30886                           wreg	equ	0xFE8
 30887                           indf1	equ	0xFE7
 30888                           postdec1	equ	0xFE5
 30889                           plusw1	equ	0xFE3
 30890                           fsr1h	equ	0xFE2
 30891                           fsr1l	equ	0xFE1
 30892                           bsr	equ	0xFE0
 30893                           indf2	equ	0xFDF
 30894                           postinc2	equ	0xFDE
 30895                           postdec2	equ	0xFDD
 30896                           plusw2	equ	0xFDB
 30897                           fsr2h	equ	0xFDA
 30898                           fsr2l	equ	0xFD9
 30899                           status	equ	0xFD8
 30900                           
 30901 ;; *************** function _currentMeasuredToPeak *****************
 30902 ;; Defined at:
 30903 ;;		line 112 in file "main.c"
 30904 ;; Parameters:    Size  Location     Type
 30905 ;;  Measured        3   19[BANK0 ] unsigned char 
 30906 ;;  Angle           3   22[BANK0 ] unsigned char 
 30907 ;; Auto vars:     Size  Location     Type
 30908 ;;  Peak            3   25[BANK0 ] unsigned char 
 30909 ;; Return value:  Size  Location     Type
 30910 ;;                  3   19[BANK0 ] unsigned char 
 30911 ;; Registers used:
 30912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30913 ;; Tracked objects:
 30914 ;;		On entry : 0/0
 30915 ;;		On exit  : 0/0
 30916 ;;		Unchanged: 0/0
 30917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30918 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30919 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30921 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30922 ;;Total ram usage:        9 bytes
 30923 ;; Hardware stack levels used:    1
 30924 ;; Hardware stack levels required when called:    4
 30925 ;; This function calls:
 30926 ;;		_sin
 30927 ;;		i2___ftdiv
 30928 ;; This function is called by:
 30929 ;;		_ADCPostProcessingCallback
 30930 ;; This function uses a non-reentrant model
 30931 ;;
 30932                           
 30933                           	psect	text114
 30934  0165CE                     __ptext114:
 30935                           	opt stack 0
 30936  0165CE                     _currentMeasuredToPeak:
 30937                           	opt stack 11
 30938                           
 30939                           ;main.c: 115: double Peak = 0.0;
 30940                           
 30941                           ;incstack = 0
 30942  0165CE  0E00               	movlw	0
 30943  0165D0  0100               	movlb	0	; () banked
 30944  0165D2  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 30945  0165D4  0E00               	movlw	0
 30946  0165D6  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 30947  0165D8  0E00               	movlw	0
 30948  0165DA  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 30949                           
 30950                           ; BSR set to: 0
 30951                           ;main.c: 118: Peak = sin(Angle);
 30952  0165DC  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 30953  0165E0  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 30954  0165E4  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 30955  0165E8  EC7A  F09E         	call	_sin	;wreg free
 30956  0165EC  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 30957  0165F0  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 30958  0165F4  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 30959                           
 30960                           ;main.c: 119: Peak = Measured / Peak;
 30961  0165F8  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 30962  0165FC  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 30963  016600  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 30964  016604  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 30965  016608  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 30966  01660C  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 30967  016610  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 30968  016614  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 30969  016618  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 30970  01661C  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 30971                           
 30972                           ;main.c: 120: return Peak;
 30973  016620  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 30974  016624  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 30975  016628  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 30976  01662C  0012               	return	
 30977  01662E                     __end_of_currentMeasuredToPeak:
 30978                           	opt stack 0
 30979                           tosu	equ	0xFFF
 30980                           tosh	equ	0xFFE
 30981                           tosl	equ	0xFFD
 30982                           pclatu	equ	0xFFB
 30983                           pclath	equ	0xFFA
 30984                           tblptru	equ	0xFF8
 30985                           tblptrh	equ	0xFF7
 30986                           tblptrl	equ	0xFF6
 30987                           tablat	equ	0xFF5
 30988                           prodh	equ	0xFF4
 30989                           prodl	equ	0xFF3
 30990                           intcon	equ	0xFF2
 30991                           indf0	equ	0xFEF
 30992                           postinc0	equ	0xFEE
 30993                           fsr0h	equ	0xFEA
 30994                           fsr0l	equ	0xFE9
 30995                           wreg	equ	0xFE8
 30996                           indf1	equ	0xFE7
 30997                           postdec1	equ	0xFE5
 30998                           plusw1	equ	0xFE3
 30999                           fsr1h	equ	0xFE2
 31000                           fsr1l	equ	0xFE1
 31001                           bsr	equ	0xFE0
 31002                           indf2	equ	0xFDF
 31003                           postinc2	equ	0xFDE
 31004                           postdec2	equ	0xFDD
 31005                           plusw2	equ	0xFDB
 31006                           fsr2h	equ	0xFDA
 31007                           fsr2l	equ	0xFD9
 31008                           status	equ	0xFD8
 31009                           
 31010 ;; *************** function _sin *****************
 31011 ;; Defined at:
 31012 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 31013 ;; Parameters:    Size  Location     Type
 31014 ;;  f               3    6[BANK0 ] unsigned char 
 31015 ;; Auto vars:     Size  Location     Type
 31016 ;;  x2              3   15[BANK0 ] unsigned char 
 31017 ;;  y               3    9[BANK0 ] unsigned char 
 31018 ;;  sgn             1   18[BANK0 ] unsigned char 
 31019 ;; Return value:  Size  Location     Type
 31020 ;;                  3    6[BANK0 ] unsigned char 
 31021 ;; Registers used:
 31022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31023 ;; Tracked objects:
 31024 ;;		On entry : 0/0
 31025 ;;		On exit  : 0/0
 31026 ;;		Unchanged: 0/0
 31027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31028 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31029 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31031 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31032 ;;Total ram usage:       13 bytes
 31033 ;; Hardware stack levels used:    1
 31034 ;; Hardware stack levels required when called:    3
 31035 ;; This function calls:
 31036 ;;		_eval_poly
 31037 ;;		_floor
 31038 ;;		i2___ftadd
 31039 ;;		i2___ftdiv
 31040 ;;		i2___ftge
 31041 ;;		i2___ftmul
 31042 ;;		i2___ftneg
 31043 ;;		i2___ftsub
 31044 ;; This function is called by:
 31045 ;;		_peakToRMS
 31046 ;;		_currentMeasuredToPeak
 31047 ;; This function uses a non-reentrant model
 31048 ;;
 31049                           
 31050                           	psect	text115
 31051  013CF4                     __ptext115:
 31052                           	opt stack 0
 31053  013CF4                     _sin:
 31054                           	opt stack 11
 31055                           
 31056                           ;incstack = 0
 31057  013CF4  0E00               	movlw	0
 31058  013CF6  0100               	movlb	0	; () banked
 31059  013CF8  6F72               	movwf	sin@sgn& (0+255),b
 31060                           
 31061                           ; BSR set to: 0
 31062  013CFA  AF68               	btfss	(sin@f+2)& (0+255),7,b
 31063  013CFC  D011               	goto	i2l2018
 31064                           
 31065                           ; BSR set to: 0
 31066  013CFE  C066  F024         	movff	sin@f,i2___ftneg@f1
 31067  013D02  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 31068  013D06  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 31069  013D0A  EC7C  F0B7         	call	i2___ftneg	;wreg free
 31070  013D0E  C024  F066         	movff	?i2___ftneg,sin@f
 31071  013D12  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 31072  013D16  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 31073  013D1A  0E01               	movlw	1
 31074  013D1C  0100               	movlb	0	; () banked
 31075  013D1E  6F72               	movwf	sin@sgn& (0+255),b
 31076  013D20                     i2l2018:
 31077                           
 31078                           ; BSR set to: 0
 31079                           
 31080                           ; BSR set to: 0
 31081  013D20  C066  F027         	movff	sin@f,i2___ftmul@f1
 31082  013D24  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 31083  013D28  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 31084  013D2C  0EFA               	movlw	250
 31085  013D2E  6E2A               	movwf	i2___ftmul@f2,c
 31086  013D30  0E22               	movlw	34
 31087  013D32  6E2B               	movwf	i2___ftmul@f2+1,c
 31088  013D34  0E3E               	movlw	62
 31089  013D36  6E2C               	movwf	i2___ftmul@f2+2,c
 31090  013D38  EC40  F0A8         	call	i2___ftmul	;wreg free
 31091  013D3C  C027  F066         	movff	?i2___ftmul,sin@f
 31092  013D40  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 31093  013D44  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 31094  013D48  C066  F060         	movff	sin@f,i2___ftsub@f1
 31095  013D4C  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 31096  013D50  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 31097  013D54  C066  F056         	movff	sin@f,floor@x
 31098  013D58  C067  F057         	movff	sin@f+1,floor@x+1
 31099  013D5C  C068  F058         	movff	sin@f+2,floor@x+2
 31100  013D60  EC13  F0AA         	call	_floor	;wreg free
 31101  013D64  C056  F063         	movff	?_floor,i2___ftsub@f2
 31102  013D68  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 31103  013D6C  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 31104  013D70  EC8F  F0B5         	call	i2___ftsub	;wreg free
 31105  013D74  C060  F066         	movff	?i2___ftsub,sin@f
 31106  013D78  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 31107  013D7C  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 31108  013D80  C066  F027         	movff	sin@f,i2___ftmul@f1
 31109  013D84  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 31110  013D88  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 31111  013D8C  0E00               	movlw	0
 31112  013D8E  6E2A               	movwf	i2___ftmul@f2,c
 31113  013D90  0E80               	movlw	128
 31114  013D92  6E2B               	movwf	i2___ftmul@f2+1,c
 31115  013D94  0E40               	movlw	64
 31116  013D96  6E2C               	movwf	i2___ftmul@f2+2,c
 31117  013D98  EC40  F0A8         	call	i2___ftmul	;wreg free
 31118  013D9C  C027  F066         	movff	?i2___ftmul,sin@f
 31119  013DA0  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 31120  013DA4  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 31121  013DA8  0E00               	movlw	0
 31122  013DAA  6E2A               	movwf	i2___ftge@ff1,c
 31123  013DAC  0E00               	movlw	0
 31124  013DAE  6E2B               	movwf	i2___ftge@ff1+1,c
 31125  013DB0  0E40               	movlw	64
 31126  013DB2  6E2C               	movwf	i2___ftge@ff1+2,c
 31127  013DB4  C066  F02D         	movff	sin@f,i2___ftge@ff2
 31128  013DB8  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 31129  013DBC  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 31130  013DC0  EC5F  F0AE         	call	i2___ftge	;wreg free
 31131  013DC4  B0D8               	btfsc	status,0,c
 31132  013DC6  D01D               	goto	i2l2019
 31133  013DC8  C066  F060         	movff	sin@f,i2___ftsub@f1
 31134  013DCC  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 31135  013DD0  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 31136  013DD4  0E00               	movlw	0
 31137  013DD6  0100               	movlb	0	; () banked
 31138  013DD8  6F63               	movwf	i2___ftsub@f2& (0+255),b
 31139  013DDA  0E00               	movlw	0
 31140  013DDC  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 31141  013DDE  0E40               	movlw	64
 31142  013DE0  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 31143  013DE2  EC8F  F0B5         	call	i2___ftsub	;wreg free
 31144  013DE6  C060  F066         	movff	?i2___ftsub,sin@f
 31145  013DEA  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 31146  013DEE  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 31147  013DF2  0100               	movlb	0	; () banked
 31148  013DF4  5172               	movf	sin@sgn& (0+255),w,b
 31149  013DF6  A4D8               	btfss	status,2,c
 31150  013DF8  D002               	goto	i2u1880_40
 31151  013DFA  0E01               	movlw	1
 31152  013DFC  D001               	goto	i2u1881_40
 31153  013DFE                     i2u1880_40:
 31154  013DFE  0E00               	movlw	0
 31155  013E00                     i2u1881_40:
 31156  013E00  6F72               	movwf	sin@sgn& (0+255),b
 31157  013E02                     i2l2019:
 31158                           
 31159                           ; BSR set to: 0
 31160  013E02  0E00               	movlw	0
 31161  013E04  6E2A               	movwf	i2___ftge@ff1,c
 31162  013E06  0E80               	movlw	128
 31163  013E08  6E2B               	movwf	i2___ftge@ff1+1,c
 31164  013E0A  0E3F               	movlw	63
 31165  013E0C  6E2C               	movwf	i2___ftge@ff1+2,c
 31166  013E0E  C066  F02D         	movff	sin@f,i2___ftge@ff2
 31167  013E12  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 31168  013E16  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 31169  013E1A  EC5F  F0AE         	call	i2___ftge	;wreg free
 31170  013E1E  B0D8               	btfsc	status,0,c
 31171  013E20  D01C               	goto	i2l2020
 31172  013E22  C066  F024         	movff	sin@f,i2___ftneg@f1
 31173  013E26  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 31174  013E2A  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 31175  013E2E  EC7C  F0B7         	call	i2___ftneg	;wreg free
 31176  013E32  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 31177  013E36  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 31178  013E3A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 31179  013E3E  0E00               	movlw	0
 31180  013E40  6E43               	movwf	i2___ftadd@f2,c
 31181  013E42  0E00               	movlw	0
 31182  013E44  6E44               	movwf	i2___ftadd@f2+1,c
 31183  013E46  0E40               	movlw	64
 31184  013E48  6E45               	movwf	i2___ftadd@f2+2,c
 31185  013E4A  EC44  F0A2         	call	i2___ftadd	;wreg free
 31186  013E4E  C040  F066         	movff	?i2___ftadd,sin@f
 31187  013E52  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 31188  013E56  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 31189  013E5A                     i2l2020:
 31190  013E5A  C066  F027         	movff	sin@f,i2___ftmul@f1
 31191  013E5E  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 31192  013E62  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 31193  013E66  C066  F02A         	movff	sin@f,i2___ftmul@f2
 31194  013E6A  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 31195  013E6E  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 31196  013E72  EC40  F0A8         	call	i2___ftmul	;wreg free
 31197  013E76  C027  F06F         	movff	?i2___ftmul,sin@x2
 31198  013E7A  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 31199  013E7E  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 31200  013E82  C06F  F04C         	movff	sin@x2,eval_poly@x
 31201  013E86  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 31202  013E8A  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 31203  013E8E  0E55               	movlw	low sin@coeff_b
 31204  013E90  6E4F               	movwf	eval_poly@d,c
 31205  013E92  0EEC               	movlw	high sin@coeff_b
 31206  013E94  6E50               	movwf	eval_poly@d+1,c
 31207  013E96  0E00               	movlw	0
 31208  013E98  6E52               	movwf	eval_poly@n+1,c
 31209  013E9A  0E03               	movlw	3
 31210  013E9C  6E51               	movwf	eval_poly@n,c
 31211  013E9E  EC82  F0AA         	call	_eval_poly	;wreg free
 31212  013EA2  C04C  F069         	movff	?_eval_poly,sin@y
 31213  013EA6  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 31214  013EAA  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 31215  013EAE  C069  F018         	movff	sin@y,i2___ftdiv@f2
 31216  013EB2  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 31217  013EB6  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 31218  013EBA  0E00               	movlw	0
 31219  013EBC  6E52               	movwf	eval_poly@n+1,c
 31220  013EBE  0E04               	movlw	4
 31221  013EC0  6E51               	movwf	eval_poly@n,c
 31222  013EC2  0E37               	movlw	low sin@coeff_a
 31223  013EC4  6E4F               	movwf	eval_poly@d,c
 31224  013EC6  0EEC               	movlw	high sin@coeff_a
 31225  013EC8  6E50               	movwf	eval_poly@d+1,c
 31226  013ECA  C06F  F04C         	movff	sin@x2,eval_poly@x
 31227  013ECE  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 31228  013ED2  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 31229  013ED6  EC82  F0AA         	call	_eval_poly	;wreg free
 31230  013EDA  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 31231  013EDE  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 31232  013EE2  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 31233  013EE6  EC2E  F0A9         	call	i2___ftdiv	;wreg free
 31234  013EEA  C015  F06C         	movff	?i2___ftdiv,_sin$4110
 31235  013EEE  C016  F06D         	movff	?i2___ftdiv+1,_sin$4110+1
 31236  013EF2  C017  F06E         	movff	?i2___ftdiv+2,_sin$4110+2
 31237  013EF6  C066  F027         	movff	sin@f,i2___ftmul@f1
 31238  013EFA  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 31239  013EFE  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 31240  013F02  C06C  F02A         	movff	_sin$4110,i2___ftmul@f2
 31241  013F06  C06D  F02B         	movff	_sin$4110+1,i2___ftmul@f2+1
 31242  013F0A  C06E  F02C         	movff	_sin$4110+2,i2___ftmul@f2+2
 31243  013F0E  EC40  F0A8         	call	i2___ftmul	;wreg free
 31244  013F12  C027  F066         	movff	?i2___ftmul,sin@f
 31245  013F16  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 31246  013F1A  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 31247  013F1E  0100               	movlb	0	; () banked
 31248  013F20  5172               	movf	sin@sgn& (0+255),w,b
 31249  013F22  B4D8               	btfsc	status,2,c
 31250  013F24  D00F               	goto	i2l2021
 31251                           
 31252                           ; BSR set to: 0
 31253  013F26  C066  F024         	movff	sin@f,i2___ftneg@f1
 31254  013F2A  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 31255  013F2E  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 31256  013F32  EC7C  F0B7         	call	i2___ftneg	;wreg free
 31257  013F36  C024  F066         	movff	?i2___ftneg,?_sin
 31258  013F3A  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 31259  013F3E  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 31260  013F42  0012               	return	
 31261  013F44                     i2l2021:
 31262                           
 31263                           ; BSR set to: 0
 31264  013F44  C066  F066         	movff	sin@f,?_sin
 31265  013F48  C067  F067         	movff	sin@f+1,?_sin+1
 31266  013F4C  C068  F068         	movff	sin@f+2,?_sin+2
 31267  013F50  0012               	return		;funcret
 31268  013F52                     __end_of_sin:
 31269                           	opt stack 0
 31270                           tosu	equ	0xFFF
 31271                           tosh	equ	0xFFE
 31272                           tosl	equ	0xFFD
 31273                           pclatu	equ	0xFFB
 31274                           pclath	equ	0xFFA
 31275                           tblptru	equ	0xFF8
 31276                           tblptrh	equ	0xFF7
 31277                           tblptrl	equ	0xFF6
 31278                           tablat	equ	0xFF5
 31279                           prodh	equ	0xFF4
 31280                           prodl	equ	0xFF3
 31281                           intcon	equ	0xFF2
 31282                           indf0	equ	0xFEF
 31283                           postinc0	equ	0xFEE
 31284                           fsr0h	equ	0xFEA
 31285                           fsr0l	equ	0xFE9
 31286                           wreg	equ	0xFE8
 31287                           indf1	equ	0xFE7
 31288                           postdec1	equ	0xFE5
 31289                           plusw1	equ	0xFE3
 31290                           fsr1h	equ	0xFE2
 31291                           fsr1l	equ	0xFE1
 31292                           bsr	equ	0xFE0
 31293                           indf2	equ	0xFDF
 31294                           postinc2	equ	0xFDE
 31295                           postdec2	equ	0xFDD
 31296                           plusw2	equ	0xFDB
 31297                           fsr2h	equ	0xFDA
 31298                           fsr2l	equ	0xFD9
 31299                           status	equ	0xFD8
 31300                           
 31301 ;; *************** function i2___ftsub *****************
 31302 ;; Defined at:
 31303 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 31304 ;; Parameters:    Size  Location     Type
 31305 ;;  f1              3    0[BANK0 ] float 
 31306 ;;  f2              3    3[BANK0 ] float 
 31307 ;; Auto vars:     Size  Location     Type
 31308 ;;		None
 31309 ;; Return value:  Size  Location     Type
 31310 ;;                  3    0[BANK0 ] float 
 31311 ;; Registers used:
 31312 ;;		wreg, status,2, status,0, cstack
 31313 ;; Tracked objects:
 31314 ;;		On entry : 0/0
 31315 ;;		On exit  : 0/0
 31316 ;;		Unchanged: 0/0
 31317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31318 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31321 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31322 ;;Total ram usage:        6 bytes
 31323 ;; Hardware stack levels used:    1
 31324 ;; Hardware stack levels required when called:    2
 31325 ;; This function calls:
 31326 ;;		i2___ftadd
 31327 ;; This function is called by:
 31328 ;;		_sin
 31329 ;;		_sqrt
 31330 ;;		i2_printf
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text116
 31335  016B1E                     __ptext116:
 31336                           	opt stack 0
 31337  016B1E                     i2___ftsub:
 31338                           	opt stack 13
 31339                           
 31340                           ;incstack = 0
 31341  016B1E  0100               	movlb	0	; () banked
 31342  016B20  5163               	movf	i2___ftsub@f2& (0+255),w,b
 31343  016B22  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 31344  016B24  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 31345  016B26  B4D8               	btfsc	status,2,c
 31346  016B28  D006               	goto	i2l1870
 31347                           
 31348                           ; BSR set to: 0
 31349  016B2A  0E00               	movlw	0
 31350  016B2C  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 31351  016B2E  0E00               	movlw	0
 31352  016B30  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 31353  016B32  0E80               	movlw	128
 31354  016B34  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 31355  016B36                     i2l1870:
 31356                           
 31357                           ; BSR set to: 0
 31358                           
 31359                           ; BSR set to: 0
 31360  016B36  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 31361  016B3A  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 31362  016B3E  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 31363  016B42  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 31364  016B46  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 31365  016B4A  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 31366  016B4E  EC44  F0A2         	call	i2___ftadd	;wreg free
 31367  016B52  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 31368  016B56  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 31369  016B5A  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 31370  016B5E  0012               	return	
 31371  016B60                     __end_ofi2___ftsub:
 31372                           	opt stack 0
 31373                           tosu	equ	0xFFF
 31374                           tosh	equ	0xFFE
 31375                           tosl	equ	0xFFD
 31376                           pclatu	equ	0xFFB
 31377                           pclath	equ	0xFFA
 31378                           tblptru	equ	0xFF8
 31379                           tblptrh	equ	0xFF7
 31380                           tblptrl	equ	0xFF6
 31381                           tablat	equ	0xFF5
 31382                           prodh	equ	0xFF4
 31383                           prodl	equ	0xFF3
 31384                           intcon	equ	0xFF2
 31385                           indf0	equ	0xFEF
 31386                           postinc0	equ	0xFEE
 31387                           fsr0h	equ	0xFEA
 31388                           fsr0l	equ	0xFE9
 31389                           wreg	equ	0xFE8
 31390                           indf1	equ	0xFE7
 31391                           postdec1	equ	0xFE5
 31392                           plusw1	equ	0xFE3
 31393                           fsr1h	equ	0xFE2
 31394                           fsr1l	equ	0xFE1
 31395                           bsr	equ	0xFE0
 31396                           indf2	equ	0xFDF
 31397                           postinc2	equ	0xFDE
 31398                           postdec2	equ	0xFDD
 31399                           plusw2	equ	0xFDB
 31400                           fsr2h	equ	0xFDA
 31401                           fsr2l	equ	0xFD9
 31402                           status	equ	0xFD8
 31403                           
 31404 ;; *************** function i2___ftneg *****************
 31405 ;; Defined at:
 31406 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 31407 ;; Parameters:    Size  Location     Type
 31408 ;;  f1              3   35[COMRAM] float 
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;		None
 31411 ;; Return value:  Size  Location     Type
 31412 ;;                  3   35[COMRAM] float 
 31413 ;; Registers used:
 31414 ;;		wreg, status,2, status,0
 31415 ;; Tracked objects:
 31416 ;;		On entry : 0/0
 31417 ;;		On exit  : 0/0
 31418 ;;		Unchanged: 0/0
 31419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31424 ;;Total ram usage:        3 bytes
 31425 ;; Hardware stack levels used:    1
 31426 ;; This function calls:
 31427 ;;		Nothing
 31428 ;; This function is called by:
 31429 ;;		_peakToRMS
 31430 ;;		_ADCPostProcessingCallback
 31431 ;;		_acos
 31432 ;;		_asin
 31433 ;;		_atan
 31434 ;;		_fabs
 31435 ;;		_sin
 31436 ;;		i2_printf
 31437 ;; This function uses a non-reentrant model
 31438 ;;
 31439                           
 31440                           	psect	text117
 31441  016EF8                     __ptext117:
 31442                           	opt stack 0
 31443  016EF8                     i2___ftneg:
 31444                           	opt stack 15
 31445                           
 31446                           ;incstack = 0
 31447  016EF8  5024               	movf	i2___ftneg@f1,w,c
 31448  016EFA  1025               	iorwf	i2___ftneg@f1+1,w,c
 31449  016EFC  1026               	iorwf	i2___ftneg@f1+2,w,c
 31450  016EFE  B4D8               	btfsc	status,2,c
 31451  016F00  D006               	goto	i2l1864
 31452  016F02  0E00               	movlw	0
 31453  016F04  1A24               	xorwf	i2___ftneg@f1,f,c
 31454  016F06  0E00               	movlw	0
 31455  016F08  1A25               	xorwf	i2___ftneg@f1+1,f,c
 31456  016F0A  0E80               	movlw	128
 31457  016F0C  1A26               	xorwf	i2___ftneg@f1+2,f,c
 31458  016F0E                     i2l1864:
 31459  016F0E  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 31460  016F12  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 31461  016F16  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 31462  016F1A  0012               	return		;funcret
 31463  016F1C                     __end_ofi2___ftneg:
 31464                           	opt stack 0
 31465                           tosu	equ	0xFFF
 31466                           tosh	equ	0xFFE
 31467                           tosl	equ	0xFFD
 31468                           pclatu	equ	0xFFB
 31469                           pclath	equ	0xFFA
 31470                           tblptru	equ	0xFF8
 31471                           tblptrh	equ	0xFF7
 31472                           tblptrl	equ	0xFF6
 31473                           tablat	equ	0xFF5
 31474                           prodh	equ	0xFF4
 31475                           prodl	equ	0xFF3
 31476                           intcon	equ	0xFF2
 31477                           indf0	equ	0xFEF
 31478                           postinc0	equ	0xFEE
 31479                           fsr0h	equ	0xFEA
 31480                           fsr0l	equ	0xFE9
 31481                           wreg	equ	0xFE8
 31482                           indf1	equ	0xFE7
 31483                           postdec1	equ	0xFE5
 31484                           plusw1	equ	0xFE3
 31485                           fsr1h	equ	0xFE2
 31486                           fsr1l	equ	0xFE1
 31487                           bsr	equ	0xFE0
 31488                           indf2	equ	0xFDF
 31489                           postinc2	equ	0xFDE
 31490                           postdec2	equ	0xFDD
 31491                           plusw2	equ	0xFDB
 31492                           fsr2h	equ	0xFDA
 31493                           fsr2l	equ	0xFD9
 31494                           status	equ	0xFD8
 31495                           
 31496 ;; *************** function i2___ftdiv *****************
 31497 ;; Defined at:
 31498 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 31499 ;; Parameters:    Size  Location     Type
 31500 ;;  f1              3   20[COMRAM] float 
 31501 ;;  f2              3   23[COMRAM] float 
 31502 ;; Auto vars:     Size  Location     Type
 31503 ;;  __ftdiv         3   31[COMRAM] float 
 31504 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 31505 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 31506 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 31507 ;; Return value:  Size  Location     Type
 31508 ;;                  3   20[COMRAM] float 
 31509 ;; Registers used:
 31510 ;;		wreg, status,2, status,0, cstack
 31511 ;; Tracked objects:
 31512 ;;		On entry : 0/0
 31513 ;;		On exit  : 0/0
 31514 ;;		Unchanged: 0/0
 31515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31517 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31518 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31519 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31520 ;;Total ram usage:       15 bytes
 31521 ;; Hardware stack levels used:    1
 31522 ;; Hardware stack levels required when called:    1
 31523 ;; This function calls:
 31524 ;;		i2___ftpack
 31525 ;; This function is called by:
 31526 ;;		_peakToRMS
 31527 ;;		_currentMeasuredToPeak
 31528 ;;		_ADCPostProcessingCallback
 31529 ;;		_asin
 31530 ;;		_atan
 31531 ;;		_sin
 31532 ;; This function uses a non-reentrant model
 31533 ;;
 31534                           
 31535                           	psect	text118
 31536  01525C                     __ptext118:
 31537                           	opt stack 0
 31538  01525C                     i2___ftdiv:
 31539                           	opt stack 14
 31540                           
 31541                           ;incstack = 0
 31542  01525C  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 31543  015260  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 31544  015262  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 31545  015264  3416               	rlcf	i2___ftdiv@f1+1,w,c
 31546  015266  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 31547  015268  E301               	bnc	u1842_41
 31548  01526A  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 31549  01526C                     u1842_41:
 31550  01526C  501B               	movf	??i2___ftdiv,w,c
 31551  01526E  6E1F               	movwf	i2___ftdiv@exp,c
 31552  015270  501F               	movf	i2___ftdiv@exp,w,c
 31553  015272  A4D8               	btfss	status,2,c
 31554  015274  D007               	goto	i2l1821
 31555  015276  0E00               	movlw	0
 31556  015278  6E15               	movwf	?i2___ftdiv,c
 31557  01527A  0E00               	movlw	0
 31558  01527C  6E16               	movwf	?i2___ftdiv+1,c
 31559  01527E  0E00               	movlw	0
 31560  015280  6E17               	movwf	?i2___ftdiv+2,c
 31561  015282  0012               	return	
 31562  015284                     i2l1821:
 31563  015284  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 31564  015288  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 31565  01528A  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 31566  01528C  3419               	rlcf	i2___ftdiv@f2+1,w,c
 31567  01528E  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 31568  015290  E301               	bnc	u1844_41
 31569  015292  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 31570  015294                     u1844_41:
 31571  015294  501B               	movf	??i2___ftdiv,w,c
 31572  015296  6E23               	movwf	i2___ftdiv@sign,c
 31573  015298  5023               	movf	i2___ftdiv@sign,w,c
 31574  01529A  A4D8               	btfss	status,2,c
 31575  01529C  D007               	goto	i2l1823
 31576  01529E  0E00               	movlw	0
 31577  0152A0  6E15               	movwf	?i2___ftdiv,c
 31578  0152A2  0E00               	movlw	0
 31579  0152A4  6E16               	movwf	?i2___ftdiv+1,c
 31580  0152A6  0E00               	movlw	0
 31581  0152A8  6E17               	movwf	?i2___ftdiv+2,c
 31582  0152AA  0012               	return	
 31583  0152AC                     i2l1823:
 31584  0152AC  0E00               	movlw	0
 31585  0152AE  6E20               	movwf	i2___ftdiv@f3,c
 31586  0152B0  0E00               	movlw	0
 31587  0152B2  6E21               	movwf	i2___ftdiv@f3+1,c
 31588  0152B4  0E00               	movlw	0
 31589  0152B6  6E22               	movwf	i2___ftdiv@f3+2,c
 31590  0152B8  5023               	movf	i2___ftdiv@sign,w,c
 31591  0152BA  0F89               	addlw	137
 31592  0152BC  5E1F               	subwf	i2___ftdiv@exp,f,c
 31593  0152BE  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 31594  0152C2  501A               	movf	i2___ftdiv@f2+2,w,c
 31595  0152C4  1A23               	xorwf	i2___ftdiv@sign,f,c
 31596  0152C6  0E80               	movlw	128
 31597  0152C8  1623               	andwf	i2___ftdiv@sign,f,c
 31598  0152CA  8E16               	bsf	i2___ftdiv@f1+1,7,c
 31599  0152CC  0EFF               	movlw	255
 31600  0152CE  1615               	andwf	i2___ftdiv@f1,f,c
 31601  0152D0  0EFF               	movlw	255
 31602  0152D2  1616               	andwf	i2___ftdiv@f1+1,f,c
 31603  0152D4  0E00               	movlw	0
 31604  0152D6  1617               	andwf	i2___ftdiv@f1+2,f,c
 31605  0152D8  8E19               	bsf	i2___ftdiv@f2+1,7,c
 31606  0152DA  0EFF               	movlw	255
 31607  0152DC  1618               	andwf	i2___ftdiv@f2,f,c
 31608  0152DE  0EFF               	movlw	255
 31609  0152E0  1619               	andwf	i2___ftdiv@f2+1,f,c
 31610  0152E2  0E00               	movlw	0
 31611  0152E4  161A               	andwf	i2___ftdiv@f2+2,f,c
 31612  0152E6  0E18               	movlw	24
 31613  0152E8  6E1E               	movwf	i2___ftdiv@cntr,c
 31614  0152EA  90D8               	bcf	status,0,c
 31615  0152EC  3620               	rlcf	i2___ftdiv@f3,f,c
 31616  0152EE  3621               	rlcf	i2___ftdiv@f3+1,f,c
 31617  0152F0  3622               	rlcf	i2___ftdiv@f3+2,f,c
 31618  0152F2  5018               	movf	i2___ftdiv@f2,w,c
 31619  0152F4  5C15               	subwf	i2___ftdiv@f1,w,c
 31620  0152F6  5019               	movf	i2___ftdiv@f2+1,w,c
 31621  0152F8  5816               	subwfb	i2___ftdiv@f1+1,w,c
 31622  0152FA  501A               	movf	i2___ftdiv@f2+2,w,c
 31623  0152FC  5817               	subwfb	i2___ftdiv@f1+2,w,c
 31624  0152FE  A0D8               	btfss	status,0,c
 31625  015300  D007               	goto	i2l1825
 31626  015302  5018               	movf	i2___ftdiv@f2,w,c
 31627  015304  5E15               	subwf	i2___ftdiv@f1,f,c
 31628  015306  5019               	movf	i2___ftdiv@f2+1,w,c
 31629  015308  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 31630  01530A  501A               	movf	i2___ftdiv@f2+2,w,c
 31631  01530C  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 31632  01530E  8020               	bsf	i2___ftdiv@f3,0,c
 31633  015310                     i2l1825:
 31634  015310  90D8               	bcf	status,0,c
 31635  015312  3615               	rlcf	i2___ftdiv@f1,f,c
 31636  015314  3616               	rlcf	i2___ftdiv@f1+1,f,c
 31637  015316  3617               	rlcf	i2___ftdiv@f1+2,f,c
 31638  015318  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 31639  01531A  D7E7               	goto	i2l1824
 31640  01531C  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 31641  015320  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 31642  015324  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 31643  015328  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 31644  01532C  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 31645  015330  ECD1  F0AC         	call	i2___ftpack	;wreg free
 31646  015334  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 31647  015338  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 31648  01533C  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 31649  015340  0012               	return	
 31650  015342                     __end_ofi2___ftdiv:
 31651                           	opt stack 0
 31652                           tosu	equ	0xFFF
 31653                           tosh	equ	0xFFE
 31654                           tosl	equ	0xFFD
 31655                           pclatu	equ	0xFFB
 31656                           pclath	equ	0xFFA
 31657                           tblptru	equ	0xFF8
 31658                           tblptrh	equ	0xFF7
 31659                           tblptrl	equ	0xFF6
 31660                           tablat	equ	0xFF5
 31661                           prodh	equ	0xFF4
 31662                           prodl	equ	0xFF3
 31663                           intcon	equ	0xFF2
 31664                           indf0	equ	0xFEF
 31665                           postinc0	equ	0xFEE
 31666                           fsr0h	equ	0xFEA
 31667                           fsr0l	equ	0xFE9
 31668                           wreg	equ	0xFE8
 31669                           indf1	equ	0xFE7
 31670                           postdec1	equ	0xFE5
 31671                           plusw1	equ	0xFE3
 31672                           fsr1h	equ	0xFE2
 31673                           fsr1l	equ	0xFE1
 31674                           bsr	equ	0xFE0
 31675                           indf2	equ	0xFDF
 31676                           postinc2	equ	0xFDE
 31677                           postdec2	equ	0xFDD
 31678                           plusw2	equ	0xFDB
 31679                           fsr2h	equ	0xFDA
 31680                           fsr2l	equ	0xFD9
 31681                           status	equ	0xFD8
 31682                           
 31683 ;; *************** function _floor *****************
 31684 ;; Defined at:
 31685 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 31686 ;; Parameters:    Size  Location     Type
 31687 ;;  x               3   85[COMRAM] float 
 31688 ;; Auto vars:     Size  Location     Type
 31689 ;;  i               3   88[COMRAM] float 
 31690 ;;  expon           2   91[COMRAM] int 
 31691 ;; Return value:  Size  Location     Type
 31692 ;;                  3   85[COMRAM] int 
 31693 ;; Registers used:
 31694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31695 ;; Tracked objects:
 31696 ;;		On entry : 0/0
 31697 ;;		On exit  : 0/0
 31698 ;;		Unchanged: 0/0
 31699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31700 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31701 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31703 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31704 ;;Total ram usage:        8 bytes
 31705 ;; Hardware stack levels used:    1
 31706 ;; Hardware stack levels required when called:    2
 31707 ;; This function calls:
 31708 ;;		___altoft
 31709 ;;		_frexp
 31710 ;;		i2___ftadd
 31711 ;;		i2___ftge
 31712 ;;		i2___fttol
 31713 ;; This function is called by:
 31714 ;;		_sin
 31715 ;; This function uses a non-reentrant model
 31716 ;;
 31717                           
 31718                           	psect	text119
 31719  015426                     __ptext119:
 31720                           	opt stack 0
 31721  015426                     _floor:
 31722                           	opt stack 11
 31723                           
 31724                           ;incstack = 0
 31725  015426  C056  F001         	movff	floor@x,frexp@value
 31726  01542A  C057  F002         	movff	floor@x+1,frexp@value+1
 31727  01542E  C058  F003         	movff	floor@x+2,frexp@value+2
 31728  015432  0E5C               	movlw	low floor@expon
 31729  015434  6E04               	movwf	frexp@eptr,c
 31730  015436  0E00               	movlw	high floor@expon
 31731  015438  6E05               	movwf	frexp@eptr+1,c
 31732  01543A  ECC1  F0B0         	call	_frexp	;wreg free
 31733  01543E  AE5D               	btfss	floor@expon+1,7,c
 31734  015440  D010               	goto	i2l2229
 31735  015442  AE58               	btfss	floor@x+2,7,c
 31736  015444  D007               	goto	i2l2230
 31737  015446  0E00               	movlw	0
 31738  015448  6E56               	movwf	?_floor,c
 31739  01544A  0E80               	movlw	128
 31740  01544C  6E57               	movwf	?_floor+1,c
 31741  01544E  0EBF               	movlw	191
 31742  015450  6E58               	movwf	?_floor+2,c
 31743  015452  0012               	return	
 31744  015454                     i2l2230:
 31745  015454  0E00               	movlw	0
 31746  015456  6E56               	movwf	?_floor,c
 31747  015458  0E00               	movlw	0
 31748  01545A  6E57               	movwf	?_floor+1,c
 31749  01545C  0E00               	movlw	0
 31750  01545E  6E58               	movwf	?_floor+2,c
 31751  015460  0012               	return	
 31752  015462                     i2l2229:
 31753  015462  505D               	movf	floor@expon+1,w,c
 31754  015464  E104               	bnz	i2u1876_40
 31755  015466  0E15               	movlw	21
 31756  015468  5C5C               	subwf	floor@expon,w,c
 31757  01546A  A0D8               	btfss	status,0,c
 31758  01546C  D007               	goto	i2l2232
 31759  01546E                     i2u1876_40:
 31760  01546E  C056  F056         	movff	floor@x,?_floor
 31761  015472  C057  F057         	movff	floor@x+1,?_floor+1
 31762  015476  C058  F058         	movff	floor@x+2,?_floor+2
 31763  01547A  0012               	return	
 31764  01547C                     i2l2232:
 31765  01547C  C056  F03D         	movff	floor@x,i2___fttol@f1
 31766  015480  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 31767  015484  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 31768  015488  ECC6  F0A7         	call	i2___fttol	;wreg free
 31769  01548C  C03D  F04C         	movff	?i2___fttol,___altoft@c
 31770  015490  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 31771  015494  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 31772  015498  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 31773  01549C  ECFD  F0B0         	call	___altoft	;wreg free
 31774  0154A0  C04C  F059         	movff	?___altoft,floor@i
 31775  0154A4  C04D  F05A         	movff	?___altoft+1,floor@i+1
 31776  0154A8  C04E  F05B         	movff	?___altoft+2,floor@i+2
 31777  0154AC  C056  F02A         	movff	floor@x,i2___ftge@ff1
 31778  0154B0  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 31779  0154B4  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 31780  0154B8  C059  F02D         	movff	floor@i,i2___ftge@ff2
 31781  0154BC  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 31782  0154C0  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 31783  0154C4  EC5F  F0AE         	call	i2___ftge	;wreg free
 31784  0154C8  B0D8               	btfsc	status,0,c
 31785  0154CA  D015               	goto	i2l2233
 31786  0154CC  C059  F040         	movff	floor@i,i2___ftadd@f1
 31787  0154D0  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 31788  0154D4  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 31789  0154D8  0E00               	movlw	0
 31790  0154DA  6E43               	movwf	i2___ftadd@f2,c
 31791  0154DC  0E80               	movlw	128
 31792  0154DE  6E44               	movwf	i2___ftadd@f2+1,c
 31793  0154E0  0EBF               	movlw	191
 31794  0154E2  6E45               	movwf	i2___ftadd@f2+2,c
 31795  0154E4  EC44  F0A2         	call	i2___ftadd	;wreg free
 31796  0154E8  C040  F056         	movff	?i2___ftadd,?_floor
 31797  0154EC  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 31798  0154F0  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 31799  0154F4  0012               	return	
 31800  0154F6                     i2l2233:
 31801  0154F6  C059  F056         	movff	floor@i,?_floor
 31802  0154FA  C05A  F057         	movff	floor@i+1,?_floor+1
 31803  0154FE  C05B  F058         	movff	floor@i+2,?_floor+2
 31804  015502  0012               	return		;funcret
 31805  015504                     __end_of_floor:
 31806                           	opt stack 0
 31807                           tosu	equ	0xFFF
 31808                           tosh	equ	0xFFE
 31809                           tosl	equ	0xFFD
 31810                           pclatu	equ	0xFFB
 31811                           pclath	equ	0xFFA
 31812                           tblptru	equ	0xFF8
 31813                           tblptrh	equ	0xFF7
 31814                           tblptrl	equ	0xFF6
 31815                           tablat	equ	0xFF5
 31816                           prodh	equ	0xFF4
 31817                           prodl	equ	0xFF3
 31818                           intcon	equ	0xFF2
 31819                           indf0	equ	0xFEF
 31820                           postinc0	equ	0xFEE
 31821                           fsr0h	equ	0xFEA
 31822                           fsr0l	equ	0xFE9
 31823                           wreg	equ	0xFE8
 31824                           indf1	equ	0xFE7
 31825                           postdec1	equ	0xFE5
 31826                           plusw1	equ	0xFE3
 31827                           fsr1h	equ	0xFE2
 31828                           fsr1l	equ	0xFE1
 31829                           bsr	equ	0xFE0
 31830                           indf2	equ	0xFDF
 31831                           postinc2	equ	0xFDE
 31832                           postdec2	equ	0xFDD
 31833                           plusw2	equ	0xFDB
 31834                           fsr2h	equ	0xFDA
 31835                           fsr2l	equ	0xFD9
 31836                           status	equ	0xFD8
 31837                           
 31838 ;; *************** function i2___fttol *****************
 31839 ;; Defined at:
 31840 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 31841 ;; Parameters:    Size  Location     Type
 31842 ;;  f1              3   60[COMRAM] float 
 31843 ;; Auto vars:     Size  Location     Type
 31844 ;;  __fttol         4   70[COMRAM] unsigned long 
 31845 ;;  __fttol         1   74[COMRAM] unsigned char 
 31846 ;;  __fttol         1   69[COMRAM] unsigned char 
 31847 ;; Return value:  Size  Location     Type
 31848 ;;                  4   60[COMRAM] long 
 31849 ;; Registers used:
 31850 ;;		wreg, status,2, status,0
 31851 ;; Tracked objects:
 31852 ;;		On entry : 0/0
 31853 ;;		On exit  : 0/0
 31854 ;;		Unchanged: 0/0
 31855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31857 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31858 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31859 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31860 ;;Total ram usage:       15 bytes
 31861 ;; Hardware stack levels used:    1
 31862 ;; This function calls:
 31863 ;;		Nothing
 31864 ;; This function is called by:
 31865 ;;		_floor
 31866 ;;		i2_printf
 31867 ;; This function uses a non-reentrant model
 31868 ;;
 31869                           
 31870                           	psect	text120
 31871  014F8C                     __ptext120:
 31872                           	opt stack 0
 31873  014F8C                     i2___fttol:
 31874                           	opt stack 15
 31875                           
 31876                           ;incstack = 0
 31877  014F8C  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 31878  014F90  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 31879  014F92  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 31880  014F94  343E               	rlcf	i2___fttol@f1+1,w,c
 31881  014F96  3641               	rlcf	??i2___fttol& (0+255),f,c
 31882  014F98  E301               	bnc	u1863_41
 31883  014F9A  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 31884  014F9C                     u1863_41:
 31885  014F9C  5041               	movf	??i2___fttol,w,c
 31886  014F9E  6E4B               	movwf	i2___fttol@exp1,c
 31887  014FA0  504B               	movf	i2___fttol@exp1,w,c
 31888  014FA2  A4D8               	btfss	status,2,c
 31889  014FA4  D009               	goto	i2l1874
 31890  014FA6  0E00               	movlw	0
 31891  014FA8  6E3D               	movwf	?i2___fttol,c
 31892  014FAA  0E00               	movlw	0
 31893  014FAC  6E3E               	movwf	?i2___fttol+1,c
 31894  014FAE  0E00               	movlw	0
 31895  014FB0  6E3F               	movwf	?i2___fttol+2,c
 31896  014FB2  0E00               	movlw	0
 31897  014FB4  6E40               	movwf	?i2___fttol+3,c
 31898  014FB6  0012               	return	
 31899  014FB8                     i2l1874:
 31900  014FB8  0E17               	movlw	23
 31901  014FBA  6E41               	movwf	??i2___fttol& (0+255),c
 31902  014FBC  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 31903  014FC0  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 31904  014FC4  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 31905  014FC8  2841               	incf	??i2___fttol,w,c
 31906  014FCA  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 31907  014FCC  D004               	goto	i2u1865_40
 31908  014FCE                     i2u1865_45:
 31909  014FCE  90D8               	bcf	status,0,c
 31910  014FD0  3244               	rrcf	??i2___fttol+3,f,c
 31911  014FD2  3243               	rrcf	??i2___fttol+2,f,c
 31912  014FD4  3242               	rrcf	??i2___fttol+1,f,c
 31913  014FD6                     i2u1865_40:
 31914  014FD6  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 31915  014FD8  D7FA               	goto	i2u1865_45
 31916  014FDA  5042               	movf	??i2___fttol+1,w,c
 31917  014FDC  6E46               	movwf	i2___fttol@sign1,c
 31918  014FDE  8E3E               	bsf	i2___fttol@f1+1,7,c
 31919  014FE0  0EFF               	movlw	255
 31920  014FE2  163D               	andwf	i2___fttol@f1,f,c
 31921  014FE4  0EFF               	movlw	255
 31922  014FE6  163E               	andwf	i2___fttol@f1+1,f,c
 31923  014FE8  0E00               	movlw	0
 31924  014FEA  163F               	andwf	i2___fttol@f1+2,f,c
 31925  014FEC  503D               	movf	i2___fttol@f1,w,c
 31926  014FEE  6E47               	movwf	i2___fttol@lval,c
 31927  014FF0  503E               	movf	i2___fttol@f1+1,w,c
 31928  014FF2  6E48               	movwf	i2___fttol@lval+1,c
 31929  014FF4  503F               	movf	i2___fttol@f1+2,w,c
 31930  014FF6  6E49               	movwf	i2___fttol@lval+2,c
 31931  014FF8  6A4A               	clrf	i2___fttol@lval+3,c
 31932  014FFA  0E8E               	movlw	142
 31933  014FFC  5E4B               	subwf	i2___fttol@exp1,f,c
 31934  014FFE  AE4B               	btfss	i2___fttol@exp1,7,c
 31935  015000  D016               	goto	i2l1876
 31936  015002  504B               	movf	i2___fttol@exp1,w,c
 31937  015004  0A80               	xorlw	128
 31938  015006  0F8F               	addlw	143
 31939  015008  B0D8               	btfsc	status,0,c
 31940  01500A  D009               	goto	i2l1877
 31941  01500C  0E00               	movlw	0
 31942  01500E  6E3D               	movwf	?i2___fttol,c
 31943  015010  0E00               	movlw	0
 31944  015012  6E3E               	movwf	?i2___fttol+1,c
 31945  015014  0E00               	movlw	0
 31946  015016  6E3F               	movwf	?i2___fttol+2,c
 31947  015018  0E00               	movlw	0
 31948  01501A  6E40               	movwf	?i2___fttol+3,c
 31949  01501C  0012               	return	
 31950  01501E                     i2l1877:
 31951  01501E  90D8               	bcf	status,0,c
 31952  015020  324A               	rrcf	i2___fttol@lval+3,f,c
 31953  015022  3249               	rrcf	i2___fttol@lval+2,f,c
 31954  015024  3248               	rrcf	i2___fttol@lval+1,f,c
 31955  015026  3247               	rrcf	i2___fttol@lval,f,c
 31956  015028  3E4B               	incfsz	i2___fttol@exp1,f,c
 31957  01502A  D7F9               	goto	i2l1877
 31958  01502C  D015               	goto	i2u1869_40
 31959  01502E                     i2l1876:
 31960  01502E  0E17               	movlw	23
 31961  015030  644B               	cpfsgt	i2___fttol@exp1,c
 31962  015032  D00F               	goto	i2l1882
 31963  015034  0E00               	movlw	0
 31964  015036  6E3D               	movwf	?i2___fttol,c
 31965  015038  0E00               	movlw	0
 31966  01503A  6E3E               	movwf	?i2___fttol+1,c
 31967  01503C  0E00               	movlw	0
 31968  01503E  6E3F               	movwf	?i2___fttol+2,c
 31969  015040  0E00               	movlw	0
 31970  015042  6E40               	movwf	?i2___fttol+3,c
 31971  015044  0012               	return	
 31972  015046  90D8               	bcf	status,0,c
 31973  015048  3647               	rlcf	i2___fttol@lval,f,c
 31974  01504A  3648               	rlcf	i2___fttol@lval+1,f,c
 31975  01504C  3649               	rlcf	i2___fttol@lval+2,f,c
 31976  01504E  364A               	rlcf	i2___fttol@lval+3,f,c
 31977  015050  064B               	decf	i2___fttol@exp1,f,c
 31978  015052                     i2l1882:
 31979  015052  504B               	movf	i2___fttol@exp1,w,c
 31980  015054  A4D8               	btfss	status,2,c
 31981  015056  D7F7               	goto	i2l1883
 31982  015058                     i2u1869_40:
 31983  015058  5046               	movf	i2___fttol@sign1,w,c
 31984  01505A  B4D8               	btfsc	status,2,c
 31985  01505C  D008               	goto	i2l1885
 31986  01505E  1E4A               	comf	i2___fttol@lval+3,f,c
 31987  015060  1E49               	comf	i2___fttol@lval+2,f,c
 31988  015062  1E48               	comf	i2___fttol@lval+1,f,c
 31989  015064  6C47               	negf	i2___fttol@lval,c
 31990  015066  0E00               	movlw	0
 31991  015068  2248               	addwfc	i2___fttol@lval+1,f,c
 31992  01506A  2249               	addwfc	i2___fttol@lval+2,f,c
 31993  01506C  224A               	addwfc	i2___fttol@lval+3,f,c
 31994  01506E                     i2l1885:
 31995  01506E  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 31996  015072  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 31997  015076  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 31998  01507A  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 31999  01507E  0012               	return	
 32000  015080                     __end_ofi2___fttol:
 32001                           	opt stack 0
 32002                           tosu	equ	0xFFF
 32003                           tosh	equ	0xFFE
 32004                           tosl	equ	0xFFD
 32005                           pclatu	equ	0xFFB
 32006                           pclath	equ	0xFFA
 32007                           tblptru	equ	0xFF8
 32008                           tblptrh	equ	0xFF7
 32009                           tblptrl	equ	0xFF6
 32010                           tablat	equ	0xFF5
 32011                           prodh	equ	0xFF4
 32012                           prodl	equ	0xFF3
 32013                           intcon	equ	0xFF2
 32014                           indf0	equ	0xFEF
 32015                           postinc0	equ	0xFEE
 32016                           fsr0h	equ	0xFEA
 32017                           fsr0l	equ	0xFE9
 32018                           wreg	equ	0xFE8
 32019                           indf1	equ	0xFE7
 32020                           postdec1	equ	0xFE5
 32021                           plusw1	equ	0xFE3
 32022                           fsr1h	equ	0xFE2
 32023                           fsr1l	equ	0xFE1
 32024                           bsr	equ	0xFE0
 32025                           indf2	equ	0xFDF
 32026                           postinc2	equ	0xFDE
 32027                           postdec2	equ	0xFDD
 32028                           plusw2	equ	0xFDB
 32029                           fsr2h	equ	0xFDA
 32030                           fsr2l	equ	0xFD9
 32031                           status	equ	0xFD8
 32032                           
 32033 ;; *************** function i2___ftge *****************
 32034 ;; Defined at:
 32035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 32036 ;; Parameters:    Size  Location     Type
 32037 ;;  ff1             3   41[COMRAM] float 
 32038 ;;  ff2             3   44[COMRAM] float 
 32039 ;; Auto vars:     Size  Location     Type
 32040 ;;		None
 32041 ;; Return value:  Size  Location     Type
 32042 ;;		None               void
 32043 ;; Registers used:
 32044 ;;		wreg, status,2, status,0
 32045 ;; Tracked objects:
 32046 ;;		On entry : 0/0
 32047 ;;		On exit  : 0/0
 32048 ;;		Unchanged: 0/0
 32049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32050 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32052 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32053 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32054 ;;Total ram usage:        9 bytes
 32055 ;; Hardware stack levels used:    1
 32056 ;; This function calls:
 32057 ;;		Nothing
 32058 ;; This function is called by:
 32059 ;;		_ADCPostProcessingCallback
 32060 ;;		_asin
 32061 ;;		_atan
 32062 ;;		_sin
 32063 ;;		_sqrt
 32064 ;;		_floor
 32065 ;;		i2_printf
 32066 ;; This function uses a non-reentrant model
 32067 ;;
 32068                           
 32069                           	psect	text121
 32070  015CBE                     __ptext121:
 32071                           	opt stack 0
 32072  015CBE                     i2___ftge:
 32073                           	opt stack 15
 32074                           
 32075                           ;incstack = 0
 32076  015CBE  AE2C               	btfss	i2___ftge@ff1+2,7,c
 32077  015CC0  D016               	goto	i2l1846
 32078  015CC2  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 32079  015CC6  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 32080  015CCA  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 32081  015CCE  1E30               	comf	??i2___ftge,f,c
 32082  015CD0  1E31               	comf	??i2___ftge+1,f,c
 32083  015CD2  1E32               	comf	??i2___ftge+2,f,c
 32084  015CD4  2A30               	incf	??i2___ftge,f,c
 32085  015CD6  0E00               	movlw	0
 32086  015CD8  2231               	addwfc	??i2___ftge+1,f,c
 32087  015CDA  2232               	addwfc	??i2___ftge+2,f,c
 32088  015CDC  0E00               	movlw	0
 32089  015CDE  2430               	addwf	??i2___ftge,w,c
 32090  015CE0  6E2A               	movwf	i2___ftge@ff1,c
 32091  015CE2  0E00               	movlw	0
 32092  015CE4  2031               	addwfc	??i2___ftge+1,w,c
 32093  015CE6  6E2B               	movwf	i2___ftge@ff1+1,c
 32094  015CE8  0E80               	movlw	128
 32095  015CEA  2032               	addwfc	??i2___ftge+2,w,c
 32096  015CEC  6E2C               	movwf	i2___ftge@ff1+2,c
 32097  015CEE                     i2l1846:
 32098  015CEE  AE2F               	btfss	i2___ftge@ff2+2,7,c
 32099  015CF0  D016               	goto	i2l1847
 32100  015CF2  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 32101  015CF6  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 32102  015CFA  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 32103  015CFE  1E30               	comf	??i2___ftge,f,c
 32104  015D00  1E31               	comf	??i2___ftge+1,f,c
 32105  015D02  1E32               	comf	??i2___ftge+2,f,c
 32106  015D04  2A30               	incf	??i2___ftge,f,c
 32107  015D06  0E00               	movlw	0
 32108  015D08  2231               	addwfc	??i2___ftge+1,f,c
 32109  015D0A  2232               	addwfc	??i2___ftge+2,f,c
 32110  015D0C  0E00               	movlw	0
 32111  015D0E  2430               	addwf	??i2___ftge,w,c
 32112  015D10  6E2D               	movwf	i2___ftge@ff2,c
 32113  015D12  0E00               	movlw	0
 32114  015D14  2031               	addwfc	??i2___ftge+1,w,c
 32115  015D16  6E2E               	movwf	i2___ftge@ff2+1,c
 32116  015D18  0E80               	movlw	128
 32117  015D1A  2032               	addwfc	??i2___ftge+2,w,c
 32118  015D1C  6E2F               	movwf	i2___ftge@ff2+2,c
 32119  015D1E                     i2l1847:
 32120  015D1E  0E00               	movlw	0
 32121  015D20  1A2A               	xorwf	i2___ftge@ff1,f,c
 32122  015D22  0E00               	movlw	0
 32123  015D24  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 32124  015D26  0E80               	movlw	128
 32125  015D28  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 32126  015D2A  0E00               	movlw	0
 32127  015D2C  1A2D               	xorwf	i2___ftge@ff2,f,c
 32128  015D2E  0E00               	movlw	0
 32129  015D30  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 32130  015D32  0E80               	movlw	128
 32131  015D34  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 32132  015D36  502D               	movf	i2___ftge@ff2,w,c
 32133  015D38  5C2A               	subwf	i2___ftge@ff1,w,c
 32134  015D3A  502E               	movf	i2___ftge@ff2+1,w,c
 32135  015D3C  582B               	subwfb	i2___ftge@ff1+1,w,c
 32136  015D3E  502F               	movf	i2___ftge@ff2+2,w,c
 32137  015D40  582C               	subwfb	i2___ftge@ff1+2,w,c
 32138  015D42  B0D8               	btfsc	status,0,c
 32139  015D44  D002               	goto	i2l14144
 32140  015D46  90D8               	bcf	status,0,c
 32141  015D48  0012               	return	
 32142  015D4A                     i2l14144:
 32143  015D4A  80D8               	bsf	status,0,c
 32144  015D4C  0012               	return	
 32145  015D4E                     __end_ofi2___ftge:
 32146                           	opt stack 0
 32147                           tosu	equ	0xFFF
 32148                           tosh	equ	0xFFE
 32149                           tosl	equ	0xFFD
 32150                           pclatu	equ	0xFFB
 32151                           pclath	equ	0xFFA
 32152                           tblptru	equ	0xFF8
 32153                           tblptrh	equ	0xFF7
 32154                           tblptrl	equ	0xFF6
 32155                           tablat	equ	0xFF5
 32156                           prodh	equ	0xFF4
 32157                           prodl	equ	0xFF3
 32158                           intcon	equ	0xFF2
 32159                           indf0	equ	0xFEF
 32160                           postinc0	equ	0xFEE
 32161                           fsr0h	equ	0xFEA
 32162                           fsr0l	equ	0xFE9
 32163                           wreg	equ	0xFE8
 32164                           indf1	equ	0xFE7
 32165                           postdec1	equ	0xFE5
 32166                           plusw1	equ	0xFE3
 32167                           fsr1h	equ	0xFE2
 32168                           fsr1l	equ	0xFE1
 32169                           bsr	equ	0xFE0
 32170                           indf2	equ	0xFDF
 32171                           postinc2	equ	0xFDE
 32172                           postdec2	equ	0xFDD
 32173                           plusw2	equ	0xFDB
 32174                           fsr2h	equ	0xFDA
 32175                           fsr2l	equ	0xFD9
 32176                           status	equ	0xFD8
 32177                           
 32178 ;; *************** function _frexp *****************
 32179 ;; Defined at:
 32180 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 32181 ;; Parameters:    Size  Location     Type
 32182 ;;  value           3    0[COMRAM] float 
 32183 ;;  eptr            2    3[COMRAM] PTR int 
 32184 ;;		 -> floor@expon(2), 
 32185 ;; Auto vars:     Size  Location     Type
 32186 ;;		None
 32187 ;; Return value:  Size  Location     Type
 32188 ;;                  3    0[COMRAM] PTR int 
 32189 ;; Registers used:
 32190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32191 ;; Tracked objects:
 32192 ;;		On entry : 0/0
 32193 ;;		On exit  : 0/0
 32194 ;;		Unchanged: 0/0
 32195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32196 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32200 ;;Total ram usage:        7 bytes
 32201 ;; Hardware stack levels used:    1
 32202 ;; This function calls:
 32203 ;;		Nothing
 32204 ;; This function is called by:
 32205 ;;		_floor
 32206 ;; This function uses a non-reentrant model
 32207 ;;
 32208                           
 32209                           	psect	text122
 32210  016182                     __ptext122:
 32211                           	opt stack 0
 32212  016182                     _frexp:
 32213                           	opt stack 12
 32214                           
 32215                           ;incstack = 0
 32216  016182  5001               	movf	frexp@value,w,c
 32217  016184  1002               	iorwf	frexp@value+1,w,c
 32218  016186  1003               	iorwf	frexp@value+2,w,c
 32219  016188  A4D8               	btfss	status,2,c
 32220  01618A  D009               	goto	i2l2238
 32221  01618C  C004  FFD9         	movff	frexp@eptr,fsr2l
 32222  016190  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 32223  016194  0E00               	movlw	0
 32224  016196  6EDE               	movwf	postinc2,c
 32225  016198  0E00               	movlw	0
 32226  01619A  6EDD               	movwf	postdec2,c
 32227                           
 32228                           ;	Return value of _frexp is never used
 32229  01619C  0012               	return	
 32230  01619E                     i2l2238:
 32231  01619E  5003               	movf	frexp@value+2,w,c
 32232  0161A0  0B7F               	andlw	127
 32233  0161A2  6E06               	movwf	??_frexp& (0+255),c
 32234  0161A4  6A07               	clrf	(??_frexp+1)& (0+255),c
 32235  0161A6  90D8               	bcf	status,0,c
 32236  0161A8  3606               	rlcf	??_frexp,f,c
 32237  0161AA  3607               	rlcf	??_frexp+1,f,c
 32238  0161AC  C004  FFD9         	movff	frexp@eptr,fsr2l
 32239  0161B0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 32240  0161B4  C006  FFDE         	movff	??_frexp,postinc2
 32241  0161B8  C007  FFDD         	movff	??_frexp+1,postdec2
 32242  0161BC  AE02               	btfss	frexp@value+1,7,c
 32243  0161BE  D003               	goto	i2u1862_40
 32244  0161C0  6A06               	clrf	??_frexp& (0+255),c
 32245  0161C2  2A06               	incf	??_frexp& (0+255),f,c
 32246  0161C4  D001               	goto	i2u1862_48
 32247  0161C6                     i2u1862_40:
 32248  0161C6  6A06               	clrf	??_frexp& (0+255),c
 32249  0161C8                     i2u1862_48:
 32250  0161C8  5006               	movf	??_frexp,w,c
 32251  0161CA  C004  FFD9         	movff	frexp@eptr,fsr2l
 32252  0161CE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 32253  0161D2  12DE               	iorwf	postinc2,f,c
 32254  0161D4  0E00               	movlw	0
 32255  0161D6  12DD               	iorwf	postdec2,f,c
 32256  0161D8  C004  FFD9         	movff	frexp@eptr,fsr2l
 32257  0161DC  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 32258  0161E0  0E82               	movlw	130
 32259  0161E2  26DE               	addwf	postinc2,f,c
 32260  0161E4  0EFF               	movlw	255
 32261  0161E6  22DD               	addwfc	postdec2,f,c
 32262  0161E8  8003               	bsf	frexp@value+2,0,c
 32263  0161EA  8203               	bsf	frexp@value+2,1,c
 32264  0161EC  8403               	bsf	frexp@value+2,2,c
 32265  0161EE  8603               	bsf	frexp@value+2,3,c
 32266  0161F0  8803               	bsf	frexp@value+2,4,c
 32267  0161F2  8A03               	bsf	frexp@value+2,5,c
 32268  0161F4  9C03               	bcf	frexp@value+2,6,c
 32269  0161F6  9E02               	bcf	frexp@value+1,7,c
 32270  0161F8  0012               	return	
 32271  0161FA                     __end_of_frexp:
 32272                           	opt stack 0
 32273                           tosu	equ	0xFFF
 32274                           tosh	equ	0xFFE
 32275                           tosl	equ	0xFFD
 32276                           pclatu	equ	0xFFB
 32277                           pclath	equ	0xFFA
 32278                           tblptru	equ	0xFF8
 32279                           tblptrh	equ	0xFF7
 32280                           tblptrl	equ	0xFF6
 32281                           tablat	equ	0xFF5
 32282                           prodh	equ	0xFF4
 32283                           prodl	equ	0xFF3
 32284                           intcon	equ	0xFF2
 32285                           indf0	equ	0xFEF
 32286                           postinc0	equ	0xFEE
 32287                           fsr0h	equ	0xFEA
 32288                           fsr0l	equ	0xFE9
 32289                           wreg	equ	0xFE8
 32290                           indf1	equ	0xFE7
 32291                           postdec1	equ	0xFE5
 32292                           plusw1	equ	0xFE3
 32293                           fsr1h	equ	0xFE2
 32294                           fsr1l	equ	0xFE1
 32295                           bsr	equ	0xFE0
 32296                           indf2	equ	0xFDF
 32297                           postinc2	equ	0xFDE
 32298                           postdec2	equ	0xFDD
 32299                           plusw2	equ	0xFDB
 32300                           fsr2h	equ	0xFDA
 32301                           fsr2l	equ	0xFD9
 32302                           status	equ	0xFD8
 32303                           
 32304 ;; *************** function ___altoft *****************
 32305 ;; Defined at:
 32306 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 32307 ;; Parameters:    Size  Location     Type
 32308 ;;  c               4   75[COMRAM] long 
 32309 ;; Auto vars:     Size  Location     Type
 32310 ;;  sign            1   84[COMRAM] unsigned char 
 32311 ;;  exp             1   83[COMRAM] unsigned char 
 32312 ;; Return value:  Size  Location     Type
 32313 ;;                  3   75[COMRAM] float 
 32314 ;; Registers used:
 32315 ;;		wreg, status,2, status,0, cstack
 32316 ;; Tracked objects:
 32317 ;;		On entry : 0/0
 32318 ;;		On exit  : 0/0
 32319 ;;		Unchanged: 0/0
 32320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32324 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32325 ;;Total ram usage:       10 bytes
 32326 ;; Hardware stack levels used:    1
 32327 ;; Hardware stack levels required when called:    1
 32328 ;; This function calls:
 32329 ;;		i2___ftpack
 32330 ;; This function is called by:
 32331 ;;		_floor
 32332 ;; This function uses a non-reentrant model
 32333 ;;
 32334                           
 32335                           	psect	text123
 32336  0161FA                     __ptext123:
 32337                           	opt stack 0
 32338  0161FA                     ___altoft:
 32339                           	opt stack 11
 32340                           
 32341                           ;incstack = 0
 32342  0161FA  0E00               	movlw	0
 32343  0161FC  6E55               	movwf	___altoft@sign,c
 32344  0161FE  0E8E               	movlw	142
 32345  016200  6E54               	movwf	___altoft@exp,c
 32346  016202  AE4F               	btfss	___altoft@c+3,7,c
 32347  016204  D011               	goto	i2l1551
 32348  016206  1E4F               	comf	___altoft@c+3,f,c
 32349  016208  1E4E               	comf	___altoft@c+2,f,c
 32350  01620A  1E4D               	comf	___altoft@c+1,f,c
 32351  01620C  6C4C               	negf	___altoft@c,c
 32352  01620E  0E00               	movlw	0
 32353  016210  224D               	addwfc	___altoft@c+1,f,c
 32354  016212  224E               	addwfc	___altoft@c+2,f,c
 32355  016214  224F               	addwfc	___altoft@c+3,f,c
 32356  016216  0E01               	movlw	1
 32357  016218  6E55               	movwf	___altoft@sign,c
 32358  01621A  D006               	goto	i2l1551
 32359  01621C  90D8               	bcf	status,0,c
 32360  01621E  324F               	rrcf	___altoft@c+3,f,c
 32361  016220  324E               	rrcf	___altoft@c+2,f,c
 32362  016222  324D               	rrcf	___altoft@c+1,f,c
 32363  016224  324C               	rrcf	___altoft@c,f,c
 32364  016226  2A54               	incf	___altoft@exp,f,c
 32365  016228                     i2l1551:
 32366  016228  0E00               	movlw	0
 32367  01622A  144C               	andwf	___altoft@c,w,c
 32368  01622C  6E50               	movwf	??___altoft& (0+255),c
 32369  01622E  0E00               	movlw	0
 32370  016230  144D               	andwf	___altoft@c+1,w,c
 32371  016232  6E51               	movwf	(??___altoft+1)& (0+255),c
 32372  016234  0E00               	movlw	0
 32373  016236  144E               	andwf	___altoft@c+2,w,c
 32374  016238  6E52               	movwf	(??___altoft+2)& (0+255),c
 32375  01623A  0EFF               	movlw	255
 32376  01623C  144F               	andwf	___altoft@c+3,w,c
 32377  01623E  6E53               	movwf	(??___altoft+3)& (0+255),c
 32378  016240  5050               	movf	??___altoft,w,c
 32379  016242  1051               	iorwf	??___altoft+1,w,c
 32380  016244  1052               	iorwf	??___altoft+2,w,c
 32381  016246  1053               	iorwf	??___altoft+3,w,c
 32382  016248  A4D8               	btfss	status,2,c
 32383  01624A  D7E8               	goto	i2l1552
 32384  01624C  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 32385  016250  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 32386  016254  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 32387  016258  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 32388  01625C  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 32389  016260  ECD1  F0AC         	call	i2___ftpack	;wreg free
 32390  016264  C001  F04C         	movff	?i2___ftpack,?___altoft
 32391  016268  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 32392  01626C  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 32393  016270  0012               	return	
 32394  016272                     __end_of___altoft:
 32395                           	opt stack 0
 32396                           tosu	equ	0xFFF
 32397                           tosh	equ	0xFFE
 32398                           tosl	equ	0xFFD
 32399                           pclatu	equ	0xFFB
 32400                           pclath	equ	0xFFA
 32401                           tblptru	equ	0xFF8
 32402                           tblptrh	equ	0xFF7
 32403                           tblptrl	equ	0xFF6
 32404                           tablat	equ	0xFF5
 32405                           prodh	equ	0xFF4
 32406                           prodl	equ	0xFF3
 32407                           intcon	equ	0xFF2
 32408                           indf0	equ	0xFEF
 32409                           postinc0	equ	0xFEE
 32410                           fsr0h	equ	0xFEA
 32411                           fsr0l	equ	0xFE9
 32412                           wreg	equ	0xFE8
 32413                           indf1	equ	0xFE7
 32414                           postdec1	equ	0xFE5
 32415                           plusw1	equ	0xFE3
 32416                           fsr1h	equ	0xFE2
 32417                           fsr1l	equ	0xFE1
 32418                           bsr	equ	0xFE0
 32419                           indf2	equ	0xFDF
 32420                           postinc2	equ	0xFDE
 32421                           postdec2	equ	0xFDD
 32422                           plusw2	equ	0xFDB
 32423                           fsr2h	equ	0xFDA
 32424                           fsr2l	equ	0xFD9
 32425                           status	equ	0xFD8
 32426                           
 32427 ;; *************** function _eval_poly *****************
 32428 ;; Defined at:
 32429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 32430 ;; Parameters:    Size  Location     Type
 32431 ;;  x               3   75[COMRAM] float 
 32432 ;;  d               2   78[COMRAM] PTR const 
 32433 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 32434 ;;  n               2   80[COMRAM] int 
 32435 ;; Auto vars:     Size  Location     Type
 32436 ;;  res             3   84[COMRAM] int 
 32437 ;; Return value:  Size  Location     Type
 32438 ;;                  3   75[COMRAM] int 
 32439 ;; Registers used:
 32440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32441 ;; Tracked objects:
 32442 ;;		On entry : 0/0
 32443 ;;		On exit  : 0/0
 32444 ;;		Unchanged: 0/0
 32445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32446 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32447 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32449 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32450 ;;Total ram usage:       12 bytes
 32451 ;; Hardware stack levels used:    1
 32452 ;; Hardware stack levels required when called:    2
 32453 ;; This function calls:
 32454 ;;		i2___ftadd
 32455 ;;		i2___ftmul
 32456 ;;		i2___wmul
 32457 ;; This function is called by:
 32458 ;;		_atan
 32459 ;;		_sin
 32460 ;; This function uses a non-reentrant model
 32461 ;;
 32462                           
 32463                           	psect	text124
 32464  015504                     __ptext124:
 32465                           	opt stack 0
 32466  015504                     _eval_poly:
 32467                           	opt stack 11
 32468                           
 32469                           ;incstack = 0
 32470  015504  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 32471  015508  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 32472  01550C  0E00               	movlw	0
 32473  01550E  6E12               	movwf	i2___wmul@multiplicand+1,c
 32474  015510  0E03               	movlw	3
 32475  015512  6E11               	movwf	i2___wmul@multiplicand,c
 32476  015514  EC69  F0B7         	call	i2___wmul	;wreg free
 32477  015518  C04F  F053         	movff	eval_poly@d,??_eval_poly
 32478  01551C  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 32479  015520  500F               	movf	?i2___wmul,w,c
 32480  015522  2653               	addwf	??_eval_poly,f,c
 32481  015524  5010               	movf	?i2___wmul+1,w,c
 32482  015526  2254               	addwfc	??_eval_poly+1,f,c
 32483  015528  C053  FFF6         	movff	??_eval_poly,tblptrl
 32484  01552C  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 32485  015530                     	if	0	;tblptru may be non-zero
 32486  015530                     	endif
 32487  015530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 32488  015530  0E00               	movlw	low (__mediumconst shr (0+16))
 32489  015532  6EF8               	movwf	tblptru,c
 32490  015534                     	endif
 32491  015534  0009               	tblrd		*+
 32492  015536  CFF5 F055          	movff	tablat,eval_poly@res
 32493  01553A  0009               	tblrd		*+
 32494  01553C  CFF5 F056          	movff	tablat,eval_poly@res+1
 32495  015540  000A               	tblrd		*-
 32496  015542  CFF5 F057          	movff	tablat,eval_poly@res+2
 32497  015546  D040               	goto	i2l1715
 32498  015548  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 32499  01554C  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 32500  015550  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 32501  015554  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 32502  015558  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 32503  01555C  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 32504  015560  EC40  F0A8         	call	i2___ftmul	;wreg free
 32505  015564  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 32506  015568  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 32507  01556C  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 32508  015570  0E00               	movlw	0
 32509  015572  6E12               	movwf	i2___wmul@multiplicand+1,c
 32510  015574  0E03               	movlw	3
 32511  015576  6E11               	movwf	i2___wmul@multiplicand,c
 32512  015578  0651               	decf	eval_poly@n,f,c
 32513  01557A  A0D8               	btfss	status,0,c
 32514  01557C  0652               	decf	eval_poly@n+1,f,c
 32515  01557E  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 32516  015582  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 32517  015586  EC69  F0B7         	call	i2___wmul	;wreg free
 32518  01558A  C04F  F053         	movff	eval_poly@d,??_eval_poly
 32519  01558E  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 32520  015592  500F               	movf	?i2___wmul,w,c
 32521  015594  2653               	addwf	??_eval_poly,f,c
 32522  015596  5010               	movf	?i2___wmul+1,w,c
 32523  015598  2254               	addwfc	??_eval_poly+1,f,c
 32524  01559A  C053  FFF6         	movff	??_eval_poly,tblptrl
 32525  01559E  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 32526  0155A2                     	if	0	;tblptru may be non-zero
 32527  0155A2                     	endif
 32528  0155A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 32529  0155A2  0E00               	movlw	low (__mediumconst shr (0+16))
 32530  0155A4  6EF8               	movwf	tblptru,c
 32531  0155A6                     	endif
 32532  0155A6  0009               	tblrd		*+
 32533  0155A8  CFF5 F043          	movff	tablat,i2___ftadd@f2
 32534  0155AC  0009               	tblrd		*+
 32535  0155AE  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 32536  0155B2  000A               	tblrd		*-
 32537  0155B4  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 32538  0155B8  EC44  F0A2         	call	i2___ftadd	;wreg free
 32539  0155BC  C040  F055         	movff	?i2___ftadd,eval_poly@res
 32540  0155C0  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 32541  0155C4  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 32542  0155C8                     i2l1715:
 32543  0155C8  5051               	movf	eval_poly@n,w,c
 32544  0155CA  1052               	iorwf	eval_poly@n+1,w,c
 32545  0155CC  A4D8               	btfss	status,2,c
 32546  0155CE  D7BC               	goto	i2l1716
 32547  0155D0  C055  F04C         	movff	eval_poly@res,?_eval_poly
 32548  0155D4  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 32549  0155D8  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 32550  0155DC  0012               	return		;funcret
 32551  0155DE                     __end_of_eval_poly:
 32552                           	opt stack 0
 32553                           tosu	equ	0xFFF
 32554                           tosh	equ	0xFFE
 32555                           tosl	equ	0xFFD
 32556                           pclatu	equ	0xFFB
 32557                           pclath	equ	0xFFA
 32558                           tblptru	equ	0xFF8
 32559                           tblptrh	equ	0xFF7
 32560                           tblptrl	equ	0xFF6
 32561                           tablat	equ	0xFF5
 32562                           prodh	equ	0xFF4
 32563                           prodl	equ	0xFF3
 32564                           intcon	equ	0xFF2
 32565                           indf0	equ	0xFEF
 32566                           postinc0	equ	0xFEE
 32567                           fsr0h	equ	0xFEA
 32568                           fsr0l	equ	0xFE9
 32569                           wreg	equ	0xFE8
 32570                           indf1	equ	0xFE7
 32571                           postdec1	equ	0xFE5
 32572                           plusw1	equ	0xFE3
 32573                           fsr1h	equ	0xFE2
 32574                           fsr1l	equ	0xFE1
 32575                           bsr	equ	0xFE0
 32576                           indf2	equ	0xFDF
 32577                           postinc2	equ	0xFDE
 32578                           postdec2	equ	0xFDD
 32579                           plusw2	equ	0xFDB
 32580                           fsr2h	equ	0xFDA
 32581                           fsr2l	equ	0xFD9
 32582                           status	equ	0xFD8
 32583                           
 32584 ;; *************** function i2___wmul *****************
 32585 ;; Defined at:
 32586 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 32587 ;; Parameters:    Size  Location     Type
 32588 ;;  multiplier      2   14[COMRAM] unsigned int 
 32589 ;;  multiplicand    2   16[COMRAM] unsigned int 
 32590 ;; Auto vars:     Size  Location     Type
 32591 ;;  __wmul          2   18[COMRAM] unsigned int 
 32592 ;; Return value:  Size  Location     Type
 32593 ;;                  2   14[COMRAM] unsigned int 
 32594 ;; Registers used:
 32595 ;;		wreg, status,2, status,0, prodl, prodh
 32596 ;; Tracked objects:
 32597 ;;		On entry : 0/0
 32598 ;;		On exit  : 0/0
 32599 ;;		Unchanged: 0/0
 32600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32605 ;;Total ram usage:        6 bytes
 32606 ;; Hardware stack levels used:    1
 32607 ;; This function calls:
 32608 ;;		Nothing
 32609 ;; This function is called by:
 32610 ;;		_eval_poly
 32611 ;;		i2_fround
 32612 ;;		i2_scale
 32613 ;;		i2_printf
 32614 ;; This function uses a non-reentrant model
 32615 ;;
 32616                           
 32617                           	psect	text125
 32618  016ED2                     __ptext125:
 32619                           	opt stack 0
 32620  016ED2                     i2___wmul:
 32621                           	opt stack 14
 32622                           
 32623                           ;incstack = 0
 32624  016ED2  500F               	movf	i2___wmul@multiplier,w,c
 32625  016ED4  0211               	mulwf	i2___wmul@multiplicand,c
 32626  016ED6  CFF3 F013          	movff	prodl,i2___wmul@product
 32627  016EDA  CFF4 F014          	movff	prodh,i2___wmul@product+1
 32628  016EDE  500F               	movf	i2___wmul@multiplier,w,c
 32629  016EE0  0212               	mulwf	i2___wmul@multiplicand+1,c
 32630  016EE2  50F3               	movf	prodl,w,c
 32631  016EE4  2614               	addwf	i2___wmul@product+1,f,c
 32632  016EE6  5010               	movf	i2___wmul@multiplier+1,w,c
 32633  016EE8  0211               	mulwf	i2___wmul@multiplicand,c
 32634  016EEA  50F3               	movf	prodl,w,c
 32635  016EEC  2614               	addwf	i2___wmul@product+1,f,c
 32636  016EEE  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 32637  016EF2  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 32638  016EF6  0012               	return	
 32639  016EF8                     __end_ofi2___wmul:
 32640                           	opt stack 0
 32641                           tosu	equ	0xFFF
 32642                           tosh	equ	0xFFE
 32643                           tosl	equ	0xFFD
 32644                           pclatu	equ	0xFFB
 32645                           pclath	equ	0xFFA
 32646                           tblptru	equ	0xFF8
 32647                           tblptrh	equ	0xFF7
 32648                           tblptrl	equ	0xFF6
 32649                           tablat	equ	0xFF5
 32650                           prodh	equ	0xFF4
 32651                           prodl	equ	0xFF3
 32652                           intcon	equ	0xFF2
 32653                           indf0	equ	0xFEF
 32654                           postinc0	equ	0xFEE
 32655                           fsr0h	equ	0xFEA
 32656                           fsr0l	equ	0xFE9
 32657                           wreg	equ	0xFE8
 32658                           indf1	equ	0xFE7
 32659                           postdec1	equ	0xFE5
 32660                           plusw1	equ	0xFE3
 32661                           fsr1h	equ	0xFE2
 32662                           fsr1l	equ	0xFE1
 32663                           bsr	equ	0xFE0
 32664                           indf2	equ	0xFDF
 32665                           postinc2	equ	0xFDE
 32666                           postdec2	equ	0xFDD
 32667                           plusw2	equ	0xFDB
 32668                           fsr2h	equ	0xFDA
 32669                           fsr2l	equ	0xFD9
 32670                           status	equ	0xFD8
 32671                           
 32672 ;; *************** function i2___ftmul *****************
 32673 ;; Defined at:
 32674 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 32675 ;; Parameters:    Size  Location     Type
 32676 ;;  f1              3   38[COMRAM] float 
 32677 ;;  f2              3   41[COMRAM] float 
 32678 ;; Auto vars:     Size  Location     Type
 32679 ;;  __ftmul         3   48[COMRAM] unsigned um
 32680 ;;  __ftmul         1   52[COMRAM] unsigned char 
 32681 ;;  __ftmul         1   51[COMRAM] unsigned char 
 32682 ;;  __ftmul         1   47[COMRAM] unsigned char 
 32683 ;; Return value:  Size  Location     Type
 32684 ;;                  3   38[COMRAM] float 
 32685 ;; Registers used:
 32686 ;;		wreg, status,2, status,0, cstack
 32687 ;; Tracked objects:
 32688 ;;		On entry : 0/0
 32689 ;;		On exit  : 0/0
 32690 ;;		Unchanged: 0/0
 32691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32692 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32693 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32694 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32695 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32696 ;;Total ram usage:       15 bytes
 32697 ;; Hardware stack levels used:    1
 32698 ;; Hardware stack levels required when called:    1
 32699 ;; This function calls:
 32700 ;;		i2___ftpack
 32701 ;; This function is called by:
 32702 ;;		_peakToRMS
 32703 ;;		_ADCPostProcessingCallback
 32704 ;;		_asin
 32705 ;;		_atan
 32706 ;;		_eval_poly
 32707 ;;		_sin
 32708 ;;		_sqrt
 32709 ;;		i2_fround
 32710 ;;		i2_scale
 32711 ;;		i2_printf
 32712 ;; This function uses a non-reentrant model
 32713 ;;
 32714                           
 32715                           	psect	text126
 32716  015080                     __ptext126:
 32717                           	opt stack 0
 32718  015080                     i2___ftmul:
 32719                           	opt stack 13
 32720                           
 32721                           ;incstack = 0
 32722  015080  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 32723  015084  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 32724  015086  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 32725  015088  3428               	rlcf	i2___ftmul@f1+1,w,c
 32726  01508A  362D               	rlcf	??i2___ftmul& (0+255),f,c
 32727  01508C  E301               	bnc	u1833_41
 32728  01508E  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 32729  015090                     u1833_41:
 32730  015090  502D               	movf	??i2___ftmul,w,c
 32731  015092  6E30               	movwf	i2___ftmul@exp,c
 32732  015094  5030               	movf	i2___ftmul@exp,w,c
 32733  015096  A4D8               	btfss	status,2,c
 32734  015098  D007               	goto	i2l1853
 32735  01509A  0E00               	movlw	0
 32736  01509C  6E27               	movwf	?i2___ftmul,c
 32737  01509E  0E00               	movlw	0
 32738  0150A0  6E28               	movwf	?i2___ftmul+1,c
 32739  0150A2  0E00               	movlw	0
 32740  0150A4  6E29               	movwf	?i2___ftmul+2,c
 32741  0150A6  0012               	return	
 32742  0150A8                     i2l1853:
 32743  0150A8  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 32744  0150AC  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 32745  0150AE  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 32746  0150B0  342B               	rlcf	i2___ftmul@f2+1,w,c
 32747  0150B2  362D               	rlcf	??i2___ftmul& (0+255),f,c
 32748  0150B4  E301               	bnc	u1835_41
 32749  0150B6  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 32750  0150B8                     u1835_41:
 32751  0150B8  502D               	movf	??i2___ftmul,w,c
 32752  0150BA  6E35               	movwf	i2___ftmul@sign,c
 32753  0150BC  5035               	movf	i2___ftmul@sign,w,c
 32754  0150BE  A4D8               	btfss	status,2,c
 32755  0150C0  D007               	goto	i2l1855
 32756  0150C2  0E00               	movlw	0
 32757  0150C4  6E27               	movwf	?i2___ftmul,c
 32758  0150C6  0E00               	movlw	0
 32759  0150C8  6E28               	movwf	?i2___ftmul+1,c
 32760  0150CA  0E00               	movlw	0
 32761  0150CC  6E29               	movwf	?i2___ftmul+2,c
 32762  0150CE  0012               	return	
 32763  0150D0                     i2l1855:
 32764  0150D0  5035               	movf	i2___ftmul@sign,w,c
 32765  0150D2  0F7B               	addlw	123
 32766  0150D4  2630               	addwf	i2___ftmul@exp,f,c
 32767  0150D6  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 32768  0150DA  502C               	movf	i2___ftmul@f2+2,w,c
 32769  0150DC  1A35               	xorwf	i2___ftmul@sign,f,c
 32770  0150DE  0E80               	movlw	128
 32771  0150E0  1635               	andwf	i2___ftmul@sign,f,c
 32772  0150E2  8E28               	bsf	i2___ftmul@f1+1,7,c
 32773  0150E4  8E2B               	bsf	i2___ftmul@f2+1,7,c
 32774  0150E6  0EFF               	movlw	255
 32775  0150E8  162A               	andwf	i2___ftmul@f2,f,c
 32776  0150EA  0EFF               	movlw	255
 32777  0150EC  162B               	andwf	i2___ftmul@f2+1,f,c
 32778  0150EE  0E00               	movlw	0
 32779  0150F0  162C               	andwf	i2___ftmul@f2+2,f,c
 32780  0150F2  0E00               	movlw	0
 32781  0150F4  6E31               	movwf	i2___ftmul@f3_as_product,c
 32782  0150F6  0E00               	movlw	0
 32783  0150F8  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 32784  0150FA  0E00               	movlw	0
 32785  0150FC  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 32786  0150FE  0E07               	movlw	7
 32787  015100  6E34               	movwf	i2___ftmul@cntr,c
 32788  015102  A027               	btfss	i2___ftmul@f1,0,c
 32789  015104  D006               	goto	i2l1857
 32790  015106  502A               	movf	i2___ftmul@f2,w,c
 32791  015108  2631               	addwf	i2___ftmul@f3_as_product,f,c
 32792  01510A  502B               	movf	i2___ftmul@f2+1,w,c
 32793  01510C  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 32794  01510E  502C               	movf	i2___ftmul@f2+2,w,c
 32795  015110  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 32796  015112                     i2l1857:
 32797  015112  90D8               	bcf	status,0,c
 32798  015114  3229               	rrcf	i2___ftmul@f1+2,f,c
 32799  015116  3228               	rrcf	i2___ftmul@f1+1,f,c
 32800  015118  3227               	rrcf	i2___ftmul@f1,f,c
 32801  01511A  90D8               	bcf	status,0,c
 32802  01511C  362A               	rlcf	i2___ftmul@f2,f,c
 32803  01511E  362B               	rlcf	i2___ftmul@f2+1,f,c
 32804  015120  362C               	rlcf	i2___ftmul@f2+2,f,c
 32805  015122  2E34               	decfsz	i2___ftmul@cntr,f,c
 32806  015124  D7EE               	goto	i2l1856
 32807  015126  0E09               	movlw	9
 32808  015128  6E34               	movwf	i2___ftmul@cntr,c
 32809  01512A  A027               	btfss	i2___ftmul@f1,0,c
 32810  01512C  D006               	goto	i2l1860
 32811  01512E  502A               	movf	i2___ftmul@f2,w,c
 32812  015130  2631               	addwf	i2___ftmul@f3_as_product,f,c
 32813  015132  502B               	movf	i2___ftmul@f2+1,w,c
 32814  015134  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 32815  015136  502C               	movf	i2___ftmul@f2+2,w,c
 32816  015138  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 32817  01513A                     i2l1860:
 32818  01513A  90D8               	bcf	status,0,c
 32819  01513C  3229               	rrcf	i2___ftmul@f1+2,f,c
 32820  01513E  3228               	rrcf	i2___ftmul@f1+1,f,c
 32821  015140  3227               	rrcf	i2___ftmul@f1,f,c
 32822  015142  90D8               	bcf	status,0,c
 32823  015144  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 32824  015146  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 32825  015148  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 32826  01514A  2E34               	decfsz	i2___ftmul@cntr,f,c
 32827  01514C  D7EE               	goto	i2l1859
 32828  01514E  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 32829  015152  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 32830  015156  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 32831  01515A  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 32832  01515E  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 32833  015162  ECD1  F0AC         	call	i2___ftpack	;wreg free
 32834  015166  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 32835  01516A  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 32836  01516E  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 32837  015172  0012               	return	
 32838  015174                     __end_ofi2___ftmul:
 32839                           	opt stack 0
 32840                           tosu	equ	0xFFF
 32841                           tosh	equ	0xFFE
 32842                           tosl	equ	0xFFD
 32843                           pclatu	equ	0xFFB
 32844                           pclath	equ	0xFFA
 32845                           tblptru	equ	0xFF8
 32846                           tblptrh	equ	0xFF7
 32847                           tblptrl	equ	0xFF6
 32848                           tablat	equ	0xFF5
 32849                           prodh	equ	0xFF4
 32850                           prodl	equ	0xFF3
 32851                           intcon	equ	0xFF2
 32852                           indf0	equ	0xFEF
 32853                           postinc0	equ	0xFEE
 32854                           fsr0h	equ	0xFEA
 32855                           fsr0l	equ	0xFE9
 32856                           wreg	equ	0xFE8
 32857                           indf1	equ	0xFE7
 32858                           postdec1	equ	0xFE5
 32859                           plusw1	equ	0xFE3
 32860                           fsr1h	equ	0xFE2
 32861                           fsr1l	equ	0xFE1
 32862                           bsr	equ	0xFE0
 32863                           indf2	equ	0xFDF
 32864                           postinc2	equ	0xFDE
 32865                           postdec2	equ	0xFDD
 32866                           plusw2	equ	0xFDB
 32867                           fsr2h	equ	0xFDA
 32868                           fsr2l	equ	0xFD9
 32869                           status	equ	0xFD8
 32870                           
 32871 ;; *************** function i2___ftadd *****************
 32872 ;; Defined at:
 32873 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 32874 ;; Parameters:    Size  Location     Type
 32875 ;;  f1              3   63[COMRAM] float 
 32876 ;;  f2              3   66[COMRAM] float 
 32877 ;; Auto vars:     Size  Location     Type
 32878 ;;  __ftadd         1   74[COMRAM] unsigned char 
 32879 ;;  __ftadd         1   73[COMRAM] unsigned char 
 32880 ;;  __ftadd         1   72[COMRAM] unsigned char 
 32881 ;; Return value:  Size  Location     Type
 32882 ;;                  3   63[COMRAM] float 
 32883 ;; Registers used:
 32884 ;;		wreg, status,2, status,0, cstack
 32885 ;; Tracked objects:
 32886 ;;		On entry : 0/0
 32887 ;;		On exit  : 0/0
 32888 ;;		Unchanged: 0/0
 32889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32890 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32892 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32893 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32894 ;;Total ram usage:       12 bytes
 32895 ;; Hardware stack levels used:    1
 32896 ;; Hardware stack levels required when called:    1
 32897 ;; This function calls:
 32898 ;;		i2___ftpack
 32899 ;; This function is called by:
 32900 ;;		_peakToRMS
 32901 ;;		_ADCPostProcessingCallback
 32902 ;;		_acos
 32903 ;;		_asin
 32904 ;;		_atan
 32905 ;;		_eval_poly
 32906 ;;		_sin
 32907 ;;		_floor
 32908 ;;		i2_printf
 32909 ;;		i2___ftsub
 32910 ;; This function uses a non-reentrant model
 32911 ;;
 32912                           
 32913                           	psect	text127
 32914  014488                     __ptext127:
 32915                           	opt stack 0
 32916  014488                     i2___ftadd:
 32917                           	opt stack 13
 32918                           
 32919                           ;incstack = 0
 32920  014488  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 32921  01448C  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 32922  01448E  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 32923  014490  3441               	rlcf	i2___ftadd@f1+1,w,c
 32924  014492  3646               	rlcf	??i2___ftadd& (0+255),f,c
 32925  014494  E301               	bnc	u1812_41
 32926  014496  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 32927  014498                     u1812_41:
 32928  014498  5046               	movf	??i2___ftadd,w,c
 32929  01449A  6E4B               	movwf	i2___ftadd@exp1,c
 32930  01449C  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 32931  0144A0  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 32932  0144A2  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 32933  0144A4  3444               	rlcf	i2___ftadd@f2+1,w,c
 32934  0144A6  3646               	rlcf	??i2___ftadd& (0+255),f,c
 32935  0144A8  E301               	bnc	u1813_41
 32936  0144AA  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 32937  0144AC                     u1813_41:
 32938  0144AC  5046               	movf	??i2___ftadd,w,c
 32939  0144AE  6E4A               	movwf	i2___ftadd@exp2,c
 32940  0144B0  504B               	movf	i2___ftadd@exp1,w,c
 32941  0144B2  B4D8               	btfsc	status,2,c
 32942  0144B4  D00B               	goto	i2u1816_40
 32943  0144B6  504A               	movf	i2___ftadd@exp2,w,c
 32944  0144B8  5C4B               	subwf	i2___ftadd@exp1,w,c
 32945  0144BA  B0D8               	btfsc	status,0,c
 32946  0144BC  D00E               	goto	i2l1788
 32947  0144BE  504B               	movf	i2___ftadd@exp1,w,c
 32948  0144C0  0800               	sublw	0
 32949  0144C2  244A               	addwf	i2___ftadd@exp2,w,c
 32950  0144C4  6E46               	movwf	??i2___ftadd& (0+255),c
 32951  0144C6  0E18               	movlw	24
 32952  0144C8  6446               	cpfsgt	??i2___ftadd,c
 32953  0144CA  D007               	goto	i2l1788
 32954  0144CC                     i2u1816_40:
 32955  0144CC  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 32956  0144D0  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 32957  0144D4  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 32958  0144D8  0012               	return	
 32959  0144DA                     i2l1788:
 32960  0144DA  504A               	movf	i2___ftadd@exp2,w,c
 32961  0144DC  B4D8               	btfsc	status,2,c
 32962  0144DE  D00B               	goto	i2u1819_40
 32963  0144E0  504B               	movf	i2___ftadd@exp1,w,c
 32964  0144E2  5C4A               	subwf	i2___ftadd@exp2,w,c
 32965  0144E4  B0D8               	btfsc	status,0,c
 32966  0144E6  D00E               	goto	i2l1792
 32967  0144E8  504A               	movf	i2___ftadd@exp2,w,c
 32968  0144EA  0800               	sublw	0
 32969  0144EC  244B               	addwf	i2___ftadd@exp1,w,c
 32970  0144EE  6E46               	movwf	??i2___ftadd& (0+255),c
 32971  0144F0  0E18               	movlw	24
 32972  0144F2  6446               	cpfsgt	??i2___ftadd,c
 32973  0144F4  D007               	goto	i2l1792
 32974  0144F6                     i2u1819_40:
 32975  0144F6  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 32976  0144FA  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 32977  0144FE  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 32978  014502  0012               	return	
 32979  014504                     i2l1792:
 32980  014504  0E06               	movlw	6
 32981  014506  6E49               	movwf	i2___ftadd@sign,c
 32982  014508  BE42               	btfsc	i2___ftadd@f1+2,7,c
 32983  01450A  8E49               	bsf	i2___ftadd@sign,7,c
 32984  01450C  BE45               	btfsc	i2___ftadd@f2+2,7,c
 32985  01450E  8C49               	bsf	i2___ftadd@sign,6,c
 32986  014510  8E41               	bsf	i2___ftadd@f1+1,7,c
 32987  014512  0EFF               	movlw	255
 32988  014514  1640               	andwf	i2___ftadd@f1,f,c
 32989  014516  0EFF               	movlw	255
 32990  014518  1641               	andwf	i2___ftadd@f1+1,f,c
 32991  01451A  0E00               	movlw	0
 32992  01451C  1642               	andwf	i2___ftadd@f1+2,f,c
 32993  01451E  8E44               	bsf	i2___ftadd@f2+1,7,c
 32994  014520  0EFF               	movlw	255
 32995  014522  1643               	andwf	i2___ftadd@f2,f,c
 32996  014524  0EFF               	movlw	255
 32997  014526  1644               	andwf	i2___ftadd@f2+1,f,c
 32998  014528  0E00               	movlw	0
 32999  01452A  1645               	andwf	i2___ftadd@f2+2,f,c
 33000  01452C  504A               	movf	i2___ftadd@exp2,w,c
 33001  01452E  5C4B               	subwf	i2___ftadd@exp1,w,c
 33002  014530  B0D8               	btfsc	status,0,c
 33003  014532  D01B               	goto	i2l1797
 33004  014534                     i2u1822_40:
 33005  014534  90D8               	bcf	status,0,c
 33006  014536  3643               	rlcf	i2___ftadd@f2,f,c
 33007  014538  3644               	rlcf	i2___ftadd@f2+1,f,c
 33008  01453A  3645               	rlcf	i2___ftadd@f2+2,f,c
 33009  01453C  064A               	decf	i2___ftadd@exp2,f,c
 33010  01453E  504B               	movf	i2___ftadd@exp1,w,c
 33011  014540  184A               	xorwf	i2___ftadd@exp2,w,c
 33012  014542  B4D8               	btfsc	status,2,c
 33013  014544  D00D               	goto	i2l1802
 33014  014546  0649               	decf	i2___ftadd@sign,f,c
 33015  014548  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 33016  01454C  0E07               	movlw	7
 33017  01454E  1646               	andwf	??i2___ftadd,f,c
 33018  014550  B4D8               	btfsc	status,2,c
 33019  014552  D006               	goto	i2l1802
 33020  014554  D7EF               	goto	i2u1822_40
 33021  014556  90D8               	bcf	status,0,c
 33022  014558  3242               	rrcf	i2___ftadd@f1+2,f,c
 33023  01455A  3241               	rrcf	i2___ftadd@f1+1,f,c
 33024  01455C  3240               	rrcf	i2___ftadd@f1,f,c
 33025  01455E  2A4B               	incf	i2___ftadd@exp1,f,c
 33026  014560                     i2l1802:
 33027  014560  504A               	movf	i2___ftadd@exp2,w,c
 33028  014562  184B               	xorwf	i2___ftadd@exp1,w,c
 33029  014564  B4D8               	btfsc	status,2,c
 33030  014566  D01F               	goto	i2u1829_40
 33031  014568  D7F6               	goto	i2l1803
 33032  01456A                     i2l1797:
 33033  01456A  504B               	movf	i2___ftadd@exp1,w,c
 33034  01456C  5C4A               	subwf	i2___ftadd@exp2,w,c
 33035  01456E  B0D8               	btfsc	status,0,c
 33036  014570  D01A               	goto	i2u1829_40
 33037  014572                     i2u1826_40:
 33038  014572  90D8               	bcf	status,0,c
 33039  014574  3640               	rlcf	i2___ftadd@f1,f,c
 33040  014576  3641               	rlcf	i2___ftadd@f1+1,f,c
 33041  014578  3642               	rlcf	i2___ftadd@f1+2,f,c
 33042  01457A  064B               	decf	i2___ftadd@exp1,f,c
 33043  01457C  504B               	movf	i2___ftadd@exp1,w,c
 33044  01457E  184A               	xorwf	i2___ftadd@exp2,w,c
 33045  014580  B4D8               	btfsc	status,2,c
 33046  014582  D00D               	goto	i2l1811
 33047  014584  0649               	decf	i2___ftadd@sign,f,c
 33048  014586  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 33049  01458A  0E07               	movlw	7
 33050  01458C  1646               	andwf	??i2___ftadd,f,c
 33051  01458E  B4D8               	btfsc	status,2,c
 33052  014590  D006               	goto	i2l1811
 33053  014592  D7EF               	goto	i2u1826_40
 33054  014594  90D8               	bcf	status,0,c
 33055  014596  3245               	rrcf	i2___ftadd@f2+2,f,c
 33056  014598  3244               	rrcf	i2___ftadd@f2+1,f,c
 33057  01459A  3243               	rrcf	i2___ftadd@f2,f,c
 33058  01459C  2A4A               	incf	i2___ftadd@exp2,f,c
 33059  01459E                     i2l1811:
 33060  01459E  504A               	movf	i2___ftadd@exp2,w,c
 33061  0145A0  184B               	xorwf	i2___ftadd@exp1,w,c
 33062  0145A2  A4D8               	btfss	status,2,c
 33063  0145A4  D7F7               	goto	i2l1812
 33064  0145A6                     i2u1829_40:
 33065  0145A6  AE49               	btfss	i2___ftadd@sign,7,c
 33066  0145A8  D00C               	goto	i2l1814
 33067  0145AA  0EFF               	movlw	255
 33068  0145AC  1A40               	xorwf	i2___ftadd@f1,f,c
 33069  0145AE  0EFF               	movlw	255
 33070  0145B0  1A41               	xorwf	i2___ftadd@f1+1,f,c
 33071  0145B2  0EFF               	movlw	255
 33072  0145B4  1A42               	xorwf	i2___ftadd@f1+2,f,c
 33073  0145B6  0E01               	movlw	1
 33074  0145B8  2640               	addwf	i2___ftadd@f1,f,c
 33075  0145BA  0E00               	movlw	0
 33076  0145BC  2241               	addwfc	i2___ftadd@f1+1,f,c
 33077  0145BE  0E00               	movlw	0
 33078  0145C0  2242               	addwfc	i2___ftadd@f1+2,f,c
 33079  0145C2                     i2l1814:
 33080  0145C2  AC49               	btfss	i2___ftadd@sign,6,c
 33081  0145C4  D00C               	goto	i2l1815
 33082  0145C6  0EFF               	movlw	255
 33083  0145C8  1A43               	xorwf	i2___ftadd@f2,f,c
 33084  0145CA  0EFF               	movlw	255
 33085  0145CC  1A44               	xorwf	i2___ftadd@f2+1,f,c
 33086  0145CE  0EFF               	movlw	255
 33087  0145D0  1A45               	xorwf	i2___ftadd@f2+2,f,c
 33088  0145D2  0E01               	movlw	1
 33089  0145D4  2643               	addwf	i2___ftadd@f2,f,c
 33090  0145D6  0E00               	movlw	0
 33091  0145D8  2244               	addwfc	i2___ftadd@f2+1,f,c
 33092  0145DA  0E00               	movlw	0
 33093  0145DC  2245               	addwfc	i2___ftadd@f2+2,f,c
 33094  0145DE                     i2l1815:
 33095  0145DE  0E00               	movlw	0
 33096  0145E0  6E49               	movwf	i2___ftadd@sign,c
 33097  0145E2  5040               	movf	i2___ftadd@f1,w,c
 33098  0145E4  2643               	addwf	i2___ftadd@f2,f,c
 33099  0145E6  5041               	movf	i2___ftadd@f1+1,w,c
 33100  0145E8  2244               	addwfc	i2___ftadd@f2+1,f,c
 33101  0145EA  5042               	movf	i2___ftadd@f1+2,w,c
 33102  0145EC  2245               	addwfc	i2___ftadd@f2+2,f,c
 33103  0145EE  AE45               	btfss	i2___ftadd@f2+2,7,c
 33104  0145F0  D00E               	goto	i2l1816
 33105  0145F2  0EFF               	movlw	255
 33106  0145F4  1A43               	xorwf	i2___ftadd@f2,f,c
 33107  0145F6  0EFF               	movlw	255
 33108  0145F8  1A44               	xorwf	i2___ftadd@f2+1,f,c
 33109  0145FA  0EFF               	movlw	255
 33110  0145FC  1A45               	xorwf	i2___ftadd@f2+2,f,c
 33111  0145FE  0E01               	movlw	1
 33112  014600  2643               	addwf	i2___ftadd@f2,f,c
 33113  014602  0E00               	movlw	0
 33114  014604  2244               	addwfc	i2___ftadd@f2+1,f,c
 33115  014606  0E00               	movlw	0
 33116  014608  2245               	addwfc	i2___ftadd@f2+2,f,c
 33117  01460A  0E01               	movlw	1
 33118  01460C  6E49               	movwf	i2___ftadd@sign,c
 33119  01460E                     i2l1816:
 33120  01460E  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 33121  014612  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 33122  014616  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 33123  01461A  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 33124  01461E  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 33125  014622  ECD1  F0AC         	call	i2___ftpack	;wreg free
 33126  014626  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 33127  01462A  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 33128  01462E  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 33129  014632  0012               	return	
 33130  014634                     __end_ofi2___ftadd:
 33131                           	opt stack 0
 33132                           tosu	equ	0xFFF
 33133                           tosh	equ	0xFFE
 33134                           tosl	equ	0xFFD
 33135                           pclatu	equ	0xFFB
 33136                           pclath	equ	0xFFA
 33137                           tblptru	equ	0xFF8
 33138                           tblptrh	equ	0xFF7
 33139                           tblptrl	equ	0xFF6
 33140                           tablat	equ	0xFF5
 33141                           prodh	equ	0xFF4
 33142                           prodl	equ	0xFF3
 33143                           intcon	equ	0xFF2
 33144                           indf0	equ	0xFEF
 33145                           postinc0	equ	0xFEE
 33146                           fsr0h	equ	0xFEA
 33147                           fsr0l	equ	0xFE9
 33148                           wreg	equ	0xFE8
 33149                           indf1	equ	0xFE7
 33150                           postdec1	equ	0xFE5
 33151                           plusw1	equ	0xFE3
 33152                           fsr1h	equ	0xFE2
 33153                           fsr1l	equ	0xFE1
 33154                           bsr	equ	0xFE0
 33155                           indf2	equ	0xFDF
 33156                           postinc2	equ	0xFDE
 33157                           postdec2	equ	0xFDD
 33158                           plusw2	equ	0xFDB
 33159                           fsr2h	equ	0xFDA
 33160                           fsr2l	equ	0xFD9
 33161                           status	equ	0xFD8
 33162                           
 33163 ;; *************** function ___lwtoft *****************
 33164 ;; Defined at:
 33165 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 33166 ;; Parameters:    Size  Location     Type
 33167 ;;  c               2    8[COMRAM] unsigned int 
 33168 ;; Auto vars:     Size  Location     Type
 33169 ;;		None
 33170 ;; Return value:  Size  Location     Type
 33171 ;;                  3    8[COMRAM] float 
 33172 ;; Registers used:
 33173 ;;		wreg, status,2, status,0, cstack
 33174 ;; Tracked objects:
 33175 ;;		On entry : 0/0
 33176 ;;		On exit  : 0/0
 33177 ;;		Unchanged: 0/0
 33178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33179 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33183 ;;Total ram usage:        3 bytes
 33184 ;; Hardware stack levels used:    1
 33185 ;; Hardware stack levels required when called:    1
 33186 ;; This function calls:
 33187 ;;		i2___ftpack
 33188 ;; This function is called by:
 33189 ;;		_ADCPostProcessingCallback
 33190 ;; This function uses a non-reentrant model
 33191 ;;
 33192                           
 33193                           	psect	text128
 33194  016F1C                     __ptext128:
 33195                           	opt stack 0
 33196  016F1C                     ___lwtoft:
 33197                           	opt stack 14
 33198                           
 33199                           ;incstack = 0
 33200  016F1C  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 33201  016F20  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 33202  016F24  6A03               	clrf	i2___ftpack@arg+2,c
 33203  016F26  0E8E               	movlw	142
 33204  016F28  6E04               	movwf	i2___ftpack@exp,c
 33205  016F2A  0E00               	movlw	0
 33206  016F2C  6E05               	movwf	i2___ftpack@sign,c
 33207  016F2E  ECD1  F0AC         	call	i2___ftpack	;wreg free
 33208  016F32  C001  F009         	movff	?i2___ftpack,?___lwtoft
 33209  016F36  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 33210  016F3A  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 33211  016F3E  0012               	return	
 33212  016F40                     __end_of___lwtoft:
 33213                           	opt stack 0
 33214                           tosu	equ	0xFFF
 33215                           tosh	equ	0xFFE
 33216                           tosl	equ	0xFFD
 33217                           pclatu	equ	0xFFB
 33218                           pclath	equ	0xFFA
 33219                           tblptru	equ	0xFF8
 33220                           tblptrh	equ	0xFF7
 33221                           tblptrl	equ	0xFF6
 33222                           tablat	equ	0xFF5
 33223                           prodh	equ	0xFF4
 33224                           prodl	equ	0xFF3
 33225                           intcon	equ	0xFF2
 33226                           indf0	equ	0xFEF
 33227                           postinc0	equ	0xFEE
 33228                           fsr0h	equ	0xFEA
 33229                           fsr0l	equ	0xFE9
 33230                           wreg	equ	0xFE8
 33231                           indf1	equ	0xFE7
 33232                           postdec1	equ	0xFE5
 33233                           plusw1	equ	0xFE3
 33234                           fsr1h	equ	0xFE2
 33235                           fsr1l	equ	0xFE1
 33236                           bsr	equ	0xFE0
 33237                           indf2	equ	0xFDF
 33238                           postinc2	equ	0xFDE
 33239                           postdec2	equ	0xFDD
 33240                           plusw2	equ	0xFDB
 33241                           fsr2h	equ	0xFDA
 33242                           fsr2l	equ	0xFD9
 33243                           status	equ	0xFD8
 33244                           
 33245 ;; *************** function i2___ftpack *****************
 33246 ;; Defined at:
 33247 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 33248 ;; Parameters:    Size  Location     Type
 33249 ;;  arg             3    0[COMRAM] unsigned um
 33250 ;;  exp             1    3[COMRAM] unsigned char 
 33251 ;;  sign            1    4[COMRAM] unsigned char 
 33252 ;; Auto vars:     Size  Location     Type
 33253 ;;		None
 33254 ;; Return value:  Size  Location     Type
 33255 ;;                  3    0[COMRAM] float 
 33256 ;; Registers used:
 33257 ;;		wreg, status,2, status,0
 33258 ;; Tracked objects:
 33259 ;;		On entry : 0/0
 33260 ;;		On exit  : 0/0
 33261 ;;		Unchanged: 0/0
 33262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33263 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33265 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33266 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33267 ;;Total ram usage:        8 bytes
 33268 ;; Hardware stack levels used:    1
 33269 ;; This function calls:
 33270 ;;		Nothing
 33271 ;; This function is called by:
 33272 ;;		___altoft
 33273 ;;		___lwtoft
 33274 ;;		i2___ftadd
 33275 ;;		i2___ftdiv
 33276 ;;		i2___ftmul
 33277 ;;		i2___lltoft
 33278 ;; This function uses a non-reentrant model
 33279 ;;
 33280                           
 33281                           	psect	text129
 33282  0159A2                     __ptext129:
 33283                           	opt stack 0
 33284  0159A2                     i2___ftpack:
 33285                           	opt stack 13
 33286                           
 33287                           ;incstack = 0
 33288  0159A2  5004               	movf	i2___ftpack@exp,w,c
 33289  0159A4  B4D8               	btfsc	status,2,c
 33290  0159A6  D005               	goto	i2u1805_40
 33291  0159A8  5001               	movf	i2___ftpack@arg,w,c
 33292  0159AA  1002               	iorwf	i2___ftpack@arg+1,w,c
 33293  0159AC  1003               	iorwf	i2___ftpack@arg+2,w,c
 33294  0159AE  A4D8               	btfss	status,2,c
 33295  0159B0  D00C               	goto	i2l1757
 33296  0159B2                     i2u1805_40:
 33297  0159B2  0E00               	movlw	0
 33298  0159B4  6E01               	movwf	?i2___ftpack,c
 33299  0159B6  0E00               	movlw	0
 33300  0159B8  6E02               	movwf	?i2___ftpack+1,c
 33301  0159BA  0E00               	movlw	0
 33302  0159BC  6E03               	movwf	?i2___ftpack+2,c
 33303  0159BE  0012               	return	
 33304  0159C0  2A04               	incf	i2___ftpack@exp,f,c
 33305  0159C2  90D8               	bcf	status,0,c
 33306  0159C4  3203               	rrcf	i2___ftpack@arg+2,f,c
 33307  0159C6  3202               	rrcf	i2___ftpack@arg+1,f,c
 33308  0159C8  3201               	rrcf	i2___ftpack@arg,f,c
 33309  0159CA                     i2l1757:
 33310  0159CA  0E00               	movlw	0
 33311  0159CC  1401               	andwf	i2___ftpack@arg,w,c
 33312  0159CE  6E06               	movwf	??i2___ftpack& (0+255),c
 33313  0159D0  0E00               	movlw	0
 33314  0159D2  1402               	andwf	i2___ftpack@arg+1,w,c
 33315  0159D4  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 33316  0159D6  0EFE               	movlw	254
 33317  0159D8  1403               	andwf	i2___ftpack@arg+2,w,c
 33318  0159DA  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 33319  0159DC  5006               	movf	??i2___ftpack,w,c
 33320  0159DE  1007               	iorwf	??i2___ftpack+1,w,c
 33321  0159E0  1008               	iorwf	??i2___ftpack+2,w,c
 33322  0159E2  B4D8               	btfsc	status,2,c
 33323  0159E4  D00C               	goto	i2l1760
 33324  0159E6  D7EC               	goto	i2l1758
 33325  0159E8  2A04               	incf	i2___ftpack@exp,f,c
 33326  0159EA  0E01               	movlw	1
 33327  0159EC  2601               	addwf	i2___ftpack@arg,f,c
 33328  0159EE  0E00               	movlw	0
 33329  0159F0  2202               	addwfc	i2___ftpack@arg+1,f,c
 33330  0159F2  0E00               	movlw	0
 33331  0159F4  2203               	addwfc	i2___ftpack@arg+2,f,c
 33332  0159F6  90D8               	bcf	status,0,c
 33333  0159F8  3203               	rrcf	i2___ftpack@arg+2,f,c
 33334  0159FA  3202               	rrcf	i2___ftpack@arg+1,f,c
 33335  0159FC  3201               	rrcf	i2___ftpack@arg,f,c
 33336  0159FE                     i2l1760:
 33337  0159FE  0E00               	movlw	0
 33338  015A00  1401               	andwf	i2___ftpack@arg,w,c
 33339  015A02  6E06               	movwf	??i2___ftpack& (0+255),c
 33340  015A04  0E00               	movlw	0
 33341  015A06  1402               	andwf	i2___ftpack@arg+1,w,c
 33342  015A08  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 33343  015A0A  0EFF               	movlw	255
 33344  015A0C  1403               	andwf	i2___ftpack@arg+2,w,c
 33345  015A0E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 33346  015A10  5006               	movf	??i2___ftpack,w,c
 33347  015A12  1007               	iorwf	??i2___ftpack+1,w,c
 33348  015A14  1008               	iorwf	??i2___ftpack+2,w,c
 33349  015A16  B4D8               	btfsc	status,2,c
 33350  015A18  D006               	goto	i2l1763
 33351  015A1A  D7E6               	goto	i2l1761
 33352  015A1C  0604               	decf	i2___ftpack@exp,f,c
 33353  015A1E  90D8               	bcf	status,0,c
 33354  015A20  3601               	rlcf	i2___ftpack@arg,f,c
 33355  015A22  3602               	rlcf	i2___ftpack@arg+1,f,c
 33356  015A24  3603               	rlcf	i2___ftpack@arg+2,f,c
 33357  015A26                     i2l1763:
 33358  015A26  BE02               	btfsc	i2___ftpack@arg+1,7,c
 33359  015A28  D003               	goto	i2u1809_40
 33360  015A2A  0E02               	movlw	2
 33361  015A2C  6004               	cpfslt	i2___ftpack@exp,c
 33362  015A2E  D7F6               	goto	i2l1764
 33363  015A30                     i2u1809_40:
 33364  015A30  A004               	btfss	i2___ftpack@exp,0,c
 33365  015A32  9E02               	bcf	i2___ftpack@arg+1,7,c
 33366  015A34  90D8               	bcf	status,0,c
 33367  015A36  3204               	rrcf	i2___ftpack@exp,f,c
 33368  015A38  5004               	movf	i2___ftpack@exp,w,c
 33369  015A3A  1203               	iorwf	i2___ftpack@arg+2,f,c
 33370  015A3C  5005               	movf	i2___ftpack@sign,w,c
 33371  015A3E  A4D8               	btfss	status,2,c
 33372  015A40  8E03               	bsf	i2___ftpack@arg+2,7,c
 33373  015A42  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 33374  015A46  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 33375  015A4A  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 33376  015A4E  0012               	return	
 33377  015A50                     __end_ofi2___ftpack:
 33378                           	opt stack 0
 33379                           tosu	equ	0xFFF
 33380                           tosh	equ	0xFFE
 33381                           tosl	equ	0xFFD
 33382                           pclatu	equ	0xFFB
 33383                           pclath	equ	0xFFA
 33384                           tblptru	equ	0xFF8
 33385                           tblptrh	equ	0xFF7
 33386                           tblptrl	equ	0xFF6
 33387                           tablat	equ	0xFF5
 33388                           prodh	equ	0xFF4
 33389                           prodl	equ	0xFF3
 33390                           intcon	equ	0xFF2
 33391                           indf0	equ	0xFEF
 33392                           postinc0	equ	0xFEE
 33393                           fsr0h	equ	0xFEA
 33394                           fsr0l	equ	0xFE9
 33395                           wreg	equ	0xFE8
 33396                           indf1	equ	0xFE7
 33397                           postdec1	equ	0xFE5
 33398                           plusw1	equ	0xFE3
 33399                           fsr1h	equ	0xFE2
 33400                           fsr1l	equ	0xFE1
 33401                           bsr	equ	0xFE0
 33402                           indf2	equ	0xFDF
 33403                           postinc2	equ	0xFDE
 33404                           postdec2	equ	0xFDD
 33405                           plusw2	equ	0xFDB
 33406                           fsr2h	equ	0xFDA
 33407                           fsr2l	equ	0xFD9
 33408                           status	equ	0xFD8
 33409                           
 33410 ;; *************** function _ADCC_GetConversionResult *****************
 33411 ;; Defined at:
 33412 ;;		line 130 in file "mcc_generated_files/adcc.c"
 33413 ;; Parameters:    Size  Location     Type
 33414 ;;		None
 33415 ;; Auto vars:     Size  Location     Type
 33416 ;;		None
 33417 ;; Return value:  Size  Location     Type
 33418 ;;                  2    0[COMRAM] unsigned int 
 33419 ;; Registers used:
 33420 ;;		wreg, status,2, status,0
 33421 ;; Tracked objects:
 33422 ;;		On entry : 0/0
 33423 ;;		On exit  : 0/0
 33424 ;;		Unchanged: 0/0
 33425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33430 ;;Total ram usage:        4 bytes
 33431 ;; Hardware stack levels used:    1
 33432 ;; This function calls:
 33433 ;;		Nothing
 33434 ;; This function is called by:
 33435 ;;		_ADCPostProcessingCallback
 33436 ;; This function uses a non-reentrant model
 33437 ;;
 33438                           
 33439                           	psect	text130
 33440  01703A                     __ptext130:
 33441                           	opt stack 0
 33442  01703A                     _ADCC_GetConversionResult:
 33443                           	opt stack 15
 33444                           
 33445                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 33446                           
 33447                           ;incstack = 0
 33448  01703A  5064               	movf	3940,w,c	;volatile
 33449  01703C  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 33450  01703E  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 33451  017040  5063               	movf	3939,w,c	;volatile
 33452  017042  2403               	addwf	??_ADCC_GetConversionResult,w,c
 33453  017044  6E01               	movwf	?_ADCC_GetConversionResult,c
 33454  017046  0E00               	movlw	0
 33455  017048  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 33456  01704A  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 33457  01704C  0012               	return	
 33458  01704E                     __end_of_ADCC_GetConversionResult:
 33459                           	opt stack 0
 33460                           tosu	equ	0xFFF
 33461                           tosh	equ	0xFFE
 33462                           tosl	equ	0xFFD
 33463                           pclatu	equ	0xFFB
 33464                           pclath	equ	0xFFA
 33465                           tblptru	equ	0xFF8
 33466                           tblptrh	equ	0xFF7
 33467                           tblptrl	equ	0xFF6
 33468                           tablat	equ	0xFF5
 33469                           prodh	equ	0xFF4
 33470                           prodl	equ	0xFF3
 33471                           intcon	equ	0xFF2
 33472                           indf0	equ	0xFEF
 33473                           postinc0	equ	0xFEE
 33474                           fsr0h	equ	0xFEA
 33475                           fsr0l	equ	0xFE9
 33476                           wreg	equ	0xFE8
 33477                           indf1	equ	0xFE7
 33478                           postdec1	equ	0xFE5
 33479                           plusw1	equ	0xFE3
 33480                           fsr1h	equ	0xFE2
 33481                           fsr1l	equ	0xFE1
 33482                           bsr	equ	0xFE0
 33483                           indf2	equ	0xFDF
 33484                           postinc2	equ	0xFDE
 33485                           postdec2	equ	0xFDD
 33486                           plusw2	equ	0xFDB
 33487                           fsr2h	equ	0xFDA
 33488                           fsr2l	equ	0xFD9
 33489                           status	equ	0xFD8
 33490                           tosu	equ	0xFFF
 33491                           tosh	equ	0xFFE
 33492                           tosl	equ	0xFFD
 33493                           pclatu	equ	0xFFB
 33494                           pclath	equ	0xFFA
 33495                           tblptru	equ	0xFF8
 33496                           tblptrh	equ	0xFF7
 33497                           tblptrl	equ	0xFF6
 33498                           tablat	equ	0xFF5
 33499                           prodh	equ	0xFF4
 33500                           prodl	equ	0xFF3
 33501                           intcon	equ	0xFF2
 33502                           indf0	equ	0xFEF
 33503                           postinc0	equ	0xFEE
 33504                           fsr0h	equ	0xFEA
 33505                           fsr0l	equ	0xFE9
 33506                           wreg	equ	0xFE8
 33507                           indf1	equ	0xFE7
 33508                           postdec1	equ	0xFE5
 33509                           plusw1	equ	0xFE3
 33510                           fsr1h	equ	0xFE2
 33511                           fsr1l	equ	0xFE1
 33512                           bsr	equ	0xFE0
 33513                           indf2	equ	0xFDF
 33514                           postinc2	equ	0xFDE
 33515                           postdec2	equ	0xFDD
 33516                           plusw2	equ	0xFDB
 33517                           fsr2h	equ	0xFDA
 33518                           fsr2l	equ	0xFD9
 33519                           status	equ	0xFD8
 33520                           
 33521                           	psect	text131
 33522  000000                     __ptext131:
 33523                           	opt stack 0
 33524                           tosu	equ	0xFFF
 33525                           tosh	equ	0xFFE
 33526                           tosl	equ	0xFFD
 33527                           pclatu	equ	0xFFB
 33528                           pclath	equ	0xFFA
 33529                           tblptru	equ	0xFF8
 33530                           tblptrh	equ	0xFF7
 33531                           tblptrl	equ	0xFF6
 33532                           tablat	equ	0xFF5
 33533                           prodh	equ	0xFF4
 33534                           prodl	equ	0xFF3
 33535                           intcon	equ	0xFF2
 33536                           indf0	equ	0xFEF
 33537                           postinc0	equ	0xFEE
 33538                           fsr0h	equ	0xFEA
 33539                           fsr0l	equ	0xFE9
 33540                           wreg	equ	0xFE8
 33541                           indf1	equ	0xFE7
 33542                           postdec1	equ	0xFE5
 33543                           plusw1	equ	0xFE3
 33544                           fsr1h	equ	0xFE2
 33545                           fsr1l	equ	0xFE1
 33546                           bsr	equ	0xFE0
 33547                           indf2	equ	0xFDF
 33548                           postinc2	equ	0xFDE
 33549                           postdec2	equ	0xFDD
 33550                           plusw2	equ	0xFDB
 33551                           fsr2h	equ	0xFDA
 33552                           fsr2l	equ	0xFD9
 33553                           status	equ	0xFD8
 33554                           
 33555                           	psect	rparam
 33556  0000                     tosu	equ	0xFFF
 33557                           tosh	equ	0xFFE
 33558                           tosl	equ	0xFFD
 33559                           pclatu	equ	0xFFB
 33560                           pclath	equ	0xFFA
 33561                           tblptru	equ	0xFF8
 33562                           tblptrh	equ	0xFF7
 33563                           tblptrl	equ	0xFF6
 33564                           tablat	equ	0xFF5
 33565                           prodh	equ	0xFF4
 33566                           prodl	equ	0xFF3
 33567                           intcon	equ	0xFF2
 33568                           indf0	equ	0xFEF
 33569                           postinc0	equ	0xFEE
 33570                           fsr0h	equ	0xFEA
 33571                           fsr0l	equ	0xFE9
 33572                           wreg	equ	0xFE8
 33573                           indf1	equ	0xFE7
 33574                           postdec1	equ	0xFE5
 33575                           plusw1	equ	0xFE3
 33576                           fsr1h	equ	0xFE2
 33577                           fsr1l	equ	0xFE1
 33578                           bsr	equ	0xFE0
 33579                           indf2	equ	0xFDF
 33580                           postinc2	equ	0xFDE
 33581                           postdec2	equ	0xFDD
 33582                           plusw2	equ	0xFDB
 33583                           fsr2h	equ	0xFDA
 33584                           fsr2l	equ	0xFD9
 33585                           status	equ	0xFD8
 33586                           
 33587                           	psect	temp
 33588  00005F                     btemp:
 33589                           	opt stack 0
 33590  00005F                     	ds	1
 33591  0000                     int$flags	set	btemp
 33592  0000                     wtemp6	set	btemp+1
 33593                           tosu	equ	0xFFF
 33594                           tosh	equ	0xFFE
 33595                           tosl	equ	0xFFD
 33596                           pclatu	equ	0xFFB
 33597                           pclath	equ	0xFFA
 33598                           tblptru	equ	0xFF8
 33599                           tblptrh	equ	0xFF7
 33600                           tblptrl	equ	0xFF6
 33601                           tablat	equ	0xFF5
 33602                           prodh	equ	0xFF4
 33603                           prodl	equ	0xFF3
 33604                           intcon	equ	0xFF2
 33605                           indf0	equ	0xFEF
 33606                           postinc0	equ	0xFEE
 33607                           fsr0h	equ	0xFEA
 33608                           fsr0l	equ	0xFE9
 33609                           wreg	equ	0xFE8
 33610                           indf1	equ	0xFE7
 33611                           postdec1	equ	0xFE5
 33612                           plusw1	equ	0xFE3
 33613                           fsr1h	equ	0xFE2
 33614                           fsr1l	equ	0xFE1
 33615                           bsr	equ	0xFE0
 33616                           indf2	equ	0xFDF
 33617                           postinc2	equ	0xFDE
 33618                           postdec2	equ	0xFDD
 33619                           plusw2	equ	0xFDB
 33620                           fsr2h	equ	0xFDA
 33621                           fsr2l	equ	0xFD9
 33622                           status	equ	0xFD8


Data Sizes:
    Strings     5021
    Constant    210
    Data        38
    BSS         335
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    104     160
    BANK1           256    179     215
    BANK2           256     34     188
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@MajRevStr(BANK1[1]), STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 
		 -> STR_68(CODE[17]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@returnString(BANK1[4]), getDeviceIDString@returnString(BANK1[12]), ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@returnString(BANK1[4]), getDeviceIDString@returnString(BANK1[12]), ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_113(CODE[5]), STR_111(CODE[14]), STR_109(CODE[16]), STR_100(CODE[13]), 
		 -> STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), STR_92(CODE[15]), 
		 -> STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), STR_84(CODE[14]), 
		 -> STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), STR_76(CODE[16]), 
		 -> STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), 
		 -> STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), 
		 -> STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> getRevisionIDString@MinRevStr(BANK1[2]), STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), 
		 -> STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), 
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> getRevisionIDString@returnString(BANK1[4]), terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> getRevisionIDString@returnString(BANK1[4]), terminal_textAttributes@output_buff(BANK1[15]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 3561
		 -> STR_135(CODE[7]), printf@c(BANK1[1]), STR_134(CODE[30]), STR_133(CODE[22]), 
		 -> STR_132(CODE[21]), STR_131(CODE[27]), STR_130(CODE[29]), STR_129(CODE[41]), 
		 -> STR_128(CODE[28]), STR_127(CODE[32]), STR_126(CODE[25]), STR_125(CODE[19]), 
		 -> STR_124(CODE[16]), STR_123(CODE[15]), RAM(DATA[3561]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[3]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2031
		 -> STR_119(CODE[30]), STR_118(CODE[23]), STR_117(CODE[39]), STR_116(CODE[37]), 
		 -> STR_115(CODE[33]), STR_114(CODE[2031]), STR_112(CODE[53]), STR_110(CODE[58]), 
		 -> STR_108(CODE[71]), STR_107(CODE[63]), STR_106(CODE[37]), STR_105(CODE[46]), 
		 -> STR_104(CODE[102]), STR_103(CODE[86]), STR_101(CODE[25]), STR_99(CODE[42]), 
		 -> STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), 
		 -> STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[56]), 
		 -> STR_81(CODE[34]), STR_79(CODE[34]), STR_77(CODE[35]), STR_75(CODE[45]), 
		 -> STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), 
		 -> STR_59(CODE[49]), STR_58(CODE[64]), STR_56(CODE[34]), STR_54(CODE[82]), 
		 -> STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR const unsigned char [12] size(2) Largest target is 41
		 -> STR_134(CODE[30]), STR_133(CODE[22]), STR_132(CODE[21]), STR_131(CODE[27]), 
		 -> STR_130(CODE[29]), STR_129(CODE[41]), STR_128(CODE[28]), STR_127(CODE[32]), 
		 -> STR_126(CODE[25]), STR_125(CODE[19]), STR_124(CODE[16]), STR_123(CODE[15]), 

    getCauseOfResetString@F17476	PTR const unsigned char [12] size(2) Largest target is 41
		 -> STR_134(CODE[30]), STR_133(CODE[22]), STR_132(CODE[21]), STR_131(CODE[27]), 
		 -> STR_130(CODE[29]), STR_129(CODE[41]), STR_128(CODE[28]), STR_127(CODE[32]), 
		 -> STR_126(CODE[25]), STR_125(CODE[19]), STR_124(CODE[16]), STR_123(CODE[15]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@returnString(BANK1[4]), getDeviceIDString@returnString(BANK1[12]), ringBufferLUT@channel_name(BANK2[22]), 

    sp__getRevisionIDString	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__getDeviceIDString	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_134(CODE[30]), STR_133(CODE[22]), STR_132(CODE[21]), STR_131(CODE[27]), 
		 -> STR_130(CODE[29]), STR_129(CODE[41]), STR_128(CODE[28]), STR_127(CODE[32]), 
		 -> STR_126(CODE[25]), STR_125(CODE[19]), STR_124(CODE[16]), STR_123(CODE[15]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> getRevisionIDString@returnString(BANK1[4]), terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getRevisionIDString->_getMajorRevisionID
    _getRevisionIDString->_utoa
    _utoa->___lwdiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_strcpy
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  701833
                                            177 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   85715
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  430210
                                            168 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       40    38      2  429482
                                            162 BANK1      6     4      2
                                              0 BANK2     34    34      0
                    _TMR7_StartTimer
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                    _getCauseOfReset
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                _getRevisionIDString
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   98564
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   98564
                                            144 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   85715
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    4993
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getRevisionIDString                                 12    10      2   10228
                                             39 BANK1     12    10      2
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                             _strcat
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    2203
                                             30 BANK1      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     601
                                             23 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5363
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   16    14      2    2520
                                             29 BANK1     16    14      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2269
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                               27    25      2      68
                                             23 BANK1     27    25      2
 ---------------------------------------------------------------------------------
 (3) _getCauseOfReset                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4511
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _TMR7_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   85715
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              47    37     10   85715
                                            100 BANK1     44    34     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                    _getCauseOfReset (ARG)
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                _getRevisionIDString (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18476
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   18197
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3988
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9561
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7384
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6638
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    2278
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                     _TMR7_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR7_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _HLVD_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  353749
                                             86 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   67222
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   67222
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13741
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13246
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  286287
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          16    16      0  286287
                                             70 BANK0     16    16      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  194917
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   93583
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   85892
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   18321
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   43127
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   66625
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   61933
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6906
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   13245
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    2376
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18610
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7746
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6259
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getCauseOfReset (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _strcpy
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getRevisionIDString (ARG)
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcat (ARG)
         _strcpy (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StartTimer
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _getCauseOfReset
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _strcpy
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getRevisionIDString
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcat (ARG)
         _strcpy (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getCauseOfReset (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _strcpy
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getRevisionIDString (ARG)
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _strcat (ARG)
           _strcpy (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getCauseOfReset (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _strcpy
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getRevisionIDString (ARG)
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _strcat (ARG)
             _strcpy (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getCauseOfReset (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _strcpy
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getRevisionIDString (ARG)
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _strcat (ARG)
             _strcpy (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _getCauseOfReset (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _strcpy
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getRevisionIDString (ARG)
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _strcat (ARG)
               _strcpy (ARG)
               _utoa (ARG)
                 ___lwdiv
                 ___lwmod
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getCauseOfReset (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _strcpy
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getRevisionIDString (ARG)
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcat (ARG)
         _strcpy (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getCauseOfReset (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _strcpy
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getRevisionIDString (ARG)
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _strcat (ARG)
           _strcpy (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion
       _TMR7_StopTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2_TMR7_StopTimer
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      80      12       50.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     22      BC      10       73.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3      D7       7       84.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     68      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     311       8        0.0%
DATA                 0      0     311       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Nov 04 10:45:15 2018

                 getRevisionIDString@MajRevStr 0132                             ??i2_TMR7_StopTimer 0001  
                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 70E6  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l57 6FD2                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 713C                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
             getRevisionIDString@inputMajRevID 0131                              ??_TMR5_WriteTimer 0003  
                                   i2___ftpack 59A2                 __end_of_heartbeatTimerCallback 6B9E  
                                 ___ftadd@exp1 0136                                   ___ftadd@exp2 0135  
                                   i2___lltoft 66EA                                   ___ftadd@sign 0134  
                                          l381 6A1A                                            l382 6A16  
                                          l391 6906                                            l392 692C  
                                          l384 6A44                                            l393 692A  
                                          l388 68F0                                            l389 68EC  
                                          l959 62DC                                            l998 4CA2  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                 getRevisionIDString@MinRevStr 012F                                            _Ipk 00D1  
                                          _Vpk 00D4               getRevisionIDString@inputMinRevID 0127  
                    __end_of_getDeviceIDString 5EF2                                            _sin 3CF4  
                   currentMeasuredToPeak@Angle 0076                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                             ??_TMR7_StopTimer 0100                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___ftdiv@cntr 0140                                   ___ftdiv@sign 0145  
                                         l1000 4CDE                                           l1001 4CC2  
                                         l1003 4D26                                           l1004 4CF8  
                                         l1030 3252                                           l1031 326A  
                                         l1040 3354                                           l1032 3282  
                                         l1041 336C                                           l1033 329A  
                                         l1201 07F8                                           l1050 3462  
                                         l1042 3384                                           l1034 32B2  
                                         l1051 347A                                           l1043 339C  
                                         l1027 32E2                                           l1035 32CA  
                                         l1211 0990                                           l1203 0850  
                                         l1052 3492                                           l1036 33FC  
                                         l1044 33B4                                           l1028 323A  
                                         l1053 34AA                                           l1045 33CC  
                                         l1037 3324                                           l1029 330C  
                                         l1221 0C3E                                           l1213 0BE2  
                                         l1205 089E                                           l1054 34C2  
                                         l1038 3432                                           l1046 33E4  
                                         l1214 09CA                                           l1047 3522  
                                         l1055 34DA                                           l1039 333C  
                                         l1223 0C9A                                           l1207 08EC  
                                         l1151 007A                                           l1400 10F8  
                                         l2200 5DDE                                           l1056 34F2  
                                         l1048 344A                                           l1216 0A8E  
                                         l2201 5E1A                                           l1049 3558  
                                         l1057 350A                                           l1209 093E  
                                         l1161 0220                                           l1153 00D6  
                                         l1402 111E                                           l1250 5E9A  
                                         l1170 0326                                           l1403 115C  
                                         l1171 0416                                           l1163 02E8  
                                         l1155 014E                                           l1404 1220  
                                         l1172 033E                                           l1164 027C  
                                         l1421 1392                                           l1413 1286  
                                         l1181 04BA                                           l1173 0356  
                                         l1149 003E                                           l1350 36E8  
                                         l1430 1526                                           l1422 1384  
                                         l1270 53A6                                           l1246 5EB2  
                                         l1174 036E                                           l1431 1518  
                                         l1407 11CA                                           l1247 5E6A  
                                         l1191 0640                                           l1183 0538  
                                         l1167 0462                                           l1175 0386  
                                         l1159 01BC                                           l1360 2B60  
                                         l1424 13B6                                           l1280 53DE  
                                         l1272 53B4                                           l1248 5EE0  
                                         l1184 050C                                           l1168 0436  
                                         l1176 039E                                           l1353 37CA  
                                         l1361 2CD6                                           l1433 1580  
                                         l1425 13BA                                           l1249 5E82  
                                         l1193 0698                                           l1169 03E6  
                                         l1177 03B6                                           l1450 1694  
                                         l1426 13D2                                           l1418 1378  
                                         l1370 0E18                                           l1282 53E6  
                                         l1274 53BE                                           l1266 5370  
                                         l2154 663E                                           l1178 03CE  
                                         l1363 2D9A                                           l1443 1658  
                                         l1435 15A4                                           l1427 150C  
                                         l1419 12E4                                           l1371 0DC4  
                                         l2171 69DA                                           l2155 6638  
                                         l2163 6854                                           l1195 06F0  
                                         l1187 0590                                           l1356 2B8C  
                                         l1452 17CA                                           l1444 1600  
                                         l1428 1424                                           l1284 53EE  
                                         l1276 53C8                                           l1268 539E  
                                         l2172 69D0                                           l2164 684A  
                                         l2260 5C9A                                           l1701 6338  
                                         l1357 2A9C                                           l1437 1642  
                                         l1381 0E56                                           l2157 6658  
                                         l2253 6C6C                                           l1197 0748  
                                         l1189 05E8                                           l1702 6342  
                                         l1454 17AC                                           l1438 15BE  
                                         l1374 0F3E                                           l1390 0F12  
                                         l1286 53F6                                           l1278 53D0  
                                         l2158 664E                                           l1703 6350  
                                         l1455 16B0                                           l1391 0EE6  
                                         l1383 0E5A                                           l1367 0D6E  
                                         l1199 07A0                                           l1448 1674  
                                         l1384 0E82                                           l1368 0D80  
                                         l1288 5420                                           l2184 643E  
                                         l1457 17C4                                           l1393 0F26  
                                         l1385 0E92                                           l1377 0E52  
                                         l1369 0E44                                           l2177 6756  
                                         l2185 646E                                           l1802 43B4  
                                         l1458 1734                                           l1378 0FA6  
                                         l1394 0F38                                           l1386 0E8C  
                                         l2178 6750                                           l2258 5CA2  
                                         l1811 43F2                                           l1803 43AA  
                                         l1731 4B1E                                           l1395 1530  
                                         l2259 5C30                                           l2187 648A  
                                         l1812 43E8                                           l1732 4B0E  
                                         l1396 0FBA                                           l2188 647A  
                                         l1725 4A50                                           l1397 0FFC  
                                         l1709 6C2C                                           l1821 519E  
                                         l1901 5A94                                           l1814 4416  
                                         l1662 55E6                                           l1902 5AD6  
                                         l1815 4432                                           l1727 4A6E  
                                         l1831 4824                                           l1399 1090  
                                         l1823 51C6                                           l1671 56AC  
                                         l1663 55E0                                           l2199 5E46  
                                         l1760 58A2                                           l1816 4462  
                                         l1728 4AB0                                           l1832 485E  
                                         l1824 5204                                           l1761 588C  
                                         l1737 4B42                                           l1729 4AE0  
                                         l1841 48E6                                           l1833 4886  
                                         l1681 5F08                                           l1825 522A  
                                         l1665 5628                                           l1930 5F9C  
                                         l1738 4B36                                           l1842 48DA  
                                         l1690 5F6E                                           l1682 5F18  
                                         l1763 58CA                                           l1835 48C2  
                                         l1764 58C0                                           l1940 64B0  
                                         l1836 48B2                                           l1684 5F36  
                                         l1860 4F52                                           l1668 5678  
                                         l1757 586E                                           l1933 5FDC  
                                         l1829 47F8                                           l1685 5F2E  
                                         l1853 4EC0                                           l1669 563A  
                                         l1846 5BCE                                           l1758 5864  
                                         l1870 6AF4                                           l1934 5FEA  
                                         l1950 66A0                                           l1694 62FE  
                         _ADCC_StartConversion 7110                                           l1847 5BFE  
                                         l1943 64E4                                           l1951 6694  
                                         l1695 630A                                           l1855 4EE8  
                                         l1864 6E9E                                           l1792 4358  
                                         l1944 64F2                                           l1688 5F56  
                                         l1856 4F1A                                           l1929 5FA8  
                                         l1689 5F60                                           l1697 6320  
                                         l1857 4F2A                                           l1882 4E68  
                                         l1874 4DCC                                           l1698 6318  
                                         l1883 4E5C                                           l1939 64BC  
                                         l1859 4F42                                           l1788 432E  
                                         l1876 4E44                                           l1797 43BE  
                                         l1885 4E84                                           l1877 4E34  
                                         l1982 6814                                           l1983 680C  
                                         l1992 6A6E                                           l1889 6F5A  
                                         l1993 6A66                                           l1986 6834  
                                         l1987 683E                                           l1899 5A58  
                                         l1996 6A86                                           l1997 6A90  
                                         ?_sin 0066                                           l9590 5C2A  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC4  
                                         STR_2 FFAF                                           STR_3 FFB8  
                                         STR_4 F450                                           STR_6 FFAF  
                                         STR_7 FFB8                                           STR_9 FFBC  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 0182                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                            ??_TMR7_StartTimer 0117                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                             __end_of_ADCC_ISR 6E60                                           _Irms 00CB  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 68E6  
                                         _Vrms 00C8                                           _acos 679E  
                                         _fabs 6D8A                                           _atan 4118  
                                         _asin 3A88                                           _atoi 55DE  
                                         _main 6272                                           _line 0242  
                                 ___ftpack@arg 0117                                   ___ftpack@exp 011A  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                                           _sqrt 4634  
                                         _utoa 5A50                    getCauseOfResetString@F17476 02A4  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 01CD  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 3216  
                 __end_of_EUSART2_Transmit_ISR 6CBE                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 7134                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 004A  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01CF  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0126                               __end_of_HLVD_ISR 7144  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 6FD8  
                     ?_terminal_textAttributes 0190                              ??_TMR7_WriteTimer 0102  
                                        l11124 5C30                                          l12126 026C  
                                        l10704 1384                                          l12136 02DE  
                                        l10660 11A4                                          l10652 115C  
                                        l10814 17AC                                          l12262 09BA  
                                        l10680 128A                                          l11536 5674  
                                        l12280 0A8E                                          l12272 0A00  
                                        l10842 647A                                          l10764 15C2  
                                        l10588 0EE6                                          l12278 0A36  
                                        l10778 1604                                          l15350 5ED6  
                                        l12686 4C92                                          l12696 4CB8  
                                        l15348 5ECC                                          ?_acos 008E  
                                        ?_fabs 0027                                          ?_atan 0058  
                                        ?_asin 0079                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 012B                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                              __end_of___awdiv 5F78                                          _ADPRE 000F5E  
                              __end_of___ftadd 4488                                          STR_10 FFC0  
                                        STR_11 FFF5                                          STR_12 FFC9  
                                        STR_20 FFC8                                          STR_13 FD6E  
                                        STR_21 FFCB                                          STR_30 FF4C  
                                        STR_14 FFDE                                          STR_22 FFD1  
                                        STR_15 FFE4                                          STR_23 FFD7  
                                        STR_31 FFCE                                          STR_40 F716  
                                        STR_16 FFF0                                          STR_24 FFDD  
                                        STR_32 FFD4                                          STR_41 FE96  
                                        STR_17 FFF8                                          STR_25 FFE3  
                                        STR_33 FFDA                                          STR_18 FFC9  
                                        STR_42 FFAF                                          STR_26 FFE9  
                                        STR_34 FFE0                                          STR_50 FFB4  
                                        STR_43 FFB8                                          STR_19 FFFA  
                                        STR_27 FFEF                                          STR_35 FFE6  
                                        STR_51 FDFA                                          STR_28 FFEF  
                                        STR_36 FFEC                                          STR_44 FF9F  
                                        STR_60 FF66                                          STR_52 F94E  
                              __end_of___awmod 635A                                          STR_29 FFFA  
                                        STR_45 FFAF                                          STR_37 FFF2  
                                        STR_61 FFA5                                          STR_53 FF5B  
                                        STR_38 FFF2                                          STR_46 FFB8  
                                        STR_62 FF93                                          STR_70 FD15  
                                        STR_54 F680                                          STR_39 FFFC  
                                        STR_63 FF8C                                          STR_55 FF1C  
                                        STR_71 FE7D                                          STR_47 FE5D  
                                        STR_64 FEF3                                          STR_80 FDD7  
                                        STR_72 FD85                                          STR_56 FB57  
                                        STR_48 F8B9                                          _ADRPT 000F66  
                                        STR_49 FF99                                          STR_57 FF7B  
                                        STR_65 FF01                                          STR_73 FE0B  
                                        STR_81 FB35                                          STR_82 FF29  
                                        STR_66 FEC9                                          STR_90 FD9A  
                                        STR_58 F75B                                          STR_74 F719  
                                        STR_67 FD5A                                          STR_91 FB9B  
                                        STR_75 F9AB                                          STR_59 F8ED  
                                        STR_83 F84C                                          STR_84 FED7  
                                        STR_92 FEAB                                          STR_76 FE3D  
                                        STR_68 FE1C                                          STR_77 FB12  
                                        STR_85 FAA3                                          STR_69 F91E  
                                        STR_93 F814                                          STR_94 FEBA  
                                        STR_78 FE9C                                          STR_86 FCB0  
                                        STR_87 FC00                                          STR_79 FBBD  
                                        STR_95 FA54                                          STR_96 FE6D  
                                        STR_88 FDAF                                          STR_89 FB79  
                                        STR_97 FA2B                                          STR_98 FF4F  
                                        STR_99 F9D8                                __end_of___ftdiv 525C  
                              __end_of___ftneg 6EAC                                __end_of___lldiv 5FFC  
                                        ?_sqrt 0066                                          ?_utoa 011E  
                                        u12000 48EC                                __end_of___ftmul 4F8C  
                                        u11311 42EC                                          u11321 4300  
                                        u11410 4388                                          u12211 4DB0  
                                        u12300 5FAC                                          u13020 6682  
                              ___awdiv@divisor 011F                                          u11350 4320  
                                        u12230 4DEA                                          u12070 4B48  
                                        u13110 6A72                                __end_of___llmod 6504  
                                        u11521 4EA8                                          u11450 43C6  
                                        u12330 64C0                                __end_of___ftsub 6B1E  
                                        u12235 4DE2                                          u13027 6678  
                                        u11380 434A                                __end_of___fttol 4E96  
                                        u11541 4ED0                                          u12270 4E6E  
                                        u11630 5F3A                                          u12510 0EC0  
                                        u13230 6778                                          u13310 5C62  
                                        u14110 5E5E                                          u11480 43FA  
                                        u12520 0EC6                                          u13080 6818  
                                        u15000 0A28                                          u14201 51AE  
                                        u10930 5856                                          u12450 0DAC  
                                        u13250 6A04                                          u15010 0A36  
                                        u12700 11A4                                          u12620 1034  
                                        u12517 0EB6                                          u13237 676E  
                                        u12550 0F08                                          u12470 0DFC  
                                        u13510 688C                                          u14071 6D34  
                                        u12480 0E3A                                          u11921 47DC  
                                        u12625 102A                                          u12457 0DA2  
                                        u13257 69FA                                          u10970 58D4  
                                        u11690 6324                                          u12570 0F6E  
                                        u12740 12C8                                          u12660 112E  
                                        u11941 4808                                          u12557 0EFE  
                                        u12477 0DF2                                          u14181 5186  
                                        u14085 6C06                                          u12670 116E  
                                        u12487 0E30                                          _T5CLK 000FC6  
                                        u12577 0F64                                          u12770 13A0  
                                        u12780 13B0                                          u12950 17DC  
                                        u12960 180C                                          _T5CON 000FC3  
                                        u14730 0114                                          u12967 1802  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                                        u14780 02DE                                          u15740 4CB8  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        u14990 0A00                                __end_of___lwdiv 6848  
                                        _T6HLT 000FB2                                          i1l223 007C  
                                        i1l225 009C                                          i1l403 6CB8  
                                        i1l227 00A8                                          i1l404 6CB4  
                                        i1l229 00B2                                __end_of___lwmod 6A9A  
                                        i2l212 5720                                          u19877 627E  
                                        i2l214 572C                                          i2l216 5736  
                                        i1l640 6EC4                                          i2l410 5924  
                                        i2l411 5946                                          i1l900 6B9A  
                                        i2l414 594A                                          i2l416 599A  
                                        i2l409 5900                                          i1l931 578A  
                                        i1l940 57CA                                          i1l932 5798  
                                        _T6TMR 000FAF                                          i1l941 57D8  
                                        i2l391 699A                                          i2l392 69C0  
                                        i1l952 582A                                          i1l944 57EA  
                                        i1l936 57AA                                          i2l393 69BE  
                                        i1l953 5838                                          i1l945 57F8  
                                        i1l937 57B8                                          i2l714 6FEA  
                                        _T6RST 000FB4                                          i2l388 6984  
                                        i1l948 580A                                          i2l389 6980  
                                        i1l949 5818                                          i2l904 291C  
                                        i2l920 2582                                          i2l913 2404  
                                        i2l905 22D4                                          i2l923 26F6  
                                        i2l915 2492                                          i2l916 2618  
                                        i2l925 27A0                                          i2l917 2568  
                                        i2l909 233A                                          i2l918 2532  
                                        i2l927 290E                                          i2l919 255A  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 4B5A                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a EC46  
                           __end_ofsin@coeff_b EC61                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 00CE                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                   ___lltoft@exp 0127  
                                __CFG_WRT6$OFF 000000                        ??_ADCC_IsConversionDone 0100  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 6D26                               __end_of_TMR6_ISR 6E38  
                             __end_of_TMR7_ISR 6CF2                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                                  ___awtoft@sign 0122  
                    ??_terminal_ringBufferPull 01A8                                __end_of_dpowers EBB7  
                                        acos@x 008E                                          fabs@d 0027  
                                   i2scale@scl 003C                                          _floor 5426  
                                        _frexp 6182                                          _errno 0240  
                        ?_ADCC_StartConversion 0001                                          _scale 2946  
                              __end_of_isdigit 6F62                                          atan@f 0058  
                                        atan@x 0063                                          atan@y 0060  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 011B  
                                        asin@x 0079                                          asin@y 0088  
                                        atoi@a 0130                                          atoi@s 012B  
                                        _putch 70AE                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        sin@x2 006F                                          tablat 000FF5  
                             __end_ofi2___ftge 5D4E                               __end_ofi2___wmul 6EF8  
                                        plusw1 000FE3                                          plusw2 000FDB  
                               ??_EUSART2_Read 0117                                          sqrt@a 0066  
                                        sqrt@i 006F                                          utoa@c 0126  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          utoa@v 0124  
                                        status 000FD8                                          wtemp6 0060  
                              __end_of_strncmp 5CBE                                __end_of_strncpy 649C  
                             __end_ofi2_fround 3A88                 ?_INTERRUPT_InterruptManagerLow 0001  
                                i2___ftdiv@exp 001F                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___ftmul 00F4  
                           __size_ofi2___llmod 0066                             __size_ofi2___ftsub 0042  
                           __size_ofi2___fttol 00F4                               __end_ofi2_printf 22CE  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 70F4         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 70E6                                _TMR5_Initialize 6932  
                              __initialization 6102                              i2___lldiv@divisor 0005  
                                 __end_of_acos 67F4                                   __end_of_fabs 6DBA  
                                 __end_of_atan 42DA                                   __end_of_asin 3CF4  
                                 __end_of_atoi 56B6                                   __end_of_main 62E8  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 0030  
                                 __end_of_sqrt 47CA                                     i2printf@ap 0076  
                                 __end_of_utoa 5AFA                                     i2printf@cp 0074  
                        __end_of_ringBufferLUT 0D60                                 __CFG_SCANE$OFF 000000  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                                    ?i2___ftpack 0001  
                                       ??_acos 005E                                         ??_fabs 002A  
                                       ??_atan 005B                                    ?i2___lltoft 0009  
                                       ??_asin 005E                                         ??_atoi 012D  
                                       ??_main 01B1                                  ___fttol@sign1 015E  
                     _TMR5_SetInterruptHandler 70D8                                         ??_sqrt 0069  
                                       ??_utoa 0124                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 008A                           __size_of__tdiv_to_l_ 0134  
                       getUserID@initialOffset 0127                                _TMR6_Initialize 6D58  
                           _TRIAC_Firing_Angle 00FC                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 6434  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01D4                                         ?_floor 0056  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               __end_of___altoft 6272  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 0155                                         STR_100 FF36  
                                       _ADLTHL 000F6A                                         STR_101 FCE3  
                                       STR_102 FCFC                                         STR_110 F7DA  
                                       STR_111 FEE5                                         STR_103 F62A  
                                       STR_120 FF43                                         STR_112 F884  
                                       STR_104 F5C4                                         STR_113 FFAA  
                                       STR_121 FF0F                                         STR_105 F97D  
                                       STR_122 FF71                                         STR_106 FAED  
                                       STR_114 EC61                                         _ADRESH 000F64  
                                       STR_130 FC5C                                         STR_115 FBDF  
                                       STR_107 F79B                                         STR_131 FC95  
                                       STR_123 FE8D                                         STR_116 FAC8  
                                       STR_108 F6D2                                         STR_132 FD70  
                                       STR_124 FE2D                                         STR_109 FE4D  
                                       STR_117 FA7C                                         STR_133 FD44  
                                       STR_125 FDC4                                         STR_118 FD2D  
                                       _ADRESL 000F63                                         STR_134 FC20  
                                       STR_126 FCCA                                         STR_135 FF85  
                                       STR_119 FC3E                                         STR_127 FA0B  
                                       STR_136 FDE9                                         STR_128 FC79  
                                       STR_129 FA02                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                               __end_of___awtoft 6C50  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 58F4                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 66EA  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l2020 3E5A  
                                       i2l2021 3F44                                         i2l1400 1BAC  
                                       i2l2018 3D20                                         i2l1402 1BD2  
                                       i2l2019 3E02                                         i2l1403 1C12  
                                       i2l1404 1CDA                                         i2l1421 1E4A  
                                       i2l1413 1D40                                         i2l2230 5454  
                                       i2l2150 46C6                                         i2l1350 396A  
                                       i2l1430 1FDC                                         i2l1422 1E3C  
                                       i2l1431 1FCE                                         i2l1407 1C82  
                                       i2l2232 547C                                         i2l1360 2FC8  
                                       i2l1424 1E6E                                         i2l2233 54F6  
                                       i2l1353 3A42                                         i2l1361 3130  
                                       i2l1433 2036                                         i2l1425 1E72  
                                       i2l1450 214A                                         i2l1426 1E8A  
                                       i2l1418 1E30                                         i2l1370 18D0  
                                       i2l2147 4674                                         i2l1363 31EC  
                                       i2l1443 210E                                         i2l1435 205A  
                                       i2l1427 1FC2                                         i2l1419 1D9E  
                                       i2l1371 187E                                         i2l2148 4664  
                                       i2l1356 2FF2                                         i2l1452 227E  
                                       i2l1444 20B6                                         i2l1428 1EDC  
                                       i2l2229 5462                                         i2l1605 3AD2  
                                       i2l1701 63A8                                         i2l1357 2F0C  
                                       i2l1437 20F8                                         i2l1381 190E  
                                       i2l2238 619E                                         i2l1702 63B2  
                                       i2l1454 2260                                         i2l1438 2074  
                                       i2l1374 19F6                                         i2l1390 19CA  
                                       i2l1551 6228                                         i2l1607 3BC6  
                                       i2l1703 63C0                                         i2l1455 2166  
                                       i2l1391 199E                                         i2l1383 1912  
                                       i2l1367 1828                                         i2l1552 621C  
                                       i2l1624 414E                                         i2l1608 3C76  
                                       i2l1448 212A                                         i2l1384 193A  
                                       i2l1368 183A                                         i2l1721 6DAC  
                                       i2l1457 2278                                         i2l1393 19DE  
                                       i2l1385 194A                                         i2l1377 190A  
                                       i2l1369 18FC                                         i2l1802 4560  
                                       i2l1626 41A6                                         i2l1458 21E8  
                                       i2l1378 1A5E                                         i2l1394 19F0  
                                       i2l1386 1944                                         i2l1811 459E  
                                       i2l1803 4556                                         i2l1715 55C8  
                                       i2l1627 42AA                                         i2l1731 4C46  
                                       i2l1395 1FE6                                         i2l1812 4594  
                                       i2l1716 5548                                         i2l1732 4C36  
                                       i2l1396 1A72                                         i2l1821 5284  
                                       i2l1629 42BC                                         i2l1725 4B78  
                                       i2l1397 1AB4                                         i2l1814 45C2  
                                       i2l1815 45DE                                         i2l1823 52AC  
                                       i2l1727 4B96                                         i2l1831 4956  
                                       i2l1399 1B46                                         i2l1760 59FE  
                                       i2l1816 460E                                         i2l1824 52EA  
                                       i2l1728 4BD8                                         i2l1832 4990  
                                       i2l1761 59E8                                         i2l1825 5310  
                                       i2l1737 4C6A                                         i2l1729 4C08  
                                       i2l1841 4A18                                         i2l1833 49B8  
                                       i2l1681 6010                                         i2l1930 60A2  
                                       i2l1738 4C5E                                         i2l1842 4A0C  
                                       i2l1690 6076                                         i2l1682 6020  
                                       i2l1763 5A26                                         i2l1835 49F4  
                                       i2l1764 5A1C                                         i2l1860 513A  
                                       i2l1940 6516                                         i2l1836 49E4  
                                       i2l1684 603E                                         i2l1757 59CA  
                                       i2l1853 50A8                                         i2l1933 60E2  
                                       i2l1829 492A                                         i2l1685 6036  
                                       i2l1758 59C0                                         i2l1846 5CEE  
                                       i2l1870 6B36                                         i2l1934 60F0  
                                       i2l1950 66FC                                         i2l1694 636E  
                                       i2l1855 50D0                                         i2l1847 5D1E  
                                       i2l1943 654A                                         i2l1951 66F0  
                                       i2l1695 637A                                         i2l1792 4504  
                                       i2l1856 5102                                         i2l1864 6F0E  
                                       i2l1944 6558                                         i2l1688 605E  
                                       i2l1857 5112                                         i2l1929 60AE  
                                       i2l1689 6068                                         i2l1697 6390  
                                       i2l1882 5052                                         i2l1874 4FB8  
                                       i2l1698 6388                                         i2l1859 512A  
                                       i2l1883 5046                                         i2l1939 6522  
                                       i2l1788 44DA                                         i2l1876 502E  
                                       i2l1797 456A                                         i2l1885 506E  
                                       i2l1877 501E                                         i2l1889 6F98  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 0039                               __end_of___lwtoft 6F40  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 6898                                   i2_scale$4113 0039  
                             __end_of__powers_ EBDE           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 4D9E                                         ___ftge 5B9C  
                                       ___wmul 6DE8                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                                    ??___lwdiv 011B                                      ??___lwmod 011B  
                     ??_terminal_setCursorHome 0190                                         _fround 357E  
                                       clear_0 6148                                         clear_1 6154  
                                       clear_2 6160                                         clear_3 6170  
                         _eusart2RxStringReady 07F8                               ___awdiv@quotient 0123  
                              ___awmod@divisor 0119                                ___awmod@counter 011B  
                                       _printf 0D60                                         _strcat 662E  
                                       _strchr 6C50                                         _strcmp 6848  
                                       _strcpy 69C6                                      ?_ADCC_ISR 0001  
                                       _strlen 6746                                 i2___awdiv@sign 000C  
                                       _strstr 5DDC                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                 getCauseOfResetString@strings 0119                               _background_color 00EA  
                              _ADCC_Initialize 656A                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 22CE                                 _PMD_Initialize 6FA0  
                      FLASH_ReadWord@flashAddr 011B                                      ??_isdigit 0117  
                            __end_ofi2___awdiv 6080                              __end_ofi2___ftadd 4634  
                            __end_ofi2___awmod 63CA                              __end_ofi2___ftdiv 5342  
                               i2___ftadd@exp1 004B                                 i2___ftadd@exp2 004A  
                            __end_ofi2___ftneg 6F1C                              __end_ofi2___lldiv 6102  
                                       sin@sgn 0072                              __end_ofi2___ftmul 5174  
                            __end_ofi2___llmod 656A                              __end_ofi2___ftsub 6B60  
                            __end_ofi2___fttol 5080                                 i2___ftadd@sign 0049  
                                 __mediumconst EB8E                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 6C88                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                         sqrt@og 006C  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 0097  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 0190                  __size_of_INTERRUPT_Initialize 0014  
                              _eusart2RxBuffer 0200                        __end_of_TMR5_Initialize 697C  
                            __end_ofi2_isdigit 6FA0                   __size_of_getRevisionIDString 008E  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B6  
                            _SYSTEM_Initialize 6DBA           __end_of_TMR7_DefaultInterruptHandler 7158  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 7156  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 6178  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                      ?_HLVD_ISR 0001  
                               i2printf@tmpval 007C                                     ___ftge@ff1 0117  
                                   ___ftge@ff2 011A                             ?_SYSTEM_Initialize 0001  
                          __size_ofi2___lltoft 005C                                   eval_poly@res 0055  
                                ___rparam_used 000001                                     ___ftdiv@f1 0137  
                                   ___ftdiv@f2 013A                                     ___ftdiv@f3 0141  
                              _TMR5_WriteTimer 6FD8                                     ___ftneg@f1 0123  
                                   ___awtoft@c 011F                                 i2___ftpack@arg 0001  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                               i2___ftpack@exp 0004                             i2__tdiv_to_l_@cntr 000E  
                            i2___llmod@counter 0016                             i2__tdiv_to_l_@quot 000A  
                                   ___ftmul@f1 0146                                     ___ftmul@f2 0149  
            terminal_ringBufferPull@charNumber 01AB                                     ___ftsub@f1 0137  
                                   ___ftsub@f2 013A                     __end_of_getMajorRevisionID 6C16  
                                   ___fttol@f1 0155                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 0190  
                                 __pidataBANK0 70A0                                   __pidataBANK2 700E  
                          ??_SYSTEM_Initialize 011C                                     ___lltoft@c 011F  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                                  __end_of_floor 5504  
                                __end_of_frexp 61FA                                 i2___ftmul@cntr 0034  
                                __end_of_scale 2DC6                                 i2___ftmul@sign 0035  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 70BC  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0071  
                     ??_terminal_clearTerminal 0190                                    i2printf@len 0072  
                                  i2printf@exp 007A                                    i2printf@val 0083  
                      __end_of_TMR6_Initialize 6D8A                       __size_of_getCauseOfReset 00E4  
                       __end_of_PMD_Initialize 6FBC                                 i2___fttol@exp1 004B  
                        _getCauseOfResetString 6D26                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 6A56  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 48FE  
                                   __div_to_l_ 4A30                                _TMR7_StartTimer 7144  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 003C  
                                    ?i2_fround 0036                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 6DE8                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00ED                                  _eusart2TxHead 01D6  
                                   __pbssBANK0 00C8                                     __pbssBANK1 01B3  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01D3                                  _eusart2TxTail 01D5  
                           __size_of_eval_poly 00DA                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 68E6  
                           __size_of_peakToRMS 01C6                                     ??_HLVD_ISR 0100  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011A                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 6EAC                               ??_FVR_Initialize 0117  
                               _peakToRMS$4097 00A0                                 _peakToRMS$4098 009A  
                               _peakToRMS$4099 009D                          ringBufferLUT@arg_buff 029B  
                                  _Irms_offset 00F1                                        ?___ftge 0117  
            terminal_ringBufferPull@index_2250 01AD                                        ?___wmul 0125  
                        _currentMeasuredToPeak 65CE                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 70D8                        __end_of_ADCC_Initialize 65CE  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                      ?___altoft 004C  
                                      ?_fround 0155                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                      ?___awtoft 011F  
                                    ?___ftpack 0117                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0164                                ?_PMD_Initialize 0001  
                                    ?___lltoft 011F                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0030                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 6FF4                                      ?___lwtoft 0009  
                                      ?_strstr 0126                                     ??i2___wmul 0013  
                               _FLASH_ReadWord 6A9A                                        u1440_41 493A  
                                      u1438_41 490E                                        u1812_41 4498  
                                      u1813_41 44AC                                        i2l15102 2078  
                                      i2l14144 5D4A                                        i2l15042 1E3C  
                                      i2l15018 1D44                                        i2l15116 20BA  
                                      i2l15152 2260                                        u1833_41 5090  
                                      u1842_41 526C                                        u1835_41 50B8  
                                      i2l14926 199E                                        u1844_41 5294  
                                      i2l14990 1C12                                        i2l14998 1C5C  
                                      u1863_41 4F9C                                        _SP2BRGH 000EF4  
                                   ??i2_fround 0039                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 59A2                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 0068                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 712A                       _acquisitionTimerCallback 5782  
                      __end_of_TMR5_WriteTimer 6FF4               __size_of_terminal_textAttributes 0368  
                                      i2_scale 2DC6                               ?_TMR5_Initialize 0001  
                                      i2_putch 712A           __end_of_terminal_textAttributesReset 7060  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 704E  
                            __end_of__npowers_ EC05                                        __Hparam 0000  
                                   _scale$3913 0158                                        __Lparam 0000  
                            __end_of_getUserID 6BDA                     ??_TMR5_SetInterruptHandler 011A  
                               _adc_error_flag 02F1                                __size_of___ftge 0092  
                                      ___awdiv 5EF2                                        ___ftadd 42DA  
                                      ___awmod 62E8                                        ___ftdiv 5174  
                                      ___ftneg 6E86                        __end_of_TMR7_StartTimer 714A  
                                      ___lldiv 5F78                                __size_of___wmul 0028  
                                      ___ftmul 4E96                                        ___llmod 649C  
                                      ___ftsub 6ADC                                        ___fttol 4D9E  
                                      ___lwdiv 67F4                                        ___lwmod 6A56  
                                   ??___altoft 0050                         __end_of_FLASH_ReadByte 700E  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 6ADC  
                                      __pcinit 6102                                   ??i2___ftpack 0006  
                                   ??___awtoft 0122                                     ??___ftpack 011C  
                            __end_of_eval_poly 55DE                                __size_of_fround 0294  
                             ?_TMR6_Initialize 0001                        i2___ftmul@f3_as_product 0031  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                 ??i2___lltoft 000D                                     ??___lltoft 0123  
                                      __ptext0 6272                                        __ptext1 7060  
                                      __ptext2 4C82                                        __ptext3 0000  
                                      __ptext4 704E                                        __ptext5 3216  
                                      __ptext6 6434                                        __ptext7 7070  
                                      __ptext8 5DDC                                        __ptext9 5C2E  
                            __end_of_peakToRMS 4118                                __size_of_printf 0ABA  
                currentMeasuredToPeak@Measured 0073                                     ??___lwtoft 000C  
                   ringBufferLUT@angle_degrees 0298                                  i2_fround$4111 003C  
                                i2_fround$4112 0039                                __size_of_strcat 005E  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                              __size_of_strcpy 0048                                __size_of_strlen 0058  
                            __end_of_hexpowers EC25                         getCauseOfResetString@r 0131  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers EB8F                          _OSCILLATOR_Initialize 6FBC  
                       ??_EUSART2_Transmit_ISR 0100                                   i2fround@prec 003F  
                                      _isdigit 6F40                                atan@val_squared 0067  
                                 __size_of_sin 025E                               ___awmod@dividend 0117  
   ADCPostProcessingCallback@currentADCChannel 00AF                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 006A                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 007C                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02A0                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 5C2E                                 __pintcode_body 56B6  
                                      _strncpy 6434                           end_of_initialization 6178  
                      __end_of_TMR7_WriteTimer 6ED2                         _terminal_setCursorHome 7060  
                                    _PCON0bits 000FD7                               ?_TMR7_Initialize 0001  
                                      int_func 56B6                            i2___wmul@multiplier 000F  
                                    _T6RSTbits 000FB4                        __size_of_TMR7_StopTimer 0006  
                                    i1u1961_28 6E24                                      i1u1963_28 6CDE  
                                    i2u1341_40 6042                                      i1u1981_28 0086  
                           __end_ofi2___ftpack 5A50                                      i2u1450_40 60B2  
                                    i2u1347_40 6394                                      i2u1453_40 6526  
                                    i2u1437_40 4C70                                      i2u1446_40 4A1E  
                                    i2u1805_40 59B2                                      i2u1822_40 4534  
                                    i2u1910_40 197E                                      i2u1903_40 1866  
                                    i2u1903_47 185C                                      i2u1816_40 44CC  
                                    i2u1920_40 1AEC                                      i2u1920_45 1AE2  
                                    i2u1809_40 5A30                                      i2u1913_40 19C0  
                                    i2u1905_40 18B4                                      i2u1913_47 19B6  
                                    i2u1905_47 18AA                                      i2u1826_40 4572  
                                    i2u1906_40 18F2                                      i2u1906_47 18E8  
                                    i2u1819_40 44F6                                      i2u1915_40 1A26  
                                    i2u1915_47 1A1C                                      i2u1932_40 1D82  
                                    i2u1924_40 1BE4                                      i2u1829_40 45A6  
                                    i2u1925_40 1C24                                      i2u1909_40 1978  
                           __end_ofi2___lltoft 6746                                      i2u1909_47 196E  
                                    i2u1862_40 61C6                                      i2u1862_48 61C8  
                                    i2u1935_40 1E58                                      i2u1880_40 3DFE  
                                    i2u1856_40 4172                                      i2u1936_40 1E68  
                                    i2u1928_40 1C5C                                      i2u1865_40 4FD6  
                                    i2u1881_40 3E00                                      i2u1857_40 4174  
                                    i2u1953_40 2290                                      i2u1865_45 4FCE  
                                    i2u1954_40 22C0                                ___lldiv@divisor 011B  
                                    i2u1954_47 22B6                                      i2u1876_40 546E  
                                    i2u1869_40 5058                                      i2u1972_48 570A  
                                    i2u1894_40 23F6                                      i2u1957_48 6D12  
                                    i2u1967_40 593A                                      i2u1959_48 6E4C  
                              ___lldiv@counter 0123                             _EUSART2_Initialize 63CA  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0073  
                  getDeviceIDString@inputDevID 011D                                i2_EUSART2_Write 697C  
                                ??_getDeviceID 0124                                        printf@c 018F  
                                      printf@f 0164                       ??_heartbeatTimerCallback 0100  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
               _ADCPostProcessingCallback$4100 00B3                 _ADCPostProcessingCallback$4101 00B0  
               _ADCPostProcessingCallback$4102 00A6                 _ADCPostProcessingCallback$4103 00A9  
               _ADCPostProcessingCallback$4104 00AC                               ?_ADCC_Initialize 0001  
                                      utoa@buf 011E                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                        utoa@val 0120  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01AF  
                          _getRevisionIDString 5D4E                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 70CA  
                        _TMR5_InterruptHandler 01BE                               i2_TMR7_StopTimer 7150  
                     ?_terminal_ringBufferPull 0001                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 7110  
                  _ADCC_SetADIInterruptHandler 7102                                      i2___awdiv 5FFC  
                                    i2___ftadd 4488                                      i2___awmod 635A  
                             __CFG_FEXTOSC$ECH 000000                                      i2___ftdiv 525C  
                                    i2___ftneg 6EF8                                      i2___lldiv 6080  
                                    i2___ftmul 5080                                      i2___llmod 6504  
                                    i2___ftsub 6B1E                                      i2___fttol 4F8C  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                         ?_getRevisionIDString 0127                         _terminal_clearTerminal 7080  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 0D60  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 6A0E                             i2___llmod@dividend 000E  
                              _HLVD_Initialize 7090                             i2___awdiv@dividend 0007  
                              i2___ftpack@sign 0005                                      i2_isdigit 6F82  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0008  
                                  ___ftmul@exp 014F                                      _Avg_Power 01BB  
                 __end_of_INTERRUPT_Initialize 703A                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                               ?_TMR7_StartTimer 0001  
                               __end_of___ftge 5C2E                  __end_of_terminal_printNewline 7080  
                               __end_of___wmul 6E10                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07F8  
                          __end_of_getDeviceID 6F82                                 __end_of_fround 3812  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 005C                               i2___wmul@product 0013  
                               __end_of_printf 181A                                  i2_printf$4114 006E  
                           _getMajorRevisionID 6BDA                                 __end_of_strcat 668C  
                               __end_of_strchr 6C88                                 __end_of_strcmp 6898  
                                 i2printf@flag 0078                                 __end_of_strcpy 6A0E  
                               __end_of_strlen 679E                                   i2printf@fval 0080  
                               __end_of_strstr 5E68                                   i2printf@prec 0087  
                          start_initialization 6102                              __size_ofi2___ftge 0090  
                                   eval_poly@d 004F                                     eval_poly@n 0051  
                                   eval_poly@x 004C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 715C  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 715A  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 48FE  
                                  __end_of_sin 3F52                                      i2printf@c 0089  
                                    i2printf@f 0066                                i2___fttol@sign1 0046  
                      _terminal_textAttributes 3216  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 0040  
                                   ?i2___awmod 0001                                     ?i2___ftdiv 0015  
                                   ?i2___ftneg 0024                                     ?i2___lldiv 0001  
                                   ?i2___ftmul 0027                                     ?i2___llmod 000E  
                                   ?i2___ftsub 0060                                     ?i2___fttol 003D  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                          ??_getRevisionIDString 0129  
                            __size_ofi2_printf 0AB4                          __end_of_EUSART2_Write 6932  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0193                        __end_ofi2_EUSART2_Write 69C6  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 00EE  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0117  
                                     ??___ftge 011D                                       ??___wmul 0129  
              __size_of_heartbeatTimerCallback 003E                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F1                                    __pdataBANK2 02A4  
                                     ??_fround 0158                                  _ringBufferLUT 0000  
               ??_terminal_textAttributesReset 01A2                                       ??_printf 016E  
                            _POS3P3_ADC_Result 00DD                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                   __end_of_getMinorRevisionID 6E86                                       ??_strstr 012A  
                            __size_of___altoft 0078                                      _Vpk_const 00F4  
                                   fround@prec 015E                                 _eusart2RxCount 01D2  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$4105 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0282                                   _isdigit$3221 0118  
                ?_TMR5_DefaultInterruptHandler 0001                        __end_of_HLVD_Initialize 70A0  
                          EUSART2_Write@txData 0117                                   _load_on_time 01B3  
                                     ?i2_scale 0036                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4106 007F                                      _asin$4107 008B  
                                    _asin$4108 0085                                      _asin$4109 0082  
                                     ?i2_putch 0001                                     sin@coeff_a EC37  
                                   sin@coeff_b EC55                                 _TMR7_StopTimer 714A  
                        _TMR6_InterruptHandler 01C4                    getMinorRevisionID@REVID_RAW 0122  
                             ___lwdiv@dividend 0117                         _PIN_MANAGER_Initialize 5AFA  
                      ??_getCauseOfResetString 0119                                      __pintcode 0008  
                                  _getDeviceID 6F62                                  __pmediumconst EB8E  
                                     ?___awdiv 011D                                      __ptext100 4B5A  
                                    __ptext101 66EA                                      __ptext110 3A88  
                                    __ptext102 6504                                      __ptext111 4634  
                                    __ptext103 6080                                      __ptext120 4F8C  
                                    __ptext112 4118                                      __ptext104 6E38  
                                    __ptext121 5CBE                                      __ptext113 6D8A  
                                    __ptext105 715C                                      __ptext130 703A  
                                    __ptext122 6182                                      __ptext114 65CE  
                                    __ptext106 22CE                                      __ptext131 0000  
                                    __ptext123 61FA                                      __ptext115 3CF4  
                                    __ptext107 7150                                      __ptext124 5504  
                                    __ptext116 6B1E                                      __ptext108 3F52  
                                    __ptext125 6ED2                                      __ptext117 6EF8  
                                    __ptext109 679E                                       ?___ftadd 012B  
                                    __ptext126 5080                                      __ptext118 525C  
                                    __ptext127 4488                                      __ptext119 5426  
                                    __ptext128 6F1C                                      __ptext129 59A2  
                                     ?___awmod 0117                                       ?___ftdiv 0137  
             __end_of_TMR7_SetInterruptHandler 70CA                                       ?___ftneg 0123  
                                     ?___lldiv 0117                                       ?___ftmul 0146  
                                     ?___llmod 0124                                       ?___ftsub 0137  
                                    __npowers_ EBDE                                       ?___fttol 0155  
                                     ?___lwdiv 0117                                _getCauseOfReset 5342  
                                     ?___lwmod 0117                                 ?_ringBufferLUT 01A2  
                                    _getUserID 6B9E              _EUSART2_TxDefaultInterruptHandler 01CA  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F0  
                                  __tdiv_to_l_ 47CA                                       _ADCC_ISR 6E38  
                               ??i2__div_to_l_ 0007                  getDeviceIDString@returnString 0121  
                                 ??__div_to_l_ 011D                               _POS12_ADC_Result 00DA  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 01B7                                      _eval_poly 5504  
                    ??_terminal_textAttributes 0192                                      _attribute 00EC  
                                    _peakToRMS 3F52                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers EC05  
                       _heartbeatTimerCallback 6B60                                 _dimming_period 00FA  
                             ___lwdiv@quotient 011C                                    ??i2___awdiv 000B  
                                  ??i2___ftadd 0046                                    ??i2___awmod 0005  
                               __size_of_floor 00DE                                    ??i2___ftdiv 001B  
                               __size_of_frexp 0078                                    ??i2___ftneg 0027  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 002D  
                               __size_of_scale 0480                                    ??i2___llmod 0016  
                                  ??i2___ftsub 005E                                    ??i2___fttol 0041  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 7026  
                       __end_of_TMR7_StopTimer 7150                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 711E         terminal_textAttributes@input_attribute 0191  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 0129  
                    currentMeasuredToPeak@Peak 0079                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 713C                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0066  
                                     _IPR1bits 000E20                getRevisionIDString@returnString 012B  
                                     _IPR2bits 000E21                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 7156  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     i1u816_20 7126                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 4B5A                                       i1u930_28 6B70  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       i1u929_20 6B6C  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 6CF2  
                                     _TMR6_ISR 6E10                                       _TMR7_ISR 6CBE  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   ?_getUserID 0122                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0125  
                                     i2___ftge 5CBE                                       i2___wmul 6ED2  
                      __size_of_FVR_Initialize 0008                                     printf@flag 017E  
                                   printf@fval 018A                                     printf@prec 018D  
                                   ?_eval_poly 004C                 __end_of_terminal_setCursorHome 7070  
                            i2___awdiv@divisor 0009                                       i2_fround 3812  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 0094  
                            i2___awdiv@counter 000B                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 181A  
                          __end_ofatan@coeff_a EC37                            __end_ofatan@coeff_b EC55  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 6116                                      copy_data1 6136  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 01D1                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001               __size_of_terminal_ringBufferPull 011C  
                             __size_ofi2_scale 0450                 ??_TMR5_DefaultInterruptHandler 0001  
                             __size_ofi2_putch 000A                                      frexp@eptr 0004  
                      __end_of_getCauseOfReset 5426                __end_of_terminal_textAttributes 357E  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 704E                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 7102         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 70F4                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01A4  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 00EB  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___awmod 0072  
                             __size_of___ftdiv 00E8                               __size_of___ftneg 0026  
                        i2___wmul@multiplicand 0011                               __size_of___lldiv 0084  
                                     ___altoft 61FA                               __size_of___ftmul 00F6  
                             __size_of___llmod 0068                               __size_of___ftsub 0042  
                             __size_of___fttol 00F8                               __size_of___lwdiv 0054  
                             __size_of___lwmod 0044                                    _load_enable 02F2  
                                     ___awtoft 6C16                                       ___ftpack 5844  
             __end_of_acquisitionTimerCallback 5844                                    _fround$3911 015B  
                                  _fround$3912 0158                                       ___lltoft 668C  
                        __end_ofi2__tdiv_to_l_ 4A30                                       ___lwtoft 6F1C  
                     _TMR7_SetInterruptHandler 70BC                          _TMR7_InterruptHandler 01C1  
                           _ADC_Result_Scaling 00E0        terminal_textAttributes@foreground_color 0192  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 7090  
                             __size_of_isdigit 0022                                ___lwdiv@divisor 0119  
                              ___lwdiv@counter 011B                                       __ptext10 6746  
                                     __ptext11 6C50                                       __ptext20 6BDA  
                                     __ptext12 6848                                       __ptext21 5E68  
                                     __ptext13 6B9E                                       __ptext30 6C16  
                                     __ptext22 69C6                                       __ptext14 5D4E  
                                     __ptext31 7144                                       __ptext23 6F62  
                                     __ptext15 5A50                                       __ptext40 6DE8  
                                     __ptext32 6A0E                                       __ptext24 6A9A  
                                     __ptext16 6A56                                       __ptext41 4E96  
                                     __ptext33 7080                                       __ptext25 6FF4  
                                     __ptext17 67F4                                       __ptext50 6ADC  
                                     __ptext42 62E8                                       __ptext34 0D60  
                                     __ptext26 6D26                                       __ptext18 662E  
                                     __ptext51 42DA                                       __ptext43 5EF2  
                                     __ptext35 2946                                       __ptext27 5342  
                                     __ptext19 6E60                                       __ptext60 6932  
                                     __ptext52 5844                                       __ptext44 47CA  
                                     __ptext36 70AE                                       __ptext28 55DE  
                                     __ptext61 70D8                                       __ptext53 6E86  
                                     __ptext45 4A30                                       __ptext37 68E6  
                                     __ptext29 5174                                       __ptext70 70F4  
                                     __ptext62 6FA0                                       __ptext54 5B9C  
                                     __ptext46 668C                                       __ptext38 6F40  
                                     __ptext71 656A                                       __ptext63 5AFA  
                                     __ptext55 6DBA                                       __ptext47 649C  
                                     __ptext39 357E                                       __ptext80 6EAC  
                                     __ptext72 7102                                       __ptext64 6FBC  
                                     __ptext56 6898                                       __ptext48 5F78  
                                     __ptext81 6E10                                       __ptext65 7026  
                                     __ptext57 70BC                                       __ptext49 4D9E  
                                     __ptext90 58F4                                       __ptext82 7158  
                                     __ptext74 6CBE                                       __ptext66 7090  
                                     __ptext58 6D58                                       __ptext91 181A  
                                     __ptext83 6B60                                       __ptext75 7156  
                                     __ptext67 7134                                       __ptext59 70CA  
                                     __ptext92 2DC6                                       __ptext84 713C  
                                     __ptext76 5782                                       __ptext68 63CA  
                                     __ptext93 712A                                       __ptext85 6C88  
                                     __ptext77 714A                                       __ptext69 70E6  
                                     __ptext94 697C                                       __ptext78 7110  
                                     __ptext95 6F82                                       __ptext87 6CF2  
                                     __ptext79 711E                                       __ptext96 3812  
                                     __ptext88 6FD8                                       __ptext97 635A  
                                     __ptext89 715A                                       __ptext98 5FFC  
                                     __ptext99 48FE                                       _sin$4110 006C  
                                     __powers_ EBB7                         ?_ADCC_IsConversionDone 0001  
                          ringBufferLUT@userID 02A2                                _Temp_ADC_Offset 00F7  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                               i2_isdigit$3221 0002                                _Temp_ADC_Result 00D7  
                                __size_of_acos 0056                                  __size_of_fabs 0030  
                                __size_of_atan 01C2                                  __size_of_asin 026C  
                                __size_of_atoi 00D8                                  __size_of_main 0076  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 0196  
                                __size_of_utoa 00AA             __size_of_ADCPostProcessingCallback 0678  
                         __end_ofi2__div_to_l_ 4C82                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 0282  
                    _ADCC_ADI_InterruptHandler 00E6                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 711E                                       int$flags 005F  
                                     atoi@sign 012F                                    ??_getUserID 0124  
                                    printf@idx 0177                                      printf@len 0178  
                                    printf@exp 0180                                      printf@val 0186  
                                  atan@coeff_a EC25                                    atan@coeff_b EC46  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 7070  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0053  
                  __end_of_getRevisionIDString 5DDC                       __size_of_TMR7_StartTimer 0006  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 015B  
         __end_of_TMR6_DefaultInterruptHandler 715A          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 7158           __end_of_ADCC_DefaultInterruptHandler 715E  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 715C  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 6E60                               __tdiv_to_l_@quot 0120  
                                    strchr@chr 0119                               ___lwmod@dividend 0117  
                                    strchr@ptr 0117                             ringBufferLUT@index 029E  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                  _reset_cause 00E9                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 00E3              __end_of_ADCPostProcessingCallback 2946  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 017C  
                                     printf@cp 017A                 __size_of_getCauseOfResetString 0032  
                __end_of_getCauseOfResetString 6D58                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 703A                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                         __size_of_EUSART2_Write 004C  
                          _EUSART2_Receive_ISR 58F4                                       utoa@base 0122  
       __end_of_INTERRUPT_InterruptManagerHigh 5782        __size_of_INTERRUPT_InterruptManagerHigh 577A  
               _INTERRUPT_InterruptManagerHigh 0008                    getMajorRevisionID@REVID_RAW 0125  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize 7134  
                                  _printf$3914 0174                                       strcat@cp 011B  
                                     strcat@to 0117                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                            ringBufferLUT@line 01A2                               ___lldiv@quotient 011F  
                              ___lwmod@divisor 0119                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                                ___lwmod@counter 011B  
                            _getDeviceIDString 5E68                                       strstr@s1 0126  
                                     strstr@s2 0128                                     _TX2STAbits 000EF6  
                           ?_getDeviceIDString 011D          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 5B9C                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 4C82                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 00C2  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                                   _STATUSbits 000FD8                            ??_getDeviceIDString 011F  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 01C7  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 662E  
