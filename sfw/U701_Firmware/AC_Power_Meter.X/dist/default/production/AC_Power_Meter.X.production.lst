

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 05 13:34:26 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   153                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   154  0000                     
   155                           ; Version 1.45 (B)
   156                           ; Generated 30/01/2018 GMT
   157                           ; 
   158                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution.
   172                           ; 
   173                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   174                           ;        software without specific prior written permission.
   175                           ; 
   176                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   177                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   178                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   179                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   180                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   181                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   182                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   183                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   184                           ; 
   185                           ; 
   186                           ; Code-generator required, PIC18LF67K40 Definitions
   187                           ; 
   188                           ; SFR Addresses
   189  0000                     
   190                           	psect	idataBANK0
   191  016E1C                     __pidataBANK0:
   192                           	opt stack 0
   193                           
   194                           ;initializer for _Irms_offset
   195  016E1C  6D                 	db	109
   196  016E1D  E7                 	db	231
   197  016E1E  BD                 	db	189
   198                           
   199                           ;initializer for _Vpk_const
   200                           ;main.c: 71: volatile double FVR_ADC_Result;
   201                           ;main.c: 72: volatile double AVSS_ADC_Result;
   202                           ;main.c: 73: volatile double ADC_Result_Scaling;
   203                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   204                           ;main.c: 75: volatile double POS12_ADC_Result;
   205                           ;main.c: 76: volatile double Temp_ADC_Result;
   206                           ;main.c: 77: volatile double Temp_ADC_Offset = -267.409;
   207  016E1F  B5                 	db	181
   208  016E20  29                 	db	41
   209  016E21  43                 	db	67
   210                           
   211                           ;initializer for _Temp_ADC_Offset
   212  016E22  B4                 	db	180
   213  016E23  85                 	db	133
   214  016E24  C3                 	db	195
   215                           
   216                           ;initializer for _dimming_period
   217  016E25  7FEE               	dw	32750
   218                           
   219                           ;initializer for _TRIAC_Firing_Angle
   220                           ;main.c: 71: volatile double FVR_ADC_Result;
   221                           ;main.c: 72: volatile double AVSS_ADC_Result;
   222                           ;main.c: 73: volatile double ADC_Result_Scaling;
   223                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   224                           ;main.c: 75: volatile double POS12_ADC_Result;
   225                           ;main.c: 76: volatile double Temp_ADC_Result;
   226                           ;main.c: 77: volatile double Temp_ADC_Offset = -267.409;
   227                           ;main.c: 78: double Vpk_const = 169.7056274847714;
   228                           ;main.c: 79: volatile double Vpk;
   229                           ;main.c: 80: volatile double Ipk;
   230                           ;main.c: 81: volatile double Imeas;
   231                           ;main.c: 82: double Irms_offset = -0.113;
   232  016E27  00                 	db	0
   233  016E28  B4                 	db	180
   234  016E29  42                 	db	66
   235                           
   236                           	psect	idataBANK2
   237  016D8A                     __pidataBANK2:
   238                           	opt stack 0
   239                           
   240                           ;initializer for getCauseOfResetString@strings
   241  016D8A  1E                 	db	low STR_123
   242  016D8B  FE                 	db	high STR_123
   243  016D8C  8E                 	db	low STR_124
   244  016D8D  FE                 	db	high STR_124
   245  016D8E  2E                 	db	low STR_125
   246  016D8F  FE                 	db	high STR_125
   247  016D90  C6                 	db	low STR_126
   248  016D91  FD                 	db	high STR_126
   249  016D92  A0                 	db	low (STR_128+9)
   250  016D93  FA                 	db	high (STR_128+9)
   251  016D94  97                 	db	low STR_128
   252  016D95  FA                 	db	high STR_128
   253  016D96  B0                 	db	low STR_129
   254  016D97  FC                 	db	high STR_129
   255  016D98  72                 	db	low STR_130
   256  016D99  FD                 	db	high STR_130
   257  016D9A  46                 	db	low STR_131
   258  016D9B  FD                 	db	high STR_131
   259                           
   260                           ;initializer for getDeviceIDString@F17550
   261  016D9C  44                 	db	low STR_120
   262  016D9D  FF                 	db	high STR_120
   263  016D9E  10                 	db	low STR_121
   264  016D9F  FF                 	db	high STR_121
   265  016DA0  7C                 	db	low STR_68
   266  016DA1  FF                 	db	high STR_68
   267                           
   268                           	psect	mediumconst
   269  00EBE2                     __pmediumconst:
   270                           	opt stack 0
   271  00EBE2  00                 	db	0
   272  00EBE3                     _dpowers:
   273                           	opt stack 0
   274  00EBE3  0001               	dw	1
   275  00EBE5  0000               	dw	0
   276  00EBE7  000A               	dw	10
   277  00EBE9  0000               	dw	0
   278  00EBEB  0064               	dw	100
   279  00EBED  0000               	dw	0
   280  00EBEF  03E8               	dw	1000
   281  00EBF1  0000               	dw	0
   282  00EBF3  2710               	dw	10000
   283  00EBF5  0000               	dw	0
   284  00EBF7  86A0               	dw	34464
   285  00EBF9  0001               	dw	1
   286  00EBFB  4240               	dw	16960
   287  00EBFD  000F               	dw	15
   288  00EBFF  9680               	dw	38528
   289  00EC01  0098               	dw	152
   290  00EC03  E100               	dw	57600
   291  00EC05  05F5               	dw	1525
   292  00EC07  CA00               	dw	51712
   293  00EC09  3B9A               	dw	15258
   294  00EC0B                     __end_of_dpowers:
   295                           	opt stack 0
   296  00EC0B                     __powers_:
   297                           	opt stack 0
   298  00EC0B  00                 	db	0
   299  00EC0C  80                 	db	128
   300  00EC0D  3F                 	db	63
   301  00EC0E  00                 	db	0
   302  00EC0F  20                 	db	32
   303  00EC10  41                 	db	65
   304  00EC11  00                 	db	0
   305  00EC12  C8                 	db	200
   306  00EC13  42                 	db	66
   307  00EC14  00                 	db	0
   308  00EC15  7A                 	db	122
   309  00EC16  44                 	db	68
   310  00EC17  40                 	db	64
   311  00EC18  1C                 	db	28
   312  00EC19  46                 	db	70
   313  00EC1A  50                 	db	80
   314  00EC1B  C3                 	db	195
   315  00EC1C  47                 	db	71
   316  00EC1D  24                 	db	36
   317  00EC1E  74                 	db	116
   318  00EC1F  49                 	db	73
   319  00EC20  97                 	db	151
   320  00EC21  18                 	db	24
   321  00EC22  4B                 	db	75
   322  00EC23  BC                 	db	188
   323  00EC24  BE                 	db	190
   324  00EC25  4C                 	db	76
   325  00EC26  6B                 	db	107
   326  00EC27  6E                 	db	110
   327  00EC28  4E                 	db	78
   328  00EC29  03                 	db	3
   329  00EC2A  15                 	db	21
   330  00EC2B  50                 	db	80
   331  00EC2C  79                 	db	121
   332  00EC2D  AD                 	db	173
   333  00EC2E  60                 	db	96
   334  00EC2F  F3                 	db	243
   335  00EC30  49                 	db	73
   336  00EC31  71                 	db	113
   337  00EC32                     __end_of__powers_:
   338                           	opt stack 0
   339  00EC32                     __npowers_:
   340                           	opt stack 0
   341  00EC32  00                 	db	0
   342  00EC33  80                 	db	128
   343  00EC34  3F                 	db	63
   344  00EC35  CD                 	db	205
   345  00EC36  CC                 	db	204
   346  00EC37  3D                 	db	61
   347  00EC38  D7                 	db	215
   348  00EC39  23                 	db	35
   349  00EC3A  3C                 	db	60
   350  00EC3B  12                 	db	18
   351  00EC3C  83                 	db	131
   352  00EC3D  3A                 	db	58
   353  00EC3E  B7                 	db	183
   354  00EC3F  D1                 	db	209
   355  00EC40  38                 	db	56
   356  00EC41  C6                 	db	198
   357  00EC42  27                 	db	39
   358  00EC43  37                 	db	55
   359  00EC44  38                 	db	56
   360  00EC45  86                 	db	134
   361  00EC46  35                 	db	53
   362  00EC47  C0                 	db	192
   363  00EC48  D6                 	db	214
   364  00EC49  33                 	db	51
   365  00EC4A  CC                 	db	204
   366  00EC4B  2B                 	db	43
   367  00EC4C  32                 	db	50
   368  00EC4D  70                 	db	112
   369  00EC4E  89                 	db	137
   370  00EC4F  30                 	db	48
   371  00EC50  E7                 	db	231
   372  00EC51  DB                 	db	219
   373  00EC52  2E                 	db	46
   374  00EC53  E5                 	db	229
   375  00EC54  3C                 	db	60
   376  00EC55  1E                 	db	30
   377  00EC56  42                 	db	66
   378  00EC57  A2                 	db	162
   379  00EC58  0D                 	db	13
   380  00EC59                     __end_of__npowers_:
   381                           	opt stack 0
   382  00EC59                     _hexpowers:
   383                           	opt stack 0
   384  00EC59  0001               	dw	1
   385  00EC5B  0000               	dw	0
   386  00EC5D  0010               	dw	16
   387  00EC5F  0000               	dw	0
   388  00EC61  0100               	dw	256
   389  00EC63  0000               	dw	0
   390  00EC65  1000               	dw	4096
   391  00EC67  0000               	dw	0
   392  00EC69  0000               	dw	0
   393  00EC6B  0001               	dw	1
   394  00EC6D  0000               	dw	0
   395  00EC6F  0010               	dw	16
   396  00EC71  0000               	dw	0
   397  00EC73  0100               	dw	256
   398  00EC75  0000               	dw	0
   399  00EC77  1000               	dw	4096
   400  00EC79                     __end_of_hexpowers:
   401                           	opt stack 0
   402  00EC79                     atan@coeff_a:
   403                           	opt stack 0
   404  00EC79  3C                 	db	60
   405  00EC7A  04                 	db	4
   406  00EC7B  42                 	db	66
   407  00EC7C  9F                 	db	159
   408  00EC7D  6A                 	db	106
   409  00EC7E  42                 	db	66
   410  00EC7F  90                 	db	144
   411  00EC80  01                 	db	1
   412  00EC81  42                 	db	66
   413  00EC82  4D                 	db	77
   414  00EC83  BB                 	db	187
   415  00EC84  40                 	db	64
   416  00EC85  EC                 	db	236
   417  00EC86  47                 	db	71
   418  00EC87  3E                 	db	62
   419  00EC88  8E                 	db	142
   420  00EC89  1F                 	db	31
   421  00EC8A  BB                 	db	187
   422  00EC8B                     __end_ofatan@coeff_a:
   423                           	opt stack 0
   424  00EC8B                     sin@coeff_a:
   425                           	opt stack 0
   426  00EC8B  F4                 	db	244
   427  00EC8C  4A                 	db	74
   428  00EC8D  48                 	db	72
   429  00EC8E  95                 	db	149
   430  00EC8F  95                 	db	149
   431  00EC90  C7                 	db	199
   432  00EC91  C1                 	db	193
   433  00EC92  DC                 	db	220
   434  00EC93  45                 	db	69
   435  00EC94  DC                 	db	220
   436  00EC95  6D                 	db	109
   437  00EC96  C3                 	db	195
   438  00EC97  B3                 	db	179
   439  00EC98  33                 	db	51
   440  00EC99  40                 	db	64
   441  00EC9A                     __end_ofsin@coeff_a:
   442                           	opt stack 0
   443  00EC9A                     atan@coeff_b:
   444                           	opt stack 0
   445  00EC9A  3C                 	db	60
   446  00EC9B  04                 	db	4
   447  00EC9C  42                 	db	66
   448  00EC9D  5A                 	db	90
   449  00EC9E  8B                 	db	139
   450  00EC9F  42                 	db	66
   451  00ECA0  04                 	db	4
   452  00ECA1  44                 	db	68
   453  00ECA2  42                 	db	66
   454  00ECA3  9C                 	db	156
   455  00ECA4  4F                 	db	79
   456  00ECA5  41                 	db	65
   457  00ECA6  00                 	db	0
   458  00ECA7  80                 	db	128
   459  00ECA8  3F                 	db	63
   460  00ECA9                     __end_ofatan@coeff_b:
   461                           	opt stack 0
   462  00ECA9                     sin@coeff_b:
   463                           	opt stack 0
   464  00ECA9  34                 	db	52
   465  00ECAA  01                 	db	1
   466  00ECAB  48                 	db	72
   467  00ECAC  9D                 	db	157
   468  00ECAD  B0                 	db	176
   469  00ECAE  45                 	db	69
   470  00ECAF  00                 	db	0
   471  00ECB0  DA                 	db	218
   472  00ECB1  42                 	db	66
   473  00ECB2  00                 	db	0
   474  00ECB3  80                 	db	128
   475  00ECB4  3F                 	db	63
   476  00ECB5                     __end_ofsin@coeff_b:
   477                           	opt stack 0
   478  00ECB5                     STR_114:
   479  00ECB5  4C                 	db	76	;'L'
   480  00ECB6  69                 	db	105	;'i'
   481  00ECB7  73                 	db	115	;'s'
   482  00ECB8  74                 	db	116	;'t'
   483  00ECB9  20                 	db	32
   484  00ECBA  6F                 	db	111	;'o'
   485  00ECBB  66                 	db	102	;'f'
   486  00ECBC  20                 	db	32
   487  00ECBD  73                 	db	115	;'s'
   488  00ECBE  75                 	db	117	;'u'
   489  00ECBF  70                 	db	112	;'p'
   490  00ECC0  70                 	db	112	;'p'
   491  00ECC1  6F                 	db	111	;'o'
   492  00ECC2  72                 	db	114	;'r'
   493  00ECC3  74                 	db	116	;'t'
   494  00ECC4  65                 	db	101	;'e'
   495  00ECC5  64                 	db	100	;'d'
   496  00ECC6  20                 	db	32
   497  00ECC7  63                 	db	99	;'c'
   498  00ECC8  6F                 	db	111	;'o'
   499  00ECC9  6D                 	db	109	;'m'
   500  00ECCA  6D                 	db	109	;'m'
   501  00ECCB  61                 	db	97	;'a'
   502  00ECCC  6E                 	db	110	;'n'
   503  00ECCD  64                 	db	100	;'d'
   504  00ECCE  73                 	db	115	;'s'
   505  00ECCF  3A                 	db	58	;':'
   506  00ECD0  0A                 	db	10
   507  00ECD1  0D                 	db	13
   508  00ECD2  0A                 	db	10
   509  00ECD3  0D                 	db	13
   510  00ECD4  44                 	db	68	;'D'
   511  00ECD5  65                 	db	101	;'e'
   512  00ECD6  76                 	db	118	;'v'
   513  00ECD7  69                 	db	105	;'i'
   514  00ECD8  63                 	db	99	;'c'
   515  00ECD9  65                 	db	101	;'e'
   516  00ECDA  20                 	db	32
   517  00ECDB  43                 	db	67	;'C'
   518  00ECDC  6F                 	db	111	;'o'
   519  00ECDD  6D                 	db	109	;'m'
   520  00ECDE  6D                 	db	109	;'m'
   521  00ECDF  61                 	db	97	;'a'
   522  00ECE0  6E                 	db	110	;'n'
   523  00ECE1  64                 	db	100	;'d'
   524  00ECE2  73                 	db	115	;'s'
   525  00ECE3  3A                 	db	58	;':'
   526  00ECE4  0A                 	db	10
   527  00ECE5  0D                 	db	13
   528  00ECE6  20                 	db	32
   529  00ECE7  20                 	db	32
   530  00ECE8  20                 	db	32
   531  00ECE9  52                 	db	82	;'R'
   532  00ECEA  65                 	db	101	;'e'
   533  00ECEB  73                 	db	115	;'s'
   534  00ECEC  65                 	db	101	;'e'
   535  00ECED  74                 	db	116	;'t'
   536  00ECEE  3A                 	db	58	;':'
   537  00ECEF  20                 	db	32
   538  00ECF0  43                 	db	67	;'C'
   539  00ECF1  6C                 	db	108	;'l'
   540  00ECF2  65                 	db	101	;'e'
   541  00ECF3  61                 	db	97	;'a'
   542  00ECF4  72                 	db	114	;'r'
   543  00ECF5  73                 	db	115	;'s'
   544  00ECF6  20                 	db	32
   545  00ECF7  74                 	db	116	;'t'
   546  00ECF8  68                 	db	104	;'h'
   547  00ECF9  65                 	db	101	;'e'
   548  00ECFA  20                 	db	32
   549  00ECFB  74                 	db	116	;'t'
   550  00ECFC  65                 	db	101	;'e'
   551  00ECFD  72                 	db	114	;'r'
   552  00ECFE  6D                 	db	109	;'m'
   553  00ECFF  69                 	db	105	;'i'
   554  00ED00  6E                 	db	110	;'n'
   555  00ED01  61                 	db	97	;'a'
   556  00ED02  6C                 	db	108	;'l'
   557  00ED03  20                 	db	32
   558  00ED04  61                 	db	97	;'a'
   559  00ED05  6E                 	db	110	;'n'
   560  00ED06  64                 	db	100	;'d'
   561  00ED07  20                 	db	32
   562  00ED08  72                 	db	114	;'r'
   563  00ED09  65                 	db	101	;'e'
   564  00ED0A  73                 	db	115	;'s'
   565  00ED0B  65                 	db	101	;'e'
   566  00ED0C  74                 	db	116	;'t'
   567  00ED0D  73                 	db	115	;'s'
   568  00ED0E  20                 	db	32
   569  00ED0F  74                 	db	116	;'t'
   570  00ED10  68                 	db	104	;'h'
   571  00ED11  65                 	db	101	;'e'
   572  00ED12  20                 	db	32
   573  00ED13  6D                 	db	109	;'m'
   574  00ED14  69                 	db	105	;'i'
   575  00ED15  63                 	db	99	;'c'
   576  00ED16  72                 	db	114	;'r'
   577  00ED17  6F                 	db	111	;'o'
   578  00ED18  0A                 	db	10
   579  00ED19  0D                 	db	13
   580  00ED1A  20                 	db	32
   581  00ED1B  20                 	db	32
   582  00ED1C  20                 	db	32
   583  00ED1D  43                 	db	67	;'C'
   584  00ED1E  6C                 	db	108	;'l'
   585  00ED1F  65                 	db	101	;'e'
   586  00ED20  61                 	db	97	;'a'
   587  00ED21  72                 	db	114	;'r'
   588  00ED22  3A                 	db	58	;':'
   589  00ED23  20                 	db	32
   590  00ED24  43                 	db	67	;'C'
   591  00ED25  6C                 	db	108	;'l'
   592  00ED26  65                 	db	101	;'e'
   593  00ED27  61                 	db	97	;'a'
   594  00ED28  72                 	db	114	;'r'
   595  00ED29  73                 	db	115	;'s'
   596  00ED2A  20                 	db	32
   597  00ED2B  74                 	db	116	;'t'
   598  00ED2C  68                 	db	104	;'h'
   599  00ED2D  65                 	db	101	;'e'
   600  00ED2E  20                 	db	32
   601  00ED2F  74                 	db	116	;'t'
   602  00ED30  65                 	db	101	;'e'
   603  00ED31  72                 	db	114	;'r'
   604  00ED32  6D                 	db	109	;'m'
   605  00ED33  69                 	db	105	;'i'
   606  00ED34  6E                 	db	110	;'n'
   607  00ED35  61                 	db	97	;'a'
   608  00ED36  6C                 	db	108	;'l'
   609  00ED37  20                 	db	32
   610  00ED38  62                 	db	98	;'b'
   611  00ED39  75                 	db	117	;'u'
   612  00ED3A  74                 	db	116	;'t'
   613  00ED3B  20                 	db	32
   614  00ED3C  64                 	db	100	;'d'
   615  00ED3D  6F                 	db	111	;'o'
   616  00ED3E  65                 	db	101	;'e'
   617  00ED3F  73                 	db	115	;'s'
   618  00ED40  6E                 	db	110	;'n'
   619  00ED41  27                 	db	39
   620  00ED42  74                 	db	116	;'t'
   621  00ED43  20                 	db	32
   622  00ED44  72                 	db	114	;'r'
   623  00ED45  65                 	db	101	;'e'
   624  00ED46  73                 	db	115	;'s'
   625  00ED47  65                 	db	101	;'e'
   626  00ED48  74                 	db	116	;'t'
   627  00ED49  20                 	db	32
   628  00ED4A  74                 	db	116	;'t'
   629  00ED4B  68                 	db	104	;'h'
   630  00ED4C  65                 	db	101	;'e'
   631  00ED4D  20                 	db	32
   632  00ED4E  6D                 	db	109	;'m'
   633  00ED4F  69                 	db	105	;'i'
   634  00ED50  63                 	db	99	;'c'
   635  00ED51  72                 	db	114	;'r'
   636  00ED52  6F                 	db	111	;'o'
   637  00ED53  0A                 	db	10
   638  00ED54  0D                 	db	13
   639  00ED55  20                 	db	32
   640  00ED56  20                 	db	32
   641  00ED57  20                 	db	32
   642  00ED58  43                 	db	67	;'C'
   643  00ED59  61                 	db	97	;'a'
   644  00ED5A  75                 	db	117	;'u'
   645  00ED5B  73                 	db	115	;'s'
   646  00ED5C  65                 	db	101	;'e'
   647  00ED5D  20                 	db	32
   648  00ED5E  6F                 	db	111	;'o'
   649  00ED5F  66                 	db	102	;'f'
   650  00ED60  20                 	db	32
   651  00ED61  52                 	db	82	;'R'
   652  00ED62  65                 	db	101	;'e'
   653  00ED63  73                 	db	115	;'s'
   654  00ED64  65                 	db	101	;'e'
   655  00ED65  74                 	db	116	;'t'
   656  00ED66  3F                 	db	63	;'?'
   657  00ED67  3A                 	db	58	;':'
   658  00ED68  20                 	db	32
   659  00ED69  52                 	db	82	;'R'
   660  00ED6A  65                 	db	101	;'e'
   661  00ED6B  74                 	db	116	;'t'
   662  00ED6C  75                 	db	117	;'u'
   663  00ED6D  72                 	db	114	;'r'
   664  00ED6E  6E                 	db	110	;'n'
   665  00ED6F  73                 	db	115	;'s'
   666  00ED70  20                 	db	32
   667  00ED71  74                 	db	116	;'t'
   668  00ED72  68                 	db	104	;'h'
   669  00ED73  65                 	db	101	;'e'
   670  00ED74  20                 	db	32
   671  00ED75  63                 	db	99	;'c'
   672  00ED76  61                 	db	97	;'a'
   673  00ED77  75                 	db	117	;'u'
   674  00ED78  73                 	db	115	;'s'
   675  00ED79  65                 	db	101	;'e'
   676  00ED7A  20                 	db	32
   677  00ED7B  6F                 	db	111	;'o'
   678  00ED7C  66                 	db	102	;'f'
   679  00ED7D  20                 	db	32
   680  00ED7E  74                 	db	116	;'t'
   681  00ED7F  68                 	db	104	;'h'
   682  00ED80  65                 	db	101	;'e'
   683  00ED81  20                 	db	32
   684  00ED82  6D                 	db	109	;'m'
   685  00ED83  6F                 	db	111	;'o'
   686  00ED84  73                 	db	115	;'s'
   687  00ED85  74                 	db	116	;'t'
   688  00ED86  20                 	db	32
   689  00ED87  72                 	db	114	;'r'
   690  00ED88  65                 	db	101	;'e'
   691  00ED89  63                 	db	99	;'c'
   692  00ED8A  65                 	db	101	;'e'
   693  00ED8B  6E                 	db	110	;'n'
   694  00ED8C  74                 	db	116	;'t'
   695  00ED8D  20                 	db	32
   696  00ED8E  64                 	db	100	;'d'
   697  00ED8F  65                 	db	101	;'e'
   698  00ED90  76                 	db	118	;'v'
   699  00ED91  69                 	db	105	;'i'
   700  00ED92  63                 	db	99	;'c'
   701  00ED93  65                 	db	101	;'e'
   702  00ED94  20                 	db	32
   703  00ED95  72                 	db	114	;'r'
   704  00ED96  65                 	db	101	;'e'
   705  00ED97  73                 	db	115	;'s'
   706  00ED98  65                 	db	101	;'e'
   707  00ED99  74                 	db	116	;'t'
   708  00ED9A  0A                 	db	10
   709  00ED9B  0D                 	db	13
   710  00ED9C  20                 	db	32
   711  00ED9D  20                 	db	32
   712  00ED9E  20                 	db	32
   713  00ED9F  2A                 	db	42
   714  00EDA0  49                 	db	73	;'I'
   715  00EDA1  44                 	db	68	;'D'
   716  00EDA2  4E                 	db	78	;'N'
   717  00EDA3  3F                 	db	63	;'?'
   718  00EDA4  3A                 	db	58	;':'
   719  00EDA5  20                 	db	32
   720  00EDA6  52                 	db	82	;'R'
   721  00EDA7  65                 	db	101	;'e'
   722  00EDA8  74                 	db	116	;'t'
   723  00EDA9  75                 	db	117	;'u'
   724  00EDAA  72                 	db	114	;'r'
   725  00EDAB  6E                 	db	110	;'n'
   726  00EDAC  73                 	db	115	;'s'
   727  00EDAD  20                 	db	32
   728  00EDAE  64                 	db	100	;'d'
   729  00EDAF  65                 	db	101	;'e'
   730  00EDB0  76                 	db	118	;'v'
   731  00EDB1  69                 	db	105	;'i'
   732  00EDB2  63                 	db	99	;'c'
   733  00EDB3  65                 	db	101	;'e'
   734  00EDB4  20                 	db	32
   735  00EDB5  69                 	db	105	;'i'
   736  00EDB6  64                 	db	100	;'d'
   737  00EDB7  65                 	db	101	;'e'
   738  00EDB8  6E                 	db	110	;'n'
   739  00EDB9  74                 	db	116	;'t'
   740  00EDBA  69                 	db	105	;'i'
   741  00EDBB  66                 	db	102	;'f'
   742  00EDBC  69                 	db	105	;'i'
   743  00EDBD  63                 	db	99	;'c'
   744  00EDBE  61                 	db	97	;'a'
   745  00EDBF  74                 	db	116	;'t'
   746  00EDC0  69                 	db	105	;'i'
   747  00EDC1  6F                 	db	111	;'o'
   748  00EDC2  6E                 	db	110	;'n'
   749  00EDC3  20                 	db	32
   750  00EDC4  73                 	db	115	;'s'
   751  00EDC5  74                 	db	116	;'t'
   752  00EDC6  72                 	db	114	;'r'
   753  00EDC7  69                 	db	105	;'i'
   754  00EDC8  6E                 	db	110	;'n'
   755  00EDC9  67                 	db	103	;'g'
   756  00EDCA  0A                 	db	10
   757  00EDCB  0D                 	db	13
   758  00EDCC  20                 	db	32
   759  00EDCD  20                 	db	32
   760  00EDCE  20                 	db	32
   761  00EDCF  44                 	db	68	;'D'
   762  00EDD0  65                 	db	101	;'e'
   763  00EDD1  76                 	db	118	;'v'
   764  00EDD2  69                 	db	105	;'i'
   765  00EDD3  63                 	db	99	;'c'
   766  00EDD4  65                 	db	101	;'e'
   767  00EDD5  20                 	db	32
   768  00EDD6  4F                 	db	79	;'O'
   769  00EDD7  6E                 	db	110	;'n'
   770  00EDD8  20                 	db	32
   771  00EDD9  54                 	db	84	;'T'
   772  00EDDA  69                 	db	105	;'i'
   773  00EDDB  6D                 	db	109	;'m'
   774  00EDDC  65                 	db	101	;'e'
   775  00EDDD  3F                 	db	63	;'?'
   776  00EDDE  3A                 	db	58	;':'
   777  00EDDF  20                 	db	32
   778  00EDE0  52                 	db	82	;'R'
   779  00EDE1  65                 	db	101	;'e'
   780  00EDE2  74                 	db	116	;'t'
   781  00EDE3  75                 	db	117	;'u'
   782  00EDE4  72                 	db	114	;'r'
   783  00EDE5  6E                 	db	110	;'n'
   784  00EDE6  73                 	db	115	;'s'
   785  00EDE7  20                 	db	32
   786  00EDE8  64                 	db	100	;'d'
   787  00EDE9  65                 	db	101	;'e'
   788  00EDEA  76                 	db	118	;'v'
   789  00EDEB  69                 	db	105	;'i'
   790  00EDEC  63                 	db	99	;'c'
   791  00EDED  65                 	db	101	;'e'
   792  00EDEE  20                 	db	32
   793  00EDEF  6F                 	db	111	;'o'
   794  00EDF0  6E                 	db	110	;'n'
   795  00EDF1  20                 	db	32
   796  00EDF2  74                 	db	116	;'t'
   797  00EDF3  69                 	db	105	;'i'
   798  00EDF4  6D                 	db	109	;'m'
   799  00EDF5  65                 	db	101	;'e'
   800  00EDF6  20                 	db	32
   801  00EDF7  73                 	db	115	;'s'
   802  00EDF8  69                 	db	105	;'i'
   803  00EDF9  6E                 	db	110	;'n'
   804  00EDFA  63                 	db	99	;'c'
   805  00EDFB  65                 	db	101	;'e'
   806  00EDFC  20                 	db	32
   807  00EDFD  6C                 	db	108	;'l'
   808  00EDFE  61                 	db	97	;'a'
   809  00EDFF  73                 	db	115	;'s'
   810  00EE00  74                 	db	116	;'t'
   811  00EE01  20                 	db	32
   812  00EE02  64                 	db	100	;'d'
   813  00EE03  65                 	db	101	;'e'
   814  00EE04  76                 	db	118	;'v'
   815  00EE05  69                 	db	105	;'i'
   816  00EE06  63                 	db	99	;'c'
   817  00EE07  65                 	db	101	;'e'
   818  00EE08  20                 	db	32
   819  00EE09  72                 	db	114	;'r'
   820  00EE0A  65                 	db	101	;'e'
   821  00EE0B  73                 	db	115	;'s'
   822  00EE0C  65                 	db	101	;'e'
   823  00EE0D  74                 	db	116	;'t'
   824  00EE0E  0A                 	db	10
   825  00EE0F  0D                 	db	13
   826  00EE10  20                 	db	32
   827  00EE11  20                 	db	32
   828  00EE12  20                 	db	32
   829  00EE13  44                 	db	68	;'D'
   830  00EE14  65                 	db	101	;'e'
   831  00EE15  76                 	db	118	;'v'
   832  00EE16  69                 	db	105	;'i'
   833  00EE17  63                 	db	99	;'c'
   834  00EE18  65                 	db	101	;'e'
   835  00EE19  20                 	db	32
   836  00EE1A  49                 	db	73	;'I'
   837  00EE1B  44                 	db	68	;'D'
   838  00EE1C  3F                 	db	63	;'?'
   839  00EE1D  3A                 	db	58	;':'
   840  00EE1E  20                 	db	32
   841  00EE1F  52                 	db	82	;'R'
   842  00EE20  65                 	db	101	;'e'
   843  00EE21  74                 	db	116	;'t'
   844  00EE22  75                 	db	117	;'u'
   845  00EE23  72                 	db	114	;'r'
   846  00EE24  6E                 	db	110	;'n'
   847  00EE25  73                 	db	115	;'s'
   848  00EE26  20                 	db	32
   849  00EE27  64                 	db	100	;'d'
   850  00EE28  65                 	db	101	;'e'
   851  00EE29  76                 	db	118	;'v'
   852  00EE2A  69                 	db	105	;'i'
   853  00EE2B  63                 	db	99	;'c'
   854  00EE2C  65                 	db	101	;'e'
   855  00EE2D  20                 	db	32
   856  00EE2E  49                 	db	73	;'I'
   857  00EE2F  44                 	db	68	;'D'
   858  00EE30  20                 	db	32
   859  00EE31  61                 	db	97	;'a'
   860  00EE32  73                 	db	115	;'s'
   861  00EE33  20                 	db	32
   862  00EE34  70                 	db	112	;'p'
   863  00EE35  72                 	db	114	;'r'
   864  00EE36  65                 	db	101	;'e'
   865  00EE37  2D                 	db	45
   866  00EE38  70                 	db	112	;'p'
   867  00EE39  72                 	db	114	;'r'
   868  00EE3A  6F                 	db	111	;'o'
   869  00EE3B  67                 	db	103	;'g'
   870  00EE3C  72                 	db	114	;'r'
   871  00EE3D  61                 	db	97	;'a'
   872  00EE3E  6D                 	db	109	;'m'
   873  00EE3F  6D                 	db	109	;'m'
   874  00EE40  65                 	db	101	;'e'
   875  00EE41  64                 	db	100	;'d'
   876  00EE42  20                 	db	32
   877  00EE43  69                 	db	105	;'i'
   878  00EE44  6E                 	db	110	;'n'
   879  00EE45  20                 	db	32
   880  00EE46  66                 	db	102	;'f'
   881  00EE47  6C                 	db	108	;'l'
   882  00EE48  61                 	db	97	;'a'
   883  00EE49  73                 	db	115	;'s'
   884  00EE4A  68                 	db	104	;'h'
   885  00EE4B  20                 	db	32
   886  00EE4C  6D                 	db	109	;'m'
   887  00EE4D  65                 	db	101	;'e'
   888  00EE4E  6D                 	db	109	;'m'
   889  00EE4F  6F                 	db	111	;'o'
   890  00EE50  72                 	db	114	;'r'
   891  00EE51  79                 	db	121	;'y'
   892  00EE52  0A                 	db	10
   893  00EE53  0D                 	db	13
   894  00EE54  20                 	db	32
   895  00EE55  20                 	db	32
   896  00EE56  20                 	db	32
   897  00EE57  52                 	db	82	;'R'
   898  00EE58  65                 	db	101	;'e'
   899  00EE59  76                 	db	118	;'v'
   900  00EE5A  69                 	db	105	;'i'
   901  00EE5B  73                 	db	115	;'s'
   902  00EE5C  69                 	db	105	;'i'
   903  00EE5D  6F                 	db	111	;'o'
   904  00EE5E  6E                 	db	110	;'n'
   905  00EE5F  20                 	db	32
   906  00EE60  49                 	db	73	;'I'
   907  00EE61  44                 	db	68	;'D'
   908  00EE62  3F                 	db	63	;'?'
   909  00EE63  3A                 	db	58	;':'
   910  00EE64  20                 	db	32
   911  00EE65  52                 	db	82	;'R'
   912  00EE66  65                 	db	101	;'e'
   913  00EE67  74                 	db	116	;'t'
   914  00EE68  75                 	db	117	;'u'
   915  00EE69  72                 	db	114	;'r'
   916  00EE6A  6E                 	db	110	;'n'
   917  00EE6B  73                 	db	115	;'s'
   918  00EE6C  20                 	db	32
   919  00EE6D  64                 	db	100	;'d'
   920  00EE6E  65                 	db	101	;'e'
   921  00EE6F  76                 	db	118	;'v'
   922  00EE70  69                 	db	105	;'i'
   923  00EE71  63                 	db	99	;'c'
   924  00EE72  65                 	db	101	;'e'
   925  00EE73  20                 	db	32
   926  00EE74  73                 	db	115	;'s'
   927  00EE75  69                 	db	105	;'i'
   928  00EE76  6C                 	db	108	;'l'
   929  00EE77  69                 	db	105	;'i'
   930  00EE78  63                 	db	99	;'c'
   931  00EE79  6F                 	db	111	;'o'
   932  00EE7A  6E                 	db	110	;'n'
   933  00EE7B  20                 	db	32
   934  00EE7C  72                 	db	114	;'r'
   935  00EE7D  65                 	db	101	;'e'
   936  00EE7E  76                 	db	118	;'v'
   937  00EE7F  69                 	db	105	;'i'
   938  00EE80  73                 	db	115	;'s'
   939  00EE81  69                 	db	105	;'i'
   940  00EE82  6F                 	db	111	;'o'
   941  00EE83  6E                 	db	110	;'n'
   942  00EE84  20                 	db	32
   943  00EE85  49                 	db	73	;'I'
   944  00EE86  44                 	db	68	;'D'
   945  00EE87  20                 	db	32
   946  00EE88  61                 	db	97	;'a'
   947  00EE89  73                 	db	115	;'s'
   948  00EE8A  20                 	db	32
   949  00EE8B  70                 	db	112	;'p'
   950  00EE8C  72                 	db	114	;'r'
   951  00EE8D  65                 	db	101	;'e'
   952  00EE8E  2D                 	db	45
   953  00EE8F  70                 	db	112	;'p'
   954  00EE90  72                 	db	114	;'r'
   955  00EE91  6F                 	db	111	;'o'
   956  00EE92  67                 	db	103	;'g'
   957  00EE93  72                 	db	114	;'r'
   958  00EE94  61                 	db	97	;'a'
   959  00EE95  6D                 	db	109	;'m'
   960  00EE96  6D                 	db	109	;'m'
   961  00EE97  65                 	db	101	;'e'
   962  00EE98  64                 	db	100	;'d'
   963  00EE99  20                 	db	32
   964  00EE9A  69                 	db	105	;'i'
   965  00EE9B  6E                 	db	110	;'n'
   966  00EE9C  20                 	db	32
   967  00EE9D  66                 	db	102	;'f'
   968  00EE9E  6C                 	db	108	;'l'
   969  00EE9F  61                 	db	97	;'a'
   970  00EEA0  73                 	db	115	;'s'
   971  00EEA1  68                 	db	104	;'h'
   972  00EEA2  20                 	db	32
   973  00EEA3  6D                 	db	109	;'m'
   974  00EEA4  65                 	db	101	;'e'
   975  00EEA5  6D                 	db	109	;'m'
   976  00EEA6  6F                 	db	111	;'o'
   977  00EEA7  72                 	db	114	;'r'
   978  00EEA8  79                 	db	121	;'y'
   979  00EEA9  0A                 	db	10
   980  00EEAA  0D                 	db	13
   981  00EEAB  20                 	db	32
   982  00EEAC  20                 	db	32
   983  00EEAD  20                 	db	32
   984  00EEAE  55                 	db	85	;'U'
   985  00EEAF  73                 	db	115	;'s'
   986  00EEB0  65                 	db	101	;'e'
   987  00EEB1  72                 	db	114	;'r'
   988  00EEB2  20                 	db	32
   989  00EEB3  49                 	db	73	;'I'
   990  00EEB4  44                 	db	68	;'D'
   991  00EEB5  73                 	db	115	;'s'
   992  00EEB6  3F                 	db	63	;'?'
   993  00EEB7  3A                 	db	58	;':'
   994  00EEB8  20                 	db	32
   995  00EEB9  52                 	db	82	;'R'
   996  00EEBA  65                 	db	101	;'e'
   997  00EEBB  74                 	db	116	;'t'
   998  00EEBC  75                 	db	117	;'u'
   999  00EEBD  72                 	db	114	;'r'
  1000  00EEBE  6E                 	db	110	;'n'
  1001  00EEBF  73                 	db	115	;'s'
  1002  00EEC0  20                 	db	32
  1003  00EEC1  61                 	db	97	;'a'
  1004  00EEC2  20                 	db	32
  1005  00EEC3  6C                 	db	108	;'l'
  1006  00EEC4  69                 	db	105	;'i'
  1007  00EEC5  73                 	db	115	;'s'
  1008  00EEC6  74                 	db	116	;'t'
  1009  00EEC7  20                 	db	32
  1010  00EEC8  6F                 	db	111	;'o'
  1011  00EEC9  66                 	db	102	;'f'
  1012  00EECA  20                 	db	32
  1013  00EECB  75                 	db	117	;'u'
  1014  00EECC  73                 	db	115	;'s'
  1015  00EECD  65                 	db	101	;'e'
  1016  00EECE  72                 	db	114	;'r'
  1017  00EECF  20                 	db	32
  1018  00EED0  49                 	db	73	;'I'
  1019  00EED1  44                 	db	68	;'D'
  1020  00EED2  73                 	db	115	;'s'
  1021  00EED3  20                 	db	32
  1022  00EED4  28                 	db	40
  1023  00EED5  64                 	db	100	;'d'
  1024  00EED6  69                 	db	105	;'i'
  1025  00EED7  73                 	db	115	;'s'
  1026  00EED8  70                 	db	112	;'p'
  1027  00EED9  6C                 	db	108	;'l'
  1028  00EEDA  61                 	db	97	;'a'
  1029  00EEDB  79                 	db	121	;'y'
  1030  00EEDC  65                 	db	101	;'e'
  1031  00EEDD  64                 	db	100	;'d'
  1032  00EEDE  20                 	db	32
  1033  00EEDF  69                 	db	105	;'i'
  1034  00EEE0  6E                 	db	110	;'n'
  1035  00EEE1  20                 	db	32
  1036  00EEE2  68                 	db	104	;'h'
  1037  00EEE3  65                 	db	101	;'e'
  1038  00EEE4  78                 	db	120	;'x'
  1039  00EEE5  29                 	db	41
  1040  00EEE6  20                 	db	32
  1041  00EEE7  61                 	db	97	;'a'
  1042  00EEE8  73                 	db	115	;'s'
  1043  00EEE9  20                 	db	32
  1044  00EEEA  73                 	db	115	;'s'
  1045  00EEEB  74                 	db	116	;'t'
  1046  00EEEC  6F                 	db	111	;'o'
  1047  00EEED  72                 	db	114	;'r'
  1048  00EEEE  65                 	db	101	;'e'
  1049  00EEEF  64                 	db	100	;'d'
  1050  00EEF0  20                 	db	32
  1051  00EEF1  69                 	db	105	;'i'
  1052  00EEF2  6E                 	db	110	;'n'
  1053  00EEF3  20                 	db	32
  1054  00EEF4  66                 	db	102	;'f'
  1055  00EEF5  6C                 	db	108	;'l'
  1056  00EEF6  61                 	db	97	;'a'
  1057  00EEF7  73                 	db	115	;'s'
  1058  00EEF8  68                 	db	104	;'h'
  1059  00EEF9  20                 	db	32
  1060  00EEFA  6D                 	db	109	;'m'
  1061  00EEFB  65                 	db	101	;'e'
  1062  00EEFC  6D                 	db	109	;'m'
  1063  00EEFD  6F                 	db	111	;'o'
  1064  00EEFE  72                 	db	114	;'r'
  1065  00EEFF  79                 	db	121	;'y'
  1066  00EF00  0A                 	db	10
  1067  00EF01  0D                 	db	13
  1068  00EF02  20                 	db	32
  1069  00EF03  20                 	db	32
  1070  00EF04  20                 	db	32
  1071  00EF05  41                 	db	65	;'A'
  1072  00EF06  44                 	db	68	;'D'
  1073  00EF07  43                 	db	67	;'C'
  1074  00EF08  20                 	db	32
  1075  00EF09  45                 	db	69	;'E'
  1076  00EF0A  72                 	db	114	;'r'
  1077  00EF0B  72                 	db	114	;'r'
  1078  00EF0C  6F                 	db	111	;'o'
  1079  00EF0D  72                 	db	114	;'r'
  1080  00EF0E  3F                 	db	63	;'?'
  1081  00EF0F  3A                 	db	58	;':'
  1082  00EF10  20                 	db	32
  1083  00EF11  52                 	db	82	;'R'
  1084  00EF12  65                 	db	101	;'e'
  1085  00EF13  74                 	db	116	;'t'
  1086  00EF14  75                 	db	117	;'u'
  1087  00EF15  72                 	db	114	;'r'
  1088  00EF16  6E                 	db	110	;'n'
  1089  00EF17  73                 	db	115	;'s'
  1090  00EF18  20                 	db	32
  1091  00EF19  74                 	db	116	;'t'
  1092  00EF1A  68                 	db	104	;'h'
  1093  00EF1B  65                 	db	101	;'e'
  1094  00EF1C  20                 	db	32
  1095  00EF1D  63                 	db	99	;'c'
  1096  00EF1E  61                 	db	97	;'a'
  1097  00EF1F  75                 	db	117	;'u'
  1098  00EF20  73                 	db	115	;'s'
  1099  00EF21  65                 	db	101	;'e'
  1100  00EF22  20                 	db	32
  1101  00EF23  6F                 	db	111	;'o'
  1102  00EF24  66                 	db	102	;'f'
  1103  00EF25  20                 	db	32
  1104  00EF26  61                 	db	97	;'a'
  1105  00EF27  6E                 	db	110	;'n'
  1106  00EF28  20                 	db	32
  1107  00EF29  41                 	db	65	;'A'
  1108  00EF2A  44                 	db	68	;'D'
  1109  00EF2B  43                 	db	67	;'C'
  1110  00EF2C  20                 	db	32
  1111  00EF2D  65                 	db	101	;'e'
  1112  00EF2E  72                 	db	114	;'r'
  1113  00EF2F  72                 	db	114	;'r'
  1114  00EF30  6F                 	db	111	;'o'
  1115  00EF31  72                 	db	114	;'r'
  1116  00EF32  20                 	db	32
  1117  00EF33  69                 	db	105	;'i'
  1118  00EF34  66                 	db	102	;'f'
  1119  00EF35  20                 	db	32
  1120  00EF36  61                 	db	97	;'a'
  1121  00EF37  6E                 	db	110	;'n'
  1122  00EF38  20                 	db	32
  1123  00EF39  65                 	db	101	;'e'
  1124  00EF3A  72                 	db	114	;'r'
  1125  00EF3B  72                 	db	114	;'r'
  1126  00EF3C  6F                 	db	111	;'o'
  1127  00EF3D  72                 	db	114	;'r'
  1128  00EF3E  20                 	db	32
  1129  00EF3F  6F                 	db	111	;'o'
  1130  00EF40  63                 	db	99	;'c'
  1131  00EF41  63                 	db	99	;'c'
  1132  00EF42  75                 	db	117	;'u'
  1133  00EF43  72                 	db	114	;'r'
  1134  00EF44  72                 	db	114	;'r'
  1135  00EF45  65                 	db	101	;'e'
  1136  00EF46  64                 	db	100	;'d'
  1137  00EF47  0A                 	db	10
  1138  00EF48  0D                 	db	13
  1139  00EF49  20                 	db	32
  1140  00EF4A  20                 	db	32
  1141  00EF4B  20                 	db	32
  1142  00EF4C  43                 	db	67	;'C'
  1143  00EF4D  6C                 	db	108	;'l'
  1144  00EF4E  65                 	db	101	;'e'
  1145  00EF4F  61                 	db	97	;'a'
  1146  00EF50  72                 	db	114	;'r'
  1147  00EF51  20                 	db	32
  1148  00EF52  41                 	db	65	;'A'
  1149  00EF53  44                 	db	68	;'D'
  1150  00EF54  43                 	db	67	;'C'
  1151  00EF55  20                 	db	32
  1152  00EF56  45                 	db	69	;'E'
  1153  00EF57  72                 	db	114	;'r'
  1154  00EF58  72                 	db	114	;'r'
  1155  00EF59  6F                 	db	111	;'o'
  1156  00EF5A  72                 	db	114	;'r'
  1157  00EF5B  3A                 	db	58	;':'
  1158  00EF5C  20                 	db	32
  1159  00EF5D  43                 	db	67	;'C'
  1160  00EF5E  6C                 	db	108	;'l'
  1161  00EF5F  65                 	db	101	;'e'
  1162  00EF60  61                 	db	97	;'a'
  1163  00EF61  72                 	db	114	;'r'
  1164  00EF62  73                 	db	115	;'s'
  1165  00EF63  20                 	db	32
  1166  00EF64  74                 	db	116	;'t'
  1167  00EF65  68                 	db	104	;'h'
  1168  00EF66  65                 	db	101	;'e'
  1169  00EF67  20                 	db	32
  1170  00EF68  41                 	db	65	;'A'
  1171  00EF69  44                 	db	68	;'D'
  1172  00EF6A  43                 	db	67	;'C'
  1173  00EF6B  20                 	db	32
  1174  00EF6C  65                 	db	101	;'e'
  1175  00EF6D  72                 	db	114	;'r'
  1176  00EF6E  72                 	db	114	;'r'
  1177  00EF6F  6F                 	db	111	;'o'
  1178  00EF70  72                 	db	114	;'r'
  1179  00EF71  20                 	db	32
  1180  00EF72  61                 	db	97	;'a'
  1181  00EF73  6E                 	db	110	;'n'
  1182  00EF74  64                 	db	100	;'d'
  1183  00EF75  20                 	db	32
  1184  00EF76  72                 	db	114	;'r'
  1185  00EF77  65                 	db	101	;'e'
  1186  00EF78  73                 	db	115	;'s'
  1187  00EF79  75                 	db	117	;'u'
  1188  00EF7A  6D                 	db	109	;'m'
  1189  00EF7B  65                 	db	101	;'e'
  1190  00EF7C  73                 	db	115	;'s'
  1191  00EF7D  20                 	db	32
  1192  00EF7E  41                 	db	65	;'A'
  1193  00EF7F  44                 	db	68	;'D'
  1194  00EF80  43                 	db	67	;'C'
  1195  00EF81  20                 	db	32
  1196  00EF82  63                 	db	99	;'c'
  1197  00EF83  6F                 	db	111	;'o'
  1198  00EF84  6E                 	db	110	;'n'
  1199  00EF85  76                 	db	118	;'v'
  1200  00EF86  65                 	db	101	;'e'
  1201  00EF87  72                 	db	114	;'r'
  1202  00EF88  73                 	db	115	;'s'
  1203  00EF89  69                 	db	105	;'i'
  1204  00EF8A  6F                 	db	111	;'o'
  1205  00EF8B  6E                 	db	110	;'n'
  1206  00EF8C  73                 	db	115	;'s'
  1207  00EF8D  0A                 	db	10
  1208  00EF8E  0D                 	db	13
  1209  00EF8F  20                 	db	32
  1210  00EF90  20                 	db	32
  1211  00EF91  20                 	db	32
  1212  00EF92  56                 	db	86	;'V'
  1213  00EF93  43                 	db	67	;'C'
  1214  00EF94  43                 	db	67	;'C'
  1215  00EF95  20                 	db	32
  1216  00EF96  4F                 	db	79	;'O'
  1217  00EF97  76                 	db	118	;'v'
  1218  00EF98  65                 	db	101	;'e'
  1219  00EF99  72                 	db	114	;'r'
  1220  00EF9A  76                 	db	118	;'v'
  1221  00EF9B  6F                 	db	111	;'o'
  1222  00EF9C  6C                 	db	108	;'l'
  1223  00EF9D  74                 	db	116	;'t'
  1224  00EF9E  61                 	db	97	;'a'
  1225  00EF9F  67                 	db	103	;'g'
  1226  00EFA0  65                 	db	101	;'e'
  1227  00EFA1  3F                 	db	63	;'?'
  1228  00EFA2  3A                 	db	58	;':'
  1229  00EFA3  20                 	db	32
  1230  00EFA4  53                 	db	83	;'S'
  1231  00EFA5  74                 	db	116	;'t'
  1232  00EFA6  61                 	db	97	;'a'
  1233  00EFA7  74                 	db	116	;'t'
  1234  00EFA8  65                 	db	101	;'e'
  1235  00EFA9  73                 	db	115	;'s'
  1236  00EFAA  20                 	db	32
  1237  00EFAB  69                 	db	105	;'i'
  1238  00EFAC  66                 	db	102	;'f'
  1239  00EFAD  20                 	db	32
  1240  00EFAE  61                 	db	97	;'a'
  1241  00EFAF  20                 	db	32
  1242  00EFB0  56                 	db	86	;'V'
  1243  00EFB1  43                 	db	67	;'C'
  1244  00EFB2  43                 	db	67	;'C'
  1245  00EFB3  20                 	db	32
  1246  00EFB4  6F                 	db	111	;'o'
  1247  00EFB5  76                 	db	118	;'v'
  1248  00EFB6  65                 	db	101	;'e'
  1249  00EFB7  72                 	db	114	;'r'
  1250  00EFB8  76                 	db	118	;'v'
  1251  00EFB9  6F                 	db	111	;'o'
  1252  00EFBA  6C                 	db	108	;'l'
  1253  00EFBB  74                 	db	116	;'t'
  1254  00EFBC  61                 	db	97	;'a'
  1255  00EFBD  67                 	db	103	;'g'
  1256  00EFBE  65                 	db	101	;'e'
  1257  00EFBF  20                 	db	32
  1258  00EFC0  63                 	db	99	;'c'
  1259  00EFC1  6F                 	db	111	;'o'
  1260  00EFC2  6E                 	db	110	;'n'
  1261  00EFC3  64                 	db	100	;'d'
  1262  00EFC4  69                 	db	105	;'i'
  1263  00EFC5  74                 	db	116	;'t'
  1264  00EFC6  69                 	db	105	;'i'
  1265  00EFC7  6F                 	db	111	;'o'
  1266  00EFC8  6E                 	db	110	;'n'
  1267  00EFC9  20                 	db	32
  1268  00EFCA  68                 	db	104	;'h'
  1269  00EFCB  61                 	db	97	;'a'
  1270  00EFCC  73                 	db	115	;'s'
  1271  00EFCD  20                 	db	32
  1272  00EFCE  6F                 	db	111	;'o'
  1273  00EFCF  63                 	db	99	;'c'
  1274  00EFD0  63                 	db	99	;'c'
  1275  00EFD1  75                 	db	117	;'u'
  1276  00EFD2  72                 	db	114	;'r'
  1277  00EFD3  72                 	db	114	;'r'
  1278  00EFD4  65                 	db	101	;'e'
  1279  00EFD5  64                 	db	100	;'d'
  1280  00EFD6  20                 	db	32
  1281  00EFD7  6F                 	db	111	;'o'
  1282  00EFD8  72                 	db	114	;'r'
  1283  00EFD9  20                 	db	32
  1284  00EFDA  6E                 	db	110	;'n'
  1285  00EFDB  6F                 	db	111	;'o'
  1286  00EFDC  74                 	db	116	;'t'
  1287  00EFDD  0A                 	db	10
  1288  00EFDE  0D                 	db	13
  1289  00EFDF  20                 	db	32
  1290  00EFE0  20                 	db	32
  1291  00EFE1  20                 	db	32
  1292  00EFE2  48                 	db	72	;'H'
  1293  00EFE3  65                 	db	101	;'e'
  1294  00EFE4  6C                 	db	108	;'l'
  1295  00EFE5  70                 	db	112	;'p'
  1296  00EFE6  3A                 	db	58	;':'
  1297  00EFE7  20                 	db	32
  1298  00EFE8  54                 	db	84	;'T'
  1299  00EFE9  68                 	db	104	;'h'
  1300  00EFEA  69                 	db	105	;'i'
  1301  00EFEB  73                 	db	115	;'s'
  1302  00EFEC  20                 	db	32
  1303  00EFED  6D                 	db	109	;'m'
  1304  00EFEE  65                 	db	101	;'e'
  1305  00EFEF  73                 	db	115	;'s'
  1306  00EFF0  73                 	db	115	;'s'
  1307  00EFF1  61                 	db	97	;'a'
  1308  00EFF2  67                 	db	103	;'g'
  1309  00EFF3  65                 	db	101	;'e'
  1310  00EFF4  2C                 	db	44
  1311  00EFF5  20                 	db	32
  1312  00EFF6  6C                 	db	108	;'l'
  1313  00EFF7  69                 	db	105	;'i'
  1314  00EFF8  73                 	db	115	;'s'
  1315  00EFF9  74                 	db	116	;'t'
  1316  00EFFA  73                 	db	115	;'s'
  1317  00EFFB  20                 	db	32
  1318  00EFFC  73                 	db	115	;'s'
  1319  00EFFD  75                 	db	117	;'u'
  1320  00EFFE  70                 	db	112	;'p'
  1321  00EFFF  70                 	db	112	;'p'
  1322  00F000  6F                 	db	111	;'o'
  1323  00F001  72                 	db	114	;'r'
  1324  00F002  74                 	db	116	;'t'
  1325  00F003  65                 	db	101	;'e'
  1326  00F004  64                 	db	100	;'d'
  1327  00F005  20                 	db	32
  1328  00F006  63                 	db	99	;'c'
  1329  00F007  6F                 	db	111	;'o'
  1330  00F008  6D                 	db	109	;'m'
  1331  00F009  6D                 	db	109	;'m'
  1332  00F00A  61                 	db	97	;'a'
  1333  00F00B  6E                 	db	110	;'n'
  1334  00F00C  64                 	db	100	;'d'
  1335  00F00D  73                 	db	115	;'s'
  1336  00F00E  0A                 	db	10
  1337  00F00F  0D                 	db	13
  1338  00F010  0A                 	db	10
  1339  00F011  0D                 	db	13
  1340  00F012  44                 	db	68	;'D'
  1341  00F013  65                 	db	101	;'e'
  1342  00F014  76                 	db	118	;'v'
  1343  00F015  69                 	db	105	;'i'
  1344  00F016  63                 	db	99	;'c'
  1345  00F017  65                 	db	101	;'e'
  1346  00F018  20                 	db	32
  1347  00F019  4D                 	db	77	;'M'
  1348  00F01A  65                 	db	101	;'e'
  1349  00F01B  61                 	db	97	;'a'
  1350  00F01C  73                 	db	115	;'s'
  1351  00F01D  75                 	db	117	;'u'
  1352  00F01E  72                 	db	114	;'r'
  1353  00F01F  65                 	db	101	;'e'
  1354  00F020  6D                 	db	109	;'m'
  1355  00F021  65                 	db	101	;'e'
  1356  00F022  6E                 	db	110	;'n'
  1357  00F023  74                 	db	116	;'t'
  1358  00F024  20                 	db	32
  1359  00F025  43                 	db	67	;'C'
  1360  00F026  6F                 	db	111	;'o'
  1361  00F027  6D                 	db	109	;'m'
  1362  00F028  6D                 	db	109	;'m'
  1363  00F029  61                 	db	97	;'a'
  1364  00F02A  6E                 	db	110	;'n'
  1365  00F02B  64                 	db	100	;'d'
  1366  00F02C  73                 	db	115	;'s'
  1367  00F02D  3A                 	db	58	;':'
  1368  00F02E  0A                 	db	10
  1369  00F02F  0D                 	db	13
  1370  00F030  20                 	db	32
  1371  00F031  20                 	db	32
  1372  00F032  20                 	db	32
  1373  00F033  4D                 	db	77	;'M'
  1374  00F034  65                 	db	101	;'e'
  1375  00F035  61                 	db	97	;'a'
  1376  00F036  73                 	db	115	;'s'
  1377  00F037  75                 	db	117	;'u'
  1378  00F038  72                 	db	114	;'r'
  1379  00F039  65                 	db	101	;'e'
  1380  00F03A  20                 	db	32
  1381  00F03B  50                 	db	80	;'P'
  1382  00F03C  4F                 	db	79	;'O'
  1383  00F03D  53                 	db	83	;'S'
  1384  00F03E  33                 	db	51	;'3'
  1385  00F03F  50                 	db	80	;'P'
  1386  00F040  33                 	db	51	;'3'
  1387  00F041  3F                 	db	63	;'?'
  1388  00F042  3A                 	db	58	;':'
  1389  00F043  20                 	db	32
  1390  00F044  52                 	db	82	;'R'
  1391  00F045  65                 	db	101	;'e'
  1392  00F046  74                 	db	116	;'t'
  1393  00F047  75                 	db	117	;'u'
  1394  00F048  72                 	db	114	;'r'
  1395  00F049  6E                 	db	110	;'n'
  1396  00F04A  73                 	db	115	;'s'
  1397  00F04B  20                 	db	32
  1398  00F04C  2B                 	db	43
  1399  00F04D  33                 	db	51	;'3'
  1400  00F04E  2E                 	db	46
  1401  00F04F  33                 	db	51	;'3'
  1402  00F050  56                 	db	86	;'V'
  1403  00F051  20                 	db	32
  1404  00F052  41                 	db	65	;'A'
  1405  00F053  44                 	db	68	;'D'
  1406  00F054  43                 	db	67	;'C'
  1407  00F055  20                 	db	32
  1408  00F056  43                 	db	67	;'C'
  1409  00F057  6F                 	db	111	;'o'
  1410  00F058  6E                 	db	110	;'n'
  1411  00F059  76                 	db	118	;'v'
  1412  00F05A  65                 	db	101	;'e'
  1413  00F05B  72                 	db	114	;'r'
  1414  00F05C  73                 	db	115	;'s'
  1415  00F05D  69                 	db	105	;'i'
  1416  00F05E  6F                 	db	111	;'o'
  1417  00F05F  6E                 	db	110	;'n'
  1418  00F060  20                 	db	32
  1419  00F061  69                 	db	105	;'i'
  1420  00F062  6E                 	db	110	;'n'
  1421  00F063  20                 	db	32
  1422  00F064  76                 	db	118	;'v'
  1423  00F065  6F                 	db	111	;'o'
  1424  00F066  6C                 	db	108	;'l'
  1425  00F067  74                 	db	116	;'t'
  1426  00F068  73                 	db	115	;'s'
  1427  00F069  0A                 	db	10
  1428  00F06A  0D                 	db	13
  1429  00F06B  20                 	db	32
  1430  00F06C  20                 	db	32
  1431  00F06D  20                 	db	32
  1432  00F06E  4D                 	db	77	;'M'
  1433  00F06F  65                 	db	101	;'e'
  1434  00F070  61                 	db	97	;'a'
  1435  00F071  73                 	db	115	;'s'
  1436  00F072  75                 	db	117	;'u'
  1437  00F073  72                 	db	114	;'r'
  1438  00F074  65                 	db	101	;'e'
  1439  00F075  20                 	db	32
  1440  00F076  50                 	db	80	;'P'
  1441  00F077  4F                 	db	79	;'O'
  1442  00F078  53                 	db	83	;'S'
  1443  00F079  31                 	db	49	;'1'
  1444  00F07A  32                 	db	50	;'2'
  1445  00F07B  3F                 	db	63	;'?'
  1446  00F07C  3A                 	db	58	;':'
  1447  00F07D  20                 	db	32
  1448  00F07E  52                 	db	82	;'R'
  1449  00F07F  65                 	db	101	;'e'
  1450  00F080  74                 	db	116	;'t'
  1451  00F081  75                 	db	117	;'u'
  1452  00F082  72                 	db	114	;'r'
  1453  00F083  6E                 	db	110	;'n'
  1454  00F084  73                 	db	115	;'s'
  1455  00F085  20                 	db	32
  1456  00F086  2B                 	db	43
  1457  00F087  31                 	db	49	;'1'
  1458  00F088  32                 	db	50	;'2'
  1459  00F089  56                 	db	86	;'V'
  1460  00F08A  20                 	db	32
  1461  00F08B  41                 	db	65	;'A'
  1462  00F08C  44                 	db	68	;'D'
  1463  00F08D  43                 	db	67	;'C'
  1464  00F08E  20                 	db	32
  1465  00F08F  43                 	db	67	;'C'
  1466  00F090  6F                 	db	111	;'o'
  1467  00F091  6E                 	db	110	;'n'
  1468  00F092  76                 	db	118	;'v'
  1469  00F093  65                 	db	101	;'e'
  1470  00F094  72                 	db	114	;'r'
  1471  00F095  73                 	db	115	;'s'
  1472  00F096  69                 	db	105	;'i'
  1473  00F097  6F                 	db	111	;'o'
  1474  00F098  6E                 	db	110	;'n'
  1475  00F099  20                 	db	32
  1476  00F09A  69                 	db	105	;'i'
  1477  00F09B  6E                 	db	110	;'n'
  1478  00F09C  20                 	db	32
  1479  00F09D  76                 	db	118	;'v'
  1480  00F09E  6F                 	db	111	;'o'
  1481  00F09F  6C                 	db	108	;'l'
  1482  00F0A0  74                 	db	116	;'t'
  1483  00F0A1  73                 	db	115	;'s'
  1484  00F0A2  0A                 	db	10
  1485  00F0A3  0D                 	db	13
  1486  00F0A4  20                 	db	32
  1487  00F0A5  20                 	db	32
  1488  00F0A6  20                 	db	32
  1489  00F0A7  4D                 	db	77	;'M'
  1490  00F0A8  65                 	db	101	;'e'
  1491  00F0A9  61                 	db	97	;'a'
  1492  00F0AA  73                 	db	115	;'s'
  1493  00F0AB  75                 	db	117	;'u'
  1494  00F0AC  72                 	db	114	;'r'
  1495  00F0AD  65                 	db	101	;'e'
  1496  00F0AE  20                 	db	32
  1497  00F0AF  44                 	db	68	;'D'
  1498  00F0B0  69                 	db	105	;'i'
  1499  00F0B1  65                 	db	101	;'e'
  1500  00F0B2  20                 	db	32
  1501  00F0B3  54                 	db	84	;'T'
  1502  00F0B4  65                 	db	101	;'e'
  1503  00F0B5  6D                 	db	109	;'m'
  1504  00F0B6  70                 	db	112	;'p'
  1505  00F0B7  3F                 	db	63	;'?'
  1506  00F0B8  3A                 	db	58	;':'
  1507  00F0B9  20                 	db	32
  1508  00F0BA  52                 	db	82	;'R'
  1509  00F0BB  65                 	db	101	;'e'
  1510  00F0BC  74                 	db	116	;'t'
  1511  00F0BD  75                 	db	117	;'u'
  1512  00F0BE  72                 	db	114	;'r'
  1513  00F0BF  6E                 	db	110	;'n'
  1514  00F0C0  73                 	db	115	;'s'
  1515  00F0C1  20                 	db	32
  1516  00F0C2  74                 	db	116	;'t'
  1517  00F0C3  68                 	db	104	;'h'
  1518  00F0C4  65                 	db	101	;'e'
  1519  00F0C5  20                 	db	32
  1520  00F0C6  6D                 	db	109	;'m'
  1521  00F0C7  69                 	db	105	;'i'
  1522  00F0C8  63                 	db	99	;'c'
  1523  00F0C9  72                 	db	114	;'r'
  1524  00F0CA  6F                 	db	111	;'o'
  1525  00F0CB  63                 	db	99	;'c'
  1526  00F0CC  6F                 	db	111	;'o'
  1527  00F0CD  6E                 	db	110	;'n'
  1528  00F0CE  74                 	db	116	;'t'
  1529  00F0CF  72                 	db	114	;'r'
  1530  00F0D0  6F                 	db	111	;'o'
  1531  00F0D1  6C                 	db	108	;'l'
  1532  00F0D2  6C                 	db	108	;'l'
  1533  00F0D3  65                 	db	101	;'e'
  1534  00F0D4  72                 	db	114	;'r'
  1535  00F0D5  20                 	db	32
  1536  00F0D6  64                 	db	100	;'d'
  1537  00F0D7  69                 	db	105	;'i'
  1538  00F0D8  65                 	db	101	;'e'
  1539  00F0D9  20                 	db	32
  1540  00F0DA  74                 	db	116	;'t'
  1541  00F0DB  65                 	db	101	;'e'
  1542  00F0DC  6D                 	db	109	;'m'
  1543  00F0DD  70                 	db	112	;'p'
  1544  00F0DE  65                 	db	101	;'e'
  1545  00F0DF  72                 	db	114	;'r'
  1546  00F0E0  61                 	db	97	;'a'
  1547  00F0E1  74                 	db	116	;'t'
  1548  00F0E2  75                 	db	117	;'u'
  1549  00F0E3  72                 	db	114	;'r'
  1550  00F0E4  65                 	db	101	;'e'
  1551  00F0E5  20                 	db	32
  1552  00F0E6  69                 	db	105	;'i'
  1553  00F0E7  6E                 	db	110	;'n'
  1554  00F0E8  20                 	db	32
  1555  00F0E9  64                 	db	100	;'d'
  1556  00F0EA  65                 	db	101	;'e'
  1557  00F0EB  67                 	db	103	;'g'
  1558  00F0EC  72                 	db	114	;'r'
  1559  00F0ED  65                 	db	101	;'e'
  1560  00F0EE  65                 	db	101	;'e'
  1561  00F0EF  73                 	db	115	;'s'
  1562  00F0F0  20                 	db	32
  1563  00F0F1  43                 	db	67	;'C'
  1564  00F0F2  0A                 	db	10
  1565  00F0F3  0D                 	db	13
  1566  00F0F4  20                 	db	32
  1567  00F0F5  20                 	db	32
  1568  00F0F6  20                 	db	32
  1569  00F0F7  4D                 	db	77	;'M'
  1570  00F0F8  65                 	db	101	;'e'
  1571  00F0F9  61                 	db	97	;'a'
  1572  00F0FA  73                 	db	115	;'s'
  1573  00F0FB  75                 	db	117	;'u'
  1574  00F0FC  72                 	db	114	;'r'
  1575  00F0FD  65                 	db	101	;'e'
  1576  00F0FE  20                 	db	32
  1577  00F0FF  46                 	db	70	;'F'
  1578  00F100  56                 	db	86	;'V'
  1579  00F101  52                 	db	82	;'R'
  1580  00F102  3F                 	db	63	;'?'
  1581  00F103  3A                 	db	58	;':'
  1582  00F104  20                 	db	32
  1583  00F105  52                 	db	82	;'R'
  1584  00F106  65                 	db	101	;'e'
  1585  00F107  74                 	db	116	;'t'
  1586  00F108  75                 	db	117	;'u'
  1587  00F109  72                 	db	114	;'r'
  1588  00F10A  6E                 	db	110	;'n'
  1589  00F10B  73                 	db	115	;'s'
  1590  00F10C  20                 	db	32
  1591  00F10D  74                 	db	116	;'t'
  1592  00F10E  68                 	db	104	;'h'
  1593  00F10F  65                 	db	101	;'e'
  1594  00F110  20                 	db	32
  1595  00F111  69                 	db	105	;'i'
  1596  00F112  6E                 	db	110	;'n'
  1597  00F113  74                 	db	116	;'t'
  1598  00F114  65                 	db	101	;'e'
  1599  00F115  72                 	db	114	;'r'
  1600  00F116  6E                 	db	110	;'n'
  1601  00F117  61                 	db	97	;'a'
  1602  00F118  6C                 	db	108	;'l'
  1603  00F119  20                 	db	32
  1604  00F11A  66                 	db	102	;'f'
  1605  00F11B  69                 	db	105	;'i'
  1606  00F11C  78                 	db	120	;'x'
  1607  00F11D  65                 	db	101	;'e'
  1608  00F11E  64                 	db	100	;'d'
  1609  00F11F  20                 	db	32
  1610  00F120  76                 	db	118	;'v'
  1611  00F121  6F                 	db	111	;'o'
  1612  00F122  6C                 	db	108	;'l'
  1613  00F123  74                 	db	116	;'t'
  1614  00F124  61                 	db	97	;'a'
  1615  00F125  67                 	db	103	;'g'
  1616  00F126  65                 	db	101	;'e'
  1617  00F127  20                 	db	32
  1618  00F128  72                 	db	114	;'r'
  1619  00F129  65                 	db	101	;'e'
  1620  00F12A  66                 	db	102	;'f'
  1621  00F12B  65                 	db	101	;'e'
  1622  00F12C  72                 	db	114	;'r'
  1623  00F12D  65                 	db	101	;'e'
  1624  00F12E  6E                 	db	110	;'n'
  1625  00F12F  63                 	db	99	;'c'
  1626  00F130  65                 	db	101	;'e'
  1627  00F131  20                 	db	32
  1628  00F132  62                 	db	98	;'b'
  1629  00F133  75                 	db	117	;'u'
  1630  00F134  66                 	db	102	;'f'
  1631  00F135  66                 	db	102	;'f'
  1632  00F136  65                 	db	101	;'e'
  1633  00F137  72                 	db	114	;'r'
  1634  00F138  20                 	db	32
  1635  00F139  31                 	db	49	;'1'
  1636  00F13A  20                 	db	32
  1637  00F13B  6F                 	db	111	;'o'
  1638  00F13C  75                 	db	117	;'u'
  1639  00F13D  74                 	db	116	;'t'
  1640  00F13E  70                 	db	112	;'p'
  1641  00F13F  75                 	db	117	;'u'
  1642  00F140  74                 	db	116	;'t'
  1643  00F141  20                 	db	32
  1644  00F142  69                 	db	105	;'i'
  1645  00F143  6E                 	db	110	;'n'
  1646  00F144  20                 	db	32
  1647  00F145  76                 	db	118	;'v'
  1648  00F146  6F                 	db	111	;'o'
  1649  00F147  6C                 	db	108	;'l'
  1650  00F148  74                 	db	116	;'t'
  1651  00F149  73                 	db	115	;'s'
  1652  00F14A  0A                 	db	10
  1653  00F14B  0D                 	db	13
  1654  00F14C  20                 	db	32
  1655  00F14D  20                 	db	32
  1656  00F14E  20                 	db	32
  1657  00F14F  4D                 	db	77	;'M'
  1658  00F150  65                 	db	101	;'e'
  1659  00F151  61                 	db	97	;'a'
  1660  00F152  73                 	db	115	;'s'
  1661  00F153  75                 	db	117	;'u'
  1662  00F154  72                 	db	114	;'r'
  1663  00F155  65                 	db	101	;'e'
  1664  00F156  20                 	db	32
  1665  00F157  41                 	db	65	;'A'
  1666  00F158  56                 	db	86	;'V'
  1667  00F159  53                 	db	83	;'S'
  1668  00F15A  53                 	db	83	;'S'
  1669  00F15B  3F                 	db	63	;'?'
  1670  00F15C  3A                 	db	58	;':'
  1671  00F15D  20                 	db	32
  1672  00F15E  52                 	db	82	;'R'
  1673  00F15F  65                 	db	101	;'e'
  1674  00F160  74                 	db	116	;'t'
  1675  00F161  75                 	db	117	;'u'
  1676  00F162  72                 	db	114	;'r'
  1677  00F163  6E                 	db	110	;'n'
  1678  00F164  73                 	db	115	;'s'
  1679  00F165  20                 	db	32
  1680  00F166  74                 	db	116	;'t'
  1681  00F167  68                 	db	104	;'h'
  1682  00F168  65                 	db	101	;'e'
  1683  00F169  20                 	db	32
  1684  00F16A  6D                 	db	109	;'m'
  1685  00F16B  65                 	db	101	;'e'
  1686  00F16C  61                 	db	97	;'a'
  1687  00F16D  73                 	db	115	;'s'
  1688  00F16E  75                 	db	117	;'u'
  1689  00F16F  72                 	db	114	;'r'
  1690  00F170  65                 	db	101	;'e'
  1691  00F171  64                 	db	100	;'d'
  1692  00F172  20                 	db	32
  1693  00F173  76                 	db	118	;'v'
  1694  00F174  61                 	db	97	;'a'
  1695  00F175  6C                 	db	108	;'l'
  1696  00F176  75                 	db	117	;'u'
  1697  00F177  65                 	db	101	;'e'
  1698  00F178  20                 	db	32
  1699  00F179  6F                 	db	111	;'o'
  1700  00F17A  66                 	db	102	;'f'
  1701  00F17B  20                 	db	32
  1702  00F17C  41                 	db	65	;'A'
  1703  00F17D  6E                 	db	110	;'n'
  1704  00F17E  61                 	db	97	;'a'
  1705  00F17F  6C                 	db	108	;'l'
  1706  00F180  6F                 	db	111	;'o'
  1707  00F181  67                 	db	103	;'g'
  1708  00F182  20                 	db	32
  1709  00F183  56                 	db	86	;'V'
  1710  00F184  53                 	db	83	;'S'
  1711  00F185  53                 	db	83	;'S'
  1712  00F186  20                 	db	32
  1713  00F187  69                 	db	105	;'i'
  1714  00F188  6E                 	db	110	;'n'
  1715  00F189  20                 	db	32
  1716  00F18A  76                 	db	118	;'v'
  1717  00F18B  6F                 	db	111	;'o'
  1718  00F18C  6C                 	db	108	;'l'
  1719  00F18D  74                 	db	116	;'t'
  1720  00F18E  73                 	db	115	;'s'
  1721  00F18F  0A                 	db	10
  1722  00F190  0D                 	db	13
  1723  00F191  0A                 	db	10
  1724  00F192  0D                 	db	13
  1725  00F193  50                 	db	80	;'P'
  1726  00F194  72                 	db	114	;'r'
  1727  00F195  69                 	db	105	;'i'
  1728  00F196  6D                 	db	109	;'m'
  1729  00F197  61                 	db	97	;'a'
  1730  00F198  72                 	db	114	;'r'
  1731  00F199  79                 	db	121	;'y'
  1732  00F19A  20                 	db	32
  1733  00F19B  4D                 	db	77	;'M'
  1734  00F19C  65                 	db	101	;'e'
  1735  00F19D  61                 	db	97	;'a'
  1736  00F19E  73                 	db	115	;'s'
  1737  00F19F  75                 	db	117	;'u'
  1738  00F1A0  72                 	db	114	;'r'
  1739  00F1A1  65                 	db	101	;'e'
  1740  00F1A2  6D                 	db	109	;'m'
  1741  00F1A3  65                 	db	101	;'e'
  1742  00F1A4  6E                 	db	110	;'n'
  1743  00F1A5  74                 	db	116	;'t'
  1744  00F1A6  20                 	db	32
  1745  00F1A7  43                 	db	67	;'C'
  1746  00F1A8  6F                 	db	111	;'o'
  1747  00F1A9  6D                 	db	109	;'m'
  1748  00F1AA  6D                 	db	109	;'m'
  1749  00F1AB  61                 	db	97	;'a'
  1750  00F1AC  6E                 	db	110	;'n'
  1751  00F1AD  64                 	db	100	;'d'
  1752  00F1AE  73                 	db	115	;'s'
  1753  00F1AF  3A                 	db	58	;':'
  1754  00F1B0  0A                 	db	10
  1755  00F1B1  0D                 	db	13
  1756  00F1B2  20                 	db	32
  1757  00F1B3  20                 	db	32
  1758  00F1B4  20                 	db	32
  1759  00F1B5  4D                 	db	77	;'M'
  1760  00F1B6  65                 	db	101	;'e'
  1761  00F1B7  61                 	db	97	;'a'
  1762  00F1B8  73                 	db	115	;'s'
  1763  00F1B9  75                 	db	117	;'u'
  1764  00F1BA  72                 	db	114	;'r'
  1765  00F1BB  65                 	db	101	;'e'
  1766  00F1BC  20                 	db	32
  1767  00F1BD  44                 	db	68	;'D'
  1768  00F1BE  65                 	db	101	;'e'
  1769  00F1BF  74                 	db	116	;'t'
  1770  00F1C0  65                 	db	101	;'e'
  1771  00F1C1  63                 	db	99	;'c'
  1772  00F1C2  74                 	db	116	;'t'
  1773  00F1C3  65                 	db	101	;'e'
  1774  00F1C4  64                 	db	100	;'d'
  1775  00F1C5  20                 	db	32
  1776  00F1C6  43                 	db	67	;'C'
  1777  00F1C7  75                 	db	117	;'u'
  1778  00F1C8  72                 	db	114	;'r'
  1779  00F1C9  72                 	db	114	;'r'
  1780  00F1CA  65                 	db	101	;'e'
  1781  00F1CB  6E                 	db	110	;'n'
  1782  00F1CC  74                 	db	116	;'t'
  1783  00F1CD  3F                 	db	63	;'?'
  1784  00F1CE  3A                 	db	58	;':'
  1785  00F1CF  20                 	db	32
  1786  00F1D0  52                 	db	82	;'R'
  1787  00F1D1  65                 	db	101	;'e'
  1788  00F1D2  74                 	db	116	;'t'
  1789  00F1D3  75                 	db	117	;'u'
  1790  00F1D4  72                 	db	114	;'r'
  1791  00F1D5  6E                 	db	110	;'n'
  1792  00F1D6  73                 	db	115	;'s'
  1793  00F1D7  20                 	db	32
  1794  00F1D8  6D                 	db	109	;'m'
  1795  00F1D9  65                 	db	101	;'e'
  1796  00F1DA  61                 	db	97	;'a'
  1797  00F1DB  73                 	db	115	;'s'
  1798  00F1DC  75                 	db	117	;'u'
  1799  00F1DD  72                 	db	114	;'r'
  1800  00F1DE  65                 	db	101	;'e'
  1801  00F1DF  64                 	db	100	;'d'
  1802  00F1E0  20                 	db	32
  1803  00F1E1  6F                 	db	111	;'o'
  1804  00F1E2  75                 	db	117	;'u'
  1805  00F1E3  74                 	db	116	;'t'
  1806  00F1E4  70                 	db	112	;'p'
  1807  00F1E5  75                 	db	117	;'u'
  1808  00F1E6  74                 	db	116	;'t'
  1809  00F1E7  20                 	db	32
  1810  00F1E8  63                 	db	99	;'c'
  1811  00F1E9  75                 	db	117	;'u'
  1812  00F1EA  72                 	db	114	;'r'
  1813  00F1EB  72                 	db	114	;'r'
  1814  00F1EC  65                 	db	101	;'e'
  1815  00F1ED  6E                 	db	110	;'n'
  1816  00F1EE  74                 	db	116	;'t'
  1817  00F1EF  20                 	db	32
  1818  00F1F0  69                 	db	105	;'i'
  1819  00F1F1  6E                 	db	110	;'n'
  1820  00F1F2  20                 	db	32
  1821  00F1F3  61                 	db	97	;'a'
  1822  00F1F4  6D                 	db	109	;'m'
  1823  00F1F5  70                 	db	112	;'p'
  1824  00F1F6  73                 	db	115	;'s'
  1825  00F1F7  20                 	db	32
  1826  00F1F8  61                 	db	97	;'a'
  1827  00F1F9  73                 	db	115	;'s'
  1828  00F1FA  20                 	db	32
  1829  00F1FB  73                 	db	115	;'s'
  1830  00F1FC  65                 	db	101	;'e'
  1831  00F1FD  65                 	db	101	;'e'
  1832  00F1FE  6E                 	db	110	;'n'
  1833  00F1FF  20                 	db	32
  1834  00F200  62                 	db	98	;'b'
  1835  00F201  79                 	db	121	;'y'
  1836  00F202  20                 	db	32
  1837  00F203  41                 	db	65	;'A'
  1838  00F204  44                 	db	68	;'D'
  1839  00F205  43                 	db	67	;'C'
  1840  00F206  0A                 	db	10
  1841  00F207  0D                 	db	13
  1842  00F208  20                 	db	32
  1843  00F209  20                 	db	32
  1844  00F20A  20                 	db	32
  1845  00F20B  4D                 	db	77	;'M'
  1846  00F20C  65                 	db	101	;'e'
  1847  00F20D  61                 	db	97	;'a'
  1848  00F20E  73                 	db	115	;'s'
  1849  00F20F  75                 	db	117	;'u'
  1850  00F210  72                 	db	114	;'r'
  1851  00F211  65                 	db	101	;'e'
  1852  00F212  20                 	db	32
  1853  00F213  52                 	db	82	;'R'
  1854  00F214  4D                 	db	77	;'M'
  1855  00F215  53                 	db	83	;'S'
  1856  00F216  20                 	db	32
  1857  00F217  43                 	db	67	;'C'
  1858  00F218  75                 	db	117	;'u'
  1859  00F219  72                 	db	114	;'r'
  1860  00F21A  72                 	db	114	;'r'
  1861  00F21B  65                 	db	101	;'e'
  1862  00F21C  6E                 	db	110	;'n'
  1863  00F21D  74                 	db	116	;'t'
  1864  00F21E  3F                 	db	63	;'?'
  1865  00F21F  3A                 	db	58	;':'
  1866  00F220  20                 	db	32
  1867  00F221  52                 	db	82	;'R'
  1868  00F222  65                 	db	101	;'e'
  1869  00F223  74                 	db	116	;'t'
  1870  00F224  75                 	db	117	;'u'
  1871  00F225  72                 	db	114	;'r'
  1872  00F226  6E                 	db	110	;'n'
  1873  00F227  73                 	db	115	;'s'
  1874  00F228  20                 	db	32
  1875  00F229  74                 	db	116	;'t'
  1876  00F22A  68                 	db	104	;'h'
  1877  00F22B  65                 	db	101	;'e'
  1878  00F22C  20                 	db	32
  1879  00F22D  63                 	db	99	;'c'
  1880  00F22E  61                 	db	97	;'a'
  1881  00F22F  6C                 	db	108	;'l'
  1882  00F230  63                 	db	99	;'c'
  1883  00F231  75                 	db	117	;'u'
  1884  00F232  6C                 	db	108	;'l'
  1885  00F233  61                 	db	97	;'a'
  1886  00F234  74                 	db	116	;'t'
  1887  00F235  65                 	db	101	;'e'
  1888  00F236  64                 	db	100	;'d'
  1889  00F237  20                 	db	32
  1890  00F238  52                 	db	82	;'R'
  1891  00F239  4D                 	db	77	;'M'
  1892  00F23A  53                 	db	83	;'S'
  1893  00F23B  20                 	db	32
  1894  00F23C  6F                 	db	111	;'o'
  1895  00F23D  75                 	db	117	;'u'
  1896  00F23E  74                 	db	116	;'t'
  1897  00F23F  70                 	db	112	;'p'
  1898  00F240  75                 	db	117	;'u'
  1899  00F241  74                 	db	116	;'t'
  1900  00F242  20                 	db	32
  1901  00F243  63                 	db	99	;'c'
  1902  00F244  75                 	db	117	;'u'
  1903  00F245  72                 	db	114	;'r'
  1904  00F246  72                 	db	114	;'r'
  1905  00F247  65                 	db	101	;'e'
  1906  00F248  6E                 	db	110	;'n'
  1907  00F249  74                 	db	116	;'t'
  1908  00F24A  20                 	db	32
  1909  00F24B  66                 	db	102	;'f'
  1910  00F24C  72                 	db	114	;'r'
  1911  00F24D  6F                 	db	111	;'o'
  1912  00F24E  6D                 	db	109	;'m'
  1913  00F24F  20                 	db	32
  1914  00F250  6D                 	db	109	;'m'
  1915  00F251  65                 	db	101	;'e'
  1916  00F252  61                 	db	97	;'a'
  1917  00F253  73                 	db	115	;'s'
  1918  00F254  75                 	db	117	;'u'
  1919  00F255  72                 	db	114	;'r'
  1920  00F256  65                 	db	101	;'e'
  1921  00F257  6D                 	db	109	;'m'
  1922  00F258  65                 	db	101	;'e'
  1923  00F259  6E                 	db	110	;'n'
  1924  00F25A  74                 	db	116	;'t'
  1925  00F25B  73                 	db	115	;'s'
  1926  00F25C  20                 	db	32
  1927  00F25D  61                 	db	97	;'a'
  1928  00F25E  6E                 	db	110	;'n'
  1929  00F25F  64                 	db	100	;'d'
  1930  00F260  20                 	db	32
  1931  00F261  54                 	db	84	;'T'
  1932  00F262  52                 	db	82	;'R'
  1933  00F263  49                 	db	73	;'I'
  1934  00F264  41                 	db	65	;'A'
  1935  00F265  43                 	db	67	;'C'
  1936  00F266  20                 	db	32
  1937  00F267  66                 	db	102	;'f'
  1938  00F268  69                 	db	105	;'i'
  1939  00F269  72                 	db	114	;'r'
  1940  00F26A  69                 	db	105	;'i'
  1941  00F26B  6E                 	db	110	;'n'
  1942  00F26C  67                 	db	103	;'g'
  1943  00F26D  20                 	db	32
  1944  00F26E  61                 	db	97	;'a'
  1945  00F26F  6E                 	db	110	;'n'
  1946  00F270  67                 	db	103	;'g'
  1947  00F271  6C                 	db	108	;'l'
  1948  00F272  65                 	db	101	;'e'
  1949  00F273  0A                 	db	10
  1950  00F274  0D                 	db	13
  1951  00F275  20                 	db	32
  1952  00F276  20                 	db	32
  1953  00F277  20                 	db	32
  1954  00F278  4D                 	db	77	;'M'
  1955  00F279  65                 	db	101	;'e'
  1956  00F27A  61                 	db	97	;'a'
  1957  00F27B  73                 	db	115	;'s'
  1958  00F27C  75                 	db	117	;'u'
  1959  00F27D  72                 	db	114	;'r'
  1960  00F27E  65                 	db	101	;'e'
  1961  00F27F  20                 	db	32
  1962  00F280  52                 	db	82	;'R'
  1963  00F281  4D                 	db	77	;'M'
  1964  00F282  53                 	db	83	;'S'
  1965  00F283  20                 	db	32
  1966  00F284  56                 	db	86	;'V'
  1967  00F285  6F                 	db	111	;'o'
  1968  00F286  6C                 	db	108	;'l'
  1969  00F287  74                 	db	116	;'t'
  1970  00F288  61                 	db	97	;'a'
  1971  00F289  67                 	db	103	;'g'
  1972  00F28A  65                 	db	101	;'e'
  1973  00F28B  3F                 	db	63	;'?'
  1974  00F28C  3A                 	db	58	;':'
  1975  00F28D  20                 	db	32
  1976  00F28E  52                 	db	82	;'R'
  1977  00F28F  65                 	db	101	;'e'
  1978  00F290  74                 	db	116	;'t'
  1979  00F291  75                 	db	117	;'u'
  1980  00F292  72                 	db	114	;'r'
  1981  00F293  6E                 	db	110	;'n'
  1982  00F294  73                 	db	115	;'s'
  1983  00F295  20                 	db	32
  1984  00F296  74                 	db	116	;'t'
  1985  00F297  68                 	db	104	;'h'
  1986  00F298  65                 	db	101	;'e'
  1987  00F299  20                 	db	32
  1988  00F29A  63                 	db	99	;'c'
  1989  00F29B  61                 	db	97	;'a'
  1990  00F29C  6C                 	db	108	;'l'
  1991  00F29D  63                 	db	99	;'c'
  1992  00F29E  75                 	db	117	;'u'
  1993  00F29F  6C                 	db	108	;'l'
  1994  00F2A0  61                 	db	97	;'a'
  1995  00F2A1  74                 	db	116	;'t'
  1996  00F2A2  65                 	db	101	;'e'
  1997  00F2A3  64                 	db	100	;'d'
  1998  00F2A4  20                 	db	32
  1999  00F2A5  52                 	db	82	;'R'
  2000  00F2A6  4D                 	db	77	;'M'
  2001  00F2A7  53                 	db	83	;'S'
  2002  00F2A8  20                 	db	32
  2003  00F2A9  6F                 	db	111	;'o'
  2004  00F2AA  75                 	db	117	;'u'
  2005  00F2AB  74                 	db	116	;'t'
  2006  00F2AC  70                 	db	112	;'p'
  2007  00F2AD  75                 	db	117	;'u'
  2008  00F2AE  74                 	db	116	;'t'
  2009  00F2AF  20                 	db	32
  2010  00F2B0  76                 	db	118	;'v'
  2011  00F2B1  6F                 	db	111	;'o'
  2012  00F2B2  6C                 	db	108	;'l'
  2013  00F2B3  74                 	db	116	;'t'
  2014  00F2B4  61                 	db	97	;'a'
  2015  00F2B5  67                 	db	103	;'g'
  2016  00F2B6  65                 	db	101	;'e'
  2017  00F2B7  20                 	db	32
  2018  00F2B8  66                 	db	102	;'f'
  2019  00F2B9  72                 	db	114	;'r'
  2020  00F2BA  6F                 	db	111	;'o'
  2021  00F2BB  6D                 	db	109	;'m'
  2022  00F2BC  20                 	db	32
  2023  00F2BD  54                 	db	84	;'T'
  2024  00F2BE  52                 	db	82	;'R'
  2025  00F2BF  49                 	db	73	;'I'
  2026  00F2C0  41                 	db	65	;'A'
  2027  00F2C1  43                 	db	67	;'C'
  2028  00F2C2  20                 	db	32
  2029  00F2C3  66                 	db	102	;'f'
  2030  00F2C4  69                 	db	105	;'i'
  2031  00F2C5  72                 	db	114	;'r'
  2032  00F2C6  69                 	db	105	;'i'
  2033  00F2C7  6E                 	db	110	;'n'
  2034  00F2C8  67                 	db	103	;'g'
  2035  00F2C9  20                 	db	32
  2036  00F2CA  61                 	db	97	;'a'
  2037  00F2CB  6E                 	db	110	;'n'
  2038  00F2CC  67                 	db	103	;'g'
  2039  00F2CD  6C                 	db	108	;'l'
  2040  00F2CE  65                 	db	101	;'e'
  2041  00F2CF  0A                 	db	10
  2042  00F2D0  0D                 	db	13
  2043  00F2D1  20                 	db	32
  2044  00F2D2  20                 	db	32
  2045  00F2D3  20                 	db	32
  2046  00F2D4  4D                 	db	77	;'M'
  2047  00F2D5  65                 	db	101	;'e'
  2048  00F2D6  61                 	db	97	;'a'
  2049  00F2D7  73                 	db	115	;'s'
  2050  00F2D8  75                 	db	117	;'u'
  2051  00F2D9  72                 	db	114	;'r'
  2052  00F2DA  65                 	db	101	;'e'
  2053  00F2DB  20                 	db	32
  2054  00F2DC  50                 	db	80	;'P'
  2055  00F2DD  6F                 	db	111	;'o'
  2056  00F2DE  77                 	db	119	;'w'
  2057  00F2DF  65                 	db	101	;'e'
  2058  00F2E0  72                 	db	114	;'r'
  2059  00F2E1  3F                 	db	63	;'?'
  2060  00F2E2  3A                 	db	58	;':'
  2061  00F2E3  20                 	db	32
  2062  00F2E4  52                 	db	82	;'R'
  2063  00F2E5  65                 	db	101	;'e'
  2064  00F2E6  74                 	db	116	;'t'
  2065  00F2E7  75                 	db	117	;'u'
  2066  00F2E8  72                 	db	114	;'r'
  2067  00F2E9  6E                 	db	110	;'n'
  2068  00F2EA  73                 	db	115	;'s'
  2069  00F2EB  20                 	db	32
  2070  00F2EC  74                 	db	116	;'t'
  2071  00F2ED  68                 	db	104	;'h'
  2072  00F2EE  65                 	db	101	;'e'
  2073  00F2EF  20                 	db	32
  2074  00F2F0  63                 	db	99	;'c'
  2075  00F2F1  61                 	db	97	;'a'
  2076  00F2F2  6C                 	db	108	;'l'
  2077  00F2F3  63                 	db	99	;'c'
  2078  00F2F4  75                 	db	117	;'u'
  2079  00F2F5  6C                 	db	108	;'l'
  2080  00F2F6  61                 	db	97	;'a'
  2081  00F2F7  74                 	db	116	;'t'
  2082  00F2F8  65                 	db	101	;'e'
  2083  00F2F9  64                 	db	100	;'d'
  2084  00F2FA  20                 	db	32
  2085  00F2FB  6F                 	db	111	;'o'
  2086  00F2FC  75                 	db	117	;'u'
  2087  00F2FD  74                 	db	116	;'t'
  2088  00F2FE  70                 	db	112	;'p'
  2089  00F2FF  75                 	db	117	;'u'
  2090  00F300  74                 	db	116	;'t'
  2091  00F301  20                 	db	32
  2092  00F302  70                 	db	112	;'p'
  2093  00F303  6F                 	db	111	;'o'
  2094  00F304  77                 	db	119	;'w'
  2095  00F305  65                 	db	101	;'e'
  2096  00F306  72                 	db	114	;'r'
  2097  00F307  20                 	db	32
  2098  00F308  69                 	db	105	;'i'
  2099  00F309  6E                 	db	110	;'n'
  2100  00F30A  20                 	db	32
  2101  00F30B  57                 	db	87	;'W'
  2102  00F30C  61                 	db	97	;'a'
  2103  00F30D  74                 	db	116	;'t'
  2104  00F30E  74                 	db	116	;'t'
  2105  00F30F  73                 	db	115	;'s'
  2106  00F310  0A                 	db	10
  2107  00F311  0D                 	db	13
  2108  00F312  20                 	db	32
  2109  00F313  20                 	db	32
  2110  00F314  20                 	db	32
  2111  00F315  4C                 	db	76	;'L'
  2112  00F316  6F                 	db	111	;'o'
  2113  00F317  61                 	db	97	;'a'
  2114  00F318  64                 	db	100	;'d'
  2115  00F319  20                 	db	32
  2116  00F31A  4F                 	db	79	;'O'
  2117  00F31B  6E                 	db	110	;'n'
  2118  00F31C  20                 	db	32
  2119  00F31D  54                 	db	84	;'T'
  2120  00F31E  69                 	db	105	;'i'
  2121  00F31F  6D                 	db	109	;'m'
  2122  00F320  65                 	db	101	;'e'
  2123  00F321  3F                 	db	63	;'?'
  2124  00F322  3A                 	db	58	;':'
  2125  00F323  20                 	db	32
  2126  00F324  52                 	db	82	;'R'
  2127  00F325  65                 	db	101	;'e'
  2128  00F326  74                 	db	116	;'t'
  2129  00F327  75                 	db	117	;'u'
  2130  00F328  72                 	db	114	;'r'
  2131  00F329  6E                 	db	110	;'n'
  2132  00F32A  73                 	db	115	;'s'
  2133  00F32B  20                 	db	32
  2134  00F32C  6C                 	db	108	;'l'
  2135  00F32D  6F                 	db	111	;'o'
  2136  00F32E  61                 	db	97	;'a'
  2137  00F32F  64                 	db	100	;'d'
  2138  00F330  20                 	db	32
  2139  00F331  6F                 	db	111	;'o'
  2140  00F332  6E                 	db	110	;'n'
  2141  00F333  20                 	db	32
  2142  00F334  74                 	db	116	;'t'
  2143  00F335  69                 	db	105	;'i'
  2144  00F336  6D                 	db	109	;'m'
  2145  00F337  65                 	db	101	;'e'
  2146  00F338  20                 	db	32
  2147  00F339  73                 	db	115	;'s'
  2148  00F33A  69                 	db	105	;'i'
  2149  00F33B  6E                 	db	110	;'n'
  2150  00F33C  63                 	db	99	;'c'
  2151  00F33D  65                 	db	101	;'e'
  2152  00F33E  20                 	db	32
  2153  00F33F  6C                 	db	108	;'l'
  2154  00F340  61                 	db	97	;'a'
  2155  00F341  73                 	db	115	;'s'
  2156  00F342  74                 	db	116	;'t'
  2157  00F343  20                 	db	32
  2158  00F344  64                 	db	100	;'d'
  2159  00F345  65                 	db	101	;'e'
  2160  00F346  76                 	db	118	;'v'
  2161  00F347  69                 	db	105	;'i'
  2162  00F348  63                 	db	99	;'c'
  2163  00F349  65                 	db	101	;'e'
  2164  00F34A  20                 	db	32
  2165  00F34B  72                 	db	114	;'r'
  2166  00F34C  65                 	db	101	;'e'
  2167  00F34D  73                 	db	115	;'s'
  2168  00F34E  65                 	db	101	;'e'
  2169  00F34F  74                 	db	116	;'t'
  2170  00F350  20                 	db	32
  2171  00F351  69                 	db	105	;'i'
  2172  00F352  6E                 	db	110	;'n'
  2173  00F353  20                 	db	32
  2174  00F354  73                 	db	115	;'s'
  2175  00F355  65                 	db	101	;'e'
  2176  00F356  63                 	db	99	;'c'
  2177  00F357  6F                 	db	111	;'o'
  2178  00F358  6E                 	db	110	;'n'
  2179  00F359  64                 	db	100	;'d'
  2180  00F35A  73                 	db	115	;'s'
  2181  00F35B  0A                 	db	10
  2182  00F35C  0D                 	db	13
  2183  00F35D  0A                 	db	10
  2184  00F35E  0D                 	db	13
  2185  00F35F  4F                 	db	79	;'O'
  2186  00F360  75                 	db	117	;'u'
  2187  00F361  74                 	db	116	;'t'
  2188  00F362  70                 	db	112	;'p'
  2189  00F363  75                 	db	117	;'u'
  2190  00F364  74                 	db	116	;'t'
  2191  00F365  20                 	db	32
  2192  00F366  43                 	db	67	;'C'
  2193  00F367  6F                 	db	111	;'o'
  2194  00F368  6E                 	db	110	;'n'
  2195  00F369  74                 	db	116	;'t'
  2196  00F36A  72                 	db	114	;'r'
  2197  00F36B  6F                 	db	111	;'o'
  2198  00F36C  6C                 	db	108	;'l'
  2199  00F36D  20                 	db	32
  2200  00F36E  43                 	db	67	;'C'
  2201  00F36F  6F                 	db	111	;'o'
  2202  00F370  6D                 	db	109	;'m'
  2203  00F371  6D                 	db	109	;'m'
  2204  00F372  61                 	db	97	;'a'
  2205  00F373  6E                 	db	110	;'n'
  2206  00F374  64                 	db	100	;'d'
  2207  00F375  73                 	db	115	;'s'
  2208  00F376  3A                 	db	58	;':'
  2209  00F377  0A                 	db	10
  2210  00F378  0D                 	db	13
  2211  00F379  20                 	db	32
  2212  00F37A  20                 	db	32
  2213  00F37B  20                 	db	32
  2214  00F37C  45                 	db	69	;'E'
  2215  00F37D  6E                 	db	110	;'n'
  2216  00F37E  61                 	db	97	;'a'
  2217  00F37F  62                 	db	98	;'b'
  2218  00F380  6C                 	db	108	;'l'
  2219  00F381  65                 	db	101	;'e'
  2220  00F382  20                 	db	32
  2221  00F383  44                 	db	68	;'D'
  2222  00F384  69                 	db	105	;'i'
  2223  00F385  6D                 	db	109	;'m'
  2224  00F386  6D                 	db	109	;'m'
  2225  00F387  69                 	db	105	;'i'
  2226  00F388  6E                 	db	110	;'n'
  2227  00F389  67                 	db	103	;'g'
  2228  00F38A  3A                 	db	58	;':'
  2229  00F38B  20                 	db	32
  2230  00F38C  45                 	db	69	;'E'
  2231  00F38D  6E                 	db	110	;'n'
  2232  00F38E  61                 	db	97	;'a'
  2233  00F38F  62                 	db	98	;'b'
  2234  00F390  6C                 	db	108	;'l'
  2235  00F391  65                 	db	101	;'e'
  2236  00F392  20                 	db	32
  2237  00F393  54                 	db	84	;'T'
  2238  00F394  52                 	db	82	;'R'
  2239  00F395  49                 	db	73	;'I'
  2240  00F396  41                 	db	65	;'A'
  2241  00F397  43                 	db	67	;'C'
  2242  00F398  20                 	db	32
  2243  00F399  6F                 	db	111	;'o'
  2244  00F39A  75                 	db	117	;'u'
  2245  00F39B  74                 	db	116	;'t'
  2246  00F39C  70                 	db	112	;'p'
  2247  00F39D  75                 	db	117	;'u'
  2248  00F39E  74                 	db	116	;'t'
  2249  00F39F  20                 	db	32
  2250  00F3A0  64                 	db	100	;'d'
  2251  00F3A1  69                 	db	105	;'i'
  2252  00F3A2  6D                 	db	109	;'m'
  2253  00F3A3  6D                 	db	109	;'m'
  2254  00F3A4  69                 	db	105	;'i'
  2255  00F3A5  6E                 	db	110	;'n'
  2256  00F3A6  67                 	db	103	;'g'
  2257  00F3A7  0A                 	db	10
  2258  00F3A8  0D                 	db	13
  2259  00F3A9  20                 	db	32
  2260  00F3AA  20                 	db	32
  2261  00F3AB  20                 	db	32
  2262  00F3AC  44                 	db	68	;'D'
  2263  00F3AD  69                 	db	105	;'i'
  2264  00F3AE  73                 	db	115	;'s'
  2265  00F3AF  61                 	db	97	;'a'
  2266  00F3B0  62                 	db	98	;'b'
  2267  00F3B1  6C                 	db	108	;'l'
  2268  00F3B2  65                 	db	101	;'e'
  2269  00F3B3  20                 	db	32
  2270  00F3B4  44                 	db	68	;'D'
  2271  00F3B5  69                 	db	105	;'i'
  2272  00F3B6  6D                 	db	109	;'m'
  2273  00F3B7  6D                 	db	109	;'m'
  2274  00F3B8  69                 	db	105	;'i'
  2275  00F3B9  6E                 	db	110	;'n'
  2276  00F3BA  67                 	db	103	;'g'
  2277  00F3BB  3A                 	db	58	;':'
  2278  00F3BC  20                 	db	32
  2279  00F3BD  44                 	db	68	;'D'
  2280  00F3BE  69                 	db	105	;'i'
  2281  00F3BF  73                 	db	115	;'s'
  2282  00F3C0  61                 	db	97	;'a'
  2283  00F3C1  62                 	db	98	;'b'
  2284  00F3C2  6C                 	db	108	;'l'
  2285  00F3C3  65                 	db	101	;'e'
  2286  00F3C4  20                 	db	32
  2287  00F3C5  54                 	db	84	;'T'
  2288  00F3C6  52                 	db	82	;'R'
  2289  00F3C7  49                 	db	73	;'I'
  2290  00F3C8  41                 	db	65	;'A'
  2291  00F3C9  43                 	db	67	;'C'
  2292  00F3CA  20                 	db	32
  2293  00F3CB  6F                 	db	111	;'o'
  2294  00F3CC  75                 	db	117	;'u'
  2295  00F3CD  74                 	db	116	;'t'
  2296  00F3CE  70                 	db	112	;'p'
  2297  00F3CF  75                 	db	117	;'u'
  2298  00F3D0  74                 	db	116	;'t'
  2299  00F3D1  20                 	db	32
  2300  00F3D2  64                 	db	100	;'d'
  2301  00F3D3  69                 	db	105	;'i'
  2302  00F3D4  6D                 	db	109	;'m'
  2303  00F3D5  6D                 	db	109	;'m'
  2304  00F3D6  69                 	db	105	;'i'
  2305  00F3D7  6E                 	db	110	;'n'
  2306  00F3D8  67                 	db	103	;'g'
  2307  00F3D9  0A                 	db	10
  2308  00F3DA  0D                 	db	13
  2309  00F3DB  20                 	db	32
  2310  00F3DC  20                 	db	32
  2311  00F3DD  20                 	db	32
  2312  00F3DE  45                 	db	69	;'E'
  2313  00F3DF  6E                 	db	110	;'n'
  2314  00F3E0  61                 	db	97	;'a'
  2315  00F3E1  62                 	db	98	;'b'
  2316  00F3E2  6C                 	db	108	;'l'
  2317  00F3E3  65                 	db	101	;'e'
  2318  00F3E4  20                 	db	32
  2319  00F3E5  4C                 	db	76	;'L'
  2320  00F3E6  6F                 	db	111	;'o'
  2321  00F3E7  61                 	db	97	;'a'
  2322  00F3E8  64                 	db	100	;'d'
  2323  00F3E9  3A                 	db	58	;':'
  2324  00F3EA  20                 	db	32
  2325  00F3EB  45                 	db	69	;'E'
  2326  00F3EC  6E                 	db	110	;'n'
  2327  00F3ED  61                 	db	97	;'a'
  2328  00F3EE  62                 	db	98	;'b'
  2329  00F3EF  6C                 	db	108	;'l'
  2330  00F3F0  65                 	db	101	;'e'
  2331  00F3F1  73                 	db	115	;'s'
  2332  00F3F2  20                 	db	32
  2333  00F3F3  74                 	db	116	;'t'
  2334  00F3F4  68                 	db	104	;'h'
  2335  00F3F5  65                 	db	101	;'e'
  2336  00F3F6  20                 	db	32
  2337  00F3F7  6F                 	db	111	;'o'
  2338  00F3F8  75                 	db	117	;'u'
  2339  00F3F9  74                 	db	116	;'t'
  2340  00F3FA  70                 	db	112	;'p'
  2341  00F3FB  75                 	db	117	;'u'
  2342  00F3FC  74                 	db	116	;'t'
  2343  00F3FD  20                 	db	32
  2344  00F3FE  54                 	db	84	;'T'
  2345  00F3FF  52                 	db	82	;'R'
  2346  00F400  49                 	db	73	;'I'
  2347  00F401  41                 	db	65	;'A'
  2348  00F402  43                 	db	67	;'C'
  2349  00F403  20                 	db	32
  2350  00F404  77                 	db	119	;'w'
  2351  00F405  69                 	db	105	;'i'
  2352  00F406  74                 	db	116	;'t'
  2353  00F407  68                 	db	104	;'h'
  2354  00F408  20                 	db	32
  2355  00F409  64                 	db	100	;'d'
  2356  00F40A  69                 	db	105	;'i'
  2357  00F40B  6D                 	db	109	;'m'
  2358  00F40C  6D                 	db	109	;'m'
  2359  00F40D  69                 	db	105	;'i'
  2360  00F40E  6E                 	db	110	;'n'
  2361  00F40F  67                 	db	103	;'g'
  2362  00F410  20                 	db	32
  2363  00F411  64                 	db	100	;'d'
  2364  00F412  69                 	db	105	;'i'
  2365  00F413  73                 	db	115	;'s'
  2366  00F414  61                 	db	97	;'a'
  2367  00F415  62                 	db	98	;'b'
  2368  00F416  6C                 	db	108	;'l'
  2369  00F417  65                 	db	101	;'e'
  2370  00F418  64                 	db	100	;'d'
  2371  00F419  0A                 	db	10
  2372  00F41A  0D                 	db	13
  2373  00F41B  20                 	db	32
  2374  00F41C  20                 	db	32
  2375  00F41D  20                 	db	32
  2376  00F41E  44                 	db	68	;'D'
  2377  00F41F  69                 	db	105	;'i'
  2378  00F420  73                 	db	115	;'s'
  2379  00F421  61                 	db	97	;'a'
  2380  00F422  62                 	db	98	;'b'
  2381  00F423  6C                 	db	108	;'l'
  2382  00F424  65                 	db	101	;'e'
  2383  00F425  20                 	db	32
  2384  00F426  4C                 	db	76	;'L'
  2385  00F427  6F                 	db	111	;'o'
  2386  00F428  61                 	db	97	;'a'
  2387  00F429  64                 	db	100	;'d'
  2388  00F42A  3A                 	db	58	;':'
  2389  00F42B  20                 	db	32
  2390  00F42C  44                 	db	68	;'D'
  2391  00F42D  69                 	db	105	;'i'
  2392  00F42E  73                 	db	115	;'s'
  2393  00F42F  61                 	db	97	;'a'
  2394  00F430  62                 	db	98	;'b'
  2395  00F431  6C                 	db	108	;'l'
  2396  00F432  65                 	db	101	;'e'
  2397  00F433  73                 	db	115	;'s'
  2398  00F434  20                 	db	32
  2399  00F435  74                 	db	116	;'t'
  2400  00F436  68                 	db	104	;'h'
  2401  00F437  65                 	db	101	;'e'
  2402  00F438  20                 	db	32
  2403  00F439  6F                 	db	111	;'o'
  2404  00F43A  75                 	db	117	;'u'
  2405  00F43B  74                 	db	116	;'t'
  2406  00F43C  70                 	db	112	;'p'
  2407  00F43D  75                 	db	117	;'u'
  2408  00F43E  74                 	db	116	;'t'
  2409  00F43F  20                 	db	32
  2410  00F440  54                 	db	84	;'T'
  2411  00F441  52                 	db	82	;'R'
  2412  00F442  49                 	db	73	;'I'
  2413  00F443  41                 	db	65	;'A'
  2414  00F444  43                 	db	67	;'C'
  2415  00F445  20                 	db	32
  2416  00F446  63                 	db	99	;'c'
  2417  00F447  6F                 	db	111	;'o'
  2418  00F448  6D                 	db	109	;'m'
  2419  00F449  70                 	db	112	;'p'
  2420  00F44A  6C                 	db	108	;'l'
  2421  00F44B  65                 	db	101	;'e'
  2422  00F44C  74                 	db	116	;'t'
  2423  00F44D  65                 	db	101	;'e'
  2424  00F44E  6C                 	db	108	;'l'
  2425  00F44F  79                 	db	121	;'y'
  2426  00F450  0A                 	db	10
  2427  00F451  0D                 	db	13
  2428  00F452  20                 	db	32
  2429  00F453  20                 	db	32
  2430  00F454  20                 	db	32
  2431  00F455  53                 	db	83	;'S'
  2432  00F456  65                 	db	101	;'e'
  2433  00F457  74                 	db	116	;'t'
  2434  00F458  20                 	db	32
  2435  00F459  44                 	db	68	;'D'
  2436  00F45A  69                 	db	105	;'i'
  2437  00F45B  6D                 	db	109	;'m'
  2438  00F45C  6D                 	db	109	;'m'
  2439  00F45D  69                 	db	105	;'i'
  2440  00F45E  6E                 	db	110	;'n'
  2441  00F45F  67                 	db	103	;'g'
  2442  00F460  20                 	db	32
  2443  00F461  50                 	db	80	;'P'
  2444  00F462  65                 	db	101	;'e'
  2445  00F463  72                 	db	114	;'r'
  2446  00F464  63                 	db	99	;'c'
  2447  00F465  65                 	db	101	;'e'
  2448  00F466  6E                 	db	110	;'n'
  2449  00F467  74                 	db	116	;'t'
  2450  00F468  61                 	db	97	;'a'
  2451  00F469  67                 	db	103	;'g'
  2452  00F46A  65                 	db	101	;'e'
  2453  00F46B  3A                 	db	58	;':'
  2454  00F46C  20                 	db	32
  2455  00F46D  3C                 	db	60	;'<'
  2456  00F46E  78                 	db	120	;'x'
  2457  00F46F  3E                 	db	62	;'>'
  2458  00F470  3A                 	db	58	;':'
  2459  00F471  20                 	db	32
  2460  00F472  53                 	db	83	;'S'
  2461  00F473  65                 	db	101	;'e'
  2462  00F474  74                 	db	116	;'t'
  2463  00F475  73                 	db	115	;'s'
  2464  00F476  20                 	db	32
  2465  00F477  74                 	db	116	;'t'
  2466  00F478  68                 	db	104	;'h'
  2467  00F479  65                 	db	101	;'e'
  2468  00F47A  20                 	db	32
  2469  00F47B  6F                 	db	111	;'o'
  2470  00F47C  75                 	db	117	;'u'
  2471  00F47D  74                 	db	116	;'t'
  2472  00F47E  70                 	db	112	;'p'
  2473  00F47F  75                 	db	117	;'u'
  2474  00F480  74                 	db	116	;'t'
  2475  00F481  20                 	db	32
  2476  00F482  64                 	db	100	;'d'
  2477  00F483  69                 	db	105	;'i'
  2478  00F484  6D                 	db	109	;'m'
  2479  00F485  6D                 	db	109	;'m'
  2480  00F486  69                 	db	105	;'i'
  2481  00F487  6E                 	db	110	;'n'
  2482  00F488  67                 	db	103	;'g'
  2483  00F489  20                 	db	32
  2484  00F48A  70                 	db	112	;'p'
  2485  00F48B  65                 	db	101	;'e'
  2486  00F48C  72                 	db	114	;'r'
  2487  00F48D  63                 	db	99	;'c'
  2488  00F48E  65                 	db	101	;'e'
  2489  00F48F  6E                 	db	110	;'n'
  2490  00F490  74                 	db	116	;'t'
  2491  00F491  61                 	db	97	;'a'
  2492  00F492  67                 	db	103	;'g'
  2493  00F493  65                 	db	101	;'e'
  2494  00F494  20                 	db	32
  2495  00F495  61                 	db	97	;'a'
  2496  00F496  73                 	db	115	;'s'
  2497  00F497  20                 	db	32
  2498  00F498  78                 	db	120	;'x'
  2499  00F499  20                 	db	32
  2500  00F49A  70                 	db	112	;'p'
  2501  00F49B  65                 	db	101	;'e'
  2502  00F49C  72                 	db	114	;'r'
  2503  00F49D  63                 	db	99	;'c'
  2504  00F49E  65                 	db	101	;'e'
  2505  00F49F  6E                 	db	110	;'n'
  2506  00F4A0  74                 	db	116	;'t'
  2507  00F4A1  0A                 	db	10
  2508  00F4A2  0D                 	db	13
  2509  00F4A3  00                 	db	0
  2510  00F4A4  20                 	db	32
  2511  00F4A5  20                 	db	32
  2512  00F4A6  20                 	db	32
  2513  00F4A7  20                 	db	32
  2514  00F4A8  42                 	db	66	;'B'
  2515  00F4A9  6F                 	db	111	;'o'
  2516  00F4AA  6F                 	db	111	;'o'
  2517  00F4AB  74                 	db	116	;'t'
  2518  00F4AC  20                 	db	32
  2519  00F4AD  63                 	db	99	;'c'
  2520  00F4AE  6F                 	db	111	;'o'
  2521  00F4AF  6D                 	db	109	;'m'
  2522  00F4B0  70                 	db	112	;'p'
  2523  00F4B1  6C                 	db	108	;'l'
  2524  00F4B2  65                 	db	101	;'e'
  2525  00F4B3  74                 	db	116	;'t'
  2526  00F4B4  65                 	db	101	;'e'
  2527  00F4B5  0A                 	db	10
  2528  00F4B6  0D                 	db	13
  2529  00F4B7  20                 	db	32
  2530  00F4B8  20                 	db	32
  2531  00F4B9  20                 	db	32
  2532  00F4BA  20                 	db	32
  2533  00F4BB  50                 	db	80	;'P'
  2534  00F4BC  49                 	db	73	;'I'
  2535  00F4BD  43                 	db	67	;'C'
  2536  00F4BE  31                 	db	49	;'1'
  2537  00F4BF  38                 	db	56	;'8'
  2538  00F4C0  46                 	db	70	;'F'
  2539  00F4C1  36                 	db	54	;'6'
  2540  00F4C2  37                 	db	55	;'7'
  2541  00F4C3  4B                 	db	75	;'K'
  2542  00F4C4  34                 	db	52	;'4'
  2543  00F4C5  30                 	db	48	;'0'
  2544  00F4C6  20                 	db	32
  2545  00F4C7  6D                 	db	109	;'m'
  2546  00F4C8  54                 	db	84	;'T'
  2547  00F4C9  6F                 	db	111	;'o'
  2548  00F4CA  75                 	db	117	;'u'
  2549  00F4CB  63                 	db	99	;'c'
  2550  00F4CC  68                 	db	104	;'h'
  2551  00F4CD  20                 	db	32
  2552  00F4CE  54                 	db	84	;'T'
  2553  00F4CF  65                 	db	101	;'e'
  2554  00F4D0  73                 	db	115	;'s'
  2555  00F4D1  74                 	db	116	;'t'
  2556  00F4D2  20                 	db	32
  2557  00F4D3  42                 	db	66	;'B'
  2558  00F4D4  6F                 	db	111	;'o'
  2559  00F4D5  61                 	db	97	;'a'
  2560  00F4D6  72                 	db	114	;'r'
  2561  00F4D7  64                 	db	100	;'d'
  2562  00F4D8  0A                 	db	10
  2563  00F4D9  0D                 	db	13
  2564  00F4DA  20                 	db	32
  2565  00F4DB  20                 	db	32
  2566  00F4DC  20                 	db	32
  2567  00F4DD  20                 	db	32
  2568  00F4DE  45                 	db	69	;'E'
  2569  00F4DF  76                 	db	118	;'v'
  2570  00F4E0  61                 	db	97	;'a'
  2571  00F4E1  6C                 	db	108	;'l'
  2572  00F4E2  75                 	db	117	;'u'
  2573  00F4E3  61                 	db	97	;'a'
  2574  00F4E4  74                 	db	116	;'t'
  2575  00F4E5  65                 	db	101	;'e'
  2576  00F4E6  73                 	db	115	;'s'
  2577  00F4E7  20                 	db	32
  2578  00F4E8  74                 	db	116	;'t'
  2579  00F4E9  68                 	db	104	;'h'
  2580  00F4EA  65                 	db	101	;'e'
  2581  00F4EB  20                 	db	32
  2582  00F4EC  6D                 	db	109	;'m'
  2583  00F4ED  54                 	db	84	;'T'
  2584  00F4EE  6F                 	db	111	;'o'
  2585  00F4EF  75                 	db	117	;'u'
  2586  00F4F0  63                 	db	99	;'c'
  2587  00F4F1  68                 	db	104	;'h'
  2588  00F4F2  20                 	db	32
  2589  00F4F3  63                 	db	99	;'c'
  2590  00F4F4  61                 	db	97	;'a'
  2591  00F4F5  70                 	db	112	;'p'
  2592  00F4F6  61                 	db	97	;'a'
  2593  00F4F7  63                 	db	99	;'c'
  2594  00F4F8  69                 	db	105	;'i'
  2595  00F4F9  74                 	db	116	;'t'
  2596  00F4FA  69                 	db	105	;'i'
  2597  00F4FB  76                 	db	118	;'v'
  2598  00F4FC  65                 	db	101	;'e'
  2599  00F4FD  20                 	db	32
  2600  00F4FE  74                 	db	116	;'t'
  2601  00F4FF  6F                 	db	111	;'o'
  2602  00F500  75                 	db	117	;'u'
  2603  00F501  63                 	db	99	;'c'
  2604  00F502  68                 	db	104	;'h'
  2605  00F503  20                 	db	32
  2606  00F504  6C                 	db	108	;'l'
  2607  00F505  69                 	db	105	;'i'
  2608  00F506  62                 	db	98	;'b'
  2609  00F507  72                 	db	114	;'r'
  2610  00F508  61                 	db	97	;'a'
  2611  00F509  72                 	db	114	;'r'
  2612  00F50A  79                 	db	121	;'y'
  2613  00F50B  20                 	db	32
  2614  00F50C  64                 	db	100	;'d'
  2615  00F50D  69                 	db	105	;'i'
  2616  00F50E  73                 	db	115	;'s'
  2617  00F50F  74                 	db	116	;'t'
  2618  00F510  72                 	db	114	;'r'
  2619  00F511  69                 	db	105	;'i'
  2620  00F512  62                 	db	98	;'b'
  2621  00F513  75                 	db	117	;'u'
  2622  00F514  74                 	db	116	;'t'
  2623  00F515  65                 	db	101	;'e'
  2624  00F516  64                 	db	100	;'d'
  2625  00F517  20                 	db	32
  2626  00F518  62                 	db	98	;'b'
  2627  00F519  79                 	db	121	;'y'
  2628  00F51A  20                 	db	32
  2629  00F51B  4D                 	db	77	;'M'
  2630  00F51C  69                 	db	105	;'i'
  2631  00F51D  63                 	db	99	;'c'
  2632  00F51E  72                 	db	114	;'r'
  2633  00F51F  6F                 	db	111	;'o'
  2634  00F520  63                 	db	99	;'c'
  2635  00F521  68                 	db	104	;'h'
  2636  00F522  69                 	db	105	;'i'
  2637  00F523  70                 	db	112	;'p'
  2638  00F524  0A                 	db	10
  2639  00F525  0D                 	db	13
  2640  00F526  20                 	db	32
  2641  00F527  20                 	db	32
  2642  00F528  20                 	db	32
  2643  00F529  20                 	db	32
  2644  00F52A  53                 	db	83	;'S'
  2645  00F52B  65                 	db	101	;'e'
  2646  00F52C  74                 	db	116	;'t'
  2647  00F52D  73                 	db	115	;'s'
  2648  00F52E  20                 	db	32
  2649  00F52F  74                 	db	116	;'t'
  2650  00F530  68                 	db	104	;'h'
  2651  00F531  65                 	db	101	;'e'
  2652  00F532  20                 	db	32
  2653  00F533  73                 	db	115	;'s'
  2654  00F534  74                 	db	116	;'t'
  2655  00F535  61                 	db	97	;'a'
  2656  00F536  74                 	db	116	;'t'
  2657  00F537  65                 	db	101	;'e'
  2658  00F538  20                 	db	32
  2659  00F539  6F                 	db	111	;'o'
  2660  00F53A  66                 	db	102	;'f'
  2661  00F53B  20                 	db	32
  2662  00F53C  66                 	db	102	;'f'
  2663  00F53D  69                 	db	105	;'i'
  2664  00F53E  76                 	db	118	;'v'
  2665  00F53F  65                 	db	101	;'e'
  2666  00F540  20                 	db	32
  2667  00F541  4C                 	db	76	;'L'
  2668  00F542  45                 	db	69	;'E'
  2669  00F543  44                 	db	68	;'D'
  2670  00F544  73                 	db	115	;'s'
  2671  00F545  20                 	db	32
  2672  00F546  62                 	db	98	;'b'
  2673  00F547  61                 	db	97	;'a'
  2674  00F548  73                 	db	115	;'s'
  2675  00F549  65                 	db	101	;'e'
  2676  00F54A  64                 	db	100	;'d'
  2677  00F54B  20                 	db	32
  2678  00F54C  6F                 	db	111	;'o'
  2679  00F54D  6E                 	db	110	;'n'
  2680  00F54E  20                 	db	32
  2681  00F54F  6D                 	db	109	;'m'
  2682  00F550  54                 	db	84	;'T'
  2683  00F551  6F                 	db	111	;'o'
  2684  00F552  75                 	db	117	;'u'
  2685  00F553  63                 	db	99	;'c'
  2686  00F554  68                 	db	104	;'h'
  2687  00F555  20                 	db	32
  2688  00F556  63                 	db	99	;'c'
  2689  00F557  61                 	db	97	;'a'
  2690  00F558  70                 	db	112	;'p'
  2691  00F559  61                 	db	97	;'a'
  2692  00F55A  63                 	db	99	;'c'
  2693  00F55B  69                 	db	105	;'i'
  2694  00F55C  74                 	db	116	;'t'
  2695  00F55D  69                 	db	105	;'i'
  2696  00F55E  76                 	db	118	;'v'
  2697  00F55F  65                 	db	101	;'e'
  2698  00F560  20                 	db	32
  2699  00F561  70                 	db	112	;'p'
  2700  00F562  75                 	db	117	;'u'
  2701  00F563  73                 	db	115	;'s'
  2702  00F564  68                 	db	104	;'h'
  2703  00F565  62                 	db	98	;'b'
  2704  00F566  75                 	db	117	;'u'
  2705  00F567  74                 	db	116	;'t'
  2706  00F568  74                 	db	116	;'t'
  2707  00F569  6F                 	db	111	;'o'
  2708  00F56A  6E                 	db	110	;'n'
  2709  00F56B  73                 	db	115	;'s'
  2710  00F56C  0A                 	db	10
  2711  00F56D  0D                 	db	13
  2712  00F56E  20                 	db	32
  2713  00F56F  20                 	db	32
  2714  00F570  20                 	db	32
  2715  00F571  20                 	db	32
  2716  00F572  42                 	db	66	;'B'
  2717  00F573  61                 	db	97	;'a'
  2718  00F574  75                 	db	117	;'u'
  2719  00F575  64                 	db	100	;'d'
  2720  00F576  20                 	db	32
  2721  00F577  72                 	db	114	;'r'
  2722  00F578  61                 	db	97	;'a'
  2723  00F579  74                 	db	116	;'t'
  2724  00F57A  65                 	db	101	;'e'
  2725  00F57B  3A                 	db	58	;':'
  2726  00F57C  20                 	db	32
  2727  00F57D  31                 	db	49	;'1'
  2728  00F57E  31                 	db	49	;'1'
  2729  00F57F  35                 	db	53	;'5'
  2730  00F580  32                 	db	50	;'2'
  2731  00F581  30                 	db	48	;'0'
  2732  00F582  30                 	db	48	;'0'
  2733  00F583  20                 	db	32
  2734  00F584  62                 	db	98	;'b'
  2735  00F585  70                 	db	112	;'p'
  2736  00F586  73                 	db	115	;'s'
  2737  00F587  0A                 	db	10
  2738  00F588  0D                 	db	13
  2739  00F589  20                 	db	32
  2740  00F58A  20                 	db	32
  2741  00F58B  20                 	db	32
  2742  00F58C  20                 	db	32
  2743  00F58D  4E                 	db	78	;'N'
  2744  00F58E  6F                 	db	111	;'o'
  2745  00F58F  20                 	db	32
  2746  00F590  70                 	db	112	;'p'
  2747  00F591  61                 	db	97	;'a'
  2748  00F592  72                 	db	114	;'r'
  2749  00F593  69                 	db	105	;'i'
  2750  00F594  74                 	db	116	;'t'
  2751  00F595  79                 	db	121	;'y'
  2752  00F596  2C                 	db	44
  2753  00F597  20                 	db	32
  2754  00F598  38                 	db	56	;'8'
  2755  00F599  20                 	db	32
  2756  00F59A  62                 	db	98	;'b'
  2757  00F59B  69                 	db	105	;'i'
  2758  00F59C  74                 	db	116	;'t'
  2759  00F59D  73                 	db	115	;'s'
  2760  00F59E  2C                 	db	44
  2761  00F59F  20                 	db	32
  2762  00F5A0  6E                 	db	110	;'n'
  2763  00F5A1  6F                 	db	111	;'o'
  2764  00F5A2  20                 	db	32
  2765  00F5A3  66                 	db	102	;'f'
  2766  00F5A4  6C                 	db	108	;'l'
  2767  00F5A5  6F                 	db	111	;'o'
  2768  00F5A6  77                 	db	119	;'w'
  2769  00F5A7  20                 	db	32
  2770  00F5A8  63                 	db	99	;'c'
  2771  00F5A9  6F                 	db	111	;'o'
  2772  00F5AA  6E                 	db	110	;'n'
  2773  00F5AB  74                 	db	116	;'t'
  2774  00F5AC  72                 	db	114	;'r'
  2775  00F5AD  6F                 	db	111	;'o'
  2776  00F5AE  6C                 	db	108	;'l'
  2777  00F5AF  2C                 	db	44
  2778  00F5B0  20                 	db	32
  2779  00F5B1  31                 	db	49	;'1'
  2780  00F5B2  20                 	db	32
  2781  00F5B3  73                 	db	115	;'s'
  2782  00F5B4  74                 	db	116	;'t'
  2783  00F5B5  6F                 	db	111	;'o'
  2784  00F5B6  70                 	db	112	;'p'
  2785  00F5B7  20                 	db	32
  2786  00F5B8  62                 	db	98	;'b'
  2787  00F5B9  69                 	db	105	;'i'
  2788  00F5BA  74                 	db	116	;'t'
  2789  00F5BB  0A                 	db	10
  2790  00F5BC  0D                 	db	13
  2791  00F5BD  20                 	db	32
  2792  00F5BE  20                 	db	32
  2793  00F5BF  20                 	db	32
  2794  00F5C0  20                 	db	32
  2795  00F5C1  43                 	db	67	;'C'
  2796  00F5C2  6F                 	db	111	;'o'
  2797  00F5C3  6D                 	db	109	;'m'
  2798  00F5C4  6D                 	db	109	;'m'
  2799  00F5C5  61                 	db	97	;'a'
  2800  00F5C6  6E                 	db	110	;'n'
  2801  00F5C7  64                 	db	100	;'d'
  2802  00F5C8  73                 	db	115	;'s'
  2803  00F5C9  20                 	db	32
  2804  00F5CA  61                 	db	97	;'a'
  2805  00F5CB  72                 	db	114	;'r'
  2806  00F5CC  65                 	db	101	;'e'
  2807  00F5CD  20                 	db	32
  2808  00F5CE  63                 	db	99	;'c'
  2809  00F5CF  61                 	db	97	;'a'
  2810  00F5D0  73                 	db	115	;'s'
  2811  00F5D1  65                 	db	101	;'e'
  2812  00F5D2  20                 	db	32
  2813  00F5D3  73                 	db	115	;'s'
  2814  00F5D4  65                 	db	101	;'e'
  2815  00F5D5  6E                 	db	110	;'n'
  2816  00F5D6  73                 	db	115	;'s'
  2817  00F5D7  69                 	db	105	;'i'
  2818  00F5D8  74                 	db	116	;'t'
  2819  00F5D9  69                 	db	105	;'i'
  2820  00F5DA  76                 	db	118	;'v'
  2821  00F5DB  65                 	db	101	;'e'
  2822  00F5DC  0A                 	db	10
  2823  00F5DD  0D                 	db	13
  2824  00F5DE  20                 	db	32
  2825  00F5DF  20                 	db	32
  2826  00F5E0  20                 	db	32
  2827  00F5E1  20                 	db	32
  2828  00F5E2  45                 	db	69	;'E'
  2829  00F5E3  6E                 	db	110	;'n'
  2830  00F5E4  74                 	db	116	;'t'
  2831  00F5E5  65                 	db	101	;'e'
  2832  00F5E6  72                 	db	114	;'r'
  2833  00F5E7  20                 	db	32
  2834  00F5E8  61                 	db	97	;'a'
  2835  00F5E9  20                 	db	32
  2836  00F5EA  63                 	db	99	;'c'
  2837  00F5EB  6F                 	db	111	;'o'
  2838  00F5EC  6D                 	db	109	;'m'
  2839  00F5ED  6D                 	db	109	;'m'
  2840  00F5EE  61                 	db	97	;'a'
  2841  00F5EF  6E                 	db	110	;'n'
  2842  00F5F0  64                 	db	100	;'d'
  2843  00F5F1  2C                 	db	44
  2844  00F5F2  20                 	db	32
  2845  00F5F3  6F                 	db	111	;'o'
  2846  00F5F4  72                 	db	114	;'r'
  2847  00F5F5  20                 	db	32
  2848  00F5F6  65                 	db	101	;'e'
  2849  00F5F7  6E                 	db	110	;'n'
  2850  00F5F8  74                 	db	116	;'t'
  2851  00F5F9  65                 	db	101	;'e'
  2852  00F5FA  72                 	db	114	;'r'
  2853  00F5FB  20                 	db	32
  2854  00F5FC  48                 	db	72	;'H'
  2855  00F5FD  65                 	db	101	;'e'
  2856  00F5FE  6C                 	db	108	;'l'
  2857  00F5FF  70                 	db	112	;'p'
  2858  00F600  20                 	db	32
  2859  00F601  66                 	db	102	;'f'
  2860  00F602  6F                 	db	111	;'o'
  2861  00F603  72                 	db	114	;'r'
  2862  00F604  20                 	db	32
  2863  00F605  6C                 	db	108	;'l'
  2864  00F606  69                 	db	105	;'i'
  2865  00F607  73                 	db	115	;'s'
  2866  00F608  74                 	db	116	;'t'
  2867  00F609  20                 	db	32
  2868  00F60A  6F                 	db	111	;'o'
  2869  00F60B  66                 	db	102	;'f'
  2870  00F60C  20                 	db	32
  2871  00F60D  63                 	db	99	;'c'
  2872  00F60E  6F                 	db	111	;'o'
  2873  00F60F  6D                 	db	109	;'m'
  2874  00F610  6D                 	db	109	;'m'
  2875  00F611  61                 	db	97	;'a'
  2876  00F612  6E                 	db	110	;'n'
  2877  00F613  64                 	db	100	;'d'
  2878  00F614  73                 	db	115	;'s'
  2879  00F615  0A                 	db	10
  2880  00F616  0D                 	db	13
  2881  00F617  00                 	db	0
  2882  00F618                     STR_104:
  2883  00F618  49                 	db	73	;'I'
  2884  00F619  66                 	db	102	;'f'
  2885  00F61A  20                 	db	32
  2886  00F61B  79                 	db	121	;'y'
  2887  00F61C  6F                 	db	111	;'o'
  2888  00F61D  75                 	db	117	;'u'
  2889  00F61E  27                 	db	39
  2890  00F61F  64                 	db	100	;'d'
  2891  00F620  20                 	db	32
  2892  00F621  6C                 	db	108	;'l'
  2893  00F622  69                 	db	105	;'i'
  2894  00F623  6B                 	db	107	;'k'
  2895  00F624  65                 	db	101	;'e'
  2896  00F625  20                 	db	32
  2897  00F626  74                 	db	116	;'t'
  2898  00F627  6F                 	db	111	;'o'
  2899  00F628  20                 	db	32
  2900  00F629  63                 	db	99	;'c'
  2901  00F62A  6F                 	db	111	;'o'
  2902  00F62B  6D                 	db	109	;'m'
  2903  00F62C  70                 	db	112	;'p'
  2904  00F62D  6C                 	db	108	;'l'
  2905  00F62E  65                 	db	101	;'e'
  2906  00F62F  74                 	db	116	;'t'
  2907  00F630  65                 	db	101	;'e'
  2908  00F631  6C                 	db	108	;'l'
  2909  00F632  79                 	db	121	;'y'
  2910  00F633  20                 	db	32
  2911  00F634  65                 	db	101	;'e'
  2912  00F635  6E                 	db	110	;'n'
  2913  00F636  61                 	db	97	;'a'
  2914  00F637  62                 	db	98	;'b'
  2915  00F638  6C                 	db	108	;'l'
  2916  00F639  65                 	db	101	;'e'
  2917  00F63A  20                 	db	32
  2918  00F63B  6F                 	db	111	;'o'
  2919  00F63C  72                 	db	114	;'r'
  2920  00F63D  20                 	db	32
  2921  00F63E  64                 	db	100	;'d'
  2922  00F63F  69                 	db	105	;'i'
  2923  00F640  73                 	db	115	;'s'
  2924  00F641  61                 	db	97	;'a'
  2925  00F642  62                 	db	98	;'b'
  2926  00F643  6C                 	db	108	;'l'
  2927  00F644  65                 	db	101	;'e'
  2928  00F645  20                 	db	32
  2929  00F646  74                 	db	116	;'t'
  2930  00F647  68                 	db	104	;'h'
  2931  00F648  65                 	db	101	;'e'
  2932  00F649  20                 	db	32
  2933  00F64A  6C                 	db	108	;'l'
  2934  00F64B  6F                 	db	111	;'o'
  2935  00F64C  61                 	db	97	;'a'
  2936  00F64D  64                 	db	100	;'d'
  2937  00F64E  2C                 	db	44
  2938  00F64F  20                 	db	32
  2939  00F650  64                 	db	100	;'d'
  2940  00F651  69                 	db	105	;'i'
  2941  00F652  73                 	db	115	;'s'
  2942  00F653  61                 	db	97	;'a'
  2943  00F654  62                 	db	98	;'b'
  2944  00F655  6C                 	db	108	;'l'
  2945  00F656  65                 	db	101	;'e'
  2946  00F657  20                 	db	32
  2947  00F658  64                 	db	100	;'d'
  2948  00F659  69                 	db	105	;'i'
  2949  00F65A  6D                 	db	109	;'m'
  2950  00F65B  6D                 	db	109	;'m'
  2951  00F65C  69                 	db	105	;'i'
  2952  00F65D  6E                 	db	110	;'n'
  2953  00F65E  67                 	db	103	;'g'
  2954  00F65F  20                 	db	32
  2955  00F660  61                 	db	97	;'a'
  2956  00F661  6E                 	db	110	;'n'
  2957  00F662  64                 	db	100	;'d'
  2958  00F663  20                 	db	32
  2959  00F664  75                 	db	117	;'u'
  2960  00F665  73                 	db	115	;'s'
  2961  00F666  65                 	db	101	;'e'
  2962  00F667  20                 	db	32
  2963  00F668  72                 	db	114	;'r'
  2964  00F669  65                 	db	101	;'e'
  2965  00F66A  73                 	db	115	;'s'
  2966  00F66B  70                 	db	112	;'p'
  2967  00F66C  65                 	db	101	;'e'
  2968  00F66D  63                 	db	99	;'c'
  2969  00F66E  74                 	db	116	;'t'
  2970  00F66F  69                 	db	105	;'i'
  2971  00F670  76                 	db	118	;'v'
  2972  00F671  65                 	db	101	;'e'
  2973  00F672  20                 	db	32
  2974  00F673  63                 	db	99	;'c'
  2975  00F674  6F                 	db	111	;'o'
  2976  00F675  6D                 	db	109	;'m'
  2977  00F676  6D                 	db	109	;'m'
  2978  00F677  61                 	db	97	;'a'
  2979  00F678  6E                 	db	110	;'n'
  2980  00F679  64                 	db	100	;'d'
  2981  00F67A  73                 	db	115	;'s'
  2982  00F67B  0A                 	db	10
  2983  00F67C  0D                 	db	13
  2984  00F67D  00                 	db	0
  2985  00F67E                     STR_103:
  2986  00F67E  45                 	db	69	;'E'
  2987  00F67F  52                 	db	82	;'R'
  2988  00F680  52                 	db	82	;'R'
  2989  00F681  4F                 	db	79	;'O'
  2990  00F682  52                 	db	82	;'R'
  2991  00F683  3A                 	db	58	;':'
  2992  00F684  20                 	db	32
  2993  00F685  50                 	db	80	;'P'
  2994  00F686  6C                 	db	108	;'l'
  2995  00F687  65                 	db	101	;'e'
  2996  00F688  61                 	db	97	;'a'
  2997  00F689  73                 	db	115	;'s'
  2998  00F68A  65                 	db	101	;'e'
  2999  00F68B  20                 	db	32
  3000  00F68C  73                 	db	115	;'s'
  3001  00F68D  65                 	db	101	;'e'
  3002  00F68E  74                 	db	116	;'t'
  3003  00F68F  20                 	db	32
  3004  00F690  64                 	db	100	;'d'
  3005  00F691  69                 	db	105	;'i'
  3006  00F692  6D                 	db	109	;'m'
  3007  00F693  6D                 	db	109	;'m'
  3008  00F694  69                 	db	105	;'i'
  3009  00F695  6E                 	db	110	;'n'
  3010  00F696  67                 	db	103	;'g'
  3011  00F697  20                 	db	32
  3012  00F698  70                 	db	112	;'p'
  3013  00F699  65                 	db	101	;'e'
  3014  00F69A  72                 	db	114	;'r'
  3015  00F69B  63                 	db	99	;'c'
  3016  00F69C  65                 	db	101	;'e'
  3017  00F69D  6E                 	db	110	;'n'
  3018  00F69E  74                 	db	116	;'t'
  3019  00F69F  61                 	db	97	;'a'
  3020  00F6A0  67                 	db	103	;'g'
  3021  00F6A1  65                 	db	101	;'e'
  3022  00F6A2  20                 	db	32
  3023  00F6A3  74                 	db	116	;'t'
  3024  00F6A4  6F                 	db	111	;'o'
  3025  00F6A5  20                 	db	32
  3026  00F6A6  61                 	db	97	;'a'
  3027  00F6A7  6E                 	db	110	;'n'
  3028  00F6A8  20                 	db	32
  3029  00F6A9  69                 	db	105	;'i'
  3030  00F6AA  6E                 	db	110	;'n'
  3031  00F6AB  74                 	db	116	;'t'
  3032  00F6AC  65                 	db	101	;'e'
  3033  00F6AD  67                 	db	103	;'g'
  3034  00F6AE  65                 	db	101	;'e'
  3035  00F6AF  72                 	db	114	;'r'
  3036  00F6B0  20                 	db	32
  3037  00F6B1  67                 	db	103	;'g'
  3038  00F6B2  72                 	db	114	;'r'
  3039  00F6B3  65                 	db	101	;'e'
  3040  00F6B4  61                 	db	97	;'a'
  3041  00F6B5  74                 	db	116	;'t'
  3042  00F6B6  65                 	db	101	;'e'
  3043  00F6B7  72                 	db	114	;'r'
  3044  00F6B8  20                 	db	32
  3045  00F6B9  74                 	db	116	;'t'
  3046  00F6BA  68                 	db	104	;'h'
  3047  00F6BB  61                 	db	97	;'a'
  3048  00F6BC  6E                 	db	110	;'n'
  3049  00F6BD  20                 	db	32
  3050  00F6BE  30                 	db	48	;'0'
  3051  00F6BF  20                 	db	32
  3052  00F6C0  61                 	db	97	;'a'
  3053  00F6C1  6E                 	db	110	;'n'
  3054  00F6C2  64                 	db	100	;'d'
  3055  00F6C3  20                 	db	32
  3056  00F6C4  6C                 	db	108	;'l'
  3057  00F6C5  65                 	db	101	;'e'
  3058  00F6C6  73                 	db	115	;'s'
  3059  00F6C7  73                 	db	115	;'s'
  3060  00F6C8  20                 	db	32
  3061  00F6C9  74                 	db	116	;'t'
  3062  00F6CA  68                 	db	104	;'h'
  3063  00F6CB  61                 	db	97	;'a'
  3064  00F6CC  6E                 	db	110	;'n'
  3065  00F6CD  20                 	db	32
  3066  00F6CE  31                 	db	49	;'1'
  3067  00F6CF  30                 	db	48	;'0'
  3068  00F6D0  30                 	db	48	;'0'
  3069  00F6D1  0A                 	db	10
  3070  00F6D2  0D                 	db	13
  3071  00F6D3  00                 	db	0
  3072  00F6D4                     STR_54:
  3073  00F6D4  44                 	db	68	;'D'
  3074  00F6D5  65                 	db	101	;'e'
  3075  00F6D6  76                 	db	118	;'v'
  3076  00F6D7  69                 	db	105	;'i'
  3077  00F6D8  63                 	db	99	;'c'
  3078  00F6D9  65                 	db	101	;'e'
  3079  00F6DA  20                 	db	32
  3080  00F6DB  49                 	db	73	;'I'
  3081  00F6DC  44                 	db	68	;'D'
  3082  00F6DD  20                 	db	32
  3083  00F6DE  73                 	db	115	;'s'
  3084  00F6DF  74                 	db	116	;'t'
  3085  00F6E0  6F                 	db	111	;'o'
  3086  00F6E1  72                 	db	114	;'r'
  3087  00F6E2  65                 	db	101	;'e'
  3088  00F6E3  64                 	db	100	;'d'
  3089  00F6E4  20                 	db	32
  3090  00F6E5  69                 	db	105	;'i'
  3091  00F6E6  6E                 	db	110	;'n'
  3092  00F6E7  20                 	db	32
  3093  00F6E8  46                 	db	70	;'F'
  3094  00F6E9  6C                 	db	108	;'l'
  3095  00F6EA  61                 	db	97	;'a'
  3096  00F6EB  73                 	db	115	;'s'
  3097  00F6EC  68                 	db	104	;'h'
  3098  00F6ED  20                 	db	32
  3099  00F6EE  69                 	db	105	;'i'
  3100  00F6EF  73                 	db	115	;'s'
  3101  00F6F0  3A                 	db	58	;':'
  3102  00F6F1  20                 	db	32
  3103  00F6F2  30                 	db	48	;'0'
  3104  00F6F3  78                 	db	120	;'x'
  3105  00F6F4  25                 	db	37
  3106  00F6F5  58                 	db	88	;'X'
  3107  00F6F6  2E                 	db	46
  3108  00F6F7  20                 	db	32
  3109  00F6F8  54                 	db	84	;'T'
  3110  00F6F9  68                 	db	104	;'h'
  3111  00F6FA  69                 	db	105	;'i'
  3112  00F6FB  73                 	db	115	;'s'
  3113  00F6FC  20                 	db	32
  3114  00F6FD  63                 	db	99	;'c'
  3115  00F6FE  6F                 	db	111	;'o'
  3116  00F6FF  72                 	db	114	;'r'
  3117  00F700  72                 	db	114	;'r'
  3118  00F701  65                 	db	101	;'e'
  3119  00F702  73                 	db	115	;'s'
  3120  00F703  70                 	db	112	;'p'
  3121  00F704  6F                 	db	111	;'o'
  3122  00F705  6E                 	db	110	;'n'
  3123  00F706  64                 	db	100	;'d'
  3124  00F707  73                 	db	115	;'s'
  3125  00F708  20                 	db	32
  3126  00F709  74                 	db	116	;'t'
  3127  00F70A  6F                 	db	111	;'o'
  3128  00F70B  20                 	db	32
  3129  00F70C  61                 	db	97	;'a'
  3130  00F70D  20                 	db	32
  3131  00F70E  64                 	db	100	;'d'
  3132  00F70F  65                 	db	101	;'e'
  3133  00F710  76                 	db	118	;'v'
  3134  00F711  69                 	db	105	;'i'
  3135  00F712  63                 	db	99	;'c'
  3136  00F713  65                 	db	101	;'e'
  3137  00F714  20                 	db	32
  3138  00F715  70                 	db	112	;'p'
  3139  00F716  61                 	db	97	;'a'
  3140  00F717  72                 	db	114	;'r'
  3141  00F718  74                 	db	116	;'t'
  3142  00F719  20                 	db	32
  3143  00F71A  6E                 	db	110	;'n'
  3144  00F71B  75                 	db	117	;'u'
  3145  00F71C  6D                 	db	109	;'m'
  3146  00F71D  62                 	db	98	;'b'
  3147  00F71E  65                 	db	101	;'e'
  3148  00F71F  72                 	db	114	;'r'
  3149  00F720  20                 	db	32
  3150  00F721  6F                 	db	111	;'o'
  3151  00F722  66                 	db	102	;'f'
  3152  00F723  20                 	db	32
  3153  00F724  25                 	db	37
  3154  00F725  73                 	db	115	;'s'
  3155  00F726  0A                 	db	10
  3156  00F727  0D                 	db	13
  3157  00F728  00                 	db	0
  3158  00F729                     STR_108:
  3159  00F729  54                 	db	84	;'T'
  3160  00F72A  68                 	db	104	;'h'
  3161  00F72B  69                 	db	105	;'i'
  3162  00F72C  73                 	db	115	;'s'
  3163  00F72D  20                 	db	32
  3164  00F72E  63                 	db	99	;'c'
  3165  00F72F  6F                 	db	111	;'o'
  3166  00F730  72                 	db	114	;'r'
  3167  00F731  72                 	db	114	;'r'
  3168  00F732  65                 	db	101	;'e'
  3169  00F733  73                 	db	115	;'s'
  3170  00F734  70                 	db	112	;'p'
  3171  00F735  6F                 	db	111	;'o'
  3172  00F736  6E                 	db	110	;'n'
  3173  00F737  64                 	db	100	;'d'
  3174  00F738  73                 	db	115	;'s'
  3175  00F739  20                 	db	32
  3176  00F73A  74                 	db	116	;'t'
  3177  00F73B  6F                 	db	111	;'o'
  3178  00F73C  20                 	db	32
  3179  00F73D  61                 	db	97	;'a'
  3180  00F73E  20                 	db	32
  3181  00F73F  31                 	db	49	;'1'
  3182  00F740  36                 	db	54	;'6'
  3183  00F741  20                 	db	32
  3184  00F742  62                 	db	98	;'b'
  3185  00F743  69                 	db	105	;'i'
  3186  00F744  74                 	db	116	;'t'
  3187  00F745  20                 	db	32
  3188  00F746  74                 	db	116	;'t'
  3189  00F747  69                 	db	105	;'i'
  3190  00F748  6D                 	db	109	;'m'
  3191  00F749  65                 	db	101	;'e'
  3192  00F74A  72                 	db	114	;'r'
  3193  00F74B  20                 	db	32
  3194  00F74C  70                 	db	112	;'p'
  3195  00F74D  72                 	db	114	;'r'
  3196  00F74E  65                 	db	101	;'e'
  3197  00F74F  2D                 	db	45
  3198  00F750  6C                 	db	108	;'l'
  3199  00F751  6F                 	db	111	;'o'
  3200  00F752  61                 	db	97	;'a'
  3201  00F753  64                 	db	100	;'d'
  3202  00F754  20                 	db	32
  3203  00F755  76                 	db	118	;'v'
  3204  00F756  61                 	db	97	;'a'
  3205  00F757  6C                 	db	108	;'l'
  3206  00F758  75                 	db	117	;'u'
  3207  00F759  65                 	db	101	;'e'
  3208  00F75A  20                 	db	32
  3209  00F75B  6F                 	db	111	;'o'
  3210  00F75C  66                 	db	102	;'f'
  3211  00F75D  20                 	db	32
  3212  00F75E  30                 	db	48	;'0'
  3213  00F75F  78                 	db	120	;'x'
  3214  00F760  25                 	db	37
  3215  00F761  58                 	db	88	;'X'
  3216  00F762  20                 	db	32
  3217  00F763  28                 	db	40
  3218  00F764  25                 	db	37
  3219  00F765  75                 	db	117	;'u'
  3220  00F766  20                 	db	32
  3221  00F767  4C                 	db	76	;'L'
  3222  00F768  53                 	db	83	;'S'
  3223  00F769  42                 	db	66	;'B'
  3224  00F76A  73                 	db	115	;'s'
  3225  00F76B  29                 	db	41
  3226  00F76C  20                 	db	32
  3227  00F76D  0A                 	db	10
  3228  00F76E  0D                 	db	13
  3229  00F76F  00                 	db	0
  3230  00F770                     STR_74:
  3231  00F770  56                 	db	86	;'V'
  3232  00F771  43                 	db	67	;'C'
  3233  00F772  43                 	db	67	;'C'
  3234  00F773  20                 	db	32
  3235  00F774  4F                 	db	79	;'O'
  3236  00F775  76                 	db	118	;'v'
  3237  00F776  65                 	db	101	;'e'
  3238  00F777  72                 	db	114	;'r'
  3239  00F778  76                 	db	118	;'v'
  3240  00F779  6F                 	db	111	;'o'
  3241  00F77A  6C                 	db	108	;'l'
  3242  00F77B  74                 	db	116	;'t'
  3243  00F77C  61                 	db	97	;'a'
  3244  00F77D  67                 	db	103	;'g'
  3245  00F77E  65                 	db	101	;'e'
  3246  00F77F  20                 	db	32
  3247  00F780  63                 	db	99	;'c'
  3248  00F781  6F                 	db	111	;'o'
  3249  00F782  6E                 	db	110	;'n'
  3250  00F783  64                 	db	100	;'d'
  3251  00F784  69                 	db	105	;'i'
  3252  00F785  74                 	db	116	;'t'
  3253  00F786  69                 	db	105	;'i'
  3254  00F787  6F                 	db	111	;'o'
  3255  00F788  6E                 	db	110	;'n'
  3256  00F789  20                 	db	32
  3257  00F78A  68                 	db	104	;'h'
  3258  00F78B  61                 	db	97	;'a'
  3259  00F78C  73                 	db	115	;'s'
  3260  00F78D  20                 	db	32
  3261  00F78E  6F                 	db	111	;'o'
  3262  00F78F  63                 	db	99	;'c'
  3263  00F790  63                 	db	99	;'c'
  3264  00F791  75                 	db	117	;'u'
  3265  00F792  72                 	db	114	;'r'
  3266  00F793  72                 	db	114	;'r'
  3267  00F794  65                 	db	101	;'e'
  3268  00F795  64                 	db	100	;'d'
  3269  00F796  20                 	db	32
  3270  00F797  28                 	db	40
  3271  00F798  56                 	db	86	;'V'
  3272  00F799  43                 	db	67	;'C'
  3273  00F79A  43                 	db	67	;'C'
  3274  00F79B  20                 	db	32
  3275  00F79C  68                 	db	104	;'h'
  3276  00F79D  61                 	db	97	;'a'
  3277  00F79E  73                 	db	115	;'s'
  3278  00F79F  20                 	db	32
  3279  00F7A0  65                 	db	101	;'e'
  3280  00F7A1  78                 	db	120	;'x'
  3281  00F7A2  63                 	db	99	;'c'
  3282  00F7A3  65                 	db	101	;'e'
  3283  00F7A4  65                 	db	101	;'e'
  3284  00F7A5  64                 	db	100	;'d'
  3285  00F7A6  65                 	db	101	;'e'
  3286  00F7A7  64                 	db	100	;'d'
  3287  00F7A8  20                 	db	32
  3288  00F7A9  33                 	db	51	;'3'
  3289  00F7AA  2E                 	db	46
  3290  00F7AB  36                 	db	54	;'6'
  3291  00F7AC  30                 	db	48	;'0'
  3292  00F7AD  56                 	db	86	;'V'
  3293  00F7AE  29                 	db	41
  3294  00F7AF  0A                 	db	10
  3295  00F7B0  0D                 	db	13
  3296  00F7B1  00                 	db	0
  3297  00F7B2                     STR_58:
  3298  00F7B2  54                 	db	84	;'T'
  3299  00F7B3  68                 	db	104	;'h'
  3300  00F7B4  65                 	db	101	;'e'
  3301  00F7B5  20                 	db	32
  3302  00F7B6  66                 	db	102	;'f'
  3303  00F7B7  6F                 	db	111	;'o'
  3304  00F7B8  6C                 	db	108	;'l'
  3305  00F7B9  6C                 	db	108	;'l'
  3306  00F7BA  6F                 	db	111	;'o'
  3307  00F7BB  77                 	db	119	;'w'
  3308  00F7BC  69                 	db	105	;'i'
  3309  00F7BD  6E                 	db	110	;'n'
  3310  00F7BE  67                 	db	103	;'g'
  3311  00F7BF  20                 	db	32
  3312  00F7C0  55                 	db	85	;'U'
  3313  00F7C1  73                 	db	115	;'s'
  3314  00F7C2  65                 	db	101	;'e'
  3315  00F7C3  72                 	db	114	;'r'
  3316  00F7C4  20                 	db	32
  3317  00F7C5  49                 	db	73	;'I'
  3318  00F7C6  44                 	db	68	;'D'
  3319  00F7C7  73                 	db	115	;'s'
  3320  00F7C8  20                 	db	32
  3321  00F7C9  68                 	db	104	;'h'
  3322  00F7CA  61                 	db	97	;'a'
  3323  00F7CB  76                 	db	118	;'v'
  3324  00F7CC  65                 	db	101	;'e'
  3325  00F7CD  20                 	db	32
  3326  00F7CE  62                 	db	98	;'b'
  3327  00F7CF  65                 	db	101	;'e'
  3328  00F7D0  65                 	db	101	;'e'
  3329  00F7D1  6E                 	db	110	;'n'
  3330  00F7D2  20                 	db	32
  3331  00F7D3  72                 	db	114	;'r'
  3332  00F7D4  65                 	db	101	;'e'
  3333  00F7D5  74                 	db	116	;'t'
  3334  00F7D6  72                 	db	114	;'r'
  3335  00F7D7  69                 	db	105	;'i'
  3336  00F7D8  65                 	db	101	;'e'
  3337  00F7D9  76                 	db	118	;'v'
  3338  00F7DA  65                 	db	101	;'e'
  3339  00F7DB  64                 	db	100	;'d'
  3340  00F7DC  20                 	db	32
  3341  00F7DD  66                 	db	102	;'f'
  3342  00F7DE  72                 	db	114	;'r'
  3343  00F7DF  6F                 	db	111	;'o'
  3344  00F7E0  6D                 	db	109	;'m'
  3345  00F7E1  20                 	db	32
  3346  00F7E2  66                 	db	102	;'f'
  3347  00F7E3  6C                 	db	108	;'l'
  3348  00F7E4  61                 	db	97	;'a'
  3349  00F7E5  73                 	db	115	;'s'
  3350  00F7E6  68                 	db	104	;'h'
  3351  00F7E7  20                 	db	32
  3352  00F7E8  6D                 	db	109	;'m'
  3353  00F7E9  65                 	db	101	;'e'
  3354  00F7EA  6D                 	db	109	;'m'
  3355  00F7EB  6F                 	db	111	;'o'
  3356  00F7EC  72                 	db	114	;'r'
  3357  00F7ED  79                 	db	121	;'y'
  3358  00F7EE  3A                 	db	58	;':'
  3359  00F7EF  0A                 	db	10
  3360  00F7F0  0D                 	db	13
  3361  00F7F1  00                 	db	0
  3362  00F7F2                     STR_107:
  3363  00F7F2  43                 	db	67	;'C'
  3364  00F7F3  61                 	db	97	;'a'
  3365  00F7F4  6C                 	db	108	;'l'
  3366  00F7F5  63                 	db	99	;'c'
  3367  00F7F6  75                 	db	117	;'u'
  3368  00F7F7  6C                 	db	108	;'l'
  3369  00F7F8  61                 	db	97	;'a'
  3370  00F7F9  74                 	db	116	;'t'
  3371  00F7FA  65                 	db	101	;'e'
  3372  00F7FB  64                 	db	100	;'d'
  3373  00F7FC  20                 	db	32
  3374  00F7FD  54                 	db	84	;'T'
  3375  00F7FE  52                 	db	82	;'R'
  3376  00F7FF  49                 	db	73	;'I'
  3377  00F800  41                 	db	65	;'A'
  3378  00F801  43                 	db	67	;'C'
  3379  00F802  20                 	db	32
  3380  00F803  66                 	db	102	;'f'
  3381  00F804  69                 	db	105	;'i'
  3382  00F805  72                 	db	114	;'r'
  3383  00F806  69                 	db	105	;'i'
  3384  00F807  6E                 	db	110	;'n'
  3385  00F808  67                 	db	103	;'g'
  3386  00F809  20                 	db	32
  3387  00F80A  61                 	db	97	;'a'
  3388  00F80B  6E                 	db	110	;'n'
  3389  00F80C  67                 	db	103	;'g'
  3390  00F80D  6C                 	db	108	;'l'
  3391  00F80E  65                 	db	101	;'e'
  3392  00F80F  20                 	db	32
  3393  00F810  69                 	db	105	;'i'
  3394  00F811  73                 	db	115	;'s'
  3395  00F812  20                 	db	32
  3396  00F813  25                 	db	37
  3397  00F814  2E                 	db	46
  3398  00F815  33                 	db	51	;'3'
  3399  00F816  66                 	db	102	;'f'
  3400  00F817  20                 	db	32
  3401  00F818  72                 	db	114	;'r'
  3402  00F819  61                 	db	97	;'a'
  3403  00F81A  64                 	db	100	;'d'
  3404  00F81B  69                 	db	105	;'i'
  3405  00F81C  61                 	db	97	;'a'
  3406  00F81D  6E                 	db	110	;'n'
  3407  00F81E  73                 	db	115	;'s'
  3408  00F81F  20                 	db	32
  3409  00F820  28                 	db	40
  3410  00F821  25                 	db	37
  3411  00F822  2E                 	db	46
  3412  00F823  33                 	db	51	;'3'
  3413  00F824  66                 	db	102	;'f'
  3414  00F825  20                 	db	32
  3415  00F826  64                 	db	100	;'d'
  3416  00F827  65                 	db	101	;'e'
  3417  00F828  67                 	db	103	;'g'
  3418  00F829  72                 	db	114	;'r'
  3419  00F82A  65                 	db	101	;'e'
  3420  00F82B  65                 	db	101	;'e'
  3421  00F82C  73                 	db	115	;'s'
  3422  00F82D  29                 	db	41
  3423  00F82E  0A                 	db	10
  3424  00F82F  0D                 	db	13
  3425  00F830  00                 	db	0
  3426  00F831                     STR_110:
  3427  00F831  44                 	db	68	;'D'
  3428  00F832  65                 	db	101	;'e'
  3429  00F833  76                 	db	118	;'v'
  3430  00F834  69                 	db	105	;'i'
  3431  00F835  63                 	db	99	;'c'
  3432  00F836  65                 	db	101	;'e'
  3433  00F837  20                 	db	32
  3434  00F838  6F                 	db	111	;'o'
  3435  00F839  6E                 	db	110	;'n'
  3436  00F83A  20                 	db	32
  3437  00F83B  74                 	db	116	;'t'
  3438  00F83C  69                 	db	105	;'i'
  3439  00F83D  6D                 	db	109	;'m'
  3440  00F83E  65                 	db	101	;'e'
  3441  00F83F  20                 	db	32
  3442  00F840  73                 	db	115	;'s'
  3443  00F841  69                 	db	105	;'i'
  3444  00F842  6E                 	db	110	;'n'
  3445  00F843  63                 	db	99	;'c'
  3446  00F844  65                 	db	101	;'e'
  3447  00F845  20                 	db	32
  3448  00F846  6C                 	db	108	;'l'
  3449  00F847  61                 	db	97	;'a'
  3450  00F848  73                 	db	115	;'s'
  3451  00F849  74                 	db	116	;'t'
  3452  00F84A  20                 	db	32
  3453  00F84B  72                 	db	114	;'r'
  3454  00F84C  65                 	db	101	;'e'
  3455  00F84D  73                 	db	115	;'s'
  3456  00F84E  65                 	db	101	;'e'
  3457  00F84F  74                 	db	116	;'t'
  3458  00F850  20                 	db	32
  3459  00F851  63                 	db	99	;'c'
  3460  00F852  6F                 	db	111	;'o'
  3461  00F853  6E                 	db	110	;'n'
  3462  00F854  64                 	db	100	;'d'
  3463  00F855  69                 	db	105	;'i'
  3464  00F856  74                 	db	116	;'t'
  3465  00F857  69                 	db	105	;'i'
  3466  00F858  6F                 	db	111	;'o'
  3467  00F859  6E                 	db	110	;'n'
  3468  00F85A  20                 	db	32
  3469  00F85B  69                 	db	105	;'i'
  3470  00F85C  73                 	db	115	;'s'
  3471  00F85D  20                 	db	32
  3472  00F85E  25                 	db	37
  3473  00F85F  64                 	db	100	;'d'
  3474  00F860  20                 	db	32
  3475  00F861  73                 	db	115	;'s'
  3476  00F862  65                 	db	101	;'e'
  3477  00F863  63                 	db	99	;'c'
  3478  00F864  6F                 	db	111	;'o'
  3479  00F865  6E                 	db	110	;'n'
  3480  00F866  64                 	db	100	;'d'
  3481  00F867  73                 	db	115	;'s'
  3482  00F868  0A                 	db	10
  3483  00F869  0D                 	db	13
  3484  00F86A  00                 	db	0
  3485  00F86B                     STR_56:
  3486  00F86B  44                 	db	68	;'D'
  3487  00F86C  65                 	db	101	;'e'
  3488  00F86D  76                 	db	118	;'v'
  3489  00F86E  69                 	db	105	;'i'
  3490  00F86F  63                 	db	99	;'c'
  3491  00F870  65                 	db	101	;'e'
  3492  00F871  20                 	db	32
  3493  00F872  73                 	db	115	;'s'
  3494  00F873  69                 	db	105	;'i'
  3495  00F874  6C                 	db	108	;'l'
  3496  00F875  69                 	db	105	;'i'
  3497  00F876  63                 	db	99	;'c'
  3498  00F877  6F                 	db	111	;'o'
  3499  00F878  6E                 	db	110	;'n'
  3500  00F879  20                 	db	32
  3501  00F87A  72                 	db	114	;'r'
  3502  00F87B  65                 	db	101	;'e'
  3503  00F87C  76                 	db	118	;'v'
  3504  00F87D  69                 	db	105	;'i'
  3505  00F87E  73                 	db	115	;'s'
  3506  00F87F  69                 	db	105	;'i'
  3507  00F880  6F                 	db	111	;'o'
  3508  00F881  6E                 	db	110	;'n'
  3509  00F882  20                 	db	32
  3510  00F883  49                 	db	73	;'I'
  3511  00F884  44                 	db	68	;'D'
  3512  00F885  20                 	db	32
  3513  00F886  61                 	db	97	;'a'
  3514  00F887  73                 	db	115	;'s'
  3515  00F888  20                 	db	32
  3516  00F889  73                 	db	115	;'s'
  3517  00F88A  74                 	db	116	;'t'
  3518  00F88B  6F                 	db	111	;'o'
  3519  00F88C  72                 	db	114	;'r'
  3520  00F88D  65                 	db	101	;'e'
  3521  00F88E  64                 	db	100	;'d'
  3522  00F88F  20                 	db	32
  3523  00F890  69                 	db	105	;'i'
  3524  00F891  6E                 	db	110	;'n'
  3525  00F892  20                 	db	32
  3526  00F893  46                 	db	70	;'F'
  3527  00F894  6C                 	db	108	;'l'
  3528  00F895  61                 	db	97	;'a'
  3529  00F896  73                 	db	115	;'s'
  3530  00F897  68                 	db	104	;'h'
  3531  00F898  20                 	db	32
  3532  00F899  69                 	db	105	;'i'
  3533  00F89A  73                 	db	115	;'s'
  3534  00F89B  3A                 	db	58	;':'
  3535  00F89C  20                 	db	32
  3536  00F89D  25                 	db	37
  3537  00F89E  63                 	db	99	;'c'
  3538  00F89F  25                 	db	37
  3539  00F8A0  64                 	db	100	;'d'
  3540  00F8A1  0A                 	db	10
  3541  00F8A2  0D                 	db	13
  3542  00F8A3  00                 	db	0
  3543  00F8A4                     STR_93:
  3544  00F8A4  4F                 	db	79	;'O'
  3545  00F8A5  75                 	db	117	;'u'
  3546  00F8A6  74                 	db	116	;'t'
  3547  00F8A7  70                 	db	112	;'p'
  3548  00F8A8  75                 	db	117	;'u'
  3549  00F8A9  74                 	db	116	;'t'
  3550  00F8AA  20                 	db	32
  3551  00F8AB  70                 	db	112	;'p'
  3552  00F8AC  6F                 	db	111	;'o'
  3553  00F8AD  77                 	db	119	;'w'
  3554  00F8AE  65                 	db	101	;'e'
  3555  00F8AF  72                 	db	114	;'r'
  3556  00F8B0  20                 	db	32
  3557  00F8B1  63                 	db	99	;'c'
  3558  00F8B2  61                 	db	97	;'a'
  3559  00F8B3  6C                 	db	108	;'l'
  3560  00F8B4  63                 	db	99	;'c'
  3561  00F8B5  75                 	db	117	;'u'
  3562  00F8B6  6C                 	db	108	;'l'
  3563  00F8B7  61                 	db	97	;'a'
  3564  00F8B8  74                 	db	116	;'t'
  3565  00F8B9  65                 	db	101	;'e'
  3566  00F8BA  64                 	db	100	;'d'
  3567  00F8BB  20                 	db	32
  3568  00F8BC  61                 	db	97	;'a'
  3569  00F8BD  73                 	db	115	;'s'
  3570  00F8BE  20                 	db	32
  3571  00F8BF  25                 	db	37
  3572  00F8C0  2E                 	db	46
  3573  00F8C1  33                 	db	51	;'3'
  3574  00F8C2  66                 	db	102	;'f'
  3575  00F8C3  20                 	db	32
  3576  00F8C4  57                 	db	87	;'W'
  3577  00F8C5  61                 	db	97	;'a'
  3578  00F8C6  74                 	db	116	;'t'
  3579  00F8C7  74                 	db	116	;'t'
  3580  00F8C8  73                 	db	115	;'s'
  3581  00F8C9  20                 	db	32
  3582  00F8CA  66                 	db	102	;'f'
  3583  00F8CB  72                 	db	114	;'r'
  3584  00F8CC  6F                 	db	111	;'o'
  3585  00F8CD  6D                 	db	109	;'m'
  3586  00F8CE  20                 	db	32
  3587  00F8CF  52                 	db	82	;'R'
  3588  00F8D0  4D                 	db	77	;'M'
  3589  00F8D1  53                 	db	83	;'S'
  3590  00F8D2  20                 	db	32
  3591  00F8D3  76                 	db	118	;'v'
  3592  00F8D4  61                 	db	97	;'a'
  3593  00F8D5  6C                 	db	108	;'l'
  3594  00F8D6  75                 	db	117	;'u'
  3595  00F8D7  65                 	db	101	;'e'
  3596  00F8D8  73                 	db	115	;'s'
  3597  00F8D9  0A                 	db	10
  3598  00F8DA  0D                 	db	13
  3599  00F8DB  00                 	db	0
  3600  00F8DC                     STR_83:
  3601  00F8DC  46                 	db	70	;'F'
  3602  00F8DD  69                 	db	105	;'i'
  3603  00F8DE  78                 	db	120	;'x'
  3604  00F8DF  65                 	db	101	;'e'
  3605  00F8E0  64                 	db	100	;'d'
  3606  00F8E1  20                 	db	32
  3607  00F8E2  56                 	db	86	;'V'
  3608  00F8E3  6F                 	db	111	;'o'
  3609  00F8E4  6C                 	db	108	;'l'
  3610  00F8E5  74                 	db	116	;'t'
  3611  00F8E6  61                 	db	97	;'a'
  3612  00F8E7  67                 	db	103	;'g'
  3613  00F8E8  65                 	db	101	;'e'
  3614  00F8E9  20                 	db	32
  3615  00F8EA  52                 	db	82	;'R'
  3616  00F8EB  65                 	db	101	;'e'
  3617  00F8EC  66                 	db	102	;'f'
  3618  00F8ED  65                 	db	101	;'e'
  3619  00F8EE  72                 	db	114	;'r'
  3620  00F8EF  65                 	db	101	;'e'
  3621  00F8F0  6E                 	db	110	;'n'
  3622  00F8F1  63                 	db	99	;'c'
  3623  00F8F2  65                 	db	101	;'e'
  3624  00F8F3  20                 	db	32
  3625  00F8F4  42                 	db	66	;'B'
  3626  00F8F5  75                 	db	117	;'u'
  3627  00F8F6  66                 	db	102	;'f'
  3628  00F8F7  66                 	db	102	;'f'
  3629  00F8F8  65                 	db	101	;'e'
  3630  00F8F9  72                 	db	114	;'r'
  3631  00F8FA  20                 	db	32
  3632  00F8FB  31                 	db	49	;'1'
  3633  00F8FC  20                 	db	32
  3634  00F8FD  6D                 	db	109	;'m'
  3635  00F8FE  65                 	db	101	;'e'
  3636  00F8FF  61                 	db	97	;'a'
  3637  00F900  73                 	db	115	;'s'
  3638  00F901  75                 	db	117	;'u'
  3639  00F902  72                 	db	114	;'r'
  3640  00F903  65                 	db	101	;'e'
  3641  00F904  64                 	db	100	;'d'
  3642  00F905  20                 	db	32
  3643  00F906  61                 	db	97	;'a'
  3644  00F907  73                 	db	115	;'s'
  3645  00F908  20                 	db	32
  3646  00F909  25                 	db	37
  3647  00F90A  66                 	db	102	;'f'
  3648  00F90B  20                 	db	32
  3649  00F90C  56                 	db	86	;'V'
  3650  00F90D  6F                 	db	111	;'o'
  3651  00F90E  6C                 	db	108	;'l'
  3652  00F90F  74                 	db	116	;'t'
  3653  00F910  73                 	db	115	;'s'
  3654  00F911  0A                 	db	10
  3655  00F912  0D                 	db	13
  3656  00F913  00                 	db	0
  3657  00F914                     STR_59:
  3658  00F914  20                 	db	32
  3659  00F915  20                 	db	32
  3660  00F916  20                 	db	32
  3661  00F917  20                 	db	32
  3662  00F918  55                 	db	85	;'U'
  3663  00F919  73                 	db	115	;'s'
  3664  00F91A  65                 	db	101	;'e'
  3665  00F91B  72                 	db	114	;'r'
  3666  00F91C  20                 	db	32
  3667  00F91D  49                 	db	73	;'I'
  3668  00F91E  44                 	db	68	;'D'
  3669  00F91F  20                 	db	32
  3670  00F920  57                 	db	87	;'W'
  3671  00F921  6F                 	db	111	;'o'
  3672  00F922  72                 	db	114	;'r'
  3673  00F923  64                 	db	100	;'d'
  3674  00F924  20                 	db	32
  3675  00F925  25                 	db	37
  3676  00F926  64                 	db	100	;'d'
  3677  00F927  20                 	db	32
  3678  00F928  28                 	db	40
  3679  00F929  46                 	db	70	;'F'
  3680  00F92A  6C                 	db	108	;'l'
  3681  00F92B  61                 	db	97	;'a'
  3682  00F92C  73                 	db	115	;'s'
  3683  00F92D  68                 	db	104	;'h'
  3684  00F92E  20                 	db	32
  3685  00F92F  61                 	db	97	;'a'
  3686  00F930  64                 	db	100	;'d'
  3687  00F931  64                 	db	100	;'d'
  3688  00F932  72                 	db	114	;'r'
  3689  00F933  65                 	db	101	;'e'
  3690  00F934  73                 	db	115	;'s'
  3691  00F935  73                 	db	115	;'s'
  3692  00F936  20                 	db	32
  3693  00F937  30                 	db	48	;'0'
  3694  00F938  78                 	db	120	;'x'
  3695  00F939  32                 	db	50	;'2'
  3696  00F93A  30                 	db	48	;'0'
  3697  00F93B  30                 	db	48	;'0'
  3698  00F93C  30                 	db	48	;'0'
  3699  00F93D  30                 	db	48	;'0'
  3700  00F93E  25                 	db	37
  3701  00F93F  58                 	db	88	;'X'
  3702  00F940  29                 	db	41
  3703  00F941  3A                 	db	58	;':'
  3704  00F942  20                 	db	32
  3705  00F943  30                 	db	48	;'0'
  3706  00F944  78                 	db	120	;'x'
  3707  00F945  25                 	db	37
  3708  00F946  58                 	db	88	;'X'
  3709  00F947  0A                 	db	10
  3710  00F948  0D                 	db	13
  3711  00F949  00                 	db	0
  3712  00F94A                     STR_112:
  3713  00F94A  4C                 	db	76	;'L'
  3714  00F94B  6F                 	db	111	;'o'
  3715  00F94C  61                 	db	97	;'a'
  3716  00F94D  64                 	db	100	;'d'
  3717  00F94E  20                 	db	32
  3718  00F94F  6F                 	db	111	;'o'
  3719  00F950  6E                 	db	110	;'n'
  3720  00F951  20                 	db	32
  3721  00F952  74                 	db	116	;'t'
  3722  00F953  69                 	db	105	;'i'
  3723  00F954  6D                 	db	109	;'m'
  3724  00F955  65                 	db	101	;'e'
  3725  00F956  20                 	db	32
  3726  00F957  73                 	db	115	;'s'
  3727  00F958  69                 	db	105	;'i'
  3728  00F959  6E                 	db	110	;'n'
  3729  00F95A  63                 	db	99	;'c'
  3730  00F95B  65                 	db	101	;'e'
  3731  00F95C  20                 	db	32
  3732  00F95D  6C                 	db	108	;'l'
  3733  00F95E  61                 	db	97	;'a'
  3734  00F95F  73                 	db	115	;'s'
  3735  00F960  74                 	db	116	;'t'
  3736  00F961  20                 	db	32
  3737  00F962  64                 	db	100	;'d'
  3738  00F963  65                 	db	101	;'e'
  3739  00F964  76                 	db	118	;'v'
  3740  00F965  69                 	db	105	;'i'
  3741  00F966  63                 	db	99	;'c'
  3742  00F967  65                 	db	101	;'e'
  3743  00F968  20                 	db	32
  3744  00F969  72                 	db	114	;'r'
  3745  00F96A  65                 	db	101	;'e'
  3746  00F96B  73                 	db	115	;'s'
  3747  00F96C  65                 	db	101	;'e'
  3748  00F96D  74                 	db	116	;'t'
  3749  00F96E  20                 	db	32
  3750  00F96F  69                 	db	105	;'i'
  3751  00F970  73                 	db	115	;'s'
  3752  00F971  20                 	db	32
  3753  00F972  25                 	db	37
  3754  00F973  64                 	db	100	;'d'
  3755  00F974  20                 	db	32
  3756  00F975  73                 	db	115	;'s'
  3757  00F976  65                 	db	101	;'e'
  3758  00F977  63                 	db	99	;'c'
  3759  00F978  6F                 	db	111	;'o'
  3760  00F979  6E                 	db	110	;'n'
  3761  00F97A  64                 	db	100	;'d'
  3762  00F97B  73                 	db	115	;'s'
  3763  00F97C  0A                 	db	10
  3764  00F97D  0D                 	db	13
  3765  00F97E  00                 	db	0
  3766  00F97F                     STR_48:
  3767  00F97F  54                 	db	84	;'T'
  3768  00F980  68                 	db	104	;'h'
  3769  00F981  65                 	db	101	;'e'
  3770  00F982  20                 	db	32
  3771  00F983  63                 	db	99	;'c'
  3772  00F984  61                 	db	97	;'a'
  3773  00F985  75                 	db	117	;'u'
  3774  00F986  73                 	db	115	;'s'
  3775  00F987  65                 	db	101	;'e'
  3776  00F988  20                 	db	32
  3777  00F989  6F                 	db	111	;'o'
  3778  00F98A  66                 	db	102	;'f'
  3779  00F98B  20                 	db	32
  3780  00F98C  74                 	db	116	;'t'
  3781  00F98D  68                 	db	104	;'h'
  3782  00F98E  65                 	db	101	;'e'
  3783  00F98F  20                 	db	32
  3784  00F990  6D                 	db	109	;'m'
  3785  00F991  6F                 	db	111	;'o'
  3786  00F992  73                 	db	115	;'s'
  3787  00F993  74                 	db	116	;'t'
  3788  00F994  20                 	db	32
  3789  00F995  72                 	db	114	;'r'
  3790  00F996  65                 	db	101	;'e'
  3791  00F997  63                 	db	99	;'c'
  3792  00F998  65                 	db	101	;'e'
  3793  00F999  6E                 	db	110	;'n'
  3794  00F99A  74                 	db	116	;'t'
  3795  00F99B  20                 	db	32
  3796  00F99C  64                 	db	100	;'d'
  3797  00F99D  65                 	db	101	;'e'
  3798  00F99E  76                 	db	118	;'v'
  3799  00F99F  69                 	db	105	;'i'
  3800  00F9A0  63                 	db	99	;'c'
  3801  00F9A1  65                 	db	101	;'e'
  3802  00F9A2  20                 	db	32
  3803  00F9A3  72                 	db	114	;'r'
  3804  00F9A4  65                 	db	101	;'e'
  3805  00F9A5  73                 	db	115	;'s'
  3806  00F9A6  65                 	db	101	;'e'
  3807  00F9A7  74                 	db	116	;'t'
  3808  00F9A8  20                 	db	32
  3809  00F9A9  77                 	db	119	;'w'
  3810  00F9AA  61                 	db	97	;'a'
  3811  00F9AB  73                 	db	115	;'s'
  3812  00F9AC  3A                 	db	58	;':'
  3813  00F9AD  20                 	db	32
  3814  00F9AE  25                 	db	37
  3815  00F9AF  73                 	db	115	;'s'
  3816  00F9B0  0A                 	db	10
  3817  00F9B1  0D                 	db	13
  3818  00F9B2  00                 	db	0
  3819  00F9B3                     STR_69:
  3820  00F9B3  54                 	db	84	;'T'
  3821  00F9B4  68                 	db	104	;'h'
  3822  00F9B5  65                 	db	101	;'e'
  3823  00F9B6  20                 	db	32
  3824  00F9B7  66                 	db	102	;'f'
  3825  00F9B8  6F                 	db	111	;'o'
  3826  00F9B9  6C                 	db	108	;'l'
  3827  00F9BA  6C                 	db	108	;'l'
  3828  00F9BB  6F                 	db	111	;'o'
  3829  00F9BC  77                 	db	119	;'w'
  3830  00F9BD  69                 	db	105	;'i'
  3831  00F9BE  6E                 	db	110	;'n'
  3832  00F9BF  67                 	db	103	;'g'
  3833  00F9C0  20                 	db	32
  3834  00F9C1  63                 	db	99	;'c'
  3835  00F9C2  68                 	db	104	;'h'
  3836  00F9C3  61                 	db	97	;'a'
  3837  00F9C4  6E                 	db	110	;'n'
  3838  00F9C5  6E                 	db	110	;'n'
  3839  00F9C6  65                 	db	101	;'e'
  3840  00F9C7  6C                 	db	108	;'l'
  3841  00F9C8  20                 	db	32
  3842  00F9C9  63                 	db	99	;'c'
  3843  00F9CA  61                 	db	97	;'a'
  3844  00F9CB  75                 	db	117	;'u'
  3845  00F9CC  73                 	db	115	;'s'
  3846  00F9CD  65                 	db	101	;'e'
  3847  00F9CE  64                 	db	100	;'d'
  3848  00F9CF  20                 	db	32
  3849  00F9D0  61                 	db	97	;'a'
  3850  00F9D1  6E                 	db	110	;'n'
  3851  00F9D2  20                 	db	32
  3852  00F9D3  41                 	db	65	;'A'
  3853  00F9D4  44                 	db	68	;'D'
  3854  00F9D5  43                 	db	67	;'C'
  3855  00F9D6  20                 	db	32
  3856  00F9D7  65                 	db	101	;'e'
  3857  00F9D8  72                 	db	114	;'r'
  3858  00F9D9  72                 	db	114	;'r'
  3859  00F9DA  6F                 	db	111	;'o'
  3860  00F9DB  72                 	db	114	;'r'
  3861  00F9DC  3A                 	db	58	;':'
  3862  00F9DD  20                 	db	32
  3863  00F9DE  25                 	db	37
  3864  00F9DF  73                 	db	115	;'s'
  3865  00F9E0  0A                 	db	10
  3866  00F9E1  0D                 	db	13
  3867  00F9E2  00                 	db	0
  3868  00F9E3                     STR_52:
  3869  00F9E3  4D                 	db	77	;'M'
  3870  00F9E4  61                 	db	97	;'a'
  3871  00F9E5  72                 	db	114	;'r'
  3872  00F9E6  71                 	db	113	;'q'
  3873  00F9E7  75                 	db	117	;'u'
  3874  00F9E8  65                 	db	101	;'e'
  3875  00F9E9  74                 	db	116	;'t'
  3876  00F9EA  74                 	db	116	;'t'
  3877  00F9EB  65                 	db	101	;'e'
  3878  00F9EC  20                 	db	32
  3879  00F9ED  55                 	db	85	;'U'
  3880  00F9EE  6E                 	db	110	;'n'
  3881  00F9EF  69                 	db	105	;'i'
  3882  00F9F0  76                 	db	118	;'v'
  3883  00F9F1  65                 	db	101	;'e'
  3884  00F9F2  72                 	db	114	;'r'
  3885  00F9F3  73                 	db	115	;'s'
  3886  00F9F4  69                 	db	105	;'i'
  3887  00F9F5  74                 	db	116	;'t'
  3888  00F9F6  79                 	db	121	;'y'
  3889  00F9F7  20                 	db	32
  3890  00F9F8  45                 	db	69	;'E'
  3891  00F9F9  4C                 	db	76	;'L'
  3892  00F9FA  45                 	db	69	;'E'
  3893  00F9FB  4E                 	db	78	;'N'
  3894  00F9FC  20                 	db	32
  3895  00F9FD  33                 	db	51	;'3'
  3896  00F9FE  30                 	db	48	;'0'
  3897  00F9FF  33                 	db	51	;'3'
  3898  00FA00  35                 	db	53	;'5'
  3899  00FA01  20                 	db	32
  3900  00FA02  46                 	db	70	;'F'
  3901  00FA03  69                 	db	105	;'i'
  3902  00FA04  6E                 	db	110	;'n'
  3903  00FA05  61                 	db	97	;'a'
  3904  00FA06  6C                 	db	108	;'l'
  3905  00FA07  20                 	db	32
  3906  00FA08  50                 	db	80	;'P'
  3907  00FA09  72                 	db	114	;'r'
  3908  00FA0A  6F                 	db	111	;'o'
  3909  00FA0B  6A                 	db	106	;'j'
  3910  00FA0C  65                 	db	101	;'e'
  3911  00FA0D  63                 	db	99	;'c'
  3912  00FA0E  74                 	db	116	;'t'
  3913  00FA0F  0A                 	db	10
  3914  00FA10  0D                 	db	13
  3915  00FA11  00                 	db	0
  3916  00FA12                     STR_105:
  3917  00FA12  45                 	db	69	;'E'
  3918  00FA13  6E                 	db	110	;'n'
  3919  00FA14  74                 	db	116	;'t'
  3920  00FA15  65                 	db	101	;'e'
  3921  00FA16  72                 	db	114	;'r'
  3922  00FA17  20                 	db	32
  3923  00FA18  27                 	db	39
  3924  00FA19  48                 	db	72	;'H'
  3925  00FA1A  65                 	db	101	;'e'
  3926  00FA1B  6C                 	db	108	;'l'
  3927  00FA1C  70                 	db	112	;'p'
  3928  00FA1D  27                 	db	39
  3929  00FA1E  20                 	db	32
  3930  00FA1F  66                 	db	102	;'f'
  3931  00FA20  6F                 	db	111	;'o'
  3932  00FA21  72                 	db	114	;'r'
  3933  00FA22  20                 	db	32
  3934  00FA23  6C                 	db	108	;'l'
  3935  00FA24  69                 	db	105	;'i'
  3936  00FA25  73                 	db	115	;'s'
  3937  00FA26  74                 	db	116	;'t'
  3938  00FA27  20                 	db	32
  3939  00FA28  6F                 	db	111	;'o'
  3940  00FA29  66                 	db	102	;'f'
  3941  00FA2A  20                 	db	32
  3942  00FA2B  61                 	db	97	;'a'
  3943  00FA2C  76                 	db	118	;'v'
  3944  00FA2D  61                 	db	97	;'a'
  3945  00FA2E  69                 	db	105	;'i'
  3946  00FA2F  6C                 	db	108	;'l'
  3947  00FA30  61                 	db	97	;'a'
  3948  00FA31  62                 	db	98	;'b'
  3949  00FA32  6C                 	db	108	;'l'
  3950  00FA33  65                 	db	101	;'e'
  3951  00FA34  20                 	db	32
  3952  00FA35  63                 	db	99	;'c'
  3953  00FA36  6F                 	db	111	;'o'
  3954  00FA37  6D                 	db	109	;'m'
  3955  00FA38  6D                 	db	109	;'m'
  3956  00FA39  61                 	db	97	;'a'
  3957  00FA3A  6E                 	db	110	;'n'
  3958  00FA3B  64                 	db	100	;'d'
  3959  00FA3C  73                 	db	115	;'s'
  3960  00FA3D  0A                 	db	10
  3961  00FA3E  0D                 	db	13
  3962  00FA3F  00                 	db	0
  3963  00FA40                     STR_75:
  3964  00FA40  56                 	db	86	;'V'
  3965  00FA41  43                 	db	67	;'C'
  3966  00FA42  43                 	db	67	;'C'
  3967  00FA43  20                 	db	32
  3968  00FA44  4F                 	db	79	;'O'
  3969  00FA45  76                 	db	118	;'v'
  3970  00FA46  65                 	db	101	;'e'
  3971  00FA47  72                 	db	114	;'r'
  3972  00FA48  76                 	db	118	;'v'
  3973  00FA49  6F                 	db	111	;'o'
  3974  00FA4A  6C                 	db	108	;'l'
  3975  00FA4B  74                 	db	116	;'t'
  3976  00FA4C  61                 	db	97	;'a'
  3977  00FA4D  67                 	db	103	;'g'
  3978  00FA4E  65                 	db	101	;'e'
  3979  00FA4F  20                 	db	32
  3980  00FA50  63                 	db	99	;'c'
  3981  00FA51  6F                 	db	111	;'o'
  3982  00FA52  6E                 	db	110	;'n'
  3983  00FA53  64                 	db	100	;'d'
  3984  00FA54  69                 	db	105	;'i'
  3985  00FA55  74                 	db	116	;'t'
  3986  00FA56  69                 	db	105	;'i'
  3987  00FA57  6F                 	db	111	;'o'
  3988  00FA58  6E                 	db	110	;'n'
  3989  00FA59  20                 	db	32
  3990  00FA5A  68                 	db	104	;'h'
  3991  00FA5B  61                 	db	97	;'a'
  3992  00FA5C  73                 	db	115	;'s'
  3993  00FA5D  20                 	db	32
  3994  00FA5E  6E                 	db	110	;'n'
  3995  00FA5F  6F                 	db	111	;'o'
  3996  00FA60  74                 	db	116	;'t'
  3997  00FA61  20                 	db	32
  3998  00FA62  6F                 	db	111	;'o'
  3999  00FA63  63                 	db	99	;'c'
  4000  00FA64  63                 	db	99	;'c'
  4001  00FA65  75                 	db	117	;'u'
  4002  00FA66  72                 	db	114	;'r'
  4003  00FA67  72                 	db	114	;'r'
  4004  00FA68  65                 	db	101	;'e'
  4005  00FA69  64                 	db	100	;'d'
  4006  00FA6A  0A                 	db	10
  4007  00FA6B  0D                 	db	13
  4008  00FA6C  00                 	db	0
  4009  00FA6D                     STR_99:
  4010  00FA6D  4C                 	db	76	;'L'
  4011  00FA6E  6F                 	db	111	;'o'
  4012  00FA6F  61                 	db	97	;'a'
  4013  00FA70  64                 	db	100	;'d'
  4014  00FA71  20                 	db	32
  4015  00FA72  68                 	db	104	;'h'
  4016  00FA73  61                 	db	97	;'a'
  4017  00FA74  73                 	db	115	;'s'
  4018  00FA75  20                 	db	32
  4019  00FA76  62                 	db	98	;'b'
  4020  00FA77  65                 	db	101	;'e'
  4021  00FA78  65                 	db	101	;'e'
  4022  00FA79  6E                 	db	110	;'n'
  4023  00FA7A  20                 	db	32
  4024  00FA7B  65                 	db	101	;'e'
  4025  00FA7C  6E                 	db	110	;'n'
  4026  00FA7D  61                 	db	97	;'a'
  4027  00FA7E  62                 	db	98	;'b'
  4028  00FA7F  6C                 	db	108	;'l'
  4029  00FA80  65                 	db	101	;'e'
  4030  00FA81  64                 	db	100	;'d'
  4031  00FA82  2C                 	db	44
  4032  00FA83  20                 	db	32
  4033  00FA84  64                 	db	100	;'d'
  4034  00FA85  69                 	db	105	;'i'
  4035  00FA86  6D                 	db	109	;'m'
  4036  00FA87  6D                 	db	109	;'m'
  4037  00FA88  69                 	db	105	;'i'
  4038  00FA89  6E                 	db	110	;'n'
  4039  00FA8A  67                 	db	103	;'g'
  4040  00FA8B  20                 	db	32
  4041  00FA8C  64                 	db	100	;'d'
  4042  00FA8D  69                 	db	105	;'i'
  4043  00FA8E  73                 	db	115	;'s'
  4044  00FA8F  61                 	db	97	;'a'
  4045  00FA90  62                 	db	98	;'b'
  4046  00FA91  6C                 	db	108	;'l'
  4047  00FA92  65                 	db	101	;'e'
  4048  00FA93  64                 	db	100	;'d'
  4049  00FA94  0A                 	db	10
  4050  00FA95  0D                 	db	13
  4051  00FA96  00                 	db	0
  4052  00FA97                     STR_128:
  4053  00FA97  57                 	db	87	;'W'
  4054  00FA98  69                 	db	105	;'i'
  4055  00FA99  6E                 	db	110	;'n'
  4056  00FA9A  64                 	db	100	;'d'
  4057  00FA9B  6F                 	db	111	;'o'
  4058  00FA9C  77                 	db	119	;'w'
  4059  00FA9D  65                 	db	101	;'e'
  4060  00FA9E  64                 	db	100	;'d'
  4061  00FA9F  20                 	db	32
  4062  00FAA0  57                 	db	87	;'W'
  4063  00FAA1  61                 	db	97	;'a'
  4064  00FAA2  74                 	db	116	;'t'
  4065  00FAA3  63                 	db	99	;'c'
  4066  00FAA4  68                 	db	104	;'h'
  4067  00FAA5  20                 	db	32
  4068  00FAA6  44                 	db	68	;'D'
  4069  00FAA7  6F                 	db	111	;'o'
  4070  00FAA8  67                 	db	103	;'g'
  4071  00FAA9  20                 	db	32
  4072  00FAAA  54                 	db	84	;'T'
  4073  00FAAB  69                 	db	105	;'i'
  4074  00FAAC  6D                 	db	109	;'m'
  4075  00FAAD  65                 	db	101	;'e'
  4076  00FAAE  72                 	db	114	;'r'
  4077  00FAAF  20                 	db	32
  4078  00FAB0  56                 	db	86	;'V'
  4079  00FAB1  69                 	db	105	;'i'
  4080  00FAB2  6F                 	db	111	;'o'
  4081  00FAB3  6C                 	db	108	;'l'
  4082  00FAB4  61                 	db	97	;'a'
  4083  00FAB5  74                 	db	116	;'t'
  4084  00FAB6  69                 	db	105	;'i'
  4085  00FAB7  6F                 	db	111	;'o'
  4086  00FAB8  6E                 	db	110	;'n'
  4087  00FAB9  20                 	db	32
  4088  00FABA  52                 	db	82	;'R'
  4089  00FABB  65                 	db	101	;'e'
  4090  00FABC  73                 	db	115	;'s'
  4091  00FABD  65                 	db	101	;'e'
  4092  00FABE  74                 	db	116	;'t'
  4093  00FABF  00                 	db	0
  4094  00FAC0                     STR_97:
  4095  00FAC0  54                 	db	84	;'T'
  4096  00FAC1  52                 	db	82	;'R'
  4097  00FAC2  49                 	db	73	;'I'
  4098  00FAC3  41                 	db	65	;'A'
  4099  00FAC4  43                 	db	67	;'C'
  4100  00FAC5  20                 	db	32
  4101  00FAC6  6F                 	db	111	;'o'
  4102  00FAC7  75                 	db	117	;'u'
  4103  00FAC8  74                 	db	116	;'t'
  4104  00FAC9  70                 	db	112	;'p'
  4105  00FACA  75                 	db	117	;'u'
  4106  00FACB  74                 	db	116	;'t'
  4107  00FACC  20                 	db	32
  4108  00FACD  64                 	db	100	;'d'
  4109  00FACE  69                 	db	105	;'i'
  4110  00FACF  6D                 	db	109	;'m'
  4111  00FAD0  6D                 	db	109	;'m'
  4112  00FAD1  69                 	db	105	;'i'
  4113  00FAD2  6E                 	db	110	;'n'
  4114  00FAD3  67                 	db	103	;'g'
  4115  00FAD4  20                 	db	32
  4116  00FAD5  68                 	db	104	;'h'
  4117  00FAD6  61                 	db	97	;'a'
  4118  00FAD7  73                 	db	115	;'s'
  4119  00FAD8  20                 	db	32
  4120  00FAD9  62                 	db	98	;'b'
  4121  00FADA  65                 	db	101	;'e'
  4122  00FADB  65                 	db	101	;'e'
  4123  00FADC  6E                 	db	110	;'n'
  4124  00FADD  20                 	db	32
  4125  00FADE  64                 	db	100	;'d'
  4126  00FADF  69                 	db	105	;'i'
  4127  00FAE0  73                 	db	115	;'s'
  4128  00FAE1  61                 	db	97	;'a'
  4129  00FAE2  62                 	db	98	;'b'
  4130  00FAE3  6C                 	db	108	;'l'
  4131  00FAE4  65                 	db	101	;'e'
  4132  00FAE5  64                 	db	100	;'d'
  4133  00FAE6  0A                 	db	10
  4134  00FAE7  0D                 	db	13
  4135  00FAE8  00                 	db	0
  4136  00FAE9                     STR_95:
  4137  00FAE9  54                 	db	84	;'T'
  4138  00FAEA  52                 	db	82	;'R'
  4139  00FAEB  49                 	db	73	;'I'
  4140  00FAEC  41                 	db	65	;'A'
  4141  00FAED  43                 	db	67	;'C'
  4142  00FAEE  20                 	db	32
  4143  00FAEF  6F                 	db	111	;'o'
  4144  00FAF0  75                 	db	117	;'u'
  4145  00FAF1  74                 	db	116	;'t'
  4146  00FAF2  70                 	db	112	;'p'
  4147  00FAF3  75                 	db	117	;'u'
  4148  00FAF4  74                 	db	116	;'t'
  4149  00FAF5  20                 	db	32
  4150  00FAF6  64                 	db	100	;'d'
  4151  00FAF7  69                 	db	105	;'i'
  4152  00FAF8  6D                 	db	109	;'m'
  4153  00FAF9  6D                 	db	109	;'m'
  4154  00FAFA  69                 	db	105	;'i'
  4155  00FAFB  6E                 	db	110	;'n'
  4156  00FAFC  67                 	db	103	;'g'
  4157  00FAFD  20                 	db	32
  4158  00FAFE  68                 	db	104	;'h'
  4159  00FAFF  61                 	db	97	;'a'
  4160  00FB00  73                 	db	115	;'s'
  4161  00FB01  20                 	db	32
  4162  00FB02  62                 	db	98	;'b'
  4163  00FB03  65                 	db	101	;'e'
  4164  00FB04  65                 	db	101	;'e'
  4165  00FB05  6E                 	db	110	;'n'
  4166  00FB06  20                 	db	32
  4167  00FB07  65                 	db	101	;'e'
  4168  00FB08  6E                 	db	110	;'n'
  4169  00FB09  61                 	db	97	;'a'
  4170  00FB0A  62                 	db	98	;'b'
  4171  00FB0B  6C                 	db	108	;'l'
  4172  00FB0C  65                 	db	101	;'e'
  4173  00FB0D  64                 	db	100	;'d'
  4174  00FB0E  0A                 	db	10
  4175  00FB0F  0D                 	db	13
  4176  00FB10  00                 	db	0
  4177  00FB11                     STR_117:
  4178  00FB11  4D                 	db	77	;'M'
  4179  00FB12  65                 	db	101	;'e'
  4180  00FB13  61                 	db	97	;'a'
  4181  00FB14  73                 	db	115	;'s'
  4182  00FB15  75                 	db	117	;'u'
  4183  00FB16  72                 	db	114	;'r'
  4184  00FB17  65                 	db	101	;'e'
  4185  00FB18  6D                 	db	109	;'m'
  4186  00FB19  65                 	db	101	;'e'
  4187  00FB1A  6E                 	db	110	;'n'
  4188  00FB1B  74                 	db	116	;'t'
  4189  00FB1C  20                 	db	32
  4190  00FB1D  72                 	db	114	;'r'
  4191  00FB1E  65                 	db	101	;'e'
  4192  00FB1F  73                 	db	115	;'s'
  4193  00FB20  70                 	db	112	;'p'
  4194  00FB21  6F                 	db	111	;'o'
  4195  00FB22  6E                 	db	110	;'n'
  4196  00FB23  73                 	db	115	;'s'
  4197  00FB24  65                 	db	101	;'e'
  4198  00FB25  73                 	db	115	;'s'
  4199  00FB26  20                 	db	32
  4200  00FB27  61                 	db	97	;'a'
  4201  00FB28  70                 	db	112	;'p'
  4202  00FB29  70                 	db	112	;'p'
  4203  00FB2A  65                 	db	101	;'e'
  4204  00FB2B  61                 	db	97	;'a'
  4205  00FB2C  72                 	db	114	;'r'
  4206  00FB2D  20                 	db	32
  4207  00FB2E  69                 	db	105	;'i'
  4208  00FB2F  6E                 	db	110	;'n'
  4209  00FB30  20                 	db	32
  4210  00FB31  63                 	db	99	;'c'
  4211  00FB32  79                 	db	121	;'y'
  4212  00FB33  61                 	db	97	;'a'
  4213  00FB34  6E                 	db	110	;'n'
  4214  00FB35  0A                 	db	10
  4215  00FB36  0D                 	db	13
  4216  00FB37  00                 	db	0
  4217  00FB38                     STR_85:
  4218  00FB38  41                 	db	65	;'A'
  4219  00FB39  56                 	db	86	;'V'
  4220  00FB3A  53                 	db	83	;'S'
  4221  00FB3B  53                 	db	83	;'S'
  4222  00FB3C  20                 	db	32
  4223  00FB3D  6D                 	db	109	;'m'
  4224  00FB3E  65                 	db	101	;'e'
  4225  00FB3F  61                 	db	97	;'a'
  4226  00FB40  73                 	db	115	;'s'
  4227  00FB41  75                 	db	117	;'u'
  4228  00FB42  72                 	db	114	;'r'
  4229  00FB43  65                 	db	101	;'e'
  4230  00FB44  64                 	db	100	;'d'
  4231  00FB45  20                 	db	32
  4232  00FB46  61                 	db	97	;'a'
  4233  00FB47  73                 	db	115	;'s'
  4234  00FB48  20                 	db	32
  4235  00FB49  25                 	db	37
  4236  00FB4A  2E                 	db	46
  4237  00FB4B  33                 	db	51	;'3'
  4238  00FB4C  66                 	db	102	;'f'
  4239  00FB4D  20                 	db	32
  4240  00FB4E  56                 	db	86	;'V'
  4241  00FB4F  6F                 	db	111	;'o'
  4242  00FB50  6C                 	db	108	;'l'
  4243  00FB51  74                 	db	116	;'t'
  4244  00FB52  73                 	db	115	;'s'
  4245  00FB53  20                 	db	32
  4246  00FB54  62                 	db	98	;'b'
  4247  00FB55  79                 	db	121	;'y'
  4248  00FB56  20                 	db	32
  4249  00FB57  41                 	db	65	;'A'
  4250  00FB58  44                 	db	68	;'D'
  4251  00FB59  43                 	db	67	;'C'
  4252  00FB5A  0A                 	db	10
  4253  00FB5B  0D                 	db	13
  4254  00FB5C  00                 	db	0
  4255  00FB5D                     STR_106:
  4256  00FB5D  44                 	db	68	;'D'
  4257  00FB5E  69                 	db	105	;'i'
  4258  00FB5F  6D                 	db	109	;'m'
  4259  00FB60  6D                 	db	109	;'m'
  4260  00FB61  69                 	db	105	;'i'
  4261  00FB62  6E                 	db	110	;'n'
  4262  00FB63  67                 	db	103	;'g'
  4263  00FB64  20                 	db	32
  4264  00FB65  68                 	db	104	;'h'
  4265  00FB66  61                 	db	97	;'a'
  4266  00FB67  73                 	db	115	;'s'
  4267  00FB68  20                 	db	32
  4268  00FB69  62                 	db	98	;'b'
  4269  00FB6A  65                 	db	101	;'e'
  4270  00FB6B  65                 	db	101	;'e'
  4271  00FB6C  6E                 	db	110	;'n'
  4272  00FB6D  20                 	db	32
  4273  00FB6E  73                 	db	115	;'s'
  4274  00FB6F  65                 	db	101	;'e'
  4275  00FB70  74                 	db	116	;'t'
  4276  00FB71  20                 	db	32
  4277  00FB72  74                 	db	116	;'t'
  4278  00FB73  6F                 	db	111	;'o'
  4279  00FB74  20                 	db	32
  4280  00FB75  25                 	db	37
  4281  00FB76  64                 	db	100	;'d'
  4282  00FB77  20                 	db	32
  4283  00FB78  70                 	db	112	;'p'
  4284  00FB79  65                 	db	101	;'e'
  4285  00FB7A  72                 	db	114	;'r'
  4286  00FB7B  63                 	db	99	;'c'
  4287  00FB7C  65                 	db	101	;'e'
  4288  00FB7D  6E                 	db	110	;'n'
  4289  00FB7E  74                 	db	116	;'t'
  4290  00FB7F  0A                 	db	10
  4291  00FB80  0D                 	db	13
  4292  00FB81  00                 	db	0
  4293  00FB82                     STR_116:
  4294  00FB82  53                 	db	83	;'S'
  4295  00FB83  79                 	db	121	;'y'
  4296  00FB84  73                 	db	115	;'s'
  4297  00FB85  74                 	db	116	;'t'
  4298  00FB86  65                 	db	101	;'e'
  4299  00FB87  6D                 	db	109	;'m'
  4300  00FB88  20                 	db	32
  4301  00FB89  70                 	db	112	;'p'
  4302  00FB8A  61                 	db	97	;'a'
  4303  00FB8B  72                 	db	114	;'r'
  4304  00FB8C  61                 	db	97	;'a'
  4305  00FB8D  6D                 	db	109	;'m'
  4306  00FB8E  65                 	db	101	;'e'
  4307  00FB8F  74                 	db	116	;'t'
  4308  00FB90  65                 	db	101	;'e'
  4309  00FB91  72                 	db	114	;'r'
  4310  00FB92  73                 	db	115	;'s'
  4311  00FB93  20                 	db	32
  4312  00FB94  61                 	db	97	;'a'
  4313  00FB95  70                 	db	112	;'p'
  4314  00FB96  70                 	db	112	;'p'
  4315  00FB97  65                 	db	101	;'e'
  4316  00FB98  61                 	db	97	;'a'
  4317  00FB99  72                 	db	114	;'r'
  4318  00FB9A  20                 	db	32
  4319  00FB9B  69                 	db	105	;'i'
  4320  00FB9C  6E                 	db	110	;'n'
  4321  00FB9D  20                 	db	32
  4322  00FB9E  67                 	db	103	;'g'
  4323  00FB9F  72                 	db	114	;'r'
  4324  00FBA0  65                 	db	101	;'e'
  4325  00FBA1  65                 	db	101	;'e'
  4326  00FBA2  6E                 	db	110	;'n'
  4327  00FBA3  0A                 	db	10
  4328  00FBA4  0D                 	db	13
  4329  00FBA5  00                 	db	0
  4330  00FBA6                     STR_77:
  4331  00FBA6  2B                 	db	43
  4332  00FBA7  33                 	db	51	;'3'
  4333  00FBA8  2E                 	db	46
  4334  00FBA9  33                 	db	51	;'3'
  4335  00FBAA  56                 	db	86	;'V'
  4336  00FBAB  20                 	db	32
  4337  00FBAC  72                 	db	114	;'r'
  4338  00FBAD  61                 	db	97	;'a'
  4339  00FBAE  69                 	db	105	;'i'
  4340  00FBAF  6C                 	db	108	;'l'
  4341  00FBB0  20                 	db	32
  4342  00FBB1  6D                 	db	109	;'m'
  4343  00FBB2  65                 	db	101	;'e'
  4344  00FBB3  61                 	db	97	;'a'
  4345  00FBB4  73                 	db	115	;'s'
  4346  00FBB5  75                 	db	117	;'u'
  4347  00FBB6  72                 	db	114	;'r'
  4348  00FBB7  65                 	db	101	;'e'
  4349  00FBB8  64                 	db	100	;'d'
  4350  00FBB9  20                 	db	32
  4351  00FBBA  61                 	db	97	;'a'
  4352  00FBBB  73                 	db	115	;'s'
  4353  00FBBC  20                 	db	32
  4354  00FBBD  2B                 	db	43
  4355  00FBBE  25                 	db	37
  4356  00FBBF  66                 	db	102	;'f'
  4357  00FBC0  20                 	db	32
  4358  00FBC1  56                 	db	86	;'V'
  4359  00FBC2  6F                 	db	111	;'o'
  4360  00FBC3  6C                 	db	108	;'l'
  4361  00FBC4  74                 	db	116	;'t'
  4362  00FBC5  73                 	db	115	;'s'
  4363  00FBC6  0A                 	db	10
  4364  00FBC7  0D                 	db	13
  4365  00FBC8  00                 	db	0
  4366  00FBC9                     STR_81:
  4367  00FBC9  44                 	db	68	;'D'
  4368  00FBCA  69                 	db	105	;'i'
  4369  00FBCB  65                 	db	101	;'e'
  4370  00FBCC  20                 	db	32
  4371  00FBCD  54                 	db	84	;'T'
  4372  00FBCE  65                 	db	101	;'e'
  4373  00FBCF  6D                 	db	109	;'m'
  4374  00FBD0  70                 	db	112	;'p'
  4375  00FBD1  65                 	db	101	;'e'
  4376  00FBD2  72                 	db	114	;'r'
  4377  00FBD3  61                 	db	97	;'a'
  4378  00FBD4  74                 	db	116	;'t'
  4379  00FBD5  75                 	db	117	;'u'
  4380  00FBD6  72                 	db	114	;'r'
  4381  00FBD7  65                 	db	101	;'e'
  4382  00FBD8  20                 	db	32
  4383  00FBD9  6D                 	db	109	;'m'
  4384  00FBDA  65                 	db	101	;'e'
  4385  00FBDB  61                 	db	97	;'a'
  4386  00FBDC  73                 	db	115	;'s'
  4387  00FBDD  75                 	db	117	;'u'
  4388  00FBDE  72                 	db	114	;'r'
  4389  00FBDF  65                 	db	101	;'e'
  4390  00FBE0  64                 	db	100	;'d'
  4391  00FBE1  20                 	db	32
  4392  00FBE2  61                 	db	97	;'a'
  4393  00FBE3  73                 	db	115	;'s'
  4394  00FBE4  20                 	db	32
  4395  00FBE5  25                 	db	37
  4396  00FBE6  66                 	db	102	;'f'
  4397  00FBE7  43                 	db	67	;'C'
  4398  00FBE8  0A                 	db	10
  4399  00FBE9  0D                 	db	13
  4400  00FBEA  00                 	db	0
  4401  00FBEB                     STR_89:
  4402  00FBEB  52                 	db	82	;'R'
  4403  00FBEC  4D                 	db	77	;'M'
  4404  00FBED  53                 	db	83	;'S'
  4405  00FBEE  20                 	db	32
  4406  00FBEF  4F                 	db	79	;'O'
  4407  00FBF0  75                 	db	117	;'u'
  4408  00FBF1  74                 	db	116	;'t'
  4409  00FBF2  70                 	db	112	;'p'
  4410  00FBF3  75                 	db	117	;'u'
  4411  00FBF4  74                 	db	116	;'t'
  4412  00FBF5  20                 	db	32
  4413  00FBF6  43                 	db	67	;'C'
  4414  00FBF7  75                 	db	117	;'u'
  4415  00FBF8  72                 	db	114	;'r'
  4416  00FBF9  72                 	db	114	;'r'
  4417  00FBFA  65                 	db	101	;'e'
  4418  00FBFB  6E                 	db	110	;'n'
  4419  00FBFC  74                 	db	116	;'t'
  4420  00FBFD  20                 	db	32
  4421  00FBFE  69                 	db	105	;'i'
  4422  00FBFF  73                 	db	115	;'s'
  4423  00FC00  20                 	db	32
  4424  00FC01  25                 	db	37
  4425  00FC02  2E                 	db	46
  4426  00FC03  33                 	db	51	;'3'
  4427  00FC04  66                 	db	102	;'f'
  4428  00FC05  20                 	db	32
  4429  00FC06  41                 	db	65	;'A'
  4430  00FC07  72                 	db	114	;'r'
  4431  00FC08  6D                 	db	109	;'m'
  4432  00FC09  73                 	db	115	;'s'
  4433  00FC0A  0A                 	db	10
  4434  00FC0B  0D                 	db	13
  4435  00FC0C  00                 	db	0
  4436  00FC0D                     STR_91:
  4437  00FC0D  52                 	db	82	;'R'
  4438  00FC0E  4D                 	db	77	;'M'
  4439  00FC0F  53                 	db	83	;'S'
  4440  00FC10  20                 	db	32
  4441  00FC11  4F                 	db	79	;'O'
  4442  00FC12  75                 	db	117	;'u'
  4443  00FC13  74                 	db	116	;'t'
  4444  00FC14  70                 	db	112	;'p'
  4445  00FC15  75                 	db	117	;'u'
  4446  00FC16  74                 	db	116	;'t'
  4447  00FC17  20                 	db	32
  4448  00FC18  56                 	db	86	;'V'
  4449  00FC19  6F                 	db	111	;'o'
  4450  00FC1A  6C                 	db	108	;'l'
  4451  00FC1B  74                 	db	116	;'t'
  4452  00FC1C  61                 	db	97	;'a'
  4453  00FC1D  67                 	db	103	;'g'
  4454  00FC1E  65                 	db	101	;'e'
  4455  00FC1F  20                 	db	32
  4456  00FC20  69                 	db	105	;'i'
  4457  00FC21  73                 	db	115	;'s'
  4458  00FC22  20                 	db	32
  4459  00FC23  25                 	db	37
  4460  00FC24  2E                 	db	46
  4461  00FC25  33                 	db	51	;'3'
  4462  00FC26  66                 	db	102	;'f'
  4463  00FC27  20                 	db	32
  4464  00FC28  56                 	db	86	;'V'
  4465  00FC29  72                 	db	114	;'r'
  4466  00FC2A  6D                 	db	109	;'m'
  4467  00FC2B  73                 	db	115	;'s'
  4468  00FC2C  0A                 	db	10
  4469  00FC2D  0D                 	db	13
  4470  00FC2E  00                 	db	0
  4471  00FC2F                     STR_79:
  4472  00FC2F  2B                 	db	43
  4473  00FC30  31                 	db	49	;'1'
  4474  00FC31  32                 	db	50	;'2'
  4475  00FC32  56                 	db	86	;'V'
  4476  00FC33  20                 	db	32
  4477  00FC34  72                 	db	114	;'r'
  4478  00FC35  61                 	db	97	;'a'
  4479  00FC36  69                 	db	105	;'i'
  4480  00FC37  6C                 	db	108	;'l'
  4481  00FC38  20                 	db	32
  4482  00FC39  6D                 	db	109	;'m'
  4483  00FC3A  65                 	db	101	;'e'
  4484  00FC3B  61                 	db	97	;'a'
  4485  00FC3C  73                 	db	115	;'s'
  4486  00FC3D  75                 	db	117	;'u'
  4487  00FC3E  72                 	db	114	;'r'
  4488  00FC3F  65                 	db	101	;'e'
  4489  00FC40  64                 	db	100	;'d'
  4490  00FC41  20                 	db	32
  4491  00FC42  61                 	db	97	;'a'
  4492  00FC43  73                 	db	115	;'s'
  4493  00FC44  20                 	db	32
  4494  00FC45  2B                 	db	43
  4495  00FC46  25                 	db	37
  4496  00FC47  66                 	db	102	;'f'
  4497  00FC48  20                 	db	32
  4498  00FC49  56                 	db	86	;'V'
  4499  00FC4A  6F                 	db	111	;'o'
  4500  00FC4B  6C                 	db	108	;'l'
  4501  00FC4C  74                 	db	116	;'t'
  4502  00FC4D  73                 	db	115	;'s'
  4503  00FC4E  0A                 	db	10
  4504  00FC4F  0D                 	db	13
  4505  00FC50  00                 	db	0
  4506  00FC51                     STR_115:
  4507  00FC51  48                 	db	72	;'H'
  4508  00FC52  65                 	db	101	;'e'
  4509  00FC53  6C                 	db	108	;'l'
  4510  00FC54  70                 	db	112	;'p'
  4511  00FC55  20                 	db	32
  4512  00FC56  6D                 	db	109	;'m'
  4513  00FC57  65                 	db	101	;'e'
  4514  00FC58  73                 	db	115	;'s'
  4515  00FC59  73                 	db	115	;'s'
  4516  00FC5A  61                 	db	97	;'a'
  4517  00FC5B  67                 	db	103	;'g'
  4518  00FC5C  65                 	db	101	;'e'
  4519  00FC5D  73                 	db	115	;'s'
  4520  00FC5E  20                 	db	32
  4521  00FC5F  61                 	db	97	;'a'
  4522  00FC60  70                 	db	112	;'p'
  4523  00FC61  70                 	db	112	;'p'
  4524  00FC62  65                 	db	101	;'e'
  4525  00FC63  61                 	db	97	;'a'
  4526  00FC64  72                 	db	114	;'r'
  4527  00FC65  20                 	db	32
  4528  00FC66  69                 	db	105	;'i'
  4529  00FC67  6E                 	db	110	;'n'
  4530  00FC68  20                 	db	32
  4531  00FC69  79                 	db	121	;'y'
  4532  00FC6A  65                 	db	101	;'e'
  4533  00FC6B  6C                 	db	108	;'l'
  4534  00FC6C  6C                 	db	108	;'l'
  4535  00FC6D  6F                 	db	111	;'o'
  4536  00FC6E  77                 	db	119	;'w'
  4537  00FC6F  0A                 	db	10
  4538  00FC70  0D                 	db	13
  4539  00FC71  00                 	db	0
  4540  00FC72                     STR_87:
  4541  00FC72  4D                 	db	77	;'M'
  4542  00FC73  65                 	db	101	;'e'
  4543  00FC74  61                 	db	97	;'a'
  4544  00FC75  73                 	db	115	;'s'
  4545  00FC76  75                 	db	117	;'u'
  4546  00FC77  72                 	db	114	;'r'
  4547  00FC78  65                 	db	101	;'e'
  4548  00FC79  64                 	db	100	;'d'
  4549  00FC7A  20                 	db	32
  4550  00FC7B  43                 	db	67	;'C'
  4551  00FC7C  75                 	db	117	;'u'
  4552  00FC7D  72                 	db	114	;'r'
  4553  00FC7E  72                 	db	114	;'r'
  4554  00FC7F  65                 	db	101	;'e'
  4555  00FC80  6E                 	db	110	;'n'
  4556  00FC81  74                 	db	116	;'t'
  4557  00FC82  20                 	db	32
  4558  00FC83  69                 	db	105	;'i'
  4559  00FC84  73                 	db	115	;'s'
  4560  00FC85  20                 	db	32
  4561  00FC86  25                 	db	37
  4562  00FC87  2E                 	db	46
  4563  00FC88  33                 	db	51	;'3'
  4564  00FC89  66                 	db	102	;'f'
  4565  00FC8A  20                 	db	32
  4566  00FC8B  41                 	db	65	;'A'
  4567  00FC8C  6D                 	db	109	;'m'
  4568  00FC8D  70                 	db	112	;'p'
  4569  00FC8E  73                 	db	115	;'s'
  4570  00FC8F  0A                 	db	10
  4571  00FC90  0D                 	db	13
  4572  00FC91  00                 	db	0
  4573  00FC92                     STR_119:
  4574  00FC92  55                 	db	85	;'U'
  4575  00FC93  73                 	db	115	;'s'
  4576  00FC94  65                 	db	101	;'e'
  4577  00FC95  72                 	db	114	;'r'
  4578  00FC96  20                 	db	32
  4579  00FC97  69                 	db	105	;'i'
  4580  00FC98  6E                 	db	110	;'n'
  4581  00FC99  70                 	db	112	;'p'
  4582  00FC9A  75                 	db	117	;'u'
  4583  00FC9B  74                 	db	116	;'t'
  4584  00FC9C  20                 	db	32
  4585  00FC9D  61                 	db	97	;'a'
  4586  00FC9E  70                 	db	112	;'p'
  4587  00FC9F  70                 	db	112	;'p'
  4588  00FCA0  65                 	db	101	;'e'
  4589  00FCA1  61                 	db	97	;'a'
  4590  00FCA2  72                 	db	114	;'r'
  4591  00FCA3  73                 	db	115	;'s'
  4592  00FCA4  20                 	db	32
  4593  00FCA5  69                 	db	105	;'i'
  4594  00FCA6  6E                 	db	110	;'n'
  4595  00FCA7  20                 	db	32
  4596  00FCA8  77                 	db	119	;'w'
  4597  00FCA9  68                 	db	104	;'h'
  4598  00FCAA  69                 	db	105	;'i'
  4599  00FCAB  74                 	db	116	;'t'
  4600  00FCAC  65                 	db	101	;'e'
  4601  00FCAD  0A                 	db	10
  4602  00FCAE  0D                 	db	13
  4603  00FCAF  00                 	db	0
  4604  00FCB0                     STR_129:
  4605  00FCB0  52                 	db	82	;'R'
  4606  00FCB1  45                 	db	69	;'E'
  4607  00FCB2  53                 	db	83	;'S'
  4608  00FCB3  45                 	db	69	;'E'
  4609  00FCB4  54                 	db	84	;'T'
  4610  00FCB5  20                 	db	32
  4611  00FCB6  49                 	db	73	;'I'
  4612  00FCB7  6E                 	db	110	;'n'
  4613  00FCB8  73                 	db	115	;'s'
  4614  00FCB9  74                 	db	116	;'t'
  4615  00FCBA  72                 	db	114	;'r'
  4616  00FCBB  75                 	db	117	;'u'
  4617  00FCBC  63                 	db	99	;'c'
  4618  00FCBD  74                 	db	116	;'t'
  4619  00FCBE  69                 	db	105	;'i'
  4620  00FCBF  6F                 	db	111	;'o'
  4621  00FCC0  6E                 	db	110	;'n'
  4622  00FCC1  20                 	db	32
  4623  00FCC2  45                 	db	69	;'E'
  4624  00FCC3  78                 	db	120	;'x'
  4625  00FCC4  65                 	db	101	;'e'
  4626  00FCC5  63                 	db	99	;'c'
  4627  00FCC6  75                 	db	117	;'u'
  4628  00FCC7  74                 	db	116	;'t'
  4629  00FCC8  65                 	db	101	;'e'
  4630  00FCC9  64                 	db	100	;'d'
  4631  00FCCA  00                 	db	0
  4632  00FCCB                     STR_86:
  4633  00FCCB  4D                 	db	77	;'M'
  4634  00FCCC  65                 	db	101	;'e'
  4635  00FCCD  61                 	db	97	;'a'
  4636  00FCCE  73                 	db	115	;'s'
  4637  00FCCF  75                 	db	117	;'u'
  4638  00FCD0  72                 	db	114	;'r'
  4639  00FCD1  65                 	db	101	;'e'
  4640  00FCD2  20                 	db	32
  4641  00FCD3  44                 	db	68	;'D'
  4642  00FCD4  65                 	db	101	;'e'
  4643  00FCD5  74                 	db	116	;'t'
  4644  00FCD6  65                 	db	101	;'e'
  4645  00FCD7  63                 	db	99	;'c'
  4646  00FCD8  74                 	db	116	;'t'
  4647  00FCD9  65                 	db	101	;'e'
  4648  00FCDA  64                 	db	100	;'d'
  4649  00FCDB  20                 	db	32
  4650  00FCDC  43                 	db	67	;'C'
  4651  00FCDD  75                 	db	117	;'u'
  4652  00FCDE  72                 	db	114	;'r'
  4653  00FCDF  72                 	db	114	;'r'
  4654  00FCE0  65                 	db	101	;'e'
  4655  00FCE1  6E                 	db	110	;'n'
  4656  00FCE2  74                 	db	116	;'t'
  4657  00FCE3  3F                 	db	63	;'?'
  4658  00FCE4  00                 	db	0
  4659  00FCE5                     STR_101:
  4660  00FCE5  4C                 	db	76	;'L'
  4661  00FCE6  6F                 	db	111	;'o'
  4662  00FCE7  61                 	db	97	;'a'
  4663  00FCE8  64                 	db	100	;'d'
  4664  00FCE9  20                 	db	32
  4665  00FCEA  68                 	db	104	;'h'
  4666  00FCEB  61                 	db	97	;'a'
  4667  00FCEC  73                 	db	115	;'s'
  4668  00FCED  20                 	db	32
  4669  00FCEE  62                 	db	98	;'b'
  4670  00FCEF  65                 	db	101	;'e'
  4671  00FCF0  65                 	db	101	;'e'
  4672  00FCF1  6E                 	db	110	;'n'
  4673  00FCF2  20                 	db	32
  4674  00FCF3  64                 	db	100	;'d'
  4675  00FCF4  69                 	db	105	;'i'
  4676  00FCF5  73                 	db	115	;'s'
  4677  00FCF6  61                 	db	97	;'a'
  4678  00FCF7  62                 	db	98	;'b'
  4679  00FCF8  6C                 	db	108	;'l'
  4680  00FCF9  65                 	db	101	;'e'
  4681  00FCFA  64                 	db	100	;'d'
  4682  00FCFB  0A                 	db	10
  4683  00FCFC  0D                 	db	13
  4684  00FCFD  00                 	db	0
  4685  00FCFE                     STR_102:
  4686  00FCFE  53                 	db	83	;'S'
  4687  00FCFF  65                 	db	101	;'e'
  4688  00FD00  74                 	db	116	;'t'
  4689  00FD01  20                 	db	32
  4690  00FD02  44                 	db	68	;'D'
  4691  00FD03  69                 	db	105	;'i'
  4692  00FD04  6D                 	db	109	;'m'
  4693  00FD05  6D                 	db	109	;'m'
  4694  00FD06  69                 	db	105	;'i'
  4695  00FD07  6E                 	db	110	;'n'
  4696  00FD08  67                 	db	103	;'g'
  4697  00FD09  20                 	db	32
  4698  00FD0A  50                 	db	80	;'P'
  4699  00FD0B  65                 	db	101	;'e'
  4700  00FD0C  72                 	db	114	;'r'
  4701  00FD0D  63                 	db	99	;'c'
  4702  00FD0E  65                 	db	101	;'e'
  4703  00FD0F  6E                 	db	110	;'n'
  4704  00FD10  74                 	db	116	;'t'
  4705  00FD11  61                 	db	97	;'a'
  4706  00FD12  67                 	db	103	;'g'
  4707  00FD13  65                 	db	101	;'e'
  4708  00FD14  3A                 	db	58	;':'
  4709  00FD15  20                 	db	32
  4710  00FD16  00                 	db	0
  4711  00FD17                     STR_70:
  4712  00FD17  4E                 	db	78	;'N'
  4713  00FD18  6F                 	db	111	;'o'
  4714  00FD19  20                 	db	32
  4715  00FD1A  41                 	db	65	;'A'
  4716  00FD1B  44                 	db	68	;'D'
  4717  00FD1C  43                 	db	67	;'C'
  4718  00FD1D  20                 	db	32
  4719  00FD1E  45                 	db	69	;'E'
  4720  00FD1F  72                 	db	114	;'r'
  4721  00FD20  72                 	db	114	;'r'
  4722  00FD21  6F                 	db	111	;'o'
  4723  00FD22  72                 	db	114	;'r'
  4724  00FD23  20                 	db	32
  4725  00FD24  64                 	db	100	;'d'
  4726  00FD25  65                 	db	101	;'e'
  4727  00FD26  74                 	db	116	;'t'
  4728  00FD27  65                 	db	101	;'e'
  4729  00FD28  63                 	db	99	;'c'
  4730  00FD29  74                 	db	116	;'t'
  4731  00FD2A  65                 	db	101	;'e'
  4732  00FD2B  64                 	db	100	;'d'
  4733  00FD2C  0A                 	db	10
  4734  00FD2D  0D                 	db	13
  4735  00FD2E  00                 	db	0
  4736  00FD2F                     STR_118:
  4737  00FD2F  45                 	db	69	;'E'
  4738  00FD30  72                 	db	114	;'r'
  4739  00FD31  72                 	db	114	;'r'
  4740  00FD32  6F                 	db	111	;'o'
  4741  00FD33  72                 	db	114	;'r'
  4742  00FD34  73                 	db	115	;'s'
  4743  00FD35  20                 	db	32
  4744  00FD36  61                 	db	97	;'a'
  4745  00FD37  70                 	db	112	;'p'
  4746  00FD38  70                 	db	112	;'p'
  4747  00FD39  65                 	db	101	;'e'
  4748  00FD3A  61                 	db	97	;'a'
  4749  00FD3B  72                 	db	114	;'r'
  4750  00FD3C  20                 	db	32
  4751  00FD3D  69                 	db	105	;'i'
  4752  00FD3E  6E                 	db	110	;'n'
  4753  00FD3F  20                 	db	32
  4754  00FD40  72                 	db	114	;'r'
  4755  00FD41  65                 	db	101	;'e'
  4756  00FD42  64                 	db	100	;'d'
  4757  00FD43  0A                 	db	10
  4758  00FD44  0D                 	db	13
  4759  00FD45  00                 	db	0
  4760  00FD46                     STR_131:
  4761  00FD46  53                 	db	83	;'S'
  4762  00FD47  74                 	db	116	;'t'
  4763  00FD48  61                 	db	97	;'a'
  4764  00FD49  63                 	db	99	;'c'
  4765  00FD4A  6B                 	db	107	;'k'
  4766  00FD4B  20                 	db	32
  4767  00FD4C  55                 	db	85	;'U'
  4768  00FD4D  6E                 	db	110	;'n'
  4769  00FD4E  64                 	db	100	;'d'
  4770  00FD4F  65                 	db	101	;'e'
  4771  00FD50  72                 	db	114	;'r'
  4772  00FD51  66                 	db	102	;'f'
  4773  00FD52  6C                 	db	108	;'l'
  4774  00FD53  6F                 	db	111	;'o'
  4775  00FD54  77                 	db	119	;'w'
  4776  00FD55  20                 	db	32
  4777  00FD56  52                 	db	82	;'R'
  4778  00FD57  65                 	db	101	;'e'
  4779  00FD58  73                 	db	115	;'s'
  4780  00FD59  65                 	db	101	;'e'
  4781  00FD5A  74                 	db	116	;'t'
  4782  00FD5B  00                 	db	0
  4783  00FD5C                     STR_67:
  4784  00FD5C  49                 	db	73	;'I'
  4785  00FD5D  6E                 	db	110	;'n'
  4786  00FD5E  74                 	db	116	;'t'
  4787  00FD5F  65                 	db	101	;'e'
  4788  00FD60  72                 	db	114	;'r'
  4789  00FD61  6E                 	db	110	;'n'
  4790  00FD62  61                 	db	97	;'a'
  4791  00FD63  6C                 	db	108	;'l'
  4792  00FD64  20                 	db	32
  4793  00FD65  46                 	db	70	;'F'
  4794  00FD66  56                 	db	86	;'V'
  4795  00FD67  52                 	db	82	;'R'
  4796  00FD68  20                 	db	32
  4797  00FD69  42                 	db	66	;'B'
  4798  00FD6A  75                 	db	117	;'u'
  4799  00FD6B  66                 	db	102	;'f'
  4800  00FD6C  66                 	db	102	;'f'
  4801  00FD6D  65                 	db	101	;'e'
  4802  00FD6E  72                 	db	114	;'r'
  4803  00FD6F  20                 	db	32
  4804  00FD70  31                 	db	49	;'1'
  4805  00FD71  00                 	db	0
  4806  00FD72                     STR_130:
  4807  00FD72  53                 	db	83	;'S'
  4808  00FD73  74                 	db	116	;'t'
  4809  00FD74  61                 	db	97	;'a'
  4810  00FD75  63                 	db	99	;'c'
  4811  00FD76  6B                 	db	107	;'k'
  4812  00FD77  20                 	db	32
  4813  00FD78  4F                 	db	79	;'O'
  4814  00FD79  76                 	db	118	;'v'
  4815  00FD7A  65                 	db	101	;'e'
  4816  00FD7B  72                 	db	114	;'r'
  4817  00FD7C  66                 	db	102	;'f'
  4818  00FD7D  6C                 	db	108	;'l'
  4819  00FD7E  6F                 	db	111	;'o'
  4820  00FD7F  77                 	db	119	;'w'
  4821  00FD80  20                 	db	32
  4822  00FD81  52                 	db	82	;'R'
  4823  00FD82  65                 	db	101	;'e'
  4824  00FD83  73                 	db	115	;'s'
  4825  00FD84  65                 	db	101	;'e'
  4826  00FD85  74                 	db	116	;'t'
  4827  00FD86  00                 	db	0
  4828  00FD87                     STR_72:
  4829  00FD87  43                 	db	67	;'C'
  4830  00FD88  6C                 	db	108	;'l'
  4831  00FD89  65                 	db	101	;'e'
  4832  00FD8A  61                 	db	97	;'a'
  4833  00FD8B  72                 	db	114	;'r'
  4834  00FD8C  69                 	db	105	;'i'
  4835  00FD8D  6E                 	db	110	;'n'
  4836  00FD8E  67                 	db	103	;'g'
  4837  00FD8F  20                 	db	32
  4838  00FD90  41                 	db	65	;'A'
  4839  00FD91  44                 	db	68	;'D'
  4840  00FD92  43                 	db	67	;'C'
  4841  00FD93  20                 	db	32
  4842  00FD94  45                 	db	69	;'E'
  4843  00FD95  72                 	db	114	;'r'
  4844  00FD96  72                 	db	114	;'r'
  4845  00FD97  6F                 	db	111	;'o'
  4846  00FD98  72                 	db	114	;'r'
  4847  00FD99  0A                 	db	10
  4848  00FD9A  0D                 	db	13
  4849  00FD9B  00                 	db	0
  4850  00FD9C                     STR_90:
  4851  00FD9C  4D                 	db	77	;'M'
  4852  00FD9D  65                 	db	101	;'e'
  4853  00FD9E  61                 	db	97	;'a'
  4854  00FD9F  73                 	db	115	;'s'
  4855  00FDA0  75                 	db	117	;'u'
  4856  00FDA1  72                 	db	114	;'r'
  4857  00FDA2  65                 	db	101	;'e'
  4858  00FDA3  20                 	db	32
  4859  00FDA4  52                 	db	82	;'R'
  4860  00FDA5  4D                 	db	77	;'M'
  4861  00FDA6  53                 	db	83	;'S'
  4862  00FDA7  20                 	db	32
  4863  00FDA8  56                 	db	86	;'V'
  4864  00FDA9  6F                 	db	111	;'o'
  4865  00FDAA  6C                 	db	108	;'l'
  4866  00FDAB  74                 	db	116	;'t'
  4867  00FDAC  61                 	db	97	;'a'
  4868  00FDAD  67                 	db	103	;'g'
  4869  00FDAE  65                 	db	101	;'e'
  4870  00FDAF  3F                 	db	63	;'?'
  4871  00FDB0  00                 	db	0
  4872  00FDB1                     STR_88:
  4873  00FDB1  4D                 	db	77	;'M'
  4874  00FDB2  65                 	db	101	;'e'
  4875  00FDB3  61                 	db	97	;'a'
  4876  00FDB4  73                 	db	115	;'s'
  4877  00FDB5  75                 	db	117	;'u'
  4878  00FDB6  72                 	db	114	;'r'
  4879  00FDB7  65                 	db	101	;'e'
  4880  00FDB8  20                 	db	32
  4881  00FDB9  52                 	db	82	;'R'
  4882  00FDBA  4D                 	db	77	;'M'
  4883  00FDBB  53                 	db	83	;'S'
  4884  00FDBC  20                 	db	32
  4885  00FDBD  43                 	db	67	;'C'
  4886  00FDBE  75                 	db	117	;'u'
  4887  00FDBF  72                 	db	114	;'r'
  4888  00FDC0  72                 	db	114	;'r'
  4889  00FDC1  65                 	db	101	;'e'
  4890  00FDC2  6E                 	db	110	;'n'
  4891  00FDC3  74                 	db	116	;'t'
  4892  00FDC4  3F                 	db	63	;'?'
  4893  00FDC5  00                 	db	0
  4894  00FDC6                     STR_126:
  4895  00FDC6  4D                 	db	77	;'M'
  4896  00FDC7  61                 	db	97	;'a'
  4897  00FDC8  73                 	db	115	;'s'
  4898  00FDC9  74                 	db	116	;'t'
  4899  00FDCA  65                 	db	101	;'e'
  4900  00FDCB  72                 	db	114	;'r'
  4901  00FDCC  20                 	db	32
  4902  00FDCD  43                 	db	67	;'C'
  4903  00FDCE  6C                 	db	108	;'l'
  4904  00FDCF  65                 	db	101	;'e'
  4905  00FDD0  61                 	db	97	;'a'
  4906  00FDD1  72                 	db	114	;'r'
  4907  00FDD2  20                 	db	32
  4908  00FDD3  52                 	db	82	;'R'
  4909  00FDD4  65                 	db	101	;'e'
  4910  00FDD5  73                 	db	115	;'s'
  4911  00FDD6  65                 	db	101	;'e'
  4912  00FDD7  74                 	db	116	;'t'
  4913  00FDD8  00                 	db	0
  4914  00FDD9                     STR_80:
  4915  00FDD9  4D                 	db	77	;'M'
  4916  00FDDA  65                 	db	101	;'e'
  4917  00FDDB  61                 	db	97	;'a'
  4918  00FDDC  73                 	db	115	;'s'
  4919  00FDDD  75                 	db	117	;'u'
  4920  00FDDE  72                 	db	114	;'r'
  4921  00FDDF  65                 	db	101	;'e'
  4922  00FDE0  20                 	db	32
  4923  00FDE1  44                 	db	68	;'D'
  4924  00FDE2  69                 	db	105	;'i'
  4925  00FDE3  65                 	db	101	;'e'
  4926  00FDE4  20                 	db	32
  4927  00FDE5  54                 	db	84	;'T'
  4928  00FDE6  65                 	db	101	;'e'
  4929  00FDE7  6D                 	db	109	;'m'
  4930  00FDE8  70                 	db	112	;'p'
  4931  00FDE9  3F                 	db	63	;'?'
  4932  00FDEA  00                 	db	0
  4933  00FDEB                     STR_134:
  4934  00FDEB  30                 	db	48	;'0'
  4935  00FDEC  31                 	db	49	;'1'
  4936  00FDED  32                 	db	50	;'2'
  4937  00FDEE  33                 	db	51	;'3'
  4938  00FDEF  34                 	db	52	;'4'
  4939  00FDF0  35                 	db	53	;'5'
  4940  00FDF1  36                 	db	54	;'6'
  4941  00FDF2  37                 	db	55	;'7'
  4942  00FDF3  38                 	db	56	;'8'
  4943  00FDF4  39                 	db	57	;'9'
  4944  00FDF5  41                 	db	65	;'A'
  4945  00FDF6  42                 	db	66	;'B'
  4946  00FDF7  43                 	db	67	;'C'
  4947  00FDF8  44                 	db	68	;'D'
  4948  00FDF9  45                 	db	69	;'E'
  4949  00FDFA  46                 	db	70	;'F'
  4950  00FDFB  00                 	db	0
  4951  00FDFC                     STR_51:
  4952  00FDFC  41                 	db	65	;'A'
  4953  00FDFD  43                 	db	67	;'C'
  4954  00FDFE  20                 	db	32
  4955  00FDFF  50                 	db	80	;'P'
  4956  00FE00  6F                 	db	111	;'o'
  4957  00FE01  77                 	db	119	;'w'
  4958  00FE02  65                 	db	101	;'e'
  4959  00FE03  72                 	db	114	;'r'
  4960  00FE04  20                 	db	32
  4961  00FE05  4D                 	db	77	;'M'
  4962  00FE06  65                 	db	101	;'e'
  4963  00FE07  74                 	db	116	;'t'
  4964  00FE08  65                 	db	101	;'e'
  4965  00FE09  72                 	db	114	;'r'
  4966  00FE0A  0A                 	db	10
  4967  00FE0B  0D                 	db	13
  4968  00FE0C  00                 	db	0
  4969  00FE0D                     STR_73:
  4970  00FE0D  56                 	db	86	;'V'
  4971  00FE0E  43                 	db	67	;'C'
  4972  00FE0F  43                 	db	67	;'C'
  4973  00FE10  20                 	db	32
  4974  00FE11  4F                 	db	79	;'O'
  4975  00FE12  76                 	db	118	;'v'
  4976  00FE13  65                 	db	101	;'e'
  4977  00FE14  72                 	db	114	;'r'
  4978  00FE15  76                 	db	118	;'v'
  4979  00FE16  6F                 	db	111	;'o'
  4980  00FE17  6C                 	db	108	;'l'
  4981  00FE18  74                 	db	116	;'t'
  4982  00FE19  61                 	db	97	;'a'
  4983  00FE1A  67                 	db	103	;'g'
  4984  00FE1B  65                 	db	101	;'e'
  4985  00FE1C  3F                 	db	63	;'?'
  4986  00FE1D  00                 	db	0
  4987  00FE1E                     STR_123:
  4988  00FE1E  55                 	db	85	;'U'
  4989  00FE1F  6E                 	db	110	;'n'
  4990  00FE20  64                 	db	100	;'d'
  4991  00FE21  65                 	db	101	;'e'
  4992  00FE22  66                 	db	102	;'f'
  4993  00FE23  69                 	db	105	;'i'
  4994  00FE24  6E                 	db	110	;'n'
  4995  00FE25  65                 	db	101	;'e'
  4996  00FE26  64                 	db	100	;'d'
  4997  00FE27  20                 	db	32
  4998  00FE28  52                 	db	82	;'R'
  4999  00FE29  65                 	db	101	;'e'
  5000  00FE2A  73                 	db	115	;'s'
  5001  00FE2B  65                 	db	101	;'e'
  5002  00FE2C  74                 	db	116	;'t'
  5003  00FE2D  00                 	db	0
  5004  00FE2E                     STR_125:
  5005  00FE2E  42                 	db	66	;'B'
  5006  00FE2F  72                 	db	114	;'r'
  5007  00FE30  6F                 	db	111	;'o'
  5008  00FE31  77                 	db	119	;'w'
  5009  00FE32  6E                 	db	110	;'n'
  5010  00FE33  20                 	db	32
  5011  00FE34  4F                 	db	79	;'O'
  5012  00FE35  75                 	db	117	;'u'
  5013  00FE36  74                 	db	116	;'t'
  5014  00FE37  20                 	db	32
  5015  00FE38  52                 	db	82	;'R'
  5016  00FE39  65                 	db	101	;'e'
  5017  00FE3A  73                 	db	115	;'s'
  5018  00FE3B  65                 	db	101	;'e'
  5019  00FE3C  74                 	db	116	;'t'
  5020  00FE3D  00                 	db	0
  5021  00FE3E                     STR_76:
  5022  00FE3E  4D                 	db	77	;'M'
  5023  00FE3F  65                 	db	101	;'e'
  5024  00FE40  61                 	db	97	;'a'
  5025  00FE41  73                 	db	115	;'s'
  5026  00FE42  75                 	db	117	;'u'
  5027  00FE43  72                 	db	114	;'r'
  5028  00FE44  65                 	db	101	;'e'
  5029  00FE45  20                 	db	32
  5030  00FE46  50                 	db	80	;'P'
  5031  00FE47  4F                 	db	79	;'O'
  5032  00FE48  53                 	db	83	;'S'
  5033  00FE49  33                 	db	51	;'3'
  5034  00FE4A  50                 	db	80	;'P'
  5035  00FE4B  33                 	db	51	;'3'
  5036  00FE4C  3F                 	db	63	;'?'
  5037  00FE4D  00                 	db	0
  5038  00FE4E                     STR_109:
  5039  00FE4E  44                 	db	68	;'D'
  5040  00FE4F  65                 	db	101	;'e'
  5041  00FE50  76                 	db	118	;'v'
  5042  00FE51  69                 	db	105	;'i'
  5043  00FE52  63                 	db	99	;'c'
  5044  00FE53  65                 	db	101	;'e'
  5045  00FE54  20                 	db	32
  5046  00FE55  4F                 	db	79	;'O'
  5047  00FE56  6E                 	db	110	;'n'
  5048  00FE57  20                 	db	32
  5049  00FE58  54                 	db	84	;'T'
  5050  00FE59  69                 	db	105	;'i'
  5051  00FE5A  6D                 	db	109	;'m'
  5052  00FE5B  65                 	db	101	;'e'
  5053  00FE5C  3F                 	db	63	;'?'
  5054  00FE5D  00                 	db	0
  5055  00FE5E                     STR_47:
  5056  00FE5E  43                 	db	67	;'C'
  5057  00FE5F  61                 	db	97	;'a'
  5058  00FE60  75                 	db	117	;'u'
  5059  00FE61  73                 	db	115	;'s'
  5060  00FE62  65                 	db	101	;'e'
  5061  00FE63  20                 	db	32
  5062  00FE64  6F                 	db	111	;'o'
  5063  00FE65  66                 	db	102	;'f'
  5064  00FE66  20                 	db	32
  5065  00FE67  52                 	db	82	;'R'
  5066  00FE68  65                 	db	101	;'e'
  5067  00FE69  73                 	db	115	;'s'
  5068  00FE6A  65                 	db	101	;'e'
  5069  00FE6B  74                 	db	116	;'t'
  5070  00FE6C  3F                 	db	63	;'?'
  5071  00FE6D  00                 	db	0
  5072  00FE6E                     STR_96:
  5073  00FE6E  44                 	db	68	;'D'
  5074  00FE6F  69                 	db	105	;'i'
  5075  00FE70  73                 	db	115	;'s'
  5076  00FE71  61                 	db	97	;'a'
  5077  00FE72  62                 	db	98	;'b'
  5078  00FE73  6C                 	db	108	;'l'
  5079  00FE74  65                 	db	101	;'e'
  5080  00FE75  20                 	db	32
  5081  00FE76  44                 	db	68	;'D'
  5082  00FE77  69                 	db	105	;'i'
  5083  00FE78  6D                 	db	109	;'m'
  5084  00FE79  6D                 	db	109	;'m'
  5085  00FE7A  69                 	db	105	;'i'
  5086  00FE7B  6E                 	db	110	;'n'
  5087  00FE7C  67                 	db	103	;'g'
  5088  00FE7D  00                 	db	0
  5089  00FE7E                     STR_71:
  5090  00FE7E  43                 	db	67	;'C'
  5091  00FE7F  6C                 	db	108	;'l'
  5092  00FE80  65                 	db	101	;'e'
  5093  00FE81  61                 	db	97	;'a'
  5094  00FE82  72                 	db	114	;'r'
  5095  00FE83  20                 	db	32
  5096  00FE84  41                 	db	65	;'A'
  5097  00FE85  44                 	db	68	;'D'
  5098  00FE86  43                 	db	67	;'C'
  5099  00FE87  20                 	db	32
  5100  00FE88  45                 	db	69	;'E'
  5101  00FE89  72                 	db	114	;'r'
  5102  00FE8A  72                 	db	114	;'r'
  5103  00FE8B  6F                 	db	111	;'o'
  5104  00FE8C  72                 	db	114	;'r'
  5105  00FE8D  00                 	db	0
  5106  00FE8E                     STR_124:
  5107  00FE8E  50                 	db	80	;'P'
  5108  00FE8F  6F                 	db	111	;'o'
  5109  00FE90  77                 	db	119	;'w'
  5110  00FE91  65                 	db	101	;'e'
  5111  00FE92  72                 	db	114	;'r'
  5112  00FE93  20                 	db	32
  5113  00FE94  4F                 	db	79	;'O'
  5114  00FE95  6E                 	db	110	;'n'
  5115  00FE96  20                 	db	32
  5116  00FE97  52                 	db	82	;'R'
  5117  00FE98  65                 	db	101	;'e'
  5118  00FE99  73                 	db	115	;'s'
  5119  00FE9A  65                 	db	101	;'e'
  5120  00FE9B  74                 	db	116	;'t'
  5121  00FE9C  00                 	db	0
  5122  00FE9D                     STR_78:
  5123  00FE9D  4D                 	db	77	;'M'
  5124  00FE9E  65                 	db	101	;'e'
  5125  00FE9F  61                 	db	97	;'a'
  5126  00FEA0  73                 	db	115	;'s'
  5127  00FEA1  75                 	db	117	;'u'
  5128  00FEA2  72                 	db	114	;'r'
  5129  00FEA3  65                 	db	101	;'e'
  5130  00FEA4  20                 	db	32
  5131  00FEA5  50                 	db	80	;'P'
  5132  00FEA6  4F                 	db	79	;'O'
  5133  00FEA7  53                 	db	83	;'S'
  5134  00FEA8  31                 	db	49	;'1'
  5135  00FEA9  32                 	db	50	;'2'
  5136  00FEAA  3F                 	db	63	;'?'
  5137  00FEAB  00                 	db	0
  5138  00FEAC                     STR_92:
  5139  00FEAC  4D                 	db	77	;'M'
  5140  00FEAD  65                 	db	101	;'e'
  5141  00FEAE  61                 	db	97	;'a'
  5142  00FEAF  73                 	db	115	;'s'
  5143  00FEB0  75                 	db	117	;'u'
  5144  00FEB1  72                 	db	114	;'r'
  5145  00FEB2  65                 	db	101	;'e'
  5146  00FEB3  20                 	db	32
  5147  00FEB4  50                 	db	80	;'P'
  5148  00FEB5  6F                 	db	111	;'o'
  5149  00FEB6  77                 	db	119	;'w'
  5150  00FEB7  65                 	db	101	;'e'
  5151  00FEB8  72                 	db	114	;'r'
  5152  00FEB9  3F                 	db	63	;'?'
  5153  00FEBA  00                 	db	0
  5154  00FEBB                     STR_94:
  5155  00FEBB  45                 	db	69	;'E'
  5156  00FEBC  6E                 	db	110	;'n'
  5157  00FEBD  61                 	db	97	;'a'
  5158  00FEBE  62                 	db	98	;'b'
  5159  00FEBF  6C                 	db	108	;'l'
  5160  00FEC0  65                 	db	101	;'e'
  5161  00FEC1  20                 	db	32
  5162  00FEC2  44                 	db	68	;'D'
  5163  00FEC3  69                 	db	105	;'i'
  5164  00FEC4  6D                 	db	109	;'m'
  5165  00FEC5  6D                 	db	109	;'m'
  5166  00FEC6  69                 	db	105	;'i'
  5167  00FEC7  6E                 	db	110	;'n'
  5168  00FEC8  67                 	db	103	;'g'
  5169  00FEC9  00                 	db	0
  5170  00FECA                     STR_66:
  5171  00FECA  49                 	db	73	;'I'
  5172  00FECB  6E                 	db	110	;'n'
  5173  00FECC  74                 	db	116	;'t'
  5174  00FECD  65                 	db	101	;'e'
  5175  00FECE  72                 	db	114	;'r'
  5176  00FECF  6E                 	db	110	;'n'
  5177  00FED0  61                 	db	97	;'a'
  5178  00FED1  6C                 	db	108	;'l'
  5179  00FED2  20                 	db	32
  5180  00FED3  44                 	db	68	;'D'
  5181  00FED4  41                 	db	65	;'A'
  5182  00FED5  43                 	db	67	;'C'
  5183  00FED6  31                 	db	49	;'1'
  5184  00FED7  00                 	db	0
  5185  00FED8                     STR_84:
  5186  00FED8  4D                 	db	77	;'M'
  5187  00FED9  65                 	db	101	;'e'
  5188  00FEDA  61                 	db	97	;'a'
  5189  00FEDB  73                 	db	115	;'s'
  5190  00FEDC  75                 	db	117	;'u'
  5191  00FEDD  72                 	db	114	;'r'
  5192  00FEDE  65                 	db	101	;'e'
  5193  00FEDF  20                 	db	32
  5194  00FEE0  41                 	db	65	;'A'
  5195  00FEE1  56                 	db	86	;'V'
  5196  00FEE2  53                 	db	83	;'S'
  5197  00FEE3  53                 	db	83	;'S'
  5198  00FEE4  3F                 	db	63	;'?'
  5199  00FEE5  00                 	db	0
  5200  00FEE6                     STR_111:
  5201  00FEE6  4C                 	db	76	;'L'
  5202  00FEE7  6F                 	db	111	;'o'
  5203  00FEE8  61                 	db	97	;'a'
  5204  00FEE9  64                 	db	100	;'d'
  5205  00FEEA  20                 	db	32
  5206  00FEEB  4F                 	db	79	;'O'
  5207  00FEEC  6E                 	db	110	;'n'
  5208  00FEED  20                 	db	32
  5209  00FEEE  54                 	db	84	;'T'
  5210  00FEEF  69                 	db	105	;'i'
  5211  00FEF0  6D                 	db	109	;'m'
  5212  00FEF1  65                 	db	101	;'e'
  5213  00FEF2  3F                 	db	63	;'?'
  5214  00FEF3  00                 	db	0
  5215  00FEF4                     STR_64:
  5216  00FEF4  49                 	db	73	;'I'
  5217  00FEF5  6E                 	db	110	;'n'
  5218  00FEF6  74                 	db	116	;'t'
  5219  00FEF7  65                 	db	101	;'e'
  5220  00FEF8  72                 	db	114	;'r'
  5221  00FEF9  6E                 	db	110	;'n'
  5222  00FEFA  61                 	db	97	;'a'
  5223  00FEFB  6C                 	db	108	;'l'
  5224  00FEFC  20                 	db	32
  5225  00FEFD  41                 	db	65	;'A'
  5226  00FEFE  56                 	db	86	;'V'
  5227  00FEFF  53                 	db	83	;'S'
  5228  00FF00  53                 	db	83	;'S'
  5229  00FF01  00                 	db	0
  5230  00FF02                     STR_65:
  5231  00FF02  49                 	db	73	;'I'
  5232  00FF03  6E                 	db	110	;'n'
  5233  00FF04  74                 	db	116	;'t'
  5234  00FF05  65                 	db	101	;'e'
  5235  00FF06  72                 	db	114	;'r'
  5236  00FF07  6E                 	db	110	;'n'
  5237  00FF08  61                 	db	97	;'a'
  5238  00FF09  6C                 	db	108	;'l'
  5239  00FF0A  20                 	db	32
  5240  00FF0B  54                 	db	84	;'T'
  5241  00FF0C  65                 	db	101	;'e'
  5242  00FF0D  6D                 	db	109	;'m'
  5243  00FF0E  70                 	db	112	;'p'
  5244  00FF0F  00                 	db	0
  5245  00FF10                     STR_121:
  5246  00FF10  50                 	db	80	;'P'
  5247  00FF11  49                 	db	73	;'I'
  5248  00FF12  43                 	db	67	;'C'
  5249  00FF13  31                 	db	49	;'1'
  5250  00FF14  38                 	db	56	;'8'
  5251  00FF15  4C                 	db	76	;'L'
  5252  00FF16  46                 	db	70	;'F'
  5253  00FF17  36                 	db	54	;'6'
  5254  00FF18  37                 	db	55	;'7'
  5255  00FF19  4B                 	db	75	;'K'
  5256  00FF1A  34                 	db	52	;'4'
  5257  00FF1B  30                 	db	48	;'0'
  5258  00FF1C  00                 	db	0
  5259  00FF1D                     STR_55:
  5260  00FF1D  52                 	db	82	;'R'
  5261  00FF1E  65                 	db	101	;'e'
  5262  00FF1F  76                 	db	118	;'v'
  5263  00FF20  69                 	db	105	;'i'
  5264  00FF21  73                 	db	115	;'s'
  5265  00FF22  69                 	db	105	;'i'
  5266  00FF23  6F                 	db	111	;'o'
  5267  00FF24  6E                 	db	110	;'n'
  5268  00FF25  20                 	db	32
  5269  00FF26  49                 	db	73	;'I'
  5270  00FF27  44                 	db	68	;'D'
  5271  00FF28  3F                 	db	63	;'?'
  5272  00FF29  00                 	db	0
  5273  00FF2A                     STR_82:
  5274  00FF2A  4D                 	db	77	;'M'
  5275  00FF2B  65                 	db	101	;'e'
  5276  00FF2C  61                 	db	97	;'a'
  5277  00FF2D  73                 	db	115	;'s'
  5278  00FF2E  75                 	db	117	;'u'
  5279  00FF2F  72                 	db	114	;'r'
  5280  00FF30  65                 	db	101	;'e'
  5281  00FF31  20                 	db	32
  5282  00FF32  46                 	db	70	;'F'
  5283  00FF33  56                 	db	86	;'V'
  5284  00FF34  52                 	db	82	;'R'
  5285  00FF35  3F                 	db	63	;'?'
  5286  00FF36  00                 	db	0
  5287  00FF37                     STR_100:
  5288  00FF37  44                 	db	68	;'D'
  5289  00FF38  69                 	db	105	;'i'
  5290  00FF39  73                 	db	115	;'s'
  5291  00FF3A  61                 	db	97	;'a'
  5292  00FF3B  62                 	db	98	;'b'
  5293  00FF3C  6C                 	db	108	;'l'
  5294  00FF3D  65                 	db	101	;'e'
  5295  00FF3E  20                 	db	32
  5296  00FF3F  4C                 	db	76	;'L'
  5297  00FF40  6F                 	db	111	;'o'
  5298  00FF41  61                 	db	97	;'a'
  5299  00FF42  64                 	db	100	;'d'
  5300  00FF43  00                 	db	0
  5301  00FF44                     STR_120:
  5302  00FF44  50                 	db	80	;'P'
  5303  00FF45  49                 	db	73	;'I'
  5304  00FF46  43                 	db	67	;'C'
  5305  00FF47  31                 	db	49	;'1'
  5306  00FF48  38                 	db	56	;'8'
  5307  00FF49  46                 	db	70	;'F'
  5308  00FF4A  36                 	db	54	;'6'
  5309  00FF4B  37                 	db	55	;'7'
  5310  00FF4C  4B                 	db	75	;'K'
  5311  00FF4D  34                 	db	52	;'4'
  5312  00FF4E  30                 	db	48	;'0'
  5313  00FF4F  00                 	db	0
  5314  00FF50                     STR_98:
  5315  00FF50  45                 	db	69	;'E'
  5316  00FF51  6E                 	db	110	;'n'
  5317  00FF52  61                 	db	97	;'a'
  5318  00FF53  62                 	db	98	;'b'
  5319  00FF54  6C                 	db	108	;'l'
  5320  00FF55  65                 	db	101	;'e'
  5321  00FF56  20                 	db	32
  5322  00FF57  4C                 	db	76	;'L'
  5323  00FF58  6F                 	db	111	;'o'
  5324  00FF59  61                 	db	97	;'a'
  5325  00FF5A  64                 	db	100	;'d'
  5326  00FF5B  00                 	db	0
  5327  00FF5C                     STR_53:
  5328  00FF5C  44                 	db	68	;'D'
  5329  00FF5D  65                 	db	101	;'e'
  5330  00FF5E  76                 	db	118	;'v'
  5331  00FF5F  69                 	db	105	;'i'
  5332  00FF60  63                 	db	99	;'c'
  5333  00FF61  65                 	db	101	;'e'
  5334  00FF62  20                 	db	32
  5335  00FF63  49                 	db	73	;'I'
  5336  00FF64  44                 	db	68	;'D'
  5337  00FF65  3F                 	db	63	;'?'
  5338  00FF66  00                 	db	0
  5339  00FF67                     STR_60:
  5340  00FF67  41                 	db	65	;'A'
  5341  00FF68  44                 	db	68	;'D'
  5342  00FF69  43                 	db	67	;'C'
  5343  00FF6A  20                 	db	32
  5344  00FF6B  45                 	db	69	;'E'
  5345  00FF6C  72                 	db	114	;'r'
  5346  00FF6D  72                 	db	114	;'r'
  5347  00FF6E  6F                 	db	111	;'o'
  5348  00FF6F  72                 	db	114	;'r'
  5349  00FF70  3F                 	db	63	;'?'
  5350  00FF71  00                 	db	0
  5351  00FF72                     STR_57:
  5352  00FF72  55                 	db	85	;'U'
  5353  00FF73  73                 	db	115	;'s'
  5354  00FF74  65                 	db	101	;'e'
  5355  00FF75  72                 	db	114	;'r'
  5356  00FF76  20                 	db	32
  5357  00FF77  49                 	db	73	;'I'
  5358  00FF78  44                 	db	68	;'D'
  5359  00FF79  73                 	db	115	;'s'
  5360  00FF7A  3F                 	db	63	;'?'
  5361  00FF7B  00                 	db	0
  5362  00FF7C                     STR_68:
  5363  00FF7C  55                 	db	85	;'U'
  5364  00FF7D  6E                 	db	110	;'n'
  5365  00FF7E  64                 	db	100	;'d'
  5366  00FF7F  65                 	db	101	;'e'
  5367  00FF80  66                 	db	102	;'f'
  5368  00FF81  69                 	db	105	;'i'
  5369  00FF82  6E                 	db	110	;'n'
  5370  00FF83  65                 	db	101	;'e'
  5371  00FF84  64                 	db	100	;'d'
  5372  00FF85  00                 	db	0
  5373  00FF86                     STR_133:
  5374  00FF86  28                 	db	40
  5375  00FF87  6E                 	db	110	;'n'
  5376  00FF88  75                 	db	117	;'u'
  5377  00FF89  6C                 	db	108	;'l'
  5378  00FF8A  6C                 	db	108	;'l'
  5379  00FF8B  29                 	db	41
  5380  00FF8C  00                 	db	0
  5381  00FF8D                     STR_63:
  5382  00FF8D  50                 	db	80	;'P'
  5383  00FF8E  4F                 	db	79	;'O'
  5384  00FF8F  53                 	db	83	;'S'
  5385  00FF90  33                 	db	51	;'3'
  5386  00FF91  50                 	db	80	;'P'
  5387  00FF92  33                 	db	51	;'3'
  5388  00FF93  00                 	db	0
  5389  00FF94                     STR_62:
  5390  00FF94  50                 	db	80	;'P'
  5391  00FF95  4F                 	db	79	;'O'
  5392  00FF96  53                 	db	83	;'S'
  5393  00FF97  31                 	db	49	;'1'
  5394  00FF98  32                 	db	50	;'2'
  5395  00FF99  00                 	db	0
  5396  00FF9A                     STR_49:
  5397  00FF9A  2A                 	db	42
  5398  00FF9B  49                 	db	73	;'I'
  5399  00FF9C  44                 	db	68	;'D'
  5400  00FF9D  4E                 	db	78	;'N'
  5401  00FF9E  3F                 	db	63	;'?'
  5402  00FF9F  00                 	db	0
  5403  00FFA0                     STR_44:
  5404  00FFA0  43                 	db	67	;'C'
  5405  00FFA1  6C                 	db	108	;'l'
  5406  00FFA2  65                 	db	101	;'e'
  5407  00FFA3  61                 	db	97	;'a'
  5408  00FFA4  72                 	db	114	;'r'
  5409  00FFA5  00                 	db	0
  5410  00FFA6                     STR_61:
  5411  00FFA6  49                 	db	73	;'I'
  5412  00FFA7  53                 	db	83	;'S'
  5413  00FFA8  4E                 	db	78	;'N'
  5414  00FFA9  53                 	db	83	;'S'
  5415  00FFAA  00                 	db	0
  5416  00FFAB                     STR_113:
  5417  00FFAB  48                 	db	72	;'H'
  5418  00FFAC  65                 	db	101	;'e'
  5419  00FFAD  6C                 	db	108	;'l'
  5420  00FFAE  70                 	db	112	;'p'
  5421  00FFAF  00                 	db	0
  5422  00FFB0                     STR_2:
  5423  00FFB0  1B                 	db	27
  5424  00FFB1  5B                 	db	91	;'['
  5425  00FFB2  32                 	db	50	;'2'
  5426  00FFB3  4A                 	db	74	;'J'
  5427  00FFB4  00                 	db	0
  5428  00FFB5                     STR_50:
  5429  00FFB5  49                 	db	73	;'I'
  5430  00FFB6  44                 	db	68	;'D'
  5431  00FFB7  4E                 	db	78	;'N'
  5432  00FFB8  00                 	db	0
  5433  00FFB9                     STR_3:
  5434  00FFB9  1B                 	db	27
  5435  00FFBA  5B                 	db	91	;'['
  5436  00FFBB  48                 	db	72	;'H'
  5437  00FFBC  00                 	db	0
  5438  00FFBD  1B                 	db	27
  5439  00FFBE  5B                 	db	91	;'['
  5440  00FFBF  73                 	db	115	;'s'
  5441  00FFC0  00                 	db	0
  5442  00FFC1  1B                 	db	27
  5443  00FFC2  5B                 	db	91	;'['
  5444  00FFC3  75                 	db	117	;'u'
  5445  00FFC4  00                 	db	0
  5446  00FFC5                     STR_1:
  5447  00FFC5  1B                 	db	27
  5448  00FFC6  5B                 	db	91	;'['
  5449  00FFC7  4B                 	db	75	;'K'
  5450  00FFC8  00                 	db	0
  5451  00FFC9                     STR_20:
  5452  00FFC9  33                 	db	51	;'3'
  5453  00FFCA  30                 	db	48	;'0'
  5454  00FFCB  00                 	db	0
  5455  00FFCC                     STR_21:
  5456  00FFCC  33                 	db	51	;'3'
  5457  00FFCD  31                 	db	49	;'1'
  5458  00FFCE  00                 	db	0
  5459  00FFCF                     STR_31:
  5460  00FFCF  34                 	db	52	;'4'
  5461  00FFD0  31                 	db	49	;'1'
  5462  00FFD1  00                 	db	0
  5463  00FFD2                     STR_22:
  5464  00FFD2  33                 	db	51	;'3'
  5465  00FFD3  32                 	db	50	;'2'
  5466  00FFD4  00                 	db	0
  5467  00FFD5                     STR_32:
  5468  00FFD5  34                 	db	52	;'4'
  5469  00FFD6  32                 	db	50	;'2'
  5470  00FFD7  00                 	db	0
  5471  00FFD8                     STR_23:
  5472  00FFD8  33                 	db	51	;'3'
  5473  00FFD9  33                 	db	51	;'3'
  5474  00FFDA  00                 	db	0
  5475  00FFDB                     STR_33:
  5476  00FFDB  34                 	db	52	;'4'
  5477  00FFDC  33                 	db	51	;'3'
  5478  00FFDD  00                 	db	0
  5479  00FFDE                     STR_24:
  5480  00FFDE  33                 	db	51	;'3'
  5481  00FFDF  34                 	db	52	;'4'
  5482  00FFE0  00                 	db	0
  5483  00FFE1                     STR_34:
  5484  00FFE1  34                 	db	52	;'4'
  5485  00FFE2  34                 	db	52	;'4'
  5486  00FFE3  00                 	db	0
  5487  00FFE4                     STR_25:
  5488  00FFE4  33                 	db	51	;'3'
  5489  00FFE5  35                 	db	53	;'5'
  5490  00FFE6  00                 	db	0
  5491  00FFE7                     STR_35:
  5492  00FFE7  34                 	db	52	;'4'
  5493  00FFE8  35                 	db	53	;'5'
  5494  00FFE9  00                 	db	0
  5495  00FFEA                     STR_26:
  5496  00FFEA  33                 	db	51	;'3'
  5497  00FFEB  36                 	db	54	;'6'
  5498  00FFEC  00                 	db	0
  5499  00FFED                     STR_36:
  5500  00FFED  34                 	db	52	;'4'
  5501  00FFEE  36                 	db	54	;'6'
  5502  00FFEF  00                 	db	0
  5503  00FFF0                     STR_27:
  5504  00FFF0  33                 	db	51	;'3'
  5505  00FFF1  37                 	db	55	;'7'
  5506  00FFF2  00                 	db	0
  5507  00FFF3                     STR_37:
  5508  00FFF3  34                 	db	52	;'4'
  5509  00FFF4  37                 	db	55	;'7'
  5510  00FFF5  00                 	db	0
  5511  00FFF6                     STR_11:
  5512  00FFF6  1B                 	db	27
  5513  00FFF7  5B                 	db	91	;'['
  5514  00FFF8  00                 	db	0
  5515  00FFF9                     STR_17:
  5516  00FFF9  38                 	db	56	;'8'
  5517  00FFFA  00                 	db	0
  5518  00FFFB                     STR_19:
  5519  00FFFB  3B                 	db	59	;';'
  5520  00FFFC  00                 	db	0
  5521  00FFFD                     STR_39:
  5522  00FFFD  6D                 	db	109	;'m'
  5523  00FFFE  00                 	db	0
  5524  0000                     
  5525                           ; #config settings
  5526  00FFFF  00                 	db	0	; dummy byte at the end
  5527  0000                     
  5528                           	psect	nvBANK1
  5529  0001D5                     __pnvBANK1:
  5530                           	opt stack 0
  5531  0001D5                     _reset_cause:
  5532                           	opt stack 0
  5533  0001D5                     	ds	1
  5534  0000                     _HLVDCON0bits	set	3778
  5535  0000                     _HLVDCON0	set	3778
  5536  0000                     _HLVDCON1	set	3779
  5537  0000                     _PIR8bits	set	3643
  5538  0000                     _FVRCONbits	set	3780
  5539  0000                     _FVRCON	set	3780
  5540  0000                     _RC2REG	set	3825
  5541  0000                     _RC2STAbits	set	3829
  5542  0000                     _TX2REG	set	3826
  5543  0000                     _TX2STAbits	set	3830
  5544  0000                     _SP2BRGH	set	3828
  5545  0000                     _SP2BRGL	set	3827
  5546  0000                     _TX2STA	set	3830
  5547  0000                     _RC2STA	set	3829
  5548  0000                     _BAUD2CON	set	3831
  5549  0000                     _PIR2bits	set	3637
  5550  0000                     _PIE2bits	set	3627
  5551  0000                     _PIR1bits	set	3636
  5552  0000                     _PIE1bits	set	3626
  5553  0000                     _PIR5bits	set	3640
  5554  0000                     _PIE5bits	set	3630
  5555  0000                     _PIR3bits	set	3638
  5556  0000                     _PIE3bits	set	3628
  5557  0000                     _IPR2bits	set	3617
  5558  0000                     _IPR1bits	set	3616
  5559  0000                     _IPR5bits	set	3620
  5560  0000                     _IPR3bits	set	3618
  5561  0000                     _RX2PPS	set	3601
  5562  0000                     _RG7PPS	set	3721
  5563  0000                     _SLRCONH	set	3774
  5564  0000                     _SLRCONG	set	3769
  5565  0000                     _SLRCONF	set	3761
  5566  0000                     _SLRCONE	set	3756
  5567  0000                     _SLRCOND	set	3748
  5568  0000                     _SLRCONC	set	3743
  5569  0000                     _SLRCONB	set	3735
  5570  0000                     _SLRCONA	set	3727
  5571  0000                     _ODCOND	set	3749
  5572  0000                     _ODCONC	set	3744
  5573  0000                     _ODCONH	set	3775
  5574  0000                     _ODCONB	set	3736
  5575  0000                     _ODCONG	set	3770
  5576  0000                     _ODCONA	set	3728
  5577  0000                     _ODCONF	set	3762
  5578  0000                     _ODCONE	set	3757
  5579  0000                     _WPUH	set	3776
  5580  0000                     _WPUC	set	3745
  5581  0000                     _WPUA	set	3729
  5582  0000                     _WPUG	set	3771
  5583  0000                     _WPUB	set	3737
  5584  0000                     _WPUE	set	3758
  5585  0000                     _WPUF	set	3763
  5586  0000                     _WPUD	set	3750
  5587  0000                     _ANSELA	set	3730
  5588  0000                     _ANSELF	set	3764
  5589  0000                     _ANSELG	set	3772
  5590  0000                     _ANSELE	set	3759
  5591  0000                     _ANSELB	set	3738
  5592  0000                     _ANSELD	set	3751
  5593  0000                     _PMD5	set	3665
  5594  0000                     _PMD4	set	3664
  5595  0000                     _PMD3	set	3663
  5596  0000                     _PMD2	set	3662
  5597  0000                     _PMD1	set	3661
  5598  0000                     _PMD0	set	3660
  5599  0000                     _OSCTUNE	set	3656
  5600  0000                     _OSCFRQ	set	3657
  5601  0000                     _OSCEN	set	3655
  5602  0000                     _OSCCON3	set	3653
  5603  0000                     _OSCCON1	set	3651
  5604  0000                     _PLLR	set	29232
  5605  0000                     _T7GCONbits	set	3889
  5606  0000                     _T7CONbits	set	3888
  5607  0000                     _T7CON	set	3888
  5608  0000                     _TMR7L	set	3886
  5609  0000                     _TMR7H	set	3887
  5610  0000                     _T7CLK	set	3891
  5611  0000                     _T7GATE	set	3890
  5612  0000                     _T7GCON	set	3889
  5613  0000                     _ADCON1bits	set	3929
  5614  0000                     _ADCON2bits	set	3930
  5615  0000                     _ADPRE	set	3934
  5616  0000                     _ADCON3bits	set	3931
  5617  0000                     _ADACQ	set	3932
  5618  0000                     _ADCLK	set	3927
  5619  0000                     _ADACT	set	3926
  5620  0000                     _ADREF	set	3928
  5621  0000                     _ADCON3	set	3931
  5622  0000                     _ADCON2	set	3930
  5623  0000                     _ADCON1	set	3929
  5624  0000                     _ADCAP	set	3933
  5625  0000                     _ADPCH	set	3935
  5626  0000                     _PCON0bits	set	4055
  5627  0000                     _LATGbits	set	3967
  5628  0000                     _NVMDAT	set	3958
  5629  0000                     _NVMADRL	set	3956
  5630  0000                     _NVMADRH	set	3957
  5631  0000                     _NVMCON2	set	3960
  5632  0000                     _TABLAT	set	4085
  5633  0000                     _TBLPTRL	set	4086
  5634  0000                     _TBLPTRH	set	4087
  5635  0000                     _TBLPTRU	set	4088
  5636  0000                     _NVMCON1bits	set	3959
  5637  0000                     _T5GCONbits	set	4036
  5638  0000                     _T5CONbits	set	4035
  5639  0000                     _T5CON	set	4035
  5640  0000                     _TMR5L	set	4033
  5641  0000                     _TMR5H	set	4034
  5642  0000                     _T5CLK	set	4038
  5643  0000                     _T5GATE	set	4037
  5644  0000                     _T5GCON	set	4036
  5645  0000                     _ADERRL	set	3950
  5646  0000                     _ADERRH	set	3951
  5647  0000                     _ADPREVL	set	3937
  5648  0000                     _ADPREVH	set	3938
  5649  0000                     _ADFLTRL	set	3954
  5650  0000                     _ADFLTRH	set	3955
  5651  0000                     _ADSTATbits	set	3941
  5652  0000                     _ADACCL	set	3952
  5653  0000                     _ADACCH	set	3953
  5654  0000                     _ADCNT	set	3943
  5655  0000                     _ADRESL	set	3939
  5656  0000                     _ADRESH	set	3940
  5657  0000                     _ADCON0bits	set	3936
  5658  0000                     _ADCON0	set	3936
  5659  0000                     _ADSTAT	set	3941
  5660  0000                     _ADRPT	set	3942
  5661  0000                     _ADSTPTH	set	3945
  5662  0000                     _ADSTPTL	set	3944
  5663  0000                     _ADUTHH	set	3949
  5664  0000                     _ADUTHL	set	3948
  5665  0000                     _ADLTHH	set	3947
  5666  0000                     _ADLTHL	set	3946
  5667  0000                     _LATFbits	set	3966
  5668  0000                     _PR6	set	4016
  5669  0000                     _TMR6	set	4015
  5670  0000                     _T6CONbits	set	4017
  5671  0000                     _T6RSTbits	set	4020
  5672  0000                     _T6HLTbits	set	4018
  5673  0000                     _T6CON	set	4017
  5674  0000                     _T6TMR	set	4015
  5675  0000                     _T6PR	set	4016
  5676  0000                     _T6RST	set	4020
  5677  0000                     _T6HLT	set	4018
  5678  0000                     _T6CLKCON	set	4019
  5679  0000                     _INTCONbits	set	4082
  5680  0000                     _TRISD	set	3972
  5681  0000                     _TRISC	set	3971
  5682  0000                     _TRISH	set	3976
  5683  0000                     _TRISB	set	3970
  5684  0000                     _TRISG	set	3975
  5685  0000                     _TRISA	set	3969
  5686  0000                     _TRISF	set	3974
  5687  0000                     _TRISE	set	3973
  5688  0000                     _LATH	set	3968
  5689  0000                     _LATC	set	3963
  5690  0000                     _LATG	set	3967
  5691  0000                     _LATB	set	3962
  5692  0000                     _LATF	set	3966
  5693  0000                     _LATA	set	3961
  5694  0000                     _LATD	set	3964
  5695  0000                     _LATE	set	3965
  5696                           
  5697                           	psect	cinit
  5698  015E78                     __pcinit:
  5699                           	opt stack 0
  5700  015E78                     start_initialization:
  5701                           	opt stack 0
  5702  015E78                     __initialization:
  5703                           	opt stack 0
  5704                           
  5705                           ; Initialize objects allocated to BANK2 (24 bytes)
  5706                           ; load TBLPTR registers with __pidataBANK2
  5707  015E78  0E8A               	movlw	low __pidataBANK2
  5708  015E7A  6EF6               	movwf	tblptrl,c
  5709  015E7C  0E6D               	movlw	high __pidataBANK2
  5710  015E7E  6EF7               	movwf	tblptrh,c
  5711  015E80  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  5712  015E82  6EF8               	movwf	tblptru,c
  5713  015E84  EE02  F0A2         	lfsr	0,__pdataBANK2
  5714  015E88  EE10 F018          	lfsr	1,24
  5715  015E8C                     copy_data0:
  5716  015E8C  0009               	tblrd		*+
  5717  015E8E  CFF5 FFEE          	movff	tablat,postinc0
  5718  015E92  50E5               	movf	postdec1,w,c
  5719  015E94  50E1               	movf	fsr1l,w,c
  5720  015E96  E1FA               	bnz	copy_data0
  5721                           
  5722                           ; Initialize objects allocated to BANK0 (14 bytes)
  5723                           ; load TBLPTR registers with __pidataBANK0
  5724  015E98  0E1C               	movlw	low __pidataBANK0
  5725  015E9A  6EF6               	movwf	tblptrl,c
  5726  015E9C  0E6E               	movlw	high __pidataBANK0
  5727  015E9E  6EF7               	movwf	tblptrh,c
  5728  015EA0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  5729  015EA2  6EF8               	movwf	tblptru,c
  5730  015EA4  EE00  F0F0         	lfsr	0,__pdataBANK0
  5731  015EA8  EE10 F00E          	lfsr	1,14
  5732  015EAC                     copy_data1:
  5733  015EAC  0009               	tblrd		*+
  5734  015EAE  CFF5 FFEE          	movff	tablat,postinc0
  5735  015EB2  50E5               	movf	postdec1,w,c
  5736  015EB4  50E1               	movf	fsr1l,w,c
  5737  015EB6  E1FA               	bnz	copy_data1
  5738                           
  5739                           ; Clear objects allocated to BANK3 (128 bytes)
  5740  015EB8  EE03  F000         	lfsr	0,__pbssBANK3
  5741  015EBC  0E80               	movlw	128
  5742  015EBE                     clear_0:
  5743  015EBE  6AEE               	clrf	postinc0,c
  5744  015EC0  06E8               	decf	wreg,f,c
  5745  015EC2  E1FD               	bnz	clear_0
  5746                           
  5747                           ; Clear objects allocated to BANK2 (128 bytes)
  5748  015EC4  EE02  F000         	lfsr	0,__pbssBANK2
  5749  015EC8  0E80               	movlw	128
  5750  015ECA                     clear_1:
  5751  015ECA  6AEE               	clrf	postinc0,c
  5752  015ECC  06E8               	decf	wreg,f,c
  5753  015ECE  E1FD               	bnz	clear_1
  5754                           
  5755                           ; Clear objects allocated to BANK1 (38 bytes)
  5756  015ED0  EE01  F0AF         	lfsr	0,__pbssBANK1
  5757  015ED4  0E26               	movlw	38
  5758  015ED6                     clear_2:
  5759  015ED6  6AEE               	clrf	postinc0,c
  5760  015ED8  06E8               	decf	wreg,f,c
  5761  015EDA  E1FD               	bnz	clear_2
  5762                           
  5763                           ; Clear objects allocated to BITBANK0 (1 bytes)
  5764  015EDC  0100               	movlb	0
  5765  015EDE  6BFE               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  5766                           
  5767                           ; Clear objects allocated to BANK0 (40 bytes)
  5768  015EE0  EE00  F0C8         	lfsr	0,__pbssBANK0
  5769  015EE4  0E28               	movlw	40
  5770  015EE6                     clear_3:
  5771  015EE6  6AEE               	clrf	postinc0,c
  5772  015EE8  06E8               	decf	wreg,f,c
  5773  015EEA  E1FD               	bnz	clear_3
  5774                           
  5775                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  5776  015EEC  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  5777  015EEE                     end_of_initialization:
  5778                           	opt stack 0
  5779  015EEE                     __end_of__initialization:
  5780                           	opt stack 0
  5781  015EEE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5782  015EF0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5783  015EF2  0100               	movlb	0
  5784  015EF4  EF7C  F0AF         	goto	_main	;jump to C main() function
  5785                           tblptru	equ	0xFF8
  5786                           tblptrh	equ	0xFF7
  5787                           tblptrl	equ	0xFF6
  5788                           tablat	equ	0xFF5
  5789                           postinc0	equ	0xFEE
  5790                           wreg	equ	0xFE8
  5791                           postdec1	equ	0xFE5
  5792                           fsr1l	equ	0xFE1
  5793                           
  5794                           	psect	bitbssCOMRAM
  5795  0002F0                     __pbitbssCOMRAM:
  5796                           	opt stack 0
  5797  0002F0                     _adc_error_flag:
  5798                           	opt stack 0
  5799  0002F0                     	ds	1
  5800  0002F1                     _load_enable:
  5801                           	opt stack 0
  5802  0002F1                     	ds	1
  5803  0002F2                     _VCC_overvoltage_flag:
  5804                           	opt stack 0
  5805  0002F2                     	ds	1
  5806                           tblptru	equ	0xFF8
  5807                           tblptrh	equ	0xFF7
  5808                           tblptrl	equ	0xFF6
  5809                           tablat	equ	0xFF5
  5810                           postinc0	equ	0xFEE
  5811                           wreg	equ	0xFE8
  5812                           postdec1	equ	0xFE5
  5813                           fsr1l	equ	0xFE1
  5814                           
  5815                           	psect	bitbssBANK0
  5816  0007F0                     __pbitbssBANK0:
  5817                           	opt stack 0
  5818  0007F0                     _eusart2RxStringReady:
  5819                           	opt stack 0
  5820  0007F0                     	ds	1
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           postinc0	equ	0xFEE
  5826                           wreg	equ	0xFE8
  5827                           postdec1	equ	0xFE5
  5828                           fsr1l	equ	0xFE1
  5829                           
  5830                           	psect	bssBANK0
  5831  0000C8                     __pbssBANK0:
  5832                           	opt stack 0
  5833  0000C8                     _Vrms:
  5834                           	opt stack 0
  5835  0000C8                     	ds	3
  5836  0000CB                     _Irms:
  5837                           	opt stack 0
  5838  0000CB                     	ds	3
  5839  0000CE                     _Imeas:
  5840                           	opt stack 0
  5841  0000CE                     	ds	3
  5842  0000D1                     _Ipk:
  5843                           	opt stack 0
  5844  0000D1                     	ds	3
  5845  0000D4                     _Vpk:
  5846                           	opt stack 0
  5847  0000D4                     	ds	3
  5848  0000D7                     _Temp_ADC_Result:
  5849                           	opt stack 0
  5850  0000D7                     	ds	3
  5851  0000DA                     _POS12_ADC_Result:
  5852                           	opt stack 0
  5853  0000DA                     	ds	3
  5854  0000DD                     _POS3P3_ADC_Result:
  5855                           	opt stack 0
  5856  0000DD                     	ds	3
  5857  0000E0                     _ADC_Result_Scaling:
  5858                           	opt stack 0
  5859  0000E0                     	ds	3
  5860  0000E3                     _AVSS_ADC_Result:
  5861                           	opt stack 0
  5862  0000E3                     	ds	3
  5863  0000E6                     _ADCC_ADI_InterruptHandler:
  5864                           	opt stack 0
  5865  0000E6                     	ds	3
  5866  0000E9                     _background_color:
  5867                           	opt stack 0
  5868  0000E9                     	ds	1
  5869  0000EA                     _foreground_color:
  5870                           	opt stack 0
  5871  0000EA                     	ds	1
  5872  0000EB                     _attribute:
  5873                           	opt stack 0
  5874  0000EB                     	ds	1
  5875  0000EC                     _eusart2RxHead:
  5876                           	opt stack 0
  5877  0000EC                     	ds	1
  5878  0000ED                     _FVR_ADC_Result:
  5879                           	opt stack 0
  5880  0000ED                     	ds	3
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           postdec1	equ	0xFE5
  5888                           fsr1l	equ	0xFE1
  5889                           
  5890                           	psect	dataBANK0
  5891  0000F0                     __pdataBANK0:
  5892                           	opt stack 0
  5893  0000F0                     _Irms_offset:
  5894                           	opt stack 0
  5895  0000F0                     	ds	3
  5896  0000F3                     _Vpk_const:
  5897                           	opt stack 0
  5898  0000F3                     	ds	3
  5899  0000F6                     _Temp_ADC_Offset:
  5900                           	opt stack 0
  5901  0000F6                     	ds	3
  5902  0000F9                     _dimming_period:
  5903                           	opt stack 0
  5904  0000F9                     	ds	2
  5905  0000FB                     _TRIAC_Firing_Angle:
  5906                           	opt stack 0
  5907  0000FB                     	ds	3
  5908                           tblptru	equ	0xFF8
  5909                           tblptrh	equ	0xFF7
  5910                           tblptrl	equ	0xFF6
  5911                           tablat	equ	0xFF5
  5912                           postinc0	equ	0xFEE
  5913                           wreg	equ	0xFE8
  5914                           postdec1	equ	0xFE5
  5915                           fsr1l	equ	0xFE1
  5916                           
  5917                           	psect	bssBANK1
  5918  0001AF                     __pbssBANK1:
  5919                           	opt stack 0
  5920  0001AF                     _load_on_time:
  5921                           	opt stack 0
  5922  0001AF                     	ds	4
  5923  0001B3                     _dev_on_time:
  5924                           	opt stack 0
  5925  0001B3                     	ds	4
  5926  0001B7                     _Avg_Power:
  5927                           	opt stack 0
  5928  0001B7                     	ds	3
  5929  0001BA                     _TMR5_InterruptHandler:
  5930                           	opt stack 0
  5931  0001BA                     	ds	3
  5932  0001BD                     _TMR7_InterruptHandler:
  5933                           	opt stack 0
  5934  0001BD                     	ds	3
  5935  0001C0                     _TMR6_InterruptHandler:
  5936                           	opt stack 0
  5937  0001C0                     	ds	3
  5938  0001C3                     _EUSART2_RxDefaultInterruptHandler:
  5939                           	opt stack 0
  5940  0001C3                     	ds	3
  5941  0001C6                     _EUSART2_TxDefaultInterruptHandler:
  5942                           	opt stack 0
  5943  0001C6                     	ds	3
  5944  0001C9                     _errno:
  5945                           	opt stack 0
  5946  0001C9                     	ds	2
  5947  0001CB                     _timer5ReloadVal:
  5948                           	opt stack 0
  5949  0001CB                     	ds	2
  5950  0001CD                     _timer7ReloadVal:
  5951                           	opt stack 0
  5952  0001CD                     	ds	2
  5953  0001CF                     _current_adc_channel:
  5954                           	opt stack 0
  5955  0001CF                     	ds	1
  5956  0001D0                     _eusart2RxCount:
  5957                           	opt stack 0
  5958  0001D0                     	ds	1
  5959  0001D1                     _eusart2RxTail:
  5960                           	opt stack 0
  5961  0001D1                     	ds	1
  5962  0001D2                     _eusart2TxBufferRemaining:
  5963                           	opt stack 0
  5964  0001D2                     	ds	1
  5965  0001D3                     _eusart2TxTail:
  5966                           	opt stack 0
  5967  0001D3                     	ds	1
  5968  0001D4                     _eusart2TxHead:
  5969                           	opt stack 0
  5970  0001D4                     	ds	1
  5971                           tblptru	equ	0xFF8
  5972                           tblptrh	equ	0xFF7
  5973                           tblptrl	equ	0xFF6
  5974                           tablat	equ	0xFF5
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           postdec1	equ	0xFE5
  5978                           fsr1l	equ	0xFE1
  5979                           
  5980                           	psect	bssBANK2
  5981  000200                     __pbssBANK2:
  5982                           	opt stack 0
  5983  000200                     _eusart2RxBuffer:
  5984                           	opt stack 0
  5985  000200                     	ds	64
  5986  000240                     _line:
  5987                           	opt stack 0
  5988  000240                     	ds	64
  5989                           tblptru	equ	0xFF8
  5990                           tblptrh	equ	0xFF7
  5991                           tblptrl	equ	0xFF6
  5992                           tablat	equ	0xFF5
  5993                           postinc0	equ	0xFEE
  5994                           wreg	equ	0xFE8
  5995                           postdec1	equ	0xFE5
  5996                           fsr1l	equ	0xFE1
  5997                           
  5998                           	psect	dataBANK2
  5999  0002A2                     __pdataBANK2:
  6000                           	opt stack 0
  6001  0002A2                     getCauseOfResetString@strings:
  6002                           	opt stack 0
  6003  0002A2                     	ds	18
  6004  0002B4                     getDeviceIDString@F17550:
  6005                           	opt stack 0
  6006  0002B4                     	ds	6
  6007                           tblptru	equ	0xFF8
  6008                           tblptrh	equ	0xFF7
  6009                           tblptrl	equ	0xFF6
  6010                           tablat	equ	0xFF5
  6011                           postinc0	equ	0xFEE
  6012                           wreg	equ	0xFE8
  6013                           postdec1	equ	0xFE5
  6014                           fsr1l	equ	0xFE1
  6015                           
  6016                           	psect	bssBANK3
  6017  000300                     __pbssBANK3:
  6018                           	opt stack 0
  6019  000300                     _eusart2TxBuffer:
  6020                           	opt stack 0
  6021  000300                     	ds	128
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           postinc0	equ	0xFEE
  6027                           wreg	equ	0xFE8
  6028                           postdec1	equ	0xFE5
  6029                           fsr1l	equ	0xFE1
  6030                           
  6031                           	psect	cstackBANK2
  6032  000280                     __pcstackBANK2:
  6033                           	opt stack 0
  6034  000280                     ringBufferLUT@channel_name:
  6035                           	opt stack 0
  6036                           
  6037                           ; 22 bytes @ 0x0
  6038  000280                     	ds	22
  6039  000296                     ringBufferLUT@angle_degrees:
  6040                           	opt stack 0
  6041                           
  6042                           ; 3 bytes @ 0x16
  6043  000296                     	ds	3
  6044  000299                     ringBufferLUT@arg_buff:
  6045                           	opt stack 0
  6046                           
  6047                           ; 3 bytes @ 0x19
  6048  000299                     	ds	3
  6049  00029C                     ringBufferLUT@index:
  6050                           	opt stack 0
  6051                           
  6052                           ; 2 bytes @ 0x1C
  6053  00029C                     	ds	2
  6054  00029E                     ringBufferLUT@percentage:
  6055                           	opt stack 0
  6056                           
  6057                           ; 2 bytes @ 0x1E
  6058  00029E                     	ds	2
  6059  0002A0                     ringBufferLUT@userID:
  6060                           	opt stack 0
  6061                           
  6062                           ; 2 bytes @ 0x20
  6063  0002A0                     	ds	2
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           postdec1	equ	0xFE5
  6071                           fsr1l	equ	0xFE1
  6072                           
  6073                           	psect	cstackBANK1
  6074  000100                     __pcstackBANK1:
  6075                           	opt stack 0
  6076  000100                     ??_heartbeatTimerCallback:
  6077  000100                     ADCC_StartConversion@channel:
  6078                           	opt stack 0
  6079  000100                     TMR7_WriteTimer@timerVal:
  6080                           	opt stack 0
  6081                           
  6082                           ; 2 bytes @ 0x0
  6083  000100                     	ds	1
  6084  000101                     
  6085                           ; 1 bytes @ 0x1
  6086  000101                     	ds	1
  6087  000102                     ??_INTERRUPT_InterruptManagerLow:
  6088  000102                     
  6089                           ; 1 bytes @ 0x2
  6090  000102                     	ds	21
  6091  000117                     ??_isdigit:
  6092  000117                     ?_strlen:
  6093                           	opt stack 0
  6094  000117                     ?_strcmp:
  6095                           	opt stack 0
  6096  000117                     ?_getCauseOfResetString:
  6097                           	opt stack 0
  6098  000117                     ?_strchr:
  6099                           	opt stack 0
  6100  000117                     ?___awmod:
  6101                           	opt stack 0
  6102  000117                     ?___ftpack:
  6103                           	opt stack 0
  6104  000117                     ?__tdiv_to_l_:
  6105                           	opt stack 0
  6106  000117                     ?__div_to_l_:
  6107                           	opt stack 0
  6108  000117                     ?___lldiv:
  6109                           	opt stack 0
  6110  000117                     EUSART2_Read@readValue:
  6111                           	opt stack 0
  6112  000117                     EUSART2_Write@txData:
  6113                           	opt stack 0
  6114  000117                     getCauseOfReset@return_reset_cause:
  6115                           	opt stack 0
  6116  000117                     ___awmod@dividend:
  6117                           	opt stack 0
  6118  000117                     strcat@to:
  6119                           	opt stack 0
  6120  000117                     strcmp@s1:
  6121                           	opt stack 0
  6122  000117                     strcpy@to:
  6123                           	opt stack 0
  6124  000117                     strlen@s:
  6125                           	opt stack 0
  6126  000117                     strncpy@to:
  6127                           	opt stack 0
  6128  000117                     strchr@ptr:
  6129                           	opt stack 0
  6130  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6131                           	opt stack 0
  6132  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6133                           	opt stack 0
  6134  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6135                           	opt stack 0
  6136  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  6137                           	opt stack 0
  6138  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6139                           	opt stack 0
  6140  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6141                           	opt stack 0
  6142  000117                     __div_to_l_@f1:
  6143                           	opt stack 0
  6144  000117                     ___ftpack@arg:
  6145                           	opt stack 0
  6146  000117                     __tdiv_to_l_@f1:
  6147                           	opt stack 0
  6148  000117                     ___ftge@ff1:
  6149                           	opt stack 0
  6150  000117                     FLASH_ReadByte@flashAddr:
  6151                           	opt stack 0
  6152  000117                     ___lldiv@dividend:
  6153                           	opt stack 0
  6154                           
  6155                           ; 4 bytes @ 0x17
  6156  000117                     	ds	1
  6157  000118                     putch@txData:
  6158                           	opt stack 0
  6159  000118                     _isdigit$3141:
  6160                           	opt stack 0
  6161                           
  6162                           ; 1 bytes @ 0x18
  6163  000118                     	ds	1
  6164  000119                     ??_strlen:
  6165  000119                     getCauseOfResetString@r:
  6166                           	opt stack 0
  6167  000119                     isdigit@c:
  6168                           	opt stack 0
  6169  000119                     ___awmod@divisor:
  6170                           	opt stack 0
  6171  000119                     strcat@from:
  6172                           	opt stack 0
  6173  000119                     strcmp@s2:
  6174                           	opt stack 0
  6175  000119                     strcpy@from:
  6176                           	opt stack 0
  6177  000119                     strncpy@from:
  6178                           	opt stack 0
  6179  000119                     strchr@chr:
  6180                           	opt stack 0
  6181                           
  6182                           ; 2 bytes @ 0x19
  6183  000119                     	ds	1
  6184  00011A                     ??_TMR7_Initialize:
  6185  00011A                     ??_TMR5_Initialize:
  6186  00011A                     ___ftpack@exp:
  6187                           	opt stack 0
  6188  00011A                     __div_to_l_@f2:
  6189                           	opt stack 0
  6190  00011A                     __tdiv_to_l_@f2:
  6191                           	opt stack 0
  6192  00011A                     ___ftge@ff2:
  6193                           	opt stack 0
  6194                           
  6195                           ; 3 bytes @ 0x1A
  6196  00011A                     	ds	1
  6197  00011B                     ??_strcmp:
  6198  00011B                     ?_FLASH_ReadWord:
  6199                           	opt stack 0
  6200  00011B                     ___awmod@counter:
  6201                           	opt stack 0
  6202  00011B                     ___ftpack@sign:
  6203                           	opt stack 0
  6204  00011B                     strcat@cp:
  6205                           	opt stack 0
  6206  00011B                     strcpy@cp:
  6207                           	opt stack 0
  6208  00011B                     strlen@cp:
  6209                           	opt stack 0
  6210  00011B                     strncpy@size:
  6211                           	opt stack 0
  6212  00011B                     FLASH_ReadWord@flashAddr:
  6213                           	opt stack 0
  6214  00011B                     ___lldiv@divisor:
  6215                           	opt stack 0
  6216                           
  6217                           ; 4 bytes @ 0x1B
  6218  00011B                     	ds	1
  6219  00011C                     ??___ftpack:
  6220  00011C                     ___awmod@sign:
  6221                           	opt stack 0
  6222  00011C                     strcmp@r:
  6223                           	opt stack 0
  6224                           
  6225                           ; 1 bytes @ 0x1C
  6226  00011C                     	ds	1
  6227  00011D                     ??__tdiv_to_l_:
  6228  00011D                     ??___ftge:
  6229  00011D                     ?_strncmp:
  6230                           	opt stack 0
  6231  00011D                     ?___awdiv:
  6232                           	opt stack 0
  6233  00011D                     ___awdiv@dividend:
  6234                           	opt stack 0
  6235  00011D                     strncpy@cp:
  6236                           	opt stack 0
  6237  00011D                     strncmp@s1:
  6238                           	opt stack 0
  6239  00011D                     __div_to_l_@quot:
  6240                           	opt stack 0
  6241                           
  6242                           ; 4 bytes @ 0x1D
  6243  00011D                     	ds	2
  6244  00011F                     ??_FLASH_ReadWord:
  6245  00011F                     ?___awtoft:
  6246                           	opt stack 0
  6247  00011F                     ?___lltoft:
  6248                           	opt stack 0
  6249  00011F                     ___awdiv@divisor:
  6250                           	opt stack 0
  6251  00011F                     ___awtoft@c:
  6252                           	opt stack 0
  6253  00011F                     strncmp@s2:
  6254                           	opt stack 0
  6255  00011F                     ___lldiv@quotient:
  6256                           	opt stack 0
  6257  00011F                     ___lltoft@c:
  6258                           	opt stack 0
  6259                           
  6260                           ; 4 bytes @ 0x1F
  6261  00011F                     	ds	1
  6262  000120                     __tdiv_to_l_@quot:
  6263                           	opt stack 0
  6264                           
  6265                           ; 4 bytes @ 0x20
  6266  000120                     	ds	1
  6267  000121                     ___awdiv@counter:
  6268                           	opt stack 0
  6269  000121                     __div_to_l_@cntr:
  6270                           	opt stack 0
  6271  000121                     strncmp@len:
  6272                           	opt stack 0
  6273                           
  6274                           ; 2 bytes @ 0x21
  6275  000121                     	ds	1
  6276  000122                     ??_getMajorRevisionID:
  6277  000122                     ?_getDeviceID:
  6278                           	opt stack 0
  6279  000122                     ?_getUserID:
  6280                           	opt stack 0
  6281  000122                     ___awdiv@sign:
  6282                           	opt stack 0
  6283  000122                     ___awtoft@sign:
  6284                           	opt stack 0
  6285  000122                     __div_to_l_@exp1:
  6286                           	opt stack 0
  6287  000122                     getMinorRevisionID@REVID_RAW:
  6288                           	opt stack 0
  6289                           
  6290                           ; 2 bytes @ 0x22
  6291  000122                     	ds	1
  6292  000123                     ??_strncmp:
  6293  000123                     ??___lltoft:
  6294  000123                     ?___ftneg:
  6295                           	opt stack 0
  6296  000123                     ___lldiv@counter:
  6297                           	opt stack 0
  6298  000123                     ___awdiv@quotient:
  6299                           	opt stack 0
  6300  000123                     ___ftneg@f1:
  6301                           	opt stack 0
  6302                           
  6303                           ; 3 bytes @ 0x23
  6304  000123                     	ds	1
  6305  000124                     ?_getDeviceIDString:
  6306                           	opt stack 0
  6307  000124                     ?___llmod:
  6308                           	opt stack 0
  6309  000124                     __tdiv_to_l_@cntr:
  6310                           	opt stack 0
  6311  000124                     getDeviceIDString@inputDevID:
  6312                           	opt stack 0
  6313  000124                     getUserID@initialOffset:
  6314                           	opt stack 0
  6315  000124                     ___llmod@dividend:
  6316                           	opt stack 0
  6317                           
  6318                           ; 4 bytes @ 0x24
  6319  000124                     	ds	1
  6320  000125                     ?___wmul:
  6321                           	opt stack 0
  6322  000125                     __tdiv_to_l_@exp1:
  6323                           	opt stack 0
  6324  000125                     getMajorRevisionID@REVID_RAW:
  6325                           	opt stack 0
  6326  000125                     ___wmul@multiplier:
  6327                           	opt stack 0
  6328                           
  6329                           ; 2 bytes @ 0x25
  6330  000125                     	ds	1
  6331  000126                     ??_getDeviceIDString:
  6332  000126                     ?_strstr:
  6333                           	opt stack 0
  6334  000126                     strstr@s1:
  6335                           	opt stack 0
  6336                           
  6337                           ; 2 bytes @ 0x26
  6338  000126                     	ds	1
  6339  000127                     ___lltoft@exp:
  6340                           	opt stack 0
  6341  000127                     ___wmul@multiplicand:
  6342                           	opt stack 0
  6343                           
  6344                           ; 2 bytes @ 0x27
  6345  000127                     	ds	1
  6346  000128                     getUserID@inputUserID:
  6347                           	opt stack 0
  6348  000128                     strstr@s2:
  6349                           	opt stack 0
  6350  000128                     ___llmod@divisor:
  6351                           	opt stack 0
  6352  000128                     getDeviceIDString@strings:
  6353                           	opt stack 0
  6354                           
  6355                           ; 6 bytes @ 0x28
  6356  000128                     	ds	1
  6357  000129                     getUserID@IDOffset:
  6358                           	opt stack 0
  6359  000129                     ___wmul@product:
  6360                           	opt stack 0
  6361                           
  6362                           ; 2 bytes @ 0x29
  6363  000129                     	ds	1
  6364  00012A                     
  6365                           ; 1 bytes @ 0x2A
  6366  00012A                     	ds	1
  6367  00012B                     ?_atoi:
  6368                           	opt stack 0
  6369  00012B                     ?___ftadd:
  6370                           	opt stack 0
  6371  00012B                     atoi@s:
  6372                           	opt stack 0
  6373  00012B                     ___ftadd@f1:
  6374                           	opt stack 0
  6375                           
  6376                           ; 3 bytes @ 0x2B
  6377  00012B                     	ds	1
  6378  00012C                     ___llmod@counter:
  6379                           	opt stack 0
  6380                           
  6381                           ; 1 bytes @ 0x2C
  6382  00012C                     	ds	1
  6383  00012D                     ??_atoi:
  6384                           
  6385                           ; 1 bytes @ 0x2D
  6386  00012D                     	ds	1
  6387  00012E                     ___ftadd@f2:
  6388                           	opt stack 0
  6389                           
  6390                           ; 3 bytes @ 0x2E
  6391  00012E                     	ds	1
  6392  00012F                     atoi@sign:
  6393                           	opt stack 0
  6394                           
  6395                           ; 1 bytes @ 0x2F
  6396  00012F                     	ds	1
  6397  000130                     atoi@a:
  6398                           	opt stack 0
  6399                           
  6400                           ; 2 bytes @ 0x30
  6401  000130                     	ds	1
  6402  000131                     ??___ftadd:
  6403                           
  6404                           ; 1 bytes @ 0x31
  6405  000131                     	ds	3
  6406  000134                     ___ftadd@sign:
  6407                           	opt stack 0
  6408                           
  6409                           ; 1 bytes @ 0x34
  6410  000134                     	ds	1
  6411  000135                     ___ftadd@exp2:
  6412                           	opt stack 0
  6413                           
  6414                           ; 1 bytes @ 0x35
  6415  000135                     	ds	1
  6416  000136                     ___ftadd@exp1:
  6417                           	opt stack 0
  6418                           
  6419                           ; 1 bytes @ 0x36
  6420  000136                     	ds	1
  6421  000137                     ?___ftdiv:
  6422                           	opt stack 0
  6423  000137                     ?___ftsub:
  6424                           	opt stack 0
  6425  000137                     ___ftdiv@f1:
  6426                           	opt stack 0
  6427  000137                     ___ftsub@f1:
  6428                           	opt stack 0
  6429                           
  6430                           ; 3 bytes @ 0x37
  6431  000137                     	ds	3
  6432  00013A                     ___ftdiv@f2:
  6433                           	opt stack 0
  6434  00013A                     ___ftsub@f2:
  6435                           	opt stack 0
  6436                           
  6437                           ; 3 bytes @ 0x3A
  6438  00013A                     	ds	3
  6439  00013D                     ??___ftdiv:
  6440  00013D                     
  6441                           ; 1 bytes @ 0x3D
  6442  00013D                     	ds	3
  6443  000140                     ___ftdiv@cntr:
  6444                           	opt stack 0
  6445                           
  6446                           ; 1 bytes @ 0x40
  6447  000140                     	ds	1
  6448  000141                     ___ftdiv@f3:
  6449                           	opt stack 0
  6450                           
  6451                           ; 3 bytes @ 0x41
  6452  000141                     	ds	3
  6453  000144                     ___ftdiv@exp:
  6454                           	opt stack 0
  6455                           
  6456                           ; 1 bytes @ 0x44
  6457  000144                     	ds	1
  6458  000145                     ___ftdiv@sign:
  6459                           	opt stack 0
  6460                           
  6461                           ; 1 bytes @ 0x45
  6462  000145                     	ds	1
  6463  000146                     ?___ftmul:
  6464                           	opt stack 0
  6465  000146                     ___ftmul@f1:
  6466                           	opt stack 0
  6467                           
  6468                           ; 3 bytes @ 0x46
  6469  000146                     	ds	3
  6470  000149                     ___ftmul@f2:
  6471                           	opt stack 0
  6472                           
  6473                           ; 3 bytes @ 0x49
  6474  000149                     	ds	3
  6475  00014C                     ??___ftmul:
  6476                           
  6477                           ; 1 bytes @ 0x4C
  6478  00014C                     	ds	3
  6479  00014F                     ___ftmul@exp:
  6480                           	opt stack 0
  6481                           
  6482                           ; 1 bytes @ 0x4F
  6483  00014F                     	ds	1
  6484  000150                     ___ftmul@f3_as_product:
  6485                           	opt stack 0
  6486                           
  6487                           ; 3 bytes @ 0x50
  6488  000150                     	ds	3
  6489  000153                     ___ftmul@cntr:
  6490                           	opt stack 0
  6491                           
  6492                           ; 1 bytes @ 0x53
  6493  000153                     	ds	1
  6494  000154                     ___ftmul@sign:
  6495                           	opt stack 0
  6496                           
  6497                           ; 1 bytes @ 0x54
  6498  000154                     	ds	1
  6499  000155                     ?_fround:
  6500                           	opt stack 0
  6501  000155                     ?_scale:
  6502                           	opt stack 0
  6503  000155                     ?___fttol:
  6504                           	opt stack 0
  6505  000155                     ___fttol@f1:
  6506                           	opt stack 0
  6507                           
  6508                           ; 3 bytes @ 0x55
  6509  000155                     	ds	3
  6510  000158                     _fround$3817:
  6511                           	opt stack 0
  6512  000158                     _scale$3818:
  6513                           	opt stack 0
  6514                           
  6515                           ; 3 bytes @ 0x58
  6516  000158                     	ds	1
  6517  000159                     ??___fttol:
  6518                           
  6519                           ; 1 bytes @ 0x59
  6520  000159                     	ds	2
  6521  00015B                     scale@scl:
  6522                           	opt stack 0
  6523  00015B                     _fround$3816:
  6524                           	opt stack 0
  6525                           
  6526                           ; 3 bytes @ 0x5B
  6527  00015B                     	ds	3
  6528  00015E                     fround@prec:
  6529                           	opt stack 0
  6530  00015E                     ___fttol@sign1:
  6531                           	opt stack 0
  6532                           
  6533                           ; 1 bytes @ 0x5E
  6534  00015E                     	ds	1
  6535  00015F                     ___fttol@lval:
  6536                           	opt stack 0
  6537                           
  6538                           ; 4 bytes @ 0x5F
  6539  00015F                     	ds	4
  6540  000163                     ___fttol@exp1:
  6541                           	opt stack 0
  6542                           
  6543                           ; 1 bytes @ 0x63
  6544  000163                     	ds	1
  6545  000164                     ?_printf:
  6546                           	opt stack 0
  6547  000164                     printf@f:
  6548                           	opt stack 0
  6549                           
  6550                           ; 2 bytes @ 0x64
  6551  000164                     	ds	8
  6552  00016C                     ??_printf:
  6553                           
  6554                           ; 1 bytes @ 0x6C
  6555  00016C                     	ds	6
  6556  000172                     _printf$3819:
  6557                           	opt stack 0
  6558                           
  6559                           ; 3 bytes @ 0x72
  6560  000172                     	ds	3
  6561  000175                     printf@idx:
  6562                           	opt stack 0
  6563                           
  6564                           ; 1 bytes @ 0x75
  6565  000175                     	ds	1
  6566  000176                     printf@len:
  6567                           	opt stack 0
  6568                           
  6569                           ; 2 bytes @ 0x76
  6570  000176                     	ds	2
  6571  000178                     printf@cp:
  6572                           	opt stack 0
  6573                           
  6574                           ; 2 bytes @ 0x78
  6575  000178                     	ds	2
  6576  00017A                     printf@ap:
  6577                           	opt stack 0
  6578                           
  6579                           ; 2 bytes @ 0x7A
  6580  00017A                     	ds	2
  6581  00017C                     printf@flag:
  6582                           	opt stack 0
  6583                           
  6584                           ; 2 bytes @ 0x7C
  6585  00017C                     	ds	2
  6586  00017E                     printf@exp:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0x7E
  6590  00017E                     	ds	2
  6591  000180                     printf@tmpval:
  6592                           	opt stack 0
  6593                           
  6594                           ; 4 bytes @ 0x80
  6595  000180                     	ds	4
  6596  000184                     printf@val:
  6597                           	opt stack 0
  6598                           
  6599                           ; 4 bytes @ 0x84
  6600  000184                     	ds	4
  6601  000188                     printf@fval:
  6602                           	opt stack 0
  6603                           
  6604                           ; 3 bytes @ 0x88
  6605  000188                     	ds	3
  6606  00018B                     printf@prec:
  6607                           	opt stack 0
  6608                           
  6609                           ; 2 bytes @ 0x8B
  6610  00018B                     	ds	2
  6611  00018D                     printf@c:
  6612                           	opt stack 0
  6613                           
  6614                           ; 1 bytes @ 0x8D
  6615  00018D                     	ds	1
  6616  00018E                     terminal_textAttributes@background_color:
  6617                           	opt stack 0
  6618                           
  6619                           ; 1 bytes @ 0x8E
  6620  00018E                     	ds	1
  6621  00018F                     terminal_textAttributes@input_attribute:
  6622                           	opt stack 0
  6623                           
  6624                           ; 1 bytes @ 0x8F
  6625  00018F                     	ds	1
  6626  000190                     terminal_textAttributes@foreground_color:
  6627                           	opt stack 0
  6628                           
  6629                           ; 1 bytes @ 0x90
  6630  000190                     	ds	1
  6631  000191                     terminal_textAttributes@output_buff:
  6632                           	opt stack 0
  6633                           
  6634                           ; 15 bytes @ 0x91
  6635  000191                     	ds	15
  6636  0001A0                     ringBufferLUT@line:
  6637                           	opt stack 0
  6638                           
  6639                           ; 2 bytes @ 0xA0
  6640  0001A0                     	ds	2
  6641  0001A2                     ??_ringBufferLUT:
  6642                           
  6643                           ; 1 bytes @ 0xA2
  6644  0001A2                     	ds	2
  6645  0001A4                     ??_terminal_ringBufferPull:
  6646                           
  6647                           ; 1 bytes @ 0xA4
  6648  0001A4                     	ds	3
  6649  0001A7                     terminal_ringBufferPull@charNumber:
  6650                           	opt stack 0
  6651                           
  6652                           ; 2 bytes @ 0xA7
  6653  0001A7                     	ds	2
  6654  0001A9                     terminal_ringBufferPull@index_2365:
  6655                           	opt stack 0
  6656                           
  6657                           ; 2 bytes @ 0xA9
  6658  0001A9                     	ds	2
  6659  0001AB                     terminal_ringBufferPull@index:
  6660                           	opt stack 0
  6661                           
  6662                           ; 2 bytes @ 0xAB
  6663  0001AB                     	ds	2
  6664  0001AD                     ??_main:
  6665                           
  6666                           ; 1 bytes @ 0xAD
  6667  0001AD                     	ds	2
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           postinc0	equ	0xFEE
  6673                           wreg	equ	0xFE8
  6674                           postdec1	equ	0xFE5
  6675                           fsr1l	equ	0xFE1
  6676                           
  6677                           	psect	cstackBANK0
  6678  000060                     __pcstackBANK0:
  6679                           	opt stack 0
  6680  000060                     ?i2___ftsub:
  6681                           	opt stack 0
  6682  000060                     atan@y:
  6683                           	opt stack 0
  6684  000060                     i2___ftsub@f1:
  6685                           	opt stack 0
  6686                           
  6687                           ; 3 bytes @ 0x0
  6688  000060                     	ds	3
  6689  000063                     atan@x:
  6690                           	opt stack 0
  6691  000063                     i2___ftsub@f2:
  6692                           	opt stack 0
  6693                           
  6694                           ; 3 bytes @ 0x3
  6695  000063                     	ds	3
  6696  000066                     ?i2_printf:
  6697                           	opt stack 0
  6698  000066                     ?_sin:
  6699                           	opt stack 0
  6700  000066                     ?_sqrt:
  6701                           	opt stack 0
  6702  000066                     atan@recip:
  6703                           	opt stack 0
  6704  000066                     i2printf@f:
  6705                           	opt stack 0
  6706  000066                     sin@f:
  6707                           	opt stack 0
  6708  000066                     sqrt@a:
  6709                           	opt stack 0
  6710                           
  6711                           ; 3 bytes @ 0x6
  6712  000066                     	ds	1
  6713  000067                     atan@val_squared:
  6714                           	opt stack 0
  6715                           
  6716                           ; 3 bytes @ 0x7
  6717  000067                     	ds	1
  6718  000068                     ??i2_printf:
  6719                           
  6720                           ; 1 bytes @ 0x8
  6721  000068                     	ds	1
  6722  000069                     ??_sqrt:
  6723  000069                     sin@y:
  6724                           	opt stack 0
  6725                           
  6726                           ; 3 bytes @ 0x9
  6727  000069                     	ds	1
  6728  00006A                     atan@val:
  6729                           	opt stack 0
  6730                           
  6731                           ; 3 bytes @ 0xA
  6732  00006A                     	ds	2
  6733  00006C                     sqrt@og:
  6734                           	opt stack 0
  6735  00006C                     _sin$4015:
  6736                           	opt stack 0
  6737                           
  6738                           ; 3 bytes @ 0xC
  6739  00006C                     	ds	2
  6740  00006E                     i2_printf$4019:
  6741                           	opt stack 0
  6742                           
  6743                           ; 3 bytes @ 0xE
  6744  00006E                     	ds	1
  6745  00006F                     sqrt@i:
  6746                           	opt stack 0
  6747  00006F                     sin@x2:
  6748                           	opt stack 0
  6749                           
  6750                           ; 3 bytes @ 0xF
  6751  00006F                     	ds	1
  6752  000070                     sqrt@z:
  6753                           	opt stack 0
  6754                           
  6755                           ; 3 bytes @ 0x10
  6756  000070                     	ds	1
  6757  000071                     i2printf@idx:
  6758                           	opt stack 0
  6759                           
  6760                           ; 1 bytes @ 0x11
  6761  000071                     	ds	1
  6762  000072                     sin@sgn:
  6763                           	opt stack 0
  6764  000072                     i2printf@len:
  6765                           	opt stack 0
  6766                           
  6767                           ; 2 bytes @ 0x12
  6768  000072                     	ds	1
  6769  000073                     ?_currentMeasuredToPeak:
  6770                           	opt stack 0
  6771  000073                     currentMeasuredToPeak@Measured:
  6772                           	opt stack 0
  6773  000073                     sqrt@q:
  6774                           	opt stack 0
  6775                           
  6776                           ; 3 bytes @ 0x13
  6777  000073                     	ds	1
  6778  000074                     i2printf@cp:
  6779                           	opt stack 0
  6780                           
  6781                           ; 2 bytes @ 0x14
  6782  000074                     	ds	2
  6783  000076                     i2printf@ap:
  6784                           	opt stack 0
  6785  000076                     currentMeasuredToPeak@Angle:
  6786                           	opt stack 0
  6787  000076                     sqrt@x:
  6788                           	opt stack 0
  6789                           
  6790                           ; 3 bytes @ 0x16
  6791  000076                     	ds	2
  6792  000078                     i2printf@flag:
  6793                           	opt stack 0
  6794                           
  6795                           ; 2 bytes @ 0x18
  6796  000078                     	ds	1
  6797  000079                     ?_asin:
  6798                           	opt stack 0
  6799  000079                     currentMeasuredToPeak@Peak:
  6800                           	opt stack 0
  6801  000079                     asin@x:
  6802                           	opt stack 0
  6803                           
  6804                           ; 3 bytes @ 0x19
  6805  000079                     	ds	1
  6806  00007A                     i2printf@exp:
  6807                           	opt stack 0
  6808                           
  6809                           ; 2 bytes @ 0x1A
  6810  00007A                     	ds	2
  6811  00007C                     asin@sgn:
  6812                           	opt stack 0
  6813  00007C                     i2printf@tmpval:
  6814                           	opt stack 0
  6815                           
  6816                           ; 4 bytes @ 0x1C
  6817  00007C                     	ds	3
  6818  00007F                     _asin$4011:
  6819                           	opt stack 0
  6820                           
  6821                           ; 3 bytes @ 0x1F
  6822  00007F                     	ds	1
  6823  000080                     i2printf@fval:
  6824                           	opt stack 0
  6825                           
  6826                           ; 3 bytes @ 0x20
  6827  000080                     	ds	2
  6828  000082                     _asin$4014:
  6829                           	opt stack 0
  6830                           
  6831                           ; 3 bytes @ 0x22
  6832  000082                     	ds	1
  6833  000083                     i2printf@val:
  6834                           	opt stack 0
  6835                           
  6836                           ; 4 bytes @ 0x23
  6837  000083                     	ds	2
  6838  000085                     _asin$4013:
  6839                           	opt stack 0
  6840                           
  6841                           ; 3 bytes @ 0x25
  6842  000085                     	ds	2
  6843  000087                     i2printf@prec:
  6844                           	opt stack 0
  6845                           
  6846                           ; 2 bytes @ 0x27
  6847  000087                     	ds	1
  6848  000088                     asin@y:
  6849                           	opt stack 0
  6850                           
  6851                           ; 3 bytes @ 0x28
  6852  000088                     	ds	1
  6853  000089                     i2printf@c:
  6854                           	opt stack 0
  6855                           
  6856                           ; 1 bytes @ 0x29
  6857  000089                     	ds	2
  6858  00008B                     _asin$4012:
  6859                           	opt stack 0
  6860                           
  6861                           ; 3 bytes @ 0x2B
  6862  00008B                     	ds	3
  6863  00008E                     ?_acos:
  6864                           	opt stack 0
  6865  00008E                     acos@x:
  6866                           	opt stack 0
  6867                           
  6868                           ; 3 bytes @ 0x2E
  6869  00008E                     	ds	3
  6870  000091                     _acos$4010:
  6871                           	opt stack 0
  6872                           
  6873                           ; 3 bytes @ 0x31
  6874  000091                     	ds	3
  6875  000094                     ?_peakToRMS:
  6876                           	opt stack 0
  6877  000094                     peakToRMS@Peak:
  6878                           	opt stack 0
  6879                           
  6880                           ; 3 bytes @ 0x34
  6881  000094                     	ds	3
  6882  000097                     peakToRMS@Angle:
  6883                           	opt stack 0
  6884                           
  6885                           ; 3 bytes @ 0x37
  6886  000097                     	ds	3
  6887  00009A                     _peakToRMS$4003:
  6888                           	opt stack 0
  6889                           
  6890                           ; 3 bytes @ 0x3A
  6891  00009A                     	ds	3
  6892  00009D                     _peakToRMS$4004:
  6893                           	opt stack 0
  6894                           
  6895                           ; 3 bytes @ 0x3D
  6896  00009D                     	ds	3
  6897  0000A0                     _peakToRMS$4002:
  6898                           	opt stack 0
  6899                           
  6900                           ; 3 bytes @ 0x40
  6901  0000A0                     	ds	3
  6902  0000A3                     peakToRMS@RMS:
  6903                           	opt stack 0
  6904                           
  6905                           ; 3 bytes @ 0x43
  6906  0000A3                     	ds	3
  6907  0000A6                     _ADCPostProcessingCallback$4007:
  6908                           	opt stack 0
  6909                           
  6910                           ; 3 bytes @ 0x46
  6911  0000A6                     	ds	3
  6912  0000A9                     _ADCPostProcessingCallback$4008:
  6913                           	opt stack 0
  6914                           
  6915                           ; 3 bytes @ 0x49
  6916  0000A9                     	ds	3
  6917  0000AC                     _ADCPostProcessingCallback$4009:
  6918                           	opt stack 0
  6919                           
  6920                           ; 3 bytes @ 0x4C
  6921  0000AC                     	ds	3
  6922  0000AF                     ADCPostProcessingCallback@current_adc_channel:
  6923                           	opt stack 0
  6924                           
  6925                           ; 1 bytes @ 0x4F
  6926  0000AF                     	ds	1
  6927  0000B0                     _ADCPostProcessingCallback$4006:
  6928                           	opt stack 0
  6929                           
  6930                           ; 3 bytes @ 0x50
  6931  0000B0                     	ds	3
  6932  0000B3                     _ADCPostProcessingCallback$4005:
  6933                           	opt stack 0
  6934                           
  6935                           ; 3 bytes @ 0x53
  6936  0000B3                     	ds	3
  6937  0000B6                     ??_INTERRUPT_InterruptManagerHigh:
  6938                           
  6939                           ; 1 bytes @ 0x56
  6940  0000B6                     	ds	18
  6941                           tblptru	equ	0xFF8
  6942                           tblptrh	equ	0xFF7
  6943                           tblptrl	equ	0xFF6
  6944                           tablat	equ	0xFF5
  6945                           postinc0	equ	0xFEE
  6946                           wreg	equ	0xFE8
  6947                           postdec1	equ	0xFE5
  6948                           fsr1l	equ	0xFE1
  6949                           
  6950                           	psect	cstackCOMRAM
  6951  000001                     __pcstackCOMRAM:
  6952                           	opt stack 0
  6953  000001                     ??i2_isdigit:
  6954  000001                     ?_ADCC_GetConversionResult:
  6955                           	opt stack 0
  6956  000001                     ?i2___awmod:
  6957                           	opt stack 0
  6958  000001                     ?i2___ftpack:
  6959                           	opt stack 0
  6960  000001                     ?i2__div_to_l_:
  6961                           	opt stack 0
  6962  000001                     ?i2__tdiv_to_l_:
  6963                           	opt stack 0
  6964  000001                     ?i2___lldiv:
  6965                           	opt stack 0
  6966  000001                     i2EUSART2_Write@txData:
  6967                           	opt stack 0
  6968  000001                     TMR5_WriteTimer@timerVal:
  6969                           	opt stack 0
  6970  000001                     i2___awmod@dividend:
  6971                           	opt stack 0
  6972  000001                     frexp@value:
  6973                           	opt stack 0
  6974  000001                     i2__div_to_l_@f1:
  6975                           	opt stack 0
  6976  000001                     i2___ftpack@arg:
  6977                           	opt stack 0
  6978  000001                     i2__tdiv_to_l_@f1:
  6979                           	opt stack 0
  6980  000001                     i2___lldiv@dividend:
  6981                           	opt stack 0
  6982                           
  6983                           ; 4 bytes @ 0x0
  6984  000001                     	ds	1
  6985  000002                     i2putch@txData:
  6986                           	opt stack 0
  6987  000002                     i2_isdigit$3141:
  6988                           	opt stack 0
  6989                           
  6990                           ; 1 bytes @ 0x1
  6991  000002                     	ds	1
  6992  000003                     ??_ADCC_GetConversionResult:
  6993  000003                     i2isdigit@c:
  6994                           	opt stack 0
  6995  000003                     i2___awmod@divisor:
  6996                           	opt stack 0
  6997                           
  6998                           ; 2 bytes @ 0x2
  6999  000003                     	ds	1
  7000  000004                     i2___ftpack@exp:
  7001                           	opt stack 0
  7002  000004                     frexp@eptr:
  7003                           	opt stack 0
  7004  000004                     i2__div_to_l_@f2:
  7005                           	opt stack 0
  7006  000004                     i2__tdiv_to_l_@f2:
  7007                           	opt stack 0
  7008                           
  7009                           ; 3 bytes @ 0x3
  7010  000004                     	ds	1
  7011  000005                     i2___awmod@counter:
  7012                           	opt stack 0
  7013  000005                     i2___ftpack@sign:
  7014                           	opt stack 0
  7015  000005                     i2___lldiv@divisor:
  7016                           	opt stack 0
  7017                           
  7018                           ; 4 bytes @ 0x4
  7019  000005                     	ds	1
  7020  000006                     ??_frexp:
  7021  000006                     ??i2___ftpack:
  7022  000006                     i2___awmod@sign:
  7023                           	opt stack 0
  7024                           
  7025                           ; 1 bytes @ 0x5
  7026  000006                     	ds	1
  7027  000007                     ??i2__tdiv_to_l_:
  7028  000007                     ?i2___awdiv:
  7029                           	opt stack 0
  7030  000007                     i2___awdiv@dividend:
  7031                           	opt stack 0
  7032  000007                     i2__div_to_l_@quot:
  7033                           	opt stack 0
  7034                           
  7035                           ; 4 bytes @ 0x6
  7036  000007                     	ds	2
  7037  000009                     ?___lwtoft:
  7038                           	opt stack 0
  7039  000009                     ?i2___lltoft:
  7040                           	opt stack 0
  7041  000009                     ___lwtoft@c:
  7042                           	opt stack 0
  7043  000009                     i2___awdiv@divisor:
  7044                           	opt stack 0
  7045  000009                     i2___lldiv@quotient:
  7046                           	opt stack 0
  7047  000009                     i2___lltoft@c:
  7048                           	opt stack 0
  7049                           
  7050                           ; 4 bytes @ 0x8
  7051  000009                     	ds	1
  7052  00000A                     i2__tdiv_to_l_@quot:
  7053                           	opt stack 0
  7054                           
  7055                           ; 4 bytes @ 0x9
  7056  00000A                     	ds	1
  7057  00000B                     i2___awdiv@counter:
  7058                           	opt stack 0
  7059  00000B                     i2__div_to_l_@cntr:
  7060                           	opt stack 0
  7061                           
  7062                           ; 1 bytes @ 0xA
  7063  00000B                     	ds	1
  7064  00000C                     i2___awdiv@sign:
  7065                           	opt stack 0
  7066  00000C                     i2__div_to_l_@exp1:
  7067                           	opt stack 0
  7068                           
  7069                           ; 1 bytes @ 0xB
  7070  00000C                     	ds	1
  7071  00000D                     ??i2___lltoft:
  7072  00000D                     i2___lldiv@counter:
  7073                           	opt stack 0
  7074  00000D                     i2___awdiv@quotient:
  7075                           	opt stack 0
  7076                           
  7077                           ; 2 bytes @ 0xC
  7078  00000D                     	ds	1
  7079  00000E                     ?i2___llmod:
  7080                           	opt stack 0
  7081  00000E                     i2__tdiv_to_l_@cntr:
  7082                           	opt stack 0
  7083  00000E                     i2___llmod@dividend:
  7084                           	opt stack 0
  7085                           
  7086                           ; 4 bytes @ 0xD
  7087  00000E                     	ds	1
  7088  00000F                     ?i2___wmul:
  7089                           	opt stack 0
  7090  00000F                     i2__tdiv_to_l_@exp1:
  7091                           	opt stack 0
  7092  00000F                     i2___wmul@multiplier:
  7093                           	opt stack 0
  7094                           
  7095                           ; 2 bytes @ 0xE
  7096  00000F                     	ds	2
  7097  000011                     i2___lltoft@exp:
  7098                           	opt stack 0
  7099  000011                     i2___wmul@multiplicand:
  7100                           	opt stack 0
  7101                           
  7102                           ; 2 bytes @ 0x10
  7103  000011                     	ds	1
  7104  000012                     i2___llmod@divisor:
  7105                           	opt stack 0
  7106                           
  7107                           ; 4 bytes @ 0x11
  7108  000012                     	ds	1
  7109  000013                     i2___wmul@product:
  7110                           	opt stack 0
  7111                           
  7112                           ; 2 bytes @ 0x12
  7113  000013                     	ds	2
  7114  000015                     ?i2___ftdiv:
  7115                           	opt stack 0
  7116  000015                     i2___ftdiv@f1:
  7117                           	opt stack 0
  7118                           
  7119                           ; 3 bytes @ 0x14
  7120  000015                     	ds	1
  7121  000016                     i2___llmod@counter:
  7122                           	opt stack 0
  7123                           
  7124                           ; 1 bytes @ 0x15
  7125  000016                     	ds	2
  7126  000018                     i2___ftdiv@f2:
  7127                           	opt stack 0
  7128                           
  7129                           ; 3 bytes @ 0x17
  7130  000018                     	ds	3
  7131  00001B                     ??i2___ftdiv:
  7132                           
  7133                           ; 1 bytes @ 0x1A
  7134  00001B                     	ds	3
  7135  00001E                     i2___ftdiv@cntr:
  7136                           	opt stack 0
  7137                           
  7138                           ; 1 bytes @ 0x1D
  7139  00001E                     	ds	1
  7140  00001F                     i2___ftdiv@exp:
  7141                           	opt stack 0
  7142                           
  7143                           ; 1 bytes @ 0x1E
  7144  00001F                     	ds	1
  7145  000020                     i2___ftdiv@f3:
  7146                           	opt stack 0
  7147                           
  7148                           ; 3 bytes @ 0x1F
  7149  000020                     	ds	3
  7150  000023                     i2___ftdiv@sign:
  7151                           	opt stack 0
  7152                           
  7153                           ; 1 bytes @ 0x22
  7154  000023                     	ds	1
  7155  000024                     ?i2___ftneg:
  7156                           	opt stack 0
  7157  000024                     i2___ftneg@f1:
  7158                           	opt stack 0
  7159                           
  7160                           ; 3 bytes @ 0x23
  7161  000024                     	ds	3
  7162  000027                     ?_fabs:
  7163                           	opt stack 0
  7164  000027                     ?i2___ftmul:
  7165                           	opt stack 0
  7166  000027                     fabs@d:
  7167                           	opt stack 0
  7168  000027                     i2___ftmul@f1:
  7169                           	opt stack 0
  7170                           
  7171                           ; 3 bytes @ 0x26
  7172  000027                     	ds	3
  7173  00002A                     i2___ftge@ff1:
  7174                           	opt stack 0
  7175  00002A                     i2___ftmul@f2:
  7176                           	opt stack 0
  7177                           
  7178                           ; 3 bytes @ 0x29
  7179  00002A                     	ds	3
  7180  00002D                     ??i2___ftmul:
  7181  00002D                     i2___ftge@ff2:
  7182                           	opt stack 0
  7183                           
  7184                           ; 3 bytes @ 0x2C
  7185  00002D                     	ds	3
  7186  000030                     ??i2___ftge:
  7187  000030                     i2___ftmul@exp:
  7188                           	opt stack 0
  7189                           
  7190                           ; 1 bytes @ 0x2F
  7191  000030                     	ds	1
  7192  000031                     i2___ftmul@f3_as_product:
  7193                           	opt stack 0
  7194                           
  7195                           ; 3 bytes @ 0x30
  7196  000031                     	ds	3
  7197  000034                     i2___ftmul@cntr:
  7198                           	opt stack 0
  7199                           
  7200                           ; 1 bytes @ 0x33
  7201  000034                     	ds	1
  7202  000035                     i2___ftmul@sign:
  7203                           	opt stack 0
  7204                           
  7205                           ; 1 bytes @ 0x34
  7206  000035                     	ds	1
  7207  000036                     ?i2_fround:
  7208                           	opt stack 0
  7209  000036                     ?i2_scale:
  7210                           	opt stack 0
  7211                           
  7212                           ; 3 bytes @ 0x35
  7213  000036                     	ds	3
  7214  000039                     i2_fround$4017:
  7215                           	opt stack 0
  7216  000039                     i2_scale$4018:
  7217                           	opt stack 0
  7218                           
  7219                           ; 3 bytes @ 0x38
  7220  000039                     	ds	3
  7221  00003C                     i2scale@scl:
  7222                           	opt stack 0
  7223  00003C                     i2_fround$4016:
  7224                           	opt stack 0
  7225                           
  7226                           ; 3 bytes @ 0x3B
  7227  00003C                     	ds	1
  7228  00003D                     ?i2___fttol:
  7229                           	opt stack 0
  7230  00003D                     i2___fttol@f1:
  7231                           	opt stack 0
  7232                           
  7233                           ; 3 bytes @ 0x3C
  7234  00003D                     	ds	2
  7235  00003F                     i2fround@prec:
  7236                           	opt stack 0
  7237                           
  7238                           ; 1 bytes @ 0x3E
  7239  00003F                     	ds	1
  7240  000040                     ?i2___ftadd:
  7241                           	opt stack 0
  7242  000040                     i2___ftadd@f1:
  7243                           	opt stack 0
  7244                           
  7245                           ; 3 bytes @ 0x3F
  7246  000040                     	ds	1
  7247  000041                     ??i2___fttol:
  7248                           
  7249                           ; 1 bytes @ 0x40
  7250  000041                     	ds	2
  7251  000043                     i2___ftadd@f2:
  7252                           	opt stack 0
  7253                           
  7254                           ; 3 bytes @ 0x42
  7255  000043                     	ds	3
  7256  000046                     ??i2___ftadd:
  7257  000046                     i2___fttol@sign1:
  7258                           	opt stack 0
  7259                           
  7260                           ; 1 bytes @ 0x45
  7261  000046                     	ds	1
  7262  000047                     i2___fttol@lval:
  7263                           	opt stack 0
  7264                           
  7265                           ; 4 bytes @ 0x46
  7266  000047                     	ds	2
  7267  000049                     i2___ftadd@sign:
  7268                           	opt stack 0
  7269                           
  7270                           ; 1 bytes @ 0x48
  7271  000049                     	ds	1
  7272  00004A                     i2___ftadd@exp2:
  7273                           	opt stack 0
  7274                           
  7275                           ; 1 bytes @ 0x49
  7276  00004A                     	ds	1
  7277  00004B                     i2___ftadd@exp1:
  7278                           	opt stack 0
  7279  00004B                     i2___fttol@exp1:
  7280                           	opt stack 0
  7281                           
  7282                           ; 1 bytes @ 0x4A
  7283  00004B                     	ds	1
  7284  00004C                     ?_eval_poly:
  7285                           	opt stack 0
  7286  00004C                     ?___altoft:
  7287                           	opt stack 0
  7288  00004C                     eval_poly@x:
  7289                           	opt stack 0
  7290  00004C                     ___altoft@c:
  7291                           	opt stack 0
  7292                           
  7293                           ; 4 bytes @ 0x4B
  7294  00004C                     	ds	3
  7295  00004F                     eval_poly@d:
  7296                           	opt stack 0
  7297                           
  7298                           ; 2 bytes @ 0x4E
  7299  00004F                     	ds	1
  7300  000050                     ??___altoft:
  7301                           
  7302                           ; 1 bytes @ 0x4F
  7303  000050                     	ds	1
  7304  000051                     eval_poly@n:
  7305                           	opt stack 0
  7306                           
  7307                           ; 2 bytes @ 0x50
  7308  000051                     	ds	2
  7309  000053                     ??_eval_poly:
  7310                           
  7311                           ; 1 bytes @ 0x52
  7312  000053                     	ds	1
  7313  000054                     ___altoft@exp:
  7314                           	opt stack 0
  7315                           
  7316                           ; 1 bytes @ 0x53
  7317  000054                     	ds	1
  7318  000055                     ___altoft@sign:
  7319                           	opt stack 0
  7320  000055                     eval_poly@res:
  7321                           	opt stack 0
  7322                           
  7323                           ; 3 bytes @ 0x54
  7324  000055                     	ds	1
  7325  000056                     ?_floor:
  7326                           	opt stack 0
  7327  000056                     floor@x:
  7328                           	opt stack 0
  7329                           
  7330                           ; 3 bytes @ 0x55
  7331  000056                     	ds	2
  7332  000058                     ?_atan:
  7333                           	opt stack 0
  7334  000058                     atan@f:
  7335                           	opt stack 0
  7336                           
  7337                           ; 3 bytes @ 0x57
  7338  000058                     	ds	1
  7339  000059                     floor@i:
  7340                           	opt stack 0
  7341                           
  7342                           ; 3 bytes @ 0x58
  7343  000059                     	ds	2
  7344  00005B                     
  7345                           ; 1 bytes @ 0x5A
  7346  00005B                     	ds	1
  7347  00005C                     floor@expon:
  7348                           	opt stack 0
  7349                           
  7350                           ; 2 bytes @ 0x5B
  7351  00005C                     	ds	2
  7352  00005E                     tblptru	equ	0xFF8
  7353                           tblptrh	equ	0xFF7
  7354                           tblptrl	equ	0xFF6
  7355                           tablat	equ	0xFF5
  7356                           postinc0	equ	0xFEE
  7357                           wreg	equ	0xFE8
  7358                           postdec1	equ	0xFE5
  7359                           fsr1l	equ	0xFE1
  7360                           
  7361                           ; 1 bytes @ 0x5D
  7362 ;;
  7363 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7364 ;;
  7365 ;; *************** function _main *****************
  7366 ;; Defined at:
  7367 ;;		line 453 in file "main.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;		None
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;Total ram usage:        2 bytes
  7386 ;; Hardware stack levels required when called:   22
  7387 ;; This function calls:
  7388 ;;		_ADCC_SetADIInterruptHandler
  7389 ;;		_SYSTEM_Initialize
  7390 ;;		_TMR6_SetInterruptHandler
  7391 ;;		_TMR7_SetInterruptHandler
  7392 ;;		_getCauseOfReset
  7393 ;;		_terminal_clearTerminal
  7394 ;;		_terminal_ringBufferPull
  7395 ;;		_terminal_setCursorHome
  7396 ;;		_terminal_textAttributesReset
  7397 ;; This function is called by:
  7398 ;;		Startup code after reset
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text0
  7403  015EF8                     __ptext0:
  7404                           	opt stack 0
  7405  015EF8                     _main:
  7406                           	opt stack 9
  7407                           
  7408                           ;main.c: 457: reset_cause = getCauseOfReset();
  7409                           
  7410                           ;incstack = 0
  7411  015EF8  ECBB  F0B2         	call	_getCauseOfReset	;wreg free
  7412  015EFC  0101               	movlb	1	; () banked
  7413  015EFE  6FD5               	movwf	_reset_cause& (0+255),b
  7414                           
  7415                           ; BSR set to: 1
  7416                           ;main.c: 461: _delay((unsigned long)((250)*(64000000/4000.0)));
  7417  015F00  0E15               	movlw	21
  7418  015F02  0101               	movlb	1	; () banked
  7419  015F04  6FAE               	movwf	(??_main+1)& (0+255),b
  7420  015F06  0E4B               	movlw	75
  7421  015F08  6FAD               	movwf	??_main& (0+255),b
  7422  015F0A  0EBE               	movlw	190
  7423  015F0C                     u18137:
  7424  015F0C  2EE8               	decfsz	wreg,f,c
  7425  015F0E  D7FE               	bra	u18137
  7426  015F10  2FAD               	decfsz	??_main& (0+255),f,b
  7427  015F12  D7FC               	bra	u18137
  7428  015F14  2FAE               	decfsz	(??_main+1)& (0+255),f,b
  7429  015F16  D7FA               	bra	u18137
  7430  015F18  F000               	nop	
  7431                           
  7432                           ;main.c: 464: SYSTEM_Initialize();
  7433  015F1A  EC9B  F0B5         	call	_SYSTEM_Initialize	;wreg free
  7434                           
  7435                           ;main.c: 467: LATGbits.LATG0 = 0;
  7436  015F1E  907F               	bcf	3967,0,c	;volatile
  7437                           
  7438                           ;main.c: 468: LATGbits.LATG1 = 0;
  7439  015F20  927F               	bcf	3967,1,c	;volatile
  7440                           
  7441                           ;main.c: 469: load_enable = 0;
  7442  015F22  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7443                           
  7444                           ;main.c: 472: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7445  015F24  0EE4               	movlw	low _heartbeatTimerCallback
  7446  015F26  0101               	movlb	1	; () banked
  7447  015F28  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7448  015F2A  0E68               	movlw	high _heartbeatTimerCallback
  7449  015F2C  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7450  015F2E  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7451  015F30  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7452  015F32  EC23  F0B7         	call	_TMR6_SetInterruptHandler	;wreg free
  7453                           
  7454                           ;main.c: 475: ADCC_SetADIInterruptHandler(ADCPostProcessingCallback);
  7455  015F36  0EEA               	movlw	low _ADCPostProcessingCallback
  7456  015F38  0101               	movlb	1	; () banked
  7457  015F3A  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  7458  015F3C  0E22               	movlw	high _ADCPostProcessingCallback
  7459  015F3E  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  7460  015F40  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7461  015F42  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  7462  015F44  EC3F  F0B7         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7463                           
  7464                           ;main.c: 478: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7465  015F48  0EBA               	movlw	low _acquisitionTimerCallback
  7466  015F4A  0101               	movlb	1	; () banked
  7467  015F4C  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7468  015F4E  0E56               	movlw	high _acquisitionTimerCallback
  7469  015F50  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7470  015F52  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7471  015F54  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7472  015F56  EC1C  F0B7         	call	_TMR7_SetInterruptHandler	;wreg free
  7473                           
  7474                           ;main.c: 481: (INTCONbits.GIEH = 1);
  7475  015F5A  8EF2               	bsf	intcon,7,c	;volatile
  7476                           
  7477                           ;main.c: 484: (INTCONbits.GIEL = 1);
  7478  015F5C  8CF2               	bsf	intcon,6,c	;volatile
  7479                           
  7480                           ;main.c: 487: VCC_overvoltage_flag = 0;
  7481  015F5E  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  7482                           
  7483                           ;main.c: 490: terminal_clearTerminal();
  7484  015F60  ECFE  F0B6         	call	_terminal_clearTerminal	;wreg free
  7485                           
  7486                           ;main.c: 491: terminal_setCursorHome();
  7487  015F64  ECEE  F0B6         	call	_terminal_setCursorHome	;wreg free
  7488                           
  7489                           ;main.c: 492: terminal_textAttributesReset();
  7490  015F68  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  7491  015F6C                     
  7492                           ;main.c: 496: {
  7493                           ;main.c: 499: if (eusart2RxStringReady) {
  7494  015F6C  0100               	movlb	0	; () banked
  7495  015F6E  A1FE               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7496  015F70  D7FD               	goto	l996
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;main.c: 501: terminal_ringBufferPull();
  7500  015F72  EC4F  F0A6         	call	_terminal_ringBufferPull	;wreg free
  7501  015F76  D7FA               	goto	l996
  7502  015F78                     __end_of_main:
  7503                           	opt stack 0
  7504                           tblptru	equ	0xFF8
  7505                           tblptrh	equ	0xFF7
  7506                           tblptrl	equ	0xFF6
  7507                           tablat	equ	0xFF5
  7508                           intcon	equ	0xFF2
  7509                           postinc0	equ	0xFEE
  7510                           wreg	equ	0xFE8
  7511                           postdec1	equ	0xFE5
  7512                           fsr1l	equ	0xFE1
  7513                           
  7514 ;; *************** function _terminal_setCursorHome *****************
  7515 ;; Defined at:
  7516 ;;		line 85 in file "ring_buffer_interface.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:   18
  7537 ;; This function calls:
  7538 ;;		_printf
  7539 ;; This function is called by:
  7540 ;;		_main
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text1
  7545  016DDC                     __ptext1:
  7546                           	opt stack 0
  7547  016DDC                     _terminal_setCursorHome:
  7548                           	opt stack 12
  7549                           
  7550                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7551                           
  7552                           ;incstack = 0
  7553  016DDC  0EB9               	movlw	low STR_3
  7554  016DDE  0101               	movlb	1	; () banked
  7555  016DE0  6F64               	movwf	printf@f& (0+255),b
  7556  016DE2  0EFF               	movlw	high STR_3
  7557  016DE4  6F65               	movwf	(printf@f+1)& (0+255),b
  7558  016DE6  ECA4  F086         	call	_printf	;wreg free
  7559  016DEA  0012               	return		;funcret
  7560  016DEC                     __end_of_terminal_setCursorHome:
  7561                           	opt stack 0
  7562                           tblptru	equ	0xFF8
  7563                           tblptrh	equ	0xFF7
  7564                           tblptrl	equ	0xFF6
  7565                           tablat	equ	0xFF5
  7566                           intcon	equ	0xFF2
  7567                           postinc0	equ	0xFEE
  7568                           wreg	equ	0xFE8
  7569                           postdec1	equ	0xFE5
  7570                           fsr1l	equ	0xFE1
  7571                           
  7572 ;; *************** function _terminal_ringBufferPull *****************
  7573 ;; Defined at:
  7574 ;;		line 12 in file "ring_buffer_interface.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;		None
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  index           2  169[BANK1 ] int 
  7579 ;;  index           2  171[BANK1 ] int 
  7580 ;;  charNumber      2  167[BANK1 ] int 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      void 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;Total ram usage:        9 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:   21
  7597 ;; This function calls:
  7598 ;;		_EUSART2_Read
  7599 ;;		_ringBufferLUT
  7600 ;;		_strlen
  7601 ;; This function is called by:
  7602 ;;		_main
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text2
  7607  014C9E                     __ptext2:
  7608                           	opt stack 0
  7609  014C9E                     _terminal_ringBufferPull:
  7610                           	opt stack 9
  7611                           
  7612                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  7613                           
  7614                           ;incstack = 0
  7615  014C9E  C1D0  F1A7         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  7616  014CA2  0101               	movlb	1	; () banked
  7617  014CA4  6BA8               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  7618                           
  7619                           ; BSR set to: 1
  7620                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  7621  014CA6  0E00               	movlw	0
  7622  014CA8  6FAC               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  7623  014CAA  0E00               	movlw	0
  7624  014CAC  6FAB               	movwf	terminal_ringBufferPull@index& (0+255),b
  7625  014CAE                     l12075:
  7626                           
  7627                           ; BSR set to: 1
  7628  014CAE  BFAC               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  7629  014CB0  D006               	goto	l1035
  7630  014CB2  51AC               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7631  014CB4  E10F               	bnz	l12085
  7632  014CB6  0E40               	movlw	64
  7633  014CB8  5DAB               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  7634  014CBA  B0D8               	btfsc	status,0,c
  7635  014CBC  D00B               	goto	u14000
  7636  014CBE                     l1035:
  7637                           
  7638                           ; BSR set to: 1
  7639                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  7640                           
  7641                           ; BSR set to: 1
  7642  014CBE  0E40               	movlw	low _line
  7643  014CC0  25AB               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  7644  014CC2  6ED9               	movwf	fsr2l,c
  7645  014CC4  0E02               	movlw	high _line
  7646  014CC6  21AC               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7647  014CC8  6EDA               	movwf	fsr2h,c
  7648  014CCA  0E00               	movlw	0
  7649  014CCC  6EDF               	movwf	indf2,c
  7650                           
  7651                           ; BSR set to: 1
  7652  014CCE  4BAB               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  7653  014CD0  2BAC               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  7654  014CD2  D7ED               	goto	l12075
  7655  014CD4                     u14000:
  7656  014CD4                     l12085:
  7657                           
  7658                           ; BSR set to: 1
  7659                           ;ring_buffer_interface.c: 21: }
  7660                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  7661  014CD4  0E00               	movlw	0
  7662  014CD6  6FAA               	movwf	(terminal_ringBufferPull@index_2365+1)& (0+255),b
  7663  014CD8  0E00               	movlw	0
  7664  014CDA  6FA9               	movwf	terminal_ringBufferPull@index_2365& (0+255),b
  7665  014CDC  D00E               	goto	l1037
  7666  014CDE                     
  7667                           ; BSR set to: 1
  7668                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  7669                           
  7670                           ; BSR set to: 1
  7671  014CDE  ECC9  F0B3         	call	_EUSART2_Read	;wreg free
  7672  014CE2  0101               	movlb	1	; () banked
  7673  014CE4  6FA4               	movwf	??_terminal_ringBufferPull& (0+255),b
  7674  014CE6  0E40               	movlw	low _line
  7675  014CE8  25A9               	addwf	terminal_ringBufferPull@index_2365& (0+255),w,b
  7676  014CEA  6ED9               	movwf	fsr2l,c
  7677  014CEC  0E02               	movlw	high _line
  7678  014CEE  21AA               	addwfc	(terminal_ringBufferPull@index_2365+1)& (0+255),w,b
  7679  014CF0  6EDA               	movwf	fsr2h,c
  7680  014CF2  C1A4  FFDF         	movff	??_terminal_ringBufferPull,indf2
  7681                           
  7682                           ; BSR set to: 1
  7683  014CF6  4BA9               	infsnz	terminal_ringBufferPull@index_2365& (0+255),f,b
  7684  014CF8  2BAA               	incf	(terminal_ringBufferPull@index_2365+1)& (0+255),f,b
  7685  014CFA                     l1037:
  7686                           
  7687                           ; BSR set to: 1
  7688                           
  7689                           ; BSR set to: 1
  7690  014CFA  51A7               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  7691  014CFC  5DA9               	subwf	terminal_ringBufferPull@index_2365& (0+255),w,b
  7692  014CFE  51AA               	movf	(terminal_ringBufferPull@index_2365+1)& (0+255),w,b
  7693  014D00  0A80               	xorlw	128
  7694  014D02  6FA4               	movwf	??_terminal_ringBufferPull& (0+255),b
  7695  014D04  51A8               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  7696  014D06  0A80               	xorlw	128
  7697  014D08  59A4               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  7698  014D0A  A0D8               	btfss	status,0,c
  7699  014D0C  D7E8               	goto	l1038
  7700                           
  7701                           ; BSR set to: 1
  7702                           ;ring_buffer_interface.c: 28: }
  7703                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  7704  014D0E  C0EC  F1D1         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  7705                           
  7706                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  7707                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  7708  014D12  D017               	goto	l1040
  7709  014D14                     
  7710                           ; BSR set to: 1
  7711                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  7712                           
  7713                           ; BSR set to: 1
  7714  014D14  0EFF               	movlw	255
  7715  014D16  6FA4               	movwf	??_terminal_ringBufferPull& (0+255),b
  7716  014D18  0EFF               	movlw	255
  7717  014D1A  6FA5               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7718  014D1C  0E40               	movlw	low _line
  7719  014D1E  6F17               	movwf	strlen@s& (0+255),b
  7720  014D20  0E02               	movlw	high _line
  7721  014D22  6F18               	movwf	(strlen@s+1)& (0+255),b
  7722  014D24  EC64  F0B2         	call	_strlen	;wreg free
  7723  014D28  0101               	movlb	1	; () banked
  7724  014D2A  51A4               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7725  014D2C  2717               	addwf	?_strlen& (0+255),f,b
  7726  014D2E  51A5               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7727  014D30  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7728  014D32  0E40               	movlw	low _line
  7729  014D34  2517               	addwf	?_strlen& (0+255),w,b
  7730  014D36  6ED9               	movwf	fsr2l,c
  7731  014D38  0E02               	movlw	high _line
  7732  014D3A  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7733  014D3C  6EDA               	movwf	fsr2h,c
  7734  014D3E  0E00               	movlw	0
  7735  014D40  6EDF               	movwf	indf2,c
  7736  014D42                     l1040:
  7737                           
  7738                           ; BSR set to: 1
  7739  014D42  0EFF               	movlw	255
  7740  014D44  6FA4               	movwf	??_terminal_ringBufferPull& (0+255),b
  7741  014D46  0EFF               	movlw	255
  7742  014D48  6FA5               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7743  014D4A  0E40               	movlw	low _line
  7744  014D4C  6F17               	movwf	strlen@s& (0+255),b
  7745  014D4E  0E02               	movlw	high _line
  7746  014D50  6F18               	movwf	(strlen@s+1)& (0+255),b
  7747  014D52  EC64  F0B2         	call	_strlen	;wreg free
  7748  014D56  0101               	movlb	1	; () banked
  7749  014D58  51A4               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7750  014D5A  2717               	addwf	?_strlen& (0+255),f,b
  7751  014D5C  51A5               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7752  014D5E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7753  014D60  0E40               	movlw	low _line
  7754  014D62  2517               	addwf	?_strlen& (0+255),w,b
  7755  014D64  6ED9               	movwf	fsr2l,c
  7756  014D66  0E02               	movlw	high _line
  7757  014D68  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7758  014D6A  6EDA               	movwf	fsr2h,c
  7759  014D6C  0E0A               	movlw	10
  7760  014D6E  18DE               	xorwf	postinc2,w,c
  7761  014D70  B4D8               	btfsc	status,2,c
  7762  014D72  D7D0               	goto	l1041
  7763                           
  7764                           ; BSR set to: 1
  7765  014D74  0EFF               	movlw	255
  7766  014D76  6FA4               	movwf	??_terminal_ringBufferPull& (0+255),b
  7767  014D78  0EFF               	movlw	255
  7768  014D7A  6FA5               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7769  014D7C  0E40               	movlw	low _line
  7770  014D7E  6F17               	movwf	strlen@s& (0+255),b
  7771  014D80  0E02               	movlw	high _line
  7772  014D82  6F18               	movwf	(strlen@s+1)& (0+255),b
  7773  014D84  EC64  F0B2         	call	_strlen	;wreg free
  7774  014D88  0101               	movlb	1	; () banked
  7775  014D8A  51A4               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7776  014D8C  2717               	addwf	?_strlen& (0+255),f,b
  7777  014D8E  51A5               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7778  014D90  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7779  014D92  0E40               	movlw	low _line
  7780  014D94  2517               	addwf	?_strlen& (0+255),w,b
  7781  014D96  6ED9               	movwf	fsr2l,c
  7782  014D98  0E02               	movlw	high _line
  7783  014D9A  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7784  014D9C  6EDA               	movwf	fsr2h,c
  7785  014D9E  0E0D               	movlw	13
  7786  014DA0  18DE               	xorwf	postinc2,w,c
  7787  014DA2  B4D8               	btfsc	status,2,c
  7788  014DA4  D7B7               	goto	l1041
  7789                           
  7790                           ; BSR set to: 1
  7791                           ;ring_buffer_interface.c: 40: }
  7792                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  7793  014DA6  0100               	movlb	0	; () banked
  7794  014DA8  91FE               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  7798  014DAA  0E40               	movlw	low _line
  7799  014DAC  0101               	movlb	1	; () banked
  7800  014DAE  6FA0               	movwf	ringBufferLUT@line& (0+255),b
  7801  014DB0  0E02               	movlw	high _line
  7802  014DB2  6FA1               	movwf	(ringBufferLUT@line+1)& (0+255),b
  7803  014DB4  EC00  F080         	call	_ringBufferLUT	;wreg free
  7804  014DB8  0012               	return		;funcret
  7805  014DBA                     __end_of_terminal_ringBufferPull:
  7806                           	opt stack 0
  7807                           tblptru	equ	0xFF8
  7808                           tblptrh	equ	0xFF7
  7809                           tblptrl	equ	0xFF6
  7810                           tablat	equ	0xFF5
  7811                           intcon	equ	0xFF2
  7812                           postinc0	equ	0xFEE
  7813                           wreg	equ	0xFE8
  7814                           postdec1	equ	0xFE5
  7815                           fsr1l	equ	0xFE1
  7816                           indf2	equ	0xFDF
  7817                           postinc2	equ	0xFDE
  7818                           fsr2h	equ	0xFDA
  7819                           fsr2l	equ	0xFD9
  7820                           status	equ	0xFD8
  7821                           
  7822 ;; *************** function _ringBufferLUT *****************
  7823 ;; Defined at:
  7824 ;;		line 43 in file "ring_buffer_LUT.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  line            2  160[BANK1 ] PTR unsigned char 
  7827 ;;		 -> line(64), 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  angle_degree    3   22[BANK2 ] PTR unsigned char 
  7830 ;;  index           2   28[BANK2 ] int 
  7831 ;;  channel_name   22    0[BANK2 ] unsigned char [22]
  7832 ;;  userID          2   32[BANK2 ] int 
  7833 ;;  arg_buff        3   25[BANK2 ] unsigned char [3]
  7834 ;;  percentage      2   30[BANK2 ] int 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7844 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Totals:         0       0       4      34       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;Total ram usage:       38 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:   20
  7851 ;; This function calls:
  7852 ;;		_TMR7_StartTimer
  7853 ;;		___awtoft
  7854 ;;		___ftadd
  7855 ;;		___ftdiv
  7856 ;;		___ftmul
  7857 ;;		___ftneg
  7858 ;;		___wmul
  7859 ;;		_atoi
  7860 ;;		_getCauseOfResetString
  7861 ;;		_getDeviceID
  7862 ;;		_getDeviceIDString
  7863 ;;		_getMajorRevisionID
  7864 ;;		_getMinorRevisionID
  7865 ;;		_getUserID
  7866 ;;		_printf
  7867 ;;		_strcmp
  7868 ;;		_strcpy
  7869 ;;		_strstr
  7870 ;;		_terminal_printNewline
  7871 ;;		_terminal_textAttributes
  7872 ;;		_terminal_textAttributesReset
  7873 ;; This function is called by:
  7874 ;;		_terminal_ringBufferPull
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text3
  7879  010000                     __ptext3:
  7880                           	opt stack 0
  7881  010000                     _ringBufferLUT:
  7882                           	opt stack 9
  7883                           
  7884                           ;ring_buffer_LUT.c: 49: if((0 == strcmp(line, "Reset"))) {
  7885                           
  7886                           ;incstack = 0
  7887  010000  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7888  010004  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7889  010008  0E28               	movlw	low (STR_123+10)
  7890  01000A  0101               	movlb	1	; () banked
  7891  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  7892  01000E  0EFE               	movlw	high (STR_123+10)
  7893  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7894  010012  ECE4  F0B2         	call	_strcmp	;wreg free
  7895  010016  0101               	movlb	1	; () banked
  7896  010018  5117               	movf	?_strcmp& (0+255),w,b
  7897  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7898  01001C  A4D8               	btfss	status,2,c
  7899  01001E  D00F               	goto	l1184
  7900                           
  7901                           ; BSR set to: 1
  7902                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  7903  010020  0EB0               	movlw	low STR_2
  7904  010022  6F64               	movwf	printf@f& (0+255),b
  7905  010024  0EFF               	movlw	high STR_2
  7906  010026  6F65               	movwf	(printf@f+1)& (0+255),b
  7907  010028  ECA4  F086         	call	_printf	;wreg free
  7908                           
  7909                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  7910  01002C  0EB9               	movlw	low STR_3
  7911  01002E  0101               	movlb	1	; () banked
  7912  010030  6F64               	movwf	printf@f& (0+255),b
  7913  010032  0EFF               	movlw	high STR_3
  7914  010034  6F65               	movwf	(printf@f+1)& (0+255),b
  7915  010036  ECA4  F086         	call	_printf	;wreg free
  7916  01003A  00FF               	reset		;# 
  7917                           
  7918                           ;ring_buffer_LUT.c: 60: }
  7919  01003C  0012               	return	
  7920  01003E                     l1184:
  7921                           
  7922                           ;ring_buffer_LUT.c: 63: else if((0 == strcmp(line, "Clear"))) {
  7923  01003E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7924  010042  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7925  010046  0EA0               	movlw	low STR_44
  7926  010048  0101               	movlb	1	; () banked
  7927  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  7928  01004C  0EFF               	movlw	high STR_44
  7929  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7930  010050  ECE4  F0B2         	call	_strcmp	;wreg free
  7931  010054  0101               	movlb	1	; () banked
  7932  010056  5117               	movf	?_strcmp& (0+255),w,b
  7933  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7934  01005A  A4D8               	btfss	status,2,c
  7935  01005C  D00E               	goto	l1186
  7936                           
  7937                           ; BSR set to: 1
  7938                           ;ring_buffer_LUT.c: 66: printf("\033[2J");
  7939  01005E  0EB0               	movlw	low STR_2
  7940  010060  6F64               	movwf	printf@f& (0+255),b
  7941  010062  0EFF               	movlw	high STR_2
  7942  010064  6F65               	movwf	(printf@f+1)& (0+255),b
  7943  010066  ECA4  F086         	call	_printf	;wreg free
  7944                           
  7945                           ;ring_buffer_LUT.c: 69: printf("\033[H");
  7946  01006A  0EB9               	movlw	low STR_3
  7947  01006C  0101               	movlb	1	; () banked
  7948  01006E  6F64               	movwf	printf@f& (0+255),b
  7949  010070  0EFF               	movlw	high STR_3
  7950  010072  6F65               	movwf	(printf@f+1)& (0+255),b
  7951  010074  ECA4  F086         	call	_printf	;wreg free
  7952                           
  7953                           ;ring_buffer_LUT.c: 71: }
  7954  010078  0012               	return	
  7955  01007A                     l1186:
  7956                           
  7957                           ;ring_buffer_LUT.c: 74: else if((0 == strcmp(line, "Cause of Reset?"))) {
  7958  01007A  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7959  01007E  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7960  010082  0E5E               	movlw	low STR_47
  7961  010084  0101               	movlb	1	; () banked
  7962  010086  6F19               	movwf	strcmp@s2& (0+255),b
  7963  010088  0EFE               	movlw	high STR_47
  7964  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7965  01008C  ECE4  F0B2         	call	_strcmp	;wreg free
  7966  010090  0101               	movlb	1	; () banked
  7967  010092  5117               	movf	?_strcmp& (0+255),w,b
  7968  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7969  010096  A4D8               	btfss	status,2,c
  7970  010098  D01D               	goto	l1188
  7971                           
  7972                           ; BSR set to: 1
  7973                           ;ring_buffer_LUT.c: 77: terminal_printNewline();
  7974  01009A  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  7975                           
  7976                           ;ring_buffer_LUT.c: 79: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7977  01009E  0E00               	movlw	0
  7978  0100A0  0101               	movlb	1	; () banked
  7979  0100A2  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7980  0100A4  0E00               	movlw	0
  7981  0100A6  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7982  0100A8  0E02               	movlw	2
  7983  0100AA  EC19  F099         	call	_terminal_textAttributes
  7984                           
  7985                           ;ring_buffer_LUT.c: 82: printf("The cause of the most recent device reset was: %s\n\r",
  7986                           ;ring_buffer_LUT.c: 83: getCauseOfResetString(reset_cause));
  7987  0100AE  0E7F               	movlw	low STR_48
  7988  0100B0  0101               	movlb	1	; () banked
  7989  0100B2  6F64               	movwf	printf@f& (0+255),b
  7990  0100B4  0EF9               	movlw	high STR_48
  7991  0100B6  6F65               	movwf	(printf@f+1)& (0+255),b
  7992  0100B8  51D5               	movf	_reset_cause& (0+255),w,b
  7993  0100BA  EC6B  F0B5         	call	_getCauseOfResetString
  7994  0100BE  C117  F166         	movff	?_getCauseOfResetString,?_printf+2
  7995  0100C2  C118  F167         	movff	?_getCauseOfResetString+1,?_printf+3
  7996  0100C6  ECA4  F086         	call	_printf	;wreg free
  7997                           
  7998                           ;ring_buffer_LUT.c: 86: terminal_textAttributesReset();
  7999  0100CA  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8000                           
  8001                           ;ring_buffer_LUT.c: 88: terminal_printNewline();
  8002  0100CE  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8003                           
  8004                           ;ring_buffer_LUT.c: 90: }
  8005  0100D2  0012               	return	
  8006  0100D4                     l1188:
  8007                           
  8008                           ;ring_buffer_LUT.c: 93: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  8009  0100D4  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8010  0100D8  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8011  0100DC  0E9A               	movlw	low STR_49
  8012  0100DE  0101               	movlb	1	; () banked
  8013  0100E0  6F19               	movwf	strcmp@s2& (0+255),b
  8014  0100E2  0EFF               	movlw	high STR_49
  8015  0100E4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8016  0100E6  ECE4  F0B2         	call	_strcmp	;wreg free
  8017  0100EA  0101               	movlb	1	; () banked
  8018  0100EC  5117               	movf	?_strcmp& (0+255),w,b
  8019  0100EE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8020  0100F0  B4D8               	btfsc	status,2,c
  8021  0100F2  D00F               	goto	u12920
  8022                           
  8023                           ; BSR set to: 1
  8024  0100F4  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8025  0100F8  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8026  0100FC  0EB5               	movlw	low STR_50
  8027  0100FE  6F19               	movwf	strcmp@s2& (0+255),b
  8028  010100  0EFF               	movlw	high STR_50
  8029  010102  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8030  010104  ECE4  F0B2         	call	_strcmp	;wreg free
  8031  010108  0101               	movlb	1	; () banked
  8032  01010A  5117               	movf	?_strcmp& (0+255),w,b
  8033  01010C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8034  01010E  A4D8               	btfss	status,2,c
  8035  010110  D01D               	goto	l1190
  8036  010112                     u12920:
  8037                           
  8038                           ; BSR set to: 1
  8039                           ;ring_buffer_LUT.c: 96: terminal_printNewline();
  8040                           
  8041                           ; BSR set to: 1
  8042  010112  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8043                           
  8044                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8045  010116  0E00               	movlw	0
  8046  010118  0101               	movlb	1	; () banked
  8047  01011A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8048  01011C  0E00               	movlw	0
  8049  01011E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8050  010120  0E02               	movlw	2
  8051  010122  EC19  F099         	call	_terminal_textAttributes
  8052                           
  8053                           ;ring_buffer_LUT.c: 100: printf("AC Power Meter\n\r");
  8054  010126  0EFC               	movlw	low STR_51
  8055  010128  0101               	movlb	1	; () banked
  8056  01012A  6F64               	movwf	printf@f& (0+255),b
  8057  01012C  0EFD               	movlw	high STR_51
  8058  01012E  6F65               	movwf	(printf@f+1)& (0+255),b
  8059  010130  ECA4  F086         	call	_printf	;wreg free
  8060                           
  8061                           ;ring_buffer_LUT.c: 101: printf("Marquette University ELEN 3035 Final Project\n\r");
  8062  010134  0EE3               	movlw	low STR_52
  8063  010136  0101               	movlb	1	; () banked
  8064  010138  6F64               	movwf	printf@f& (0+255),b
  8065  01013A  0EF9               	movlw	high STR_52
  8066  01013C  6F65               	movwf	(printf@f+1)& (0+255),b
  8067  01013E  ECA4  F086         	call	_printf	;wreg free
  8068                           
  8069                           ;ring_buffer_LUT.c: 103: terminal_textAttributesReset();
  8070  010142  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8071                           
  8072                           ;ring_buffer_LUT.c: 105: terminal_printNewline();
  8073  010146  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8074                           
  8075                           ;ring_buffer_LUT.c: 107: }
  8076  01014A  0012               	return	
  8077  01014C                     l1190:
  8078                           
  8079                           ;ring_buffer_LUT.c: 110: else if((0 == strcmp(line, "Device ID?"))) {
  8080  01014C  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8081  010150  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8082  010154  0E5C               	movlw	low STR_53
  8083  010156  0101               	movlb	1	; () banked
  8084  010158  6F19               	movwf	strcmp@s2& (0+255),b
  8085  01015A  0EFF               	movlw	high STR_53
  8086  01015C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8087  01015E  ECE4  F0B2         	call	_strcmp	;wreg free
  8088  010162  0101               	movlb	1	; () banked
  8089  010164  5117               	movf	?_strcmp& (0+255),w,b
  8090  010166  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8091  010168  A4D8               	btfss	status,2,c
  8092  01016A  D028               	goto	l1194
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;ring_buffer_LUT.c: 113: terminal_printNewline();
  8096  01016C  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8097                           
  8098                           ;ring_buffer_LUT.c: 115: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8099  010170  0E00               	movlw	0
  8100  010172  0101               	movlb	1	; () banked
  8101  010174  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8102  010176  0E00               	movlw	0
  8103  010178  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8104  01017A  0E02               	movlw	2
  8105  01017C  EC19  F099         	call	_terminal_textAttributes
  8106                           
  8107                           ;ring_buffer_LUT.c: 118: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  8108                           ;ring_buffer_LUT.c: 119: "part number of %s\n\r",
  8109                           ;ring_buffer_LUT.c: 120: getDeviceID(),
  8110                           ;ring_buffer_LUT.c: 121: getDeviceIDString(getDeviceID()));
  8111  010180  0ED4               	movlw	low STR_54
  8112  010182  0101               	movlb	1	; () banked
  8113  010184  6F64               	movwf	printf@f& (0+255),b
  8114  010186  0EF6               	movlw	high STR_54
  8115  010188  6F65               	movwf	(printf@f+1)& (0+255),b
  8116  01018A  EC6F  F0B6         	call	_getDeviceID	;wreg free
  8117  01018E  C122  F166         	movff	?_getDeviceID,?_printf+2
  8118  010192  C123  F167         	movff	?_getDeviceID+1,?_printf+3
  8119  010196  EC6F  F0B6         	call	_getDeviceID	;wreg free
  8120  01019A  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  8121  01019E  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  8122  0101A2  ECA7  F0B1         	call	_getDeviceIDString	;wreg free
  8123  0101A6  C124  F168         	movff	?_getDeviceIDString,?_printf+4
  8124  0101AA  C125  F169         	movff	?_getDeviceIDString+1,?_printf+5
  8125  0101AE  ECA4  F086         	call	_printf	;wreg free
  8126                           
  8127                           ;ring_buffer_LUT.c: 124: terminal_textAttributesReset();
  8128  0101B2  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8129                           
  8130                           ;ring_buffer_LUT.c: 126: terminal_printNewline();
  8131  0101B6  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8132                           
  8133                           ;ring_buffer_LUT.c: 128: }
  8134  0101BA  0012               	return	
  8135  0101BC                     l1194:
  8136                           
  8137                           ;ring_buffer_LUT.c: 131: else if((0 == strcmp(line, "Revision ID?"))) {
  8138  0101BC  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8139  0101C0  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8140  0101C4  0E1D               	movlw	low STR_55
  8141  0101C6  0101               	movlb	1	; () banked
  8142  0101C8  6F19               	movwf	strcmp@s2& (0+255),b
  8143  0101CA  0EFF               	movlw	high STR_55
  8144  0101CC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8145  0101CE  ECE4  F0B2         	call	_strcmp	;wreg free
  8146  0101D2  0101               	movlb	1	; () banked
  8147  0101D4  5117               	movf	?_strcmp& (0+255),w,b
  8148  0101D6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8149  0101D8  A4D8               	btfss	status,2,c
  8150  0101DA  D027               	goto	l1196
  8151                           
  8152                           ; BSR set to: 1
  8153                           ;ring_buffer_LUT.c: 134: terminal_printNewline();
  8154  0101DC  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8155                           
  8156                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8157  0101E0  0E00               	movlw	0
  8158  0101E2  0101               	movlb	1	; () banked
  8159  0101E4  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8160  0101E6  0E00               	movlw	0
  8161  0101E8  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8162  0101EA  0E02               	movlw	2
  8163  0101EC  EC19  F099         	call	_terminal_textAttributes
  8164                           
  8165                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%d\
      +                          n\r",
  8166                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  8167  0101F0  0E6B               	movlw	low STR_56
  8168  0101F2  0101               	movlb	1	; () banked
  8169  0101F4  6F64               	movwf	printf@f& (0+255),b
  8170  0101F6  0EF8               	movlw	high STR_56
  8171  0101F8  6F65               	movwf	(printf@f+1)& (0+255),b
  8172  0101FA  EC91  F0B4         	call	_getMajorRevisionID	;wreg free
  8173  0101FE  0101               	movlb	1	; () banked
  8174  010200  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  8175  010202  0E41               	movlw	65
  8176  010204  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  8177  010206  6F66               	movwf	(?_printf+2)& (0+255),b
  8178  010208  6B67               	clrf	(?_printf+3)& (0+255),b
  8179  01020A  0E00               	movlw	0
  8180  01020C  2367               	addwfc	(?_printf+3)& (0+255),f,b
  8181  01020E  ECEE  F0B5         	call	_getMinorRevisionID	;wreg free
  8182  010212  0101               	movlb	1	; () banked
  8183  010214  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8184  010216  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  8185  010218  6F68               	movwf	(?_printf+4)& (0+255),b
  8186  01021A  6B69               	clrf	(?_printf+5)& (0+255),b
  8187  01021C  ECA4  F086         	call	_printf	;wreg free
  8188                           
  8189                           ;ring_buffer_LUT.c: 143: terminal_textAttributesReset();
  8190  010220  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8191                           
  8192                           ;ring_buffer_LUT.c: 145: terminal_printNewline();
  8193  010224  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8194                           
  8195                           ;ring_buffer_LUT.c: 147: }
  8196  010228  0012               	return	
  8197  01022A                     l1196:
  8198                           
  8199                           ;ring_buffer_LUT.c: 150: else if((0 == strcmp(line, "User IDs?"))) {
  8200  01022A  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8201  01022E  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8202  010232  0E72               	movlw	low STR_57
  8203  010234  0101               	movlb	1	; () banked
  8204  010236  6F19               	movwf	strcmp@s2& (0+255),b
  8205  010238  0EFF               	movlw	high STR_57
  8206  01023A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8207  01023C  ECE4  F0B2         	call	_strcmp	;wreg free
  8208  010240  0101               	movlb	1	; () banked
  8209  010242  5117               	movf	?_strcmp& (0+255),w,b
  8210  010244  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8211  010246  A4D8               	btfss	status,2,c
  8212  010248  D043               	goto	l1198
  8213                           
  8214                           ; BSR set to: 1
  8215                           ;ring_buffer_LUT.c: 153: terminal_printNewline();
  8216  01024A  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8217                           
  8218                           ;ring_buffer_LUT.c: 155: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8219  01024E  0E00               	movlw	0
  8220  010250  0101               	movlb	1	; () banked
  8221  010252  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8222  010254  0E00               	movlw	0
  8223  010256  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8224  010258  0E02               	movlw	2
  8225  01025A  EC19  F099         	call	_terminal_textAttributes
  8226                           
  8227                           ;ring_buffer_LUT.c: 157: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8228  01025E  0EB2               	movlw	low STR_58
  8229  010260  0101               	movlb	1	; () banked
  8230  010262  6F64               	movwf	printf@f& (0+255),b
  8231  010264  0EF7               	movlw	high STR_58
  8232  010266  6F65               	movwf	(printf@f+1)& (0+255),b
  8233  010268  ECA4  F086         	call	_printf	;wreg free
  8234                           
  8235                           ;ring_buffer_LUT.c: 160: for (int userID = 0; userID <= 7; userID++) {
  8236  01026C  0E00               	movlw	0
  8237  01026E  0102               	movlb	2	; () banked
  8238  010270  6FA1               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8239  010272  0E00               	movlw	0
  8240  010274  6FA0               	movwf	ringBufferLUT@userID& (0+255),b
  8241  010276                     l11475:
  8242                           
  8243                           ; BSR set to: 2
  8244  010276  BFA1               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8245  010278  D006               	goto	l1199
  8246  01027A  51A1               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8247  01027C  E124               	bnz	l11485
  8248  01027E  0E08               	movlw	8
  8249  010280  5DA0               	subwf	ringBufferLUT@userID& (0+255),w,b
  8250  010282  B0D8               	btfsc	status,0,c
  8251  010284  D020               	goto	u12970
  8252  010286                     l1199:
  8253                           
  8254                           ; BSR set to: 2
  8255                           ;ring_buffer_LUT.c: 162: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  8256                           ;ring_buffer_LUT.c: 163: userID,
  8257                           ;ring_buffer_LUT.c: 164: (2 * userID),
  8258                           ;ring_buffer_LUT.c: 165: getUserID(userID));
  8259                           
  8260                           ; BSR set to: 2
  8261  010286  0E14               	movlw	low STR_59
  8262  010288  0101               	movlb	1	; () banked
  8263  01028A  6F64               	movwf	printf@f& (0+255),b
  8264  01028C  0EF9               	movlw	high STR_59
  8265  01028E  6F65               	movwf	(printf@f+1)& (0+255),b
  8266  010290  C2A0  F166         	movff	ringBufferLUT@userID,?_printf+2
  8267  010294  C2A1  F167         	movff	ringBufferLUT@userID+1,?_printf+3
  8268  010298  90D8               	bcf	status,0,c
  8269  01029A  0102               	movlb	2	; () banked
  8270  01029C  35A0               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8271  01029E  0101               	movlb	1	; () banked
  8272  0102A0  6F68               	movwf	(?_printf+4)& (0+255),b
  8273  0102A2  0102               	movlb	2	; () banked
  8274  0102A4  35A1               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8275  0102A6  0101               	movlb	1	; () banked
  8276  0102A8  6F69               	movwf	(?_printf+5)& (0+255),b
  8277  0102AA  0102               	movlb	2	; () banked
  8278  0102AC  51A0               	movf	ringBufferLUT@userID& (0+255),w,b
  8279  0102AE  ECED  F0B3         	call	_getUserID
  8280  0102B2  C122  F16A         	movff	?_getUserID,?_printf+6
  8281  0102B6  C123  F16B         	movff	?_getUserID+1,?_printf+7
  8282  0102BA  ECA4  F086         	call	_printf	;wreg free
  8283  0102BE  0102               	movlb	2	; () banked
  8284  0102C0  4BA0               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8285  0102C2  2BA1               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8286  0102C4  D7D8               	goto	l11475
  8287  0102C6                     u12970:
  8288  0102C6                     l11485:
  8289                           
  8290                           ; BSR set to: 2
  8291                           ;ring_buffer_LUT.c: 167: }
  8292                           ;ring_buffer_LUT.c: 170: terminal_textAttributesReset();
  8293  0102C6  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8294                           
  8295                           ;ring_buffer_LUT.c: 172: terminal_printNewline();
  8296  0102CA  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8297                           
  8298                           ;ring_buffer_LUT.c: 174: }
  8299  0102CE  0012               	return	
  8300  0102D0                     l1198:
  8301                           
  8302                           ;ring_buffer_LUT.c: 177: else if((0 == strcmp(line, "ADC Error?"))) {
  8303  0102D0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8304  0102D4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8305  0102D8  0E67               	movlw	low STR_60
  8306  0102DA  0101               	movlb	1	; () banked
  8307  0102DC  6F19               	movwf	strcmp@s2& (0+255),b
  8308  0102DE  0EFF               	movlw	high STR_60
  8309  0102E0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8310  0102E2  ECE4  F0B2         	call	_strcmp	;wreg free
  8311  0102E6  0101               	movlb	1	; () banked
  8312  0102E8  5117               	movf	?_strcmp& (0+255),w,b
  8313  0102EA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8314  0102EC  A4D8               	btfss	status,2,c
  8315  0102EE  D0AD               	goto	l1202
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;ring_buffer_LUT.c: 179: if (adc_error_flag) {
  8319  0102F0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8320  0102F2  D095               	goto	l1203
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;ring_buffer_LUT.c: 182: terminal_printNewline();
  8324  0102F4  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8325                           
  8326                           ;ring_buffer_LUT.c: 184: terminal_textAttributes(RED, BLACK, NORMAL);
  8327  0102F8  0E00               	movlw	0
  8328  0102FA  0101               	movlb	1	; () banked
  8329  0102FC  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8330  0102FE  0E00               	movlw	0
  8331  010300  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8332  010302  0E01               	movlw	1
  8333  010304  EC19  F099         	call	_terminal_textAttributes
  8334                           
  8335                           ;ring_buffer_LUT.c: 187: current_adc_channel = ADPCH;
  8336  010308  CF5F F1CF          	movff	3935,_current_adc_channel	;volatile
  8337                           
  8338                           ;ring_buffer_LUT.c: 190: char channel_name[22];
  8339                           ;ring_buffer_LUT.c: 192: switch (current_adc_channel) {
  8340  01030C  D060               	goto	l1204
  8341  01030E                     
  8342                           ;ring_buffer_LUT.c: 195: strcpy(channel_name, "ISNS");
  8343  01030E  0E80               	movlw	low ringBufferLUT@channel_name
  8344  010310  0101               	movlb	1	; () banked
  8345  010312  6F17               	movwf	strcpy@to& (0+255),b
  8346  010314  0E02               	movlw	high ringBufferLUT@channel_name
  8347  010316  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8348  010318  0EA6               	movlw	low STR_61
  8349  01031A  6F19               	movwf	strcpy@from& (0+255),b
  8350  01031C  0EFF               	movlw	high STR_61
  8351  01031E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8352  010320  ECE8  F0B4         	call	_strcpy	;wreg free
  8353                           
  8354                           ;ring_buffer_LUT.c: 196: break;
  8355  010324  D06C               	goto	l1206
  8356  010326                     
  8357                           ;ring_buffer_LUT.c: 199: strcpy(channel_name, "POS12");
  8358  010326  0E80               	movlw	low ringBufferLUT@channel_name
  8359  010328  0101               	movlb	1	; () banked
  8360  01032A  6F17               	movwf	strcpy@to& (0+255),b
  8361  01032C  0E02               	movlw	high ringBufferLUT@channel_name
  8362  01032E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8363  010330  0E94               	movlw	low STR_62
  8364  010332  6F19               	movwf	strcpy@from& (0+255),b
  8365  010334  0EFF               	movlw	high STR_62
  8366  010336  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8367  010338  ECE8  F0B4         	call	_strcpy	;wreg free
  8368                           
  8369                           ;ring_buffer_LUT.c: 200: break;
  8370  01033C  D060               	goto	l1206
  8371  01033E                     
  8372                           ;ring_buffer_LUT.c: 203: strcpy(channel_name, "POS3P3");
  8373  01033E  0E80               	movlw	low ringBufferLUT@channel_name
  8374  010340  0101               	movlb	1	; () banked
  8375  010342  6F17               	movwf	strcpy@to& (0+255),b
  8376  010344  0E02               	movlw	high ringBufferLUT@channel_name
  8377  010346  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8378  010348  0E8D               	movlw	low STR_63
  8379  01034A  6F19               	movwf	strcpy@from& (0+255),b
  8380  01034C  0EFF               	movlw	high STR_63
  8381  01034E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8382  010350  ECE8  F0B4         	call	_strcpy	;wreg free
  8383                           
  8384                           ;ring_buffer_LUT.c: 204: break;
  8385  010354  D054               	goto	l1206
  8386  010356                     
  8387                           ;ring_buffer_LUT.c: 207: strcpy(channel_name, "Internal AVSS");
  8388  010356  0E80               	movlw	low ringBufferLUT@channel_name
  8389  010358  0101               	movlb	1	; () banked
  8390  01035A  6F17               	movwf	strcpy@to& (0+255),b
  8391  01035C  0E02               	movlw	high ringBufferLUT@channel_name
  8392  01035E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8393  010360  0EF4               	movlw	low STR_64
  8394  010362  6F19               	movwf	strcpy@from& (0+255),b
  8395  010364  0EFE               	movlw	high STR_64
  8396  010366  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8397  010368  ECE8  F0B4         	call	_strcpy	;wreg free
  8398                           
  8399                           ;ring_buffer_LUT.c: 208: break;
  8400  01036C  D048               	goto	l1206
  8401  01036E                     
  8402                           ;ring_buffer_LUT.c: 211: strcpy(channel_name, "Internal Temp");
  8403  01036E  0E80               	movlw	low ringBufferLUT@channel_name
  8404  010370  0101               	movlb	1	; () banked
  8405  010372  6F17               	movwf	strcpy@to& (0+255),b
  8406  010374  0E02               	movlw	high ringBufferLUT@channel_name
  8407  010376  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8408  010378  0E02               	movlw	low STR_65
  8409  01037A  6F19               	movwf	strcpy@from& (0+255),b
  8410  01037C  0EFF               	movlw	high STR_65
  8411  01037E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8412  010380  ECE8  F0B4         	call	_strcpy	;wreg free
  8413                           
  8414                           ;ring_buffer_LUT.c: 212: break;
  8415  010384  D03C               	goto	l1206
  8416  010386                     
  8417                           ;ring_buffer_LUT.c: 215: strcpy(channel_name, "Internal DAC1");
  8418  010386  0E80               	movlw	low ringBufferLUT@channel_name
  8419  010388  0101               	movlb	1	; () banked
  8420  01038A  6F17               	movwf	strcpy@to& (0+255),b
  8421  01038C  0E02               	movlw	high ringBufferLUT@channel_name
  8422  01038E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8423  010390  0ECA               	movlw	low STR_66
  8424  010392  6F19               	movwf	strcpy@from& (0+255),b
  8425  010394  0EFE               	movlw	high STR_66
  8426  010396  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8427  010398  ECE8  F0B4         	call	_strcpy	;wreg free
  8428                           
  8429                           ;ring_buffer_LUT.c: 216: break;
  8430  01039C  D030               	goto	l1206
  8431  01039E                     
  8432                           ;ring_buffer_LUT.c: 219: strcpy(channel_name, "Internal FVR Buffer 1");
  8433  01039E  0E80               	movlw	low ringBufferLUT@channel_name
  8434  0103A0  0101               	movlb	1	; () banked
  8435  0103A2  6F17               	movwf	strcpy@to& (0+255),b
  8436  0103A4  0E02               	movlw	high ringBufferLUT@channel_name
  8437  0103A6  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8438  0103A8  0E5C               	movlw	low STR_67
  8439  0103AA  6F19               	movwf	strcpy@from& (0+255),b
  8440  0103AC  0EFD               	movlw	high STR_67
  8441  0103AE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8442  0103B0  ECE8  F0B4         	call	_strcpy	;wreg free
  8443                           
  8444                           ;ring_buffer_LUT.c: 220: break;
  8445  0103B4  D024               	goto	l1206
  8446  0103B6                     
  8447                           ;ring_buffer_LUT.c: 223: strcpy(channel_name, "Undefined");
  8448  0103B6  0E80               	movlw	low ringBufferLUT@channel_name
  8449  0103B8  0101               	movlb	1	; () banked
  8450  0103BA  6F17               	movwf	strcpy@to& (0+255),b
  8451  0103BC  0E02               	movlw	high ringBufferLUT@channel_name
  8452  0103BE  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8453  0103C0  0E7C               	movlw	low STR_68
  8454  0103C2  6F19               	movwf	strcpy@from& (0+255),b
  8455  0103C4  0EFF               	movlw	high STR_68
  8456  0103C6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8457  0103C8  ECE8  F0B4         	call	_strcpy	;wreg free
  8458                           
  8459                           ;ring_buffer_LUT.c: 226: }
  8460                           
  8461                           ;ring_buffer_LUT.c: 224: break;
  8462  0103CC  D018               	goto	l1206
  8463  0103CE                     l1204:
  8464  0103CE  0101               	movlb	1	; () banked
  8465  0103D0  51CF               	movf	_current_adc_channel& (0+255),w,b
  8466                           
  8467                           ; Switch size 1, requested type "space"
  8468                           ; Number of cases is 7, Range of values is 0 to 63
  8469                           ; switch strategies available:
  8470                           ; Name         Instructions Cycles
  8471                           ; simple_byte           22    12 (average)
  8472                           ;	Chosen strategy is simple_byte
  8473  0103D2  0A00               	xorlw	0	; case 0
  8474  0103D4  B4D8               	btfsc	status,2,c
  8475  0103D6  D79B               	goto	l1205
  8476  0103D8  0A04               	xorlw	4	; case 4
  8477  0103DA  B4D8               	btfsc	status,2,c
  8478  0103DC  D7A4               	goto	l1207
  8479  0103DE  0A26               	xorlw	38	; case 34
  8480  0103E0  B4D8               	btfsc	status,2,c
  8481  0103E2  D7AD               	goto	l1208
  8482  0103E4  0A1E               	xorlw	30	; case 60
  8483  0103E6  B4D8               	btfsc	status,2,c
  8484  0103E8  D7B6               	goto	l1209
  8485  0103EA  0A01               	xorlw	1	; case 61
  8486  0103EC  B4D8               	btfsc	status,2,c
  8487  0103EE  D7BF               	goto	l1210
  8488  0103F0  0A03               	xorlw	3	; case 62
  8489  0103F2  B4D8               	btfsc	status,2,c
  8490  0103F4  D7C8               	goto	l1211
  8491  0103F6  0A01               	xorlw	1	; case 63
  8492  0103F8  B4D8               	btfsc	status,2,c
  8493  0103FA  D7D1               	goto	l1212
  8494  0103FC  D7DC               	goto	l1213
  8495  0103FE                     l1206:
  8496                           
  8497                           ;ring_buffer_LUT.c: 229: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8498                           
  8499                           ; BSR set to: 1
  8500  0103FE  0EB3               	movlw	low STR_69
  8501  010400  0101               	movlb	1	; () banked
  8502  010402  6F64               	movwf	printf@f& (0+255),b
  8503  010404  0EF9               	movlw	high STR_69
  8504  010406  6F65               	movwf	(printf@f+1)& (0+255),b
  8505  010408  0E80               	movlw	low ringBufferLUT@channel_name
  8506  01040A  6F66               	movwf	(?_printf+2)& (0+255),b
  8507  01040C  0E02               	movlw	high ringBufferLUT@channel_name
  8508  01040E  6F67               	movwf	(?_printf+3)& (0+255),b
  8509  010410  ECA4  F086         	call	_printf	;wreg free
  8510                           
  8511                           ;ring_buffer_LUT.c: 231: terminal_textAttributesReset();
  8512  010414  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8513                           
  8514                           ;ring_buffer_LUT.c: 233: terminal_printNewline();
  8515  010418  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8516                           
  8517                           ;ring_buffer_LUT.c: 235: }
  8518  01041C  0012               	return	
  8519  01041E                     l1203:
  8520                           
  8521                           ;ring_buffer_LUT.c: 237: else {
  8522                           ;ring_buffer_LUT.c: 240: terminal_printNewline();
  8523  01041E  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8524                           
  8525                           ;ring_buffer_LUT.c: 242: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8526  010422  0E00               	movlw	0
  8527  010424  0101               	movlb	1	; () banked
  8528  010426  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8529  010428  0E00               	movlw	0
  8530  01042A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8531  01042C  0E02               	movlw	2
  8532  01042E  EC19  F099         	call	_terminal_textAttributes
  8533                           
  8534                           ;ring_buffer_LUT.c: 243: printf("No ADC Error detected\n\r");
  8535  010432  0E17               	movlw	low STR_70
  8536  010434  0101               	movlb	1	; () banked
  8537  010436  6F64               	movwf	printf@f& (0+255),b
  8538  010438  0EFD               	movlw	high STR_70
  8539  01043A  6F65               	movwf	(printf@f+1)& (0+255),b
  8540  01043C  ECA4  F086         	call	_printf	;wreg free
  8541                           
  8542                           ;ring_buffer_LUT.c: 245: terminal_textAttributesReset();
  8543  010440  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8544                           
  8545                           ;ring_buffer_LUT.c: 247: terminal_printNewline();
  8546  010444  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8547                           
  8548                           ;ring_buffer_LUT.c: 249: }
  8549                           ;ring_buffer_LUT.c: 251: }
  8550  010448  0012               	return	
  8551  01044A                     l1202:
  8552                           
  8553                           ;ring_buffer_LUT.c: 254: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8554  01044A  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8555  01044E  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8556  010452  0E7E               	movlw	low STR_71
  8557  010454  0101               	movlb	1	; () banked
  8558  010456  6F19               	movwf	strcmp@s2& (0+255),b
  8559  010458  0EFE               	movlw	high STR_71
  8560  01045A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8561  01045C  ECE4  F0B2         	call	_strcmp	;wreg free
  8562  010460  0101               	movlb	1	; () banked
  8563  010462  5117               	movf	?_strcmp& (0+255),w,b
  8564  010464  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8565  010466  A4D8               	btfss	status,2,c
  8566  010468  D01C               	goto	l1216
  8567                           
  8568                           ; BSR set to: 1
  8569                           ;ring_buffer_LUT.c: 256: LATFbits.LATF3 = 0;
  8570  01046A  967E               	bcf	3966,3,c	;volatile
  8571                           
  8572                           ;ring_buffer_LUT.c: 257: adc_error_flag = 0;
  8573  01046C  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8574                           
  8575                           ; BSR set to: 1
  8576                           ;ring_buffer_LUT.c: 259: PIE5bits.TMR7IE == 1;
  8577  01046E  010E               	movlb	14	; () banked
  8578  010470  512E               	movf	46,w,b	;volatile
  8579                           
  8580                           ; BSR set to: 14
  8581                           ;ring_buffer_LUT.c: 260: TMR7_StartTimer();
  8582  010472  EC60  F0B7         	call	_TMR7_StartTimer	;wreg free
  8583                           
  8584                           ;ring_buffer_LUT.c: 263: terminal_printNewline();
  8585  010476  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8586                           
  8587                           ;ring_buffer_LUT.c: 265: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8588  01047A  0E00               	movlw	0
  8589  01047C  0101               	movlb	1	; () banked
  8590  01047E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8591  010480  0E00               	movlw	0
  8592  010482  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8593  010484  0E02               	movlw	2
  8594  010486  EC19  F099         	call	_terminal_textAttributes
  8595                           
  8596                           ;ring_buffer_LUT.c: 266: printf("Clearing ADC Error\n\r");
  8597  01048A  0E87               	movlw	low STR_72
  8598  01048C  0101               	movlb	1	; () banked
  8599  01048E  6F64               	movwf	printf@f& (0+255),b
  8600  010490  0EFD               	movlw	high STR_72
  8601  010492  6F65               	movwf	(printf@f+1)& (0+255),b
  8602  010494  ECA4  F086         	call	_printf	;wreg free
  8603                           
  8604                           ;ring_buffer_LUT.c: 268: terminal_textAttributesReset();
  8605  010498  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8606                           
  8607                           ;ring_buffer_LUT.c: 270: terminal_printNewline();
  8608  01049C  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8609                           
  8610                           ;ring_buffer_LUT.c: 273: }
  8611  0104A0  0012               	return	
  8612  0104A2                     l1216:
  8613                           
  8614                           ;ring_buffer_LUT.c: 276: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  8615  0104A2  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8616  0104A6  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8617  0104AA  0E0D               	movlw	low STR_73
  8618  0104AC  0101               	movlb	1	; () banked
  8619  0104AE  6F19               	movwf	strcmp@s2& (0+255),b
  8620  0104B0  0EFE               	movlw	high STR_73
  8621  0104B2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8622  0104B4  ECE4  F0B2         	call	_strcmp	;wreg free
  8623  0104B8  0101               	movlb	1	; () banked
  8624  0104BA  5117               	movf	?_strcmp& (0+255),w,b
  8625  0104BC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8626  0104BE  A4D8               	btfss	status,2,c
  8627  0104C0  D02F               	goto	l1218
  8628                           
  8629                           ; BSR set to: 1
  8630                           ;ring_buffer_LUT.c: 279: if (VCC_overvoltage_flag == 1) {
  8631  0104C2  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8632  0104C4  D017               	goto	l1219
  8633                           
  8634                           ; BSR set to: 1
  8635                           ;ring_buffer_LUT.c: 282: terminal_printNewline();
  8636  0104C6  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8637                           
  8638                           ;ring_buffer_LUT.c: 284: terminal_textAttributes(RED, BLACK, NORMAL);
  8639  0104CA  0E00               	movlw	0
  8640  0104CC  0101               	movlb	1	; () banked
  8641  0104CE  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8642  0104D0  0E00               	movlw	0
  8643  0104D2  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8644  0104D4  0E01               	movlw	1
  8645  0104D6  EC19  F099         	call	_terminal_textAttributes
  8646                           
  8647                           ;ring_buffer_LUT.c: 285: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  8648  0104DA  0E70               	movlw	low STR_74
  8649  0104DC  0101               	movlb	1	; () banked
  8650  0104DE  6F64               	movwf	printf@f& (0+255),b
  8651  0104E0  0EF7               	movlw	high STR_74
  8652  0104E2  6F65               	movwf	(printf@f+1)& (0+255),b
  8653  0104E4  ECA4  F086         	call	_printf	;wreg free
  8654                           
  8655                           ;ring_buffer_LUT.c: 287: terminal_textAttributesReset();
  8656  0104E8  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8657                           
  8658                           ;ring_buffer_LUT.c: 289: terminal_printNewline();
  8659  0104EC  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8660                           
  8661                           ;ring_buffer_LUT.c: 292: VCC_overvoltage_flag = 0;
  8662  0104F0  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8663                           
  8664                           ;ring_buffer_LUT.c: 294: }
  8665  0104F2  0012               	return	
  8666  0104F4                     l1219:
  8667                           
  8668                           ;ring_buffer_LUT.c: 296: else {
  8669                           ;ring_buffer_LUT.c: 299: terminal_printNewline();
  8670  0104F4  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8671                           
  8672                           ;ring_buffer_LUT.c: 301: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8673  0104F8  0E00               	movlw	0
  8674  0104FA  0101               	movlb	1	; () banked
  8675  0104FC  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8676  0104FE  0E00               	movlw	0
  8677  010500  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8678  010502  0E02               	movlw	2
  8679  010504  EC19  F099         	call	_terminal_textAttributes
  8680                           
  8681                           ;ring_buffer_LUT.c: 302: printf("VCC Overvoltage condition has not occurred\n\r");
  8682  010508  0E40               	movlw	low STR_75
  8683  01050A  0101               	movlb	1	; () banked
  8684  01050C  6F64               	movwf	printf@f& (0+255),b
  8685  01050E  0EFA               	movlw	high STR_75
  8686  010510  6F65               	movwf	(printf@f+1)& (0+255),b
  8687  010512  ECA4  F086         	call	_printf	;wreg free
  8688                           
  8689                           ;ring_buffer_LUT.c: 304: terminal_textAttributesReset();
  8690  010516  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8691                           
  8692                           ;ring_buffer_LUT.c: 306: terminal_printNewline();
  8693  01051A  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8694                           
  8695                           ;ring_buffer_LUT.c: 308: }
  8696                           ;ring_buffer_LUT.c: 310: }
  8697  01051E  0012               	return	
  8698  010520                     l1218:
  8699                           
  8700                           ;ring_buffer_LUT.c: 313: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  8701  010520  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8702  010524  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8703  010528  0E3E               	movlw	low STR_76
  8704  01052A  0101               	movlb	1	; () banked
  8705  01052C  6F19               	movwf	strcmp@s2& (0+255),b
  8706  01052E  0EFE               	movlw	high STR_76
  8707  010530  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8708  010532  ECE4  F0B2         	call	_strcmp	;wreg free
  8709  010536  0101               	movlb	1	; () banked
  8710  010538  5117               	movf	?_strcmp& (0+255),w,b
  8711  01053A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8712  01053C  A4D8               	btfss	status,2,c
  8713  01053E  D01C               	goto	l1222
  8714                           
  8715                           ; BSR set to: 1
  8716                           ;ring_buffer_LUT.c: 316: terminal_printNewline();
  8717  010540  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8718                           
  8719                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8720  010544  0E00               	movlw	0
  8721  010546  0101               	movlb	1	; () banked
  8722  010548  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8723  01054A  0E00               	movlw	0
  8724  01054C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8725  01054E  0E06               	movlw	6
  8726  010550  EC19  F099         	call	_terminal_textAttributes
  8727                           
  8728                           ;ring_buffer_LUT.c: 319: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Resul
      +                          t);
  8729  010554  0EA6               	movlw	low STR_77
  8730  010556  0101               	movlb	1	; () banked
  8731  010558  6F64               	movwf	printf@f& (0+255),b
  8732  01055A  0EFB               	movlw	high STR_77
  8733  01055C  6F65               	movwf	(printf@f+1)& (0+255),b
  8734  01055E  C0DD  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  8735  010562  C0DE  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  8736  010566  C0DF  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  8737  01056A  ECA4  F086         	call	_printf	;wreg free
  8738                           
  8739                           ;ring_buffer_LUT.c: 321: terminal_textAttributesReset();
  8740  01056E  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8741                           
  8742                           ;ring_buffer_LUT.c: 323: terminal_printNewline();
  8743  010572  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8744                           
  8745                           ;ring_buffer_LUT.c: 326: }
  8746  010576  0012               	return	
  8747  010578                     l1222:
  8748                           
  8749                           ;ring_buffer_LUT.c: 329: else if((0 == strcmp(line, "Measure POS12?"))) {
  8750  010578  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8751  01057C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8752  010580  0E9D               	movlw	low STR_78
  8753  010582  0101               	movlb	1	; () banked
  8754  010584  6F19               	movwf	strcmp@s2& (0+255),b
  8755  010586  0EFE               	movlw	high STR_78
  8756  010588  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8757  01058A  ECE4  F0B2         	call	_strcmp	;wreg free
  8758  01058E  0101               	movlb	1	; () banked
  8759  010590  5117               	movf	?_strcmp& (0+255),w,b
  8760  010592  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8761  010594  A4D8               	btfss	status,2,c
  8762  010596  D01C               	goto	l1224
  8763                           
  8764                           ; BSR set to: 1
  8765                           ;ring_buffer_LUT.c: 332: terminal_printNewline();
  8766  010598  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8767                           
  8768                           ;ring_buffer_LUT.c: 334: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8769  01059C  0E00               	movlw	0
  8770  01059E  0101               	movlb	1	; () banked
  8771  0105A0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8772  0105A2  0E00               	movlw	0
  8773  0105A4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8774  0105A6  0E06               	movlw	6
  8775  0105A8  EC19  F099         	call	_terminal_textAttributes
  8776                           
  8777                           ;ring_buffer_LUT.c: 335: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  8778  0105AC  0E2F               	movlw	low STR_79
  8779  0105AE  0101               	movlb	1	; () banked
  8780  0105B0  6F64               	movwf	printf@f& (0+255),b
  8781  0105B2  0EFC               	movlw	high STR_79
  8782  0105B4  6F65               	movwf	(printf@f+1)& (0+255),b
  8783  0105B6  C0DA  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  8784  0105BA  C0DB  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  8785  0105BE  C0DC  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  8786  0105C2  ECA4  F086         	call	_printf	;wreg free
  8787                           
  8788                           ;ring_buffer_LUT.c: 337: terminal_textAttributesReset();
  8789  0105C6  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8790                           
  8791                           ;ring_buffer_LUT.c: 339: terminal_printNewline();
  8792  0105CA  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8793                           
  8794                           ;ring_buffer_LUT.c: 342: }
  8795  0105CE  0012               	return	
  8796  0105D0                     l1224:
  8797                           
  8798                           ;ring_buffer_LUT.c: 345: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  8799  0105D0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8800  0105D4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8801  0105D8  0ED9               	movlw	low STR_80
  8802  0105DA  0101               	movlb	1	; () banked
  8803  0105DC  6F19               	movwf	strcmp@s2& (0+255),b
  8804  0105DE  0EFD               	movlw	high STR_80
  8805  0105E0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8806  0105E2  ECE4  F0B2         	call	_strcmp	;wreg free
  8807  0105E6  0101               	movlb	1	; () banked
  8808  0105E8  5117               	movf	?_strcmp& (0+255),w,b
  8809  0105EA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8810  0105EC  A4D8               	btfss	status,2,c
  8811  0105EE  D01C               	goto	l1226
  8812                           
  8813                           ; BSR set to: 1
  8814                           ;ring_buffer_LUT.c: 348: terminal_printNewline();
  8815  0105F0  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8816                           
  8817                           ;ring_buffer_LUT.c: 350: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8818  0105F4  0E00               	movlw	0
  8819  0105F6  0101               	movlb	1	; () banked
  8820  0105F8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8821  0105FA  0E00               	movlw	0
  8822  0105FC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8823  0105FE  0E06               	movlw	6
  8824  010600  EC19  F099         	call	_terminal_textAttributes
  8825                           
  8826                           ;ring_buffer_LUT.c: 351: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  8827  010604  0EC9               	movlw	low STR_81
  8828  010606  0101               	movlb	1	; () banked
  8829  010608  6F64               	movwf	printf@f& (0+255),b
  8830  01060A  0EFB               	movlw	high STR_81
  8831  01060C  6F65               	movwf	(printf@f+1)& (0+255),b
  8832  01060E  C0D7  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  8833  010612  C0D8  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  8834  010616  C0D9  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  8835  01061A  ECA4  F086         	call	_printf	;wreg free
  8836                           
  8837                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
  8838  01061E  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8839                           
  8840                           ;ring_buffer_LUT.c: 355: terminal_printNewline();
  8841  010622  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8842                           
  8843                           ;ring_buffer_LUT.c: 358: }
  8844  010626  0012               	return	
  8845  010628                     l1226:
  8846                           
  8847                           ;ring_buffer_LUT.c: 361: else if((0 == strcmp(line, "Measure FVR?"))) {
  8848  010628  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8849  01062C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8850  010630  0E2A               	movlw	low STR_82
  8851  010632  0101               	movlb	1	; () banked
  8852  010634  6F19               	movwf	strcmp@s2& (0+255),b
  8853  010636  0EFF               	movlw	high STR_82
  8854  010638  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8855  01063A  ECE4  F0B2         	call	_strcmp	;wreg free
  8856  01063E  0101               	movlb	1	; () banked
  8857  010640  5117               	movf	?_strcmp& (0+255),w,b
  8858  010642  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8859  010644  A4D8               	btfss	status,2,c
  8860  010646  D01C               	goto	l1228
  8861                           
  8862                           ; BSR set to: 1
  8863                           ;ring_buffer_LUT.c: 364: terminal_printNewline();
  8864  010648  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8865                           
  8866                           ;ring_buffer_LUT.c: 366: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8867  01064C  0E00               	movlw	0
  8868  01064E  0101               	movlb	1	; () banked
  8869  010650  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8870  010652  0E00               	movlw	0
  8871  010654  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8872  010656  0E06               	movlw	6
  8873  010658  EC19  F099         	call	_terminal_textAttributes
  8874                           
  8875                           ;ring_buffer_LUT.c: 367: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  8876  01065C  0EDC               	movlw	low STR_83
  8877  01065E  0101               	movlb	1	; () banked
  8878  010660  6F64               	movwf	printf@f& (0+255),b
  8879  010662  0EF8               	movlw	high STR_83
  8880  010664  6F65               	movwf	(printf@f+1)& (0+255),b
  8881  010666  C0ED  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  8882  01066A  C0EE  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  8883  01066E  C0EF  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  8884  010672  ECA4  F086         	call	_printf	;wreg free
  8885                           
  8886                           ;ring_buffer_LUT.c: 369: terminal_textAttributesReset();
  8887  010676  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8888                           
  8889                           ;ring_buffer_LUT.c: 371: terminal_printNewline();
  8890  01067A  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8891                           
  8892                           ;ring_buffer_LUT.c: 374: }
  8893  01067E  0012               	return	
  8894  010680                     l1228:
  8895                           
  8896                           ;ring_buffer_LUT.c: 377: else if((0 == strcmp(line, "Measure AVSS?"))) {
  8897  010680  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8898  010684  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8899  010688  0ED8               	movlw	low STR_84
  8900  01068A  0101               	movlb	1	; () banked
  8901  01068C  6F19               	movwf	strcmp@s2& (0+255),b
  8902  01068E  0EFE               	movlw	high STR_84
  8903  010690  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8904  010692  ECE4  F0B2         	call	_strcmp	;wreg free
  8905  010696  0101               	movlb	1	; () banked
  8906  010698  5117               	movf	?_strcmp& (0+255),w,b
  8907  01069A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8908  01069C  A4D8               	btfss	status,2,c
  8909  01069E  D01C               	goto	l1230
  8910                           
  8911                           ; BSR set to: 1
  8912                           ;ring_buffer_LUT.c: 380: terminal_printNewline();
  8913  0106A0  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8914                           
  8915                           ;ring_buffer_LUT.c: 382: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8916  0106A4  0E00               	movlw	0
  8917  0106A6  0101               	movlb	1	; () banked
  8918  0106A8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8919  0106AA  0E00               	movlw	0
  8920  0106AC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8921  0106AE  0E06               	movlw	6
  8922  0106B0  EC19  F099         	call	_terminal_textAttributes
  8923                           
  8924                           ;ring_buffer_LUT.c: 383: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  8925  0106B4  0E38               	movlw	low STR_85
  8926  0106B6  0101               	movlb	1	; () banked
  8927  0106B8  6F64               	movwf	printf@f& (0+255),b
  8928  0106BA  0EFB               	movlw	high STR_85
  8929  0106BC  6F65               	movwf	(printf@f+1)& (0+255),b
  8930  0106BE  C0E3  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  8931  0106C2  C0E4  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  8932  0106C6  C0E5  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  8933  0106CA  ECA4  F086         	call	_printf	;wreg free
  8934                           
  8935                           ;ring_buffer_LUT.c: 385: terminal_textAttributesReset();
  8936  0106CE  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8937                           
  8938                           ;ring_buffer_LUT.c: 387: terminal_printNewline();
  8939  0106D2  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8940                           
  8941                           ;ring_buffer_LUT.c: 390: }
  8942  0106D6  0012               	return	
  8943  0106D8                     l1230:
  8944                           
  8945                           ;ring_buffer_LUT.c: 393: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  8946  0106D8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8947  0106DC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8948  0106E0  0ECB               	movlw	low STR_86
  8949  0106E2  0101               	movlb	1	; () banked
  8950  0106E4  6F19               	movwf	strcmp@s2& (0+255),b
  8951  0106E6  0EFC               	movlw	high STR_86
  8952  0106E8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8953  0106EA  ECE4  F0B2         	call	_strcmp	;wreg free
  8954  0106EE  0101               	movlb	1	; () banked
  8955  0106F0  5117               	movf	?_strcmp& (0+255),w,b
  8956  0106F2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8957  0106F4  A4D8               	btfss	status,2,c
  8958  0106F6  D01C               	goto	l1232
  8959                           
  8960                           ; BSR set to: 1
  8961                           ;ring_buffer_LUT.c: 396: terminal_printNewline();
  8962  0106F8  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8963                           
  8964                           ;ring_buffer_LUT.c: 398: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8965  0106FC  0E00               	movlw	0
  8966  0106FE  0101               	movlb	1	; () banked
  8967  010700  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  8968  010702  0E00               	movlw	0
  8969  010704  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8970  010706  0E06               	movlw	6
  8971  010708  EC19  F099         	call	_terminal_textAttributes
  8972                           
  8973                           ;ring_buffer_LUT.c: 399: printf("Measured Current is %.3f Amps\n\r", Imeas);
  8974  01070C  0E72               	movlw	low STR_87
  8975  01070E  0101               	movlb	1	; () banked
  8976  010710  6F64               	movwf	printf@f& (0+255),b
  8977  010712  0EFC               	movlw	high STR_87
  8978  010714  6F65               	movwf	(printf@f+1)& (0+255),b
  8979  010716  C0CE  F166         	movff	_Imeas,?_printf+2	;volatile
  8980  01071A  C0CF  F167         	movff	_Imeas+1,?_printf+3	;volatile
  8981  01071E  C0D0  F168         	movff	_Imeas+2,?_printf+4	;volatile
  8982  010722  ECA4  F086         	call	_printf	;wreg free
  8983                           
  8984                           ;ring_buffer_LUT.c: 401: terminal_textAttributesReset();
  8985  010726  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  8986                           
  8987                           ;ring_buffer_LUT.c: 403: terminal_printNewline();
  8988  01072A  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  8989                           
  8990                           ;ring_buffer_LUT.c: 405: }
  8991  01072E  0012               	return	
  8992  010730                     l1232:
  8993                           
  8994                           ;ring_buffer_LUT.c: 408: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  8995  010730  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  8996  010734  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8997  010738  0EB1               	movlw	low STR_88
  8998  01073A  0101               	movlb	1	; () banked
  8999  01073C  6F19               	movwf	strcmp@s2& (0+255),b
  9000  01073E  0EFD               	movlw	high STR_88
  9001  010740  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9002  010742  ECE4  F0B2         	call	_strcmp	;wreg free
  9003  010746  0101               	movlb	1	; () banked
  9004  010748  5117               	movf	?_strcmp& (0+255),w,b
  9005  01074A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9006  01074C  A4D8               	btfss	status,2,c
  9007  01074E  D01C               	goto	l1234
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;ring_buffer_LUT.c: 411: terminal_printNewline();
  9011  010750  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9012                           
  9013                           ;ring_buffer_LUT.c: 413: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9014  010754  0E00               	movlw	0
  9015  010756  0101               	movlb	1	; () banked
  9016  010758  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9017  01075A  0E00               	movlw	0
  9018  01075C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9019  01075E  0E06               	movlw	6
  9020  010760  EC19  F099         	call	_terminal_textAttributes
  9021                           
  9022                           ;ring_buffer_LUT.c: 414: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  9023  010764  0EEB               	movlw	low STR_89
  9024  010766  0101               	movlb	1	; () banked
  9025  010768  6F64               	movwf	printf@f& (0+255),b
  9026  01076A  0EFB               	movlw	high STR_89
  9027  01076C  6F65               	movwf	(printf@f+1)& (0+255),b
  9028  01076E  C0CB  F166         	movff	_Irms,?_printf+2	;volatile
  9029  010772  C0CC  F167         	movff	_Irms+1,?_printf+3	;volatile
  9030  010776  C0CD  F168         	movff	_Irms+2,?_printf+4	;volatile
  9031  01077A  ECA4  F086         	call	_printf	;wreg free
  9032                           
  9033                           ;ring_buffer_LUT.c: 416: terminal_textAttributesReset();
  9034  01077E  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9035                           
  9036                           ;ring_buffer_LUT.c: 418: terminal_printNewline();
  9037  010782  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9038                           
  9039                           ;ring_buffer_LUT.c: 420: }
  9040  010786  0012               	return	
  9041  010788                     l1234:
  9042                           
  9043                           ;ring_buffer_LUT.c: 423: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  9044  010788  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9045  01078C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9046  010790  0E9C               	movlw	low STR_90
  9047  010792  0101               	movlb	1	; () banked
  9048  010794  6F19               	movwf	strcmp@s2& (0+255),b
  9049  010796  0EFD               	movlw	high STR_90
  9050  010798  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9051  01079A  ECE4  F0B2         	call	_strcmp	;wreg free
  9052  01079E  0101               	movlb	1	; () banked
  9053  0107A0  5117               	movf	?_strcmp& (0+255),w,b
  9054  0107A2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9055  0107A4  A4D8               	btfss	status,2,c
  9056  0107A6  D01C               	goto	l1236
  9057                           
  9058                           ; BSR set to: 1
  9059                           ;ring_buffer_LUT.c: 426: terminal_printNewline();
  9060  0107A8  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9061                           
  9062                           ;ring_buffer_LUT.c: 428: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9063  0107AC  0E00               	movlw	0
  9064  0107AE  0101               	movlb	1	; () banked
  9065  0107B0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9066  0107B2  0E00               	movlw	0
  9067  0107B4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9068  0107B6  0E06               	movlw	6
  9069  0107B8  EC19  F099         	call	_terminal_textAttributes
  9070                           
  9071                           ;ring_buffer_LUT.c: 429: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  9072  0107BC  0E0D               	movlw	low STR_91
  9073  0107BE  0101               	movlb	1	; () banked
  9074  0107C0  6F64               	movwf	printf@f& (0+255),b
  9075  0107C2  0EFC               	movlw	high STR_91
  9076  0107C4  6F65               	movwf	(printf@f+1)& (0+255),b
  9077  0107C6  C0C8  F166         	movff	_Vrms,?_printf+2	;volatile
  9078  0107CA  C0C9  F167         	movff	_Vrms+1,?_printf+3	;volatile
  9079  0107CE  C0CA  F168         	movff	_Vrms+2,?_printf+4	;volatile
  9080  0107D2  ECA4  F086         	call	_printf	;wreg free
  9081                           
  9082                           ;ring_buffer_LUT.c: 431: terminal_textAttributesReset();
  9083  0107D6  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9084                           
  9085                           ;ring_buffer_LUT.c: 433: terminal_printNewline();
  9086  0107DA  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9087                           
  9088                           ;ring_buffer_LUT.c: 435: }
  9089  0107DE  0012               	return	
  9090  0107E0                     l1236:
  9091                           
  9092                           ;ring_buffer_LUT.c: 438: else if ((0 == strcmp(line, "Measure Power?"))) {
  9093  0107E0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9094  0107E4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9095  0107E8  0EAC               	movlw	low STR_92
  9096  0107EA  0101               	movlb	1	; () banked
  9097  0107EC  6F19               	movwf	strcmp@s2& (0+255),b
  9098  0107EE  0EFE               	movlw	high STR_92
  9099  0107F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9100  0107F2  ECE4  F0B2         	call	_strcmp	;wreg free
  9101  0107F6  0101               	movlb	1	; () banked
  9102  0107F8  5117               	movf	?_strcmp& (0+255),w,b
  9103  0107FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9104  0107FC  A4D8               	btfss	status,2,c
  9105  0107FE  D01C               	goto	l1238
  9106                           
  9107                           ; BSR set to: 1
  9108                           ;ring_buffer_LUT.c: 441: terminal_printNewline();
  9109  010800  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9110                           
  9111                           ;ring_buffer_LUT.c: 443: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9112  010804  0E00               	movlw	0
  9113  010806  0101               	movlb	1	; () banked
  9114  010808  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9115  01080A  0E00               	movlw	0
  9116  01080C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9117  01080E  0E06               	movlw	6
  9118  010810  EC19  F099         	call	_terminal_textAttributes
  9119                           
  9120                           ;ring_buffer_LUT.c: 444: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  9121  010814  0EA4               	movlw	low STR_93
  9122  010816  0101               	movlb	1	; () banked
  9123  010818  6F64               	movwf	printf@f& (0+255),b
  9124  01081A  0EF8               	movlw	high STR_93
  9125  01081C  6F65               	movwf	(printf@f+1)& (0+255),b
  9126  01081E  C1B7  F166         	movff	_Avg_Power,?_printf+2	;volatile
  9127  010822  C1B8  F167         	movff	_Avg_Power+1,?_printf+3	;volatile
  9128  010826  C1B9  F168         	movff	_Avg_Power+2,?_printf+4	;volatile
  9129  01082A  ECA4  F086         	call	_printf	;wreg free
  9130                           
  9131                           ;ring_buffer_LUT.c: 446: terminal_textAttributesReset();
  9132  01082E  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9133                           
  9134                           ;ring_buffer_LUT.c: 448: terminal_printNewline();
  9135  010832  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9136                           
  9137                           ;ring_buffer_LUT.c: 450: }
  9138  010836  0012               	return	
  9139  010838                     l1238:
  9140                           
  9141                           ;ring_buffer_LUT.c: 453: else if ((0 == strcmp(line, "Enable Dimming"))) {
  9142  010838  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9143  01083C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9144  010840  0EBB               	movlw	low STR_94
  9145  010842  0101               	movlb	1	; () banked
  9146  010844  6F19               	movwf	strcmp@s2& (0+255),b
  9147  010846  0EFE               	movlw	high STR_94
  9148  010848  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9149  01084A  ECE4  F0B2         	call	_strcmp	;wreg free
  9150  01084E  0101               	movlb	1	; () banked
  9151  010850  5117               	movf	?_strcmp& (0+255),w,b
  9152  010852  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9153  010854  A4D8               	btfss	status,2,c
  9154  010856  D017               	goto	l1240
  9155                           
  9156                           ; BSR set to: 1
  9157                           ;ring_buffer_LUT.c: 456: LATGbits.LATG0 = 0;
  9158  010858  907F               	bcf	3967,0,c	;volatile
  9159                           
  9160                           ; BSR set to: 1
  9161                           ;ring_buffer_LUT.c: 459: terminal_printNewline();
  9162  01085A  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9163                           
  9164                           ;ring_buffer_LUT.c: 461: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9165  01085E  0E00               	movlw	0
  9166  010860  0101               	movlb	1	; () banked
  9167  010862  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9168  010864  0E00               	movlw	0
  9169  010866  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9170  010868  0E06               	movlw	6
  9171  01086A  EC19  F099         	call	_terminal_textAttributes
  9172                           
  9173                           ;ring_buffer_LUT.c: 462: printf("TRIAC output dimming has been enabled\n\r");
  9174  01086E  0EE9               	movlw	low STR_95
  9175  010870  0101               	movlb	1	; () banked
  9176  010872  6F64               	movwf	printf@f& (0+255),b
  9177  010874  0EFA               	movlw	high STR_95
  9178  010876  6F65               	movwf	(printf@f+1)& (0+255),b
  9179  010878  ECA4  F086         	call	_printf	;wreg free
  9180                           
  9181                           ;ring_buffer_LUT.c: 464: terminal_textAttributesReset();
  9182  01087C  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9183                           
  9184                           ;ring_buffer_LUT.c: 466: terminal_printNewline();
  9185  010880  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9186                           
  9187                           ;ring_buffer_LUT.c: 468: }
  9188  010884  0012               	return	
  9189  010886                     l1240:
  9190                           
  9191                           ;ring_buffer_LUT.c: 471: else if ((0 == strcmp(line, "Disable Dimming"))) {
  9192  010886  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9193  01088A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9194  01088E  0E6E               	movlw	low STR_96
  9195  010890  0101               	movlb	1	; () banked
  9196  010892  6F19               	movwf	strcmp@s2& (0+255),b
  9197  010894  0EFE               	movlw	high STR_96
  9198  010896  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9199  010898  ECE4  F0B2         	call	_strcmp	;wreg free
  9200  01089C  0101               	movlb	1	; () banked
  9201  01089E  5117               	movf	?_strcmp& (0+255),w,b
  9202  0108A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9203  0108A2  A4D8               	btfss	status,2,c
  9204  0108A4  D017               	goto	l1242
  9205                           
  9206                           ; BSR set to: 1
  9207                           ;ring_buffer_LUT.c: 474: LATGbits.LATG0 = 1;
  9208  0108A6  807F               	bsf	3967,0,c	;volatile
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;ring_buffer_LUT.c: 477: terminal_printNewline();
  9212  0108A8  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9213                           
  9214                           ;ring_buffer_LUT.c: 479: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9215  0108AC  0E00               	movlw	0
  9216  0108AE  0101               	movlb	1	; () banked
  9217  0108B0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9218  0108B2  0E00               	movlw	0
  9219  0108B4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9220  0108B6  0E06               	movlw	6
  9221  0108B8  EC19  F099         	call	_terminal_textAttributes
  9222                           
  9223                           ;ring_buffer_LUT.c: 480: printf("TRIAC output dimming has been disabled\n\r");
  9224  0108BC  0EC0               	movlw	low STR_97
  9225  0108BE  0101               	movlb	1	; () banked
  9226  0108C0  6F64               	movwf	printf@f& (0+255),b
  9227  0108C2  0EFA               	movlw	high STR_97
  9228  0108C4  6F65               	movwf	(printf@f+1)& (0+255),b
  9229  0108C6  ECA4  F086         	call	_printf	;wreg free
  9230                           
  9231                           ;ring_buffer_LUT.c: 482: terminal_textAttributesReset();
  9232  0108CA  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9233                           
  9234                           ;ring_buffer_LUT.c: 484: terminal_printNewline();
  9235  0108CE  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9236                           
  9237                           ;ring_buffer_LUT.c: 486: }
  9238  0108D2  0012               	return	
  9239  0108D4                     l1242:
  9240                           
  9241                           ;ring_buffer_LUT.c: 489: else if ((0 == strcmp(line, "Enable Load"))) {
  9242  0108D4  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9243  0108D8  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9244  0108DC  0E50               	movlw	low STR_98
  9245  0108DE  0101               	movlb	1	; () banked
  9246  0108E0  6F19               	movwf	strcmp@s2& (0+255),b
  9247  0108E2  0EFF               	movlw	high STR_98
  9248  0108E4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9249  0108E6  ECE4  F0B2         	call	_strcmp	;wreg free
  9250  0108EA  0101               	movlb	1	; () banked
  9251  0108EC  5117               	movf	?_strcmp& (0+255),w,b
  9252  0108EE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9253  0108F0  A4D8               	btfss	status,2,c
  9254  0108F2  D019               	goto	l1244
  9255                           
  9256                           ; BSR set to: 1
  9257                           ;ring_buffer_LUT.c: 491: LATGbits.LATG0 = 1;
  9258  0108F4  807F               	bsf	3967,0,c	;volatile
  9259                           
  9260                           ;ring_buffer_LUT.c: 492: LATGbits.LATG1 = 0;
  9261  0108F6  927F               	bcf	3967,1,c	;volatile
  9262                           
  9263                           ;ring_buffer_LUT.c: 493: load_enable = 1;
  9264  0108F8  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9265                           
  9266                           ; BSR set to: 1
  9267                           ;ring_buffer_LUT.c: 496: terminal_printNewline();
  9268  0108FA  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9269                           
  9270                           ;ring_buffer_LUT.c: 498: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9271  0108FE  0E00               	movlw	0
  9272  010900  0101               	movlb	1	; () banked
  9273  010902  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9274  010904  0E00               	movlw	0
  9275  010906  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9276  010908  0E06               	movlw	6
  9277  01090A  EC19  F099         	call	_terminal_textAttributes
  9278                           
  9279                           ;ring_buffer_LUT.c: 499: printf("Load has been enabled, dimming disabled\n\r");
  9280  01090E  0E6D               	movlw	low STR_99
  9281  010910  0101               	movlb	1	; () banked
  9282  010912  6F64               	movwf	printf@f& (0+255),b
  9283  010914  0EFA               	movlw	high STR_99
  9284  010916  6F65               	movwf	(printf@f+1)& (0+255),b
  9285  010918  ECA4  F086         	call	_printf	;wreg free
  9286                           
  9287                           ;ring_buffer_LUT.c: 501: terminal_textAttributesReset();
  9288  01091C  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9289                           
  9290                           ;ring_buffer_LUT.c: 503: terminal_printNewline();
  9291  010920  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9292                           
  9293                           ;ring_buffer_LUT.c: 505: }
  9294  010924  0012               	return	
  9295  010926                     l1244:
  9296                           
  9297                           ;ring_buffer_LUT.c: 508: else if ((0 == strcmp(line, "Disable Load"))) {
  9298  010926  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9299  01092A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9300  01092E  0E37               	movlw	low STR_100
  9301  010930  0101               	movlb	1	; () banked
  9302  010932  6F19               	movwf	strcmp@s2& (0+255),b
  9303  010934  0EFF               	movlw	high STR_100
  9304  010936  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9305  010938  ECE4  F0B2         	call	_strcmp	;wreg free
  9306  01093C  0101               	movlb	1	; () banked
  9307  01093E  5117               	movf	?_strcmp& (0+255),w,b
  9308  010940  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9309  010942  A4D8               	btfss	status,2,c
  9310  010944  D019               	goto	l1246
  9311                           
  9312                           ; BSR set to: 1
  9313                           ;ring_buffer_LUT.c: 510: LATGbits.LATG1 = 0;
  9314  010946  927F               	bcf	3967,1,c	;volatile
  9315                           
  9316                           ;ring_buffer_LUT.c: 511: LATGbits.LATG0 = 0;
  9317  010948  907F               	bcf	3967,0,c	;volatile
  9318                           
  9319                           ;ring_buffer_LUT.c: 512: load_enable = 0;
  9320  01094A  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9321                           
  9322                           ; BSR set to: 1
  9323                           ;ring_buffer_LUT.c: 515: terminal_printNewline();
  9324  01094C  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9325                           
  9326                           ;ring_buffer_LUT.c: 517: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9327  010950  0E00               	movlw	0
  9328  010952  0101               	movlb	1	; () banked
  9329  010954  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9330  010956  0E00               	movlw	0
  9331  010958  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9332  01095A  0E06               	movlw	6
  9333  01095C  EC19  F099         	call	_terminal_textAttributes
  9334                           
  9335                           ;ring_buffer_LUT.c: 518: printf("Load has been disabled\n\r");
  9336  010960  0EE5               	movlw	low STR_101
  9337  010962  0101               	movlb	1	; () banked
  9338  010964  6F64               	movwf	printf@f& (0+255),b
  9339  010966  0EFC               	movlw	high STR_101
  9340  010968  6F65               	movwf	(printf@f+1)& (0+255),b
  9341  01096A  ECA4  F086         	call	_printf	;wreg free
  9342                           
  9343                           ;ring_buffer_LUT.c: 520: terminal_textAttributesReset();
  9344  01096E  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9345                           
  9346                           ;ring_buffer_LUT.c: 522: terminal_printNewline();
  9347  010972  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9348                           
  9349                           ;ring_buffer_LUT.c: 524: }
  9350  010976  0012               	return	
  9351  010978                     l1246:
  9352                           
  9353                           ;ring_buffer_LUT.c: 527: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9354  010978  C1A0  F126         	movff	ringBufferLUT@line,strstr@s1
  9355  01097C  C1A1  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9356  010980  0EFE               	movlw	low STR_102
  9357  010982  0101               	movlb	1	; () banked
  9358  010984  6F28               	movwf	strstr@s2& (0+255),b
  9359  010986  0EFC               	movlw	high STR_102
  9360  010988  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9361  01098A  ECEE  F0AD         	call	_strstr	;wreg free
  9362  01098E  0101               	movlb	1	; () banked
  9363  010990  5126               	movf	?_strstr& (0+255),w,b
  9364  010992  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9365  010994  B4D8               	btfsc	status,2,c
  9366  010996  D119               	goto	l1248
  9367                           
  9368                           ; BSR set to: 1
  9369                           ;ring_buffer_LUT.c: 530: char arg_buff[3];
  9370                           ;ring_buffer_LUT.c: 533: for (int index = 0; index < 3; index++) {
  9371  010998  0E00               	movlw	0
  9372  01099A  0102               	movlb	2	; () banked
  9373  01099C  6F9D               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9374  01099E  0E00               	movlw	0
  9375  0109A0  6F9C               	movwf	ringBufferLUT@index& (0+255),b
  9376  0109A2                     l11611:
  9377                           
  9378                           ; BSR set to: 2
  9379  0109A2  BF9D               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9380  0109A4  D006               	goto	l1249
  9381  0109A6  519D               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9382  0109A8  E11F               	bnz	l11621
  9383  0109AA  0E03               	movlw	3
  9384  0109AC  5D9C               	subwf	ringBufferLUT@index& (0+255),w,b
  9385  0109AE  B0D8               	btfsc	status,0,c
  9386  0109B0  D01B               	goto	u13180
  9387  0109B2                     l1249:
  9388                           
  9389                           ; BSR set to: 2
  9390                           ;ring_buffer_LUT.c: 535: arg_buff[index] = line[index + 24];
  9391                           
  9392                           ; BSR set to: 2
  9393  0109B2  0E18               	movlw	24
  9394  0109B4  259C               	addwf	ringBufferLUT@index& (0+255),w,b
  9395  0109B6  0101               	movlb	1	; () banked
  9396  0109B8  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  9397  0109BA  0E00               	movlw	0
  9398  0109BC  0102               	movlb	2	; () banked
  9399  0109BE  219D               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9400  0109C0  0101               	movlb	1	; () banked
  9401  0109C2  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9402  0109C4  51A2               	movf	??_ringBufferLUT& (0+255),w,b
  9403  0109C6  25A0               	addwf	ringBufferLUT@line& (0+255),w,b
  9404  0109C8  6ED9               	movwf	fsr2l,c
  9405  0109CA  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9406  0109CC  21A1               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9407  0109CE  6EDA               	movwf	fsr2h,c
  9408  0109D0  0E99               	movlw	low ringBufferLUT@arg_buff
  9409  0109D2  0102               	movlb	2	; () banked
  9410  0109D4  259C               	addwf	ringBufferLUT@index& (0+255),w,b
  9411  0109D6  6EE1               	movwf	fsr1l,c
  9412  0109D8  0E02               	movlw	high ringBufferLUT@arg_buff
  9413  0109DA  219D               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9414  0109DC  6EE2               	movwf	fsr1h,c
  9415  0109DE  CFDF FFE7          	movff	indf2,indf1
  9416                           
  9417                           ; BSR set to: 2
  9418  0109E2  4B9C               	infsnz	ringBufferLUT@index& (0+255),f,b
  9419  0109E4  2B9D               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9420  0109E6  D7DD               	goto	l11611
  9421  0109E8                     u13180:
  9422  0109E8                     l11621:
  9423                           
  9424                           ; BSR set to: 2
  9425                           ;ring_buffer_LUT.c: 537: }
  9426                           ;ring_buffer_LUT.c: 539: int percentage = atoi(arg_buff);
  9427  0109E8  0E99               	movlw	low ringBufferLUT@arg_buff
  9428  0109EA  0101               	movlb	1	; () banked
  9429  0109EC  6F2B               	movwf	atoi@s& (0+255),b
  9430  0109EE  0E02               	movlw	high ringBufferLUT@arg_buff
  9431  0109F0  6F2C               	movwf	(atoi@s+1)& (0+255),b
  9432  0109F2  EC8B  F0AA         	call	_atoi	;wreg free
  9433  0109F6  C12B  F29E         	movff	?_atoi,ringBufferLUT@percentage
  9434  0109FA  C12C  F29F         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9435                           
  9436                           ;ring_buffer_LUT.c: 542: if ( (percentage >= 100) ||
  9437                           ;ring_buffer_LUT.c: 543: (percentage <= 0)) {
  9438  0109FE  0102               	movlb	2	; () banked
  9439  010A00  BF9F               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9440  010A02  D006               	goto	u13190
  9441  010A04  519F               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9442  010A06  E10B               	bnz	l11627
  9443  010A08  0E64               	movlw	100
  9444  010A0A  5D9E               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9445  010A0C  B0D8               	btfsc	status,0,c
  9446  010A0E  D007               	goto	u13200
  9447  010A10                     u13190:
  9448                           
  9449                           ; BSR set to: 2
  9450  010A10  BF9F               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9451  010A12  D005               	goto	u13200
  9452  010A14  519F               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9453  010A16  E12F               	bnz	l11629
  9454  010A18  059E               	decf	ringBufferLUT@percentage& (0+255),w,b
  9455  010A1A  B0D8               	btfsc	status,0,c
  9456  010A1C  D02C               	goto	l1251
  9457  010A1E                     u13200:
  9458  010A1E                     l11627:
  9459                           
  9460                           ; BSR set to: 2
  9461                           ;ring_buffer_LUT.c: 546: terminal_printNewline();
  9462  010A1E  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9463                           
  9464                           ;ring_buffer_LUT.c: 548: terminal_textAttributes(RED, BLACK, NORMAL);
  9465  010A22  0E00               	movlw	0
  9466  010A24  0101               	movlb	1	; () banked
  9467  010A26  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9468  010A28  0E00               	movlw	0
  9469  010A2A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9470  010A2C  0E01               	movlw	1
  9471  010A2E  EC19  F099         	call	_terminal_textAttributes
  9472                           
  9473                           ;ring_buffer_LUT.c: 549: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9474  010A32  0E7E               	movlw	low STR_103
  9475  010A34  0101               	movlb	1	; () banked
  9476  010A36  6F64               	movwf	printf@f& (0+255),b
  9477  010A38  0EF6               	movlw	high STR_103
  9478  010A3A  6F65               	movwf	(printf@f+1)& (0+255),b
  9479  010A3C  ECA4  F086         	call	_printf	;wreg free
  9480                           
  9481                           ;ring_buffer_LUT.c: 551: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9482  010A40  0E00               	movlw	0
  9483  010A42  0101               	movlb	1	; () banked
  9484  010A44  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9485  010A46  0E00               	movlw	0
  9486  010A48  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9487  010A4A  0E03               	movlw	3
  9488  010A4C  EC19  F099         	call	_terminal_textAttributes
  9489                           
  9490                           ;ring_buffer_LUT.c: 552: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9491  010A50  0E18               	movlw	low STR_104
  9492  010A52  0101               	movlb	1	; () banked
  9493  010A54  6F64               	movwf	printf@f& (0+255),b
  9494  010A56  0EF6               	movlw	high STR_104
  9495  010A58  6F65               	movwf	(printf@f+1)& (0+255),b
  9496  010A5A  ECA4  F086         	call	_printf	;wreg free
  9497                           
  9498                           ;ring_buffer_LUT.c: 553: printf("Enter 'Help' for list of available commands\n\r");
  9499  010A5E  0E12               	movlw	low STR_105
  9500  010A60  0101               	movlb	1	; () banked
  9501  010A62  6F64               	movwf	printf@f& (0+255),b
  9502  010A64  0EFA               	movlw	high STR_105
  9503  010A66  6F65               	movwf	(printf@f+1)& (0+255),b
  9504  010A68  ECA4  F086         	call	_printf	;wreg free
  9505                           
  9506                           ;ring_buffer_LUT.c: 555: terminal_textAttributesReset();
  9507  010A6C  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9508                           
  9509                           ;ring_buffer_LUT.c: 557: terminal_printNewline();
  9510  010A70  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9511                           
  9512                           ;ring_buffer_LUT.c: 559: }
  9513  010A74  0012               	return	
  9514  010A76                     l1251:
  9515  010A76                     l11629:
  9516                           
  9517                           ;ring_buffer_LUT.c: 562: else {
  9518                           ;ring_buffer_LUT.c: 565: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9519  010A76  0E00               	movlw	0
  9520  010A78  0101               	movlb	1	; () banked
  9521  010A7A  6F3A               	movwf	___ftdiv@f2& (0+255),b
  9522  010A7C  0EC8               	movlw	200
  9523  010A7E  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  9524  010A80  0E42               	movlw	66
  9525  010A82  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  9526  010A84  0E00               	movlw	0
  9527  010A86  6F2E               	movwf	___ftadd@f2& (0+255),b
  9528  010A88  0EC8               	movlw	200
  9529  010A8A  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  9530  010A8C  0E42               	movlw	66
  9531  010A8E  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  9532  010A90  C29E  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  9533  010A94  C29F  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  9534  010A98  ECAF  F0B4         	call	___awtoft	;wreg free
  9535  010A9C  C11F  F123         	movff	?___awtoft,___ftneg@f1
  9536  010AA0  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  9537  010AA4  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  9538  010AA8  EC01  F0B6         	call	___ftneg	;wreg free
  9539  010AAC  C123  F12B         	movff	?___ftneg,___ftadd@f1
  9540  010AB0  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  9541  010AB4  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  9542  010AB8  EC7B  F0A1         	call	___ftadd	;wreg free
  9543  010ABC  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  9544  010AC0  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  9545  010AC4  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  9546  010AC8  ECC8  F0A8         	call	___ftdiv	;wreg free
  9547  010ACC  C137  F146         	movff	?___ftdiv,___ftmul@f1
  9548  010AD0  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  9549  010AD4  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  9550  010AD8  0E10               	movlw	16
  9551  010ADA  0101               	movlb	1	; () banked
  9552  010ADC  6F49               	movwf	___ftmul@f2& (0+255),b
  9553  010ADE  0E49               	movlw	73
  9554  010AE0  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  9555  010AE2  0E40               	movlw	64
  9556  010AE4  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  9557  010AE6  EC59  F0A7         	call	___ftmul	;wreg free
  9558  010AEA  C146  F0FB         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  9559  010AEE  C147  F0FC         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  9560  010AF2  C148  F0FD         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  9561                           
  9562                           ;ring_buffer_LUT.c: 566: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  9563  010AF6  C0FB  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  9564  010AFA  C0FC  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  9565  010AFE  C0FD  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  9566  010B02  0E2F               	movlw	47
  9567  010B04  0101               	movlb	1	; () banked
  9568  010B06  6F49               	movwf	___ftmul@f2& (0+255),b
  9569  010B08  0E65               	movlw	101
  9570  010B0A  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  9571  010B0C  0E42               	movlw	66
  9572  010B0E  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  9573  010B10  EC59  F0A7         	call	___ftmul	;wreg free
  9574  010B14  C146  F296         	movff	?___ftmul,ringBufferLUT@angle_degrees
  9575  010B18  C147  F297         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  9576  010B1C  C148  F298         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  9577                           
  9578                           ;ring_buffer_LUT.c: 567: dimming_period = (100 - percentage) * (0xFFFF / 100);
  9579  010B20  C29E  F1A2         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  9580  010B24  C29F  F1A3         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  9581  010B28  0101               	movlb	1	; () banked
  9582  010B2A  1FA2               	comf	??_ringBufferLUT& (0+255),f,b
  9583  010B2C  1FA3               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  9584  010B2E  4BA2               	infsnz	??_ringBufferLUT& (0+255),f,b
  9585  010B30  2BA3               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  9586  010B32  0E64               	movlw	100
  9587  010B34  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  9588  010B36  6F25               	movwf	___wmul@multiplier& (0+255),b
  9589  010B38  0E00               	movlw	0
  9590  010B3A  21A3               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  9591  010B3C  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  9592  010B3E  0E02               	movlw	2
  9593  010B40  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9594  010B42  0E8F               	movlw	143
  9595  010B44  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9596  010B46  ECB2  F0B5         	call	___wmul	;wreg free
  9597  010B4A  C125  F0F9         	movff	?___wmul,_dimming_period	;volatile
  9598  010B4E  C126  F0FA         	movff	?___wmul+1,_dimming_period+1	;volatile
  9599                           
  9600                           ;ring_buffer_LUT.c: 570: terminal_printNewline();
  9601  010B52  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9602                           
  9603                           ;ring_buffer_LUT.c: 572: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9604  010B56  0E00               	movlw	0
  9605  010B58  0101               	movlb	1	; () banked
  9606  010B5A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9607  010B5C  0E00               	movlw	0
  9608  010B5E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9609  010B60  0E02               	movlw	2
  9610  010B62  EC19  F099         	call	_terminal_textAttributes
  9611                           
  9612                           ;ring_buffer_LUT.c: 573: printf("Dimming has been set to %d percent\n\r", percentage);
  9613  010B66  0E5D               	movlw	low STR_106
  9614  010B68  0101               	movlb	1	; () banked
  9615  010B6A  6F64               	movwf	printf@f& (0+255),b
  9616  010B6C  0EFB               	movlw	high STR_106
  9617  010B6E  6F65               	movwf	(printf@f+1)& (0+255),b
  9618  010B70  C29E  F166         	movff	ringBufferLUT@percentage,?_printf+2
  9619  010B74  C29F  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  9620  010B78  ECA4  F086         	call	_printf	;wreg free
  9621                           
  9622                           ;ring_buffer_LUT.c: 574: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  9623  010B7C  0EF2               	movlw	low STR_107
  9624  010B7E  0101               	movlb	1	; () banked
  9625  010B80  6F64               	movwf	printf@f& (0+255),b
  9626  010B82  0EF7               	movlw	high STR_107
  9627  010B84  6F65               	movwf	(printf@f+1)& (0+255),b
  9628  010B86  C0FB  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  9629  010B8A  C0FC  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  9630  010B8E  C0FD  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  9631  010B92  C296  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  9632  010B96  C297  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  9633  010B9A  C298  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  9634  010B9E  ECA4  F086         	call	_printf	;wreg free
  9635                           
  9636                           ;ring_buffer_LUT.c: 575: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  9637  010BA2  0E29               	movlw	low STR_108
  9638  010BA4  0101               	movlb	1	; () banked
  9639  010BA6  6F64               	movwf	printf@f& (0+255),b
  9640  010BA8  0EF7               	movlw	high STR_108
  9641  010BAA  6F65               	movwf	(printf@f+1)& (0+255),b
  9642  010BAC  C0F9  F166         	movff	_dimming_period,?_printf+2	;volatile
  9643  010BB0  C0FA  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  9644  010BB4  C0F9  F168         	movff	_dimming_period,?_printf+4	;volatile
  9645  010BB8  C0FA  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  9646  010BBC  ECA4  F086         	call	_printf	;wreg free
  9647                           
  9648                           ;ring_buffer_LUT.c: 577: terminal_textAttributesReset();
  9649  010BC0  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9650                           
  9651                           ;ring_buffer_LUT.c: 579: terminal_printNewline();
  9652  010BC4  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9653                           
  9654                           ;ring_buffer_LUT.c: 581: }
  9655                           ;ring_buffer_LUT.c: 583: }
  9656  010BC8  0012               	return	
  9657  010BCA                     l1248:
  9658                           
  9659                           ;ring_buffer_LUT.c: 586: else if((0 == strcmp(line, "Device On Time?"))) {
  9660  010BCA  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9661  010BCE  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9662  010BD2  0E4E               	movlw	low STR_109
  9663  010BD4  0101               	movlb	1	; () banked
  9664  010BD6  6F19               	movwf	strcmp@s2& (0+255),b
  9665  010BD8  0EFE               	movlw	high STR_109
  9666  010BDA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9667  010BDC  ECE4  F0B2         	call	_strcmp	;wreg free
  9668  010BE0  0101               	movlb	1	; () banked
  9669  010BE2  5117               	movf	?_strcmp& (0+255),w,b
  9670  010BE4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9671  010BE6  A4D8               	btfss	status,2,c
  9672  010BE8  D01E               	goto	l1256
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;ring_buffer_LUT.c: 589: terminal_printNewline();
  9676  010BEA  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9677                           
  9678                           ;ring_buffer_LUT.c: 591: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9679  010BEE  0E00               	movlw	0
  9680  010BF0  0101               	movlb	1	; () banked
  9681  010BF2  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9682  010BF4  0E00               	movlw	0
  9683  010BF6  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9684  010BF8  0E02               	movlw	2
  9685  010BFA  EC19  F099         	call	_terminal_textAttributes
  9686                           
  9687                           ;ring_buffer_LUT.c: 592: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  9688  010BFE  0E31               	movlw	low STR_110
  9689  010C00  0101               	movlb	1	; () banked
  9690  010C02  6F64               	movwf	printf@f& (0+255),b
  9691  010C04  0EF8               	movlw	high STR_110
  9692  010C06  6F65               	movwf	(printf@f+1)& (0+255),b
  9693  010C08  C1B3  F166         	movff	_dev_on_time,?_printf+2	;volatile
  9694  010C0C  C1B4  F167         	movff	_dev_on_time+1,?_printf+3	;volatile
  9695  010C10  C1B5  F168         	movff	_dev_on_time+2,?_printf+4	;volatile
  9696  010C14  C1B6  F169         	movff	_dev_on_time+3,?_printf+5	;volatile
  9697  010C18  ECA4  F086         	call	_printf	;wreg free
  9698                           
  9699                           ;ring_buffer_LUT.c: 594: terminal_textAttributesReset();
  9700  010C1C  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9701                           
  9702                           ;ring_buffer_LUT.c: 596: terminal_printNewline();
  9703  010C20  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9704                           
  9705                           ;ring_buffer_LUT.c: 598: }
  9706  010C24  0012               	return	
  9707  010C26                     l1256:
  9708                           
  9709                           ;ring_buffer_LUT.c: 601: else if((0 == strcmp(line, "Load On Time?"))) {
  9710  010C26  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9711  010C2A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9712  010C2E  0EE6               	movlw	low STR_111
  9713  010C30  0101               	movlb	1	; () banked
  9714  010C32  6F19               	movwf	strcmp@s2& (0+255),b
  9715  010C34  0EFE               	movlw	high STR_111
  9716  010C36  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9717  010C38  ECE4  F0B2         	call	_strcmp	;wreg free
  9718  010C3C  0101               	movlb	1	; () banked
  9719  010C3E  5117               	movf	?_strcmp& (0+255),w,b
  9720  010C40  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9721  010C42  A4D8               	btfss	status,2,c
  9722  010C44  D01E               	goto	l1258
  9723                           
  9724                           ; BSR set to: 1
  9725                           ;ring_buffer_LUT.c: 604: terminal_printNewline();
  9726  010C46  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9727                           
  9728                           ;ring_buffer_LUT.c: 606: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9729  010C4A  0E00               	movlw	0
  9730  010C4C  0101               	movlb	1	; () banked
  9731  010C4E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9732  010C50  0E00               	movlw	0
  9733  010C52  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9734  010C54  0E06               	movlw	6
  9735  010C56  EC19  F099         	call	_terminal_textAttributes
  9736                           
  9737                           ;ring_buffer_LUT.c: 607: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  9738  010C5A  0E4A               	movlw	low STR_112
  9739  010C5C  0101               	movlb	1	; () banked
  9740  010C5E  6F64               	movwf	printf@f& (0+255),b
  9741  010C60  0EF9               	movlw	high STR_112
  9742  010C62  6F65               	movwf	(printf@f+1)& (0+255),b
  9743  010C64  C1AF  F166         	movff	_load_on_time,?_printf+2	;volatile
  9744  010C68  C1B0  F167         	movff	_load_on_time+1,?_printf+3	;volatile
  9745  010C6C  C1B1  F168         	movff	_load_on_time+2,?_printf+4	;volatile
  9746  010C70  C1B2  F169         	movff	_load_on_time+3,?_printf+5	;volatile
  9747  010C74  ECA4  F086         	call	_printf	;wreg free
  9748                           
  9749                           ;ring_buffer_LUT.c: 609: terminal_textAttributesReset();
  9750  010C78  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9751                           
  9752                           ;ring_buffer_LUT.c: 611: terminal_printNewline();
  9753  010C7C  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9754                           
  9755                           ;ring_buffer_LUT.c: 613: }
  9756  010C80  0012               	return	
  9757  010C82                     l1258:
  9758                           
  9759                           ;ring_buffer_LUT.c: 618: else if((0 == strcmp(line, "Help"))) {
  9760  010C82  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  9761  010C86  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9762  010C8A  0EAB               	movlw	low STR_113
  9763  010C8C  0101               	movlb	1	; () banked
  9764  010C8E  6F19               	movwf	strcmp@s2& (0+255),b
  9765  010C90  0EFF               	movlw	high STR_113
  9766  010C92  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9767  010C94  ECE4  F0B2         	call	_strcmp	;wreg free
  9768  010C98  0101               	movlb	1	; () banked
  9769  010C9A  5117               	movf	?_strcmp& (0+255),w,b
  9770  010C9C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9771  010C9E  A4D8               	btfss	status,2,c
  9772  010CA0  0012               	return	
  9773                           
  9774                           ; BSR set to: 1
  9775                           ;ring_buffer_LUT.c: 621: terminal_printNewline();
  9776  010CA2  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9777                           
  9778                           ;ring_buffer_LUT.c: 623: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9779  010CA6  0E00               	movlw	0
  9780  010CA8  0101               	movlb	1	; () banked
  9781  010CAA  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9782  010CAC  0E00               	movlw	0
  9783  010CAE  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9784  010CB0  0E03               	movlw	3
  9785  010CB2  EC19  F099         	call	_terminal_textAttributes
  9786                           
  9787                           ;ring_buffer_LUT.c: 624: printf("List of supported commands:\n\r\n\r"
  9788                           ;ring_buffer_LUT.c: 626: "Device Commands:\n\r"
  9789                           ;ring_buffer_LUT.c: 627: "   Reset: Clears the terminal and resets the micro\n\r"
  9790                           ;ring_buffer_LUT.c: 628: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  9791                           ;ring_buffer_LUT.c: 629: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
  9792                           ;ring_buffer_LUT.c: 630: "   *IDN?: Returns device identification string\n\r"
  9793                           ;ring_buffer_LUT.c: 631: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  9794  010CB6  0EB5               	movlw	low STR_114
  9795  010CB8  0101               	movlb	1	; () banked
  9796  010CBA  6F64               	movwf	printf@f& (0+255),b
  9797  010CBC  0EEC               	movlw	high STR_114
  9798  010CBE  6F65               	movwf	(printf@f+1)& (0+255),b
  9799  010CC0  ECA4  F086         	call	_printf	;wreg free
  9800                           
  9801                           ;ring_buffer_LUT.c: 663: terminal_printNewline();
  9802  010CC4  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9803                           
  9804                           ;ring_buffer_LUT.c: 664: printf("Help messages appear in yellow\n\r");
  9805  010CC8  0E51               	movlw	low STR_115
  9806  010CCA  0101               	movlb	1	; () banked
  9807  010CCC  6F64               	movwf	printf@f& (0+255),b
  9808  010CCE  0EFC               	movlw	high STR_115
  9809  010CD0  6F65               	movwf	(printf@f+1)& (0+255),b
  9810  010CD2  ECA4  F086         	call	_printf	;wreg free
  9811                           
  9812                           ;ring_buffer_LUT.c: 666: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9813  010CD6  0E00               	movlw	0
  9814  010CD8  0101               	movlb	1	; () banked
  9815  010CDA  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9816  010CDC  0E00               	movlw	0
  9817  010CDE  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9818  010CE0  0E02               	movlw	2
  9819  010CE2  EC19  F099         	call	_terminal_textAttributes
  9820                           
  9821                           ;ring_buffer_LUT.c: 667: printf("System parameters appear in green\n\r");
  9822  010CE6  0E82               	movlw	low STR_116
  9823  010CE8  0101               	movlb	1	; () banked
  9824  010CEA  6F64               	movwf	printf@f& (0+255),b
  9825  010CEC  0EFB               	movlw	high STR_116
  9826  010CEE  6F65               	movwf	(printf@f+1)& (0+255),b
  9827  010CF0  ECA4  F086         	call	_printf	;wreg free
  9828                           
  9829                           ;ring_buffer_LUT.c: 668: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9830  010CF4  0E00               	movlw	0
  9831  010CF6  0101               	movlb	1	; () banked
  9832  010CF8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9833  010CFA  0E00               	movlw	0
  9834  010CFC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9835  010CFE  0E06               	movlw	6
  9836  010D00  EC19  F099         	call	_terminal_textAttributes
  9837                           
  9838                           ;ring_buffer_LUT.c: 669: printf("Measurement responses appear in cyan\n\r");
  9839  010D04  0E11               	movlw	low STR_117
  9840  010D06  0101               	movlb	1	; () banked
  9841  010D08  6F64               	movwf	printf@f& (0+255),b
  9842  010D0A  0EFB               	movlw	high STR_117
  9843  010D0C  6F65               	movwf	(printf@f+1)& (0+255),b
  9844  010D0E  ECA4  F086         	call	_printf	;wreg free
  9845                           
  9846                           ;ring_buffer_LUT.c: 670: terminal_textAttributes(RED, BLACK, NORMAL);
  9847  010D12  0E00               	movlw	0
  9848  010D14  0101               	movlb	1	; () banked
  9849  010D16  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9850  010D18  0E00               	movlw	0
  9851  010D1A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9852  010D1C  0E01               	movlw	1
  9853  010D1E  EC19  F099         	call	_terminal_textAttributes
  9854                           
  9855                           ;ring_buffer_LUT.c: 671: printf("Errors appear in red\n\r");
  9856  010D22  0E2F               	movlw	low STR_118
  9857  010D24  0101               	movlb	1	; () banked
  9858  010D26  6F64               	movwf	printf@f& (0+255),b
  9859  010D28  0EFD               	movlw	high STR_118
  9860  010D2A  6F65               	movwf	(printf@f+1)& (0+255),b
  9861  010D2C  ECA4  F086         	call	_printf	;wreg free
  9862                           
  9863                           ;ring_buffer_LUT.c: 672: terminal_textAttributesReset();
  9864  010D30  ECE5  F0B6         	call	_terminal_textAttributesReset	;wreg free
  9865                           
  9866                           ;ring_buffer_LUT.c: 673: printf("User input appears in white\n\r");
  9867  010D34  0E92               	movlw	low STR_119
  9868  010D36  0101               	movlb	1	; () banked
  9869  010D38  6F64               	movwf	printf@f& (0+255),b
  9870  010D3A  0EFC               	movlw	high STR_119
  9871  010D3C  6F65               	movwf	(printf@f+1)& (0+255),b
  9872  010D3E  ECA4  F086         	call	_printf	;wreg free
  9873                           
  9874                           ;ring_buffer_LUT.c: 676: terminal_printNewline();
  9875  010D42  ECF6  F0B6         	call	_terminal_printNewline	;wreg free
  9876  010D46  0012               	return	
  9877  010D48                     __end_of_ringBufferLUT:
  9878                           	opt stack 0
  9879                           tblptru	equ	0xFF8
  9880                           tblptrh	equ	0xFF7
  9881                           tblptrl	equ	0xFF6
  9882                           tablat	equ	0xFF5
  9883                           intcon	equ	0xFF2
  9884                           postinc0	equ	0xFEE
  9885                           wreg	equ	0xFE8
  9886                           indf1	equ	0xFE7
  9887                           postdec1	equ	0xFE5
  9888                           fsr1h	equ	0xFE2
  9889                           fsr1l	equ	0xFE1
  9890                           indf2	equ	0xFDF
  9891                           postinc2	equ	0xFDE
  9892                           fsr2h	equ	0xFDA
  9893                           fsr2l	equ	0xFD9
  9894                           status	equ	0xFD8
  9895                           
  9896 ;; *************** function _terminal_textAttributesReset *****************
  9897 ;; Defined at:
  9898 ;;		line 223 in file "ring_buffer_interface.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;		None
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;		None
  9903 ;; Return value:  Size  Location     Type
  9904 ;;                  1    wreg      void 
  9905 ;; Registers used:
  9906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9907 ;; Tracked objects:
  9908 ;;		On entry : 0/0
  9909 ;;		On exit  : 0/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9916 ;;Total ram usage:        0 bytes
  9917 ;; Hardware stack levels used:    1
  9918 ;; Hardware stack levels required when called:   19
  9919 ;; This function calls:
  9920 ;;		_terminal_textAttributes
  9921 ;; This function is called by:
  9922 ;;		_main
  9923 ;;		_ringBufferLUT
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text4
  9928  016DCA                     __ptext4:
  9929                           	opt stack 0
  9930  016DCA                     _terminal_textAttributesReset:
  9931                           	opt stack 11
  9932                           
  9933                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  9934                           
  9935                           ;incstack = 0
  9936  016DCA  0E00               	movlw	0
  9937  016DCC  0101               	movlb	1	; () banked
  9938  016DCE  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  9939  016DD0  0E00               	movlw	0
  9940  016DD2  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9941  016DD4  0E07               	movlw	7
  9942  016DD6  EC19  F099         	call	_terminal_textAttributes
  9943  016DDA  0012               	return		;funcret
  9944  016DDC                     __end_of_terminal_textAttributesReset:
  9945                           	opt stack 0
  9946                           tblptru	equ	0xFF8
  9947                           tblptrh	equ	0xFF7
  9948                           tblptrl	equ	0xFF6
  9949                           tablat	equ	0xFF5
  9950                           intcon	equ	0xFF2
  9951                           postinc0	equ	0xFEE
  9952                           wreg	equ	0xFE8
  9953                           indf1	equ	0xFE7
  9954                           postdec1	equ	0xFE5
  9955                           fsr1h	equ	0xFE2
  9956                           fsr1l	equ	0xFE1
  9957                           indf2	equ	0xFDF
  9958                           postinc2	equ	0xFDE
  9959                           fsr2h	equ	0xFDA
  9960                           fsr2l	equ	0xFD9
  9961                           status	equ	0xFD8
  9962                           
  9963 ;; *************** function _terminal_textAttributes *****************
  9964 ;; Defined at:
  9965 ;;		line 115 in file "ring_buffer_interface.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  foreground_c    1    wreg     enum E17893
  9968 ;;  background_c    1  142[BANK1 ] enum E17893
  9969 ;;  input_attrib    1  143[BANK1 ] enum E17885
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  foreground_c    1  144[BANK1 ] enum E17893
  9972 ;;  output_buff    15  145[BANK1 ] unsigned char [15]
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9982 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9986 ;;Total ram usage:       18 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:   18
  9989 ;; This function calls:
  9990 ;;		_printf
  9991 ;;		_strcat
  9992 ;;		_strncpy
  9993 ;; This function is called by:
  9994 ;;		_terminal_textAttributesReset
  9995 ;;		_ringBufferLUT
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text5
 10000  013232                     __ptext5:
 10001                           	opt stack 0
 10002  013232                     _terminal_textAttributes:
 10003                           	opt stack 11
 10004                           
 10005                           ;incstack = 0
 10006                           ;terminal_textAttributes@foreground_color stored from wreg
 10007  013232  0101               	movlb	1	; () banked
 10008  013234  6F90               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 10009                           
 10010                           ;ring_buffer_interface.c: 119: char output_buff[15];
 10011                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 10012  013236  0E91               	movlw	low terminal_textAttributes@output_buff
 10013  013238  0101               	movlb	1	; () banked
 10014  01323A  6F17               	movwf	strncpy@to& (0+255),b
 10015  01323C  0E01               	movlw	high terminal_textAttributes@output_buff
 10016  01323E  6F18               	movwf	(strncpy@to+1)& (0+255),b
 10017  013240  0EF6               	movlw	low STR_11
 10018  013242  6F19               	movwf	strncpy@from& (0+255),b
 10019  013244  0EFF               	movlw	high STR_11
 10020  013246  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 10021  013248  0E00               	movlw	0
 10022  01324A  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 10023  01324C  0E0F               	movlw	15
 10024  01324E  6F1B               	movwf	strncpy@size& (0+255),b
 10025  013250  ECDA  F0B0         	call	_strncpy	;wreg free
 10026                           
 10027                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 10028  013254  D054               	goto	l1064
 10029  013256                     
 10030                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 10031  013256  0E91               	movlw	low terminal_textAttributes@output_buff
 10032  013258  0101               	movlb	1	; () banked
 10033  01325A  6F17               	movwf	strcat@to& (0+255),b
 10034  01325C  0E01               	movlw	high terminal_textAttributes@output_buff
 10035  01325E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10036  013260  0ECA               	movlw	low (STR_20+1)
 10037  013262  6F19               	movwf	strcat@from& (0+255),b
 10038  013264  0EFF               	movlw	high (STR_20+1)
 10039  013266  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10040  013268  EC33  F0B3         	call	_strcat	;wreg free
 10041                           
 10042                           ;ring_buffer_interface.c: 127: break;
 10043  01326C  D05D               	goto	l1066
 10044  01326E                     
 10045                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 10046  01326E  0E91               	movlw	low terminal_textAttributes@output_buff
 10047  013270  0101               	movlb	1	; () banked
 10048  013272  6F17               	movwf	strcat@to& (0+255),b
 10049  013274  0E01               	movlw	high terminal_textAttributes@output_buff
 10050  013276  6F18               	movwf	(strcat@to+1)& (0+255),b
 10051  013278  0E70               	movlw	low (STR_67+20)
 10052  01327A  6F19               	movwf	strcat@from& (0+255),b
 10053  01327C  0EFD               	movlw	high (STR_67+20)
 10054  01327E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10055  013280  EC33  F0B3         	call	_strcat	;wreg free
 10056                           
 10057                           ;ring_buffer_interface.c: 130: break;
 10058  013284  D051               	goto	l1066
 10059  013286                     
 10060                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 10061  013286  0E91               	movlw	low terminal_textAttributes@output_buff
 10062  013288  0101               	movlb	1	; () banked
 10063  01328A  6F17               	movwf	strcat@to& (0+255),b
 10064  01328C  0E01               	movlw	high terminal_textAttributes@output_buff
 10065  01328E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10066  013290  0EDF               	movlw	low (STR_24+1)
 10067  013292  6F19               	movwf	strcat@from& (0+255),b
 10068  013294  0EFF               	movlw	high (STR_24+1)
 10069  013296  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10070  013298  EC33  F0B3         	call	_strcat	;wreg free
 10071                           
 10072                           ;ring_buffer_interface.c: 133: break;
 10073  01329C  D045               	goto	l1066
 10074  01329E                     
 10075                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 10076  01329E  0E91               	movlw	low terminal_textAttributes@output_buff
 10077  0132A0  0101               	movlb	1	; () banked
 10078  0132A2  6F17               	movwf	strcat@to& (0+255),b
 10079  0132A4  0E01               	movlw	high terminal_textAttributes@output_buff
 10080  0132A6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10081  0132A8  0EE5               	movlw	low (STR_25+1)
 10082  0132AA  6F19               	movwf	strcat@from& (0+255),b
 10083  0132AC  0EFF               	movlw	high (STR_25+1)
 10084  0132AE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10085  0132B0  EC33  F0B3         	call	_strcat	;wreg free
 10086                           
 10087                           ;ring_buffer_interface.c: 136: break;
 10088  0132B4  D039               	goto	l1066
 10089  0132B6                     
 10090                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 10091  0132B6  0E91               	movlw	low terminal_textAttributes@output_buff
 10092  0132B8  0101               	movlb	1	; () banked
 10093  0132BA  6F17               	movwf	strcat@to& (0+255),b
 10094  0132BC  0E01               	movlw	high terminal_textAttributes@output_buff
 10095  0132BE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10096  0132C0  0EF1               	movlw	low (STR_27+1)
 10097  0132C2  6F19               	movwf	strcat@from& (0+255),b
 10098  0132C4  0EFF               	movlw	high (STR_27+1)
 10099  0132C6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10100  0132C8  EC33  F0B3         	call	_strcat	;wreg free
 10101                           
 10102                           ;ring_buffer_interface.c: 139: break;
 10103  0132CC  D02D               	goto	l1066
 10104  0132CE                     
 10105                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 10106  0132CE  0E91               	movlw	low terminal_textAttributes@output_buff
 10107  0132D0  0101               	movlb	1	; () banked
 10108  0132D2  6F17               	movwf	strcat@to& (0+255),b
 10109  0132D4  0E01               	movlw	high terminal_textAttributes@output_buff
 10110  0132D6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10111  0132D8  0EF9               	movlw	low STR_17
 10112  0132DA  6F19               	movwf	strcat@from& (0+255),b
 10113  0132DC  0EFF               	movlw	high STR_17
 10114  0132DE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10115  0132E0  EC33  F0B3         	call	_strcat	;wreg free
 10116                           
 10117                           ;ring_buffer_interface.c: 142: break;
 10118  0132E4  D021               	goto	l1066
 10119  0132E6                     
 10120                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 10121  0132E6  0E91               	movlw	low terminal_textAttributes@output_buff
 10122  0132E8  0101               	movlb	1	; () banked
 10123  0132EA  6F17               	movwf	strcat@to& (0+255),b
 10124  0132EC  0E01               	movlw	high terminal_textAttributes@output_buff
 10125  0132EE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10126  0132F0  0ECA               	movlw	low (STR_20+1)
 10127  0132F2  6F19               	movwf	strcat@from& (0+255),b
 10128  0132F4  0EFF               	movlw	high (STR_20+1)
 10129  0132F6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10130  0132F8  EC33  F0B3         	call	_strcat	;wreg free
 10131                           
 10132                           ;ring_buffer_interface.c: 147: }
 10133                           
 10134                           ;ring_buffer_interface.c: 146: break;
 10135  0132FC  D015               	goto	l1066
 10136  0132FE                     l1064:
 10137  0132FE  0101               	movlb	1	; () banked
 10138  013300  518F               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 10139                           
 10140                           ; Switch size 1, requested type "space"
 10141                           ; Number of cases is 6, Range of values is 0 to 5
 10142                           ; switch strategies available:
 10143                           ; Name         Instructions Cycles
 10144                           ; simple_byte           19    10 (average)
 10145                           ;	Chosen strategy is simple_byte
 10146  013302  0A00               	xorlw	0	; case 0
 10147  013304  B4D8               	btfsc	status,2,c
 10148  013306  D7A7               	goto	l1065
 10149  013308  0A01               	xorlw	1	; case 1
 10150  01330A  B4D8               	btfsc	status,2,c
 10151  01330C  D7B0               	goto	l1067
 10152  01330E  0A03               	xorlw	3	; case 2
 10153  013310  B4D8               	btfsc	status,2,c
 10154  013312  D7B9               	goto	l1068
 10155  013314  0A01               	xorlw	1	; case 3
 10156  013316  B4D8               	btfsc	status,2,c
 10157  013318  D7C2               	goto	l1069
 10158  01331A  0A07               	xorlw	7	; case 4
 10159  01331C  B4D8               	btfsc	status,2,c
 10160  01331E  D7CB               	goto	l1070
 10161  013320  0A01               	xorlw	1	; case 5
 10162  013322  B4D8               	btfsc	status,2,c
 10163  013324  D7D4               	goto	l1071
 10164  013326  D7DF               	goto	l1072
 10165  013328                     l1066:
 10166                           
 10167                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 10168                           
 10169                           ; BSR set to: 1
 10170  013328  0E91               	movlw	low terminal_textAttributes@output_buff
 10171  01332A  0101               	movlb	1	; () banked
 10172  01332C  6F17               	movwf	strcat@to& (0+255),b
 10173  01332E  0E01               	movlw	high terminal_textAttributes@output_buff
 10174  013330  6F18               	movwf	(strcat@to+1)& (0+255),b
 10175  013332  0EFB               	movlw	low STR_19
 10176  013334  6F19               	movwf	strcat@from& (0+255),b
 10177  013336  0EFF               	movlw	high STR_19
 10178  013338  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10179  01333A  EC33  F0B3         	call	_strcat	;wreg free
 10180                           
 10181                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 10182  01333E  D06C               	goto	l1073
 10183  013340                     
 10184                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 10185  013340  0E91               	movlw	low terminal_textAttributes@output_buff
 10186  013342  0101               	movlb	1	; () banked
 10187  013344  6F17               	movwf	strcat@to& (0+255),b
 10188  013346  0E01               	movlw	high terminal_textAttributes@output_buff
 10189  013348  6F18               	movwf	(strcat@to+1)& (0+255),b
 10190  01334A  0EC9               	movlw	low STR_20
 10191  01334C  6F19               	movwf	strcat@from& (0+255),b
 10192  01334E  0EFF               	movlw	high STR_20
 10193  013350  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10194  013352  EC33  F0B3         	call	_strcat	;wreg free
 10195                           
 10196                           ;ring_buffer_interface.c: 155: break;
 10197  013356  D07B               	goto	l1075
 10198  013358                     
 10199                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 10200  013358  0E91               	movlw	low terminal_textAttributes@output_buff
 10201  01335A  0101               	movlb	1	; () banked
 10202  01335C  6F17               	movwf	strcat@to& (0+255),b
 10203  01335E  0E01               	movlw	high terminal_textAttributes@output_buff
 10204  013360  6F18               	movwf	(strcat@to+1)& (0+255),b
 10205  013362  0ECC               	movlw	low STR_21
 10206  013364  6F19               	movwf	strcat@from& (0+255),b
 10207  013366  0EFF               	movlw	high STR_21
 10208  013368  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10209  01336A  EC33  F0B3         	call	_strcat	;wreg free
 10210                           
 10211                           ;ring_buffer_interface.c: 158: break;
 10212  01336E  D06F               	goto	l1075
 10213  013370                     
 10214                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 10215  013370  0E91               	movlw	low terminal_textAttributes@output_buff
 10216  013372  0101               	movlb	1	; () banked
 10217  013374  6F17               	movwf	strcat@to& (0+255),b
 10218  013376  0E01               	movlw	high terminal_textAttributes@output_buff
 10219  013378  6F18               	movwf	(strcat@to+1)& (0+255),b
 10220  01337A  0ED2               	movlw	low STR_22
 10221  01337C  6F19               	movwf	strcat@from& (0+255),b
 10222  01337E  0EFF               	movlw	high STR_22
 10223  013380  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10224  013382  EC33  F0B3         	call	_strcat	;wreg free
 10225                           
 10226                           ;ring_buffer_interface.c: 161: break;
 10227  013386  D063               	goto	l1075
 10228  013388                     
 10229                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 10230  013388  0E91               	movlw	low terminal_textAttributes@output_buff
 10231  01338A  0101               	movlb	1	; () banked
 10232  01338C  6F17               	movwf	strcat@to& (0+255),b
 10233  01338E  0E01               	movlw	high terminal_textAttributes@output_buff
 10234  013390  6F18               	movwf	(strcat@to+1)& (0+255),b
 10235  013392  0ED8               	movlw	low STR_23
 10236  013394  6F19               	movwf	strcat@from& (0+255),b
 10237  013396  0EFF               	movlw	high STR_23
 10238  013398  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10239  01339A  EC33  F0B3         	call	_strcat	;wreg free
 10240                           
 10241                           ;ring_buffer_interface.c: 164: break;
 10242  01339E  D057               	goto	l1075
 10243  0133A0                     
 10244                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 10245  0133A0  0E91               	movlw	low terminal_textAttributes@output_buff
 10246  0133A2  0101               	movlb	1	; () banked
 10247  0133A4  6F17               	movwf	strcat@to& (0+255),b
 10248  0133A6  0E01               	movlw	high terminal_textAttributes@output_buff
 10249  0133A8  6F18               	movwf	(strcat@to+1)& (0+255),b
 10250  0133AA  0EDE               	movlw	low STR_24
 10251  0133AC  6F19               	movwf	strcat@from& (0+255),b
 10252  0133AE  0EFF               	movlw	high STR_24
 10253  0133B0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10254  0133B2  EC33  F0B3         	call	_strcat	;wreg free
 10255                           
 10256                           ;ring_buffer_interface.c: 167: break;
 10257  0133B6  D04B               	goto	l1075
 10258  0133B8                     
 10259                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10260  0133B8  0E91               	movlw	low terminal_textAttributes@output_buff
 10261  0133BA  0101               	movlb	1	; () banked
 10262  0133BC  6F17               	movwf	strcat@to& (0+255),b
 10263  0133BE  0E01               	movlw	high terminal_textAttributes@output_buff
 10264  0133C0  6F18               	movwf	(strcat@to+1)& (0+255),b
 10265  0133C2  0EE4               	movlw	low STR_25
 10266  0133C4  6F19               	movwf	strcat@from& (0+255),b
 10267  0133C6  0EFF               	movlw	high STR_25
 10268  0133C8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10269  0133CA  EC33  F0B3         	call	_strcat	;wreg free
 10270                           
 10271                           ;ring_buffer_interface.c: 170: break;
 10272  0133CE  D03F               	goto	l1075
 10273  0133D0                     
 10274                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10275  0133D0  0E91               	movlw	low terminal_textAttributes@output_buff
 10276  0133D2  0101               	movlb	1	; () banked
 10277  0133D4  6F17               	movwf	strcat@to& (0+255),b
 10278  0133D6  0E01               	movlw	high terminal_textAttributes@output_buff
 10279  0133D8  6F18               	movwf	(strcat@to+1)& (0+255),b
 10280  0133DA  0EEA               	movlw	low STR_26
 10281  0133DC  6F19               	movwf	strcat@from& (0+255),b
 10282  0133DE  0EFF               	movlw	high STR_26
 10283  0133E0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10284  0133E2  EC33  F0B3         	call	_strcat	;wreg free
 10285                           
 10286                           ;ring_buffer_interface.c: 173: break;
 10287  0133E6  D033               	goto	l1075
 10288  0133E8                     
 10289                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10290  0133E8  0E91               	movlw	low terminal_textAttributes@output_buff
 10291  0133EA  0101               	movlb	1	; () banked
 10292  0133EC  6F17               	movwf	strcat@to& (0+255),b
 10293  0133EE  0E01               	movlw	high terminal_textAttributes@output_buff
 10294  0133F0  6F18               	movwf	(strcat@to+1)& (0+255),b
 10295  0133F2  0EF0               	movlw	low STR_27
 10296  0133F4  6F19               	movwf	strcat@from& (0+255),b
 10297  0133F6  0EFF               	movlw	high STR_27
 10298  0133F8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10299  0133FA  EC33  F0B3         	call	_strcat	;wreg free
 10300                           
 10301                           ;ring_buffer_interface.c: 176: break;
 10302  0133FE  D027               	goto	l1075
 10303  013400                     
 10304                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10305  013400  0E91               	movlw	low terminal_textAttributes@output_buff
 10306  013402  0101               	movlb	1	; () banked
 10307  013404  6F17               	movwf	strcat@to& (0+255),b
 10308  013406  0E01               	movlw	high terminal_textAttributes@output_buff
 10309  013408  6F18               	movwf	(strcat@to+1)& (0+255),b
 10310  01340A  0EF0               	movlw	low STR_27
 10311  01340C  6F19               	movwf	strcat@from& (0+255),b
 10312  01340E  0EFF               	movlw	high STR_27
 10313  013410  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10314  013412  EC33  F0B3         	call	_strcat	;wreg free
 10315                           
 10316                           ;ring_buffer_interface.c: 181: }
 10317                           
 10318                           ;ring_buffer_interface.c: 180: break;
 10319  013416  D01B               	goto	l1075
 10320  013418                     l1073:
 10321  013418  0101               	movlb	1	; () banked
 10322  01341A  5190               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10323                           
 10324                           ; Switch size 1, requested type "space"
 10325                           ; Number of cases is 8, Range of values is 0 to 7
 10326                           ; switch strategies available:
 10327                           ; Name         Instructions Cycles
 10328                           ; simple_byte           25    13 (average)
 10329                           ;	Chosen strategy is simple_byte
 10330  01341C  0A00               	xorlw	0	; case 0
 10331  01341E  B4D8               	btfsc	status,2,c
 10332  013420  D78F               	goto	l1074
 10333  013422  0A01               	xorlw	1	; case 1
 10334  013424  B4D8               	btfsc	status,2,c
 10335  013426  D798               	goto	l1076
 10336  013428  0A03               	xorlw	3	; case 2
 10337  01342A  B4D8               	btfsc	status,2,c
 10338  01342C  D7A1               	goto	l1077
 10339  01342E  0A01               	xorlw	1	; case 3
 10340  013430  B4D8               	btfsc	status,2,c
 10341  013432  D7AA               	goto	l1078
 10342  013434  0A07               	xorlw	7	; case 4
 10343  013436  B4D8               	btfsc	status,2,c
 10344  013438  D7B3               	goto	l1079
 10345  01343A  0A01               	xorlw	1	; case 5
 10346  01343C  B4D8               	btfsc	status,2,c
 10347  01343E  D7BC               	goto	l1080
 10348  013440  0A03               	xorlw	3	; case 6
 10349  013442  B4D8               	btfsc	status,2,c
 10350  013444  D7C5               	goto	l1081
 10351  013446  0A01               	xorlw	1	; case 7
 10352  013448  B4D8               	btfsc	status,2,c
 10353  01344A  D7CE               	goto	l1082
 10354  01344C  D7D9               	goto	l1083
 10355  01344E                     l1075:
 10356                           
 10357                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10358                           
 10359                           ; BSR set to: 1
 10360  01344E  0E91               	movlw	low terminal_textAttributes@output_buff
 10361  013450  0101               	movlb	1	; () banked
 10362  013452  6F17               	movwf	strcat@to& (0+255),b
 10363  013454  0E01               	movlw	high terminal_textAttributes@output_buff
 10364  013456  6F18               	movwf	(strcat@to+1)& (0+255),b
 10365  013458  0EFB               	movlw	low STR_19
 10366  01345A  6F19               	movwf	strcat@from& (0+255),b
 10367  01345C  0EFF               	movlw	high STR_19
 10368  01345E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10369  013460  EC33  F0B3         	call	_strcat	;wreg free
 10370                           
 10371                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10372  013464  D06C               	goto	l1084
 10373  013466                     
 10374                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10375  013466  0E91               	movlw	low terminal_textAttributes@output_buff
 10376  013468  0101               	movlb	1	; () banked
 10377  01346A  6F17               	movwf	strcat@to& (0+255),b
 10378  01346C  0E01               	movlw	high terminal_textAttributes@output_buff
 10379  01346E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10380  013470  0E4D               	movlw	low (STR_120+9)
 10381  013472  6F19               	movwf	strcat@from& (0+255),b
 10382  013474  0EFF               	movlw	high (STR_120+9)
 10383  013476  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10384  013478  EC33  F0B3         	call	_strcat	;wreg free
 10385                           
 10386                           ;ring_buffer_interface.c: 189: break;
 10387  01347C  D07B               	goto	l1086
 10388  01347E                     
 10389                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10390  01347E  0E91               	movlw	low terminal_textAttributes@output_buff
 10391  013480  0101               	movlb	1	; () banked
 10392  013482  6F17               	movwf	strcat@to& (0+255),b
 10393  013484  0E01               	movlw	high terminal_textAttributes@output_buff
 10394  013486  6F18               	movwf	(strcat@to+1)& (0+255),b
 10395  013488  0ECF               	movlw	low STR_31
 10396  01348A  6F19               	movwf	strcat@from& (0+255),b
 10397  01348C  0EFF               	movlw	high STR_31
 10398  01348E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10399  013490  EC33  F0B3         	call	_strcat	;wreg free
 10400                           
 10401                           ;ring_buffer_interface.c: 192: break;
 10402  013494  D06F               	goto	l1086
 10403  013496                     
 10404                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10405  013496  0E91               	movlw	low terminal_textAttributes@output_buff
 10406  013498  0101               	movlb	1	; () banked
 10407  01349A  6F17               	movwf	strcat@to& (0+255),b
 10408  01349C  0E01               	movlw	high terminal_textAttributes@output_buff
 10409  01349E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10410  0134A0  0ED5               	movlw	low STR_32
 10411  0134A2  6F19               	movwf	strcat@from& (0+255),b
 10412  0134A4  0EFF               	movlw	high STR_32
 10413  0134A6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10414  0134A8  EC33  F0B3         	call	_strcat	;wreg free
 10415                           
 10416                           ;ring_buffer_interface.c: 195: break;
 10417  0134AC  D063               	goto	l1086
 10418  0134AE                     
 10419                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10420  0134AE  0E91               	movlw	low terminal_textAttributes@output_buff
 10421  0134B0  0101               	movlb	1	; () banked
 10422  0134B2  6F17               	movwf	strcat@to& (0+255),b
 10423  0134B4  0E01               	movlw	high terminal_textAttributes@output_buff
 10424  0134B6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10425  0134B8  0EDB               	movlw	low STR_33
 10426  0134BA  6F19               	movwf	strcat@from& (0+255),b
 10427  0134BC  0EFF               	movlw	high STR_33
 10428  0134BE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10429  0134C0  EC33  F0B3         	call	_strcat	;wreg free
 10430                           
 10431                           ;ring_buffer_interface.c: 198: break;
 10432  0134C4  D057               	goto	l1086
 10433  0134C6                     
 10434                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10435  0134C6  0E91               	movlw	low terminal_textAttributes@output_buff
 10436  0134C8  0101               	movlb	1	; () banked
 10437  0134CA  6F17               	movwf	strcat@to& (0+255),b
 10438  0134CC  0E01               	movlw	high terminal_textAttributes@output_buff
 10439  0134CE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10440  0134D0  0EE1               	movlw	low STR_34
 10441  0134D2  6F19               	movwf	strcat@from& (0+255),b
 10442  0134D4  0EFF               	movlw	high STR_34
 10443  0134D6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10444  0134D8  EC33  F0B3         	call	_strcat	;wreg free
 10445                           
 10446                           ;ring_buffer_interface.c: 201: break;
 10447  0134DC  D04B               	goto	l1086
 10448  0134DE                     
 10449                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10450  0134DE  0E91               	movlw	low terminal_textAttributes@output_buff
 10451  0134E0  0101               	movlb	1	; () banked
 10452  0134E2  6F17               	movwf	strcat@to& (0+255),b
 10453  0134E4  0E01               	movlw	high terminal_textAttributes@output_buff
 10454  0134E6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10455  0134E8  0EE7               	movlw	low STR_35
 10456  0134EA  6F19               	movwf	strcat@from& (0+255),b
 10457  0134EC  0EFF               	movlw	high STR_35
 10458  0134EE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10459  0134F0  EC33  F0B3         	call	_strcat	;wreg free
 10460                           
 10461                           ;ring_buffer_interface.c: 204: break;
 10462  0134F4  D03F               	goto	l1086
 10463  0134F6                     
 10464                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10465  0134F6  0E91               	movlw	low terminal_textAttributes@output_buff
 10466  0134F8  0101               	movlb	1	; () banked
 10467  0134FA  6F17               	movwf	strcat@to& (0+255),b
 10468  0134FC  0E01               	movlw	high terminal_textAttributes@output_buff
 10469  0134FE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10470  013500  0EED               	movlw	low STR_36
 10471  013502  6F19               	movwf	strcat@from& (0+255),b
 10472  013504  0EFF               	movlw	high STR_36
 10473  013506  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10474  013508  EC33  F0B3         	call	_strcat	;wreg free
 10475                           
 10476                           ;ring_buffer_interface.c: 207: break;
 10477  01350C  D033               	goto	l1086
 10478  01350E                     
 10479                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10480  01350E  0E91               	movlw	low terminal_textAttributes@output_buff
 10481  013510  0101               	movlb	1	; () banked
 10482  013512  6F17               	movwf	strcat@to& (0+255),b
 10483  013514  0E01               	movlw	high terminal_textAttributes@output_buff
 10484  013516  6F18               	movwf	(strcat@to+1)& (0+255),b
 10485  013518  0EF3               	movlw	low STR_37
 10486  01351A  6F19               	movwf	strcat@from& (0+255),b
 10487  01351C  0EFF               	movlw	high STR_37
 10488  01351E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10489  013520  EC33  F0B3         	call	_strcat	;wreg free
 10490                           
 10491                           ;ring_buffer_interface.c: 210: break;
 10492  013524  D027               	goto	l1086
 10493  013526                     
 10494                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10495  013526  0E91               	movlw	low terminal_textAttributes@output_buff
 10496  013528  0101               	movlb	1	; () banked
 10497  01352A  6F17               	movwf	strcat@to& (0+255),b
 10498  01352C  0E01               	movlw	high terminal_textAttributes@output_buff
 10499  01352E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10500  013530  0EF3               	movlw	low STR_37
 10501  013532  6F19               	movwf	strcat@from& (0+255),b
 10502  013534  0EFF               	movlw	high STR_37
 10503  013536  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10504  013538  EC33  F0B3         	call	_strcat	;wreg free
 10505                           
 10506                           ;ring_buffer_interface.c: 215: }
 10507                           
 10508                           ;ring_buffer_interface.c: 214: break;
 10509  01353C  D01B               	goto	l1086
 10510  01353E                     l1084:
 10511  01353E  0101               	movlb	1	; () banked
 10512  013540  518E               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10513                           
 10514                           ; Switch size 1, requested type "space"
 10515                           ; Number of cases is 8, Range of values is 0 to 7
 10516                           ; switch strategies available:
 10517                           ; Name         Instructions Cycles
 10518                           ; simple_byte           25    13 (average)
 10519                           ;	Chosen strategy is simple_byte
 10520  013542  0A00               	xorlw	0	; case 0
 10521  013544  B4D8               	btfsc	status,2,c
 10522  013546  D78F               	goto	l1085
 10523  013548  0A01               	xorlw	1	; case 1
 10524  01354A  B4D8               	btfsc	status,2,c
 10525  01354C  D798               	goto	l1087
 10526  01354E  0A03               	xorlw	3	; case 2
 10527  013550  B4D8               	btfsc	status,2,c
 10528  013552  D7A1               	goto	l1088
 10529  013554  0A01               	xorlw	1	; case 3
 10530  013556  B4D8               	btfsc	status,2,c
 10531  013558  D7AA               	goto	l1089
 10532  01355A  0A07               	xorlw	7	; case 4
 10533  01355C  B4D8               	btfsc	status,2,c
 10534  01355E  D7B3               	goto	l1090
 10535  013560  0A01               	xorlw	1	; case 5
 10536  013562  B4D8               	btfsc	status,2,c
 10537  013564  D7BC               	goto	l1091
 10538  013566  0A03               	xorlw	3	; case 6
 10539  013568  B4D8               	btfsc	status,2,c
 10540  01356A  D7C5               	goto	l1092
 10541  01356C  0A01               	xorlw	1	; case 7
 10542  01356E  B4D8               	btfsc	status,2,c
 10543  013570  D7CE               	goto	l1093
 10544  013572  D7D9               	goto	l1094
 10545  013574                     l1086:
 10546                           
 10547                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 10548                           
 10549                           ; BSR set to: 1
 10550  013574  0E91               	movlw	low terminal_textAttributes@output_buff
 10551  013576  0101               	movlb	1	; () banked
 10552  013578  6F17               	movwf	strcat@to& (0+255),b
 10553  01357A  0E01               	movlw	high terminal_textAttributes@output_buff
 10554  01357C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10555  01357E  0EFD               	movlw	low STR_39
 10556  013580  6F19               	movwf	strcat@from& (0+255),b
 10557  013582  0EFF               	movlw	high STR_39
 10558  013584  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10559  013586  EC33  F0B3         	call	_strcat	;wreg free
 10560                           
 10561                           ;ring_buffer_interface.c: 219: printf(output_buff);
 10562  01358A  0E91               	movlw	low terminal_textAttributes@output_buff
 10563  01358C  0101               	movlb	1	; () banked
 10564  01358E  6F64               	movwf	printf@f& (0+255),b
 10565  013590  0E01               	movlw	high terminal_textAttributes@output_buff
 10566  013592  6F65               	movwf	(printf@f+1)& (0+255),b
 10567  013594  ECA4  F086         	call	_printf	;wreg free
 10568  013598  0012               	return		;funcret
 10569  01359A                     __end_of_terminal_textAttributes:
 10570                           	opt stack 0
 10571                           tblptru	equ	0xFF8
 10572                           tblptrh	equ	0xFF7
 10573                           tblptrl	equ	0xFF6
 10574                           tablat	equ	0xFF5
 10575                           intcon	equ	0xFF2
 10576                           postinc0	equ	0xFEE
 10577                           wreg	equ	0xFE8
 10578                           indf1	equ	0xFE7
 10579                           postdec1	equ	0xFE5
 10580                           fsr1h	equ	0xFE2
 10581                           fsr1l	equ	0xFE1
 10582                           indf2	equ	0xFDF
 10583                           postinc2	equ	0xFDE
 10584                           fsr2h	equ	0xFDA
 10585                           fsr2l	equ	0xFD9
 10586                           status	equ	0xFD8
 10587                           
 10588 ;; *************** function _strncpy *****************
 10589 ;; Defined at:
 10590 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10593 ;;		 -> terminal_textAttributes@output_buff(15), 
 10594 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10595 ;;		 -> STR_11(3), 
 10596 ;;  size            2   27[BANK1 ] unsigned int 
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 10599 ;;		 -> terminal_textAttributes@output_buff(15), 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  2   23[BANK1 ] PTR unsigned char 
 10602 ;; Registers used:
 10603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10609 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10610 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10612 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10613 ;;Total ram usage:        8 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:   14
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_terminal_textAttributes
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text6
 10624  0161B4                     __ptext6:
 10625                           	opt stack 0
 10626  0161B4                     _strncpy:
 10627                           	opt stack 14
 10628                           
 10629                           ;incstack = 0
 10630  0161B4  C117  F11D         	movff	strncpy@to,strncpy@cp
 10631  0161B8  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 10632  0161BC  D018               	goto	l2156
 10633  0161BE  0101               	movlb	1	; () banked
 10634  0161C0  071B               	decf	strncpy@size& (0+255),f,b
 10635  0161C2  A0D8               	btfss	status,0,c
 10636  0161C4  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10637                           
 10638                           ; BSR set to: 1
 10639  0161C6  C119  FFF6         	movff	strncpy@from,tblptrl
 10640  0161CA  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 10641  0161CE  4B19               	infsnz	strncpy@from& (0+255),f,b
 10642  0161D0  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 10643  0161D2                     	if	0	;tblptru may be non-zero
 10644  0161D2                     	endif
 10645  0161D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10646  0161D2  0E00               	movlw	low (__mediumconst shr (0+16))
 10647  0161D4  6EF8               	movwf	tblptru,c
 10648  0161D6                     	endif
 10649  0161D6  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10650  0161DA  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10651  0161DE  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10652  0161E0  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10653  0161E2  0008               	tblrd		*
 10654  0161E4  CFF5 FFDF          	movff	tablat,indf2
 10655  0161E8  50DF               	movf	indf2,w,c
 10656  0161EA  B4D8               	btfsc	status,2,c
 10657  0161EC  D00E               	goto	l2158
 10658  0161EE                     l2156:
 10659                           
 10660                           ; BSR set to: 1
 10661                           
 10662                           ; BSR set to: 1
 10663  0161EE  0101               	movlb	1	; () banked
 10664  0161F0  511B               	movf	strncpy@size& (0+255),w,b
 10665  0161F2  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 10666  0161F4  B4D8               	btfsc	status,2,c
 10667  0161F6  D009               	goto	l2158
 10668  0161F8  D7E2               	goto	l2155
 10669  0161FA                     l10373:
 10670                           
 10671                           ; BSR set to: 1
 10672  0161FA  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10673  0161FE  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10674  016202  0E00               	movlw	0
 10675  016204  6EDF               	movwf	indf2,c
 10676                           
 10677                           ; BSR set to: 1
 10678  016206  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10679  016208  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10680  01620A                     l2158:
 10681                           
 10682                           ; BSR set to: 1
 10683                           
 10684                           ; BSR set to: 1
 10685  01620A  071B               	decf	strncpy@size& (0+255),f,b
 10686  01620C  A0D8               	btfss	status,0,c
 10687  01620E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10688  016210  291B               	incf	strncpy@size& (0+255),w,b
 10689  016212  E1F3               	bnz	l10373
 10690  016214  291C               	incf	(strncpy@size+1)& (0+255),w,b
 10691  016216  B4D8               	btfsc	status,2,c
 10692  016218  0012               	return	
 10693  01621A  D7EF               	goto	l2159
 10694  01621C                     __end_of_strncpy:
 10695                           	opt stack 0
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           intcon	equ	0xFF2
 10701                           postinc0	equ	0xFEE
 10702                           wreg	equ	0xFE8
 10703                           indf1	equ	0xFE7
 10704                           postdec1	equ	0xFE5
 10705                           fsr1h	equ	0xFE2
 10706                           fsr1l	equ	0xFE1
 10707                           indf2	equ	0xFDF
 10708                           postinc2	equ	0xFDE
 10709                           fsr2h	equ	0xFDA
 10710                           fsr2l	equ	0xFD9
 10711                           status	equ	0xFD8
 10712                           
 10713 ;; *************** function _strcat *****************
 10714 ;; Defined at:
 10715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10718 ;;		 -> terminal_textAttributes@output_buff(15), 
 10719 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10720 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 10721 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 10722 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 10723 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 10724 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 10725 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 10726 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 10729 ;;		 -> terminal_textAttributes@output_buff(15), 
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  2   23[BANK1 ] PTR unsigned char 
 10732 ;; Registers used:
 10733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10739 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10742 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10743 ;;Total ram usage:        6 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; Hardware stack levels required when called:   14
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_terminal_textAttributes
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text7
 10754  016666                     __ptext7:
 10755                           	opt stack 0
 10756  016666                     _strcat:
 10757                           	opt stack 14
 10758                           
 10759                           ; BSR set to: 1
 10760                           ;incstack = 0
 10761  016666  C117  F11B         	movff	strcat@to,strcat@cp
 10762  01666A  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 10763  01666E  D003               	goto	l2125
 10764  016670  0101               	movlb	1	; () banked
 10765  016672  4B1B               	infsnz	strcat@cp& (0+255),f,b
 10766  016674  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 10767  016676                     l2125:
 10768                           
 10769                           ; BSR set to: 1
 10770  016676  C11B  FFD9         	movff	strcat@cp,fsr2l
 10771  01667A  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 10772  01667E  50DF               	movf	indf2,w,c
 10773  016680  B4D8               	btfsc	status,2,c
 10774  016682  D006               	goto	l2128
 10775  016684  D7F5               	goto	l2126
 10776  016686  0101               	movlb	1	; () banked
 10777  016688  4B1B               	infsnz	strcat@cp& (0+255),f,b
 10778  01668A  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 10779  01668C  4B19               	infsnz	strcat@from& (0+255),f,b
 10780  01668E  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 10781  016690                     l2128:
 10782                           
 10783                           ; BSR set to: 1
 10784  016690  C119  FFF6         	movff	strcat@from,tblptrl
 10785  016694  C11A  FFF7         	movff	strcat@from+1,tblptrh
 10786  016698                     	if	0	;tblptru may be non-zero
 10787  016698                     	endif
 10788  016698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10789  016698  0E00               	movlw	low (__mediumconst shr (0+16))
 10790  01669A  6EF8               	movwf	tblptru,c
 10791  01669C                     	endif
 10792  01669C  C11B  FFD9         	movff	strcat@cp,fsr2l
 10793  0166A0  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 10794  0166A4  0008               	tblrd		*
 10795  0166A6  CFF5 FFDF          	movff	tablat,indf2
 10796  0166AA  50DF               	movf	indf2,w,c
 10797  0166AC  B4D8               	btfsc	status,2,c
 10798  0166AE  0012               	return	
 10799  0166B0  D7EA               	goto	l2129
 10800  0166B2                     __end_of_strcat:
 10801                           	opt stack 0
 10802                           tblptru	equ	0xFF8
 10803                           tblptrh	equ	0xFF7
 10804                           tblptrl	equ	0xFF6
 10805                           tablat	equ	0xFF5
 10806                           intcon	equ	0xFF2
 10807                           postinc0	equ	0xFEE
 10808                           wreg	equ	0xFE8
 10809                           indf1	equ	0xFE7
 10810                           postdec1	equ	0xFE5
 10811                           fsr1h	equ	0xFE2
 10812                           fsr1l	equ	0xFE1
 10813                           indf2	equ	0xFDF
 10814                           postinc2	equ	0xFDE
 10815                           fsr2h	equ	0xFDA
 10816                           fsr2l	equ	0xFD9
 10817                           status	equ	0xFD8
 10818                           
 10819 ;; *************** function _terminal_printNewline *****************
 10820 ;; Defined at:
 10821 ;;		line 230 in file "ring_buffer_interface.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1    wreg      void 
 10828 ;; Registers used:
 10829 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10839 ;;Total ram usage:        0 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:   18
 10842 ;; This function calls:
 10843 ;;		_printf
 10844 ;; This function is called by:
 10845 ;;		_ringBufferLUT
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           
 10849                           	psect	text8
 10850  016DEC                     __ptext8:
 10851                           	opt stack 0
 10852  016DEC                     _terminal_printNewline:
 10853                           	opt stack 10
 10854                           
 10855                           ;ring_buffer_interface.c: 232: printf("\n\r");
 10856                           
 10857                           ;incstack = 0
 10858  016DEC  0E6D               	movlw	low (STR_108+68)
 10859  016DEE  0101               	movlb	1	; () banked
 10860  016DF0  6F64               	movwf	printf@f& (0+255),b
 10861  016DF2  0EF7               	movlw	high (STR_108+68)
 10862  016DF4  6F65               	movwf	(printf@f+1)& (0+255),b
 10863  016DF6  ECA4  F086         	call	_printf	;wreg free
 10864  016DFA  0012               	return		;funcret
 10865  016DFC                     __end_of_terminal_printNewline:
 10866                           	opt stack 0
 10867                           tblptru	equ	0xFF8
 10868                           tblptrh	equ	0xFF7
 10869                           tblptrl	equ	0xFF6
 10870                           tablat	equ	0xFF5
 10871                           intcon	equ	0xFF2
 10872                           postinc0	equ	0xFEE
 10873                           wreg	equ	0xFE8
 10874                           indf1	equ	0xFE7
 10875                           postdec1	equ	0xFE5
 10876                           fsr1h	equ	0xFE2
 10877                           fsr1l	equ	0xFE1
 10878                           indf2	equ	0xFDF
 10879                           postinc2	equ	0xFDE
 10880                           fsr2h	equ	0xFDA
 10881                           fsr2l	equ	0xFD9
 10882                           status	equ	0xFD8
 10883                           
 10884 ;; *************** function _strstr *****************
 10885 ;; Defined at:
 10886 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 10889 ;;		 -> NULL(0), line(64), 
 10890 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 10891 ;;		 -> STR_102(25), 
 10892 ;; Auto vars:     Size  Location     Type
 10893 ;;		None
 10894 ;; Return value:  Size  Location     Type
 10895 ;;                  2   38[BANK1 ] PTR unsigned char 
 10896 ;; Registers used:
 10897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10898 ;; Tracked objects:
 10899 ;;		On entry : 0/0
 10900 ;;		On exit  : 0/0
 10901 ;;		Unchanged: 0/0
 10902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10903 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10906 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10907 ;;Total ram usage:        4 bytes
 10908 ;; Hardware stack levels used:    1
 10909 ;; Hardware stack levels required when called:   15
 10910 ;; This function calls:
 10911 ;;		_strchr
 10912 ;;		_strlen
 10913 ;;		_strncmp
 10914 ;; This function is called by:
 10915 ;;		_ringBufferLUT
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text9
 10920  015BDC                     __ptext9:
 10921                           	opt stack 0
 10922  015BDC                     _strstr:
 10923                           	opt stack 13
 10924                           
 10925                           ;incstack = 0
 10926  015BDC  D034               	goto	l2170
 10927  015BDE  C126  F11D         	movff	strstr@s1,strncmp@s1
 10928  015BE2  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 10929  015BE6  C128  F11F         	movff	strstr@s2,strncmp@s2
 10930  015BEA  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 10931  015BEE  C128  F117         	movff	strstr@s2,strlen@s
 10932  015BF2  C129  F118         	movff	strstr@s2+1,strlen@s+1
 10933  015BF6  EC64  F0B2         	call	_strlen	;wreg free
 10934  015BFA  C117  F121         	movff	?_strlen,strncmp@len
 10935  015BFE  C118  F122         	movff	?_strlen+1,strncmp@len+1
 10936  015C02  EC5E  F0AD         	call	_strncmp	;wreg free
 10937  015C06  0101               	movlb	1	; () banked
 10938  015C08  511D               	movf	?_strncmp& (0+255),w,b
 10939  015C0A  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 10940  015C0C  A4D8               	btfss	status,2,c
 10941  015C0E  D005               	goto	l2172
 10942                           
 10943                           ; BSR set to: 1
 10944  015C10  C126  F126         	movff	strstr@s1,?_strstr
 10945  015C14  C127  F127         	movff	strstr@s1+1,?_strstr+1
 10946                           
 10947                           ; BSR set to: 1
 10948  015C18  0012               	return	
 10949  015C1A                     l2172:
 10950                           
 10951                           ; BSR set to: 1
 10952                           
 10953                           ; BSR set to: 1
 10954  015C1A  0E01               	movlw	1
 10955  015C1C  2526               	addwf	strstr@s1& (0+255),w,b
 10956  015C1E  6F17               	movwf	strchr@ptr& (0+255),b
 10957  015C20  0E00               	movlw	0
 10958  015C22  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 10959  015C24  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 10960  015C26  C128  FFF6         	movff	strstr@s2,tblptrl
 10961  015C2A  C129  FFF7         	movff	strstr@s2+1,tblptrh
 10962  015C2E                     	if	0	;tblptru may be non-zero
 10963  015C2E                     	endif
 10964  015C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10965  015C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 10966  015C30  6EF8               	movwf	tblptru,c
 10967  015C32                     	endif
 10968  015C32  0008               	tblrd		*
 10969  015C34  50F5               	movf	tablat,w,c
 10970  015C36  6F19               	movwf	strchr@chr& (0+255),b
 10971  015C38  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 10972  015C3A  ECCC  F0B4         	call	_strchr	;wreg free
 10973  015C3E  C117  F126         	movff	?_strchr,strstr@s1
 10974  015C42  C118  F127         	movff	?_strchr+1,strstr@s1+1
 10975  015C46                     l2170:
 10976  015C46  0101               	movlb	1	; () banked
 10977  015C48  5126               	movf	strstr@s1& (0+255),w,b
 10978  015C4A  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 10979  015C4C  B4D8               	btfsc	status,2,c
 10980  015C4E  D007               	goto	u12300
 10981                           
 10982                           ; BSR set to: 1
 10983  015C50  C126  FFD9         	movff	strstr@s1,fsr2l
 10984  015C54  C127  FFDA         	movff	strstr@s1+1,fsr2h
 10985  015C58  50DF               	movf	indf2,w,c
 10986  015C5A  A4D8               	btfss	status,2,c
 10987  015C5C  D7C0               	goto	l2171
 10988  015C5E                     u12300:
 10989                           
 10990                           ; BSR set to: 1
 10991                           
 10992                           ; BSR set to: 1
 10993                           
 10994                           ; BSR set to: 1
 10995  015C5E  0E00               	movlw	0
 10996  015C60  6F26               	movwf	?_strstr& (0+255),b
 10997  015C62  0E00               	movlw	0
 10998  015C64  6F27               	movwf	(?_strstr+1)& (0+255),b
 10999  015C66  0012               	return	
 11000  015C68                     __end_of_strstr:
 11001                           	opt stack 0
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           intcon	equ	0xFF2
 11007                           postinc0	equ	0xFEE
 11008                           wreg	equ	0xFE8
 11009                           indf1	equ	0xFE7
 11010                           postdec1	equ	0xFE5
 11011                           fsr1h	equ	0xFE2
 11012                           fsr1l	equ	0xFE1
 11013                           indf2	equ	0xFDF
 11014                           postinc2	equ	0xFDE
 11015                           fsr2h	equ	0xFDA
 11016                           fsr2l	equ	0xFD9
 11017                           status	equ	0xFD8
 11018                           
 11019 ;; *************** function _strncmp *****************
 11020 ;; Defined at:
 11021 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 11024 ;;		 -> NULL(0), line(64), 
 11025 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 11026 ;;		 -> STR_102(25), 
 11027 ;;  len             2   33[BANK1 ] unsigned int 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;		None
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  2   29[BANK1 ] int 
 11032 ;; Registers used:
 11033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11039 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11041 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11042 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11043 ;;Total ram usage:        9 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:   14
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		_strstr
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           	psect	text10
 11054  015ABC                     __ptext10:
 11055                           	opt stack 0
 11056  015ABC                     _strncmp:
 11057                           	opt stack 13
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;incstack = 0
 11061  015ABC  D039               	goto	l2229
 11062  015ABE                     l10581:
 11063  015ABE  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11064  015AC2  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11065  015AC6  50DF               	movf	indf2,w,c
 11066  015AC8  B4D8               	btfsc	status,2,c
 11067  015ACA  D012               	goto	u12030
 11068  015ACC  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11069  015AD0  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11070  015AD4  50DF               	movf	indf2,w,c
 11071  015AD6  0101               	movlb	1	; () banked
 11072  015AD8  6F23               	movwf	??_strncmp& (0+255),b
 11073  015ADA  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11074  015ADE  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11075  015AE2                     	if	0	;tblptru may be non-zero
 11076  015AE2                     	endif
 11077  015AE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11078  015AE2  0E00               	movlw	low (__mediumconst shr (0+16))
 11079  015AE4  6EF8               	movwf	tblptru,c
 11080  015AE6                     	endif
 11081  015AE6  0008               	tblrd		*
 11082  015AE8  50F5               	movf	tablat,w,c
 11083  015AEA  1923               	xorwf	??_strncmp& (0+255),w,b
 11084  015AEC  B4D8               	btfsc	status,2,c
 11085  015AEE  D01C               	goto	l2231
 11086  015AF0                     u12030:
 11087                           
 11088                           ; BSR set to: 1
 11089  015AF0  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11090  015AF4  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11091  015AF8                     	if	0	;tblptru may be non-zero
 11092  015AF8                     	endif
 11093  015AF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11094  015AF8  0E00               	movlw	low (__mediumconst shr (0+16))
 11095  015AFA  6EF8               	movwf	tblptru,c
 11096  015AFC                     	endif
 11097  015AFC  0008               	tblrd		*
 11098  015AFE  50F5               	movf	tablat,w,c
 11099  015B00  0101               	movlb	1	; () banked
 11100  015B02  6F23               	movwf	??_strncmp& (0+255),b
 11101  015B04  6B24               	clrf	(??_strncmp+1)& (0+255),b
 11102  015B06  1F23               	comf	??_strncmp& (0+255),f,b
 11103  015B08  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 11104  015B0A  4B23               	infsnz	??_strncmp& (0+255),f,b
 11105  015B0C  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 11106  015B0E  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11107  015B12  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11108  015B16  50DF               	movf	indf2,w,c
 11109  015B18  6F25               	movwf	(??_strncmp+2)& (0+255),b
 11110  015B1A  5125               	movf	(??_strncmp+2)& (0+255),w,b
 11111  015B1C  2523               	addwf	??_strncmp& (0+255),w,b
 11112  015B1E  6F1D               	movwf	?_strncmp& (0+255),b
 11113  015B20  0E00               	movlw	0
 11114  015B22  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 11115  015B24  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11116                           
 11117                           ; BSR set to: 1
 11118  015B26  0012               	return	
 11119  015B28                     l2231:
 11120                           
 11121                           ; BSR set to: 1
 11122                           
 11123                           ; BSR set to: 1
 11124  015B28  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 11125  015B2A  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 11126  015B2C  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 11127  015B2E  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 11128  015B30                     l2229:
 11129                           
 11130                           ; BSR set to: 1
 11131  015B30  0101               	movlb	1	; () banked
 11132  015B32  0721               	decf	strncmp@len& (0+255),f,b
 11133  015B34  A0D8               	btfss	status,0,c
 11134  015B36  0722               	decf	(strncmp@len+1)& (0+255),f,b
 11135  015B38  2921               	incf	strncmp@len& (0+255),w,b
 11136  015B3A  E1C1               	bnz	l10581
 11137  015B3C  2922               	incf	(strncmp@len+1)& (0+255),w,b
 11138  015B3E  A4D8               	btfss	status,2,c
 11139  015B40  D7BE               	goto	l2230
 11140                           
 11141                           ; BSR set to: 1
 11142                           
 11143                           ; BSR set to: 1
 11144  015B42  0E00               	movlw	0
 11145  015B44  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11146  015B46  0E00               	movlw	0
 11147  015B48  6F1D               	movwf	?_strncmp& (0+255),b
 11148  015B4A  0012               	return	
 11149  015B4C                     __end_of_strncmp:
 11150                           	opt stack 0
 11151                           tblptru	equ	0xFF8
 11152                           tblptrh	equ	0xFF7
 11153                           tblptrl	equ	0xFF6
 11154                           tablat	equ	0xFF5
 11155                           intcon	equ	0xFF2
 11156                           postinc0	equ	0xFEE
 11157                           wreg	equ	0xFE8
 11158                           indf1	equ	0xFE7
 11159                           postdec1	equ	0xFE5
 11160                           fsr1h	equ	0xFE2
 11161                           fsr1l	equ	0xFE1
 11162                           indf2	equ	0xFDF
 11163                           postinc2	equ	0xFDE
 11164                           fsr2h	equ	0xFDA
 11165                           fsr2l	equ	0xFD9
 11166                           status	equ	0xFD8
 11167                           
 11168 ;; *************** function _strlen *****************
 11169 ;; Defined at:
 11170 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 11173 ;;		 -> STR_102(25), line(64), 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 11176 ;;		 -> STR_102(25), line(64), 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  2   23[BANK1 ] unsigned int 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11186 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11187 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11188 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11189 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11190 ;;Total ram usage:        6 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:   14
 11193 ;; This function calls:
 11194 ;;		Nothing
 11195 ;; This function is called by:
 11196 ;;		_terminal_ringBufferPull
 11197 ;;		_strstr
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text11
 11202  0164C8                     __ptext11:
 11203                           	opt stack 0
 11204  0164C8                     _strlen:
 11205                           	opt stack 15
 11206                           
 11207                           ; BSR set to: 1
 11208                           ;incstack = 0
 11209  0164C8  C117  F11B         	movff	strlen@s,strlen@cp
 11210  0164CC  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 11211  0164D0  D003               	goto	l2148
 11212  0164D2  0101               	movlb	1	; () banked
 11213  0164D4  4B1B               	infsnz	strlen@cp& (0+255),f,b
 11214  0164D6  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 11215  0164D8                     l2148:
 11216                           
 11217                           ; BSR set to: 1
 11218  0164D8  C11B  FFF6         	movff	strlen@cp,tblptrl
 11219  0164DC  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 11220  0164E0  0E00               	movlw	low (__mediumconst shr (0+16))
 11221  0164E2  6EF8               	movwf	tblptru,c
 11222  0164E4  0E0D               	movlw	(high __ramtop+-1)
 11223  0164E6  64F7               	cpfsgt	tblptrh,c
 11224  0164E8  D003               	bra	u12007
 11225  0164EA  0008               	tblrd		*
 11226  0164EC  50F5               	movf	tablat,w,c
 11227  0164EE  D005               	bra	u12000
 11228  0164F0                     u12007:
 11229  0164F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11230  0164F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11231  0164F8  50EF               	movf	indf0,w,c
 11232  0164FA                     u12000:
 11233  0164FA  0900               	iorlw	0
 11234  0164FC  A4D8               	btfss	status,2,c
 11235  0164FE  D7E9               	goto	l2149
 11236  016500  C117  F119         	movff	strlen@s,??_strlen
 11237  016504  C118  F11A         	movff	strlen@s+1,??_strlen+1
 11238  016508  0101               	movlb	1	; () banked
 11239  01650A  1F19               	comf	??_strlen& (0+255),f,b
 11240  01650C  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 11241  01650E  4B19               	infsnz	??_strlen& (0+255),f,b
 11242  016510  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 11243  016512  511B               	movf	strlen@cp& (0+255),w,b
 11244  016514  2519               	addwf	??_strlen& (0+255),w,b
 11245  016516  6F17               	movwf	?_strlen& (0+255),b
 11246  016518  511C               	movf	(strlen@cp+1)& (0+255),w,b
 11247  01651A  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 11248  01651C  6F18               	movwf	(?_strlen+1)& (0+255),b
 11249  01651E  0012               	return	
 11250  016520                     __end_of_strlen:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           intcon	equ	0xFF2
 11257                           indf0	equ	0xFEF
 11258                           postinc0	equ	0xFEE
 11259                           fsr0h	equ	0xFEA
 11260                           fsr0l	equ	0xFE9
 11261                           wreg	equ	0xFE8
 11262                           indf1	equ	0xFE7
 11263                           postdec1	equ	0xFE5
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           fsr2h	equ	0xFDA
 11269                           fsr2l	equ	0xFD9
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function _strchr *****************
 11273 ;; Defined at:
 11274 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 11277 ;;		 -> NULL(0), line(64), 
 11278 ;;  chr             2   25[BANK1 ] int 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  2   23[BANK1 ] PTR unsigned char 
 11283 ;; Registers used:
 11284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11290 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11292 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11293 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11294 ;;Total ram usage:        5 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:   14
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_strstr
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text12
 11305  016998                     __ptext12:
 11306                           	opt stack 0
 11307  016998                     _strchr:
 11308                           	opt stack 13
 11309                           
 11310                           ; BSR set to: 1
 11311                           ;incstack = 0
 11312  016998  C117  FFD9         	movff	strchr@ptr,fsr2l
 11313  01699C  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11314  0169A0  0101               	movlb	1	; () banked
 11315  0169A2  5119               	movf	strchr@chr& (0+255),w,b
 11316  0169A4  18DE               	xorwf	postinc2,w,c
 11317  0169A6  A4D8               	btfss	status,2,c
 11318  0169A8  D005               	goto	l2224
 11319                           
 11320                           ; BSR set to: 1
 11321  0169AA  C117  F117         	movff	strchr@ptr,?_strchr
 11322  0169AE  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11323                           
 11324                           ; BSR set to: 1
 11325  0169B2  0012               	return	
 11326  0169B4                     l2224:
 11327                           
 11328                           ; BSR set to: 1
 11329                           
 11330                           ; BSR set to: 1
 11331  0169B4  C117  FFD9         	movff	strchr@ptr,fsr2l
 11332  0169B8  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11333  0169BC  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11334  0169BE  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11335  0169C0  50DF               	movf	indf2,w,c
 11336  0169C2  A4D8               	btfss	status,2,c
 11337  0169C4  D7E9               	goto	_strchr
 11338                           
 11339                           ; BSR set to: 1
 11340                           
 11341                           ; BSR set to: 1
 11342  0169C6  0E00               	movlw	0
 11343  0169C8  6F17               	movwf	?_strchr& (0+255),b
 11344  0169CA  0E00               	movlw	0
 11345  0169CC  6F18               	movwf	(?_strchr+1)& (0+255),b
 11346  0169CE  0012               	return	
 11347  0169D0                     __end_of_strchr:
 11348                           	opt stack 0
 11349                           tblptru	equ	0xFF8
 11350                           tblptrh	equ	0xFF7
 11351                           tblptrl	equ	0xFF6
 11352                           tablat	equ	0xFF5
 11353                           intcon	equ	0xFF2
 11354                           indf0	equ	0xFEF
 11355                           postinc0	equ	0xFEE
 11356                           fsr0h	equ	0xFEA
 11357                           fsr0l	equ	0xFE9
 11358                           wreg	equ	0xFE8
 11359                           indf1	equ	0xFE7
 11360                           postdec1	equ	0xFE5
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           indf2	equ	0xFDF
 11364                           postinc2	equ	0xFDE
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _strcpy *****************
 11370 ;; Defined at:
 11371 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11374 ;;		 -> ringBufferLUT@channel_name(22), 
 11375 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11376 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 11377 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11380 ;;		 -> ringBufferLUT@channel_name(22), 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  2   23[BANK1 ] PTR unsigned char 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11390 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11391 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11393 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11394 ;;Total ram usage:        6 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:   14
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_ringBufferLUT
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           	psect	text13
 11405  0169D0                     __ptext13:
 11406                           	opt stack 0
 11407  0169D0                     _strcpy:
 11408                           	opt stack 14
 11409                           
 11410                           ; BSR set to: 1
 11411                           ;incstack = 0
 11412  0169D0  C117  F11B         	movff	strcpy@to,strcpy@cp
 11413  0169D4  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 11414  0169D8  D005               	goto	l2142
 11415  0169DA  0101               	movlb	1	; () banked
 11416  0169DC  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 11417  0169DE  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 11418  0169E0  4B19               	infsnz	strcpy@from& (0+255),f,b
 11419  0169E2  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 11420  0169E4                     l2142:
 11421                           
 11422                           ; BSR set to: 1
 11423  0169E4  C119  FFF6         	movff	strcpy@from,tblptrl
 11424  0169E8  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 11425  0169EC                     	if	0	;tblptru may be non-zero
 11426  0169EC                     	endif
 11427  0169EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11428  0169EC  0E00               	movlw	low (__mediumconst shr (0+16))
 11429  0169EE  6EF8               	movwf	tblptru,c
 11430  0169F0                     	endif
 11431  0169F0  C11B  FFD9         	movff	strcpy@cp,fsr2l
 11432  0169F4  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 11433  0169F8  0008               	tblrd		*
 11434  0169FA  CFF5 FFDF          	movff	tablat,indf2
 11435  0169FE  50DF               	movf	indf2,w,c
 11436  016A00  B4D8               	btfsc	status,2,c
 11437  016A02  0012               	return	
 11438  016A04  D7EA               	goto	l2143
 11439  016A06                     __end_of_strcpy:
 11440                           	opt stack 0
 11441                           tblptru	equ	0xFF8
 11442                           tblptrh	equ	0xFF7
 11443                           tblptrl	equ	0xFF6
 11444                           tablat	equ	0xFF5
 11445                           intcon	equ	0xFF2
 11446                           indf0	equ	0xFEF
 11447                           postinc0	equ	0xFEE
 11448                           fsr0h	equ	0xFEA
 11449                           fsr0l	equ	0xFE9
 11450                           wreg	equ	0xFE8
 11451                           indf1	equ	0xFE7
 11452                           postdec1	equ	0xFE5
 11453                           fsr1h	equ	0xFE2
 11454                           fsr1l	equ	0xFE1
 11455                           indf2	equ	0xFDF
 11456                           postinc2	equ	0xFDE
 11457                           fsr2h	equ	0xFDA
 11458                           fsr2l	equ	0xFD9
 11459                           status	equ	0xFD8
 11460                           
 11461 ;; *************** function _strcmp *****************
 11462 ;; Defined at:
 11463 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11466 ;;		 -> line(64), 
 11467 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11468 ;;		 -> STR_113(5), STR_111(14), STR_109(16), STR_100(13), 
 11469 ;;		 -> STR_98(12), STR_96(16), STR_94(15), STR_92(15), 
 11470 ;;		 -> STR_90(21), STR_88(21), STR_86(26), STR_84(14), 
 11471 ;;		 -> STR_82(13), STR_80(18), STR_78(15), STR_76(16), 
 11472 ;;		 -> STR_73(17), STR_71(16), STR_60(11), STR_57(10), 
 11473 ;;		 -> STR_55(13), STR_53(11), STR_50(4), STR_49(6), 
 11474 ;;		 -> STR_47(16), STR_44(6), STR_41(6), 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  r               1   28[BANK1 ] char 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  2   23[BANK1 ] int 
 11479 ;; Registers used:
 11480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11486 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11487 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11488 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11489 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11490 ;;Total ram usage:        6 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:   14
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_ringBufferLUT
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text14
 11501  0165C8                     __ptext14:
 11502                           	opt stack 0
 11503  0165C8                     _strcmp:
 11504                           	opt stack 14
 11505                           
 11506                           ;incstack = 0
 11507  0165C8  D005               	goto	l2134
 11508  0165CA  0101               	movlb	1	; () banked
 11509  0165CC  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11510  0165CE  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11511  0165D0  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11512  0165D2  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11513  0165D4                     l2134:
 11514                           
 11515                           ; BSR set to: 1
 11516  0165D4  C117  FFD9         	movff	strcmp@s1,fsr2l
 11517  0165D8  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11518  0165DC  50DF               	movf	indf2,w,c
 11519  0165DE  0101               	movlb	1	; () banked
 11520  0165E0  6F1B               	movwf	??_strcmp& (0+255),b
 11521  0165E2  C119  FFF6         	movff	strcmp@s2,tblptrl
 11522  0165E6  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11523  0165EA                     	if	0	;tblptru may be non-zero
 11524  0165EA                     	endif
 11525  0165EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11526  0165EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11527  0165EC  6EF8               	movwf	tblptru,c
 11528  0165EE                     	endif
 11529  0165EE  0008               	tblrd		*
 11530  0165F0  50F5               	movf	tablat,w,c
 11531  0165F2  0800               	sublw	0
 11532  0165F4  251B               	addwf	??_strcmp& (0+255),w,b
 11533  0165F6  6F1C               	movwf	strcmp@r& (0+255),b
 11534  0165F8  511C               	movf	strcmp@r& (0+255),w,b
 11535  0165FA  A4D8               	btfss	status,2,c
 11536  0165FC  D007               	goto	u12230
 11537                           
 11538                           ; BSR set to: 1
 11539  0165FE  C117  FFD9         	movff	strcmp@s1,fsr2l
 11540  016602  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11541  016606  50DF               	movf	indf2,w,c
 11542  016608  A4D8               	btfss	status,2,c
 11543  01660A  D7DF               	goto	l2135
 11544  01660C                     u12230:
 11545                           
 11546                           ; BSR set to: 1
 11547                           
 11548                           ; BSR set to: 1
 11549                           
 11550                           ; BSR set to: 1
 11551  01660C  511C               	movf	strcmp@r& (0+255),w,b
 11552  01660E  6F17               	movwf	?_strcmp& (0+255),b
 11553  016610  6B18               	clrf	(?_strcmp+1)& (0+255),b
 11554  016612  BF17               	btfsc	?_strcmp& (0+255),7,b
 11555  016614  0718               	decf	(?_strcmp+1)& (0+255),f,b
 11556  016616  0012               	return	
 11557  016618                     __end_of_strcmp:
 11558                           	opt stack 0
 11559                           tblptru	equ	0xFF8
 11560                           tblptrh	equ	0xFF7
 11561                           tblptrl	equ	0xFF6
 11562                           tablat	equ	0xFF5
 11563                           intcon	equ	0xFF2
 11564                           indf0	equ	0xFEF
 11565                           postinc0	equ	0xFEE
 11566                           fsr0h	equ	0xFEA
 11567                           fsr0l	equ	0xFE9
 11568                           wreg	equ	0xFE8
 11569                           indf1	equ	0xFE7
 11570                           postdec1	equ	0xFE5
 11571                           fsr1h	equ	0xFE2
 11572                           fsr1l	equ	0xFE1
 11573                           indf2	equ	0xFDF
 11574                           postinc2	equ	0xFDE
 11575                           fsr2h	equ	0xFDA
 11576                           fsr2l	equ	0xFD9
 11577                           status	equ	0xFD8
 11578                           
 11579 ;; *************** function _getUserID *****************
 11580 ;; Defined at:
 11581 ;;		line 65 in file "device_IDs.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  inputUserID     1    wreg     unsigned char 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 11586 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 11587 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  2   34[BANK1 ] unsigned int 
 11590 ;; Registers used:
 11591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11597 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11598 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11600 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11601 ;;Total ram usage:        8 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; Hardware stack levels required when called:   16
 11604 ;; This function calls:
 11605 ;;		_FLASH_ReadWord
 11606 ;; This function is called by:
 11607 ;;		_ringBufferLUT
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611                           	psect	text15
 11612  0167DA                     __ptext15:
 11613                           	opt stack 0
 11614  0167DA                     _getUserID:
 11615                           	opt stack 12
 11616                           
 11617                           ; BSR set to: 1
 11618                           ;incstack = 0
 11619                           ;getUserID@inputUserID stored from wreg
 11620  0167DA  0101               	movlb	1	; () banked
 11621  0167DC  6F28               	movwf	getUserID@inputUserID& (0+255),b
 11622                           
 11623                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 11624  0167DE  0E00               	movlw	0
 11625  0167E0  0101               	movlb	1	; () banked
 11626  0167E2  6F24               	movwf	getUserID@initialOffset& (0+255),b
 11627  0167E4  0E00               	movlw	0
 11628  0167E6  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 11629  0167E8  0E20               	movlw	32
 11630  0167EA  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 11631  0167EC  0E00               	movlw	0
 11632  0167EE  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 11633                           
 11634                           ; BSR set to: 1
 11635                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 11636  0167F0  5128               	movf	getUserID@inputUserID& (0+255),w,b
 11637  0167F2  0D02               	mullw	2
 11638  0167F4  CFF3 F129          	movff	prodl,getUserID@IDOffset
 11639                           
 11640                           ; BSR set to: 1
 11641                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 11642  0167F8  5129               	movf	getUserID@IDOffset& (0+255),w,b
 11643  0167FA  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 11644  0167FC  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11645  0167FE  0E00               	movlw	0
 11646  016800  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 11647  016802  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11648  016804  0E00               	movlw	0
 11649  016806  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 11650  016808  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11651  01680A  0E00               	movlw	0
 11652  01680C  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 11653  01680E  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11654  016810  EC0F  F0B4         	call	_FLASH_ReadWord	;wreg free
 11655  016814  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 11656  016818  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 11657  01681C  0012               	return	
 11658  01681E                     __end_of_getUserID:
 11659                           	opt stack 0
 11660                           tblptru	equ	0xFF8
 11661                           tblptrh	equ	0xFF7
 11662                           tblptrl	equ	0xFF6
 11663                           tablat	equ	0xFF5
 11664                           prodl	equ	0xFF3
 11665                           intcon	equ	0xFF2
 11666                           indf0	equ	0xFEF
 11667                           postinc0	equ	0xFEE
 11668                           fsr0h	equ	0xFEA
 11669                           fsr0l	equ	0xFE9
 11670                           wreg	equ	0xFE8
 11671                           indf1	equ	0xFE7
 11672                           postdec1	equ	0xFE5
 11673                           fsr1h	equ	0xFE2
 11674                           fsr1l	equ	0xFE1
 11675                           indf2	equ	0xFDF
 11676                           postinc2	equ	0xFDE
 11677                           fsr2h	equ	0xFDA
 11678                           fsr2l	equ	0xFD9
 11679                           status	equ	0xFD8
 11680                           
 11681 ;; *************** function _getMinorRevisionID *****************
 11682 ;; Defined at:
 11683 ;;		line 23 in file "device_IDs.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      unsigned char 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2, status,0, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11700 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11701 ;;Total ram usage:        2 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:   16
 11704 ;; This function calls:
 11705 ;;		_FLASH_ReadWord
 11706 ;; This function is called by:
 11707 ;;		_ringBufferLUT
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text16
 11712  016BDC                     __ptext16:
 11713                           	opt stack 0
 11714  016BDC                     _getMinorRevisionID:
 11715                           	opt stack 12
 11716                           
 11717                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 11718                           
 11719                           ;incstack = 0
 11720  016BDC  0EFC               	movlw	252
 11721  016BDE  0101               	movlb	1	; () banked
 11722  016BE0  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11723  016BE2  0EFF               	movlw	255
 11724  016BE4  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11725  016BE6  0E3F               	movlw	63
 11726  016BE8  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11727  016BEA  0E00               	movlw	0
 11728  016BEC  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11729  016BEE  EC0F  F0B4         	call	_FLASH_ReadWord	;wreg free
 11730  016BF2  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 11731  016BF6  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 11732                           
 11733                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 11734  016BFA  0101               	movlb	1	; () banked
 11735  016BFC  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 11736  016BFE  0B1F               	andlw	31
 11737  016C00  0012               	return	
 11738  016C02                     __end_of_getMinorRevisionID:
 11739                           	opt stack 0
 11740                           tblptru	equ	0xFF8
 11741                           tblptrh	equ	0xFF7
 11742                           tblptrl	equ	0xFF6
 11743                           tablat	equ	0xFF5
 11744                           prodl	equ	0xFF3
 11745                           intcon	equ	0xFF2
 11746                           indf0	equ	0xFEF
 11747                           postinc0	equ	0xFEE
 11748                           fsr0h	equ	0xFEA
 11749                           fsr0l	equ	0xFE9
 11750                           wreg	equ	0xFE8
 11751                           indf1	equ	0xFE7
 11752                           postdec1	equ	0xFE5
 11753                           fsr1h	equ	0xFE2
 11754                           fsr1l	equ	0xFE1
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function _getMajorRevisionID *****************
 11762 ;; Defined at:
 11763 ;;		line 12 in file "device_IDs.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;		None
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      unsigned char 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11778 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11779 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11780 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11781 ;;Total ram usage:        5 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:   16
 11784 ;; This function calls:
 11785 ;;		_FLASH_ReadWord
 11786 ;; This function is called by:
 11787 ;;		_ringBufferLUT
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text17
 11792  016922                     __ptext17:
 11793                           	opt stack 0
 11794  016922                     _getMajorRevisionID:
 11795                           	opt stack 12
 11796                           
 11797                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;incstack = 0
 11801  016922  0EFC               	movlw	252
 11802  016924  0101               	movlb	1	; () banked
 11803  016926  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 11804  016928  0EFF               	movlw	255
 11805  01692A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 11806  01692C  0E3F               	movlw	63
 11807  01692E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11808  016930  0E00               	movlw	0
 11809  016932  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11810  016934  EC0F  F0B4         	call	_FLASH_ReadWord	;wreg free
 11811  016938  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 11812  01693C  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 11813                           
 11814                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 11815  016940  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 11816  016944  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 11817  016948  0E06               	movlw	6
 11818  01694A  0101               	movlb	1	; () banked
 11819  01694C  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 11820  01694E                     u12265:
 11821  01694E  90D8               	bcf	status,0,c
 11822  016950  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 11823  016952  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 11824  016954  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 11825  016956  D7FB               	goto	u12265
 11826  016958  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 11827  01695A  0B1F               	andlw	31
 11828  01695C  0012               	return	
 11829  01695E                     __end_of_getMajorRevisionID:
 11830                           	opt stack 0
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodl	equ	0xFF3
 11836                           intcon	equ	0xFF2
 11837                           indf0	equ	0xFEF
 11838                           postinc0	equ	0xFEE
 11839                           fsr0h	equ	0xFEA
 11840                           fsr0l	equ	0xFE9
 11841                           wreg	equ	0xFE8
 11842                           indf1	equ	0xFE7
 11843                           postdec1	equ	0xFE5
 11844                           fsr1h	equ	0xFE2
 11845                           fsr1l	equ	0xFE1
 11846                           indf2	equ	0xFDF
 11847                           postinc2	equ	0xFDE
 11848                           fsr2h	equ	0xFDA
 11849                           fsr2l	equ	0xFD9
 11850                           status	equ	0xFD8
 11851                           
 11852 ;; *************** function _getDeviceIDString *****************
 11853 ;; Defined at:
 11854 ;;		line 34 in file "device_IDs.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 11859 ;;		 -> STR_122(10), STR_121(13), STR_120(12), 
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  2   36[BANK1 ] PTR inline unsigned char
 11862 ;; Registers used:
 11863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11869 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11870 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;Total ram usage:       10 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:   14
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_ringBufferLUT
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text18
 11884  01634E                     __ptext18:
 11885                           	opt stack 0
 11886  01634E                     _getDeviceIDString:
 11887                           	opt stack 14
 11888                           
 11889                           ;device_IDs.c: 37: const char *strings[] = {
 11890                           ;device_IDs.c: 39: "PIC18F67K40",
 11891                           ;device_IDs.c: 40: "PIC18LF67K40",
 11892                           ;device_IDs.c: 41: "Undefined"
 11893                           ;device_IDs.c: 43: };
 11894                           
 11895                           ; BSR set to: 1
 11896                           ;incstack = 0
 11897  01634E  EE22  F0B4         	lfsr	2,getDeviceIDString@F17550
 11898  016352  EE11  F028         	lfsr	1,getDeviceIDString@strings
 11899  016356  0E05               	movlw	5
 11900  016358                     u12251:
 11901  016358  CFDB FFE3          	movff	plusw2,plusw1
 11902  01635C  06E8               	decf	wreg,f,c
 11903  01635E  E2FC               	bc	u12251
 11904                           
 11905                           ;device_IDs.c: 47: switch (inputDevID) {
 11906  016360  D00F               	goto	l1277
 11907  016362                     
 11908                           ;device_IDs.c: 50: return strings[0];
 11909  016362  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 11910  016366  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 11911                           
 11912                           ;device_IDs.c: 51: break;
 11913  01636A  0012               	return	
 11914  01636C                     
 11915                           ;device_IDs.c: 54: return strings[1];
 11916  01636C  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 11917  016370  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 11918                           
 11919                           ;device_IDs.c: 55: break;
 11920  016374  0012               	return	
 11921  016376                     
 11922                           ;device_IDs.c: 58: return strings[2];
 11923  016376  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 11924  01637A  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 11925                           
 11926                           ;device_IDs.c: 61: }
 11927                           
 11928                           ;device_IDs.c: 59: break;
 11929  01637E  0012               	return	
 11930  016380                     l1277:
 11931  016380  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 11932  016384  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 11933                           
 11934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11935                           ; Switch size 1, requested type "space"
 11936                           ; Number of cases is 2, Range of values is 106 to 107
 11937                           ; switch strategies available:
 11938                           ; Name         Instructions Cycles
 11939                           ; simple_byte            7     4 (average)
 11940                           ;	Chosen strategy is simple_byte
 11941  016388  0101               	movlb	1	; () banked
 11942  01638A  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 11943  01638C  0A6A               	xorlw	106	; case 106
 11944  01638E  B4D8               	btfsc	status,2,c
 11945  016390  D004               	goto	l14757
 11946  016392  0A01               	xorlw	1	; case 107
 11947  016394  B4D8               	btfsc	status,2,c
 11948  016396  D006               	goto	l14759
 11949  016398  D7EE               	goto	l1282
 11950  01639A                     l14757:
 11951                           
 11952                           ; BSR set to: 1
 11953                           ; Switch size 1, requested type "space"
 11954                           ; Number of cases is 1, Range of values is 192 to 192
 11955                           ; switch strategies available:
 11956                           ; Name         Instructions Cycles
 11957                           ; simple_byte            4     3 (average)
 11958                           ;	Chosen strategy is simple_byte
 11959  01639A  5126               	movf	??_getDeviceIDString& (0+255),w,b
 11960  01639C  0AC0               	xorlw	192	; case 192
 11961  01639E  B4D8               	btfsc	status,2,c
 11962  0163A0  D7E0               	goto	l1278
 11963  0163A2  D7E9               	goto	l1282
 11964  0163A4                     l14759:
 11965                           
 11966                           ; BSR set to: 1
 11967                           ; Switch size 1, requested type "space"
 11968                           ; Number of cases is 1, Range of values is 32 to 32
 11969                           ; switch strategies available:
 11970                           ; Name         Instructions Cycles
 11971                           ; simple_byte            4     3 (average)
 11972                           ;	Chosen strategy is simple_byte
 11973  0163A4  5126               	movf	??_getDeviceIDString& (0+255),w,b
 11974  0163A6  0A20               	xorlw	32	; case 32
 11975  0163A8  B4D8               	btfsc	status,2,c
 11976  0163AA  D7E0               	goto	l1281
 11977  0163AC  D7E4               	goto	l1282
 11978  0163AE                     __end_of_getDeviceIDString:
 11979                           	opt stack 0
 11980                           tblptru	equ	0xFF8
 11981                           tblptrh	equ	0xFF7
 11982                           tblptrl	equ	0xFF6
 11983                           tablat	equ	0xFF5
 11984                           prodl	equ	0xFF3
 11985                           intcon	equ	0xFF2
 11986                           indf0	equ	0xFEF
 11987                           postinc0	equ	0xFEE
 11988                           fsr0h	equ	0xFEA
 11989                           fsr0l	equ	0xFE9
 11990                           wreg	equ	0xFE8
 11991                           indf1	equ	0xFE7
 11992                           postdec1	equ	0xFE5
 11993                           plusw1	equ	0xFE3
 11994                           fsr1h	equ	0xFE2
 11995                           fsr1l	equ	0xFE1
 11996                           indf2	equ	0xFDF
 11997                           postinc2	equ	0xFDE
 11998                           plusw2	equ	0xFDB
 11999                           fsr2h	equ	0xFDA
 12000                           fsr2l	equ	0xFD9
 12001                           status	equ	0xFD8
 12002                           
 12003 ;; *************** function _getDeviceID *****************
 12004 ;; Defined at:
 12005 ;;		line 4 in file "device_IDs.c"
 12006 ;; Parameters:    Size  Location     Type
 12007 ;;		None
 12008 ;; Auto vars:     Size  Location     Type
 12009 ;;		None
 12010 ;; Return value:  Size  Location     Type
 12011 ;;                  2   34[BANK1 ] unsigned int 
 12012 ;; Registers used:
 12013 ;;		wreg, status,2, status,0, cstack
 12014 ;; Tracked objects:
 12015 ;;		On entry : 0/0
 12016 ;;		On exit  : 0/0
 12017 ;;		Unchanged: 0/0
 12018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12019 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12022 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12023 ;;Total ram usage:        2 bytes
 12024 ;; Hardware stack levels used:    1
 12025 ;; Hardware stack levels required when called:   16
 12026 ;; This function calls:
 12027 ;;		_FLASH_ReadWord
 12028 ;; This function is called by:
 12029 ;;		_ringBufferLUT
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	text19
 12034  016CDE                     __ptext19:
 12035                           	opt stack 0
 12036  016CDE                     _getDeviceID:
 12037                           	opt stack 12
 12038                           
 12039                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 12040                           
 12041                           ;incstack = 0
 12042  016CDE  0EFE               	movlw	254
 12043  016CE0  0101               	movlb	1	; () banked
 12044  016CE2  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12045  016CE4  0EFF               	movlw	255
 12046  016CE6  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12047  016CE8  0E3F               	movlw	63
 12048  016CEA  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12049  016CEC  0E00               	movlw	0
 12050  016CEE  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12051  016CF0  EC0F  F0B4         	call	_FLASH_ReadWord	;wreg free
 12052  016CF4  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 12053  016CF8  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 12054  016CFC  0012               	return	
 12055  016CFE                     __end_of_getDeviceID:
 12056                           	opt stack 0
 12057                           tblptru	equ	0xFF8
 12058                           tblptrh	equ	0xFF7
 12059                           tblptrl	equ	0xFF6
 12060                           tablat	equ	0xFF5
 12061                           prodl	equ	0xFF3
 12062                           intcon	equ	0xFF2
 12063                           indf0	equ	0xFEF
 12064                           postinc0	equ	0xFEE
 12065                           fsr0h	equ	0xFEA
 12066                           fsr0l	equ	0xFE9
 12067                           wreg	equ	0xFE8
 12068                           indf1	equ	0xFE7
 12069                           postdec1	equ	0xFE5
 12070                           plusw1	equ	0xFE3
 12071                           fsr1h	equ	0xFE2
 12072                           fsr1l	equ	0xFE1
 12073                           indf2	equ	0xFDF
 12074                           postinc2	equ	0xFDE
 12075                           plusw2	equ	0xFDB
 12076                           fsr2h	equ	0xFDA
 12077                           fsr2l	equ	0xFD9
 12078                           status	equ	0xFD8
 12079                           
 12080 ;; *************** function _FLASH_ReadWord *****************
 12081 ;; Defined at:
 12082 ;;		line 71 in file "mcc_generated_files/memory.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;		None
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  2   27[BANK1 ] unsigned int 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12096 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12098 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12099 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12100 ;;Total ram usage:        7 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; Hardware stack levels required when called:   15
 12103 ;; This function calls:
 12104 ;;		_FLASH_ReadByte
 12105 ;; This function is called by:
 12106 ;;		_getDeviceID
 12107 ;;		_getMajorRevisionID
 12108 ;;		_getMinorRevisionID
 12109 ;;		_getUserID
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text20
 12114  01681E                     __ptext20:
 12115                           	opt stack 0
 12116  01681E                     _FLASH_ReadWord:
 12117                           	opt stack 12
 12118                           
 12119                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 12120                           
 12121                           ;incstack = 0
 12122  01681E  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 12123  016822  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 12124  016826  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 12125  01682A  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 12126  01682E  ECB8  F0B6         	call	_FLASH_ReadByte	;wreg free
 12127  016832  0101               	movlb	1	; () banked
 12128  016834  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 12129  016836  0E01               	movlw	1
 12130  016838  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 12131  01683A  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 12132  01683C  0E00               	movlw	0
 12133  01683E  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 12134  016840  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 12135  016842  0E00               	movlw	0
 12136  016844  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 12137  016846  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 12138  016848  0E00               	movlw	0
 12139  01684A  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 12140  01684C  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 12141  01684E  ECB8  F0B6         	call	_FLASH_ReadByte	;wreg free
 12142  016852  0101               	movlb	1	; () banked
 12143  016854  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 12144  016856  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 12145  016858  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 12146  01685A  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 12147  01685E  0012               	return	
 12148  016860                     __end_of_FLASH_ReadWord:
 12149                           	opt stack 0
 12150                           tblptru	equ	0xFF8
 12151                           tblptrh	equ	0xFF7
 12152                           tblptrl	equ	0xFF6
 12153                           tablat	equ	0xFF5
 12154                           prodl	equ	0xFF3
 12155                           intcon	equ	0xFF2
 12156                           indf0	equ	0xFEF
 12157                           postinc0	equ	0xFEE
 12158                           fsr0h	equ	0xFEA
 12159                           fsr0l	equ	0xFE9
 12160                           wreg	equ	0xFE8
 12161                           indf1	equ	0xFE7
 12162                           postdec1	equ	0xFE5
 12163                           plusw1	equ	0xFE3
 12164                           fsr1h	equ	0xFE2
 12165                           fsr1l	equ	0xFE1
 12166                           indf2	equ	0xFDF
 12167                           postinc2	equ	0xFDE
 12168                           plusw2	equ	0xFDB
 12169                           fsr2h	equ	0xFDA
 12170                           fsr2l	equ	0xFD9
 12171                           status	equ	0xFD8
 12172                           
 12173 ;; *************** function _FLASH_ReadByte *****************
 12174 ;; Defined at:
 12175 ;;		line 59 in file "mcc_generated_files/memory.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      unsigned char 
 12182 ;; Registers used:
 12183 ;;		wreg, status,2
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12189 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12192 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12193 ;;Total ram usage:        4 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:   14
 12196 ;; This function calls:
 12197 ;;		Nothing
 12198 ;; This function is called by:
 12199 ;;		_FLASH_ReadWord
 12200 ;;		_FLASH_WriteByte
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text21
 12205  016D70                     __ptext21:
 12206                           	opt stack 0
 12207  016D70                     _FLASH_ReadByte:
 12208                           	opt stack 12
 12209                           
 12210                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 12211                           
 12212                           ; BSR set to: 1
 12213                           ;incstack = 0
 12214  016D70  5077               	movf	3959,w,c	;volsfr
 12215  016D72  0B3F               	andlw	-193
 12216  016D74  0980               	iorlw	128
 12217  016D76  6E77               	movwf	3959,c	;volsfr
 12218                           
 12219                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 12220  016D78  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 12221                           
 12222                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 12223  016D7C  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 12224                           
 12225                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 12226  016D80  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 12227  016D84  0008               	tblrd		*	;# 
 12228                           
 12229                           ;memory.c: 68: return (TABLAT);
 12230  016D86  50F5               	movf	tablat,w,c	;volatile
 12231  016D88  0012               	return	
 12232  016D8A                     __end_of_FLASH_ReadByte:
 12233                           	opt stack 0
 12234                           tblptru	equ	0xFF8
 12235                           tblptrh	equ	0xFF7
 12236                           tblptrl	equ	0xFF6
 12237                           tablat	equ	0xFF5
 12238                           prodl	equ	0xFF3
 12239                           intcon	equ	0xFF2
 12240                           indf0	equ	0xFEF
 12241                           postinc0	equ	0xFEE
 12242                           fsr0h	equ	0xFEA
 12243                           fsr0l	equ	0xFE9
 12244                           wreg	equ	0xFE8
 12245                           indf1	equ	0xFE7
 12246                           postdec1	equ	0xFE5
 12247                           plusw1	equ	0xFE3
 12248                           fsr1h	equ	0xFE2
 12249                           fsr1l	equ	0xFE1
 12250                           indf2	equ	0xFDF
 12251                           postinc2	equ	0xFDE
 12252                           plusw2	equ	0xFDB
 12253                           fsr2h	equ	0xFDA
 12254                           fsr2l	equ	0xFD9
 12255                           status	equ	0xFD8
 12256                           
 12257 ;; *************** function _getCauseOfResetString *****************
 12258 ;; Defined at:
 12259 ;;		line 81 in file "cause_of_reset.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  r               1    wreg     enum E17455
 12262 ;; Auto vars:     Size  Location     Type
 12263 ;;  r               1   25[BANK1 ] enum E17455
 12264 ;; Return value:  Size  Location     Type
 12265 ;;                  2   23[BANK1 ] PTR inline unsigned char
 12266 ;; Registers used:
 12267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12268 ;; Tracked objects:
 12269 ;;		On entry : 0/0
 12270 ;;		On exit  : 0/0
 12271 ;;		Unchanged: 0/0
 12272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12273 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12274 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12276 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12277 ;;Total ram usage:        3 bytes
 12278 ;; Hardware stack levels used:    1
 12279 ;; Hardware stack levels required when called:   14
 12280 ;; This function calls:
 12281 ;;		Nothing
 12282 ;; This function is called by:
 12283 ;;		_ringBufferLUT
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text22
 12288  016AD6                     __ptext22:
 12289                           	opt stack 0
 12290  016AD6                     _getCauseOfResetString:
 12291                           	opt stack 14
 12292                           
 12293                           ;incstack = 0
 12294                           ;getCauseOfResetString@r stored from wreg
 12295  016AD6  0101               	movlb	1	; () banked
 12296  016AD8  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 12297                           
 12298                           ;cause_of_reset.c: 84: static char *strings[] = {
 12299                           ;cause_of_reset.c: 85: "Undefined Reset",
 12300                           ;cause_of_reset.c: 86: "Power On Reset",
 12301                           ;cause_of_reset.c: 87: "Brown Out Reset",
 12302                           ;cause_of_reset.c: 88: "Master Clear Reset",
 12303                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 12304                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 12305                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 12306                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 12307                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 12308                           ;cause_of_reset.c: 94: };
 12309  016ADA  0E09               	movlw	9
 12310  016ADC  0101               	movlb	1	; () banked
 12311  016ADE  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 12312  016AE0  D00D               	goto	l1309
 12313                           
 12314                           ; BSR set to: 1
 12315                           ;cause_of_reset.c: 99: return strings[r];
 12316  016AE2  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 12317  016AE4  0D02               	mullw	2
 12318  016AE6  0EA2               	movlw	low getCauseOfResetString@strings
 12319  016AE8  24F3               	addwf	prodl,w,c
 12320  016AEA  6ED9               	movwf	fsr2l,c
 12321  016AEC  0E02               	movlw	high getCauseOfResetString@strings
 12322  016AEE  20F4               	addwfc	prodh,w,c
 12323  016AF0  6EDA               	movwf	fsr2h,c
 12324  016AF2  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 12325  016AF6  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 12326                           
 12327                           ; BSR set to: 1
 12328                           ;cause_of_reset.c: 101: }
 12329                           
 12330                           ; BSR set to: 1
 12331  016AFA  0012               	return	
 12332  016AFC                     l1309:
 12333                           
 12334                           ; BSR set to: 1
 12335                           ;cause_of_reset.c: 103: else {
 12336                           ;cause_of_reset.c: 105: return "Undefined Reset";
 12337                           
 12338                           ; BSR set to: 1
 12339  016AFC  0E1E               	movlw	low STR_123
 12340  016AFE  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 12341  016B00  0EFE               	movlw	high STR_123
 12342  016B02  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 12343                           
 12344                           ; BSR set to: 1
 12345  016B04  0012               	return	
 12346  016B06                     __end_of_getCauseOfResetString:
 12347                           	opt stack 0
 12348                           tblptru	equ	0xFF8
 12349                           tblptrh	equ	0xFF7
 12350                           tblptrl	equ	0xFF6
 12351                           tablat	equ	0xFF5
 12352                           prodh	equ	0xFF4
 12353                           prodl	equ	0xFF3
 12354                           intcon	equ	0xFF2
 12355                           indf0	equ	0xFEF
 12356                           postinc0	equ	0xFEE
 12357                           fsr0h	equ	0xFEA
 12358                           fsr0l	equ	0xFE9
 12359                           wreg	equ	0xFE8
 12360                           indf1	equ	0xFE7
 12361                           postdec1	equ	0xFE5
 12362                           plusw1	equ	0xFE3
 12363                           fsr1h	equ	0xFE2
 12364                           fsr1l	equ	0xFE1
 12365                           indf2	equ	0xFDF
 12366                           postinc2	equ	0xFDE
 12367                           postdec2	equ	0xFDD
 12368                           plusw2	equ	0xFDB
 12369                           fsr2h	equ	0xFDA
 12370                           fsr2l	equ	0xFD9
 12371                           status	equ	0xFD8
 12372                           
 12373 ;; *************** function _atoi *****************
 12374 ;; Defined at:
 12375 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;  s               2   43[BANK1 ] PTR const unsigned char 
 12378 ;;		 -> ringBufferLUT@arg_buff(3), 
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;  a               2   48[BANK1 ] int 
 12381 ;;  sign            1   47[BANK1 ] unsigned char 
 12382 ;; Return value:  Size  Location     Type
 12383 ;;                  2   43[BANK1 ] int 
 12384 ;; Registers used:
 12385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12386 ;; Tracked objects:
 12387 ;;		On entry : 0/0
 12388 ;;		On exit  : 0/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12391 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12392 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12393 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12394 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12395 ;;Total ram usage:        7 bytes
 12396 ;; Hardware stack levels used:    1
 12397 ;; Hardware stack levels required when called:   15
 12398 ;; This function calls:
 12399 ;;		___wmul
 12400 ;;		_isdigit
 12401 ;; This function is called by:
 12402 ;;		_ringBufferLUT
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text23
 12407  015516                     __ptext23:
 12408                           	opt stack 0
 12409  015516                     _atoi:
 12410                           	opt stack 13
 12411                           
 12412                           ; BSR set to: 1
 12413                           ;incstack = 0
 12414  015516  D003               	goto	l1647
 12415  015518  0101               	movlb	1	; () banked
 12416  01551A  4B2B               	infsnz	atoi@s& (0+255),f,b
 12417  01551C  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 12418  01551E                     l1647:
 12419                           
 12420                           ; BSR set to: 1
 12421  01551E  C12B  FFD9         	movff	atoi@s,fsr2l
 12422  015522  C12C  FFDA         	movff	atoi@s+1,fsr2h
 12423  015526  0E20               	movlw	32
 12424  015528  18DE               	xorwf	postinc2,w,c
 12425  01552A  B4D8               	btfsc	status,2,c
 12426  01552C  D7F5               	goto	l1648
 12427  01552E  C12B  FFD9         	movff	atoi@s,fsr2l
 12428  015532  C12C  FFDA         	movff	atoi@s+1,fsr2h
 12429  015536  0E09               	movlw	9
 12430  015538  18DE               	xorwf	postinc2,w,c
 12431  01553A  B4D8               	btfsc	status,2,c
 12432  01553C  D7ED               	goto	l1648
 12433  01553E  0E00               	movlw	0
 12434  015540  0101               	movlb	1	; () banked
 12435  015542  6F31               	movwf	(atoi@a+1)& (0+255),b
 12436  015544  0E00               	movlw	0
 12437  015546  6F30               	movwf	atoi@a& (0+255),b
 12438  015548  0E00               	movlw	0
 12439  01554A  6F2F               	movwf	atoi@sign& (0+255),b
 12440                           
 12441                           ; BSR set to: 1
 12442  01554C  C12B  FFD9         	movff	atoi@s,fsr2l
 12443  015550  C12C  FFDA         	movff	atoi@s+1,fsr2h
 12444  015554  0E2D               	movlw	45
 12445  015556  18DE               	xorwf	postinc2,w,c
 12446  015558  A4D8               	btfss	status,2,c
 12447  01555A  D002               	goto	l1650
 12448                           
 12449                           ; BSR set to: 1
 12450  01555C  2B2F               	incf	atoi@sign& (0+255),f,b
 12451  01555E  D026               	goto	l10885
 12452  015560                     l1650:
 12453                           
 12454                           ; BSR set to: 1
 12455                           
 12456                           ; BSR set to: 1
 12457  015560  C12B  FFD9         	movff	atoi@s,fsr2l
 12458  015564  C12C  FFDA         	movff	atoi@s+1,fsr2h
 12459  015568  0E2B               	movlw	43
 12460  01556A  18DE               	xorwf	postinc2,w,c
 12461  01556C  A4D8               	btfss	status,2,c
 12462  01556E  D020               	goto	l1653
 12463  015570  D01D               	goto	l10885
 12464  015572                     
 12465                           ; BSR set to: 1
 12466  015572  C130  F125         	movff	atoi@a,___wmul@multiplier
 12467  015576  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
 12468  01557A  0E00               	movlw	0
 12469  01557C  0101               	movlb	1	; () banked
 12470  01557E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12471  015580  0E0A               	movlw	10
 12472  015582  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12473  015584  ECB2  F0B5         	call	___wmul	;wreg free
 12474  015588  C12B  FFD9         	movff	atoi@s,fsr2l
 12475  01558C  C12C  FFDA         	movff	atoi@s+1,fsr2h
 12476  015590  50DF               	movf	indf2,w,c
 12477  015592  0101               	movlb	1	; () banked
 12478  015594  6F2D               	movwf	??_atoi& (0+255),b
 12479  015596  6B2E               	clrf	(??_atoi+1)& (0+255),b
 12480  015598  5125               	movf	?___wmul& (0+255),w,b
 12481  01559A  272D               	addwf	??_atoi& (0+255),f,b
 12482  01559C  5126               	movf	(?___wmul+1)& (0+255),w,b
 12483  01559E  232E               	addwfc	(??_atoi+1)& (0+255),f,b
 12484  0155A0  0ED0               	movlw	208
 12485  0155A2  252D               	addwf	??_atoi& (0+255),w,b
 12486  0155A4  6F30               	movwf	atoi@a& (0+255),b
 12487  0155A6  0EFF               	movlw	255
 12488  0155A8  212E               	addwfc	(??_atoi+1)& (0+255),w,b
 12489  0155AA  6F31               	movwf	(atoi@a+1)& (0+255),b
 12490  0155AC                     l10885:
 12491                           
 12492                           ; BSR set to: 1
 12493  0155AC  4B2B               	infsnz	atoi@s& (0+255),f,b
 12494  0155AE  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 12495  0155B0                     l1653:
 12496                           
 12497                           ; BSR set to: 1
 12498                           
 12499                           ; BSR set to: 1
 12500  0155B0  C12B  FFD9         	movff	atoi@s,fsr2l
 12501  0155B4  C12C  FFDA         	movff	atoi@s+1,fsr2h
 12502  0155B8  50DF               	movf	indf2,w,c
 12503  0155BA  EC5E  F0B6         	call	_isdigit
 12504  0155BE  B0D8               	btfsc	status,0,c
 12505  0155C0  D7D8               	goto	l1654
 12506  0155C2  0101               	movlb	1	; () banked
 12507  0155C4  512F               	movf	atoi@sign& (0+255),w,b
 12508  0155C6  B4D8               	btfsc	status,2,c
 12509  0155C8  D00D               	goto	l1656
 12510                           
 12511                           ; BSR set to: 1
 12512  0155CA  C130  F12D         	movff	atoi@a,??_atoi
 12513  0155CE  C131  F12E         	movff	atoi@a+1,??_atoi+1
 12514  0155D2  1F2D               	comf	??_atoi& (0+255),f,b
 12515  0155D4  1F2E               	comf	(??_atoi+1)& (0+255),f,b
 12516  0155D6  4B2D               	infsnz	??_atoi& (0+255),f,b
 12517  0155D8  2B2E               	incf	(??_atoi+1)& (0+255),f,b
 12518  0155DA  C12D  F12B         	movff	??_atoi,?_atoi
 12519  0155DE  C12E  F12C         	movff	??_atoi+1,?_atoi+1
 12520  0155E2  0012               	return	
 12521  0155E4                     l1656:
 12522                           
 12523                           ; BSR set to: 1
 12524  0155E4  C130  F12B         	movff	atoi@a,?_atoi
 12525  0155E8  C131  F12C         	movff	atoi@a+1,?_atoi+1
 12526                           
 12527                           ; BSR set to: 1
 12528  0155EC  0012               	return		;funcret
 12529  0155EE                     __end_of_atoi:
 12530                           	opt stack 0
 12531                           tblptru	equ	0xFF8
 12532                           tblptrh	equ	0xFF7
 12533                           tblptrl	equ	0xFF6
 12534                           tablat	equ	0xFF5
 12535                           prodh	equ	0xFF4
 12536                           prodl	equ	0xFF3
 12537                           intcon	equ	0xFF2
 12538                           indf0	equ	0xFEF
 12539                           postinc0	equ	0xFEE
 12540                           fsr0h	equ	0xFEA
 12541                           fsr0l	equ	0xFE9
 12542                           wreg	equ	0xFE8
 12543                           indf1	equ	0xFE7
 12544                           postdec1	equ	0xFE5
 12545                           plusw1	equ	0xFE3
 12546                           fsr1h	equ	0xFE2
 12547                           fsr1l	equ	0xFE1
 12548                           indf2	equ	0xFDF
 12549                           postinc2	equ	0xFDE
 12550                           postdec2	equ	0xFDD
 12551                           plusw2	equ	0xFDB
 12552                           fsr2h	equ	0xFDA
 12553                           fsr2l	equ	0xFD9
 12554                           status	equ	0xFD8
 12555                           
 12556 ;; *************** function ___ftdiv *****************
 12557 ;; Defined at:
 12558 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;  f1              3   55[BANK1 ] float 
 12561 ;;  f2              3   58[BANK1 ] float 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;  f3              3   65[BANK1 ] float 
 12564 ;;  sign            1   69[BANK1 ] unsigned char 
 12565 ;;  exp             1   68[BANK1 ] unsigned char 
 12566 ;;  cntr            1   64[BANK1 ] unsigned char 
 12567 ;; Return value:  Size  Location     Type
 12568 ;;                  3   55[BANK1 ] float 
 12569 ;; Registers used:
 12570 ;;		wreg, status,2, status,0, cstack
 12571 ;; Tracked objects:
 12572 ;;		On entry : 0/0
 12573 ;;		On exit  : 0/0
 12574 ;;		Unchanged: 0/0
 12575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12576 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12577 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12578 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12579 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12580 ;;Total ram usage:       15 bytes
 12581 ;; Hardware stack levels used:    1
 12582 ;; Hardware stack levels required when called:   15
 12583 ;; This function calls:
 12584 ;;		___ftpack
 12585 ;; This function is called by:
 12586 ;;		_ringBufferLUT
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           	psect	text24
 12591  015190                     __ptext24:
 12592                           	opt stack 0
 12593  015190                     ___ftdiv:
 12594                           	opt stack 13
 12595                           
 12596                           ; BSR set to: 1
 12597                           ;incstack = 0
 12598  015190  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
 12599  015194  0101               	movlb	1	; () banked
 12600  015196  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 12601  015198  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 12602  01519A  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 12603  01519C  373D               	rlcf	??___ftdiv& (0+255),f,b
 12604  01519E  E301               	bnc	u12371
 12605  0151A0  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 12606  0151A2                     u12371:
 12607  0151A2  513D               	movf	??___ftdiv& (0+255),w,b
 12608  0151A4  6F44               	movwf	___ftdiv@exp& (0+255),b
 12609  0151A6  5144               	movf	___ftdiv@exp& (0+255),w,b
 12610  0151A8  A4D8               	btfss	status,2,c
 12611  0151AA  D007               	goto	l1806
 12612                           
 12613                           ; BSR set to: 1
 12614  0151AC  0E00               	movlw	0
 12615  0151AE  6F37               	movwf	?___ftdiv& (0+255),b
 12616  0151B0  0E00               	movlw	0
 12617  0151B2  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 12618  0151B4  0E00               	movlw	0
 12619  0151B6  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 12620                           
 12621                           ; BSR set to: 1
 12622  0151B8  0012               	return	
 12623  0151BA                     l1806:
 12624                           
 12625                           ; BSR set to: 1
 12626                           
 12627                           ; BSR set to: 1
 12628  0151BA  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
 12629  0151BE  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 12630  0151C0  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 12631  0151C2  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 12632  0151C4  373D               	rlcf	??___ftdiv& (0+255),f,b
 12633  0151C6  E301               	bnc	u12391
 12634  0151C8  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 12635  0151CA                     u12391:
 12636  0151CA  513D               	movf	??___ftdiv& (0+255),w,b
 12637  0151CC  6F45               	movwf	___ftdiv@sign& (0+255),b
 12638  0151CE  5145               	movf	___ftdiv@sign& (0+255),w,b
 12639  0151D0  A4D8               	btfss	status,2,c
 12640  0151D2  D007               	goto	l1808
 12641                           
 12642                           ; BSR set to: 1
 12643  0151D4  0E00               	movlw	0
 12644  0151D6  6F37               	movwf	?___ftdiv& (0+255),b
 12645  0151D8  0E00               	movlw	0
 12646  0151DA  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 12647  0151DC  0E00               	movlw	0
 12648  0151DE  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 12649                           
 12650                           ; BSR set to: 1
 12651  0151E0  0012               	return	
 12652  0151E2                     l1808:
 12653                           
 12654                           ; BSR set to: 1
 12655                           
 12656                           ; BSR set to: 1
 12657  0151E2  0E00               	movlw	0
 12658  0151E4  6F41               	movwf	___ftdiv@f3& (0+255),b
 12659  0151E6  0E00               	movlw	0
 12660  0151E8  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
 12661  0151EA  0E00               	movlw	0
 12662  0151EC  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
 12663                           
 12664                           ; BSR set to: 1
 12665  0151EE  5145               	movf	___ftdiv@sign& (0+255),w,b
 12666  0151F0  0F89               	addlw	137
 12667  0151F2  5F44               	subwf	___ftdiv@exp& (0+255),f,b
 12668                           
 12669                           ; BSR set to: 1
 12670  0151F4  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
 12671                           
 12672                           ; BSR set to: 1
 12673  0151F8  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 12674  0151FA  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
 12675                           
 12676                           ; BSR set to: 1
 12677  0151FC  0E80               	movlw	128
 12678  0151FE  1745               	andwf	___ftdiv@sign& (0+255),f,b
 12679                           
 12680                           ; BSR set to: 1
 12681  015200  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 12682                           
 12683                           ; BSR set to: 1
 12684  015202  0EFF               	movlw	255
 12685  015204  1737               	andwf	___ftdiv@f1& (0+255),f,b
 12686  015206  0EFF               	movlw	255
 12687  015208  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 12688  01520A  0E00               	movlw	0
 12689  01520C  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 12690                           
 12691                           ; BSR set to: 1
 12692  01520E  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 12693                           
 12694                           ; BSR set to: 1
 12695  015210  0EFF               	movlw	255
 12696  015212  173A               	andwf	___ftdiv@f2& (0+255),f,b
 12697  015214  0EFF               	movlw	255
 12698  015216  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 12699  015218  0E00               	movlw	0
 12700  01521A  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 12701                           
 12702                           ; BSR set to: 1
 12703  01521C  0E18               	movlw	24
 12704  01521E  6F40               	movwf	___ftdiv@cntr& (0+255),b
 12705  015220                     
 12706                           ; BSR set to: 1
 12707                           
 12708                           ; BSR set to: 1
 12709  015220  90D8               	bcf	status,0,c
 12710  015222  3741               	rlcf	___ftdiv@f3& (0+255),f,b
 12711  015224  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 12712  015226  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 12713                           
 12714                           ; BSR set to: 1
 12715  015228  513A               	movf	___ftdiv@f2& (0+255),w,b
 12716  01522A  5D37               	subwf	___ftdiv@f1& (0+255),w,b
 12717  01522C  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 12718  01522E  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 12719  015230  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 12720  015232  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 12721  015234  A0D8               	btfss	status,0,c
 12722  015236  D007               	goto	l1810
 12723                           
 12724                           ; BSR set to: 1
 12725  015238  513A               	movf	___ftdiv@f2& (0+255),w,b
 12726  01523A  5F37               	subwf	___ftdiv@f1& (0+255),f,b
 12727  01523C  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 12728  01523E  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 12729  015240  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 12730  015242  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 12731                           
 12732                           ; BSR set to: 1
 12733  015244  8141               	bsf	___ftdiv@f3& (0+255),0,b
 12734  015246                     l1810:
 12735                           
 12736                           ; BSR set to: 1
 12737  015246  90D8               	bcf	status,0,c
 12738  015248  3737               	rlcf	___ftdiv@f1& (0+255),f,b
 12739  01524A  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 12740  01524C  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 12741                           
 12742                           ; BSR set to: 1
 12743  01524E  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
 12744  015250  D7E7               	goto	l1809
 12745                           
 12746                           ; BSR set to: 1
 12747                           
 12748                           ; BSR set to: 1
 12749  015252  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
 12750  015256  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
 12751  01525A  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
 12752  01525E  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
 12753  015262  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
 12754  015266  ECBE  F0AB         	call	___ftpack	;wreg free
 12755  01526A  C117  F137         	movff	?___ftpack,?___ftdiv
 12756  01526E  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
 12757  015272  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
 12758  015276  0012               	return	
 12759  015278                     __end_of___ftdiv:
 12760                           	opt stack 0
 12761                           tblptru	equ	0xFF8
 12762                           tblptrh	equ	0xFF7
 12763                           tblptrl	equ	0xFF6
 12764                           tablat	equ	0xFF5
 12765                           prodh	equ	0xFF4
 12766                           prodl	equ	0xFF3
 12767                           intcon	equ	0xFF2
 12768                           indf0	equ	0xFEF
 12769                           postinc0	equ	0xFEE
 12770                           fsr0h	equ	0xFEA
 12771                           fsr0l	equ	0xFE9
 12772                           wreg	equ	0xFE8
 12773                           indf1	equ	0xFE7
 12774                           postdec1	equ	0xFE5
 12775                           plusw1	equ	0xFE3
 12776                           fsr1h	equ	0xFE2
 12777                           fsr1l	equ	0xFE1
 12778                           indf2	equ	0xFDF
 12779                           postinc2	equ	0xFDE
 12780                           postdec2	equ	0xFDD
 12781                           plusw2	equ	0xFDB
 12782                           fsr2h	equ	0xFDA
 12783                           fsr2l	equ	0xFD9
 12784                           status	equ	0xFD8
 12785                           
 12786 ;; *************** function ___awtoft *****************
 12787 ;; Defined at:
 12788 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  c               2   31[BANK1 ] int 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;  sign            1   34[BANK1 ] unsigned char 
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  3   31[BANK1 ] float 
 12795 ;; Registers used:
 12796 ;;		wreg, status,2, status,0, cstack
 12797 ;; Tracked objects:
 12798 ;;		On entry : 0/0
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12802 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12803 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12805 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12806 ;;Total ram usage:        4 bytes
 12807 ;; Hardware stack levels used:    1
 12808 ;; Hardware stack levels required when called:   15
 12809 ;; This function calls:
 12810 ;;		___ftpack
 12811 ;; This function is called by:
 12812 ;;		_ringBufferLUT
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text25
 12817  01695E                     __ptext25:
 12818                           	opt stack 0
 12819  01695E                     ___awtoft:
 12820                           	opt stack 13
 12821                           
 12822                           ;incstack = 0
 12823  01695E  0E00               	movlw	0
 12824  016960  0101               	movlb	1	; () banked
 12825  016962  6F22               	movwf	___awtoft@sign& (0+255),b
 12826                           
 12827                           ; BSR set to: 1
 12828  016964  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
 12829  016966  D006               	goto	l1694
 12830                           
 12831                           ; BSR set to: 1
 12832  016968  6D1F               	negf	___awtoft@c& (0+255),b
 12833  01696A  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
 12834  01696C  B0D8               	btfsc	status,0,c
 12835  01696E  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
 12836                           
 12837                           ; BSR set to: 1
 12838  016970  0E01               	movlw	1
 12839  016972  6F22               	movwf	___awtoft@sign& (0+255),b
 12840  016974                     l1694:
 12841                           
 12842                           ; BSR set to: 1
 12843                           
 12844                           ; BSR set to: 1
 12845  016974  C11F  F117         	movff	___awtoft@c,___ftpack@arg
 12846  016978  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
 12847  01697C  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
 12848  01697E  0E8E               	movlw	142
 12849  016980  6F1A               	movwf	___ftpack@exp& (0+255),b
 12850  016982  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
 12851  016986  ECBE  F0AB         	call	___ftpack	;wreg free
 12852  01698A  C117  F11F         	movff	?___ftpack,?___awtoft
 12853  01698E  C118  F120         	movff	?___ftpack+1,?___awtoft+1
 12854  016992  C119  F121         	movff	?___ftpack+2,?___awtoft+2
 12855  016996  0012               	return	
 12856  016998                     __end_of___awtoft:
 12857                           	opt stack 0
 12858                           tblptru	equ	0xFF8
 12859                           tblptrh	equ	0xFF7
 12860                           tblptrl	equ	0xFF6
 12861                           tablat	equ	0xFF5
 12862                           prodh	equ	0xFF4
 12863                           prodl	equ	0xFF3
 12864                           intcon	equ	0xFF2
 12865                           indf0	equ	0xFEF
 12866                           postinc0	equ	0xFEE
 12867                           fsr0h	equ	0xFEA
 12868                           fsr0l	equ	0xFE9
 12869                           wreg	equ	0xFE8
 12870                           indf1	equ	0xFE7
 12871                           postdec1	equ	0xFE5
 12872                           plusw1	equ	0xFE3
 12873                           fsr1h	equ	0xFE2
 12874                           fsr1l	equ	0xFE1
 12875                           indf2	equ	0xFDF
 12876                           postinc2	equ	0xFDE
 12877                           postdec2	equ	0xFDD
 12878                           plusw2	equ	0xFDB
 12879                           fsr2h	equ	0xFDA
 12880                           fsr2l	equ	0xFD9
 12881                           status	equ	0xFD8
 12882                           
 12883 ;; *************** function _TMR7_StartTimer *****************
 12884 ;; Defined at:
 12885 ;;		line 99 in file "mcc_generated_files/tmr7.c"
 12886 ;; Parameters:    Size  Location     Type
 12887 ;;		None
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;		None
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  1    wreg      void 
 12892 ;; Registers used:
 12893 ;;		None
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12903 ;;Total ram usage:        0 bytes
 12904 ;; Hardware stack levels used:    1
 12905 ;; Hardware stack levels required when called:   14
 12906 ;; This function calls:
 12907 ;;		Nothing
 12908 ;; This function is called by:
 12909 ;;		_ringBufferLUT
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           	psect	text26
 12914  016EC0                     __ptext26:
 12915                           	opt stack 0
 12916  016EC0                     _TMR7_StartTimer:
 12917                           	opt stack 14
 12918                           
 12919                           ;tmr7.c: 102: T7CONbits.TMR7ON = 1;
 12920                           
 12921                           ;incstack = 0
 12922  016EC0  010F               	movlb	15	; () banked
 12923  016EC2  8130               	bsf	48,0,b	;volatile
 12924                           
 12925                           ; BSR set to: 15
 12926  016EC4  0012               	return		;funcret
 12927  016EC6                     __end_of_TMR7_StartTimer:
 12928                           	opt stack 0
 12929                           tblptru	equ	0xFF8
 12930                           tblptrh	equ	0xFF7
 12931                           tblptrl	equ	0xFF6
 12932                           tablat	equ	0xFF5
 12933                           prodh	equ	0xFF4
 12934                           prodl	equ	0xFF3
 12935                           intcon	equ	0xFF2
 12936                           indf0	equ	0xFEF
 12937                           postinc0	equ	0xFEE
 12938                           fsr0h	equ	0xFEA
 12939                           fsr0l	equ	0xFE9
 12940                           wreg	equ	0xFE8
 12941                           indf1	equ	0xFE7
 12942                           postdec1	equ	0xFE5
 12943                           plusw1	equ	0xFE3
 12944                           fsr1h	equ	0xFE2
 12945                           fsr1l	equ	0xFE1
 12946                           indf2	equ	0xFDF
 12947                           postinc2	equ	0xFDE
 12948                           postdec2	equ	0xFDD
 12949                           plusw2	equ	0xFDB
 12950                           fsr2h	equ	0xFDA
 12951                           fsr2l	equ	0xFD9
 12952                           status	equ	0xFD8
 12953                           
 12954 ;; *************** function _EUSART2_Read *****************
 12955 ;; Defined at:
 12956 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;		None
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;  readValue       1   23[BANK1 ] unsigned char 
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  1    wreg      unsigned char 
 12963 ;; Registers used:
 12964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12971 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12973 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12974 ;;Total ram usage:        1 bytes
 12975 ;; Hardware stack levels used:    1
 12976 ;; Hardware stack levels required when called:   14
 12977 ;; This function calls:
 12978 ;;		Nothing
 12979 ;; This function is called by:
 12980 ;;		_terminal_ringBufferPull
 12981 ;;		_getch
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985                           	psect	text27
 12986  016792                     __ptext27:
 12987                           	opt stack 0
 12988  016792                     _EUSART2_Read:
 12989                           	opt stack 15
 12990                           
 12991                           ;eusart2.c: 139: uint8_t readValue = 0;
 12992                           
 12993                           ; BSR set to: 15
 12994                           ;incstack = 0
 12995  016792  0E00               	movlw	0
 12996  016794  0101               	movlb	1	; () banked
 12997  016796  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 12998                           
 12999                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 13000  016798  D002               	goto	l381
 13001  01679A                     l382:
 13002                           
 13003                           ; BSR set to: 1
 13004  01679A  0004               	clrwdt		;# 
 13005                           
 13006                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 13007  01679C  827E               	bsf	3966,1,c	;volatile
 13008  01679E                     l381:
 13009  01679E  0101               	movlb	1	; () banked
 13010  0167A0  51D0               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 13011  0167A2  B4D8               	btfsc	status,2,c
 13012  0167A4  D7FA               	goto	l382
 13013                           
 13014                           ; BSR set to: 1
 13015                           ;eusart2.c: 145: }
 13016                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 13017  0167A6  927E               	bcf	3966,1,c	;volatile
 13018                           
 13019                           ; BSR set to: 1
 13020                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 13021  0167A8  51D1               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13022  0167AA  0D01               	mullw	1
 13023  0167AC  0E00               	movlw	low _eusart2RxBuffer
 13024  0167AE  24F3               	addwf	prodl,w,c
 13025  0167B0  6ED9               	movwf	fsr2l,c
 13026  0167B2  0E02               	movlw	high _eusart2RxBuffer
 13027  0167B4  20F4               	addwfc	prodh,w,c
 13028  0167B6  6EDA               	movwf	fsr2h,c
 13029  0167B8  50DF               	movf	indf2,w,c
 13030  0167BA  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13031                           
 13032                           ; BSR set to: 1
 13033  0167BC  2BD1               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 13034                           
 13035                           ; BSR set to: 1
 13036                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 13037  0167BE  0E3F               	movlw	63
 13038  0167C0  65D1               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 13039  0167C2  D002               	goto	l384
 13040                           
 13041                           ; BSR set to: 1
 13042                           ;eusart2.c: 151: {
 13043                           ;eusart2.c: 152: eusart2RxTail = 0;
 13044  0167C4  0E00               	movlw	0
 13045  0167C6  6FD1               	movwf	_eusart2RxTail& (0+255),b	;volatile
 13046  0167C8                     l384:
 13047                           
 13048                           ; BSR set to: 1
 13049                           ;eusart2.c: 153: }
 13050                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 13051                           
 13052                           ; BSR set to: 1
 13053  0167C8  010E               	movlb	14	; () banked
 13054  0167CA  9F2C               	bcf	44,7,b	;volatile
 13055                           
 13056                           ; BSR set to: 14
 13057                           ;eusart2.c: 155: eusart2RxCount--;
 13058  0167CC  0101               	movlb	1	; () banked
 13059  0167CE  07D0               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 13060                           
 13061                           ; BSR set to: 1
 13062                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 13063  0167D0  010E               	movlb	14	; () banked
 13064  0167D2  8F2C               	bsf	44,7,b	;volatile
 13065                           
 13066                           ; BSR set to: 14
 13067                           ;eusart2.c: 158: return readValue;
 13068  0167D4  0101               	movlb	1	; () banked
 13069  0167D6  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 13070  0167D8  0012               	return	
 13071  0167DA                     __end_of_EUSART2_Read:
 13072                           	opt stack 0
 13073                           tblptru	equ	0xFF8
 13074                           tblptrh	equ	0xFF7
 13075                           tblptrl	equ	0xFF6
 13076                           tablat	equ	0xFF5
 13077                           prodh	equ	0xFF4
 13078                           prodl	equ	0xFF3
 13079                           intcon	equ	0xFF2
 13080                           indf0	equ	0xFEF
 13081                           postinc0	equ	0xFEE
 13082                           fsr0h	equ	0xFEA
 13083                           fsr0l	equ	0xFE9
 13084                           wreg	equ	0xFE8
 13085                           indf1	equ	0xFE7
 13086                           postdec1	equ	0xFE5
 13087                           plusw1	equ	0xFE3
 13088                           fsr1h	equ	0xFE2
 13089                           fsr1l	equ	0xFE1
 13090                           indf2	equ	0xFDF
 13091                           postinc2	equ	0xFDE
 13092                           postdec2	equ	0xFDD
 13093                           plusw2	equ	0xFDB
 13094                           fsr2h	equ	0xFDA
 13095                           fsr2l	equ	0xFD9
 13096                           status	equ	0xFD8
 13097                           
 13098 ;; *************** function _terminal_clearTerminal *****************
 13099 ;; Defined at:
 13100 ;;		line 80 in file "ring_buffer_interface.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; Hardware stack levels required when called:   18
 13121 ;; This function calls:
 13122 ;;		_printf
 13123 ;; This function is called by:
 13124 ;;		_main
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128                           	psect	text28
 13129  016DFC                     __ptext28:
 13130                           	opt stack 0
 13131  016DFC                     _terminal_clearTerminal:
 13132                           	opt stack 12
 13133                           
 13134                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 13135                           
 13136                           ; BSR set to: 1
 13137                           ;incstack = 0
 13138  016DFC  0EB0               	movlw	low STR_2
 13139  016DFE  0101               	movlb	1	; () banked
 13140  016E00  6F64               	movwf	printf@f& (0+255),b
 13141  016E02  0EFF               	movlw	high STR_2
 13142  016E04  6F65               	movwf	(printf@f+1)& (0+255),b
 13143  016E06  ECA4  F086         	call	_printf	;wreg free
 13144  016E0A  0012               	return		;funcret
 13145  016E0C                     __end_of_terminal_clearTerminal:
 13146                           	opt stack 0
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           indf0	equ	0xFEF
 13155                           postinc0	equ	0xFEE
 13156                           fsr0h	equ	0xFEA
 13157                           fsr0l	equ	0xFE9
 13158                           wreg	equ	0xFE8
 13159                           indf1	equ	0xFE7
 13160                           postdec1	equ	0xFE5
 13161                           plusw1	equ	0xFE3
 13162                           fsr1h	equ	0xFE2
 13163                           fsr1l	equ	0xFE1
 13164                           indf2	equ	0xFDF
 13165                           postinc2	equ	0xFDE
 13166                           postdec2	equ	0xFDD
 13167                           plusw2	equ	0xFDB
 13168                           fsr2h	equ	0xFDA
 13169                           fsr2l	equ	0xFD9
 13170                           status	equ	0xFD8
 13171                           
 13172 ;; *************** function _printf *****************
 13173 ;; Defined at:
 13174 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  f               2  100[BANK1 ] PTR const unsigned char 
 13177 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(36), 
 13178 ;;		 -> STR_115(33), STR_114(2031), STR_112(53), STR_110(58), 
 13179 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 13180 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 13181 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 13182 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 13183 ;;		 -> STR_81(34), STR_79(34), STR_77(35), STR_75(45), 
 13184 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 13185 ;;		 -> STR_59(54), STR_58(64), STR_56(57), STR_54(85), 
 13186 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 13187 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 13188 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 13189 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 13190 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  idx             1  117[BANK1 ] unsigned char 
 13193 ;;  val             4  132[BANK1 ] unsigned long 
 13194 ;;  tmpval          4  128[BANK1 ] struct .
 13195 ;;  fval            3  136[BANK1 ] struct .
 13196 ;;  prec            2  139[BANK1 ] int 
 13197 ;;  exp             2  126[BANK1 ] int 
 13198 ;;  flag            2  124[BANK1 ] unsigned short 
 13199 ;;  ap              2  122[BANK1 ] PTR void [1]
 13200 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13201 ;;  cp              2  120[BANK1 ] PTR const unsigned char 
 13202 ;;		 -> STR_133(7), printf@c(1), STR_132(16), STR_131(22), 
 13203 ;;		 -> STR_130(21), STR_129(27), STR_128(41), STR_127(32), 
 13204 ;;		 -> STR_126(19), STR_125(16), STR_124(15), STR_123(16), 
 13205 ;;		 -> STR_122(10), STR_121(13), STR_120(12), ringBufferLUT@channel_name(22), 
 13206 ;;		 -> TRIAC_Firing_Angle(3), 
 13207 ;;  len             2  118[BANK1 ] unsigned int 
 13208 ;;  width           2    0        int 
 13209 ;;  c               1  141[BANK1 ] char 
 13210 ;;  d               1    0        unsigned char 
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  2  100[BANK1 ] int 
 13213 ;; Registers used:
 13214 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13220 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13221 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13222 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13223 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13224 ;;Total ram usage:       42 bytes
 13225 ;; Hardware stack levels used:    1
 13226 ;; Hardware stack levels required when called:   17
 13227 ;; This function calls:
 13228 ;;		___awdiv
 13229 ;;		___ftadd
 13230 ;;		___ftge
 13231 ;;		___ftmul
 13232 ;;		___ftneg
 13233 ;;		___ftsub
 13234 ;;		___fttol
 13235 ;;		___lldiv
 13236 ;;		___llmod
 13237 ;;		___lltoft
 13238 ;;		___wmul
 13239 ;;		__div_to_l_
 13240 ;;		__tdiv_to_l_
 13241 ;;		_fround
 13242 ;;		_isdigit
 13243 ;;		_putch
 13244 ;;		_scale
 13245 ;; This function is called by:
 13246 ;;		_terminal_clearTerminal
 13247 ;;		_terminal_setCursorHome
 13248 ;;		_terminal_textAttributes
 13249 ;;		_terminal_printNewline
 13250 ;;		_ringBufferLUT
 13251 ;;		_terminal_printResetMessage
 13252 ;;		_terminal_clearLine
 13253 ;;		_terminal_saveCursor
 13254 ;;		_terminal_returnCursor
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           	psect	text29
 13259  010D48                     __ptext29:
 13260                           	opt stack 0
 13261  010D48                     _printf:
 13262                           	opt stack 11
 13263                           
 13264                           ;doprnt.c: 466: va_list ap;
 13265                           ;doprnt.c: 499: signed char c;
 13266                           ;doprnt.c: 501: int width;
 13267                           ;doprnt.c: 504: int prec;
 13268                           ;doprnt.c: 508: unsigned short flag;
 13269                           ;doprnt.c: 515: char d;
 13270                           ;doprnt.c: 516: double fval;
 13271                           ;doprnt.c: 517: int exp;
 13272                           ;doprnt.c: 523: union {
 13273                           ;doprnt.c: 524: unsigned long vd;
 13274                           ;doprnt.c: 525: double integ;
 13275                           ;doprnt.c: 526: } tmpval;
 13276                           ;doprnt.c: 528: unsigned long val;
 13277                           ;doprnt.c: 529: unsigned len;
 13278                           ;doprnt.c: 530: const char * cp;
 13279                           ;doprnt.c: 533: *ap = __va_start();
 13280                           
 13281                           ;incstack = 0
 13282  010D48  0E66               	movlw	low (?_printf+2)
 13283  010D4A  0101               	movlb	1	; () banked
 13284  010D4C  6F7A               	movwf	printf@ap& (0+255),b
 13285  010D4E  0E01               	movlw	high (?_printf+2)
 13286  010D50  6F7B               	movwf	(printf@ap+1)& (0+255),b
 13287                           
 13288                           ;doprnt.c: 536: while(c = *f++) {
 13289  010D52  EFEF  F08B         	goto	u11790
 13290  010D56                     
 13291                           ; BSR set to: 1
 13292                           ;doprnt.c: 538: if(c != '%')
 13293                           
 13294                           ; BSR set to: 1
 13295  010D56  0E25               	movlw	37
 13296  010D58  198D               	xorwf	printf@c& (0+255),w,b
 13297  010D5A  B4D8               	btfsc	status,2,c
 13298  010D5C  D005               	goto	l1352
 13299                           
 13300                           ; BSR set to: 1
 13301                           ;doprnt.c: 540: {
 13302                           ;doprnt.c: 541: (putch(c) );
 13303  010D5E  518D               	movf	printf@c& (0+255),w,b
 13304  010D60  EC15  F0B7         	call	_putch
 13305                           
 13306                           ;doprnt.c: 542: continue;
 13307  010D64  EFEF  F08B         	goto	u11790
 13308  010D68                     l1352:
 13309                           
 13310                           ;doprnt.c: 543: }
 13311                           ;doprnt.c: 548: flag = 0;
 13312  010D68  0E00               	movlw	0
 13313  010D6A  0101               	movlb	1	; () banked
 13314  010D6C  6F7D               	movwf	(printf@flag+1)& (0+255),b
 13315  010D6E  0E00               	movlw	0
 13316  010D70  6F7C               	movwf	printf@flag& (0+255),b
 13317                           
 13318                           ; BSR set to: 1
 13319                           ;doprnt.c: 611: if(*f == '.') {
 13320  010D72  C164  FFF6         	movff	printf@f,tblptrl
 13321  010D76  C165  FFF7         	movff	printf@f+1,tblptrh
 13322  010D7A  0E00               	movlw	low (__mediumconst shr (0+16))
 13323  010D7C  6EF8               	movwf	tblptru,c
 13324  010D7E  0E0D               	movlw	(high __ramtop+-1)
 13325  010D80  64F7               	cpfsgt	tblptrh,c
 13326  010D82  D003               	bra	u11297
 13327  010D84  0008               	tblrd		*
 13328  010D86  50F5               	movf	tablat,w,c
 13329  010D88  D005               	bra	u11290
 13330  010D8A                     u11297:
 13331  010D8A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13332  010D8E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13333  010D92  50EF               	movf	indf0,w,c
 13334  010D94                     u11290:
 13335  010D94  0A2E               	xorlw	46
 13336  010D96  A4D8               	btfss	status,2,c
 13337  010D98  D049               	goto	l1353
 13338                           
 13339                           ;doprnt.c: 612: flag |= 0x4000;
 13340  010D9A  0101               	movlb	1	; () banked
 13341  010D9C  8D7D               	bsf	(printf@flag+1)& (0+255),6,b
 13342                           
 13343                           ;doprnt.c: 613: f++;
 13344  010D9E  4B64               	infsnz	printf@f& (0+255),f,b
 13345  010DA0  2B65               	incf	(printf@f+1)& (0+255),f,b
 13346                           
 13347                           ; BSR set to: 1
 13348                           ;doprnt.c: 620: {
 13349                           ;doprnt.c: 621: prec = 0;
 13350  010DA2  0E00               	movlw	0
 13351  010DA4  6F8C               	movwf	(printf@prec+1)& (0+255),b
 13352  010DA6  0E00               	movlw	0
 13353  010DA8  6F8B               	movwf	printf@prec& (0+255),b
 13354                           
 13355                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 13356  010DAA  D02A               	goto	l1354
 13357  010DAC                     
 13358                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 13359                           
 13360                           ; BSR set to: 1
 13361  010DAC  C18B  F125         	movff	printf@prec,___wmul@multiplier
 13362  010DB0  C18C  F126         	movff	printf@prec+1,___wmul@multiplier+1
 13363  010DB4  0E00               	movlw	0
 13364  010DB6  0101               	movlb	1	; () banked
 13365  010DB8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13366  010DBA  0E0A               	movlw	10
 13367  010DBC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13368  010DBE  ECB2  F0B5         	call	___wmul	;wreg free
 13369  010DC2  C164  FFF6         	movff	printf@f,tblptrl
 13370  010DC6  C165  FFF7         	movff	printf@f+1,tblptrh
 13371  010DCA  0E00               	movlw	low (__mediumconst shr (0+16))
 13372  010DCC  6EF8               	movwf	tblptru,c
 13373  010DCE  0E0D               	movlw	(high __ramtop+-1)
 13374  010DD0  64F7               	cpfsgt	tblptrh,c
 13375  010DD2  D003               	bra	u11317
 13376  010DD4  0008               	tblrd		*
 13377  010DD6  50F5               	movf	tablat,w,c
 13378  010DD8  D005               	bra	u11310
 13379  010DDA                     u11317:
 13380  010DDA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13381  010DDE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13382  010DE2  50EF               	movf	indf0,w,c
 13383  010DE4                     u11310:
 13384  010DE4  0101               	movlb	1	; () banked
 13385  010DE6  6F6C               	movwf	??_printf& (0+255),b
 13386  010DE8  516C               	movf	??_printf& (0+255),w,b
 13387  010DEA  2725               	addwf	?___wmul& (0+255),f,b
 13388  010DEC  0E00               	movlw	0
 13389  010DEE  2326               	addwfc	(?___wmul+1)& (0+255),f,b
 13390  010DF0  0ED0               	movlw	208
 13391  010DF2  2525               	addwf	?___wmul& (0+255),w,b
 13392  010DF4  6F8B               	movwf	printf@prec& (0+255),b
 13393  010DF6  0EFF               	movlw	255
 13394  010DF8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13395  010DFA  6F8C               	movwf	(printf@prec+1)& (0+255),b
 13396                           
 13397                           ; BSR set to: 1
 13398  010DFC  4B64               	infsnz	printf@f& (0+255),f,b
 13399  010DFE  2B65               	incf	(printf@f+1)& (0+255),f,b
 13400  010E00                     l1354:
 13401                           
 13402                           ; BSR set to: 1
 13403                           
 13404                           ; BSR set to: 1
 13405  010E00  C164  FFF6         	movff	printf@f,tblptrl
 13406  010E04  C165  FFF7         	movff	printf@f+1,tblptrh
 13407  010E08  0E00               	movlw	low (__mediumconst shr (0+16))
 13408  010E0A  6EF8               	movwf	tblptru,c
 13409  010E0C  0E0D               	movlw	(high __ramtop+-1)
 13410  010E0E  64F7               	cpfsgt	tblptrh,c
 13411  010E10  D003               	bra	u11327
 13412  010E12  0008               	tblrd		*
 13413  010E14  50F5               	movf	tablat,w,c
 13414  010E16  D005               	bra	u11320
 13415  010E18                     u11327:
 13416  010E18  CFF6 FFE9          	movff	tblptrl,fsr0l
 13417  010E1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13418  010E20  50EF               	movf	indf0,w,c
 13419  010E22                     u11320:
 13420  010E22  EC5E  F0B6         	call	_isdigit
 13421  010E26  A0D8               	btfss	status,0,c
 13422  010E28  D088               	goto	l1358
 13423  010E2A  D7C0               	goto	l1355
 13424  010E2C                     l1353:
 13425                           
 13426                           ;doprnt.c: 626: prec = 0;
 13427  010E2C  0E00               	movlw	0
 13428  010E2E  0101               	movlb	1	; () banked
 13429  010E30  6F8C               	movwf	(printf@prec+1)& (0+255),b
 13430  010E32  0E00               	movlw	0
 13431  010E34  6F8B               	movwf	printf@prec& (0+255),b
 13432                           
 13433                           ; BSR set to: 1
 13434                           ;doprnt.c: 628: flag |= 0x1000;
 13435  010E36  897D               	bsf	(printf@flag+1)& (0+255),4,b
 13436                           
 13437                           ; BSR set to: 1
 13438                           ;doprnt.c: 630: }
 13439                           ;doprnt.c: 635: switch(c = *f++) {
 13440  010E38  D080               	goto	l1358
 13441  010E3A                     
 13442                           ; BSR set to: 1
 13443                           ;doprnt.c: 663: flag |= 0x400;
 13444                           
 13445                           ; BSR set to: 1
 13446  010E3A  857D               	bsf	(printf@flag+1)& (0+255),2,b
 13447                           
 13448                           ; BSR set to: 1
 13449                           ;doprnt.c: 698: case 'i':
 13450                           ;doprnt.c: 699: break;
 13451                           
 13452                           ; BSR set to: 1
 13453                           
 13454                           ;doprnt.c: 697: case 'd':
 13455                           
 13456                           ;doprnt.c: 664: break;
 13457  010E3C  D0B5               	goto	l1362
 13458  010E3E                     
 13459                           ; BSR set to: 1
 13460                           ;doprnt.c: 718: case 'x':
 13461                           ;doprnt.c: 721: flag |= 0x80;
 13462                           
 13463                           ; BSR set to: 1
 13464                           
 13465                           ; BSR set to: 1
 13466  010E3E  8F7C               	bsf	printf@flag& (0+255),7,b
 13467                           
 13468                           ;doprnt.c: 723: break;
 13469  010E40  D0B3               	goto	l1362
 13470  010E42                     
 13471                           ; BSR set to: 1
 13472                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13473                           
 13474                           ; BSR set to: 1
 13475  010E42  C17A  FFD9         	movff	printf@ap,fsr2l
 13476  010E46  C17B  FFDA         	movff	printf@ap+1,fsr2h
 13477  010E4A  CFDE F178          	movff	postinc2,printf@cp
 13478  010E4E  CFDD F179          	movff	postdec2,printf@cp+1
 13479                           
 13480                           ; BSR set to: 1
 13481  010E52  0E02               	movlw	2
 13482  010E54  277A               	addwf	printf@ap& (0+255),f,b
 13483  010E56  0E00               	movlw	0
 13484  010E58  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 13485                           
 13486                           ; BSR set to: 1
 13487                           ;doprnt.c: 740: if(!cp)
 13488  010E5A  5178               	movf	printf@cp& (0+255),w,b
 13489  010E5C  1179               	iorwf	(printf@cp+1)& (0+255),w,b
 13490  010E5E  A4D8               	btfss	status,2,c
 13491  010E60  D004               	goto	l1368
 13492                           
 13493                           ; BSR set to: 1
 13494                           ;doprnt.c: 741: cp = "(null)";
 13495  010E62  0E86               	movlw	low STR_133
 13496  010E64  6F78               	movwf	printf@cp& (0+255),b
 13497  010E66  0EFF               	movlw	high STR_133
 13498  010E68  6F79               	movwf	(printf@cp+1)& (0+255),b
 13499  010E6A                     l1368:
 13500                           
 13501                           ; BSR set to: 1
 13502                           ;doprnt.c: 745: len = 0;
 13503                           
 13504                           ; BSR set to: 1
 13505  010E6A  0E00               	movlw	0
 13506  010E6C  6F77               	movwf	(printf@len+1)& (0+255),b
 13507  010E6E  0E00               	movlw	0
 13508  010E70  6F76               	movwf	printf@len& (0+255),b
 13509                           
 13510                           ;doprnt.c: 746: while(cp[len])
 13511  010E72  D003               	goto	l1369
 13512  010E74                     
 13513                           ;doprnt.c: 747: len++;
 13514                           
 13515                           ; BSR set to: 1
 13516  010E74  0101               	movlb	1	; () banked
 13517  010E76  4B76               	infsnz	printf@len& (0+255),f,b
 13518  010E78  2B77               	incf	(printf@len+1)& (0+255),f,b
 13519  010E7A                     l1369:
 13520                           
 13521                           ; BSR set to: 1
 13522                           
 13523                           ; BSR set to: 1
 13524  010E7A  5176               	movf	printf@len& (0+255),w,b
 13525  010E7C  2578               	addwf	printf@cp& (0+255),w,b
 13526  010E7E  6F6C               	movwf	??_printf& (0+255),b
 13527  010E80  5177               	movf	(printf@len+1)& (0+255),w,b
 13528  010E82  2179               	addwfc	(printf@cp+1)& (0+255),w,b
 13529  010E84  6F6D               	movwf	(??_printf+1)& (0+255),b
 13530  010E86  C16C  FFF6         	movff	??_printf,tblptrl
 13531  010E8A  C16D  FFF7         	movff	??_printf+1,tblptrh
 13532  010E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 13533  010E90  6EF8               	movwf	tblptru,c
 13534  010E92  0E0D               	movlw	(high __ramtop+-1)
 13535  010E94  64F7               	cpfsgt	tblptrh,c
 13536  010E96  D003               	bra	u11357
 13537  010E98  0008               	tblrd		*
 13538  010E9A  50F5               	movf	tablat,w,c
 13539  010E9C  D005               	bra	u11350
 13540  010E9E                     u11357:
 13541  010E9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13542  010EA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 13543  010EA6  50EF               	movf	indf0,w,c
 13544  010EA8                     u11350:
 13545  010EA8  0900               	iorlw	0
 13546  010EAA  A4D8               	btfss	status,2,c
 13547  010EAC  D7E3               	goto	l1370
 13548  010EAE                     u11360:
 13549                           
 13550                           ;doprnt.c: 753: if(prec && prec < len)
 13551                           
 13552                           ;doprnt.c: 750: dostring:
 13553  010EAE  0101               	movlb	1	; () banked
 13554  010EB0  518B               	movf	printf@prec& (0+255),w,b
 13555  010EB2  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 13556  010EB4  B4D8               	btfsc	status,2,c
 13557  010EB6  D021               	goto	l1374
 13558                           
 13559                           ; BSR set to: 1
 13560  010EB8  5176               	movf	printf@len& (0+255),w,b
 13561  010EBA  5D8B               	subwf	printf@prec& (0+255),w,b
 13562  010EBC  5177               	movf	(printf@len+1)& (0+255),w,b
 13563  010EBE  598C               	subwfb	(printf@prec+1)& (0+255),w,b
 13564  010EC0  B0D8               	btfsc	status,0,c
 13565  010EC2  D01B               	goto	l1374
 13566                           
 13567                           ; BSR set to: 1
 13568                           ;doprnt.c: 754: len = prec;
 13569  010EC4  C18B  F176         	movff	printf@prec,printf@len
 13570  010EC8  C18C  F177         	movff	printf@prec+1,printf@len+1
 13571                           
 13572                           ; BSR set to: 1
 13573                           ;doprnt.c: 767: while(len--)
 13574  010ECC  D016               	goto	l1374
 13575  010ECE                     l10115:
 13576                           
 13577                           ; BSR set to: 1
 13578                           ;doprnt.c: 768: (putch(*cp++) );
 13579  010ECE  C178  FFF6         	movff	printf@cp,tblptrl
 13580  010ED2  C179  FFF7         	movff	printf@cp+1,tblptrh
 13581  010ED6  0E00               	movlw	low (__mediumconst shr (0+16))
 13582  010ED8  6EF8               	movwf	tblptru,c
 13583  010EDA  0E0D               	movlw	(high __ramtop+-1)
 13584  010EDC  64F7               	cpfsgt	tblptrh,c
 13585  010EDE  D003               	bra	u11397
 13586  010EE0  0008               	tblrd		*
 13587  010EE2  50F5               	movf	tablat,w,c
 13588  010EE4  D005               	bra	u11390
 13589  010EE6                     u11397:
 13590  010EE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 13591  010EEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 13592  010EEE  50EF               	movf	indf0,w,c
 13593  010EF0                     u11390:
 13594  010EF0  EC15  F0B7         	call	_putch
 13595  010EF4  0101               	movlb	1	; () banked
 13596  010EF6  4B78               	infsnz	printf@cp& (0+255),f,b
 13597  010EF8  2B79               	incf	(printf@cp+1)& (0+255),f,b
 13598  010EFA                     l1374:
 13599                           
 13600                           ; BSR set to: 1
 13601                           
 13602                           ; BSR set to: 1
 13603  010EFA  0776               	decf	printf@len& (0+255),f,b
 13604  010EFC  A0D8               	btfss	status,0,c
 13605  010EFE  0777               	decf	(printf@len+1)& (0+255),f,b
 13606  010F00  2976               	incf	printf@len& (0+255),w,b
 13607  010F02  E1E5               	bnz	l10115
 13608  010F04  2977               	incf	(printf@len+1)& (0+255),w,b
 13609  010F06  B4D8               	btfsc	status,2,c
 13610  010F08  EFEF  F08B         	goto	u11790
 13611  010F0C  D7E0               	goto	l1375
 13612  010F0E                     
 13613                           ; BSR set to: 1
 13614                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 13615                           
 13616                           ; BSR set to: 1
 13617  010F0E  C17A  FFD9         	movff	printf@ap,fsr2l
 13618  010F12  C17B  FFDA         	movff	printf@ap+1,fsr2h
 13619  010F16  50DF               	movf	indf2,w,c
 13620  010F18  6F8D               	movwf	printf@c& (0+255),b
 13621                           
 13622                           ; BSR set to: 1
 13623  010F1A  0E02               	movlw	2
 13624  010F1C  277A               	addwf	printf@ap& (0+255),f,b
 13625  010F1E  0E00               	movlw	0
 13626  010F20  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 13627  010F22                     
 13628                           ; BSR set to: 1
 13629                           ;doprnt.c: 805: cp = (char *)&c;
 13630                           
 13631                           ; BSR set to: 1
 13632  010F22  0E8D               	movlw	low printf@c
 13633  010F24  6F78               	movwf	printf@cp& (0+255),b
 13634  010F26  0E01               	movlw	high printf@c
 13635  010F28  6F79               	movwf	(printf@cp+1)& (0+255),b
 13636                           
 13637                           ; BSR set to: 1
 13638                           ;doprnt.c: 806: len = 1;
 13639  010F2A  0E00               	movlw	0
 13640  010F2C  6F77               	movwf	(printf@len+1)& (0+255),b
 13641  010F2E  0E01               	movlw	1
 13642  010F30  6F76               	movwf	printf@len& (0+255),b
 13643                           
 13644                           ;doprnt.c: 807: goto dostring;
 13645  010F32  D7BD               	goto	u11360
 13646  010F34                     
 13647                           ; BSR set to: 1
 13648                           ;doprnt.c: 818: flag |= 0xC0;
 13649                           
 13650                           ; BSR set to: 1
 13651  010F34  0EC0               	movlw	192
 13652  010F36  137C               	iorwf	printf@flag& (0+255),f,b
 13653                           
 13654                           ; BSR set to: 1
 13655                           ;doprnt.c: 822: }
 13656                           
 13657                           ;doprnt.c: 819: break;
 13658  010F38  D037               	goto	l1362
 13659  010F3A                     l1358:
 13660                           
 13661                           ; BSR set to: 1
 13662  010F3A  0101               	movlb	1	; () banked
 13663  010F3C  5164               	movf	printf@f& (0+255),w,b
 13664  010F3E  6F6C               	movwf	??_printf& (0+255),b
 13665  010F40  5165               	movf	(printf@f+1)& (0+255),w,b
 13666  010F42  6F6D               	movwf	(??_printf+1)& (0+255),b
 13667  010F44  4B64               	infsnz	printf@f& (0+255),f,b
 13668  010F46  2B65               	incf	(printf@f+1)& (0+255),f,b
 13669  010F48  C16C  FFF6         	movff	??_printf,tblptrl
 13670  010F4C  C16D  FFF7         	movff	??_printf+1,tblptrh
 13671  010F50  0E00               	movlw	low (__mediumconst shr (0+16))
 13672  010F52  6EF8               	movwf	tblptru,c
 13673  010F54  0E0D               	movlw	(high __ramtop+-1)
 13674  010F56  64F7               	cpfsgt	tblptrh,c
 13675  010F58  D003               	bra	u11417
 13676  010F5A  0008               	tblrd		*
 13677  010F5C  50F5               	movf	tablat,w,c
 13678  010F5E  D005               	bra	u11410
 13679  010F60                     u11417:
 13680  010F60  CFF6 FFE9          	movff	tblptrl,fsr0l
 13681  010F64  CFF7 FFEA          	movff	tblptrh,fsr0h
 13682  010F68  50EF               	movf	indf0,w,c
 13683  010F6A                     u11410:
 13684  010F6A  0101               	movlb	1	; () banked
 13685  010F6C  6F8D               	movwf	printf@c& (0+255),b
 13686  010F6E  518D               	movf	printf@c& (0+255),w,b
 13687                           
 13688                           ; Switch size 1, requested type "space"
 13689                           ; Number of cases is 9, Range of values is 0 to 120
 13690                           ; switch strategies available:
 13691                           ; Name         Instructions Cycles
 13692                           ; simple_byte           28    15 (average)
 13693                           ;	Chosen strategy is simple_byte
 13694  010F70  0A00               	xorlw	0	; case 0
 13695  010F72  B4D8               	btfsc	status,2,c
 13696  010F74  0012               	return	
 13697  010F76  0A58               	xorlw	88	; case 88
 13698  010F78  B4D8               	btfsc	status,2,c
 13699  010F7A  D761               	goto	l1365
 13700  010F7C  0A3B               	xorlw	59	; case 99
 13701  010F7E  B4D8               	btfsc	status,2,c
 13702  010F80  D7C6               	goto	l1377
 13703  010F82  0A07               	xorlw	7	; case 100
 13704  010F84  B4D8               	btfsc	status,2,c
 13705  010F86  D010               	goto	l1362
 13706  010F88  0A02               	xorlw	2	; case 102
 13707  010F8A  B4D8               	btfsc	status,2,c
 13708  010F8C  D756               	goto	l1361
 13709  010F8E  0A0F               	xorlw	15	; case 105
 13710  010F90  B4D8               	btfsc	status,2,c
 13711  010F92  D00A               	goto	l1362
 13712  010F94  0A1A               	xorlw	26	; case 115
 13713  010F96  B4D8               	btfsc	status,2,c
 13714  010F98  D754               	goto	l1367
 13715  010F9A  0A06               	xorlw	6	; case 117
 13716  010F9C  B4D8               	btfsc	status,2,c
 13717  010F9E  D7CA               	goto	l1379
 13718  010FA0  0A0D               	xorlw	13	; case 120
 13719  010FA2  B4D8               	btfsc	status,2,c
 13720  010FA4  D74C               	goto	l1365
 13721  010FA6  D7BD               	goto	l1378
 13722  010FA8                     l1362:
 13723                           
 13724                           ; BSR set to: 1
 13725                           ;doprnt.c: 825: if(flag & (0x700)) {
 13726                           
 13727                           ; BSR set to: 1
 13728  010FA8  0E07               	movlw	7
 13729  010FAA  157D               	andwf	(printf@flag+1)& (0+255),w,b
 13730  010FAC  B4D8               	btfsc	status,2,c
 13731  010FAE  D2C1               	goto	l1380
 13732                           
 13733                           ; BSR set to: 1
 13734                           ;doprnt.c: 827: if(flag & 0x1000)
 13735  010FB0  A97D               	btfss	(printf@flag+1)& (0+255),4,b
 13736  010FB2  D004               	goto	l1381
 13737                           
 13738                           ; BSR set to: 1
 13739                           ;doprnt.c: 829: prec = 6;
 13740  010FB4  0E00               	movlw	0
 13741  010FB6  6F8C               	movwf	(printf@prec+1)& (0+255),b
 13742  010FB8  0E06               	movlw	6
 13743  010FBA  6F8B               	movwf	printf@prec& (0+255),b
 13744  010FBC                     l1381:
 13745                           
 13746                           ; BSR set to: 1
 13747                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13748                           
 13749                           ; BSR set to: 1
 13750  010FBC  C17A  FFD9         	movff	printf@ap,fsr2l
 13751  010FC0  C17B  FFDA         	movff	printf@ap+1,fsr2h
 13752  010FC4  CFDE F188          	movff	postinc2,printf@fval
 13753  010FC8  CFDE F189          	movff	postinc2,printf@fval+1
 13754  010FCC  CFDD F18A          	movff	postdec2,printf@fval+2
 13755                           
 13756                           ; BSR set to: 1
 13757  010FD0  0E03               	movlw	3
 13758  010FD2  277A               	addwf	printf@ap& (0+255),f,b
 13759  010FD4  0E00               	movlw	0
 13760  010FD6  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 13761                           
 13762                           ; BSR set to: 1
 13763                           ;doprnt.c: 831: if(fval < 0.0) {
 13764  010FD8  AF8A               	btfss	(printf@fval+2)& (0+255),7,b
 13765  010FDA  D011               	goto	l1382
 13766                           
 13767                           ; BSR set to: 1
 13768                           ;doprnt.c: 832: fval = -fval;
 13769  010FDC  C188  F123         	movff	printf@fval,___ftneg@f1
 13770  010FE0  C189  F124         	movff	printf@fval+1,___ftneg@f1+1
 13771  010FE4  C18A  F125         	movff	printf@fval+2,___ftneg@f1+2
 13772  010FE8  EC01  F0B6         	call	___ftneg	;wreg free
 13773  010FEC  C123  F188         	movff	?___ftneg,printf@fval
 13774  010FF0  C124  F189         	movff	?___ftneg+1,printf@fval+1
 13775  010FF4  C125  F18A         	movff	?___ftneg+2,printf@fval+2
 13776                           
 13777                           ;doprnt.c: 833: flag |= 0x03;
 13778  010FF8  0E03               	movlw	3
 13779  010FFA  0101               	movlb	1	; () banked
 13780  010FFC  137C               	iorwf	printf@flag& (0+255),f,b
 13781  010FFE                     l1382:
 13782                           
 13783                           ; BSR set to: 1
 13784                           ;doprnt.c: 834: }
 13785                           ;doprnt.c: 835: exp = 0;
 13786                           
 13787                           ; BSR set to: 1
 13788  010FFE  0E00               	movlw	0
 13789  011000  6F7F               	movwf	(printf@exp+1)& (0+255),b
 13790  011002  0E00               	movlw	0
 13791  011004  6F7E               	movwf	printf@exp& (0+255),b
 13792                           
 13793                           ; BSR set to: 1
 13794                           ;doprnt.c: 836: if( fval!=0) {
 13795  011006  5188               	movf	printf@fval& (0+255),w,b
 13796  011008  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 13797  01100A  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 13798  01100C  B4D8               	btfsc	status,2,c
 13799  01100E  D088               	goto	l1387
 13800                           
 13801                           ; BSR set to: 1
 13802                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13803  011010  0E82               	movlw	130
 13804  011012  6F6C               	movwf	??_printf& (0+255),b
 13805  011014  0EFF               	movlw	255
 13806  011016  6F6D               	movwf	(??_printf+1)& (0+255),b
 13807  011018  C188  F16E         	movff	printf@fval,??_printf+2
 13808  01101C  C189  F16F         	movff	printf@fval+1,??_printf+3
 13809  011020  C18A  F170         	movff	printf@fval+2,??_printf+4
 13810  011024  C18B  F171         	movff	printf@fval+3,??_printf+5
 13811  011028  0E10               	movlw	16
 13812  01102A  D005               	goto	u11460
 13813  01102C                     u11465:
 13814  01102C  90D8               	bcf	status,0,c
 13815  01102E  3371               	rrcf	(??_printf+5)& (0+255),f,b
 13816  011030  3370               	rrcf	(??_printf+4)& (0+255),f,b
 13817  011032  336F               	rrcf	(??_printf+3)& (0+255),f,b
 13818  011034  336E               	rrcf	(??_printf+2)& (0+255),f,b
 13819  011036                     u11460:
 13820  011036  2EE8               	decfsz	wreg,f,c
 13821  011038  D7F9               	goto	u11465
 13822  01103A  516E               	movf	(??_printf+2)& (0+255),w,b
 13823  01103C  256C               	addwf	??_printf& (0+255),w,b
 13824  01103E  6F7E               	movwf	printf@exp& (0+255),b
 13825  011040  0E00               	movlw	0
 13826  011042  216D               	addwfc	(??_printf+1)& (0+255),w,b
 13827  011044  6F7F               	movwf	(printf@exp+1)& (0+255),b
 13828                           
 13829                           ; BSR set to: 1
 13830                           ;doprnt.c: 838: exp--;
 13831  011046  077E               	decf	printf@exp& (0+255),f,b
 13832  011048  A0D8               	btfss	status,0,c
 13833  01104A  077F               	decf	(printf@exp+1)& (0+255),f,b
 13834                           
 13835                           ; BSR set to: 1
 13836                           ;doprnt.c: 839: exp *= 3;
 13837  01104C  C17E  F125         	movff	printf@exp,___wmul@multiplier
 13838  011050  C17F  F126         	movff	printf@exp+1,___wmul@multiplier+1
 13839  011054  0E00               	movlw	0
 13840  011056  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13841  011058  0E03               	movlw	3
 13842  01105A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13843  01105C  ECB2  F0B5         	call	___wmul	;wreg free
 13844  011060  C125  F17E         	movff	?___wmul,printf@exp
 13845  011064  C126  F17F         	movff	?___wmul+1,printf@exp+1
 13846                           
 13847                           ;doprnt.c: 840: exp /= 10;
 13848  011068  C17E  F11D         	movff	printf@exp,___awdiv@dividend
 13849  01106C  C17F  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 13850  011070  0E00               	movlw	0
 13851  011072  0101               	movlb	1	; () banked
 13852  011074  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 13853  011076  0E0A               	movlw	10
 13854  011078  6F1F               	movwf	___awdiv@divisor& (0+255),b
 13855  01107A  EC34  F0AE         	call	___awdiv	;wreg free
 13856  01107E  C11D  F17E         	movff	?___awdiv,printf@exp
 13857  011082  C11E  F17F         	movff	?___awdiv+1,printf@exp+1
 13858                           
 13859                           ;doprnt.c: 841: if(exp < 0)
 13860  011086  0101               	movlb	1	; () banked
 13861  011088  AF7F               	btfss	(printf@exp+1)& (0+255),7,b
 13862  01108A  D003               	goto	l1384
 13863                           
 13864                           ; BSR set to: 1
 13865                           ;doprnt.c: 842: exp--;
 13866  01108C  077E               	decf	printf@exp& (0+255),f,b
 13867  01108E  A0D8               	btfss	status,0,c
 13868  011090  077F               	decf	(printf@exp+1)& (0+255),f,b
 13869  011092                     l1384:
 13870                           
 13871                           ; BSR set to: 1
 13872                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 13873                           
 13874                           ; BSR set to: 1
 13875  011092  517E               	movf	printf@exp& (0+255),w,b
 13876  011094  0800               	sublw	0
 13877  011096  ECB1  F094         	call	_scale
 13878  01109A  C155  F180         	movff	?_scale,printf@tmpval
 13879  01109E  C156  F181         	movff	?_scale+1,printf@tmpval+1
 13880  0110A2  C157  F182         	movff	?_scale+2,printf@tmpval+2
 13881                           
 13882                           ;doprnt.c: 847: tmpval.integ *= fval;
 13883  0110A6  C180  F146         	movff	printf@tmpval,___ftmul@f1
 13884  0110AA  C181  F147         	movff	printf@tmpval+1,___ftmul@f1+1
 13885  0110AE  C182  F148         	movff	printf@tmpval+2,___ftmul@f1+2
 13886  0110B2  C188  F149         	movff	printf@fval,___ftmul@f2
 13887  0110B6  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 13888  0110BA  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 13889  0110BE  EC59  F0A7         	call	___ftmul	;wreg free
 13890  0110C2  C146  F180         	movff	?___ftmul,printf@tmpval
 13891  0110C6  C147  F181         	movff	?___ftmul+1,printf@tmpval+1
 13892  0110CA  C148  F182         	movff	?___ftmul+2,printf@tmpval+2
 13893                           
 13894                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 13895  0110CE  C180  F117         	movff	printf@tmpval,___ftge@ff1
 13896  0110D2  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 13897  0110D6  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 13898  0110DA  0E00               	movlw	0
 13899  0110DC  0101               	movlb	1	; () banked
 13900  0110DE  6F1A               	movwf	___ftge@ff2& (0+255),b
 13901  0110E0  0E80               	movlw	128
 13902  0110E2  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 13903  0110E4  0E3F               	movlw	63
 13904  0110E6  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 13905  0110E8  EC15  F0AD         	call	___ftge	;wreg free
 13906  0110EC  0101               	movlb	1	; () banked
 13907  0110EE  B0D8               	btfsc	status,0,c
 13908  0110F0  D004               	goto	l1385
 13909                           
 13910                           ; BSR set to: 1
 13911                           ;doprnt.c: 849: exp--;
 13912  0110F2  077E               	decf	printf@exp& (0+255),f,b
 13913  0110F4  A0D8               	btfss	status,0,c
 13914  0110F6  077F               	decf	(printf@exp+1)& (0+255),f,b
 13915  0110F8  D013               	goto	l1387
 13916  0110FA                     l1385:
 13917                           
 13918                           ; BSR set to: 1
 13919                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 13920                           
 13921                           ; BSR set to: 1
 13922  0110FA  C180  F117         	movff	printf@tmpval,___ftge@ff1
 13923  0110FE  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 13924  011102  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 13925  011106  0E00               	movlw	0
 13926  011108  6F1A               	movwf	___ftge@ff2& (0+255),b
 13927  01110A  0E20               	movlw	32
 13928  01110C  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 13929  01110E  0E41               	movlw	65
 13930  011110  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 13931  011112  EC15  F0AD         	call	___ftge	;wreg free
 13932  011116  0101               	movlb	1	; () banked
 13933  011118  A0D8               	btfss	status,0,c
 13934  01111A  D002               	goto	l1387
 13935                           
 13936                           ; BSR set to: 1
 13937                           ;doprnt.c: 851: exp++;
 13938  01111C  4B7E               	infsnz	printf@exp& (0+255),f,b
 13939  01111E  2B7F               	incf	(printf@exp+1)& (0+255),f,b
 13940  011120                     l1387:
 13941                           
 13942                           ; BSR set to: 1
 13943                           ;doprnt.c: 852: }
 13944                           ;doprnt.c: 1112: if(prec <= 12)
 13945                           
 13946                           ; BSR set to: 1
 13947                           
 13948                           ; BSR set to: 1
 13949                           
 13950                           ; BSR set to: 1
 13951  011120  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 13952  011122  D006               	goto	u11500
 13953  011124  518C               	movf	(printf@prec+1)& (0+255),w,b
 13954  011126  E11B               	bnz	l10183
 13955  011128  0E0D               	movlw	13
 13956  01112A  5D8B               	subwf	printf@prec& (0+255),w,b
 13957  01112C  B0D8               	btfsc	status,0,c
 13958  01112E  D017               	goto	l1388
 13959  011130                     u11500:
 13960                           
 13961                           ; BSR set to: 1
 13962                           ;doprnt.c: 1113: fval += fround(prec);
 13963  011130  C188  F12B         	movff	printf@fval,___ftadd@f1
 13964  011134  C189  F12C         	movff	printf@fval+1,___ftadd@f1+1
 13965  011138  C18A  F12D         	movff	printf@fval+2,___ftadd@f1+2
 13966  01113C  518B               	movf	printf@prec& (0+255),w,b
 13967  01113E  ECCD  F09A         	call	_fround
 13968  011142  C155  F12E         	movff	?_fround,___ftadd@f2
 13969  011146  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
 13970  01114A  C157  F130         	movff	?_fround+2,___ftadd@f2+2
 13971  01114E  EC7B  F0A1         	call	___ftadd	;wreg free
 13972  011152  C12B  F188         	movff	?___ftadd,printf@fval
 13973  011156  C12C  F189         	movff	?___ftadd+1,printf@fval+1
 13974  01115A  C12D  F18A         	movff	?___ftadd+2,printf@fval+2
 13975  01115E                     l1388:
 13976  01115E                     l10183:
 13977                           
 13978                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 13979  01115E  0101               	movlb	1	; () banked
 13980  011160  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 13981  011162  D006               	goto	u11510
 13982  011164  517F               	movf	(printf@exp+1)& (0+255),w,b
 13983  011166  E11F               	bnz	l10191
 13984  011168  0E0A               	movlw	10
 13985  01116A  5D7E               	subwf	printf@exp& (0+255),w,b
 13986  01116C  B0D8               	btfsc	status,0,c
 13987  01116E  D01B               	goto	u11540
 13988  011170                     u11510:
 13989                           
 13990                           ; BSR set to: 1
 13991  011170  5188               	movf	printf@fval& (0+255),w,b
 13992  011172  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 13993  011174  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 13994  011176  B4D8               	btfsc	status,2,c
 13995  011178  D054               	goto	l1389
 13996                           
 13997                           ; BSR set to: 1
 13998  01117A  C188  F155         	movff	printf@fval,___fttol@f1
 13999  01117E  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 14000  011182  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 14001  011186  ECDD  F0A6         	call	___fttol	;wreg free
 14002  01118A  0101               	movlb	1	; () banked
 14003  01118C  5155               	movf	?___fttol& (0+255),w,b
 14004  01118E  1156               	iorwf	(?___fttol+1)& (0+255),w,b
 14005  011190  1157               	iorwf	(?___fttol+2)& (0+255),w,b
 14006  011192  1158               	iorwf	(?___fttol+3)& (0+255),w,b
 14007  011194  B4D8               	btfsc	status,2,c
 14008                           
 14009                           ; BSR set to: 1
 14010  011196  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 14011  011198  D044               	goto	l1389
 14012  01119A  517F               	movf	(printf@exp+1)& (0+255),w,b
 14013  01119C  E104               	bnz	l10191
 14014  01119E  0E02               	movlw	2
 14015  0111A0  5D7E               	subwf	printf@exp& (0+255),w,b
 14016  0111A2  A0D8               	btfss	status,0,c
 14017  0111A4  D03E               	goto	l1389
 14018  0111A6                     u11540:
 14019  0111A6                     l10191:
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14023  0111A6  C180  F117         	movff	printf@tmpval,___ftge@ff1
 14024  0111AA  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 14025  0111AE  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 14026  0111B2  0E70               	movlw	112
 14027  0111B4  6F1A               	movwf	___ftge@ff2& (0+255),b
 14028  0111B6  0E89               	movlw	137
 14029  0111B8  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14030  0111BA  0E40               	movlw	64
 14031  0111BC  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14032  0111BE  EC15  F0AD         	call	___ftge	;wreg free
 14033  0111C2  0101               	movlb	1	; () banked
 14034  0111C4  B0D8               	btfsc	status,0,c
 14035  0111C6  D002               	goto	l1392
 14036                           
 14037                           ; BSR set to: 1
 14038                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14039  0111C8  0EF7               	movlw	247
 14040  0111CA  D001               	goto	L1
 14041  0111CC                     l1392:
 14042                           
 14043                           ; BSR set to: 1
 14044                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14045                           
 14046                           ; BSR set to: 1
 14047  0111CC  0EF8               	movlw	248
 14048  0111CE                     L1:
 14049  0111CE  277E               	addwf	printf@exp& (0+255),f,b
 14050  0111D0  0EFF               	movlw	255
 14051  0111D2  237F               	addwfc	(printf@exp+1)& (0+255),f,b
 14052                           
 14053                           ; BSR set to: 1
 14054                           ;doprnt.c: 1124: }
 14055                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 14056                           
 14057                           ; BSR set to: 1
 14058  0111D4  517E               	movf	printf@exp& (0+255),w,b
 14059  0111D6  ECB1  F094         	call	_scale
 14060  0111DA  C155  F180         	movff	?_scale,printf@tmpval
 14061  0111DE  C156  F181         	movff	?_scale+1,printf@tmpval+1
 14062  0111E2  C157  F182         	movff	?_scale+2,printf@tmpval+2
 14063                           
 14064                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14065  0111E6  C188  F117         	movff	printf@fval,__tdiv_to_l_@f1
 14066  0111EA  C189  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 14067  0111EE  C18A  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 14068  0111F2  C180  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 14069  0111F6  C181  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 14070  0111FA  C182  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 14071  0111FE  ECF3  F0A3         	call	__tdiv_to_l_	;wreg free
 14072  011202  C117  F184         	movff	?__tdiv_to_l_,printf@val
 14073  011206  C118  F185         	movff	?__tdiv_to_l_+1,printf@val+1
 14074  01120A  C119  F186         	movff	?__tdiv_to_l_+2,printf@val+2
 14075  01120E  C11A  F187         	movff	?__tdiv_to_l_+3,printf@val+3
 14076                           
 14077                           ;doprnt.c: 1129: fval = 0.0;
 14078  011212  0E00               	movlw	0
 14079  011214  0101               	movlb	1	; () banked
 14080  011216  6F88               	movwf	printf@fval& (0+255),b
 14081  011218  0E00               	movlw	0
 14082  01121A  6F89               	movwf	(printf@fval+1)& (0+255),b
 14083  01121C  0E00               	movlw	0
 14084  01121E  6F8A               	movwf	(printf@fval+2)& (0+255),b
 14085                           
 14086                           ;doprnt.c: 1130: } else {
 14087  011220  D033               	goto	l1398
 14088  011222                     l1389:
 14089                           
 14090                           ; BSR set to: 1
 14091                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14092                           
 14093                           ; BSR set to: 1
 14094  011222  C188  F155         	movff	printf@fval,___fttol@f1
 14095  011226  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 14096  01122A  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 14097  01122E  ECDD  F0A6         	call	___fttol	;wreg free
 14098  011232  C155  F184         	movff	?___fttol,printf@val
 14099  011236  C156  F185         	movff	?___fttol+1,printf@val+1
 14100  01123A  C157  F186         	movff	?___fttol+2,printf@val+2
 14101  01123E  C158  F187         	movff	?___fttol+3,printf@val+3
 14102                           
 14103                           ;doprnt.c: 1132: fval -= (double)val;
 14104  011242  C188  F137         	movff	printf@fval,___ftsub@f1
 14105  011246  C189  F138         	movff	printf@fval+1,___ftsub@f1+1
 14106  01124A  C18A  F139         	movff	printf@fval+2,___ftsub@f1+2
 14107  01124E  C184  F11F         	movff	printf@val,___lltoft@c
 14108  011252  C185  F120         	movff	printf@val+1,___lltoft@c+1
 14109  011256  C186  F121         	movff	printf@val+2,___lltoft@c+2
 14110  01125A  C187  F122         	movff	printf@val+3,___lltoft@c+3
 14111  01125E  EC07  F0B2         	call	___lltoft	;wreg free
 14112  011262  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 14113  011266  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 14114  01126A  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 14115  01126E  EC30  F0B4         	call	___ftsub	;wreg free
 14116  011272  C137  F188         	movff	?___ftsub,printf@fval
 14117  011276  C138  F189         	movff	?___ftsub+1,printf@fval+1
 14118  01127A  C139  F18A         	movff	?___ftsub+2,printf@fval+2
 14119                           
 14120                           ;doprnt.c: 1133: exp = 0;
 14121  01127E  0E00               	movlw	0
 14122  011280  0101               	movlb	1	; () banked
 14123  011282  6F7F               	movwf	(printf@exp+1)& (0+255),b
 14124  011284  0E00               	movlw	0
 14125  011286  6F7E               	movwf	printf@exp& (0+255),b
 14126  011288                     l1398:
 14127                           
 14128                           ; BSR set to: 1
 14129                           ;doprnt.c: 1134: }
 14130                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14131                           
 14132                           ; BSR set to: 1
 14133  011288  0E01               	movlw	1
 14134  01128A  6F8D               	movwf	printf@c& (0+255),b
 14135  01128C                     l10211:
 14136                           
 14137                           ; BSR set to: 1
 14138  01128C  0E0A               	movlw	10
 14139  01128E  198D               	xorwf	printf@c& (0+255),w,b
 14140  011290  B4D8               	btfsc	status,2,c
 14141  011292  D01B               	goto	u11580
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;doprnt.c: 1137: if(val < dpowers[c])
 14145                           
 14146                           ; BSR set to: 1
 14147                           
 14148                           ; BSR set to: 1
 14149  011294  518D               	movf	printf@c& (0+255),w,b
 14150  011296  0D04               	mullw	4
 14151  011298  0EE3               	movlw	low _dpowers
 14152  01129A  24F3               	addwf	prodl,w,c
 14153  01129C  6EF6               	movwf	tblptrl,c
 14154  01129E  0EEB               	movlw	high _dpowers
 14155  0112A0  20F4               	addwfc	prodh,w,c
 14156  0112A2  6EF7               	movwf	tblptrh,c
 14157  0112A4                     	if	1	;There are 3 active tblptr bytes
 14158  0112A4  6AF8               	clrf	tblptru,c
 14159  0112A6  0E00               	movlw	low (__mediumconst shr (0+16))
 14160  0112A8  22F8               	addwfc	tblptru,f,c
 14161  0112AA                     	endif
 14162  0112AA  0009               	tblrd		*+
 14163  0112AC  50F5               	movf	tablat,w,c
 14164  0112AE  5D84               	subwf	printf@val& (0+255),w,b
 14165  0112B0  0009               	tblrd		*+
 14166  0112B2  50F5               	movf	tablat,w,c
 14167  0112B4  5985               	subwfb	(printf@val+1)& (0+255),w,b
 14168  0112B6  0009               	tblrd		*+
 14169  0112B8  50F5               	movf	tablat,w,c
 14170  0112BA  5986               	subwfb	(printf@val+2)& (0+255),w,b
 14171  0112BC  0009               	tblrd		*+
 14172  0112BE  50F5               	movf	tablat,w,c
 14173  0112C0  5987               	subwfb	(printf@val+3)& (0+255),w,b
 14174  0112C2  A0D8               	btfss	status,0,c
 14175  0112C4  D002               	goto	u11580
 14176                           
 14177                           ; BSR set to: 1
 14178                           
 14179                           ; BSR set to: 1
 14180                           
 14181                           ; BSR set to: 1
 14182                           ;doprnt.c: 1138: break;
 14183  0112C6  2B8D               	incf	printf@c& (0+255),f,b
 14184  0112C8  D7E1               	goto	l10211
 14185  0112CA                     u11580:
 14186                           
 14187                           ; BSR set to: 1
 14188                           ;doprnt.c: 1175: {
 14189                           ;doprnt.c: 1188: if(flag & 0x03)
 14190                           
 14191                           ; BSR set to: 1
 14192  0112CA  0E03               	movlw	3
 14193  0112CC  157C               	andwf	printf@flag& (0+255),w,b
 14194  0112CE  6F6C               	movwf	??_printf& (0+255),b
 14195  0112D0  0E00               	movlw	0
 14196  0112D2  157D               	andwf	(printf@flag+1)& (0+255),w,b
 14197  0112D4  6F6D               	movwf	(??_printf+1)& (0+255),b
 14198  0112D6  516C               	movf	??_printf& (0+255),w,b
 14199  0112D8  116D               	iorwf	(??_printf+1)& (0+255),w,b
 14200  0112DA  B4D8               	btfsc	status,2,c
 14201  0112DC  D04E               	goto	l1403
 14202                           
 14203                           ; BSR set to: 1
 14204                           ;doprnt.c: 1190: (putch('-') );
 14205  0112DE  0E2D               	movlw	45
 14206  0112E0  EC15  F0B7         	call	_putch
 14207                           
 14208                           ;doprnt.c: 1195: }
 14209                           ;doprnt.c: 1196: while(c--) {
 14210  0112E4  D04A               	goto	l1403
 14211  0112E6                     
 14212                           ;doprnt.c: 1200: {
 14213                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14214  0112E6  C184  F117         	movff	printf@val,___lldiv@dividend
 14215  0112EA  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 14216  0112EE  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 14217  0112F2  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14218  0112F6  0101               	movlb	1	; () banked
 14219  0112F8  518D               	movf	printf@c& (0+255),w,b
 14220  0112FA  0D04               	mullw	4
 14221  0112FC  0EE3               	movlw	low _dpowers
 14222  0112FE  24F3               	addwf	prodl,w,c
 14223  011300  6EF6               	movwf	tblptrl,c
 14224  011302  0EEB               	movlw	high _dpowers
 14225  011304  20F4               	addwfc	prodh,w,c
 14226  011306  6EF7               	movwf	tblptrh,c
 14227  011308                     	if	1	;There are 3 active tblptr bytes
 14228  011308  6AF8               	clrf	tblptru,c
 14229  01130A  0E00               	movlw	low (__mediumconst shr (0+16))
 14230  01130C  22F8               	addwfc	tblptru,f,c
 14231  01130E                     	endif
 14232  01130E  0009               	tblrd		*+
 14233  011310  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14234  011314  0009               	tblrd		*+
 14235  011316  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14236  01131A  0009               	tblrd		*+
 14237  01131C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14238  011320  000A               	tblrd		*-
 14239  011322  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14240  011326  EC77  F0AE         	call	___lldiv	;wreg free
 14241  01132A  C117  F180         	movff	?___lldiv,printf@tmpval
 14242  01132E  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 14243  011332  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 14244  011336  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 14245                           
 14246                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14247  01133A  C180  F124         	movff	printf@tmpval,___llmod@dividend
 14248  01133E  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14249  011342  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14250  011346  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14251  01134A  0E0A               	movlw	10
 14252  01134C  0101               	movlb	1	; () banked
 14253  01134E  6F28               	movwf	___llmod@divisor& (0+255),b
 14254  011350  0E00               	movlw	0
 14255  011352  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14256  011354  0E00               	movlw	0
 14257  011356  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14258  011358  0E00               	movlw	0
 14259  01135A  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14260  01135C  EC0E  F0B1         	call	___llmod	;wreg free
 14261  011360  C124  F180         	movff	?___llmod,printf@tmpval
 14262  011364  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 14263  011368  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 14264  01136C  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 14265                           
 14266                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14267  011370  0101               	movlb	1	; () banked
 14268  011372  5180               	movf	printf@tmpval& (0+255),w,b
 14269  011374  0F30               	addlw	48
 14270  011376  EC15  F0B7         	call	_putch
 14271  01137A                     l1403:
 14272  01137A  0101               	movlb	1	; () banked
 14273  01137C  078D               	decf	printf@c& (0+255),f,b
 14274  01137E  298D               	incf	printf@c& (0+255),w,b
 14275  011380  B4D8               	btfsc	status,2,c
 14276  011382  D008               	goto	l1406
 14277  011384  D7B0               	goto	l1404
 14278  011386                     l10235:
 14279                           
 14280                           ; BSR set to: 1
 14281                           ;doprnt.c: 1208: (putch('0') );
 14282  011386  0E30               	movlw	48
 14283  011388  EC15  F0B7         	call	_putch
 14284                           
 14285                           ;doprnt.c: 1209: exp--;
 14286  01138C  0101               	movlb	1	; () banked
 14287  01138E  077E               	decf	printf@exp& (0+255),f,b
 14288  011390  A0D8               	btfss	status,0,c
 14289  011392  077F               	decf	(printf@exp+1)& (0+255),f,b
 14290  011394                     l1406:
 14291                           
 14292                           ; BSR set to: 1
 14293                           
 14294                           ; BSR set to: 1
 14295  011394  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 14296  011396  D005               	goto	u11610
 14297  011398  517F               	movf	(printf@exp+1)& (0+255),w,b
 14298  01139A  E1F5               	bnz	l10235
 14299  01139C  057E               	decf	printf@exp& (0+255),w,b
 14300  01139E  B0D8               	btfsc	status,0,c
 14301  0113A0  D7F2               	goto	l1407
 14302  0113A2                     u11610:
 14303                           
 14304                           ; BSR set to: 1
 14305                           ;doprnt.c: 1210: }
 14306                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14307                           
 14308                           ; BSR set to: 1
 14309  0113A2  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 14310  0113A4  D009               	goto	l1409
 14311  0113A6  518C               	movf	(printf@prec+1)& (0+255),w,b
 14312  0113A8  E104               	bnz	u11620
 14313  0113AA  0E09               	movlw	9
 14314  0113AC  5D8B               	subwf	printf@prec& (0+255),w,b
 14315  0113AE  A0D8               	btfss	status,0,c
 14316  0113B0  D003               	goto	l1409
 14317  0113B2                     u11620:
 14318                           
 14319                           ; BSR set to: 1
 14320                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14321  0113B2  0E08               	movlw	8
 14322  0113B4  6F8D               	movwf	printf@c& (0+255),b
 14323  0113B6  D002               	goto	l1410
 14324  0113B8                     l1409:
 14325                           
 14326                           ; BSR set to: 1
 14327                           ;doprnt.c: 1213: else
 14328                           ;doprnt.c: 1214: c = prec;
 14329  0113B8  C18B  F18D         	movff	printf@prec,printf@c
 14330  0113BC                     l1410:
 14331                           
 14332                           ; BSR set to: 1
 14333                           ;doprnt.c: 1215: prec -= c;
 14334                           
 14335                           ; BSR set to: 1
 14336  0113BC  518D               	movf	printf@c& (0+255),w,b
 14337  0113BE  5F8B               	subwf	printf@prec& (0+255),f,b
 14338  0113C0  0E00               	movlw	0
 14339  0113C2  BF8D               	btfsc	printf@c& (0+255),7,b
 14340  0113C4  0EFF               	movlw	255
 14341  0113C6  5B8C               	subwfb	(printf@prec+1)& (0+255),f,b
 14342                           
 14343                           ; BSR set to: 1
 14344                           ;doprnt.c: 1219: if(c)
 14345  0113C8  518D               	movf	printf@c& (0+255),w,b
 14346  0113CA  B4D8               	btfsc	status,2,c
 14347  0113CC  D003               	goto	l1411
 14348                           
 14349                           ; BSR set to: 1
 14350                           ;doprnt.c: 1221: (putch('.') );
 14351  0113CE  0E2E               	movlw	46
 14352  0113D0  EC15  F0B7         	call	_putch
 14353  0113D4                     l1411:
 14354                           
 14355                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14356  0113D4  0101               	movlb	1	; () banked
 14357  0113D6  518D               	movf	printf@c& (0+255),w,b
 14358  0113D8  ECB1  F094         	call	_scale
 14359  0113DC  C155  F172         	movff	?_scale,_printf$3819
 14360  0113E0  C156  F173         	movff	?_scale+1,_printf$3819+1
 14361  0113E4  C157  F174         	movff	?_scale+2,_printf$3819+2
 14362                           
 14363                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14364  0113E8  C188  F149         	movff	printf@fval,___ftmul@f2
 14365  0113EC  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 14366  0113F0  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 14367  0113F4  C172  F146         	movff	_printf$3819,___ftmul@f1
 14368  0113F8  C173  F147         	movff	_printf$3819+1,___ftmul@f1+1
 14369  0113FC  C174  F148         	movff	_printf$3819+2,___ftmul@f1+2
 14370  011400  EC59  F0A7         	call	___ftmul	;wreg free
 14371  011404  C146  F155         	movff	?___ftmul,___fttol@f1
 14372  011408  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 14373  01140C  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 14374  011410  ECDD  F0A6         	call	___fttol	;wreg free
 14375  011414  C155  F184         	movff	?___fttol,printf@val
 14376  011418  C156  F185         	movff	?___fttol+1,printf@val+1
 14377  01141C  C157  F186         	movff	?___fttol+2,printf@val+2
 14378  011420  C158  F187         	movff	?___fttol+3,printf@val+3
 14379                           
 14380                           ;doprnt.c: 1228: while(c--) {
 14381  011424  D074               	goto	l1412
 14382  011426                     
 14383                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14384  011426  C184  F117         	movff	printf@val,___lldiv@dividend
 14385  01142A  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 14386  01142E  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 14387  011432  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14388  011436  0101               	movlb	1	; () banked
 14389  011438  518D               	movf	printf@c& (0+255),w,b
 14390  01143A  0D04               	mullw	4
 14391  01143C  0EE3               	movlw	low _dpowers
 14392  01143E  24F3               	addwf	prodl,w,c
 14393  011440  6EF6               	movwf	tblptrl,c
 14394  011442  0EEB               	movlw	high _dpowers
 14395  011444  20F4               	addwfc	prodh,w,c
 14396  011446  6EF7               	movwf	tblptrh,c
 14397  011448                     	if	1	;There are 3 active tblptr bytes
 14398  011448  6AF8               	clrf	tblptru,c
 14399  01144A  0E00               	movlw	low (__mediumconst shr (0+16))
 14400  01144C  22F8               	addwfc	tblptru,f,c
 14401  01144E                     	endif
 14402  01144E  0009               	tblrd		*+
 14403  011450  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14404  011454  0009               	tblrd		*+
 14405  011456  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14406  01145A  0009               	tblrd		*+
 14407  01145C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14408  011460  000A               	tblrd		*-
 14409  011462  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14410  011466  EC77  F0AE         	call	___lldiv	;wreg free
 14411  01146A  C117  F180         	movff	?___lldiv,printf@tmpval
 14412  01146E  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 14413  011472  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 14414  011476  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 14415                           
 14416                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14417  01147A  C180  F124         	movff	printf@tmpval,___llmod@dividend
 14418  01147E  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14419  011482  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14420  011486  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14421  01148A  0E0A               	movlw	10
 14422  01148C  0101               	movlb	1	; () banked
 14423  01148E  6F28               	movwf	___llmod@divisor& (0+255),b
 14424  011490  0E00               	movlw	0
 14425  011492  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14426  011494  0E00               	movlw	0
 14427  011496  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14428  011498  0E00               	movlw	0
 14429  01149A  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14430  01149C  EC0E  F0B1         	call	___llmod	;wreg free
 14431  0114A0  C124  F180         	movff	?___llmod,printf@tmpval
 14432  0114A4  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 14433  0114A8  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 14434  0114AC  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 14435                           
 14436                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 14437  0114B0  0101               	movlb	1	; () banked
 14438  0114B2  5180               	movf	printf@tmpval& (0+255),w,b
 14439  0114B4  0F30               	addlw	48
 14440  0114B6  EC15  F0B7         	call	_putch
 14441                           
 14442                           ;doprnt.c: 1232: val %= dpowers[c];
 14443  0114BA  C184  F124         	movff	printf@val,___llmod@dividend
 14444  0114BE  C185  F125         	movff	printf@val+1,___llmod@dividend+1
 14445  0114C2  C186  F126         	movff	printf@val+2,___llmod@dividend+2
 14446  0114C6  C187  F127         	movff	printf@val+3,___llmod@dividend+3
 14447  0114CA  0101               	movlb	1	; () banked
 14448  0114CC  518D               	movf	printf@c& (0+255),w,b
 14449  0114CE  0D04               	mullw	4
 14450  0114D0  0EE3               	movlw	low _dpowers
 14451  0114D2  24F3               	addwf	prodl,w,c
 14452  0114D4  6EF6               	movwf	tblptrl,c
 14453  0114D6  0EEB               	movlw	high _dpowers
 14454  0114D8  20F4               	addwfc	prodh,w,c
 14455  0114DA  6EF7               	movwf	tblptrh,c
 14456  0114DC                     	if	1	;There are 3 active tblptr bytes
 14457  0114DC  6AF8               	clrf	tblptru,c
 14458  0114DE  0E00               	movlw	low (__mediumconst shr (0+16))
 14459  0114E0  22F8               	addwfc	tblptru,f,c
 14460  0114E2                     	endif
 14461  0114E2  0009               	tblrd		*+
 14462  0114E4  CFF5 F128          	movff	tablat,___llmod@divisor
 14463  0114E8  0009               	tblrd		*+
 14464  0114EA  CFF5 F129          	movff	tablat,___llmod@divisor+1
 14465  0114EE  0009               	tblrd		*+
 14466  0114F0  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 14467  0114F4  000A               	tblrd		*-
 14468  0114F6  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 14469  0114FA  EC0E  F0B1         	call	___llmod	;wreg free
 14470  0114FE  C124  F184         	movff	?___llmod,printf@val
 14471  011502  C125  F185         	movff	?___llmod+1,printf@val+1
 14472  011506  C126  F186         	movff	?___llmod+2,printf@val+2
 14473  01150A  C127  F187         	movff	?___llmod+3,printf@val+3
 14474  01150E                     l1412:
 14475  01150E  0101               	movlb	1	; () banked
 14476  011510  078D               	decf	printf@c& (0+255),f,b
 14477  011512  298D               	incf	printf@c& (0+255),w,b
 14478  011514  B4D8               	btfsc	status,2,c
 14479  011516  D008               	goto	l1415
 14480  011518  D786               	goto	l1413
 14481  01151A                     
 14482                           ; BSR set to: 1
 14483                           ;doprnt.c: 1236: (putch('0') );
 14484                           
 14485                           ; BSR set to: 1
 14486  01151A  0E30               	movlw	48
 14487  01151C  EC15  F0B7         	call	_putch
 14488                           
 14489                           ;doprnt.c: 1237: prec--;
 14490  011520  0101               	movlb	1	; () banked
 14491  011522  078B               	decf	printf@prec& (0+255),f,b
 14492  011524  A0D8               	btfss	status,0,c
 14493  011526  078C               	decf	(printf@prec+1)& (0+255),f,b
 14494  011528                     l1415:
 14495                           
 14496                           ; BSR set to: 1
 14497                           
 14498                           ; BSR set to: 1
 14499  011528  518B               	movf	printf@prec& (0+255),w,b
 14500  01152A  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 14501  01152C  B4D8               	btfsc	status,2,c
 14502  01152E  D157               	goto	u11790
 14503  011530  D7F4               	goto	l1416
 14504  011532                     l1380:
 14505                           
 14506                           ; BSR set to: 1
 14507                           ;doprnt.c: 1246: }
 14508                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 14509                           
 14510                           ; BSR set to: 1
 14511  011532  0EC0               	movlw	192
 14512  011534  157C               	andwf	printf@flag& (0+255),w,b
 14513  011536  6F6C               	movwf	??_printf& (0+255),b
 14514  011538  0E00               	movlw	0
 14515  01153A  157D               	andwf	(printf@flag+1)& (0+255),w,b
 14516  01153C  6F6D               	movwf	(??_printf+1)& (0+255),b
 14517  01153E  516C               	movf	??_printf& (0+255),w,b
 14518  011540  116D               	iorwf	(??_printf+1)& (0+255),w,b
 14519  011542  A4D8               	btfss	status,2,c
 14520  011544  D01E               	goto	l1418
 14521                           
 14522                           ; BSR set to: 1
 14523                           ;doprnt.c: 1253: {
 14524                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14525  011546  C17A  FFD9         	movff	printf@ap,fsr2l
 14526  01154A  C17B  FFDA         	movff	printf@ap+1,fsr2h
 14527  01154E  CFDE F184          	movff	postinc2,printf@val
 14528  011552  CFDD F185          	movff	postdec2,printf@val+1
 14529  011556  0E00               	movlw	0
 14530  011558  BF85               	btfsc	(printf@val+1)& (0+255),7,b
 14531  01155A  0EFF               	movlw	-1
 14532  01155C  6F86               	movwf	(printf@val+2)& (0+255),b
 14533  01155E  6F87               	movwf	(printf@val+3)& (0+255),b
 14534                           
 14535                           ; BSR set to: 1
 14536  011560  0E02               	movlw	2
 14537  011562  277A               	addwf	printf@ap& (0+255),f,b
 14538  011564  0E00               	movlw	0
 14539  011566  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 14540                           
 14541                           ; BSR set to: 1
 14542                           ;doprnt.c: 1261: if((long)val < 0) {
 14543  011568  AF87               	btfss	(printf@val+3)& (0+255),7,b
 14544  01156A  D01D               	goto	l1420
 14545                           
 14546                           ; BSR set to: 1
 14547                           ;doprnt.c: 1262: flag |= 0x03;
 14548  01156C  0E03               	movlw	3
 14549  01156E  137C               	iorwf	printf@flag& (0+255),f,b
 14550                           
 14551                           ; BSR set to: 1
 14552                           ;doprnt.c: 1263: val = -val;
 14553  011570  1F87               	comf	(printf@val+3)& (0+255),f,b
 14554  011572  1F86               	comf	(printf@val+2)& (0+255),f,b
 14555  011574  1F85               	comf	(printf@val+1)& (0+255),f,b
 14556  011576  6D84               	negf	printf@val& (0+255),b
 14557  011578  0E00               	movlw	0
 14558  01157A  2385               	addwfc	(printf@val+1)& (0+255),f,b
 14559  01157C  2386               	addwfc	(printf@val+2)& (0+255),f,b
 14560  01157E  2387               	addwfc	(printf@val+3)& (0+255),f,b
 14561                           
 14562                           ; BSR set to: 1
 14563                           ;doprnt.c: 1264: }
 14564                           ;doprnt.c: 1266: }
 14565  011580  D012               	goto	l1420
 14566  011582                     l1418:
 14567                           
 14568                           ; BSR set to: 1
 14569                           ;doprnt.c: 1268: else
 14570                           ;doprnt.c: 1273: {
 14571                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 14572                           
 14573                           ; BSR set to: 1
 14574  011582  C17A  FFD9         	movff	printf@ap,fsr2l
 14575  011586  C17B  FFDA         	movff	printf@ap+1,fsr2h
 14576  01158A  CFDE F16C          	movff	postinc2,??_printf
 14577  01158E  CFDD F16D          	movff	postdec2,??_printf+1
 14578  011592  C16C  F184         	movff	??_printf,printf@val
 14579  011596  C16D  F185         	movff	??_printf+1,printf@val+1
 14580  01159A  6B86               	clrf	(printf@val+2)& (0+255),b
 14581  01159C  6B87               	clrf	(printf@val+3)& (0+255),b
 14582                           
 14583                           ; BSR set to: 1
 14584  01159E  0E02               	movlw	2
 14585  0115A0  277A               	addwf	printf@ap& (0+255),f,b
 14586  0115A2  0E00               	movlw	0
 14587  0115A4  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 14588  0115A6                     l1420:
 14589                           
 14590                           ; BSR set to: 1
 14591                           ;doprnt.c: 1287: }
 14592                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14593                           
 14594                           ; BSR set to: 1
 14595  0115A6  518B               	movf	printf@prec& (0+255),w,b
 14596  0115A8  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 14597  0115AA  A4D8               	btfss	status,2,c
 14598  0115AC  D04B               	goto	l1422
 14599                           
 14600                           ; BSR set to: 1
 14601  0115AE  5184               	movf	printf@val& (0+255),w,b
 14602  0115B0  1185               	iorwf	(printf@val+1)& (0+255),w,b
 14603  0115B2  1186               	iorwf	(printf@val+2)& (0+255),w,b
 14604  0115B4  1187               	iorwf	(printf@val+3)& (0+255),w,b
 14605  0115B6  A4D8               	btfss	status,2,c
 14606  0115B8  D045               	goto	l1422
 14607                           
 14608                           ; BSR set to: 1
 14609                           ;doprnt.c: 1291: prec++;
 14610  0115BA  4B8B               	infsnz	printf@prec& (0+255),f,b
 14611  0115BC  2B8C               	incf	(printf@prec+1)& (0+255),f,b
 14612                           
 14613                           ; BSR set to: 1
 14614                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 14615  0115BE  D042               	goto	l1422
 14616  0115C0                     
 14617                           ; BSR set to: 1
 14618                           ;doprnt.c: 1302: case 0xC0:
 14619                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14620                           
 14621                           ; BSR set to: 1
 14622                           
 14623                           ; BSR set to: 1
 14624  0115C0  0E01               	movlw	1
 14625  0115C2  6F8D               	movwf	printf@c& (0+255),b
 14626  0115C4                     l10295:
 14627                           
 14628                           ; BSR set to: 1
 14629  0115C4  0E0A               	movlw	10
 14630  0115C6  198D               	xorwf	printf@c& (0+255),w,b
 14631  0115C8  B4D8               	btfsc	status,2,c
 14632  0115CA  D047               	goto	l1428
 14633                           
 14634                           ; BSR set to: 1
 14635                           ;doprnt.c: 1306: if(val < dpowers[c])
 14636                           
 14637                           ; BSR set to: 1
 14638                           
 14639                           ; BSR set to: 1
 14640  0115CC  518D               	movf	printf@c& (0+255),w,b
 14641  0115CE  0D04               	mullw	4
 14642  0115D0  0EE3               	movlw	low _dpowers
 14643  0115D2  24F3               	addwf	prodl,w,c
 14644  0115D4  6EF6               	movwf	tblptrl,c
 14645  0115D6  0EEB               	movlw	high _dpowers
 14646  0115D8  20F4               	addwfc	prodh,w,c
 14647  0115DA  6EF7               	movwf	tblptrh,c
 14648  0115DC                     	if	1	;There are 3 active tblptr bytes
 14649  0115DC  6AF8               	clrf	tblptru,c
 14650  0115DE  0E00               	movlw	low (__mediumconst shr (0+16))
 14651  0115E0  22F8               	addwfc	tblptru,f,c
 14652  0115E2                     	endif
 14653  0115E2  0009               	tblrd		*+
 14654  0115E4  50F5               	movf	tablat,w,c
 14655  0115E6  5D84               	subwf	printf@val& (0+255),w,b
 14656  0115E8  0009               	tblrd		*+
 14657  0115EA  50F5               	movf	tablat,w,c
 14658  0115EC  5985               	subwfb	(printf@val+1)& (0+255),w,b
 14659  0115EE  0009               	tblrd		*+
 14660  0115F0  50F5               	movf	tablat,w,c
 14661  0115F2  5986               	subwfb	(printf@val+2)& (0+255),w,b
 14662  0115F4  0009               	tblrd		*+
 14663  0115F6  50F5               	movf	tablat,w,c
 14664  0115F8  5987               	subwfb	(printf@val+3)& (0+255),w,b
 14665  0115FA  A0D8               	btfss	status,0,c
 14666  0115FC  D02E               	goto	l1428
 14667                           
 14668                           ; BSR set to: 1
 14669                           
 14670                           ; BSR set to: 1
 14671                           
 14672                           ; BSR set to: 1
 14673                           ;doprnt.c: 1307: break;
 14674  0115FE  2B8D               	incf	printf@c& (0+255),f,b
 14675  011600  D7E1               	goto	l10295
 14676  011602                     
 14677                           ; BSR set to: 1
 14678                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14679                           
 14680                           ; BSR set to: 1
 14681  011602  0E01               	movlw	1
 14682  011604  6F8D               	movwf	printf@c& (0+255),b
 14683  011606                     l10309:
 14684                           
 14685                           ; BSR set to: 1
 14686  011606  0E08               	movlw	8
 14687  011608  198D               	xorwf	printf@c& (0+255),w,b
 14688  01160A  B4D8               	btfsc	status,2,c
 14689  01160C  D026               	goto	l1428
 14690                           
 14691                           ; BSR set to: 1
 14692                           ;doprnt.c: 1317: if(val < hexpowers[c])
 14693                           
 14694                           ; BSR set to: 1
 14695                           
 14696                           ; BSR set to: 1
 14697  01160E  518D               	movf	printf@c& (0+255),w,b
 14698  011610  0D04               	mullw	4
 14699  011612  0E59               	movlw	low _hexpowers
 14700  011614  24F3               	addwf	prodl,w,c
 14701  011616  6EF6               	movwf	tblptrl,c
 14702  011618  0EEC               	movlw	high _hexpowers
 14703  01161A  20F4               	addwfc	prodh,w,c
 14704  01161C  6EF7               	movwf	tblptrh,c
 14705  01161E                     	if	1	;There are 3 active tblptr bytes
 14706  01161E  6AF8               	clrf	tblptru,c
 14707  011620  0E00               	movlw	low (__mediumconst shr (0+16))
 14708  011622  22F8               	addwfc	tblptru,f,c
 14709  011624                     	endif
 14710  011624  0009               	tblrd		*+
 14711  011626  50F5               	movf	tablat,w,c
 14712  011628  5D84               	subwf	printf@val& (0+255),w,b
 14713  01162A  0009               	tblrd		*+
 14714  01162C  50F5               	movf	tablat,w,c
 14715  01162E  5985               	subwfb	(printf@val+1)& (0+255),w,b
 14716  011630  0009               	tblrd		*+
 14717  011632  50F5               	movf	tablat,w,c
 14718  011634  5986               	subwfb	(printf@val+2)& (0+255),w,b
 14719  011636  0009               	tblrd		*+
 14720  011638  50F5               	movf	tablat,w,c
 14721  01163A  5987               	subwfb	(printf@val+3)& (0+255),w,b
 14722  01163C  A0D8               	btfss	status,0,c
 14723  01163E  D00D               	goto	l1428
 14724                           
 14725                           ; BSR set to: 1
 14726                           
 14727                           ; BSR set to: 1
 14728                           
 14729                           ; BSR set to: 1
 14730                           ;doprnt.c: 1318: break;
 14731  011640  2B8D               	incf	printf@c& (0+255),f,b
 14732  011642  D7E1               	goto	l10309
 14733  011644                     l1422:
 14734                           
 14735                           ; BSR set to: 1
 14736                           
 14737                           ; BSR set to: 1
 14738  011644  517C               	movf	printf@flag& (0+255),w,b
 14739  011646  0BC0               	andlw	192
 14740                           
 14741                           ; Switch size 1, requested type "space"
 14742                           ; Number of cases is 3, Range of values is 0 to 192
 14743                           ; switch strategies available:
 14744                           ; Name         Instructions Cycles
 14745                           ; simple_byte           10     6 (average)
 14746                           ;	Chosen strategy is simple_byte
 14747  011648  0A00               	xorlw	0	; case 0
 14748  01164A  B4D8               	btfsc	status,2,c
 14749  01164C  D7B9               	goto	l1423
 14750  01164E  0A80               	xorlw	128	; case 128
 14751  011650  B4D8               	btfsc	status,2,c
 14752  011652  D7D7               	goto	l1429
 14753  011654  0A40               	xorlw	64	; case 192
 14754  011656  B4D8               	btfsc	status,2,c
 14755  011658  D7B3               	goto	l1423
 14756  01165A                     l1428:
 14757                           
 14758                           ; BSR set to: 1
 14759                           ;doprnt.c: 1339: if(c < prec)
 14760                           
 14761                           ; BSR set to: 1
 14762  01165A  0E80               	movlw	128
 14763  01165C  BF8D               	btfsc	printf@c& (0+255),7,b
 14764  01165E  0E7F               	movlw	127
 14765  011660  6F6C               	movwf	??_printf& (0+255),b
 14766  011662  518B               	movf	printf@prec& (0+255),w,b
 14767  011664  5D8D               	subwf	printf@c& (0+255),w,b
 14768  011666  518C               	movf	(printf@prec+1)& (0+255),w,b
 14769  011668  0A80               	xorlw	128
 14770  01166A  596C               	subwfb	??_printf& (0+255),w,b
 14771  01166C  B0D8               	btfsc	status,0,c
 14772  01166E  D003               	goto	l1433
 14773                           
 14774                           ; BSR set to: 1
 14775                           ;doprnt.c: 1340: c = prec;
 14776  011670  C18B  F18D         	movff	printf@prec,printf@c
 14777  011674  D010               	goto	l1435
 14778  011676                     l1433:
 14779                           
 14780                           ; BSR set to: 1
 14781                           ;doprnt.c: 1341: else if(prec < c)
 14782                           
 14783                           ; BSR set to: 1
 14784  011676  518C               	movf	(printf@prec+1)& (0+255),w,b
 14785  011678  0A80               	xorlw	128
 14786  01167A  6F6C               	movwf	??_printf& (0+255),b
 14787  01167C  518D               	movf	printf@c& (0+255),w,b
 14788  01167E  5D8B               	subwf	printf@prec& (0+255),w,b
 14789  011680  0E80               	movlw	128
 14790  011682  BF8D               	btfsc	printf@c& (0+255),7,b
 14791  011684  0E7F               	movlw	127
 14792  011686  596C               	subwfb	??_printf& (0+255),w,b
 14793  011688  B0D8               	btfsc	status,0,c
 14794  01168A  D005               	goto	l1435
 14795                           
 14796                           ; BSR set to: 1
 14797                           ;doprnt.c: 1342: prec = c;
 14798  01168C  518D               	movf	printf@c& (0+255),w,b
 14799  01168E  6F8B               	movwf	printf@prec& (0+255),b
 14800  011690  6B8C               	clrf	(printf@prec+1)& (0+255),b
 14801  011692  BF8B               	btfsc	printf@prec& (0+255),7,b
 14802  011694  078C               	decf	(printf@prec+1)& (0+255),f,b
 14803  011696                     l1435:
 14804                           
 14805                           ; BSR set to: 1
 14806                           ;doprnt.c: 1422: {
 14807                           ;doprnt.c: 1438: if(flag & 0x03)
 14808                           
 14809                           ; BSR set to: 1
 14810                           
 14811                           ; BSR set to: 1
 14812  011696  0E03               	movlw	3
 14813  011698  157C               	andwf	printf@flag& (0+255),w,b
 14814  01169A  6F6C               	movwf	??_printf& (0+255),b
 14815  01169C  0E00               	movlw	0
 14816  01169E  157D               	andwf	(printf@flag+1)& (0+255),w,b
 14817  0116A0  6F6D               	movwf	(??_printf+1)& (0+255),b
 14818  0116A2  516C               	movf	??_printf& (0+255),w,b
 14819  0116A4  116D               	iorwf	(??_printf+1)& (0+255),w,b
 14820  0116A6  B4D8               	btfsc	status,2,c
 14821  0116A8  D091               	goto	l1437
 14822                           
 14823                           ; BSR set to: 1
 14824                           ;doprnt.c: 1439: (putch('-') );
 14825  0116AA  0E2D               	movlw	45
 14826  0116AC  EC15  F0B7         	call	_putch
 14827                           
 14828                           ;doprnt.c: 1469: }
 14829                           ;doprnt.c: 1474: while(prec--) {
 14830  0116B0  D08D               	goto	l1437
 14831  0116B2                     
 14832                           ;doprnt.c: 1486: case 0xC0:
 14833                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14834  0116B2  C18B  F16C         	movff	printf@prec,??_printf
 14835  0116B6  C18C  F16D         	movff	printf@prec+1,??_printf+1
 14836  0116BA  0101               	movlb	1	; () banked
 14837  0116BC  90D8               	bcf	status,0,c
 14838  0116BE  376C               	rlcf	??_printf& (0+255),f,b
 14839  0116C0  376D               	rlcf	(??_printf+1)& (0+255),f,b
 14840  0116C2  90D8               	bcf	status,0,c
 14841  0116C4  376C               	rlcf	??_printf& (0+255),f,b
 14842  0116C6  376D               	rlcf	(??_printf+1)& (0+255),f,b
 14843  0116C8  0EE3               	movlw	low _dpowers
 14844  0116CA  256C               	addwf	??_printf& (0+255),w,b
 14845  0116CC  6EF6               	movwf	tblptrl,c
 14846  0116CE  0EEB               	movlw	high _dpowers
 14847  0116D0  216D               	addwfc	(??_printf+1)& (0+255),w,b
 14848  0116D2  6EF7               	movwf	tblptrh,c
 14849  0116D4                     	if	1	;There are 3 active tblptr bytes
 14850  0116D4  6AF8               	clrf	tblptru,c
 14851  0116D6  0E00               	movlw	low (__mediumconst shr (0+16))
 14852  0116D8  22F8               	addwfc	tblptru,f,c
 14853  0116DA                     	endif
 14854  0116DA  0009               	tblrd		*+
 14855  0116DC  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14856  0116E0  0009               	tblrd		*+
 14857  0116E2  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14858  0116E6  0009               	tblrd		*+
 14859  0116E8  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14860  0116EC  000A               	tblrd		*-
 14861  0116EE  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14862  0116F2  C184  F117         	movff	printf@val,___lldiv@dividend
 14863  0116F6  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 14864  0116FA  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 14865  0116FE  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14866  011702  EC77  F0AE         	call	___lldiv	;wreg free
 14867  011706  C117  F124         	movff	?___lldiv,___llmod@dividend
 14868  01170A  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 14869  01170E  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 14870  011712  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 14871  011716  0E0A               	movlw	10
 14872  011718  0101               	movlb	1	; () banked
 14873  01171A  6F28               	movwf	___llmod@divisor& (0+255),b
 14874  01171C  0E00               	movlw	0
 14875  01171E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14876  011720  0E00               	movlw	0
 14877  011722  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14878  011724  0E00               	movlw	0
 14879  011726  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14880  011728  EC0E  F0B1         	call	___llmod	;wreg free
 14881  01172C  0101               	movlb	1	; () banked
 14882  01172E  5124               	movf	?___llmod& (0+255),w,b
 14883  011730  0F30               	addlw	48
 14884  011732  6F8D               	movwf	printf@c& (0+255),b
 14885                           
 14886                           ;doprnt.c: 1491: break;
 14887  011734  D048               	goto	l1442
 14888  011736                     
 14889                           ; BSR set to: 1
 14890                           ;doprnt.c: 1499: {
 14891                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 14892                           
 14893                           ; BSR set to: 1
 14894  011736  C184  F117         	movff	printf@val,___lldiv@dividend
 14895  01173A  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 14896  01173E  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 14897  011742  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14898  011746  C18B  F16C         	movff	printf@prec,??_printf
 14899  01174A  C18C  F16D         	movff	printf@prec+1,??_printf+1
 14900  01174E  90D8               	bcf	status,0,c
 14901  011750  376C               	rlcf	??_printf& (0+255),f,b
 14902  011752  376D               	rlcf	(??_printf+1)& (0+255),f,b
 14903  011754  90D8               	bcf	status,0,c
 14904  011756  376C               	rlcf	??_printf& (0+255),f,b
 14905  011758  376D               	rlcf	(??_printf+1)& (0+255),f,b
 14906  01175A  0E59               	movlw	low _hexpowers
 14907  01175C  256C               	addwf	??_printf& (0+255),w,b
 14908  01175E  6EF6               	movwf	tblptrl,c
 14909  011760  0EEC               	movlw	high _hexpowers
 14910  011762  216D               	addwfc	(??_printf+1)& (0+255),w,b
 14911  011764  6EF7               	movwf	tblptrh,c
 14912  011766                     	if	1	;There are 3 active tblptr bytes
 14913  011766  6AF8               	clrf	tblptru,c
 14914  011768  0E00               	movlw	low (__mediumconst shr (0+16))
 14915  01176A  22F8               	addwfc	tblptru,f,c
 14916  01176C                     	endif
 14917  01176C  0009               	tblrd		*+
 14918  01176E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14919  011772  0009               	tblrd		*+
 14920  011774  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14921  011778  0009               	tblrd		*+
 14922  01177A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14923  01177E  000A               	tblrd		*-
 14924  011780  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14925  011784  EC77  F0AE         	call	___lldiv	;wreg free
 14926  011788  0101               	movlb	1	; () banked
 14927  01178A  5117               	movf	?___lldiv& (0+255),w,b
 14928  01178C  0B0F               	andlw	15
 14929  01178E  6F75               	movwf	printf@idx& (0+255),b
 14930                           
 14931                           ; BSR set to: 1
 14932                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 14933  011790  5175               	movf	printf@idx& (0+255),w,b
 14934  011792  0D01               	mullw	1
 14935  011794  0EEB               	movlw	low STR_134
 14936  011796  24F3               	addwf	prodl,w,c
 14937  011798  6EF6               	movwf	tblptrl,c
 14938  01179A  0EFD               	movlw	high STR_134
 14939  01179C  20F4               	addwfc	prodh,w,c
 14940  01179E  6EF7               	movwf	tblptrh,c
 14941  0117A0                     	if	1	;There are 3 active tblptr bytes
 14942  0117A0  6AF8               	clrf	tblptru,c
 14943  0117A2  0E00               	movlw	low (__mediumconst shr (0+16))
 14944  0117A4  22F8               	addwfc	tblptru,f,c
 14945  0117A6                     	endif
 14946  0117A6  0008               	tblrd		*
 14947  0117A8  CFF5 F18D          	movff	tablat,printf@c
 14948                           
 14949                           ; BSR set to: 1
 14950                           ;doprnt.c: 1523: }
 14951                           
 14952                           ;doprnt.c: 1508: }
 14953                           ;doprnt.c: 1510: break;
 14954  0117AC  D00C               	goto	l1442
 14955  0117AE                     l10345:
 14956  0117AE  0101               	movlb	1	; () banked
 14957  0117B0  517C               	movf	printf@flag& (0+255),w,b
 14958  0117B2  0BC0               	andlw	192
 14959                           
 14960                           ; Switch size 1, requested type "space"
 14961                           ; Number of cases is 3, Range of values is 0 to 192
 14962                           ; switch strategies available:
 14963                           ; Name         Instructions Cycles
 14964                           ; simple_byte           10     6 (average)
 14965                           ;	Chosen strategy is simple_byte
 14966  0117B4  0A00               	xorlw	0	; case 0
 14967  0117B6  B4D8               	btfsc	status,2,c
 14968  0117B8  D77C               	goto	l1440
 14969  0117BA  0A80               	xorlw	128	; case 128
 14970  0117BC  B4D8               	btfsc	status,2,c
 14971  0117BE  D7BB               	goto	l1443
 14972  0117C0  0A40               	xorlw	64	; case 192
 14973  0117C2  B4D8               	btfsc	status,2,c
 14974  0117C4  D776               	goto	l1440
 14975  0117C6                     l1442:
 14976                           
 14977                           ; BSR set to: 1
 14978                           ;doprnt.c: 1524: (putch(c) );
 14979                           
 14980                           ; BSR set to: 1
 14981  0117C6  518D               	movf	printf@c& (0+255),w,b
 14982  0117C8  EC15  F0B7         	call	_putch
 14983  0117CC                     l1437:
 14984  0117CC  0101               	movlb	1	; () banked
 14985  0117CE  078B               	decf	printf@prec& (0+255),f,b
 14986  0117D0  A0D8               	btfss	status,0,c
 14987  0117D2  078C               	decf	(printf@prec+1)& (0+255),f,b
 14988  0117D4  298B               	incf	printf@prec& (0+255),w,b
 14989  0117D6  E1EB               	bnz	l10345
 14990  0117D8  298C               	incf	(printf@prec+1)& (0+255),w,b
 14991  0117DA  A4D8               	btfss	status,2,c
 14992  0117DC  D7E8               	goto	l1439
 14993  0117DE                     u11790:
 14994                           
 14995                           ; BSR set to: 1
 14996                           
 14997                           ; BSR set to: 1
 14998  0117DE  0101               	movlb	1	; () banked
 14999  0117E0  5164               	movf	printf@f& (0+255),w,b
 15000  0117E2  6F6C               	movwf	??_printf& (0+255),b
 15001  0117E4  5165               	movf	(printf@f+1)& (0+255),w,b
 15002  0117E6  6F6D               	movwf	(??_printf+1)& (0+255),b
 15003  0117E8  4B64               	infsnz	printf@f& (0+255),f,b
 15004  0117EA  2B65               	incf	(printf@f+1)& (0+255),f,b
 15005  0117EC  C16C  FFF6         	movff	??_printf,tblptrl
 15006  0117F0  C16D  FFF7         	movff	??_printf+1,tblptrh
 15007  0117F4  0E00               	movlw	low (__mediumconst shr (0+16))
 15008  0117F6  6EF8               	movwf	tblptru,c
 15009  0117F8  0E0D               	movlw	(high __ramtop+-1)
 15010  0117FA  64F7               	cpfsgt	tblptrh,c
 15011  0117FC  D003               	bra	u11807
 15012  0117FE  0008               	tblrd		*
 15013  011800  50F5               	movf	tablat,w,c
 15014  011802  D005               	bra	u11800
 15015  011804                     u11807:
 15016  011804  CFF6 FFE9          	movff	tblptrl,fsr0l
 15017  011808  CFF7 FFEA          	movff	tblptrh,fsr0h
 15018  01180C  50EF               	movf	indf0,w,c
 15019  01180E                     u11800:
 15020  01180E  0101               	movlb	1	; () banked
 15021  011810  6F8D               	movwf	printf@c& (0+255),b
 15022  011812  518D               	movf	printf@c& (0+255),w,b
 15023  011814  B4D8               	btfsc	status,2,c
 15024  011816  0012               	return	
 15025  011818  EFAB  F086         	goto	l1351
 15026  01181C                     __end_of_printf:
 15027                           	opt stack 0
 15028                           tblptru	equ	0xFF8
 15029                           tblptrh	equ	0xFF7
 15030                           tblptrl	equ	0xFF6
 15031                           tablat	equ	0xFF5
 15032                           prodh	equ	0xFF4
 15033                           prodl	equ	0xFF3
 15034                           intcon	equ	0xFF2
 15035                           indf0	equ	0xFEF
 15036                           postinc0	equ	0xFEE
 15037                           fsr0h	equ	0xFEA
 15038                           fsr0l	equ	0xFE9
 15039                           wreg	equ	0xFE8
 15040                           indf1	equ	0xFE7
 15041                           postdec1	equ	0xFE5
 15042                           plusw1	equ	0xFE3
 15043                           fsr1h	equ	0xFE2
 15044                           fsr1l	equ	0xFE1
 15045                           indf2	equ	0xFDF
 15046                           postinc2	equ	0xFDE
 15047                           postdec2	equ	0xFDD
 15048                           plusw2	equ	0xFDB
 15049                           fsr2h	equ	0xFDA
 15050                           fsr2l	equ	0xFD9
 15051                           status	equ	0xFD8
 15052                           
 15053 ;; *************** function _scale *****************
 15054 ;; Defined at:
 15055 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;  scl             1    wreg     char 
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;  scl             1   91[BANK1 ] char 
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  3   85[BANK1 ] char 
 15062 ;; Registers used:
 15063 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15069 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15070 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15072 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15073 ;;Total ram usage:        7 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:   16
 15076 ;; This function calls:
 15077 ;;		___awdiv
 15078 ;;		___awmod
 15079 ;;		___ftmul
 15080 ;;		___wmul
 15081 ;; This function is called by:
 15082 ;;		_printf
 15083 ;; This function uses a non-reentrant model
 15084 ;;
 15085                           
 15086                           	psect	text30
 15087  012962                     __ptext30:
 15088                           	opt stack 0
 15089  012962                     _scale:
 15090                           	opt stack 11
 15091                           
 15092                           ; BSR set to: 1
 15093                           ;incstack = 0
 15094                           ;scale@scl stored from wreg
 15095  012962  0101               	movlb	1	; () banked
 15096  012964  6F5B               	movwf	scale@scl& (0+255),b
 15097                           
 15098                           ;doprnt.c: 428: if(scl < 0) {
 15099  012966  0101               	movlb	1	; () banked
 15100  012968  AF5B               	btfss	scale@scl& (0+255),7,b
 15101  01296A  D11E               	goto	l1340
 15102                           
 15103                           ; BSR set to: 1
 15104                           ;doprnt.c: 429: scl = -scl;
 15105  01296C  6D5B               	negf	scale@scl& (0+255),b
 15106                           
 15107                           ;doprnt.c: 430: if(scl>=110)
 15108  01296E  515B               	movf	scale@scl& (0+255),w,b
 15109  012970  0A80               	xorlw	128
 15110  012972  0F12               	addlw	-238
 15111  012974  A0D8               	btfss	status,0,c
 15112  012976  D0A0               	goto	l1341
 15113                           
 15114                           ; BSR set to: 1
 15115                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15116  012978  0E00               	movlw	0
 15117  01297A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15118  01297C  0E03               	movlw	3
 15119  01297E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15120  012980  0E00               	movlw	0
 15121  012982  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15122  012984  0E0A               	movlw	10
 15123  012986  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15124  012988  0E00               	movlw	0
 15125  01298A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15126  01298C  0E64               	movlw	100
 15127  01298E  6F19               	movwf	___awmod@divisor& (0+255),b
 15128  012990  515B               	movf	scale@scl& (0+255),w,b
 15129  012992  6F17               	movwf	___awmod@dividend& (0+255),b
 15130  012994  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15131  012996  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15132  012998  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15133  01299A  EC34  F0B0         	call	___awmod	;wreg free
 15134  01299E  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15135  0129A2  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15136  0129A6  EC34  F0AE         	call	___awdiv	;wreg free
 15137  0129AA  0E09               	movlw	9
 15138  0129AC  0101               	movlb	1	; () banked
 15139  0129AE  251D               	addwf	?___awdiv& (0+255),w,b
 15140  0129B0  6F25               	movwf	___wmul@multiplier& (0+255),b
 15141  0129B2  0E00               	movlw	0
 15142  0129B4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15143  0129B6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15144  0129B8  ECB2  F0B5         	call	___wmul	;wreg free
 15145  0129BC  0E32               	movlw	low __npowers_
 15146  0129BE  0101               	movlb	1	; () banked
 15147  0129C0  2525               	addwf	?___wmul& (0+255),w,b
 15148  0129C2  6EF6               	movwf	tblptrl,c
 15149  0129C4  0EEC               	movlw	high __npowers_
 15150  0129C6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15151  0129C8  6EF7               	movwf	tblptrh,c
 15152  0129CA                     	if	1	;There are 3 active tblptr bytes
 15153  0129CA  6AF8               	clrf	tblptru,c
 15154  0129CC  0E00               	movlw	low (__mediumconst shr (0+16))
 15155  0129CE  22F8               	addwfc	tblptru,f,c
 15156  0129D0                     	endif
 15157  0129D0  0009               	tblrd		*+
 15158  0129D2  CFF5 F149          	movff	tablat,___ftmul@f2
 15159  0129D6  0009               	tblrd		*+
 15160  0129D8  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15161  0129DC  000A               	tblrd		*-
 15162  0129DE  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15163  0129E2  0E00               	movlw	0
 15164  0129E4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15165  0129E6  0E64               	movlw	100
 15166  0129E8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15167  0129EA  515B               	movf	scale@scl& (0+255),w,b
 15168  0129EC  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15169  0129EE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15170  0129F0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15171  0129F2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15172  0129F4  EC34  F0AE         	call	___awdiv	;wreg free
 15173  0129F8  0E12               	movlw	18
 15174  0129FA  0101               	movlb	1	; () banked
 15175  0129FC  251D               	addwf	?___awdiv& (0+255),w,b
 15176  0129FE  6F25               	movwf	___wmul@multiplier& (0+255),b
 15177  012A00  0E00               	movlw	0
 15178  012A02  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15179  012A04  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15180  012A06  0E00               	movlw	0
 15181  012A08  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15182  012A0A  0E03               	movlw	3
 15183  012A0C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15184  012A0E  ECB2  F0B5         	call	___wmul	;wreg free
 15185  012A12  0E32               	movlw	low __npowers_
 15186  012A14  0101               	movlb	1	; () banked
 15187  012A16  2525               	addwf	?___wmul& (0+255),w,b
 15188  012A18  6EF6               	movwf	tblptrl,c
 15189  012A1A  0EEC               	movlw	high __npowers_
 15190  012A1C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15191  012A1E  6EF7               	movwf	tblptrh,c
 15192  012A20                     	if	1	;There are 3 active tblptr bytes
 15193  012A20  6AF8               	clrf	tblptru,c
 15194  012A22  0E00               	movlw	low (__mediumconst shr (0+16))
 15195  012A24  22F8               	addwfc	tblptru,f,c
 15196  012A26                     	endif
 15197  012A26  0009               	tblrd		*+
 15198  012A28  CFF5 F146          	movff	tablat,___ftmul@f1
 15199  012A2C  0009               	tblrd		*+
 15200  012A2E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 15201  012A32  000A               	tblrd		*-
 15202  012A34  CFF5 F148          	movff	tablat,___ftmul@f1+2
 15203  012A38  EC59  F0A7         	call	___ftmul	;wreg free
 15204  012A3C  C146  F158         	movff	?___ftmul,_scale$3818
 15205  012A40  C147  F159         	movff	?___ftmul+1,_scale$3818+1
 15206  012A44  C148  F15A         	movff	?___ftmul+2,_scale$3818+2
 15207                           
 15208                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15209  012A48  C158  F146         	movff	_scale$3818,___ftmul@f1
 15210  012A4C  C159  F147         	movff	_scale$3818+1,___ftmul@f1+1
 15211  012A50  C15A  F148         	movff	_scale$3818+2,___ftmul@f1+2
 15212  012A54  0E00               	movlw	0
 15213  012A56  0101               	movlb	1	; () banked
 15214  012A58  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15215  012A5A  0E03               	movlw	3
 15216  012A5C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15217  012A5E  0E00               	movlw	0
 15218  012A60  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15219  012A62  0E0A               	movlw	10
 15220  012A64  6F19               	movwf	___awmod@divisor& (0+255),b
 15221  012A66  515B               	movf	scale@scl& (0+255),w,b
 15222  012A68  6F17               	movwf	___awmod@dividend& (0+255),b
 15223  012A6A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15224  012A6C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15225  012A6E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15226  012A70  EC34  F0B0         	call	___awmod	;wreg free
 15227  012A74  C117  F125         	movff	?___awmod,___wmul@multiplier
 15228  012A78  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 15229  012A7C  ECB2  F0B5         	call	___wmul	;wreg free
 15230  012A80  0E32               	movlw	low __npowers_
 15231  012A82  0101               	movlb	1	; () banked
 15232  012A84  2525               	addwf	?___wmul& (0+255),w,b
 15233  012A86  6EF6               	movwf	tblptrl,c
 15234  012A88  0EEC               	movlw	high __npowers_
 15235  012A8A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15236  012A8C  6EF7               	movwf	tblptrh,c
 15237  012A8E                     	if	1	;There are 3 active tblptr bytes
 15238  012A8E  6AF8               	clrf	tblptru,c
 15239  012A90  0E00               	movlw	low (__mediumconst shr (0+16))
 15240  012A92  22F8               	addwfc	tblptru,f,c
 15241  012A94                     	endif
 15242  012A94  0009               	tblrd		*+
 15243  012A96  CFF5 F149          	movff	tablat,___ftmul@f2
 15244  012A9A  0009               	tblrd		*+
 15245  012A9C  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15246  012AA0  000A               	tblrd		*-
 15247  012AA2  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15248  012AA6  EC59  F0A7         	call	___ftmul	;wreg free
 15249  012AAA  C146  F155         	movff	?___ftmul,?_scale
 15250  012AAE  C147  F156         	movff	?___ftmul+1,?_scale+1
 15251  012AB2  C148  F157         	movff	?___ftmul+2,?_scale+2
 15252  012AB6  0012               	return	
 15253  012AB8                     l1341:
 15254                           
 15255                           ;doprnt.c: 432: else if(scl > 10)
 15256  012AB8  0101               	movlb	1	; () banked
 15257  012ABA  515B               	movf	scale@scl& (0+255),w,b
 15258  012ABC  0A80               	xorlw	128
 15259  012ABE  0F75               	addlw	-139
 15260  012AC0  A0D8               	btfss	status,0,c
 15261  012AC2  D05C               	goto	l1344
 15262                           
 15263                           ; BSR set to: 1
 15264                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15265  012AC4  0E00               	movlw	0
 15266  012AC6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15267  012AC8  0E0A               	movlw	10
 15268  012ACA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15269  012ACC  515B               	movf	scale@scl& (0+255),w,b
 15270  012ACE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15271  012AD0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15272  012AD2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15273  012AD4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15274  012AD6  EC34  F0AE         	call	___awdiv	;wreg free
 15275  012ADA  0E09               	movlw	9
 15276  012ADC  0101               	movlb	1	; () banked
 15277  012ADE  251D               	addwf	?___awdiv& (0+255),w,b
 15278  012AE0  6F25               	movwf	___wmul@multiplier& (0+255),b
 15279  012AE2  0E00               	movlw	0
 15280  012AE4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15281  012AE6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15282  012AE8  0E00               	movlw	0
 15283  012AEA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15284  012AEC  0E03               	movlw	3
 15285  012AEE  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15286  012AF0  ECB2  F0B5         	call	___wmul	;wreg free
 15287  012AF4  0E32               	movlw	low __npowers_
 15288  012AF6  0101               	movlb	1	; () banked
 15289  012AF8  2525               	addwf	?___wmul& (0+255),w,b
 15290  012AFA  6EF6               	movwf	tblptrl,c
 15291  012AFC  0EEC               	movlw	high __npowers_
 15292  012AFE  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15293  012B00  6EF7               	movwf	tblptrh,c
 15294  012B02                     	if	1	;There are 3 active tblptr bytes
 15295  012B02  6AF8               	clrf	tblptru,c
 15296  012B04  0E00               	movlw	low (__mediumconst shr (0+16))
 15297  012B06  22F8               	addwfc	tblptru,f,c
 15298  012B08                     	endif
 15299  012B08  0009               	tblrd		*+
 15300  012B0A  CFF5 F146          	movff	tablat,___ftmul@f1
 15301  012B0E  0009               	tblrd		*+
 15302  012B10  CFF5 F147          	movff	tablat,___ftmul@f1+1
 15303  012B14  000A               	tblrd		*-
 15304  012B16  CFF5 F148          	movff	tablat,___ftmul@f1+2
 15305  012B1A  0E00               	movlw	0
 15306  012B1C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15307  012B1E  0E03               	movlw	3
 15308  012B20  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15309  012B22  0E00               	movlw	0
 15310  012B24  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15311  012B26  0E0A               	movlw	10
 15312  012B28  6F19               	movwf	___awmod@divisor& (0+255),b
 15313  012B2A  515B               	movf	scale@scl& (0+255),w,b
 15314  012B2C  6F17               	movwf	___awmod@dividend& (0+255),b
 15315  012B2E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15316  012B30  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15317  012B32  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15318  012B34  EC34  F0B0         	call	___awmod	;wreg free
 15319  012B38  C117  F125         	movff	?___awmod,___wmul@multiplier
 15320  012B3C  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 15321  012B40  ECB2  F0B5         	call	___wmul	;wreg free
 15322  012B44  0E32               	movlw	low __npowers_
 15323  012B46  0101               	movlb	1	; () banked
 15324  012B48  2525               	addwf	?___wmul& (0+255),w,b
 15325  012B4A  6EF6               	movwf	tblptrl,c
 15326  012B4C  0EEC               	movlw	high __npowers_
 15327  012B4E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15328  012B50  6EF7               	movwf	tblptrh,c
 15329  012B52                     	if	1	;There are 3 active tblptr bytes
 15330  012B52  6AF8               	clrf	tblptru,c
 15331  012B54  0E00               	movlw	low (__mediumconst shr (0+16))
 15332  012B56  22F8               	addwfc	tblptru,f,c
 15333  012B58                     	endif
 15334  012B58  0009               	tblrd		*+
 15335  012B5A  CFF5 F149          	movff	tablat,___ftmul@f2
 15336  012B5E  0009               	tblrd		*+
 15337  012B60  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15338  012B64  000A               	tblrd		*-
 15339  012B66  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15340  012B6A  EC59  F0A7         	call	___ftmul	;wreg free
 15341  012B6E  C146  F155         	movff	?___ftmul,?_scale
 15342  012B72  C147  F156         	movff	?___ftmul+1,?_scale+1
 15343  012B76  C148  F157         	movff	?___ftmul+2,?_scale+2
 15344  012B7A  0012               	return	
 15345  012B7C                     l1344:
 15346                           
 15347                           ;doprnt.c: 434: return _npowers_[scl];
 15348  012B7C  0101               	movlb	1	; () banked
 15349  012B7E  515B               	movf	scale@scl& (0+255),w,b
 15350  012B80  0D03               	mullw	3
 15351  012B82  0E32               	movlw	low __npowers_
 15352  012B84  24F3               	addwf	prodl,w,c
 15353  012B86  6EF6               	movwf	tblptrl,c
 15354  012B88  0EEC               	movlw	high __npowers_
 15355  012B8A  20F4               	addwfc	prodh,w,c
 15356  012B8C  6EF7               	movwf	tblptrh,c
 15357  012B8E                     	if	1	;There are 3 active tblptr bytes
 15358  012B8E  6AF8               	clrf	tblptru,c
 15359  012B90  0E00               	movlw	low (__mediumconst shr (0+16))
 15360  012B92  22F8               	addwfc	tblptru,f,c
 15361  012B94                     	endif
 15362  012B94  0009               	tblrd		*+
 15363  012B96  CFF5 F155          	movff	tablat,?_scale
 15364  012B9A  0009               	tblrd		*+
 15365  012B9C  CFF5 F156          	movff	tablat,?_scale+1
 15366  012BA0  000A               	tblrd		*-
 15367  012BA2  CFF5 F157          	movff	tablat,?_scale+2
 15368                           
 15369                           ; BSR set to: 1
 15370  012BA6  0012               	return	
 15371  012BA8                     l1340:
 15372                           
 15373                           ; BSR set to: 1
 15374                           ;doprnt.c: 435: }
 15375                           ;doprnt.c: 436: if(scl>=110)
 15376                           
 15377                           ; BSR set to: 1
 15378  012BA8  515B               	movf	scale@scl& (0+255),w,b
 15379  012BAA  0A80               	xorlw	128
 15380  012BAC  0F12               	addlw	-238
 15381  012BAE  A0D8               	btfss	status,0,c
 15382  012BB0  D0A0               	goto	l1345
 15383                           
 15384                           ; BSR set to: 1
 15385                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15386  012BB2  0E00               	movlw	0
 15387  012BB4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15388  012BB6  0E03               	movlw	3
 15389  012BB8  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15390  012BBA  0E00               	movlw	0
 15391  012BBC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15392  012BBE  0E0A               	movlw	10
 15393  012BC0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15394  012BC2  0E00               	movlw	0
 15395  012BC4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15396  012BC6  0E64               	movlw	100
 15397  012BC8  6F19               	movwf	___awmod@divisor& (0+255),b
 15398  012BCA  515B               	movf	scale@scl& (0+255),w,b
 15399  012BCC  6F17               	movwf	___awmod@dividend& (0+255),b
 15400  012BCE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15401  012BD0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15402  012BD2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15403  012BD4  EC34  F0B0         	call	___awmod	;wreg free
 15404  012BD8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15405  012BDC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15406  012BE0  EC34  F0AE         	call	___awdiv	;wreg free
 15407  012BE4  0E09               	movlw	9
 15408  012BE6  0101               	movlb	1	; () banked
 15409  012BE8  251D               	addwf	?___awdiv& (0+255),w,b
 15410  012BEA  6F25               	movwf	___wmul@multiplier& (0+255),b
 15411  012BEC  0E00               	movlw	0
 15412  012BEE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15413  012BF0  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15414  012BF2  ECB2  F0B5         	call	___wmul	;wreg free
 15415  012BF6  0E0B               	movlw	low __powers_
 15416  012BF8  0101               	movlb	1	; () banked
 15417  012BFA  2525               	addwf	?___wmul& (0+255),w,b
 15418  012BFC  6EF6               	movwf	tblptrl,c
 15419  012BFE  0EEC               	movlw	high __powers_
 15420  012C00  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15421  012C02  6EF7               	movwf	tblptrh,c
 15422  012C04                     	if	1	;There are 3 active tblptr bytes
 15423  012C04  6AF8               	clrf	tblptru,c
 15424  012C06  0E00               	movlw	low (__mediumconst shr (0+16))
 15425  012C08  22F8               	addwfc	tblptru,f,c
 15426  012C0A                     	endif
 15427  012C0A  0009               	tblrd		*+
 15428  012C0C  CFF5 F149          	movff	tablat,___ftmul@f2
 15429  012C10  0009               	tblrd		*+
 15430  012C12  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15431  012C16  000A               	tblrd		*-
 15432  012C18  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15433  012C1C  0E00               	movlw	0
 15434  012C1E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15435  012C20  0E64               	movlw	100
 15436  012C22  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15437  012C24  515B               	movf	scale@scl& (0+255),w,b
 15438  012C26  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15439  012C28  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15440  012C2A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15441  012C2C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15442  012C2E  EC34  F0AE         	call	___awdiv	;wreg free
 15443  012C32  0E12               	movlw	18
 15444  012C34  0101               	movlb	1	; () banked
 15445  012C36  251D               	addwf	?___awdiv& (0+255),w,b
 15446  012C38  6F25               	movwf	___wmul@multiplier& (0+255),b
 15447  012C3A  0E00               	movlw	0
 15448  012C3C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15449  012C3E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15450  012C40  0E00               	movlw	0
 15451  012C42  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15452  012C44  0E03               	movlw	3
 15453  012C46  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15454  012C48  ECB2  F0B5         	call	___wmul	;wreg free
 15455  012C4C  0E0B               	movlw	low __powers_
 15456  012C4E  0101               	movlb	1	; () banked
 15457  012C50  2525               	addwf	?___wmul& (0+255),w,b
 15458  012C52  6EF6               	movwf	tblptrl,c
 15459  012C54  0EEC               	movlw	high __powers_
 15460  012C56  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15461  012C58  6EF7               	movwf	tblptrh,c
 15462  012C5A                     	if	1	;There are 3 active tblptr bytes
 15463  012C5A  6AF8               	clrf	tblptru,c
 15464  012C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 15465  012C5E  22F8               	addwfc	tblptru,f,c
 15466  012C60                     	endif
 15467  012C60  0009               	tblrd		*+
 15468  012C62  CFF5 F146          	movff	tablat,___ftmul@f1
 15469  012C66  0009               	tblrd		*+
 15470  012C68  CFF5 F147          	movff	tablat,___ftmul@f1+1
 15471  012C6C  000A               	tblrd		*-
 15472  012C6E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 15473  012C72  EC59  F0A7         	call	___ftmul	;wreg free
 15474  012C76  C146  F158         	movff	?___ftmul,_scale$3818
 15475  012C7A  C147  F159         	movff	?___ftmul+1,_scale$3818+1
 15476  012C7E  C148  F15A         	movff	?___ftmul+2,_scale$3818+2
 15477                           
 15478                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15479  012C82  C158  F146         	movff	_scale$3818,___ftmul@f1
 15480  012C86  C159  F147         	movff	_scale$3818+1,___ftmul@f1+1
 15481  012C8A  C15A  F148         	movff	_scale$3818+2,___ftmul@f1+2
 15482  012C8E  0E00               	movlw	0
 15483  012C90  0101               	movlb	1	; () banked
 15484  012C92  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15485  012C94  0E03               	movlw	3
 15486  012C96  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15487  012C98  0E00               	movlw	0
 15488  012C9A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15489  012C9C  0E0A               	movlw	10
 15490  012C9E  6F19               	movwf	___awmod@divisor& (0+255),b
 15491  012CA0  515B               	movf	scale@scl& (0+255),w,b
 15492  012CA2  6F17               	movwf	___awmod@dividend& (0+255),b
 15493  012CA4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15494  012CA6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15495  012CA8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15496  012CAA  EC34  F0B0         	call	___awmod	;wreg free
 15497  012CAE  C117  F125         	movff	?___awmod,___wmul@multiplier
 15498  012CB2  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 15499  012CB6  ECB2  F0B5         	call	___wmul	;wreg free
 15500  012CBA  0E0B               	movlw	low __powers_
 15501  012CBC  0101               	movlb	1	; () banked
 15502  012CBE  2525               	addwf	?___wmul& (0+255),w,b
 15503  012CC0  6EF6               	movwf	tblptrl,c
 15504  012CC2  0EEC               	movlw	high __powers_
 15505  012CC4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15506  012CC6  6EF7               	movwf	tblptrh,c
 15507  012CC8                     	if	1	;There are 3 active tblptr bytes
 15508  012CC8  6AF8               	clrf	tblptru,c
 15509  012CCA  0E00               	movlw	low (__mediumconst shr (0+16))
 15510  012CCC  22F8               	addwfc	tblptru,f,c
 15511  012CCE                     	endif
 15512  012CCE  0009               	tblrd		*+
 15513  012CD0  CFF5 F149          	movff	tablat,___ftmul@f2
 15514  012CD4  0009               	tblrd		*+
 15515  012CD6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15516  012CDA  000A               	tblrd		*-
 15517  012CDC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15518  012CE0  EC59  F0A7         	call	___ftmul	;wreg free
 15519  012CE4  C146  F155         	movff	?___ftmul,?_scale
 15520  012CE8  C147  F156         	movff	?___ftmul+1,?_scale+1
 15521  012CEC  C148  F157         	movff	?___ftmul+2,?_scale+2
 15522  012CF0  0012               	return	
 15523  012CF2                     l1345:
 15524                           
 15525                           ;doprnt.c: 438: else if(scl > 10)
 15526  012CF2  0101               	movlb	1	; () banked
 15527  012CF4  515B               	movf	scale@scl& (0+255),w,b
 15528  012CF6  0A80               	xorlw	128
 15529  012CF8  0F75               	addlw	-139
 15530  012CFA  A0D8               	btfss	status,0,c
 15531  012CFC  D05C               	goto	l1347
 15532                           
 15533                           ; BSR set to: 1
 15534                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15535  012CFE  0E00               	movlw	0
 15536  012D00  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15537  012D02  0E0A               	movlw	10
 15538  012D04  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15539  012D06  515B               	movf	scale@scl& (0+255),w,b
 15540  012D08  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15541  012D0A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15542  012D0C  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15543  012D0E  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15544  012D10  EC34  F0AE         	call	___awdiv	;wreg free
 15545  012D14  0E09               	movlw	9
 15546  012D16  0101               	movlb	1	; () banked
 15547  012D18  251D               	addwf	?___awdiv& (0+255),w,b
 15548  012D1A  6F25               	movwf	___wmul@multiplier& (0+255),b
 15549  012D1C  0E00               	movlw	0
 15550  012D1E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15551  012D20  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15552  012D22  0E00               	movlw	0
 15553  012D24  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15554  012D26  0E03               	movlw	3
 15555  012D28  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15556  012D2A  ECB2  F0B5         	call	___wmul	;wreg free
 15557  012D2E  0E0B               	movlw	low __powers_
 15558  012D30  0101               	movlb	1	; () banked
 15559  012D32  2525               	addwf	?___wmul& (0+255),w,b
 15560  012D34  6EF6               	movwf	tblptrl,c
 15561  012D36  0EEC               	movlw	high __powers_
 15562  012D38  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15563  012D3A  6EF7               	movwf	tblptrh,c
 15564  012D3C                     	if	1	;There are 3 active tblptr bytes
 15565  012D3C  6AF8               	clrf	tblptru,c
 15566  012D3E  0E00               	movlw	low (__mediumconst shr (0+16))
 15567  012D40  22F8               	addwfc	tblptru,f,c
 15568  012D42                     	endif
 15569  012D42  0009               	tblrd		*+
 15570  012D44  CFF5 F146          	movff	tablat,___ftmul@f1
 15571  012D48  0009               	tblrd		*+
 15572  012D4A  CFF5 F147          	movff	tablat,___ftmul@f1+1
 15573  012D4E  000A               	tblrd		*-
 15574  012D50  CFF5 F148          	movff	tablat,___ftmul@f1+2
 15575  012D54  0E00               	movlw	0
 15576  012D56  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15577  012D58  0E03               	movlw	3
 15578  012D5A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15579  012D5C  0E00               	movlw	0
 15580  012D5E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15581  012D60  0E0A               	movlw	10
 15582  012D62  6F19               	movwf	___awmod@divisor& (0+255),b
 15583  012D64  515B               	movf	scale@scl& (0+255),w,b
 15584  012D66  6F17               	movwf	___awmod@dividend& (0+255),b
 15585  012D68  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15586  012D6A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15587  012D6C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15588  012D6E  EC34  F0B0         	call	___awmod	;wreg free
 15589  012D72  C117  F125         	movff	?___awmod,___wmul@multiplier
 15590  012D76  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 15591  012D7A  ECB2  F0B5         	call	___wmul	;wreg free
 15592  012D7E  0E0B               	movlw	low __powers_
 15593  012D80  0101               	movlb	1	; () banked
 15594  012D82  2525               	addwf	?___wmul& (0+255),w,b
 15595  012D84  6EF6               	movwf	tblptrl,c
 15596  012D86  0EEC               	movlw	high __powers_
 15597  012D88  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15598  012D8A  6EF7               	movwf	tblptrh,c
 15599  012D8C                     	if	1	;There are 3 active tblptr bytes
 15600  012D8C  6AF8               	clrf	tblptru,c
 15601  012D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 15602  012D90  22F8               	addwfc	tblptru,f,c
 15603  012D92                     	endif
 15604  012D92  0009               	tblrd		*+
 15605  012D94  CFF5 F149          	movff	tablat,___ftmul@f2
 15606  012D98  0009               	tblrd		*+
 15607  012D9A  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15608  012D9E  000A               	tblrd		*-
 15609  012DA0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15610  012DA4  EC59  F0A7         	call	___ftmul	;wreg free
 15611  012DA8  C146  F155         	movff	?___ftmul,?_scale
 15612  012DAC  C147  F156         	movff	?___ftmul+1,?_scale+1
 15613  012DB0  C148  F157         	movff	?___ftmul+2,?_scale+2
 15614  012DB4  0012               	return	
 15615  012DB6                     l1347:
 15616                           
 15617                           ;doprnt.c: 440: return _powers_[scl];
 15618  012DB6  0101               	movlb	1	; () banked
 15619  012DB8  515B               	movf	scale@scl& (0+255),w,b
 15620  012DBA  0D03               	mullw	3
 15621  012DBC  0E0B               	movlw	low __powers_
 15622  012DBE  24F3               	addwf	prodl,w,c
 15623  012DC0  6EF6               	movwf	tblptrl,c
 15624  012DC2  0EEC               	movlw	high __powers_
 15625  012DC4  20F4               	addwfc	prodh,w,c
 15626  012DC6  6EF7               	movwf	tblptrh,c
 15627  012DC8                     	if	1	;There are 3 active tblptr bytes
 15628  012DC8  6AF8               	clrf	tblptru,c
 15629  012DCA  0E00               	movlw	low (__mediumconst shr (0+16))
 15630  012DCC  22F8               	addwfc	tblptru,f,c
 15631  012DCE                     	endif
 15632  012DCE  0009               	tblrd		*+
 15633  012DD0  CFF5 F155          	movff	tablat,?_scale
 15634  012DD4  0009               	tblrd		*+
 15635  012DD6  CFF5 F156          	movff	tablat,?_scale+1
 15636  012DDA  000A               	tblrd		*-
 15637  012DDC  CFF5 F157          	movff	tablat,?_scale+2
 15638  012DE0  0012               	return	
 15639  012DE2                     __end_of_scale:
 15640                           	opt stack 0
 15641                           tblptru	equ	0xFF8
 15642                           tblptrh	equ	0xFF7
 15643                           tblptrl	equ	0xFF6
 15644                           tablat	equ	0xFF5
 15645                           prodh	equ	0xFF4
 15646                           prodl	equ	0xFF3
 15647                           intcon	equ	0xFF2
 15648                           indf0	equ	0xFEF
 15649                           postinc0	equ	0xFEE
 15650                           fsr0h	equ	0xFEA
 15651                           fsr0l	equ	0xFE9
 15652                           wreg	equ	0xFE8
 15653                           indf1	equ	0xFE7
 15654                           postdec1	equ	0xFE5
 15655                           plusw1	equ	0xFE3
 15656                           fsr1h	equ	0xFE2
 15657                           fsr1l	equ	0xFE1
 15658                           indf2	equ	0xFDF
 15659                           postinc2	equ	0xFDE
 15660                           postdec2	equ	0xFDD
 15661                           plusw2	equ	0xFDB
 15662                           fsr2h	equ	0xFDA
 15663                           fsr2l	equ	0xFD9
 15664                           status	equ	0xFD8
 15665                           
 15666 ;; *************** function _putch *****************
 15667 ;; Defined at:
 15668 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 15669 ;; Parameters:    Size  Location     Type
 15670 ;;  txData          1    wreg     unsigned char 
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;  txData          1   24[BANK1 ] unsigned char 
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  1    wreg      void 
 15675 ;; Registers used:
 15676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15683 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15685 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15686 ;;Total ram usage:        1 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:   15
 15689 ;; This function calls:
 15690 ;;		_EUSART2_Write
 15691 ;; This function is called by:
 15692 ;;		_printf
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text31
 15697  016E2A                     __ptext31:
 15698                           	opt stack 0
 15699  016E2A                     _putch:
 15700                           	opt stack 12
 15701                           
 15702                           ;incstack = 0
 15703                           ;putch@txData stored from wreg
 15704  016E2A  0101               	movlb	1	; () banked
 15705  016E2C  6F18               	movwf	putch@txData& (0+255),b
 15706                           
 15707                           ;eusart2.c: 195: EUSART2_Write(txData);
 15708  016E2E  0101               	movlb	1	; () banked
 15709  016E30  5118               	movf	putch@txData& (0+255),w,b
 15710  016E32  EC59  F0B3         	call	_EUSART2_Write
 15711  016E36  0012               	return		;funcret
 15712  016E38                     __end_of_putch:
 15713                           	opt stack 0
 15714                           tblptru	equ	0xFF8
 15715                           tblptrh	equ	0xFF7
 15716                           tblptrl	equ	0xFF6
 15717                           tablat	equ	0xFF5
 15718                           prodh	equ	0xFF4
 15719                           prodl	equ	0xFF3
 15720                           intcon	equ	0xFF2
 15721                           indf0	equ	0xFEF
 15722                           postinc0	equ	0xFEE
 15723                           fsr0h	equ	0xFEA
 15724                           fsr0l	equ	0xFE9
 15725                           wreg	equ	0xFE8
 15726                           indf1	equ	0xFE7
 15727                           postdec1	equ	0xFE5
 15728                           plusw1	equ	0xFE3
 15729                           fsr1h	equ	0xFE2
 15730                           fsr1l	equ	0xFE1
 15731                           indf2	equ	0xFDF
 15732                           postinc2	equ	0xFDE
 15733                           postdec2	equ	0xFDD
 15734                           plusw2	equ	0xFDB
 15735                           fsr2h	equ	0xFDA
 15736                           fsr2l	equ	0xFD9
 15737                           status	equ	0xFD8
 15738                           
 15739 ;; *************** function _EUSART2_Write *****************
 15740 ;; Defined at:
 15741 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;  txData          1    wreg     unsigned char 
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;  txData          1   23[BANK1 ] unsigned char 
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15756 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15758 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15759 ;;Total ram usage:        1 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; Hardware stack levels required when called:   14
 15762 ;; This function calls:
 15763 ;;		Nothing
 15764 ;; This function is called by:
 15765 ;;		_putch
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769                           	psect	text32
 15770  0166B2                     __ptext32:
 15771                           	opt stack 0
 15772  0166B2                     _EUSART2_Write:
 15773                           	opt stack 12
 15774                           
 15775                           ;incstack = 0
 15776                           ;EUSART2_Write@txData stored from wreg
 15777  0166B2  0101               	movlb	1	; () banked
 15778  0166B4  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 15779                           
 15780                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 15781  0166B6  D002               	goto	l388
 15782  0166B8                     l389:
 15783                           
 15784                           ; BSR set to: 1
 15785  0166B8  0004               	clrwdt		;# 
 15786                           
 15787                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 15788  0166BA  827E               	bsf	3966,1,c	;volatile
 15789  0166BC                     l388:
 15790  0166BC  0101               	movlb	1	; () banked
 15791  0166BE  51D2               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15792  0166C0  B4D8               	btfsc	status,2,c
 15793  0166C2  D7FA               	goto	l389
 15794                           
 15795                           ; BSR set to: 1
 15796                           ;eusart2.c: 167: }
 15797                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 15798  0166C4  927E               	bcf	3966,1,c	;volatile
 15799                           
 15800                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 15801  0166C6  010E               	movlb	14	; () banked
 15802  0166C8  BD2C               	btfsc	44,6,b	;volatile
 15803  0166CA  D003               	goto	l391
 15804                           
 15805                           ; BSR set to: 14
 15806                           ;eusart2.c: 172: {
 15807                           ;eusart2.c: 173: TX2REG = txData;
 15808  0166CC  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 15809                           
 15810                           ;eusart2.c: 174: }
 15811  0166D0  D013               	goto	l392
 15812  0166D2                     l391:
 15813                           
 15814                           ; BSR set to: 14
 15815                           ;eusart2.c: 175: else
 15816                           ;eusart2.c: 176: {
 15817                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 15818  0166D2  9D2C               	bcf	44,6,b	;volatile
 15819                           
 15820                           ; BSR set to: 14
 15821                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 15822  0166D4  0101               	movlb	1	; () banked
 15823  0166D6  51D4               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 15824  0166D8  0D01               	mullw	1
 15825  0166DA  0E00               	movlw	low _eusart2TxBuffer
 15826  0166DC  24F3               	addwf	prodl,w,c
 15827  0166DE  6ED9               	movwf	fsr2l,c
 15828  0166E0  0E03               	movlw	high _eusart2TxBuffer
 15829  0166E2  20F4               	addwfc	prodh,w,c
 15830  0166E4  6EDA               	movwf	fsr2h,c
 15831  0166E6  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 15832                           
 15833                           ; BSR set to: 1
 15834  0166EA  2BD4               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 15838  0166EC  0E7F               	movlw	127
 15839  0166EE  65D4               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 15840  0166F0  D002               	goto	l393
 15841                           
 15842                           ; BSR set to: 1
 15843                           ;eusart2.c: 180: {
 15844                           ;eusart2.c: 181: eusart2TxHead = 0;
 15845  0166F2  0E00               	movlw	0
 15846  0166F4  6FD4               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15847  0166F6                     l393:
 15848                           
 15849                           ; BSR set to: 1
 15850                           ;eusart2.c: 182: }
 15851                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 15852                           
 15853                           ; BSR set to: 1
 15854  0166F6  07D2               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15855  0166F8                     l392:
 15856                           
 15857                           ;eusart2.c: 184: }
 15858                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 15859                           
 15860                           ; BSR set to: 1
 15861  0166F8  010E               	movlb	14	; () banked
 15862  0166FA  8D2C               	bsf	44,6,b	;volatile
 15863                           
 15864                           ; BSR set to: 14
 15865  0166FC  0012               	return		;funcret
 15866  0166FE                     __end_of_EUSART2_Write:
 15867                           	opt stack 0
 15868                           tblptru	equ	0xFF8
 15869                           tblptrh	equ	0xFF7
 15870                           tblptrl	equ	0xFF6
 15871                           tablat	equ	0xFF5
 15872                           prodh	equ	0xFF4
 15873                           prodl	equ	0xFF3
 15874                           intcon	equ	0xFF2
 15875                           indf0	equ	0xFEF
 15876                           postinc0	equ	0xFEE
 15877                           fsr0h	equ	0xFEA
 15878                           fsr0l	equ	0xFE9
 15879                           wreg	equ	0xFE8
 15880                           indf1	equ	0xFE7
 15881                           postdec1	equ	0xFE5
 15882                           plusw1	equ	0xFE3
 15883                           fsr1h	equ	0xFE2
 15884                           fsr1l	equ	0xFE1
 15885                           indf2	equ	0xFDF
 15886                           postinc2	equ	0xFDE
 15887                           postdec2	equ	0xFDD
 15888                           plusw2	equ	0xFDB
 15889                           fsr2h	equ	0xFDA
 15890                           fsr2l	equ	0xFD9
 15891                           status	equ	0xFD8
 15892                           
 15893 ;; *************** function _isdigit *****************
 15894 ;; Defined at:
 15895 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;  c               1    wreg     unsigned char 
 15898 ;; Auto vars:     Size  Location     Type
 15899 ;;  c               1   25[BANK1 ] unsigned char 
 15900 ;; Return value:  Size  Location     Type
 15901 ;;		None               void
 15902 ;; Registers used:
 15903 ;;		wreg, status,2, status,0
 15904 ;; Tracked objects:
 15905 ;;		On entry : 0/0
 15906 ;;		On exit  : 0/0
 15907 ;;		Unchanged: 0/0
 15908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15910 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15911 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15912 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15913 ;;Total ram usage:        3 bytes
 15914 ;; Hardware stack levels used:    1
 15915 ;; Hardware stack levels required when called:   14
 15916 ;; This function calls:
 15917 ;;		Nothing
 15918 ;; This function is called by:
 15919 ;;		_printf
 15920 ;;		_atoi
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           
 15924                           	psect	text33
 15925  016CBC                     __ptext33:
 15926                           	opt stack 0
 15927  016CBC                     _isdigit:
 15928                           	opt stack 13
 15929                           
 15930                           ; BSR set to: 14
 15931                           ;incstack = 0
 15932                           ;isdigit@c stored from wreg
 15933  016CBC  0101               	movlb	1	; () banked
 15934  016CBE  6F19               	movwf	isdigit@c& (0+255),b
 15935  016CC0  0E00               	movlw	0
 15936  016CC2  0101               	movlb	1	; () banked
 15937  016CC4  6F18               	movwf	_isdigit$3141& (0+255),b
 15938                           
 15939                           ; BSR set to: 1
 15940  016CC6  0E3A               	movlw	58
 15941  016CC8  6119               	cpfslt	isdigit@c& (0+255),b
 15942  016CCA  D005               	goto	l1874
 15943                           
 15944                           ; BSR set to: 1
 15945  016CCC  0E2F               	movlw	47
 15946  016CCE  6519               	cpfsgt	isdigit@c& (0+255),b
 15947  016CD0  D002               	goto	l1874
 15948                           
 15949                           ; BSR set to: 1
 15950  016CD2  0E01               	movlw	1
 15951  016CD4  6F18               	movwf	_isdigit$3141& (0+255),b
 15952  016CD6                     l1874:
 15953                           
 15954                           ; BSR set to: 1
 15955                           
 15956                           ; BSR set to: 1
 15957  016CD6  C118  F117         	movff	_isdigit$3141,??_isdigit
 15958  016CDA  3117               	rrcf	??_isdigit& (0+255),w,b
 15959  016CDC  0012               	return	
 15960  016CDE                     __end_of_isdigit:
 15961                           	opt stack 0
 15962                           tblptru	equ	0xFF8
 15963                           tblptrh	equ	0xFF7
 15964                           tblptrl	equ	0xFF6
 15965                           tablat	equ	0xFF5
 15966                           prodh	equ	0xFF4
 15967                           prodl	equ	0xFF3
 15968                           intcon	equ	0xFF2
 15969                           indf0	equ	0xFEF
 15970                           postinc0	equ	0xFEE
 15971                           fsr0h	equ	0xFEA
 15972                           fsr0l	equ	0xFE9
 15973                           wreg	equ	0xFE8
 15974                           indf1	equ	0xFE7
 15975                           postdec1	equ	0xFE5
 15976                           plusw1	equ	0xFE3
 15977                           fsr1h	equ	0xFE2
 15978                           fsr1l	equ	0xFE1
 15979                           indf2	equ	0xFDF
 15980                           postinc2	equ	0xFDE
 15981                           postdec2	equ	0xFDD
 15982                           plusw2	equ	0xFDB
 15983                           fsr2h	equ	0xFDA
 15984                           fsr2l	equ	0xFD9
 15985                           status	equ	0xFD8
 15986                           
 15987 ;; *************** function _fround *****************
 15988 ;; Defined at:
 15989 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15990 ;; Parameters:    Size  Location     Type
 15991 ;;  prec            1    wreg     unsigned char 
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;  prec            1   94[BANK1 ] unsigned char 
 15994 ;; Return value:  Size  Location     Type
 15995 ;;                  3   85[BANK1 ] unsigned char 
 15996 ;; Registers used:
 15997 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15998 ;; Tracked objects:
 15999 ;;		On entry : 0/0
 16000 ;;		On exit  : 0/0
 16001 ;;		Unchanged: 0/0
 16002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16003 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16004 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16006 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16007 ;;Total ram usage:       10 bytes
 16008 ;; Hardware stack levels used:    1
 16009 ;; Hardware stack levels required when called:   16
 16010 ;; This function calls:
 16011 ;;		___awdiv
 16012 ;;		___awmod
 16013 ;;		___ftmul
 16014 ;;		___wmul
 16015 ;; This function is called by:
 16016 ;;		_printf
 16017 ;; This function uses a non-reentrant model
 16018 ;;
 16019                           
 16020                           	psect	text34
 16021  01359A                     __ptext34:
 16022                           	opt stack 0
 16023  01359A                     _fround:
 16024                           	opt stack 11
 16025                           
 16026                           ; BSR set to: 1
 16027                           ;incstack = 0
 16028                           ;fround@prec stored from wreg
 16029  01359A  0101               	movlb	1	; () banked
 16030  01359C  6F5E               	movwf	fround@prec& (0+255),b
 16031                           
 16032                           ;doprnt.c: 413: if(prec>=110)
 16033  01359E  0E6D               	movlw	109
 16034  0135A0  0101               	movlb	1	; () banked
 16035  0135A2  655E               	cpfsgt	fround@prec& (0+255),b
 16036  0135A4  D0AF               	goto	l1334
 16037                           
 16038                           ; BSR set to: 1
 16039                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16040  0135A6  0E00               	movlw	0
 16041  0135A8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16042  0135AA  0E03               	movlw	3
 16043  0135AC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16044  0135AE  0E00               	movlw	0
 16045  0135B0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16046  0135B2  0E0A               	movlw	10
 16047  0135B4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16048  0135B6  0E00               	movlw	0
 16049  0135B8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16050  0135BA  0E64               	movlw	100
 16051  0135BC  6F19               	movwf	___awmod@divisor& (0+255),b
 16052  0135BE  C15E  F117         	movff	fround@prec,___awmod@dividend
 16053  0135C2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16054  0135C4  EC34  F0B0         	call	___awmod	;wreg free
 16055  0135C8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16056  0135CC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16057  0135D0  EC34  F0AE         	call	___awdiv	;wreg free
 16058  0135D4  0E09               	movlw	9
 16059  0135D6  0101               	movlb	1	; () banked
 16060  0135D8  251D               	addwf	?___awdiv& (0+255),w,b
 16061  0135DA  6F25               	movwf	___wmul@multiplier& (0+255),b
 16062  0135DC  0E00               	movlw	0
 16063  0135DE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16064  0135E0  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16065  0135E2  ECB2  F0B5         	call	___wmul	;wreg free
 16066  0135E6  0E32               	movlw	low __npowers_
 16067  0135E8  0101               	movlb	1	; () banked
 16068  0135EA  2525               	addwf	?___wmul& (0+255),w,b
 16069  0135EC  6EF6               	movwf	tblptrl,c
 16070  0135EE  0EEC               	movlw	high __npowers_
 16071  0135F0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16072  0135F2  6EF7               	movwf	tblptrh,c
 16073  0135F4                     	if	1	;There are 3 active tblptr bytes
 16074  0135F4  6AF8               	clrf	tblptru,c
 16075  0135F6  0E00               	movlw	low (__mediumconst shr (0+16))
 16076  0135F8  22F8               	addwfc	tblptru,f,c
 16077  0135FA                     	endif
 16078  0135FA  0009               	tblrd		*+
 16079  0135FC  CFF5 F149          	movff	tablat,___ftmul@f2
 16080  013600  0009               	tblrd		*+
 16081  013602  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16082  013606  000A               	tblrd		*-
 16083  013608  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16084  01360C  0E00               	movlw	0
 16085  01360E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16086  013610  0E64               	movlw	100
 16087  013612  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16088  013614  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 16089  013618  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16090  01361A  EC34  F0AE         	call	___awdiv	;wreg free
 16091  01361E  0E12               	movlw	18
 16092  013620  0101               	movlb	1	; () banked
 16093  013622  251D               	addwf	?___awdiv& (0+255),w,b
 16094  013624  6F25               	movwf	___wmul@multiplier& (0+255),b
 16095  013626  0E00               	movlw	0
 16096  013628  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16097  01362A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16098  01362C  0E00               	movlw	0
 16099  01362E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16100  013630  0E03               	movlw	3
 16101  013632  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16102  013634  ECB2  F0B5         	call	___wmul	;wreg free
 16103  013638  0E32               	movlw	low __npowers_
 16104  01363A  0101               	movlb	1	; () banked
 16105  01363C  2525               	addwf	?___wmul& (0+255),w,b
 16106  01363E  6EF6               	movwf	tblptrl,c
 16107  013640  0EEC               	movlw	high __npowers_
 16108  013642  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16109  013644  6EF7               	movwf	tblptrh,c
 16110  013646                     	if	1	;There are 3 active tblptr bytes
 16111  013646  6AF8               	clrf	tblptru,c
 16112  013648  0E00               	movlw	low (__mediumconst shr (0+16))
 16113  01364A  22F8               	addwfc	tblptru,f,c
 16114  01364C                     	endif
 16115  01364C  0009               	tblrd		*+
 16116  01364E  CFF5 F146          	movff	tablat,___ftmul@f1
 16117  013652  0009               	tblrd		*+
 16118  013654  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16119  013658  000A               	tblrd		*-
 16120  01365A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16121  01365E  EC59  F0A7         	call	___ftmul	;wreg free
 16122  013662  C146  F15B         	movff	?___ftmul,_fround$3816
 16123  013666  C147  F15C         	movff	?___ftmul+1,_fround$3816+1
 16124  01366A  C148  F15D         	movff	?___ftmul+2,_fround$3816+2
 16125                           
 16126                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16127  01366E  0E00               	movlw	0
 16128  013670  0101               	movlb	1	; () banked
 16129  013672  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16130  013674  0E03               	movlw	3
 16131  013676  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16132  013678  0E00               	movlw	0
 16133  01367A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16134  01367C  0E0A               	movlw	10
 16135  01367E  6F19               	movwf	___awmod@divisor& (0+255),b
 16136  013680  C15E  F117         	movff	fround@prec,___awmod@dividend
 16137  013684  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16138  013686  EC34  F0B0         	call	___awmod	;wreg free
 16139  01368A  C117  F125         	movff	?___awmod,___wmul@multiplier
 16140  01368E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16141  013692  ECB2  F0B5         	call	___wmul	;wreg free
 16142  013696  0E32               	movlw	low __npowers_
 16143  013698  0101               	movlb	1	; () banked
 16144  01369A  2525               	addwf	?___wmul& (0+255),w,b
 16145  01369C  6EF6               	movwf	tblptrl,c
 16146  01369E  0EEC               	movlw	high __npowers_
 16147  0136A0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16148  0136A2  6EF7               	movwf	tblptrh,c
 16149  0136A4                     	if	1	;There are 3 active tblptr bytes
 16150  0136A4  6AF8               	clrf	tblptru,c
 16151  0136A6  0E00               	movlw	low (__mediumconst shr (0+16))
 16152  0136A8  22F8               	addwfc	tblptru,f,c
 16153  0136AA                     	endif
 16154  0136AA  0009               	tblrd		*+
 16155  0136AC  CFF5 F149          	movff	tablat,___ftmul@f2
 16156  0136B0  0009               	tblrd		*+
 16157  0136B2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16158  0136B6  000A               	tblrd		*-
 16159  0136B8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16160  0136BC  C15B  F146         	movff	_fround$3816,___ftmul@f1
 16161  0136C0  C15C  F147         	movff	_fround$3816+1,___ftmul@f1+1
 16162  0136C4  C15D  F148         	movff	_fround$3816+2,___ftmul@f1+2
 16163  0136C8  EC59  F0A7         	call	___ftmul	;wreg free
 16164  0136CC  C146  F158         	movff	?___ftmul,_fround$3817
 16165  0136D0  C147  F159         	movff	?___ftmul+1,_fround$3817+1
 16166  0136D4  C148  F15A         	movff	?___ftmul+2,_fround$3817+2
 16167                           
 16168                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16169  0136D8  C158  F146         	movff	_fround$3817,___ftmul@f1
 16170  0136DC  C159  F147         	movff	_fround$3817+1,___ftmul@f1+1
 16171  0136E0  C15A  F148         	movff	_fround$3817+2,___ftmul@f1+2
 16172  0136E4  0E00               	movlw	0
 16173  0136E6  0101               	movlb	1	; () banked
 16174  0136E8  6F49               	movwf	___ftmul@f2& (0+255),b
 16175  0136EA  0E00               	movlw	0
 16176  0136EC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 16177  0136EE  0E3F               	movlw	63
 16178  0136F0  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 16179  0136F2  EC59  F0A7         	call	___ftmul	;wreg free
 16180  0136F6  C146  F155         	movff	?___ftmul,?_fround
 16181  0136FA  C147  F156         	movff	?___ftmul+1,?_fround+1
 16182  0136FE  C148  F157         	movff	?___ftmul+2,?_fround+2
 16183  013702  0012               	return	
 16184  013704                     l1334:
 16185                           
 16186                           ;doprnt.c: 415: else if(prec > 10)
 16187  013704  0E0A               	movlw	10
 16188  013706  0101               	movlb	1	; () banked
 16189  013708  655E               	cpfsgt	fround@prec& (0+255),b
 16190  01370A  D06D               	goto	l1337
 16191                           
 16192                           ; BSR set to: 1
 16193                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16194  01370C  0E00               	movlw	0
 16195  01370E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16196  013710  0E03               	movlw	3
 16197  013712  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16198  013714  0E00               	movlw	0
 16199  013716  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16200  013718  0E0A               	movlw	10
 16201  01371A  6F19               	movwf	___awmod@divisor& (0+255),b
 16202  01371C  C15E  F117         	movff	fround@prec,___awmod@dividend
 16203  013720  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16204  013722  EC34  F0B0         	call	___awmod	;wreg free
 16205  013726  C117  F125         	movff	?___awmod,___wmul@multiplier
 16206  01372A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16207  01372E  ECB2  F0B5         	call	___wmul	;wreg free
 16208  013732  0E32               	movlw	low __npowers_
 16209  013734  0101               	movlb	1	; () banked
 16210  013736  2525               	addwf	?___wmul& (0+255),w,b
 16211  013738  6EF6               	movwf	tblptrl,c
 16212  01373A  0EEC               	movlw	high __npowers_
 16213  01373C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16214  01373E  6EF7               	movwf	tblptrh,c
 16215  013740                     	if	1	;There are 3 active tblptr bytes
 16216  013740  6AF8               	clrf	tblptru,c
 16217  013742  0E00               	movlw	low (__mediumconst shr (0+16))
 16218  013744  22F8               	addwfc	tblptru,f,c
 16219  013746                     	endif
 16220  013746  0009               	tblrd		*+
 16221  013748  CFF5 F149          	movff	tablat,___ftmul@f2
 16222  01374C  0009               	tblrd		*+
 16223  01374E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16224  013752  000A               	tblrd		*-
 16225  013754  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16226  013758  0E00               	movlw	0
 16227  01375A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16228  01375C  0E0A               	movlw	10
 16229  01375E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16230  013760  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 16231  013764  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16232  013766  EC34  F0AE         	call	___awdiv	;wreg free
 16233  01376A  0E09               	movlw	9
 16234  01376C  0101               	movlb	1	; () banked
 16235  01376E  251D               	addwf	?___awdiv& (0+255),w,b
 16236  013770  6F25               	movwf	___wmul@multiplier& (0+255),b
 16237  013772  0E00               	movlw	0
 16238  013774  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16239  013776  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16240  013778  0E00               	movlw	0
 16241  01377A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16242  01377C  0E03               	movlw	3
 16243  01377E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16244  013780  ECB2  F0B5         	call	___wmul	;wreg free
 16245  013784  0E32               	movlw	low __npowers_
 16246  013786  0101               	movlb	1	; () banked
 16247  013788  2525               	addwf	?___wmul& (0+255),w,b
 16248  01378A  6EF6               	movwf	tblptrl,c
 16249  01378C  0EEC               	movlw	high __npowers_
 16250  01378E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16251  013790  6EF7               	movwf	tblptrh,c
 16252  013792                     	if	1	;There are 3 active tblptr bytes
 16253  013792  6AF8               	clrf	tblptru,c
 16254  013794  0E00               	movlw	low (__mediumconst shr (0+16))
 16255  013796  22F8               	addwfc	tblptru,f,c
 16256  013798                     	endif
 16257  013798  0009               	tblrd		*+
 16258  01379A  CFF5 F146          	movff	tablat,___ftmul@f1
 16259  01379E  0009               	tblrd		*+
 16260  0137A0  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16261  0137A4  000A               	tblrd		*-
 16262  0137A6  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16263  0137AA  EC59  F0A7         	call	___ftmul	;wreg free
 16264  0137AE  C146  F15B         	movff	?___ftmul,_fround$3816
 16265  0137B2  C147  F15C         	movff	?___ftmul+1,_fround$3816+1
 16266  0137B6  C148  F15D         	movff	?___ftmul+2,_fround$3816+2
 16267                           
 16268                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16269  0137BA  C15B  F146         	movff	_fround$3816,___ftmul@f1
 16270  0137BE  C15C  F147         	movff	_fround$3816+1,___ftmul@f1+1
 16271  0137C2  C15D  F148         	movff	_fround$3816+2,___ftmul@f1+2
 16272  0137C6  0E00               	movlw	0
 16273  0137C8  0101               	movlb	1	; () banked
 16274  0137CA  6F49               	movwf	___ftmul@f2& (0+255),b
 16275  0137CC  0E00               	movlw	0
 16276  0137CE  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 16277  0137D0  0E3F               	movlw	63
 16278  0137D2  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 16279  0137D4  EC59  F0A7         	call	___ftmul	;wreg free
 16280  0137D8  C146  F155         	movff	?___ftmul,?_fround
 16281  0137DC  C147  F156         	movff	?___ftmul+1,?_fround+1
 16282  0137E0  C148  F157         	movff	?___ftmul+2,?_fround+2
 16283  0137E4  0012               	return	
 16284  0137E6                     l1337:
 16285                           
 16286                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 16287  0137E6  0101               	movlb	1	; () banked
 16288  0137E8  515E               	movf	fround@prec& (0+255),w,b
 16289  0137EA  0D03               	mullw	3
 16290  0137EC  0E32               	movlw	low __npowers_
 16291  0137EE  24F3               	addwf	prodl,w,c
 16292  0137F0  6EF6               	movwf	tblptrl,c
 16293  0137F2  0EEC               	movlw	high __npowers_
 16294  0137F4  20F4               	addwfc	prodh,w,c
 16295  0137F6  6EF7               	movwf	tblptrh,c
 16296  0137F8                     	if	1	;There are 3 active tblptr bytes
 16297  0137F8  6AF8               	clrf	tblptru,c
 16298  0137FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16299  0137FC  22F8               	addwfc	tblptru,f,c
 16300  0137FE                     	endif
 16301  0137FE  0009               	tblrd		*+
 16302  013800  CFF5 F146          	movff	tablat,___ftmul@f1
 16303  013804  0009               	tblrd		*+
 16304  013806  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16305  01380A  000A               	tblrd		*-
 16306  01380C  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16307  013810  0E00               	movlw	0
 16308  013812  6F49               	movwf	___ftmul@f2& (0+255),b
 16309  013814  0E00               	movlw	0
 16310  013816  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 16311  013818  0E3F               	movlw	63
 16312  01381A  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 16313  01381C  EC59  F0A7         	call	___ftmul	;wreg free
 16314  013820  C146  F155         	movff	?___ftmul,?_fround
 16315  013824  C147  F156         	movff	?___ftmul+1,?_fround+1
 16316  013828  C148  F157         	movff	?___ftmul+2,?_fround+2
 16317  01382C  0012               	return	
 16318  01382E                     __end_of_fround:
 16319                           	opt stack 0
 16320                           tblptru	equ	0xFF8
 16321                           tblptrh	equ	0xFF7
 16322                           tblptrl	equ	0xFF6
 16323                           tablat	equ	0xFF5
 16324                           prodh	equ	0xFF4
 16325                           prodl	equ	0xFF3
 16326                           intcon	equ	0xFF2
 16327                           indf0	equ	0xFEF
 16328                           postinc0	equ	0xFEE
 16329                           fsr0h	equ	0xFEA
 16330                           fsr0l	equ	0xFE9
 16331                           wreg	equ	0xFE8
 16332                           indf1	equ	0xFE7
 16333                           postdec1	equ	0xFE5
 16334                           plusw1	equ	0xFE3
 16335                           fsr1h	equ	0xFE2
 16336                           fsr1l	equ	0xFE1
 16337                           indf2	equ	0xFDF
 16338                           postinc2	equ	0xFDE
 16339                           postdec2	equ	0xFDD
 16340                           plusw2	equ	0xFDB
 16341                           fsr2h	equ	0xFDA
 16342                           fsr2l	equ	0xFD9
 16343                           status	equ	0xFD8
 16344                           
 16345 ;; *************** function ___wmul *****************
 16346 ;; Defined at:
 16347 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 16348 ;; Parameters:    Size  Location     Type
 16349 ;;  multiplier      2   37[BANK1 ] unsigned int 
 16350 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;  product         2   41[BANK1 ] unsigned int 
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  2   37[BANK1 ] unsigned int 
 16355 ;; Registers used:
 16356 ;;		wreg, status,2, status,0, prodl, prodh
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16362 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16363 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16365 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16366 ;;Total ram usage:        6 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:   14
 16369 ;; This function calls:
 16370 ;;		Nothing
 16371 ;; This function is called by:
 16372 ;;		_ringBufferLUT
 16373 ;;		_fround
 16374 ;;		_scale
 16375 ;;		_printf
 16376 ;;		_atoi
 16377 ;; This function uses a non-reentrant model
 16378 ;;
 16379                           
 16380                           	psect	text35
 16381  016B64                     __ptext35:
 16382                           	opt stack 0
 16383  016B64                     ___wmul:
 16384                           	opt stack 12
 16385                           
 16386                           ;incstack = 0
 16387  016B64  0101               	movlb	1	; () banked
 16388  016B66  5125               	movf	___wmul@multiplier& (0+255),w,b
 16389  016B68  0327               	mulwf	___wmul@multiplicand& (0+255),b
 16390  016B6A  CFF3 F129          	movff	prodl,___wmul@product
 16391  016B6E  CFF4 F12A          	movff	prodh,___wmul@product+1
 16392  016B72  5125               	movf	___wmul@multiplier& (0+255),w,b
 16393  016B74  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16394  016B76  50F3               	movf	prodl,w,c
 16395  016B78  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 16396  016B7A  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16397  016B7C  0327               	mulwf	___wmul@multiplicand& (0+255),b
 16398  016B7E  50F3               	movf	prodl,w,c
 16399  016B80  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 16400                           
 16401                           ; BSR set to: 1
 16402  016B82  C129  F125         	movff	___wmul@product,?___wmul
 16403  016B86  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 16404  016B8A  0012               	return	
 16405  016B8C                     __end_of___wmul:
 16406                           	opt stack 0
 16407                           tblptru	equ	0xFF8
 16408                           tblptrh	equ	0xFF7
 16409                           tblptrl	equ	0xFF6
 16410                           tablat	equ	0xFF5
 16411                           prodh	equ	0xFF4
 16412                           prodl	equ	0xFF3
 16413                           intcon	equ	0xFF2
 16414                           indf0	equ	0xFEF
 16415                           postinc0	equ	0xFEE
 16416                           fsr0h	equ	0xFEA
 16417                           fsr0l	equ	0xFE9
 16418                           wreg	equ	0xFE8
 16419                           indf1	equ	0xFE7
 16420                           postdec1	equ	0xFE5
 16421                           plusw1	equ	0xFE3
 16422                           fsr1h	equ	0xFE2
 16423                           fsr1l	equ	0xFE1
 16424                           indf2	equ	0xFDF
 16425                           postinc2	equ	0xFDE
 16426                           postdec2	equ	0xFDD
 16427                           plusw2	equ	0xFDB
 16428                           fsr2h	equ	0xFDA
 16429                           fsr2l	equ	0xFD9
 16430                           status	equ	0xFD8
 16431                           
 16432 ;; *************** function ___ftmul *****************
 16433 ;; Defined at:
 16434 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 16435 ;; Parameters:    Size  Location     Type
 16436 ;;  f1              3   70[BANK1 ] float 
 16437 ;;  f2              3   73[BANK1 ] float 
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 16440 ;;  sign            1   84[BANK1 ] unsigned char 
 16441 ;;  cntr            1   83[BANK1 ] unsigned char 
 16442 ;;  exp             1   79[BANK1 ] unsigned char 
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  3   70[BANK1 ] float 
 16445 ;; Registers used:
 16446 ;;		wreg, status,2, status,0, cstack
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16452 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16453 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16454 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16455 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16456 ;;Total ram usage:       15 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; Hardware stack levels required when called:   15
 16459 ;; This function calls:
 16460 ;;		___ftpack
 16461 ;; This function is called by:
 16462 ;;		_ringBufferLUT
 16463 ;;		_fround
 16464 ;;		_scale
 16465 ;;		_printf
 16466 ;; This function uses a non-reentrant model
 16467 ;;
 16468                           
 16469                           	psect	text36
 16470  014EB2                     __ptext36:
 16471                           	opt stack 0
 16472  014EB2                     ___ftmul:
 16473                           	opt stack 11
 16474                           
 16475                           ; BSR set to: 1
 16476                           ;incstack = 0
 16477  014EB2  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 16478  014EB6  0101               	movlb	1	; () banked
 16479  014EB8  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 16480  014EBA  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 16481  014EBC  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 16482  014EBE  374C               	rlcf	??___ftmul& (0+255),f,b
 16483  014EC0  E301               	bnc	u10361
 16484  014EC2  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 16485  014EC4                     u10361:
 16486  014EC4  514C               	movf	??___ftmul& (0+255),w,b
 16487  014EC6  6F4F               	movwf	___ftmul@exp& (0+255),b
 16488  014EC8  514F               	movf	___ftmul@exp& (0+255),w,b
 16489  014ECA  A4D8               	btfss	status,2,c
 16490  014ECC  D007               	goto	l1838
 16491                           
 16492                           ; BSR set to: 1
 16493  014ECE  0E00               	movlw	0
 16494  014ED0  6F46               	movwf	?___ftmul& (0+255),b
 16495  014ED2  0E00               	movlw	0
 16496  014ED4  6F47               	movwf	(?___ftmul+1)& (0+255),b
 16497  014ED6  0E00               	movlw	0
 16498  014ED8  6F48               	movwf	(?___ftmul+2)& (0+255),b
 16499                           
 16500                           ; BSR set to: 1
 16501  014EDA  0012               	return	
 16502  014EDC                     l1838:
 16503                           
 16504                           ; BSR set to: 1
 16505                           
 16506                           ; BSR set to: 1
 16507  014EDC  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 16508  014EE0  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 16509  014EE2  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 16510  014EE4  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 16511  014EE6  374C               	rlcf	??___ftmul& (0+255),f,b
 16512  014EE8  E301               	bnc	u10381
 16513  014EEA  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 16514  014EEC                     u10381:
 16515  014EEC  514C               	movf	??___ftmul& (0+255),w,b
 16516  014EEE  6F54               	movwf	___ftmul@sign& (0+255),b
 16517  014EF0  5154               	movf	___ftmul@sign& (0+255),w,b
 16518  014EF2  A4D8               	btfss	status,2,c
 16519  014EF4  D007               	goto	l1840
 16520                           
 16521                           ; BSR set to: 1
 16522  014EF6  0E00               	movlw	0
 16523  014EF8  6F46               	movwf	?___ftmul& (0+255),b
 16524  014EFA  0E00               	movlw	0
 16525  014EFC  6F47               	movwf	(?___ftmul+1)& (0+255),b
 16526  014EFE  0E00               	movlw	0
 16527  014F00  6F48               	movwf	(?___ftmul+2)& (0+255),b
 16528                           
 16529                           ; BSR set to: 1
 16530  014F02  0012               	return	
 16531  014F04                     l1840:
 16532                           
 16533                           ; BSR set to: 1
 16534                           
 16535                           ; BSR set to: 1
 16536  014F04  5154               	movf	___ftmul@sign& (0+255),w,b
 16537  014F06  0F7B               	addlw	123
 16538  014F08  274F               	addwf	___ftmul@exp& (0+255),f,b
 16539                           
 16540                           ; BSR set to: 1
 16541  014F0A  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 16542  014F0E  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 16543  014F10  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 16544  014F12  0E80               	movlw	128
 16545  014F14  1754               	andwf	___ftmul@sign& (0+255),f,b
 16546                           
 16547                           ; BSR set to: 1
 16548  014F16  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 16549                           
 16550                           ; BSR set to: 1
 16551  014F18  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 16552                           
 16553                           ; BSR set to: 1
 16554  014F1A  0EFF               	movlw	255
 16555  014F1C  1749               	andwf	___ftmul@f2& (0+255),f,b
 16556  014F1E  0EFF               	movlw	255
 16557  014F20  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 16558  014F22  0E00               	movlw	0
 16559  014F24  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 16560                           
 16561                           ; BSR set to: 1
 16562  014F26  0E00               	movlw	0
 16563  014F28  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 16564  014F2A  0E00               	movlw	0
 16565  014F2C  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 16566  014F2E  0E00               	movlw	0
 16567  014F30  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 16568                           
 16569                           ; BSR set to: 1
 16570  014F32  0E07               	movlw	7
 16571  014F34  6F53               	movwf	___ftmul@cntr& (0+255),b
 16572  014F36                     
 16573                           ; BSR set to: 1
 16574                           
 16575                           ; BSR set to: 1
 16576  014F36  A146               	btfss	___ftmul@f1& (0+255),0,b
 16577  014F38  D006               	goto	l1842
 16578                           
 16579                           ; BSR set to: 1
 16580  014F3A  5149               	movf	___ftmul@f2& (0+255),w,b
 16581  014F3C  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 16582  014F3E  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 16583  014F40  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 16584  014F42  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 16585  014F44  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 16586  014F46                     l1842:
 16587                           
 16588                           ; BSR set to: 1
 16589                           
 16590                           ; BSR set to: 1
 16591  014F46  90D8               	bcf	status,0,c
 16592  014F48  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 16593  014F4A  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 16594  014F4C  3346               	rrcf	___ftmul@f1& (0+255),f,b
 16595  014F4E  90D8               	bcf	status,0,c
 16596  014F50  3749               	rlcf	___ftmul@f2& (0+255),f,b
 16597  014F52  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 16598  014F54  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 16599                           
 16600                           ; BSR set to: 1
 16601  014F56  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 16602  014F58  D7EE               	goto	l1841
 16603                           
 16604                           ; BSR set to: 1
 16605                           
 16606                           ; BSR set to: 1
 16607  014F5A  0E09               	movlw	9
 16608  014F5C  6F53               	movwf	___ftmul@cntr& (0+255),b
 16609  014F5E                     
 16610                           ; BSR set to: 1
 16611                           
 16612                           ; BSR set to: 1
 16613  014F5E  A146               	btfss	___ftmul@f1& (0+255),0,b
 16614  014F60  D006               	goto	l1845
 16615                           
 16616                           ; BSR set to: 1
 16617  014F62  5149               	movf	___ftmul@f2& (0+255),w,b
 16618  014F64  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 16619  014F66  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 16620  014F68  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 16621  014F6A  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 16622  014F6C  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 16623  014F6E                     l1845:
 16624                           
 16625                           ; BSR set to: 1
 16626                           
 16627                           ; BSR set to: 1
 16628  014F6E  90D8               	bcf	status,0,c
 16629  014F70  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 16630  014F72  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 16631  014F74  3346               	rrcf	___ftmul@f1& (0+255),f,b
 16632  014F76  90D8               	bcf	status,0,c
 16633  014F78  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 16634  014F7A  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 16635  014F7C  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 16636                           
 16637                           ; BSR set to: 1
 16638  014F7E  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 16639  014F80  D7EE               	goto	l1844
 16640                           
 16641                           ; BSR set to: 1
 16642                           
 16643                           ; BSR set to: 1
 16644  014F82  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 16645  014F86  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 16646  014F8A  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 16647  014F8E  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 16648  014F92  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 16649  014F96  ECBE  F0AB         	call	___ftpack	;wreg free
 16650  014F9A  C117  F146         	movff	?___ftpack,?___ftmul
 16651  014F9E  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 16652  014FA2  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 16653  014FA6  0012               	return	
 16654  014FA8                     __end_of___ftmul:
 16655                           	opt stack 0
 16656                           tblptru	equ	0xFF8
 16657                           tblptrh	equ	0xFF7
 16658                           tblptrl	equ	0xFF6
 16659                           tablat	equ	0xFF5
 16660                           prodh	equ	0xFF4
 16661                           prodl	equ	0xFF3
 16662                           intcon	equ	0xFF2
 16663                           indf0	equ	0xFEF
 16664                           postinc0	equ	0xFEE
 16665                           fsr0h	equ	0xFEA
 16666                           fsr0l	equ	0xFE9
 16667                           wreg	equ	0xFE8
 16668                           indf1	equ	0xFE7
 16669                           postdec1	equ	0xFE5
 16670                           plusw1	equ	0xFE3
 16671                           fsr1h	equ	0xFE2
 16672                           fsr1l	equ	0xFE1
 16673                           indf2	equ	0xFDF
 16674                           postinc2	equ	0xFDE
 16675                           postdec2	equ	0xFDD
 16676                           plusw2	equ	0xFDB
 16677                           fsr2h	equ	0xFDA
 16678                           fsr2l	equ	0xFD9
 16679                           status	equ	0xFD8
 16680                           
 16681 ;; *************** function ___awmod *****************
 16682 ;; Defined at:
 16683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;  dividend        2   23[BANK1 ] int 
 16686 ;;  divisor         2   25[BANK1 ] int 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;  sign            1   28[BANK1 ] unsigned char 
 16689 ;;  counter         1   27[BANK1 ] unsigned char 
 16690 ;; Return value:  Size  Location     Type
 16691 ;;                  2   23[BANK1 ] int 
 16692 ;; Registers used:
 16693 ;;		wreg, status,2, status,0
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16699 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16700 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16702 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16703 ;;Total ram usage:        6 bytes
 16704 ;; Hardware stack levels used:    1
 16705 ;; Hardware stack levels required when called:   14
 16706 ;; This function calls:
 16707 ;;		Nothing
 16708 ;; This function is called by:
 16709 ;;		_fround
 16710 ;;		_scale
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text37
 16715  016068                     __ptext37:
 16716                           	opt stack 0
 16717  016068                     ___awmod:
 16718                           	opt stack 12
 16719                           
 16720                           ;incstack = 0
 16721  016068  0E00               	movlw	0
 16722  01606A  0101               	movlb	1	; () banked
 16723  01606C  6F1C               	movwf	___awmod@sign& (0+255),b
 16724                           
 16725                           ; BSR set to: 1
 16726  01606E  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 16727  016070  D006               	goto	l1679
 16728                           
 16729                           ; BSR set to: 1
 16730  016072  6D17               	negf	___awmod@dividend& (0+255),b
 16731  016074  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 16732  016076  B0D8               	btfsc	status,0,c
 16733  016078  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 16734                           
 16735                           ; BSR set to: 1
 16736  01607A  0E01               	movlw	1
 16737  01607C  6F1C               	movwf	___awmod@sign& (0+255),b
 16738  01607E                     l1679:
 16739                           
 16740                           ; BSR set to: 1
 16741                           
 16742                           ; BSR set to: 1
 16743  01607E  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16744  016080  D004               	goto	l1680
 16745                           
 16746                           ; BSR set to: 1
 16747  016082  6D19               	negf	___awmod@divisor& (0+255),b
 16748  016084  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 16749  016086  B0D8               	btfsc	status,0,c
 16750  016088  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 16751  01608A                     l1680:
 16752                           
 16753                           ; BSR set to: 1
 16754                           
 16755                           ; BSR set to: 1
 16756  01608A  5119               	movf	___awmod@divisor& (0+255),w,b
 16757  01608C  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16758  01608E  B4D8               	btfsc	status,2,c
 16759  016090  D018               	goto	l1687
 16760                           
 16761                           ; BSR set to: 1
 16762  016092  0E01               	movlw	1
 16763  016094  6F1B               	movwf	___awmod@counter& (0+255),b
 16764  016096  D004               	goto	l1682
 16765  016098                     
 16766                           ; BSR set to: 1
 16767                           
 16768                           ; BSR set to: 1
 16769  016098  90D8               	bcf	status,0,c
 16770  01609A  3719               	rlcf	___awmod@divisor& (0+255),f,b
 16771  01609C  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16772  01609E  2B1B               	incf	___awmod@counter& (0+255),f,b
 16773  0160A0                     l1682:
 16774                           
 16775                           ; BSR set to: 1
 16776                           
 16777                           ; BSR set to: 1
 16778  0160A0  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16779  0160A2  D7FA               	goto	l1683
 16780  0160A4                     u10530:
 16781                           
 16782                           ; BSR set to: 1
 16783                           
 16784                           ; BSR set to: 1
 16785                           
 16786                           ; BSR set to: 1
 16787  0160A4  5119               	movf	___awmod@divisor& (0+255),w,b
 16788  0160A6  5D17               	subwf	___awmod@dividend& (0+255),w,b
 16789  0160A8  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 16790  0160AA  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16791  0160AC  A0D8               	btfss	status,0,c
 16792  0160AE  D004               	goto	l1686
 16793                           
 16794                           ; BSR set to: 1
 16795  0160B0  5119               	movf	___awmod@divisor& (0+255),w,b
 16796  0160B2  5F17               	subwf	___awmod@dividend& (0+255),f,b
 16797  0160B4  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 16798  0160B6  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16799  0160B8                     l1686:
 16800                           
 16801                           ; BSR set to: 1
 16802                           
 16803                           ; BSR set to: 1
 16804  0160B8  90D8               	bcf	status,0,c
 16805  0160BA  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16806  0160BC  3319               	rrcf	___awmod@divisor& (0+255),f,b
 16807                           
 16808                           ; BSR set to: 1
 16809  0160BE  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 16810  0160C0  D7F1               	goto	u10530
 16811  0160C2                     l1687:
 16812                           
 16813                           ; BSR set to: 1
 16814                           
 16815                           ; BSR set to: 1
 16816                           
 16817                           ; BSR set to: 1
 16818  0160C2  511C               	movf	___awmod@sign& (0+255),w,b
 16819  0160C4  B4D8               	btfsc	status,2,c
 16820  0160C6  D004               	goto	l1688
 16821                           
 16822                           ; BSR set to: 1
 16823  0160C8  6D17               	negf	___awmod@dividend& (0+255),b
 16824  0160CA  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 16825  0160CC  B0D8               	btfsc	status,0,c
 16826  0160CE  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 16827  0160D0                     l1688:
 16828                           
 16829                           ; BSR set to: 1
 16830                           
 16831                           ; BSR set to: 1
 16832  0160D0  C117  F117         	movff	___awmod@dividend,?___awmod
 16833  0160D4  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 16834  0160D8  0012               	return	
 16835  0160DA                     __end_of___awmod:
 16836                           	opt stack 0
 16837                           tblptru	equ	0xFF8
 16838                           tblptrh	equ	0xFF7
 16839                           tblptrl	equ	0xFF6
 16840                           tablat	equ	0xFF5
 16841                           prodh	equ	0xFF4
 16842                           prodl	equ	0xFF3
 16843                           intcon	equ	0xFF2
 16844                           indf0	equ	0xFEF
 16845                           postinc0	equ	0xFEE
 16846                           fsr0h	equ	0xFEA
 16847                           fsr0l	equ	0xFE9
 16848                           wreg	equ	0xFE8
 16849                           indf1	equ	0xFE7
 16850                           postdec1	equ	0xFE5
 16851                           plusw1	equ	0xFE3
 16852                           fsr1h	equ	0xFE2
 16853                           fsr1l	equ	0xFE1
 16854                           indf2	equ	0xFDF
 16855                           postinc2	equ	0xFDE
 16856                           postdec2	equ	0xFDD
 16857                           plusw2	equ	0xFDB
 16858                           fsr2h	equ	0xFDA
 16859                           fsr2l	equ	0xFD9
 16860                           status	equ	0xFD8
 16861                           
 16862 ;; *************** function ___awdiv *****************
 16863 ;; Defined at:
 16864 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16865 ;; Parameters:    Size  Location     Type
 16866 ;;  dividend        2   29[BANK1 ] int 
 16867 ;;  divisor         2   31[BANK1 ] int 
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;  quotient        2   35[BANK1 ] int 
 16870 ;;  sign            1   34[BANK1 ] unsigned char 
 16871 ;;  counter         1   33[BANK1 ] unsigned char 
 16872 ;; Return value:  Size  Location     Type
 16873 ;;                  2   29[BANK1 ] int 
 16874 ;; Registers used:
 16875 ;;		wreg, status,2, status,0
 16876 ;; Tracked objects:
 16877 ;;		On entry : 0/0
 16878 ;;		On exit  : 0/0
 16879 ;;		Unchanged: 0/0
 16880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16881 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16882 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16884 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16885 ;;Total ram usage:        8 bytes
 16886 ;; Hardware stack levels used:    1
 16887 ;; Hardware stack levels required when called:   14
 16888 ;; This function calls:
 16889 ;;		Nothing
 16890 ;; This function is called by:
 16891 ;;		_fround
 16892 ;;		_scale
 16893 ;;		_printf
 16894 ;; This function uses a non-reentrant model
 16895 ;;
 16896                           
 16897                           	psect	text38
 16898  015C68                     __ptext38:
 16899                           	opt stack 0
 16900  015C68                     ___awdiv:
 16901                           	opt stack 12
 16902                           
 16903                           ; BSR set to: 1
 16904                           ;incstack = 0
 16905  015C68  0E00               	movlw	0
 16906  015C6A  0101               	movlb	1	; () banked
 16907  015C6C  6F22               	movwf	___awdiv@sign& (0+255),b
 16908                           
 16909                           ; BSR set to: 1
 16910  015C6E  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16911  015C70  D006               	goto	l1666
 16912                           
 16913                           ; BSR set to: 1
 16914  015C72  6D1F               	negf	___awdiv@divisor& (0+255),b
 16915  015C74  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16916  015C76  B0D8               	btfsc	status,0,c
 16917  015C78  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16918                           
 16919                           ; BSR set to: 1
 16920  015C7A  0E01               	movlw	1
 16921  015C7C  6F22               	movwf	___awdiv@sign& (0+255),b
 16922  015C7E                     l1666:
 16923                           
 16924                           ; BSR set to: 1
 16925                           
 16926                           ; BSR set to: 1
 16927  015C7E  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 16928  015C80  D006               	goto	l1667
 16929                           
 16930                           ; BSR set to: 1
 16931  015C82  6D1D               	negf	___awdiv@dividend& (0+255),b
 16932  015C84  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16933  015C86  B0D8               	btfsc	status,0,c
 16934  015C88  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16935                           
 16936                           ; BSR set to: 1
 16937  015C8A  0E01               	movlw	1
 16938  015C8C  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 16939  015C8E                     l1667:
 16940                           
 16941                           ; BSR set to: 1
 16942                           
 16943                           ; BSR set to: 1
 16944  015C8E  0E00               	movlw	0
 16945  015C90  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 16946  015C92  0E00               	movlw	0
 16947  015C94  6F23               	movwf	___awdiv@quotient& (0+255),b
 16948                           
 16949                           ; BSR set to: 1
 16950  015C96  511F               	movf	___awdiv@divisor& (0+255),w,b
 16951  015C98  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 16952  015C9A  B4D8               	btfsc	status,2,c
 16953  015C9C  D01C               	goto	l1674
 16954                           
 16955                           ; BSR set to: 1
 16956  015C9E  0E01               	movlw	1
 16957  015CA0  6F21               	movwf	___awdiv@counter& (0+255),b
 16958  015CA2  D004               	goto	l1669
 16959  015CA4                     
 16960                           ; BSR set to: 1
 16961                           
 16962                           ; BSR set to: 1
 16963  015CA4  90D8               	bcf	status,0,c
 16964  015CA6  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 16965  015CA8  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16966  015CAA  2B21               	incf	___awdiv@counter& (0+255),f,b
 16967  015CAC                     l1669:
 16968                           
 16969                           ; BSR set to: 1
 16970                           
 16971                           ; BSR set to: 1
 16972  015CAC  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16973  015CAE  D7FA               	goto	l1670
 16974  015CB0                     u10470:
 16975                           
 16976                           ; BSR set to: 1
 16977                           
 16978                           ; BSR set to: 1
 16979                           
 16980                           ; BSR set to: 1
 16981  015CB0  90D8               	bcf	status,0,c
 16982  015CB2  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 16983  015CB4  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16984                           
 16985                           ; BSR set to: 1
 16986  015CB6  511F               	movf	___awdiv@divisor& (0+255),w,b
 16987  015CB8  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 16988  015CBA  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16989  015CBC  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16990  015CBE  A0D8               	btfss	status,0,c
 16991  015CC0  D005               	goto	l1673
 16992                           
 16993                           ; BSR set to: 1
 16994  015CC2  511F               	movf	___awdiv@divisor& (0+255),w,b
 16995  015CC4  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 16996  015CC6  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16997  015CC8  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16998                           
 16999                           ; BSR set to: 1
 17000  015CCA  8123               	bsf	___awdiv@quotient& (0+255),0,b
 17001  015CCC                     l1673:
 17002                           
 17003                           ; BSR set to: 1
 17004                           
 17005                           ; BSR set to: 1
 17006  015CCC  90D8               	bcf	status,0,c
 17007  015CCE  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17008  015CD0  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 17009                           
 17010                           ; BSR set to: 1
 17011  015CD2  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 17012  015CD4  D7ED               	goto	u10470
 17013  015CD6                     l1674:
 17014                           
 17015                           ; BSR set to: 1
 17016                           
 17017                           ; BSR set to: 1
 17018                           
 17019                           ; BSR set to: 1
 17020  015CD6  5122               	movf	___awdiv@sign& (0+255),w,b
 17021  015CD8  B4D8               	btfsc	status,2,c
 17022  015CDA  D004               	goto	l1675
 17023                           
 17024                           ; BSR set to: 1
 17025  015CDC  6D23               	negf	___awdiv@quotient& (0+255),b
 17026  015CDE  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17027  015CE0  B0D8               	btfsc	status,0,c
 17028  015CE2  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17029  015CE4                     l1675:
 17030                           
 17031                           ; BSR set to: 1
 17032                           
 17033                           ; BSR set to: 1
 17034  015CE4  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 17035  015CE8  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 17036  015CEC  0012               	return	
 17037  015CEE                     __end_of___awdiv:
 17038                           	opt stack 0
 17039                           tblptru	equ	0xFF8
 17040                           tblptrh	equ	0xFF7
 17041                           tblptrl	equ	0xFF6
 17042                           tablat	equ	0xFF5
 17043                           prodh	equ	0xFF4
 17044                           prodl	equ	0xFF3
 17045                           intcon	equ	0xFF2
 17046                           indf0	equ	0xFEF
 17047                           postinc0	equ	0xFEE
 17048                           fsr0h	equ	0xFEA
 17049                           fsr0l	equ	0xFE9
 17050                           wreg	equ	0xFE8
 17051                           indf1	equ	0xFE7
 17052                           postdec1	equ	0xFE5
 17053                           plusw1	equ	0xFE3
 17054                           fsr1h	equ	0xFE2
 17055                           fsr1l	equ	0xFE1
 17056                           indf2	equ	0xFDF
 17057                           postinc2	equ	0xFDE
 17058                           postdec2	equ	0xFDD
 17059                           plusw2	equ	0xFDB
 17060                           fsr2h	equ	0xFDA
 17061                           fsr2l	equ	0xFD9
 17062                           status	equ	0xFD8
 17063                           
 17064 ;; *************** function __tdiv_to_l_ *****************
 17065 ;; Defined at:
 17066 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;  f1              3   23[BANK1 ] float 
 17069 ;;  f2              3   26[BANK1 ] float 
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;  quot            4   32[BANK1 ] unsigned long 
 17072 ;;  exp1            1   37[BANK1 ] unsigned char 
 17073 ;;  cntr            1   36[BANK1 ] unsigned char 
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  4   23[BANK1 ] unsigned long 
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17083 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17084 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17085 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17086 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17087 ;;Total ram usage:       15 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:   14
 17090 ;; This function calls:
 17091 ;;		Nothing
 17092 ;; This function is called by:
 17093 ;;		_printf
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           	psect	text39
 17098  0147E6                     __ptext39:
 17099                           	opt stack 0
 17100  0147E6                     __tdiv_to_l_:
 17101                           	opt stack 13
 17102                           
 17103                           ; BSR set to: 1
 17104                           ;incstack = 0
 17105  0147E6  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 17106  0147EA  0101               	movlb	1	; () banked
 17107  0147EC  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17108  0147EE  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17109  0147F0  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17110  0147F2  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17111  0147F4  E301               	bnc	u10761
 17112  0147F6  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17113  0147F8                     u10761:
 17114  0147F8  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17115  0147FA  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 17116  0147FC  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17117  0147FE  A4D8               	btfss	status,2,c
 17118  014800  D009               	goto	l1814
 17119                           
 17120                           ; BSR set to: 1
 17121  014802  0E00               	movlw	0
 17122  014804  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17123  014806  0E00               	movlw	0
 17124  014808  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17125  01480A  0E00               	movlw	0
 17126  01480C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17127  01480E  0E00               	movlw	0
 17128  014810  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17129                           
 17130                           ; BSR set to: 1
 17131  014812  0012               	return	
 17132  014814                     l1814:
 17133                           
 17134                           ; BSR set to: 1
 17135                           
 17136                           ; BSR set to: 1
 17137  014814  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 17138  014818  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17139  01481A  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17140  01481C  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17141  01481E  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17142  014820  E301               	bnc	u10781
 17143  014822  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17144  014824                     u10781:
 17145  014824  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17146  014826  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17147  014828  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17148  01482A  A4D8               	btfss	status,2,c
 17149  01482C  D009               	goto	l1816
 17150                           
 17151                           ; BSR set to: 1
 17152  01482E  0E00               	movlw	0
 17153  014830  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17154  014832  0E00               	movlw	0
 17155  014834  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17156  014836  0E00               	movlw	0
 17157  014838  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17158  01483A  0E00               	movlw	0
 17159  01483C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17160                           
 17161                           ; BSR set to: 1
 17162  01483E  0012               	return	
 17163  014840                     l1816:
 17164                           
 17165                           ; BSR set to: 1
 17166                           
 17167                           ; BSR set to: 1
 17168  014840  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 17169                           
 17170                           ; BSR set to: 1
 17171  014842  0EFF               	movlw	255
 17172  014844  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 17173  014846  0EFF               	movlw	255
 17174  014848  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17175  01484A  0E00               	movlw	0
 17176  01484C  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17177  01484E  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 17178                           
 17179                           ; BSR set to: 1
 17180  014850  0EFF               	movlw	255
 17181  014852  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 17182  014854  0EFF               	movlw	255
 17183  014856  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 17184  014858  0E00               	movlw	0
 17185  01485A  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 17186                           
 17187                           ; BSR set to: 1
 17188  01485C  0E00               	movlw	0
 17189  01485E  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 17190  014860  0E00               	movlw	0
 17191  014862  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 17192  014864  0E00               	movlw	0
 17193  014866  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 17194  014868  0E00               	movlw	0
 17195  01486A  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 17196                           
 17197                           ; BSR set to: 1
 17198  01486C  0E7F               	movlw	127
 17199  01486E  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17200                           
 17201                           ; BSR set to: 1
 17202  014870  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17203  014872  0F98               	addlw	152
 17204  014874  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17205                           
 17206                           ; BSR set to: 1
 17207  014876  0E18               	movlw	24
 17208  014878  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17209  01487A                     l1817:
 17210                           
 17211                           ; BSR set to: 1
 17212  01487A  90D8               	bcf	status,0,c
 17213  01487C  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17214  01487E  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17215  014880  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17216  014882  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17217                           
 17218                           ; BSR set to: 1
 17219  014884  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17220  014886  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 17221  014888  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17222  01488A  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17223  01488C  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17224  01488E  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 17225  014890  A0D8               	btfss	status,0,c
 17226  014892  D007               	goto	l1818
 17227                           
 17228                           ; BSR set to: 1
 17229  014894  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17230  014896  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 17231  014898  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17232  01489A  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17233  01489C  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17234  01489E  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17235                           
 17236                           ; BSR set to: 1
 17237  0148A0  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 17238  0148A2                     l1818:
 17239                           
 17240                           ; BSR set to: 1
 17241  0148A2  90D8               	bcf	status,0,c
 17242  0148A4  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 17243  0148A6  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17244  0148A8  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17245                           
 17246                           ; BSR set to: 1
 17247  0148AA  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 17248  0148AC  D7E6               	goto	l1817
 17249                           
 17250                           ; BSR set to: 1
 17251                           
 17252                           ; BSR set to: 1
 17253  0148AE  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 17254  0148B0  D016               	goto	l1820
 17255                           
 17256                           ; BSR set to: 1
 17257  0148B2  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17258  0148B4  0A80               	xorlw	128
 17259  0148B6  0F97               	addlw	151
 17260  0148B8  B0D8               	btfsc	status,0,c
 17261  0148BA  D009               	goto	l1821
 17262                           
 17263                           ; BSR set to: 1
 17264  0148BC  0E00               	movlw	0
 17265  0148BE  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17266  0148C0  0E00               	movlw	0
 17267  0148C2  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17268  0148C4  0E00               	movlw	0
 17269  0148C6  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17270  0148C8  0E00               	movlw	0
 17271  0148CA  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17272                           
 17273                           ; BSR set to: 1
 17274  0148CC  0012               	return	
 17275  0148CE                     l1821:
 17276                           
 17277                           ; BSR set to: 1
 17278                           
 17279                           ; BSR set to: 1
 17280                           
 17281                           ; BSR set to: 1
 17282  0148CE  90D8               	bcf	status,0,c
 17283  0148D0  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17284  0148D2  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17285  0148D4  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17286  0148D6  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 17287                           
 17288                           ; BSR set to: 1
 17289  0148D8  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 17290  0148DA  D7F9               	goto	l1821
 17291                           
 17292                           ; BSR set to: 1
 17293  0148DC  D015               	goto	u10840
 17294  0148DE                     l1820:
 17295                           
 17296                           ; BSR set to: 1
 17297                           
 17298                           ; BSR set to: 1
 17299  0148DE  0E17               	movlw	23
 17300  0148E0  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 17301  0148E2  D00F               	goto	l1826
 17302                           
 17303                           ; BSR set to: 1
 17304  0148E4  0E00               	movlw	0
 17305  0148E6  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17306  0148E8  0E00               	movlw	0
 17307  0148EA  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17308  0148EC  0E00               	movlw	0
 17309  0148EE  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17310  0148F0  0E00               	movlw	0
 17311  0148F2  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17312                           
 17313                           ; BSR set to: 1
 17314  0148F4  0012               	return	
 17315  0148F6                     
 17316                           ; BSR set to: 1
 17317                           
 17318                           ; BSR set to: 1
 17319  0148F6  90D8               	bcf	status,0,c
 17320  0148F8  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17321  0148FA  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17322  0148FC  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17323  0148FE  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17324  014900  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 17325  014902                     l1826:
 17326                           
 17327                           ; BSR set to: 1
 17328                           
 17329                           ; BSR set to: 1
 17330  014902  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17331  014904  A4D8               	btfss	status,2,c
 17332  014906  D7F7               	goto	l1827
 17333  014908                     u10840:
 17334                           
 17335                           ; BSR set to: 1
 17336                           
 17337                           ; BSR set to: 1
 17338  014908  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 17339  01490C  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 17340  014910  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 17341  014914  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 17342                           
 17343                           ; BSR set to: 1
 17344  014918  0012               	return		;funcret
 17345  01491A                     __end_of__tdiv_to_l_:
 17346                           	opt stack 0
 17347                           tblptru	equ	0xFF8
 17348                           tblptrh	equ	0xFF7
 17349                           tblptrl	equ	0xFF6
 17350                           tablat	equ	0xFF5
 17351                           prodh	equ	0xFF4
 17352                           prodl	equ	0xFF3
 17353                           intcon	equ	0xFF2
 17354                           indf0	equ	0xFEF
 17355                           postinc0	equ	0xFEE
 17356                           fsr0h	equ	0xFEA
 17357                           fsr0l	equ	0xFE9
 17358                           wreg	equ	0xFE8
 17359                           indf1	equ	0xFE7
 17360                           postdec1	equ	0xFE5
 17361                           plusw1	equ	0xFE3
 17362                           fsr1h	equ	0xFE2
 17363                           fsr1l	equ	0xFE1
 17364                           indf2	equ	0xFDF
 17365                           postinc2	equ	0xFDE
 17366                           postdec2	equ	0xFDD
 17367                           plusw2	equ	0xFDB
 17368                           fsr2h	equ	0xFDA
 17369                           fsr2l	equ	0xFD9
 17370                           status	equ	0xFD8
 17371                           
 17372 ;; *************** function __div_to_l_ *****************
 17373 ;; Defined at:
 17374 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 17375 ;; Parameters:    Size  Location     Type
 17376 ;;  f1              3   23[BANK1 ] unsigned long 
 17377 ;;  f2              3   26[BANK1 ] unsigned long 
 17378 ;; Auto vars:     Size  Location     Type
 17379 ;;  quot            4   29[BANK1 ] unsigned long 
 17380 ;;  exp1            1   34[BANK1 ] unsigned char 
 17381 ;;  cntr            1   33[BANK1 ] unsigned char 
 17382 ;; Return value:  Size  Location     Type
 17383 ;;                  4   23[BANK1 ] unsigned long 
 17384 ;; Registers used:
 17385 ;;		wreg, status,2, status,0
 17386 ;; Tracked objects:
 17387 ;;		On entry : 0/0
 17388 ;;		On exit  : 0/0
 17389 ;;		Unchanged: 0/0
 17390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17391 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17392 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17394 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17395 ;;Total ram usage:       12 bytes
 17396 ;; Hardware stack levels used:    1
 17397 ;; Hardware stack levels required when called:   14
 17398 ;; This function calls:
 17399 ;;		Nothing
 17400 ;; This function is called by:
 17401 ;;		_printf
 17402 ;; This function uses a non-reentrant model
 17403 ;;
 17404                           
 17405                           	psect	text40
 17406  014A4C                     __ptext40:
 17407                           	opt stack 0
 17408  014A4C                     __div_to_l_:
 17409                           	opt stack 13
 17410                           
 17411                           ; BSR set to: 1
 17412                           ;incstack = 0
 17413  014A4C  0101               	movlb	1	; () banked
 17414  014A4E  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 17415  014A50  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 17416  014A52  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 17417  014A54  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 17418  014A56  A4D8               	btfss	status,2,c
 17419  014A58  D009               	goto	l1710
 17420                           
 17421                           ; BSR set to: 1
 17422  014A5A  0E00               	movlw	0
 17423  014A5C  6F17               	movwf	?__div_to_l_& (0+255),b
 17424  014A5E  0E00               	movlw	0
 17425  014A60  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17426  014A62  0E00               	movlw	0
 17427  014A64  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17428  014A66  0E00               	movlw	0
 17429  014A68  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17430                           
 17431                           ; BSR set to: 1
 17432  014A6A  0012               	return	
 17433  014A6C                     l1710:
 17434                           
 17435                           ; BSR set to: 1
 17436                           
 17437                           ; BSR set to: 1
 17438  014A6C  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 17439  014A6E  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 17440  014A70  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 17441  014A72  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 17442  014A74  A4D8               	btfss	status,2,c
 17443  014A76  D009               	goto	l1712
 17444                           
 17445                           ; BSR set to: 1
 17446  014A78  0E00               	movlw	0
 17447  014A7A  6F17               	movwf	?__div_to_l_& (0+255),b
 17448  014A7C  0E00               	movlw	0
 17449  014A7E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17450  014A80  0E00               	movlw	0
 17451  014A82  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17452  014A84  0E00               	movlw	0
 17453  014A86  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17454                           
 17455                           ; BSR set to: 1
 17456  014A88  0012               	return	
 17457  014A8A                     l1712:
 17458                           
 17459                           ; BSR set to: 1
 17460                           
 17461                           ; BSR set to: 1
 17462  014A8A  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 17463                           
 17464                           ; BSR set to: 1
 17465  014A8C  0EFF               	movlw	255
 17466  014A8E  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 17467  014A90  0EFF               	movlw	255
 17468  014A92  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 17469  014A94  0EFF               	movlw	255
 17470  014A96  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 17471  014A98  0E00               	movlw	0
 17472  014A9A  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 17473                           
 17474                           ; BSR set to: 1
 17475  014A9C  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 17476  014A9E  0EFF               	movlw	255
 17477  014AA0  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 17478  014AA2  0EFF               	movlw	255
 17479  014AA4  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 17480  014AA6  0EFF               	movlw	255
 17481  014AA8  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 17482  014AAA  0E00               	movlw	0
 17483  014AAC  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 17484                           
 17485                           ; BSR set to: 1
 17486  014AAE  0E00               	movlw	0
 17487  014AB0  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 17488  014AB2  0E00               	movlw	0
 17489  014AB4  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 17490  014AB6  0E00               	movlw	0
 17491  014AB8  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 17492  014ABA  0E00               	movlw	0
 17493  014ABC  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 17494                           
 17495                           ; BSR set to: 1
 17496  014ABE  0E7F               	movlw	127
 17497  014AC0  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 17498                           
 17499                           ; BSR set to: 1
 17500  014AC2  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 17501  014AC4  0FA0               	addlw	160
 17502  014AC6  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 17503                           
 17504                           ; BSR set to: 1
 17505  014AC8  0E20               	movlw	32
 17506  014ACA  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 17507  014ACC                     
 17508                           ; BSR set to: 1
 17509                           
 17510                           ; BSR set to: 1
 17511  014ACC  90D8               	bcf	status,0,c
 17512  014ACE  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 17513  014AD0  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 17514  014AD2  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 17515  014AD4  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 17516                           
 17517                           ; BSR set to: 1
 17518  014AD6  511A               	movf	__div_to_l_@f2& (0+255),w,b
 17519  014AD8  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 17520  014ADA  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17521  014ADC  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 17522  014ADE  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17523  014AE0  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 17524  014AE2  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17525  014AE4  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 17526  014AE6  A0D8               	btfss	status,0,c
 17527  014AE8  D009               	goto	l1714
 17528                           
 17529                           ; BSR set to: 1
 17530  014AEA  511A               	movf	__div_to_l_@f2& (0+255),w,b
 17531  014AEC  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 17532  014AEE  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 17533  014AF0  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 17534  014AF2  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 17535  014AF4  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 17536  014AF6  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 17537  014AF8  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 17538                           
 17539                           ; BSR set to: 1
 17540  014AFA  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 17541  014AFC                     l1714:
 17542                           
 17543                           ; BSR set to: 1
 17544                           
 17545                           ; BSR set to: 1
 17546  014AFC  90D8               	bcf	status,0,c
 17547  014AFE  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 17548  014B00  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 17549  014B02  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 17550  014B04  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 17551                           
 17552                           ; BSR set to: 1
 17553  014B06  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 17554  014B08  D7E1               	goto	l1713
 17555                           
 17556                           ; BSR set to: 1
 17557                           
 17558                           ; BSR set to: 1
 17559  014B0A  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 17560  014B0C  D016               	goto	l1716
 17561                           
 17562                           ; BSR set to: 1
 17563  014B0E  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 17564  014B10  0A80               	xorlw	128
 17565  014B12  0F9F               	addlw	159
 17566  014B14  B0D8               	btfsc	status,0,c
 17567  014B16  D009               	goto	l1717
 17568                           
 17569                           ; BSR set to: 1
 17570  014B18  0E00               	movlw	0
 17571  014B1A  6F17               	movwf	?__div_to_l_& (0+255),b
 17572  014B1C  0E00               	movlw	0
 17573  014B1E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17574  014B20  0E00               	movlw	0
 17575  014B22  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17576  014B24  0E00               	movlw	0
 17577  014B26  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17578                           
 17579                           ; BSR set to: 1
 17580  014B28  0012               	return	
 17581  014B2A                     l1717:
 17582                           
 17583                           ; BSR set to: 1
 17584                           
 17585                           ; BSR set to: 1
 17586                           
 17587                           ; BSR set to: 1
 17588  014B2A  90D8               	bcf	status,0,c
 17589  014B2C  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 17590  014B2E  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 17591  014B30  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 17592  014B32  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 17593                           
 17594                           ; BSR set to: 1
 17595  014B34  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 17596  014B36  D7F9               	goto	l1717
 17597                           
 17598                           ; BSR set to: 1
 17599  014B38  D015               	goto	u10910
 17600  014B3A                     l1716:
 17601                           
 17602                           ; BSR set to: 1
 17603                           
 17604                           ; BSR set to: 1
 17605  014B3A  0E1F               	movlw	31
 17606  014B3C  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 17607  014B3E  D00F               	goto	l1722
 17608                           
 17609                           ; BSR set to: 1
 17610  014B40  0E00               	movlw	0
 17611  014B42  6F17               	movwf	?__div_to_l_& (0+255),b
 17612  014B44  0E00               	movlw	0
 17613  014B46  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 17614  014B48  0E00               	movlw	0
 17615  014B4A  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 17616  014B4C  0E00               	movlw	0
 17617  014B4E  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 17618                           
 17619                           ; BSR set to: 1
 17620  014B50  0012               	return	
 17621  014B52                     
 17622                           ; BSR set to: 1
 17623                           
 17624                           ; BSR set to: 1
 17625  014B52  90D8               	bcf	status,0,c
 17626  014B54  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 17627  014B56  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 17628  014B58  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 17629  014B5A  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 17630  014B5C  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 17631  014B5E                     l1722:
 17632                           
 17633                           ; BSR set to: 1
 17634                           
 17635                           ; BSR set to: 1
 17636  014B5E  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 17637  014B60  A4D8               	btfss	status,2,c
 17638  014B62  D7F7               	goto	l1723
 17639  014B64                     u10910:
 17640                           
 17641                           ; BSR set to: 1
 17642                           
 17643                           ; BSR set to: 1
 17644  014B64  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 17645  014B68  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 17646  014B6C  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 17647  014B70  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 17648                           
 17649                           ; BSR set to: 1
 17650  014B74  0012               	return		;funcret
 17651  014B76                     __end_of__div_to_l_:
 17652                           	opt stack 0
 17653                           tblptru	equ	0xFF8
 17654                           tblptrh	equ	0xFF7
 17655                           tblptrl	equ	0xFF6
 17656                           tablat	equ	0xFF5
 17657                           prodh	equ	0xFF4
 17658                           prodl	equ	0xFF3
 17659                           intcon	equ	0xFF2
 17660                           indf0	equ	0xFEF
 17661                           postinc0	equ	0xFEE
 17662                           fsr0h	equ	0xFEA
 17663                           fsr0l	equ	0xFE9
 17664                           wreg	equ	0xFE8
 17665                           indf1	equ	0xFE7
 17666                           postdec1	equ	0xFE5
 17667                           plusw1	equ	0xFE3
 17668                           fsr1h	equ	0xFE2
 17669                           fsr1l	equ	0xFE1
 17670                           indf2	equ	0xFDF
 17671                           postinc2	equ	0xFDE
 17672                           postdec2	equ	0xFDD
 17673                           plusw2	equ	0xFDB
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function ___lltoft *****************
 17679 ;; Defined at:
 17680 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  c               4   31[BANK1 ] unsigned long 
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;  exp             1   39[BANK1 ] unsigned char 
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  3   31[BANK1 ] float 
 17687 ;; Registers used:
 17688 ;;		wreg, status,2, status,0, cstack
 17689 ;; Tracked objects:
 17690 ;;		On entry : 0/0
 17691 ;;		On exit  : 0/0
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17694 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17695 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17696 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17697 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17698 ;;Total ram usage:        9 bytes
 17699 ;; Hardware stack levels used:    1
 17700 ;; Hardware stack levels required when called:   15
 17701 ;; This function calls:
 17702 ;;		___ftpack
 17703 ;; This function is called by:
 17704 ;;		_printf
 17705 ;; This function uses a non-reentrant model
 17706 ;;
 17707                           
 17708                           	psect	text41
 17709  01640E                     __ptext41:
 17710                           	opt stack 0
 17711  01640E                     ___lltoft:
 17712                           	opt stack 12
 17713                           
 17714                           ; BSR set to: 1
 17715                           ;incstack = 0
 17716  01640E  0E8E               	movlw	142
 17717  016410  0101               	movlb	1	; () banked
 17718  016412  6F27               	movwf	___lltoft@exp& (0+255),b
 17719  016414  D006               	goto	l1921
 17720  016416                     
 17721                           ; BSR set to: 1
 17722                           
 17723                           ; BSR set to: 1
 17724  016416  90D8               	bcf	status,0,c
 17725  016418  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 17726  01641A  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 17727  01641C  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 17728  01641E  331F               	rrcf	___lltoft@c& (0+255),f,b
 17729  016420  2B27               	incf	___lltoft@exp& (0+255),f,b
 17730  016422                     l1921:
 17731                           
 17732                           ; BSR set to: 1
 17733                           
 17734                           ; BSR set to: 1
 17735  016422  0E00               	movlw	0
 17736  016424  151F               	andwf	___lltoft@c& (0+255),w,b
 17737  016426  6F23               	movwf	??___lltoft& (0+255),b
 17738  016428  0E00               	movlw	0
 17739  01642A  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 17740  01642C  6F24               	movwf	(??___lltoft+1)& (0+255),b
 17741  01642E  0E00               	movlw	0
 17742  016430  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 17743  016432  6F25               	movwf	(??___lltoft+2)& (0+255),b
 17744  016434  0EFF               	movlw	255
 17745  016436  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 17746  016438  6F26               	movwf	(??___lltoft+3)& (0+255),b
 17747  01643A  5123               	movf	??___lltoft& (0+255),w,b
 17748  01643C  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 17749  01643E  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 17750  016440  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 17751  016442  A4D8               	btfss	status,2,c
 17752  016444  D7E8               	goto	l1922
 17753                           
 17754                           ; BSR set to: 1
 17755                           
 17756                           ; BSR set to: 1
 17757  016446  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 17758  01644A  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 17759  01644E  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 17760  016452  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 17761  016456  0E00               	movlw	0
 17762  016458  6F1B               	movwf	___ftpack@sign& (0+255),b
 17763  01645A  ECBE  F0AB         	call	___ftpack	;wreg free
 17764  01645E  C117  F11F         	movff	?___ftpack,?___lltoft
 17765  016462  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 17766  016466  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 17767  01646A  0012               	return	
 17768  01646C                     __end_of___lltoft:
 17769                           	opt stack 0
 17770                           tblptru	equ	0xFF8
 17771                           tblptrh	equ	0xFF7
 17772                           tblptrl	equ	0xFF6
 17773                           tablat	equ	0xFF5
 17774                           prodh	equ	0xFF4
 17775                           prodl	equ	0xFF3
 17776                           intcon	equ	0xFF2
 17777                           indf0	equ	0xFEF
 17778                           postinc0	equ	0xFEE
 17779                           fsr0h	equ	0xFEA
 17780                           fsr0l	equ	0xFE9
 17781                           wreg	equ	0xFE8
 17782                           indf1	equ	0xFE7
 17783                           postdec1	equ	0xFE5
 17784                           plusw1	equ	0xFE3
 17785                           fsr1h	equ	0xFE2
 17786                           fsr1l	equ	0xFE1
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           plusw2	equ	0xFDB
 17791                           fsr2h	equ	0xFDA
 17792                           fsr2l	equ	0xFD9
 17793                           status	equ	0xFD8
 17794                           
 17795 ;; *************** function ___llmod *****************
 17796 ;; Defined at:
 17797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 17798 ;; Parameters:    Size  Location     Type
 17799 ;;  dividend        4   36[BANK1 ] unsigned long 
 17800 ;;  divisor         4   40[BANK1 ] unsigned long 
 17801 ;; Auto vars:     Size  Location     Type
 17802 ;;  counter         1   44[BANK1 ] unsigned char 
 17803 ;; Return value:  Size  Location     Type
 17804 ;;                  4   36[BANK1 ] unsigned long 
 17805 ;; Registers used:
 17806 ;;		wreg, status,2, status,0
 17807 ;; Tracked objects:
 17808 ;;		On entry : 0/0
 17809 ;;		On exit  : 0/0
 17810 ;;		Unchanged: 0/0
 17811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17812 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17813 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17815 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17816 ;;Total ram usage:        9 bytes
 17817 ;; Hardware stack levels used:    1
 17818 ;; Hardware stack levels required when called:   14
 17819 ;; This function calls:
 17820 ;;		Nothing
 17821 ;; This function is called by:
 17822 ;;		_printf
 17823 ;; This function uses a non-reentrant model
 17824 ;;
 17825                           
 17826                           	psect	text42
 17827  01621C                     __ptext42:
 17828                           	opt stack 0
 17829  01621C                     ___llmod:
 17830                           	opt stack 13
 17831                           
 17832                           ;incstack = 0
 17833  01621C  0101               	movlb	1	; () banked
 17834  01621E  5128               	movf	___llmod@divisor& (0+255),w,b
 17835  016220  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 17836  016222  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 17837  016224  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 17838  016226  B4D8               	btfsc	status,2,c
 17839  016228  D024               	goto	l1915
 17840                           
 17841                           ; BSR set to: 1
 17842  01622A  0E01               	movlw	1
 17843  01622C  6F2C               	movwf	___llmod@counter& (0+255),b
 17844  01622E  D006               	goto	l1910
 17845  016230                     
 17846                           ; BSR set to: 1
 17847                           
 17848                           ; BSR set to: 1
 17849  016230  90D8               	bcf	status,0,c
 17850  016232  3728               	rlcf	___llmod@divisor& (0+255),f,b
 17851  016234  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 17852  016236  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 17853  016238  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 17854  01623A  2B2C               	incf	___llmod@counter& (0+255),f,b
 17855  01623C                     l1910:
 17856                           
 17857                           ; BSR set to: 1
 17858                           
 17859                           ; BSR set to: 1
 17860  01623C  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 17861  01623E  D7F8               	goto	l1911
 17862  016240                     u11170:
 17863                           
 17864                           ; BSR set to: 1
 17865                           
 17866                           ; BSR set to: 1
 17867                           
 17868                           ; BSR set to: 1
 17869  016240  5128               	movf	___llmod@divisor& (0+255),w,b
 17870  016242  5D24               	subwf	___llmod@dividend& (0+255),w,b
 17871  016244  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 17872  016246  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 17873  016248  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 17874  01624A  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 17875  01624C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 17876  01624E  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 17877  016250  A0D8               	btfss	status,0,c
 17878  016252  D008               	goto	l1914
 17879                           
 17880                           ; BSR set to: 1
 17881  016254  5128               	movf	___llmod@divisor& (0+255),w,b
 17882  016256  5F24               	subwf	___llmod@dividend& (0+255),f,b
 17883  016258  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 17884  01625A  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 17885  01625C  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 17886  01625E  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 17887  016260  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 17888  016262  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 17889  016264                     l1914:
 17890                           
 17891                           ; BSR set to: 1
 17892                           
 17893                           ; BSR set to: 1
 17894  016264  90D8               	bcf	status,0,c
 17895  016266  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 17896  016268  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 17897  01626A  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 17898  01626C  3328               	rrcf	___llmod@divisor& (0+255),f,b
 17899                           
 17900                           ; BSR set to: 1
 17901  01626E  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 17902  016270  D7E7               	goto	u11170
 17903  016272                     l1915:
 17904                           
 17905                           ; BSR set to: 1
 17906                           
 17907                           ; BSR set to: 1
 17908  016272  C124  F124         	movff	___llmod@dividend,?___llmod
 17909  016276  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 17910  01627A  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 17911  01627E  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 17912                           
 17913                           ; BSR set to: 1
 17914  016282  0012               	return		;funcret
 17915  016284                     __end_of___llmod:
 17916                           	opt stack 0
 17917                           tblptru	equ	0xFF8
 17918                           tblptrh	equ	0xFF7
 17919                           tblptrl	equ	0xFF6
 17920                           tablat	equ	0xFF5
 17921                           prodh	equ	0xFF4
 17922                           prodl	equ	0xFF3
 17923                           intcon	equ	0xFF2
 17924                           indf0	equ	0xFEF
 17925                           postinc0	equ	0xFEE
 17926                           fsr0h	equ	0xFEA
 17927                           fsr0l	equ	0xFE9
 17928                           wreg	equ	0xFE8
 17929                           indf1	equ	0xFE7
 17930                           postdec1	equ	0xFE5
 17931                           plusw1	equ	0xFE3
 17932                           fsr1h	equ	0xFE2
 17933                           fsr1l	equ	0xFE1
 17934                           indf2	equ	0xFDF
 17935                           postinc2	equ	0xFDE
 17936                           postdec2	equ	0xFDD
 17937                           plusw2	equ	0xFDB
 17938                           fsr2h	equ	0xFDA
 17939                           fsr2l	equ	0xFD9
 17940                           status	equ	0xFD8
 17941                           
 17942 ;; *************** function ___lldiv *****************
 17943 ;; Defined at:
 17944 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 17945 ;; Parameters:    Size  Location     Type
 17946 ;;  dividend        4   23[BANK1 ] unsigned long 
 17947 ;;  divisor         4   27[BANK1 ] unsigned long 
 17948 ;; Auto vars:     Size  Location     Type
 17949 ;;  quotient        4   31[BANK1 ] unsigned long 
 17950 ;;  counter         1   35[BANK1 ] unsigned char 
 17951 ;; Return value:  Size  Location     Type
 17952 ;;                  4   23[BANK1 ] unsigned long 
 17953 ;; Registers used:
 17954 ;;		wreg, status,2, status,0
 17955 ;; Tracked objects:
 17956 ;;		On entry : 0/0
 17957 ;;		On exit  : 0/0
 17958 ;;		Unchanged: 0/0
 17959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17960 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17961 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17963 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17964 ;;Total ram usage:       13 bytes
 17965 ;; Hardware stack levels used:    1
 17966 ;; Hardware stack levels required when called:   14
 17967 ;; This function calls:
 17968 ;;		Nothing
 17969 ;; This function is called by:
 17970 ;;		_printf
 17971 ;; This function uses a non-reentrant model
 17972 ;;
 17973                           
 17974                           	psect	text43
 17975  015CEE                     __ptext43:
 17976                           	opt stack 0
 17977  015CEE                     ___lldiv:
 17978                           	opt stack 13
 17979                           
 17980                           ; BSR set to: 1
 17981                           ;incstack = 0
 17982  015CEE  0E00               	movlw	0
 17983  015CF0  0101               	movlb	1	; () banked
 17984  015CF2  6F1F               	movwf	___lldiv@quotient& (0+255),b
 17985  015CF4  0E00               	movlw	0
 17986  015CF6  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 17987  015CF8  0E00               	movlw	0
 17988  015CFA  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 17989  015CFC  0E00               	movlw	0
 17990  015CFE  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 17991                           
 17992                           ; BSR set to: 1
 17993  015D00  511B               	movf	___lldiv@divisor& (0+255),w,b
 17994  015D02  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 17995  015D04  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 17996  015D06  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 17997  015D08  B4D8               	btfsc	status,2,c
 17998  015D0A  D02A               	goto	l1905
 17999                           
 18000                           ; BSR set to: 1
 18001  015D0C  0E01               	movlw	1
 18002  015D0E  6F23               	movwf	___lldiv@counter& (0+255),b
 18003  015D10  D006               	goto	l1900
 18004  015D12                     
 18005                           ; BSR set to: 1
 18006                           
 18007                           ; BSR set to: 1
 18008  015D12  90D8               	bcf	status,0,c
 18009  015D14  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 18010  015D16  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 18011  015D18  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 18012  015D1A  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 18013  015D1C  2B23               	incf	___lldiv@counter& (0+255),f,b
 18014  015D1E                     l1900:
 18015                           
 18016                           ; BSR set to: 1
 18017                           
 18018                           ; BSR set to: 1
 18019  015D1E  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 18020  015D20  D7F8               	goto	l1901
 18021  015D22                     u11140:
 18022                           
 18023                           ; BSR set to: 1
 18024                           
 18025                           ; BSR set to: 1
 18026                           
 18027                           ; BSR set to: 1
 18028  015D22  90D8               	bcf	status,0,c
 18029  015D24  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 18030  015D26  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 18031  015D28  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 18032  015D2A  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 18033                           
 18034                           ; BSR set to: 1
 18035  015D2C  511B               	movf	___lldiv@divisor& (0+255),w,b
 18036  015D2E  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 18037  015D30  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18038  015D32  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 18039  015D34  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18040  015D36  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 18041  015D38  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18042  015D3A  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 18043  015D3C  A0D8               	btfss	status,0,c
 18044  015D3E  D009               	goto	l1904
 18045                           
 18046                           ; BSR set to: 1
 18047  015D40  511B               	movf	___lldiv@divisor& (0+255),w,b
 18048  015D42  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 18049  015D44  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18050  015D46  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 18051  015D48  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18052  015D4A  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 18053  015D4C  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18054  015D4E  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 18055                           
 18056                           ; BSR set to: 1
 18057  015D50  811F               	bsf	___lldiv@quotient& (0+255),0,b
 18058  015D52                     l1904:
 18059                           
 18060                           ; BSR set to: 1
 18061                           
 18062                           ; BSR set to: 1
 18063  015D52  90D8               	bcf	status,0,c
 18064  015D54  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 18065  015D56  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 18066  015D58  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 18067  015D5A  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 18068                           
 18069                           ; BSR set to: 1
 18070  015D5C  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 18071  015D5E  D7E1               	goto	u11140
 18072  015D60                     l1905:
 18073                           
 18074                           ; BSR set to: 1
 18075                           
 18076                           ; BSR set to: 1
 18077  015D60  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 18078  015D64  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 18079  015D68  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 18080  015D6C  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 18081                           
 18082                           ; BSR set to: 1
 18083  015D70  0012               	return		;funcret
 18084  015D72                     __end_of___lldiv:
 18085                           	opt stack 0
 18086                           tblptru	equ	0xFF8
 18087                           tblptrh	equ	0xFF7
 18088                           tblptrl	equ	0xFF6
 18089                           tablat	equ	0xFF5
 18090                           prodh	equ	0xFF4
 18091                           prodl	equ	0xFF3
 18092                           intcon	equ	0xFF2
 18093                           indf0	equ	0xFEF
 18094                           postinc0	equ	0xFEE
 18095                           fsr0h	equ	0xFEA
 18096                           fsr0l	equ	0xFE9
 18097                           wreg	equ	0xFE8
 18098                           indf1	equ	0xFE7
 18099                           postdec1	equ	0xFE5
 18100                           plusw1	equ	0xFE3
 18101                           fsr1h	equ	0xFE2
 18102                           fsr1l	equ	0xFE1
 18103                           indf2	equ	0xFDF
 18104                           postinc2	equ	0xFDE
 18105                           postdec2	equ	0xFDD
 18106                           plusw2	equ	0xFDB
 18107                           fsr2h	equ	0xFDA
 18108                           fsr2l	equ	0xFD9
 18109                           status	equ	0xFD8
 18110                           
 18111 ;; *************** function ___fttol *****************
 18112 ;; Defined at:
 18113 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 18114 ;; Parameters:    Size  Location     Type
 18115 ;;  f1              3   85[BANK1 ] float 
 18116 ;; Auto vars:     Size  Location     Type
 18117 ;;  lval            4   95[BANK1 ] unsigned long 
 18118 ;;  exp1            1   99[BANK1 ] unsigned char 
 18119 ;;  sign1           1   94[BANK1 ] unsigned char 
 18120 ;; Return value:  Size  Location     Type
 18121 ;;                  4   85[BANK1 ] long 
 18122 ;; Registers used:
 18123 ;;		wreg, status,2, status,0
 18124 ;; Tracked objects:
 18125 ;;		On entry : 0/0
 18126 ;;		On exit  : 0/0
 18127 ;;		Unchanged: 0/0
 18128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18129 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18130 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18131 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18132 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18133 ;;Total ram usage:       15 bytes
 18134 ;; Hardware stack levels used:    1
 18135 ;; Hardware stack levels required when called:   14
 18136 ;; This function calls:
 18137 ;;		Nothing
 18138 ;; This function is called by:
 18139 ;;		_printf
 18140 ;; This function uses a non-reentrant model
 18141 ;;
 18142                           
 18143                           	psect	text44
 18144  014DBA                     __ptext44:
 18145                           	opt stack 0
 18146  014DBA                     ___fttol:
 18147                           	opt stack 13
 18148                           
 18149                           ; BSR set to: 1
 18150                           ;incstack = 0
 18151  014DBA  C157  F159         	movff	___fttol@f1+2,??___fttol
 18152  014DBE  0101               	movlb	1	; () banked
 18153  014DC0  6B5A               	clrf	(??___fttol+1)& (0+255),b
 18154  014DC2  6B5B               	clrf	(??___fttol+2)& (0+255),b
 18155  014DC4  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 18156  014DC6  3759               	rlcf	??___fttol& (0+255),f,b
 18157  014DC8  E301               	bnc	u11051
 18158  014DCA  815A               	bsf	(??___fttol+1)& (0+255),0,b
 18159  014DCC                     u11051:
 18160  014DCC  5159               	movf	??___fttol& (0+255),w,b
 18161  014DCE  6F63               	movwf	___fttol@exp1& (0+255),b
 18162  014DD0  5163               	movf	___fttol@exp1& (0+255),w,b
 18163  014DD2  A4D8               	btfss	status,2,c
 18164  014DD4  D009               	goto	l1859
 18165                           
 18166                           ; BSR set to: 1
 18167  014DD6  0E00               	movlw	0
 18168  014DD8  6F55               	movwf	?___fttol& (0+255),b
 18169  014DDA  0E00               	movlw	0
 18170  014DDC  6F56               	movwf	(?___fttol+1)& (0+255),b
 18171  014DDE  0E00               	movlw	0
 18172  014DE0  6F57               	movwf	(?___fttol+2)& (0+255),b
 18173  014DE2  0E00               	movlw	0
 18174  014DE4  6F58               	movwf	(?___fttol+3)& (0+255),b
 18175                           
 18176                           ; BSR set to: 1
 18177  014DE6  0012               	return	
 18178  014DE8                     l1859:
 18179                           
 18180                           ; BSR set to: 1
 18181                           
 18182                           ; BSR set to: 1
 18183  014DE8  0E17               	movlw	23
 18184  014DEA  6F59               	movwf	??___fttol& (0+255),b
 18185  014DEC  C155  F15A         	movff	___fttol@f1,??___fttol+1
 18186  014DF0  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 18187  014DF4  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 18188  014DF8  2959               	incf	??___fttol& (0+255),w,b
 18189  014DFA  6F5D               	movwf	(??___fttol+4)& (0+255),b
 18190  014DFC  D004               	goto	u11070
 18191  014DFE                     u11075:
 18192  014DFE  90D8               	bcf	status,0,c
 18193  014E00  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 18194  014E02  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 18195  014E04  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 18196  014E06                     u11070:
 18197  014E06  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 18198  014E08  D7FA               	goto	u11075
 18199  014E0A  0101               	movlb	1	; () banked
 18200  014E0C  515A               	movf	(??___fttol+1)& (0+255),w,b
 18201  014E0E  6F5E               	movwf	___fttol@sign1& (0+255),b
 18202                           
 18203                           ; BSR set to: 1
 18204  014E10  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 18205                           
 18206                           ; BSR set to: 1
 18207  014E12  0EFF               	movlw	255
 18208  014E14  1755               	andwf	___fttol@f1& (0+255),f,b
 18209  014E16  0EFF               	movlw	255
 18210  014E18  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 18211  014E1A  0E00               	movlw	0
 18212  014E1C  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 18213                           
 18214                           ; BSR set to: 1
 18215  014E1E  5155               	movf	___fttol@f1& (0+255),w,b
 18216  014E20  6F5F               	movwf	___fttol@lval& (0+255),b
 18217  014E22  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 18218  014E24  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 18219  014E26  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 18220  014E28  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 18221  014E2A  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 18222                           
 18223                           ; BSR set to: 1
 18224  014E2C  0E8E               	movlw	142
 18225  014E2E  5F63               	subwf	___fttol@exp1& (0+255),f,b
 18226                           
 18227                           ; BSR set to: 1
 18228  014E30  AF63               	btfss	___fttol@exp1& (0+255),7,b
 18229  014E32  D016               	goto	l1861
 18230                           
 18231                           ; BSR set to: 1
 18232  014E34  5163               	movf	___fttol@exp1& (0+255),w,b
 18233  014E36  0A80               	xorlw	128
 18234  014E38  0F8F               	addlw	143
 18235  014E3A  B0D8               	btfsc	status,0,c
 18236  014E3C  D009               	goto	l1862
 18237                           
 18238                           ; BSR set to: 1
 18239  014E3E  0E00               	movlw	0
 18240  014E40  6F55               	movwf	?___fttol& (0+255),b
 18241  014E42  0E00               	movlw	0
 18242  014E44  6F56               	movwf	(?___fttol+1)& (0+255),b
 18243  014E46  0E00               	movlw	0
 18244  014E48  6F57               	movwf	(?___fttol+2)& (0+255),b
 18245  014E4A  0E00               	movlw	0
 18246  014E4C  6F58               	movwf	(?___fttol+3)& (0+255),b
 18247                           
 18248                           ; BSR set to: 1
 18249  014E4E  0012               	return	
 18250  014E50                     l1862:
 18251                           
 18252                           ; BSR set to: 1
 18253                           
 18254                           ; BSR set to: 1
 18255                           
 18256                           ; BSR set to: 1
 18257  014E50  90D8               	bcf	status,0,c
 18258  014E52  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 18259  014E54  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 18260  014E56  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 18261  014E58  335F               	rrcf	___fttol@lval& (0+255),f,b
 18262                           
 18263                           ; BSR set to: 1
 18264  014E5A  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 18265  014E5C  D7F9               	goto	l1862
 18266                           
 18267                           ; BSR set to: 1
 18268  014E5E  D015               	goto	u11110
 18269  014E60                     l1861:
 18270                           
 18271                           ; BSR set to: 1
 18272                           
 18273                           ; BSR set to: 1
 18274  014E60  0E17               	movlw	23
 18275  014E62  6563               	cpfsgt	___fttol@exp1& (0+255),b
 18276  014E64  D00F               	goto	l1867
 18277                           
 18278                           ; BSR set to: 1
 18279  014E66  0E00               	movlw	0
 18280  014E68  6F55               	movwf	?___fttol& (0+255),b
 18281  014E6A  0E00               	movlw	0
 18282  014E6C  6F56               	movwf	(?___fttol+1)& (0+255),b
 18283  014E6E  0E00               	movlw	0
 18284  014E70  6F57               	movwf	(?___fttol+2)& (0+255),b
 18285  014E72  0E00               	movlw	0
 18286  014E74  6F58               	movwf	(?___fttol+3)& (0+255),b
 18287                           
 18288                           ; BSR set to: 1
 18289  014E76  0012               	return	
 18290  014E78                     
 18291                           ; BSR set to: 1
 18292                           
 18293                           ; BSR set to: 1
 18294  014E78  90D8               	bcf	status,0,c
 18295  014E7A  375F               	rlcf	___fttol@lval& (0+255),f,b
 18296  014E7C  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 18297  014E7E  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 18298  014E80  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 18299  014E82  0763               	decf	___fttol@exp1& (0+255),f,b
 18300  014E84                     l1867:
 18301                           
 18302                           ; BSR set to: 1
 18303                           
 18304                           ; BSR set to: 1
 18305  014E84  5163               	movf	___fttol@exp1& (0+255),w,b
 18306  014E86  A4D8               	btfss	status,2,c
 18307  014E88  D7F7               	goto	l1868
 18308  014E8A                     u11110:
 18309                           
 18310                           ; BSR set to: 1
 18311                           
 18312                           ; BSR set to: 1
 18313                           
 18314                           ; BSR set to: 1
 18315  014E8A  515E               	movf	___fttol@sign1& (0+255),w,b
 18316  014E8C  B4D8               	btfsc	status,2,c
 18317  014E8E  D008               	goto	l1870
 18318                           
 18319                           ; BSR set to: 1
 18320  014E90  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 18321  014E92  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 18322  014E94  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 18323  014E96  6D5F               	negf	___fttol@lval& (0+255),b
 18324  014E98  0E00               	movlw	0
 18325  014E9A  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 18326  014E9C  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 18327  014E9E  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 18328  014EA0                     l1870:
 18329                           
 18330                           ; BSR set to: 1
 18331                           
 18332                           ; BSR set to: 1
 18333  014EA0  C15F  F155         	movff	___fttol@lval,?___fttol
 18334  014EA4  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 18335  014EA8  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 18336  014EAC  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 18337  014EB0  0012               	return	
 18338  014EB2                     __end_of___fttol:
 18339                           	opt stack 0
 18340                           tblptru	equ	0xFF8
 18341                           tblptrh	equ	0xFF7
 18342                           tblptrl	equ	0xFF6
 18343                           tablat	equ	0xFF5
 18344                           prodh	equ	0xFF4
 18345                           prodl	equ	0xFF3
 18346                           intcon	equ	0xFF2
 18347                           indf0	equ	0xFEF
 18348                           postinc0	equ	0xFEE
 18349                           fsr0h	equ	0xFEA
 18350                           fsr0l	equ	0xFE9
 18351                           wreg	equ	0xFE8
 18352                           indf1	equ	0xFE7
 18353                           postdec1	equ	0xFE5
 18354                           plusw1	equ	0xFE3
 18355                           fsr1h	equ	0xFE2
 18356                           fsr1l	equ	0xFE1
 18357                           indf2	equ	0xFDF
 18358                           postinc2	equ	0xFDE
 18359                           postdec2	equ	0xFDD
 18360                           plusw2	equ	0xFDB
 18361                           fsr2h	equ	0xFDA
 18362                           fsr2l	equ	0xFD9
 18363                           status	equ	0xFD8
 18364                           
 18365 ;; *************** function ___ftsub *****************
 18366 ;; Defined at:
 18367 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 18368 ;; Parameters:    Size  Location     Type
 18369 ;;  f1              3   55[BANK1 ] float 
 18370 ;;  f2              3   58[BANK1 ] float 
 18371 ;; Auto vars:     Size  Location     Type
 18372 ;;		None
 18373 ;; Return value:  Size  Location     Type
 18374 ;;                  3   55[BANK1 ] float 
 18375 ;; Registers used:
 18376 ;;		wreg, status,2, status,0, cstack
 18377 ;; Tracked objects:
 18378 ;;		On entry : 0/0
 18379 ;;		On exit  : 0/0
 18380 ;;		Unchanged: 0/0
 18381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18382 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18385 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18386 ;;Total ram usage:        6 bytes
 18387 ;; Hardware stack levels used:    1
 18388 ;; Hardware stack levels required when called:   16
 18389 ;; This function calls:
 18390 ;;		___ftadd
 18391 ;; This function is called by:
 18392 ;;		_printf
 18393 ;; This function uses a non-reentrant model
 18394 ;;
 18395                           
 18396                           	psect	text45
 18397  016860                     __ptext45:
 18398                           	opt stack 0
 18399  016860                     ___ftsub:
 18400                           	opt stack 11
 18401                           
 18402                           ; BSR set to: 1
 18403                           ;incstack = 0
 18404  016860  0101               	movlb	1	; () banked
 18405  016862  513A               	movf	___ftsub@f2& (0+255),w,b
 18406  016864  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 18407  016866  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 18408  016868  B4D8               	btfsc	status,2,c
 18409  01686A  D006               	goto	l1855
 18410                           
 18411                           ; BSR set to: 1
 18412  01686C  0E00               	movlw	0
 18413  01686E  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 18414  016870  0E00               	movlw	0
 18415  016872  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 18416  016874  0E80               	movlw	128
 18417  016876  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 18418  016878                     l1855:
 18419                           
 18420                           ; BSR set to: 1
 18421                           
 18422                           ; BSR set to: 1
 18423  016878  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 18424  01687C  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 18425  016880  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 18426  016884  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 18427  016888  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 18428  01688C  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 18429  016890  EC7B  F0A1         	call	___ftadd	;wreg free
 18430  016894  C12B  F137         	movff	?___ftadd,?___ftsub
 18431  016898  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 18432  01689C  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 18433  0168A0  0012               	return	
 18434  0168A2                     __end_of___ftsub:
 18435                           	opt stack 0
 18436                           tblptru	equ	0xFF8
 18437                           tblptrh	equ	0xFF7
 18438                           tblptrl	equ	0xFF6
 18439                           tablat	equ	0xFF5
 18440                           prodh	equ	0xFF4
 18441                           prodl	equ	0xFF3
 18442                           intcon	equ	0xFF2
 18443                           indf0	equ	0xFEF
 18444                           postinc0	equ	0xFEE
 18445                           fsr0h	equ	0xFEA
 18446                           fsr0l	equ	0xFE9
 18447                           wreg	equ	0xFE8
 18448                           indf1	equ	0xFE7
 18449                           postdec1	equ	0xFE5
 18450                           plusw1	equ	0xFE3
 18451                           fsr1h	equ	0xFE2
 18452                           fsr1l	equ	0xFE1
 18453                           indf2	equ	0xFDF
 18454                           postinc2	equ	0xFDE
 18455                           postdec2	equ	0xFDD
 18456                           plusw2	equ	0xFDB
 18457                           fsr2h	equ	0xFDA
 18458                           fsr2l	equ	0xFD9
 18459                           status	equ	0xFD8
 18460                           
 18461 ;; *************** function ___ftadd *****************
 18462 ;; Defined at:
 18463 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 18464 ;; Parameters:    Size  Location     Type
 18465 ;;  f1              3   43[BANK1 ] float 
 18466 ;;  f2              3   46[BANK1 ] float 
 18467 ;; Auto vars:     Size  Location     Type
 18468 ;;  exp1            1   54[BANK1 ] unsigned char 
 18469 ;;  exp2            1   53[BANK1 ] unsigned char 
 18470 ;;  sign            1   52[BANK1 ] unsigned char 
 18471 ;; Return value:  Size  Location     Type
 18472 ;;                  3   43[BANK1 ] float 
 18473 ;; Registers used:
 18474 ;;		wreg, status,2, status,0, cstack
 18475 ;; Tracked objects:
 18476 ;;		On entry : 0/0
 18477 ;;		On exit  : 0/0
 18478 ;;		Unchanged: 0/0
 18479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18480 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18481 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18482 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18483 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18484 ;;Total ram usage:       12 bytes
 18485 ;; Hardware stack levels used:    1
 18486 ;; Hardware stack levels required when called:   15
 18487 ;; This function calls:
 18488 ;;		___ftpack
 18489 ;; This function is called by:
 18490 ;;		_ringBufferLUT
 18491 ;;		_printf
 18492 ;;		___ftsub
 18493 ;; This function uses a non-reentrant model
 18494 ;;
 18495                           
 18496                           	psect	text46
 18497  0142F6                     __ptext46:
 18498                           	opt stack 0
 18499  0142F6                     ___ftadd:
 18500                           	opt stack 11
 18501                           
 18502                           ;incstack = 0
 18503  0142F6  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 18504  0142FA  0101               	movlb	1	; () banked
 18505  0142FC  6B32               	clrf	(??___ftadd+1)& (0+255),b
 18506  0142FE  6B33               	clrf	(??___ftadd+2)& (0+255),b
 18507  014300  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 18508  014302  3731               	rlcf	??___ftadd& (0+255),f,b
 18509  014304  E301               	bnc	u10151
 18510  014306  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 18511  014308                     u10151:
 18512  014308  5131               	movf	??___ftadd& (0+255),w,b
 18513  01430A  6F36               	movwf	___ftadd@exp1& (0+255),b
 18514  01430C  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 18515  014310  6B32               	clrf	(??___ftadd+1)& (0+255),b
 18516  014312  6B33               	clrf	(??___ftadd+2)& (0+255),b
 18517  014314  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 18518  014316  3731               	rlcf	??___ftadd& (0+255),f,b
 18519  014318  E301               	bnc	u10161
 18520  01431A  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 18521  01431C                     u10161:
 18522  01431C  5131               	movf	??___ftadd& (0+255),w,b
 18523  01431E  6F35               	movwf	___ftadd@exp2& (0+255),b
 18524                           
 18525                           ; BSR set to: 1
 18526  014320  5136               	movf	___ftadd@exp1& (0+255),w,b
 18527  014322  B4D8               	btfsc	status,2,c
 18528  014324  D00B               	goto	u10190
 18529                           
 18530                           ; BSR set to: 1
 18531  014326  5135               	movf	___ftadd@exp2& (0+255),w,b
 18532  014328  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 18533  01432A  B0D8               	btfsc	status,0,c
 18534  01432C  D00E               	goto	l1773
 18535                           
 18536                           ; BSR set to: 1
 18537  01432E  5136               	movf	___ftadd@exp1& (0+255),w,b
 18538  014330  0800               	sublw	0
 18539  014332  2535               	addwf	___ftadd@exp2& (0+255),w,b
 18540  014334  6F31               	movwf	??___ftadd& (0+255),b
 18541  014336  0E18               	movlw	24
 18542  014338  6531               	cpfsgt	??___ftadd& (0+255),b
 18543  01433A  D007               	goto	l1773
 18544  01433C                     u10190:
 18545                           
 18546                           ; BSR set to: 1
 18547  01433C  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 18548  014340  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 18549  014344  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 18550  014348  0012               	return	
 18551  01434A                     l1773:
 18552                           
 18553                           ; BSR set to: 1
 18554                           
 18555                           ; BSR set to: 1
 18556  01434A  5135               	movf	___ftadd@exp2& (0+255),w,b
 18557  01434C  B4D8               	btfsc	status,2,c
 18558  01434E  D00B               	goto	u10220
 18559                           
 18560                           ; BSR set to: 1
 18561  014350  5136               	movf	___ftadd@exp1& (0+255),w,b
 18562  014352  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 18563  014354  B0D8               	btfsc	status,0,c
 18564  014356  D00E               	goto	l1777
 18565                           
 18566                           ; BSR set to: 1
 18567  014358  5135               	movf	___ftadd@exp2& (0+255),w,b
 18568  01435A  0800               	sublw	0
 18569  01435C  2536               	addwf	___ftadd@exp1& (0+255),w,b
 18570  01435E  6F31               	movwf	??___ftadd& (0+255),b
 18571  014360  0E18               	movlw	24
 18572  014362  6531               	cpfsgt	??___ftadd& (0+255),b
 18573  014364  D007               	goto	l1777
 18574  014366                     u10220:
 18575                           
 18576                           ; BSR set to: 1
 18577  014366  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 18578  01436A  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 18579  01436E  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 18580  014372  0012               	return	
 18581  014374                     l1777:
 18582                           
 18583                           ; BSR set to: 1
 18584                           
 18585                           ; BSR set to: 1
 18586  014374  0E06               	movlw	6
 18587  014376  6F34               	movwf	___ftadd@sign& (0+255),b
 18588                           
 18589                           ; BSR set to: 1
 18590  014378  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 18591                           
 18592                           ; BSR set to: 1
 18593  01437A  8F34               	bsf	___ftadd@sign& (0+255),7,b
 18594                           
 18595                           ; BSR set to: 1
 18596                           
 18597                           ; BSR set to: 1
 18598  01437C  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 18599                           
 18600                           ; BSR set to: 1
 18601  01437E  8D34               	bsf	___ftadd@sign& (0+255),6,b
 18602                           
 18603                           ; BSR set to: 1
 18604  014380  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 18605                           
 18606                           ; BSR set to: 1
 18607  014382  0EFF               	movlw	255
 18608  014384  172B               	andwf	___ftadd@f1& (0+255),f,b
 18609  014386  0EFF               	movlw	255
 18610  014388  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 18611  01438A  0E00               	movlw	0
 18612  01438C  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 18613  01438E  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 18614                           
 18615                           ; BSR set to: 1
 18616  014390  0EFF               	movlw	255
 18617  014392  172E               	andwf	___ftadd@f2& (0+255),f,b
 18618  014394  0EFF               	movlw	255
 18619  014396  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 18620  014398  0E00               	movlw	0
 18621  01439A  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 18622                           
 18623                           ; BSR set to: 1
 18624  01439C  5135               	movf	___ftadd@exp2& (0+255),w,b
 18625  01439E  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 18626  0143A0  B0D8               	btfsc	status,0,c
 18627  0143A2  D01B               	goto	l1782
 18628  0143A4                     u10250:
 18629                           
 18630                           ; BSR set to: 1
 18631                           
 18632                           ; BSR set to: 1
 18633  0143A4  90D8               	bcf	status,0,c
 18634  0143A6  372E               	rlcf	___ftadd@f2& (0+255),f,b
 18635  0143A8  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 18636  0143AA  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 18637  0143AC  0735               	decf	___ftadd@exp2& (0+255),f,b
 18638                           
 18639                           ; BSR set to: 1
 18640  0143AE  5136               	movf	___ftadd@exp1& (0+255),w,b
 18641  0143B0  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 18642  0143B2  B4D8               	btfsc	status,2,c
 18643  0143B4  D00D               	goto	l1787
 18644                           
 18645                           ; BSR set to: 1
 18646  0143B6  0734               	decf	___ftadd@sign& (0+255),f,b
 18647  0143B8  C134  F131         	movff	___ftadd@sign,??___ftadd
 18648  0143BC  0E07               	movlw	7
 18649  0143BE  1731               	andwf	??___ftadd& (0+255),f,b
 18650  0143C0  B4D8               	btfsc	status,2,c
 18651  0143C2  D006               	goto	l1787
 18652  0143C4  D7EF               	goto	u10250
 18653  0143C6                     
 18654                           ; BSR set to: 1
 18655                           
 18656                           ; BSR set to: 1
 18657  0143C6  90D8               	bcf	status,0,c
 18658  0143C8  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 18659  0143CA  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 18660  0143CC  332B               	rrcf	___ftadd@f1& (0+255),f,b
 18661  0143CE  2B36               	incf	___ftadd@exp1& (0+255),f,b
 18662  0143D0                     l1787:
 18663                           
 18664                           ; BSR set to: 1
 18665                           
 18666                           ; BSR set to: 1
 18667  0143D0  5135               	movf	___ftadd@exp2& (0+255),w,b
 18668  0143D2  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 18669  0143D4  B4D8               	btfsc	status,2,c
 18670  0143D6  D01F               	goto	u10320
 18671  0143D8  D7F6               	goto	l1788
 18672  0143DA                     l1782:
 18673                           
 18674                           ; BSR set to: 1
 18675                           
 18676                           ; BSR set to: 1
 18677  0143DA  5136               	movf	___ftadd@exp1& (0+255),w,b
 18678  0143DC  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 18679  0143DE  B0D8               	btfsc	status,0,c
 18680  0143E0  D01A               	goto	u10320
 18681  0143E2                     u10290:
 18682                           
 18683                           ; BSR set to: 1
 18684                           
 18685                           ; BSR set to: 1
 18686  0143E2  90D8               	bcf	status,0,c
 18687  0143E4  372B               	rlcf	___ftadd@f1& (0+255),f,b
 18688  0143E6  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 18689  0143E8  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 18690  0143EA  0736               	decf	___ftadd@exp1& (0+255),f,b
 18691                           
 18692                           ; BSR set to: 1
 18693  0143EC  5136               	movf	___ftadd@exp1& (0+255),w,b
 18694  0143EE  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 18695  0143F0  B4D8               	btfsc	status,2,c
 18696  0143F2  D00D               	goto	l1796
 18697                           
 18698                           ; BSR set to: 1
 18699  0143F4  0734               	decf	___ftadd@sign& (0+255),f,b
 18700  0143F6  C134  F131         	movff	___ftadd@sign,??___ftadd
 18701  0143FA  0E07               	movlw	7
 18702  0143FC  1731               	andwf	??___ftadd& (0+255),f,b
 18703  0143FE  B4D8               	btfsc	status,2,c
 18704  014400  D006               	goto	l1796
 18705  014402  D7EF               	goto	u10290
 18706  014404                     
 18707                           ; BSR set to: 1
 18708                           
 18709                           ; BSR set to: 1
 18710  014404  90D8               	bcf	status,0,c
 18711  014406  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 18712  014408  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 18713  01440A  332E               	rrcf	___ftadd@f2& (0+255),f,b
 18714  01440C  2B35               	incf	___ftadd@exp2& (0+255),f,b
 18715  01440E                     l1796:
 18716                           
 18717                           ; BSR set to: 1
 18718                           
 18719                           ; BSR set to: 1
 18720  01440E  5135               	movf	___ftadd@exp2& (0+255),w,b
 18721  014410  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 18722  014412  A4D8               	btfss	status,2,c
 18723  014414  D7F7               	goto	l1797
 18724  014416                     u10320:
 18725                           
 18726                           ; BSR set to: 1
 18727                           
 18728                           ; BSR set to: 1
 18729                           
 18730                           ; BSR set to: 1
 18731  014416  AF34               	btfss	___ftadd@sign& (0+255),7,b
 18732  014418  D00C               	goto	l1799
 18733                           
 18734                           ; BSR set to: 1
 18735  01441A  0EFF               	movlw	255
 18736  01441C  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 18737  01441E  0EFF               	movlw	255
 18738  014420  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 18739  014422  0EFF               	movlw	255
 18740  014424  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 18741  014426  0E01               	movlw	1
 18742  014428  272B               	addwf	___ftadd@f1& (0+255),f,b
 18743  01442A  0E00               	movlw	0
 18744  01442C  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 18745  01442E  0E00               	movlw	0
 18746  014430  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 18747  014432                     l1799:
 18748                           
 18749                           ; BSR set to: 1
 18750  014432  AD34               	btfss	___ftadd@sign& (0+255),6,b
 18751  014434  D00C               	goto	l1800
 18752                           
 18753                           ; BSR set to: 1
 18754  014436  0EFF               	movlw	255
 18755  014438  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 18756  01443A  0EFF               	movlw	255
 18757  01443C  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 18758  01443E  0EFF               	movlw	255
 18759  014440  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 18760  014442  0E01               	movlw	1
 18761  014444  272E               	addwf	___ftadd@f2& (0+255),f,b
 18762  014446  0E00               	movlw	0
 18763  014448  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 18764  01444A  0E00               	movlw	0
 18765  01444C  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 18766  01444E                     l1800:
 18767                           
 18768                           ; BSR set to: 1
 18769                           
 18770                           ; BSR set to: 1
 18771  01444E  0E00               	movlw	0
 18772  014450  6F34               	movwf	___ftadd@sign& (0+255),b
 18773                           
 18774                           ; BSR set to: 1
 18775  014452  512B               	movf	___ftadd@f1& (0+255),w,b
 18776  014454  272E               	addwf	___ftadd@f2& (0+255),f,b
 18777  014456  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 18778  014458  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 18779  01445A  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 18780  01445C  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 18781                           
 18782                           ; BSR set to: 1
 18783  01445E  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 18784  014460  D00E               	goto	l1801
 18785                           
 18786                           ; BSR set to: 1
 18787  014462  0EFF               	movlw	255
 18788  014464  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 18789  014466  0EFF               	movlw	255
 18790  014468  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 18791  01446A  0EFF               	movlw	255
 18792  01446C  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 18793  01446E  0E01               	movlw	1
 18794  014470  272E               	addwf	___ftadd@f2& (0+255),f,b
 18795  014472  0E00               	movlw	0
 18796  014474  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 18797  014476  0E00               	movlw	0
 18798  014478  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 18799                           
 18800                           ; BSR set to: 1
 18801  01447A  0E01               	movlw	1
 18802  01447C  6F34               	movwf	___ftadd@sign& (0+255),b
 18803  01447E                     l1801:
 18804                           
 18805                           ; BSR set to: 1
 18806                           
 18807                           ; BSR set to: 1
 18808  01447E  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 18809  014482  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 18810  014486  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 18811  01448A  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 18812  01448E  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 18813  014492  ECBE  F0AB         	call	___ftpack	;wreg free
 18814  014496  C117  F12B         	movff	?___ftpack,?___ftadd
 18815  01449A  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 18816  01449E  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 18817  0144A2  0012               	return	
 18818  0144A4                     __end_of___ftadd:
 18819                           	opt stack 0
 18820                           tblptru	equ	0xFF8
 18821                           tblptrh	equ	0xFF7
 18822                           tblptrl	equ	0xFF6
 18823                           tablat	equ	0xFF5
 18824                           prodh	equ	0xFF4
 18825                           prodl	equ	0xFF3
 18826                           intcon	equ	0xFF2
 18827                           indf0	equ	0xFEF
 18828                           postinc0	equ	0xFEE
 18829                           fsr0h	equ	0xFEA
 18830                           fsr0l	equ	0xFE9
 18831                           wreg	equ	0xFE8
 18832                           indf1	equ	0xFE7
 18833                           postdec1	equ	0xFE5
 18834                           plusw1	equ	0xFE3
 18835                           fsr1h	equ	0xFE2
 18836                           fsr1l	equ	0xFE1
 18837                           indf2	equ	0xFDF
 18838                           postinc2	equ	0xFDE
 18839                           postdec2	equ	0xFDD
 18840                           plusw2	equ	0xFDB
 18841                           fsr2h	equ	0xFDA
 18842                           fsr2l	equ	0xFD9
 18843                           status	equ	0xFD8
 18844                           
 18845 ;; *************** function ___ftpack *****************
 18846 ;; Defined at:
 18847 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 18848 ;; Parameters:    Size  Location     Type
 18849 ;;  arg             3   23[BANK1 ] unsigned um
 18850 ;;  exp             1   26[BANK1 ] unsigned char 
 18851 ;;  sign            1   27[BANK1 ] unsigned char 
 18852 ;; Auto vars:     Size  Location     Type
 18853 ;;		None
 18854 ;; Return value:  Size  Location     Type
 18855 ;;                  3   23[BANK1 ] float 
 18856 ;; Registers used:
 18857 ;;		wreg, status,2, status,0
 18858 ;; Tracked objects:
 18859 ;;		On entry : 0/0
 18860 ;;		On exit  : 0/0
 18861 ;;		Unchanged: 0/0
 18862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18863 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18865 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18866 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18867 ;;Total ram usage:        8 bytes
 18868 ;; Hardware stack levels used:    1
 18869 ;; Hardware stack levels required when called:   14
 18870 ;; This function calls:
 18871 ;;		Nothing
 18872 ;; This function is called by:
 18873 ;;		___awtoft
 18874 ;;		___ftadd
 18875 ;;		___ftdiv
 18876 ;;		___ftmul
 18877 ;;		___lltoft
 18878 ;; This function uses a non-reentrant model
 18879 ;;
 18880                           
 18881                           	psect	text47
 18882  01577C                     __ptext47:
 18883                           	opt stack 0
 18884  01577C                     ___ftpack:
 18885                           	opt stack 11
 18886                           
 18887                           ;incstack = 0
 18888  01577C  0101               	movlb	1	; () banked
 18889  01577E  511A               	movf	___ftpack@exp& (0+255),w,b
 18890  015780  B4D8               	btfsc	status,2,c
 18891  015782  D005               	goto	u9770
 18892                           
 18893                           ; BSR set to: 1
 18894  015784  5117               	movf	___ftpack@arg& (0+255),w,b
 18895  015786  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 18896  015788  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 18897  01578A  A4D8               	btfss	status,2,c
 18898  01578C  D00C               	goto	l1742
 18899  01578E                     u9770:
 18900                           
 18901                           ; BSR set to: 1
 18902                           
 18903                           ; BSR set to: 1
 18904  01578E  0E00               	movlw	0
 18905  015790  6F17               	movwf	?___ftpack& (0+255),b
 18906  015792  0E00               	movlw	0
 18907  015794  6F18               	movwf	(?___ftpack+1)& (0+255),b
 18908  015796  0E00               	movlw	0
 18909  015798  6F19               	movwf	(?___ftpack+2)& (0+255),b
 18910                           
 18911                           ; BSR set to: 1
 18912  01579A  0012               	return	
 18913  01579C                     
 18914                           ; BSR set to: 1
 18915                           
 18916                           ; BSR set to: 1
 18917  01579C  2B1A               	incf	___ftpack@exp& (0+255),f,b
 18918  01579E  90D8               	bcf	status,0,c
 18919  0157A0  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18920  0157A2  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18921  0157A4  3317               	rrcf	___ftpack@arg& (0+255),f,b
 18922  0157A6                     l1742:
 18923                           
 18924                           ; BSR set to: 1
 18925                           
 18926                           ; BSR set to: 1
 18927  0157A6  0E00               	movlw	0
 18928  0157A8  1517               	andwf	___ftpack@arg& (0+255),w,b
 18929  0157AA  6F1C               	movwf	??___ftpack& (0+255),b
 18930  0157AC  0E00               	movlw	0
 18931  0157AE  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18932  0157B0  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 18933  0157B2  0EFE               	movlw	254
 18934  0157B4  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18935  0157B6  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 18936  0157B8  511C               	movf	??___ftpack& (0+255),w,b
 18937  0157BA  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 18938  0157BC  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 18939  0157BE  B4D8               	btfsc	status,2,c
 18940  0157C0  D00C               	goto	l1745
 18941  0157C2  D7EC               	goto	l1743
 18942  0157C4                     
 18943                           ; BSR set to: 1
 18944                           
 18945                           ; BSR set to: 1
 18946  0157C4  2B1A               	incf	___ftpack@exp& (0+255),f,b
 18947                           
 18948                           ; BSR set to: 1
 18949  0157C6  0E01               	movlw	1
 18950  0157C8  2717               	addwf	___ftpack@arg& (0+255),f,b
 18951  0157CA  0E00               	movlw	0
 18952  0157CC  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 18953  0157CE  0E00               	movlw	0
 18954  0157D0  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 18955  0157D2  90D8               	bcf	status,0,c
 18956  0157D4  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18957  0157D6  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18958  0157D8  3317               	rrcf	___ftpack@arg& (0+255),f,b
 18959  0157DA                     l1745:
 18960                           
 18961                           ; BSR set to: 1
 18962                           
 18963                           ; BSR set to: 1
 18964  0157DA  0E00               	movlw	0
 18965  0157DC  1517               	andwf	___ftpack@arg& (0+255),w,b
 18966  0157DE  6F1C               	movwf	??___ftpack& (0+255),b
 18967  0157E0  0E00               	movlw	0
 18968  0157E2  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18969  0157E4  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 18970  0157E6  0EFF               	movlw	255
 18971  0157E8  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18972  0157EA  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 18973  0157EC  511C               	movf	??___ftpack& (0+255),w,b
 18974  0157EE  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 18975  0157F0  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 18976  0157F2  B4D8               	btfsc	status,2,c
 18977  0157F4  D006               	goto	l1748
 18978  0157F6  D7E6               	goto	l1746
 18979  0157F8                     
 18980                           ; BSR set to: 1
 18981                           
 18982                           ; BSR set to: 1
 18983  0157F8  071A               	decf	___ftpack@exp& (0+255),f,b
 18984  0157FA  90D8               	bcf	status,0,c
 18985  0157FC  3717               	rlcf	___ftpack@arg& (0+255),f,b
 18986  0157FE  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 18987  015800  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 18988  015802                     l1748:
 18989                           
 18990                           ; BSR set to: 1
 18991                           
 18992                           ; BSR set to: 1
 18993  015802  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 18994  015804  D003               	goto	u9810
 18995                           
 18996                           ; BSR set to: 1
 18997  015806  0E02               	movlw	2
 18998  015808  611A               	cpfslt	___ftpack@exp& (0+255),b
 18999  01580A  D7F6               	goto	l1749
 19000  01580C                     u9810:
 19001                           
 19002                           ; BSR set to: 1
 19003                           
 19004                           ; BSR set to: 1
 19005  01580C  A11A               	btfss	___ftpack@exp& (0+255),0,b
 19006                           
 19007                           ; BSR set to: 1
 19008  01580E  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 19009                           
 19010                           ; BSR set to: 1
 19011                           
 19012                           ; BSR set to: 1
 19013  015810  90D8               	bcf	status,0,c
 19014  015812  331A               	rrcf	___ftpack@exp& (0+255),f,b
 19015  015814  511A               	movf	___ftpack@exp& (0+255),w,b
 19016  015816  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 19017                           
 19018                           ; BSR set to: 1
 19019  015818  511B               	movf	___ftpack@sign& (0+255),w,b
 19020  01581A  A4D8               	btfss	status,2,c
 19021                           
 19022                           ; BSR set to: 1
 19023  01581C  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 19024                           
 19025                           ; BSR set to: 1
 19026                           
 19027                           ; BSR set to: 1
 19028  01581E  C117  F117         	movff	___ftpack@arg,?___ftpack
 19029  015822  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 19030  015826  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 19031  01582A  0012               	return	
 19032  01582C                     __end_of___ftpack:
 19033                           	opt stack 0
 19034                           tblptru	equ	0xFF8
 19035                           tblptrh	equ	0xFF7
 19036                           tblptrl	equ	0xFF6
 19037                           tablat	equ	0xFF5
 19038                           prodh	equ	0xFF4
 19039                           prodl	equ	0xFF3
 19040                           intcon	equ	0xFF2
 19041                           indf0	equ	0xFEF
 19042                           postinc0	equ	0xFEE
 19043                           fsr0h	equ	0xFEA
 19044                           fsr0l	equ	0xFE9
 19045                           wreg	equ	0xFE8
 19046                           indf1	equ	0xFE7
 19047                           postdec1	equ	0xFE5
 19048                           plusw1	equ	0xFE3
 19049                           fsr1h	equ	0xFE2
 19050                           fsr1l	equ	0xFE1
 19051                           indf2	equ	0xFDF
 19052                           postinc2	equ	0xFDE
 19053                           postdec2	equ	0xFDD
 19054                           plusw2	equ	0xFDB
 19055                           fsr2h	equ	0xFDA
 19056                           fsr2l	equ	0xFD9
 19057                           status	equ	0xFD8
 19058                           
 19059 ;; *************** function ___ftneg *****************
 19060 ;; Defined at:
 19061 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 19062 ;; Parameters:    Size  Location     Type
 19063 ;;  f1              3   35[BANK1 ] float 
 19064 ;; Auto vars:     Size  Location     Type
 19065 ;;		None
 19066 ;; Return value:  Size  Location     Type
 19067 ;;                  3   35[BANK1 ] float 
 19068 ;; Registers used:
 19069 ;;		wreg, status,2, status,0
 19070 ;; Tracked objects:
 19071 ;;		On entry : 0/0
 19072 ;;		On exit  : 0/0
 19073 ;;		Unchanged: 0/0
 19074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19075 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19078 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19079 ;;Total ram usage:        3 bytes
 19080 ;; Hardware stack levels used:    1
 19081 ;; Hardware stack levels required when called:   14
 19082 ;; This function calls:
 19083 ;;		Nothing
 19084 ;; This function is called by:
 19085 ;;		_ringBufferLUT
 19086 ;;		_printf
 19087 ;; This function uses a non-reentrant model
 19088 ;;
 19089                           
 19090                           	psect	text48
 19091  016C02                     __ptext48:
 19092                           	opt stack 0
 19093  016C02                     ___ftneg:
 19094                           	opt stack 13
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;incstack = 0
 19098  016C02  0101               	movlb	1	; () banked
 19099  016C04  5123               	movf	___ftneg@f1& (0+255),w,b
 19100  016C06  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 19101  016C08  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 19102  016C0A  B4D8               	btfsc	status,2,c
 19103  016C0C  D006               	goto	l1849
 19104                           
 19105                           ; BSR set to: 1
 19106  016C0E  0E00               	movlw	0
 19107  016C10  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 19108  016C12  0E00               	movlw	0
 19109  016C14  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 19110  016C16  0E80               	movlw	128
 19111  016C18  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 19112  016C1A                     l1849:
 19113                           
 19114                           ; BSR set to: 1
 19115  016C1A  C123  F123         	movff	___ftneg@f1,?___ftneg
 19116  016C1E  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 19117  016C22  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 19118                           
 19119                           ; BSR set to: 1
 19120  016C26  0012               	return		;funcret
 19121  016C28                     __end_of___ftneg:
 19122                           	opt stack 0
 19123                           tblptru	equ	0xFF8
 19124                           tblptrh	equ	0xFF7
 19125                           tblptrl	equ	0xFF6
 19126                           tablat	equ	0xFF5
 19127                           prodh	equ	0xFF4
 19128                           prodl	equ	0xFF3
 19129                           intcon	equ	0xFF2
 19130                           indf0	equ	0xFEF
 19131                           postinc0	equ	0xFEE
 19132                           fsr0h	equ	0xFEA
 19133                           fsr0l	equ	0xFE9
 19134                           wreg	equ	0xFE8
 19135                           indf1	equ	0xFE7
 19136                           postdec1	equ	0xFE5
 19137                           plusw1	equ	0xFE3
 19138                           fsr1h	equ	0xFE2
 19139                           fsr1l	equ	0xFE1
 19140                           indf2	equ	0xFDF
 19141                           postinc2	equ	0xFDE
 19142                           postdec2	equ	0xFDD
 19143                           plusw2	equ	0xFDB
 19144                           fsr2h	equ	0xFDA
 19145                           fsr2l	equ	0xFD9
 19146                           status	equ	0xFD8
 19147                           
 19148 ;; *************** function ___ftge *****************
 19149 ;; Defined at:
 19150 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 19151 ;; Parameters:    Size  Location     Type
 19152 ;;  ff1             3   23[BANK1 ] float 
 19153 ;;  ff2             3   26[BANK1 ] float 
 19154 ;; Auto vars:     Size  Location     Type
 19155 ;;		None
 19156 ;; Return value:  Size  Location     Type
 19157 ;;		None               void
 19158 ;; Registers used:
 19159 ;;		wreg, status,2, status,0
 19160 ;; Tracked objects:
 19161 ;;		On entry : 0/0
 19162 ;;		On exit  : 0/0
 19163 ;;		Unchanged: 0/0
 19164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19165 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19167 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19168 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19169 ;;Total ram usage:        9 bytes
 19170 ;; Hardware stack levels used:    1
 19171 ;; Hardware stack levels required when called:   14
 19172 ;; This function calls:
 19173 ;;		Nothing
 19174 ;; This function is called by:
 19175 ;;		_printf
 19176 ;; This function uses a non-reentrant model
 19177 ;;
 19178                           
 19179                           	psect	text49
 19180  015A2A                     __ptext49:
 19181                           	opt stack 0
 19182  015A2A                     ___ftge:
 19183                           	opt stack 13
 19184                           
 19185                           ; BSR set to: 1
 19186                           ;incstack = 0
 19187  015A2A  0101               	movlb	1	; () banked
 19188  015A2C  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 19189  015A2E  D016               	goto	l1831
 19190                           
 19191                           ; BSR set to: 1
 19192  015A30  C117  F11D         	movff	___ftge@ff1,??___ftge
 19193  015A34  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 19194  015A38  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 19195  015A3C  1F1D               	comf	??___ftge& (0+255),f,b
 19196  015A3E  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 19197  015A40  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 19198  015A42  2B1D               	incf	??___ftge& (0+255),f,b
 19199  015A44  0E00               	movlw	0
 19200  015A46  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 19201  015A48  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 19202  015A4A  0E00               	movlw	0
 19203  015A4C  251D               	addwf	??___ftge& (0+255),w,b
 19204  015A4E  6F17               	movwf	___ftge@ff1& (0+255),b
 19205  015A50  0E00               	movlw	0
 19206  015A52  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 19207  015A54  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 19208  015A56  0E80               	movlw	128
 19209  015A58  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 19210  015A5A  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 19211  015A5C                     l1831:
 19212                           
 19213                           ; BSR set to: 1
 19214                           
 19215                           ; BSR set to: 1
 19216  015A5C  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 19217  015A5E  D016               	goto	l1832
 19218                           
 19219                           ; BSR set to: 1
 19220  015A60  C11A  F11D         	movff	___ftge@ff2,??___ftge
 19221  015A64  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 19222  015A68  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 19223  015A6C  1F1D               	comf	??___ftge& (0+255),f,b
 19224  015A6E  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 19225  015A70  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 19226  015A72  2B1D               	incf	??___ftge& (0+255),f,b
 19227  015A74  0E00               	movlw	0
 19228  015A76  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 19229  015A78  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 19230  015A7A  0E00               	movlw	0
 19231  015A7C  251D               	addwf	??___ftge& (0+255),w,b
 19232  015A7E  6F1A               	movwf	___ftge@ff2& (0+255),b
 19233  015A80  0E00               	movlw	0
 19234  015A82  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 19235  015A84  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 19236  015A86  0E80               	movlw	128
 19237  015A88  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 19238  015A8A  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 19239  015A8C                     l1832:
 19240                           
 19241                           ; BSR set to: 1
 19242                           
 19243                           ; BSR set to: 1
 19244  015A8C  0E00               	movlw	0
 19245  015A8E  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 19246  015A90  0E00               	movlw	0
 19247  015A92  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 19248  015A94  0E80               	movlw	128
 19249  015A96  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 19250                           
 19251                           ; BSR set to: 1
 19252  015A98  0E00               	movlw	0
 19253  015A9A  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 19254  015A9C  0E00               	movlw	0
 19255  015A9E  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 19256  015AA0  0E80               	movlw	128
 19257  015AA2  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 19258  015AA4  511A               	movf	___ftge@ff2& (0+255),w,b
 19259  015AA6  5D17               	subwf	___ftge@ff1& (0+255),w,b
 19260  015AA8  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 19261  015AAA  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 19262  015AAC  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 19263  015AAE  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 19264  015AB0  B0D8               	btfsc	status,0,c
 19265  015AB2  D002               	goto	l9117
 19266                           
 19267                           ; BSR set to: 1
 19268  015AB4  90D8               	bcf	status,0,c
 19269  015AB6  0012               	return	
 19270  015AB8                     l9117:
 19271                           
 19272                           ; BSR set to: 1
 19273                           
 19274                           ; BSR set to: 1
 19275  015AB8  80D8               	bsf	status,0,c
 19276                           
 19277                           ; BSR set to: 1
 19278  015ABA  0012               	return	
 19279  015ABC                     __end_of___ftge:
 19280                           	opt stack 0
 19281                           tblptru	equ	0xFF8
 19282                           tblptrh	equ	0xFF7
 19283                           tblptrl	equ	0xFF6
 19284                           tablat	equ	0xFF5
 19285                           prodh	equ	0xFF4
 19286                           prodl	equ	0xFF3
 19287                           intcon	equ	0xFF2
 19288                           indf0	equ	0xFEF
 19289                           postinc0	equ	0xFEE
 19290                           fsr0h	equ	0xFEA
 19291                           fsr0l	equ	0xFE9
 19292                           wreg	equ	0xFE8
 19293                           indf1	equ	0xFE7
 19294                           postdec1	equ	0xFE5
 19295                           plusw1	equ	0xFE3
 19296                           fsr1h	equ	0xFE2
 19297                           fsr1l	equ	0xFE1
 19298                           indf2	equ	0xFDF
 19299                           postinc2	equ	0xFDE
 19300                           postdec2	equ	0xFDD
 19301                           plusw2	equ	0xFDB
 19302                           fsr2h	equ	0xFDA
 19303                           fsr2l	equ	0xFD9
 19304                           status	equ	0xFD8
 19305                           
 19306 ;; *************** function _getCauseOfReset *****************
 19307 ;; Defined at:
 19308 ;;		line 11 in file "cause_of_reset.c"
 19309 ;; Parameters:    Size  Location     Type
 19310 ;;		None
 19311 ;; Auto vars:     Size  Location     Type
 19312 ;;  return_reset    1   23[BANK1 ] enum E17455
 19313 ;; Return value:  Size  Location     Type
 19314 ;;                  1    wreg      enum E17948
 19315 ;; Registers used:
 19316 ;;		wreg, status,2
 19317 ;; Tracked objects:
 19318 ;;		On entry : 0/0
 19319 ;;		On exit  : 0/0
 19320 ;;		Unchanged: 0/0
 19321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19323 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19325 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19326 ;;Total ram usage:        1 bytes
 19327 ;; Hardware stack levels used:    1
 19328 ;; Hardware stack levels required when called:   14
 19329 ;; This function calls:
 19330 ;;		Nothing
 19331 ;; This function is called by:
 19332 ;;		_main
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text50
 19337  016576                     __ptext50:
 19338                           	opt stack 0
 19339  016576                     _getCauseOfReset:
 19340                           	opt stack 16
 19341                           
 19342                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 19343                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;incstack = 0
 19347  016576  AED7               	btfss	4055,7,c	;volatile
 19348  016578  D002               	goto	l1290
 19349                           
 19350                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 19351  01657A  0E07               	movlw	7
 19352  01657C  D019               	goto	L8
 19353  01657E                     l1290:
 19354                           
 19355                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 19356  01657E  ACD7               	btfss	4055,6,c	;volatile
 19357  016580  D002               	goto	l1292
 19358                           
 19359                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 19360  016582  0E08               	movlw	8
 19361  016584  D015               	goto	L8
 19362  016586                     l1292:
 19363                           
 19364                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 19365  016586  BAD7               	btfsc	4055,5,c	;volatile
 19366  016588  D002               	goto	l1294
 19367                           
 19368                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 19369  01658A  0E05               	movlw	5
 19370  01658C  D011               	goto	L8
 19371  01658E                     l1294:
 19372                           
 19373                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 19374  01658E  B6D7               	btfsc	4055,3,c	;volatile
 19375  016590  D002               	goto	l1296
 19376                           
 19377                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 19378  016592  0E03               	movlw	3
 19379  016594  D00D               	goto	L8
 19380  016596                     l1296:
 19381                           
 19382                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 19383  016596  B4D7               	btfsc	4055,2,c	;volatile
 19384  016598  D002               	goto	l1298
 19385                           
 19386                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 19387  01659A  0E06               	movlw	6
 19388  01659C  D009               	goto	L8
 19389  01659E                     l1298:
 19390                           
 19391                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 19392  01659E  B2D7               	btfsc	4055,1,c	;volatile
 19393  0165A0  D002               	goto	l1300
 19394                           
 19395                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 19396  0165A2  0E01               	movlw	1
 19397  0165A4  D005               	goto	L8
 19398  0165A6                     l1300:
 19399                           
 19400                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 19401  0165A6  B0D7               	btfsc	4055,0,c	;volatile
 19402  0165A8  D002               	goto	l1302
 19403                           
 19404                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 19405  0165AA  0E02               	movlw	2
 19406  0165AC  D001               	goto	L8
 19407  0165AE                     l1302:
 19408                           
 19409                           ;cause_of_reset.c: 60: else {
 19410                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 19411                           
 19412                           ; BSR set to: 1
 19413  0165AE  0E00               	movlw	0
 19414  0165B0                     L8:
 19415  0165B0  0101               	movlb	1	; () banked
 19416  0165B2  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 19417                           
 19418                           ; BSR set to: 1
 19419                           ;cause_of_reset.c: 64: }
 19420                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 19421                           
 19422                           ; BSR set to: 1
 19423                           
 19424                           ; BSR set to: 1
 19425                           
 19426                           ; BSR set to: 1
 19427                           
 19428                           ; BSR set to: 1
 19429                           
 19430                           ; BSR set to: 1
 19431                           
 19432                           ; BSR set to: 1
 19433                           
 19434                           ; BSR set to: 1
 19435  0165B4  9ED7               	bcf	4055,7,c	;volatile
 19436                           
 19437                           ; BSR set to: 1
 19438                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 19439  0165B6  9CD7               	bcf	4055,6,c	;volatile
 19440                           
 19441                           ; BSR set to: 1
 19442                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 19443  0165B8  8AD7               	bsf	4055,5,c	;volatile
 19444                           
 19445                           ; BSR set to: 1
 19446                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 19447  0165BA  88D7               	bsf	4055,4,c	;volatile
 19448                           
 19449                           ; BSR set to: 1
 19450                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 19451  0165BC  86D7               	bsf	4055,3,c	;volatile
 19452                           
 19453                           ; BSR set to: 1
 19454                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 19455  0165BE  84D7               	bsf	4055,2,c	;volatile
 19456                           
 19457                           ; BSR set to: 1
 19458                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 19459  0165C0  82D7               	bsf	4055,1,c	;volatile
 19460                           
 19461                           ; BSR set to: 1
 19462                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 19463  0165C2  80D7               	bsf	4055,0,c	;volatile
 19464                           
 19465                           ;cause_of_reset.c: 76: return return_reset_cause;
 19466  0165C4  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 19467  0165C6  0012               	return	
 19468  0165C8                     __end_of_getCauseOfReset:
 19469                           	opt stack 0
 19470                           tblptru	equ	0xFF8
 19471                           tblptrh	equ	0xFF7
 19472                           tblptrl	equ	0xFF6
 19473                           tablat	equ	0xFF5
 19474                           prodh	equ	0xFF4
 19475                           prodl	equ	0xFF3
 19476                           intcon	equ	0xFF2
 19477                           indf0	equ	0xFEF
 19478                           postinc0	equ	0xFEE
 19479                           fsr0h	equ	0xFEA
 19480                           fsr0l	equ	0xFE9
 19481                           wreg	equ	0xFE8
 19482                           indf1	equ	0xFE7
 19483                           postdec1	equ	0xFE5
 19484                           plusw1	equ	0xFE3
 19485                           fsr1h	equ	0xFE2
 19486                           fsr1l	equ	0xFE1
 19487                           indf2	equ	0xFDF
 19488                           postinc2	equ	0xFDE
 19489                           postdec2	equ	0xFDD
 19490                           plusw2	equ	0xFDB
 19491                           fsr2h	equ	0xFDA
 19492                           fsr2l	equ	0xFD9
 19493                           status	equ	0xFD8
 19494                           
 19495 ;; *************** function _SYSTEM_Initialize *****************
 19496 ;; Defined at:
 19497 ;;		line 50 in file "mcc_generated_files/mcc.c"
 19498 ;; Parameters:    Size  Location     Type
 19499 ;;		None
 19500 ;; Auto vars:     Size  Location     Type
 19501 ;;		None
 19502 ;; Return value:  Size  Location     Type
 19503 ;;                  1    wreg      void 
 19504 ;; Registers used:
 19505 ;;		wreg, status,2, status,0, cstack
 19506 ;; Tracked objects:
 19507 ;;		On entry : 0/0
 19508 ;;		On exit  : 0/0
 19509 ;;		Unchanged: 0/0
 19510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19515 ;;Total ram usage:        0 bytes
 19516 ;; Hardware stack levels used:    1
 19517 ;; Hardware stack levels required when called:   16
 19518 ;; This function calls:
 19519 ;;		_ADCC_Initialize
 19520 ;;		_EUSART2_Initialize
 19521 ;;		_FVR_Initialize
 19522 ;;		_HLVD_Initialize
 19523 ;;		_INTERRUPT_Initialize
 19524 ;;		_OSCILLATOR_Initialize
 19525 ;;		_PIN_MANAGER_Initialize
 19526 ;;		_PMD_Initialize
 19527 ;;		_TMR5_Initialize
 19528 ;;		_TMR6_Initialize
 19529 ;;		_TMR7_Initialize
 19530 ;; This function is called by:
 19531 ;;		_main
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           
 19535                           	psect	text51
 19536  016B36                     __ptext51:
 19537                           	opt stack 0
 19538  016B36                     _SYSTEM_Initialize:
 19539                           	opt stack 14
 19540                           
 19541                           ;mcc.c: 52: INTERRUPT_Initialize();
 19542                           
 19543                           ; BSR set to: 1
 19544                           ;incstack = 0
 19545  016B36  ECD1  F0B6         	call	_INTERRUPT_Initialize	;wreg free
 19546                           
 19547                           ;mcc.c: 53: PMD_Initialize();
 19548  016B3A  EC8E  F0B6         	call	_PMD_Initialize	;wreg free
 19549                           
 19550                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 19551  016B3E  ECC4  F0AC         	call	_PIN_MANAGER_Initialize	;wreg free
 19552                           
 19553                           ;mcc.c: 55: OSCILLATOR_Initialize();
 19554  016B42  EC9C  F0B6         	call	_OSCILLATOR_Initialize	;wreg free
 19555                           
 19556                           ;mcc.c: 56: HLVD_Initialize();
 19557  016B46  EC06  F0B7         	call	_HLVD_Initialize	;wreg free
 19558                           
 19559                           ;mcc.c: 57: FVR_Initialize();
 19560  016B4A  EC58  F0B7         	call	_FVR_Initialize	;wreg free
 19561                           
 19562                           ;mcc.c: 58: TMR7_Initialize();
 19563  016B4E  EC0C  F0B3         	call	_TMR7_Initialize	;wreg free
 19564                           
 19565                           ;mcc.c: 59: TMR6_Initialize();
 19566  016B52  EC52  F0B5         	call	_TMR6_Initialize	;wreg free
 19567                           
 19568                           ;mcc.c: 60: ADCC_Initialize();
 19569  016B56  EC75  F0B1         	call	_ADCC_Initialize	;wreg free
 19570                           
 19571                           ;mcc.c: 61: TMR5_Initialize();
 19572  016B5A  EC7F  F0B3         	call	_TMR5_Initialize	;wreg free
 19573                           
 19574                           ;mcc.c: 62: EUSART2_Initialize();
 19575  016B5E  ECA5  F0B0         	call	_EUSART2_Initialize	;wreg free
 19576  016B62  0012               	return		;funcret
 19577  016B64                     __end_of_SYSTEM_Initialize:
 19578                           	opt stack 0
 19579                           tblptru	equ	0xFF8
 19580                           tblptrh	equ	0xFF7
 19581                           tblptrl	equ	0xFF6
 19582                           tablat	equ	0xFF5
 19583                           prodh	equ	0xFF4
 19584                           prodl	equ	0xFF3
 19585                           intcon	equ	0xFF2
 19586                           indf0	equ	0xFEF
 19587                           postinc0	equ	0xFEE
 19588                           fsr0h	equ	0xFEA
 19589                           fsr0l	equ	0xFE9
 19590                           wreg	equ	0xFE8
 19591                           indf1	equ	0xFE7
 19592                           postdec1	equ	0xFE5
 19593                           plusw1	equ	0xFE3
 19594                           fsr1h	equ	0xFE2
 19595                           fsr1l	equ	0xFE1
 19596                           indf2	equ	0xFDF
 19597                           postinc2	equ	0xFDE
 19598                           postdec2	equ	0xFDD
 19599                           plusw2	equ	0xFDB
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function _TMR7_Initialize *****************
 19605 ;; Defined at:
 19606 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		wreg, status,2, status,0, cstack
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19622 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19623 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19624 ;;Total ram usage:        2 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:   15
 19627 ;; This function calls:
 19628 ;;		_TMR7_SetInterruptHandler
 19629 ;; This function is called by:
 19630 ;;		_SYSTEM_Initialize
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text52
 19635  016618                     __ptext52:
 19636                           	opt stack 0
 19637  016618                     _TMR7_Initialize:
 19638                           	opt stack 14
 19639                           
 19640                           ;tmr7.c: 69: T7GCON = 0x00;
 19641                           
 19642                           ;incstack = 0
 19643  016618  0E00               	movlw	0
 19644  01661A  010F               	movlb	15	; () banked
 19645  01661C  6F31               	movwf	49,b	;volatile
 19646                           
 19647                           ;tmr7.c: 72: T7GATE = 0x00;
 19648  01661E  0E00               	movlw	0
 19649  016620  6F32               	movwf	50,b	;volatile
 19650                           
 19651                           ;tmr7.c: 75: T7CLK = 0x03;
 19652  016622  0E03               	movlw	3
 19653  016624  6F33               	movwf	51,b	;volatile
 19654                           
 19655                           ;tmr7.c: 78: TMR7H = 0x3C;
 19656  016626  0E3C               	movlw	60
 19657  016628  6F2F               	movwf	47,b	;volatile
 19658                           
 19659                           ;tmr7.c: 81: TMR7L = 0xB0;
 19660  01662A  0EB0               	movlw	176
 19661  01662C  6F2E               	movwf	46,b	;volatile
 19662                           
 19663                           ; BSR set to: 15
 19664                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 19665  01662E  512E               	movf	46,w,b	;volatile
 19666  016630  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 19667  016634  0101               	movlb	1	; () banked
 19668  016636  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 19669  016638  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 19670  01663C  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 19671  01663E  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 19672  016640  6FCD               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 19673  016642  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 19674  016644  6FCE               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 19675                           
 19676                           ; BSR set to: 1
 19677                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 19678  016646  010E               	movlb	14	; () banked
 19679  016648  9D38               	bcf	56,6,b	;volatile
 19680                           
 19681                           ; BSR set to: 14
 19682                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 19683  01664A  8D2E               	bsf	46,6,b	;volatile
 19684                           
 19685                           ; BSR set to: 14
 19686                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 19687  01664C  0ED2               	movlw	low _TMR7_DefaultInterruptHandler
 19688  01664E  0101               	movlb	1	; () banked
 19689  016650  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 19690  016652  0E6E               	movlw	high _TMR7_DefaultInterruptHandler
 19691  016654  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19692  016656  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 19693  016658  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 19694  01665A  EC1C  F0B7         	call	_TMR7_SetInterruptHandler	;wreg free
 19695                           
 19696                           ;tmr7.c: 96: T7CON = 0x31;
 19697  01665E  0E31               	movlw	49
 19698  016660  010F               	movlb	15	; () banked
 19699  016662  6F30               	movwf	48,b	;volatile
 19700                           
 19701                           ; BSR set to: 15
 19702  016664  0012               	return		;funcret
 19703  016666                     __end_of_TMR7_Initialize:
 19704                           	opt stack 0
 19705                           tblptru	equ	0xFF8
 19706                           tblptrh	equ	0xFF7
 19707                           tblptrl	equ	0xFF6
 19708                           tablat	equ	0xFF5
 19709                           prodh	equ	0xFF4
 19710                           prodl	equ	0xFF3
 19711                           intcon	equ	0xFF2
 19712                           indf0	equ	0xFEF
 19713                           postinc0	equ	0xFEE
 19714                           fsr0h	equ	0xFEA
 19715                           fsr0l	equ	0xFE9
 19716                           wreg	equ	0xFE8
 19717                           indf1	equ	0xFE7
 19718                           postdec1	equ	0xFE5
 19719                           plusw1	equ	0xFE3
 19720                           fsr1h	equ	0xFE2
 19721                           fsr1l	equ	0xFE1
 19722                           indf2	equ	0xFDF
 19723                           postinc2	equ	0xFDE
 19724                           postdec2	equ	0xFDD
 19725                           plusw2	equ	0xFDB
 19726                           fsr2h	equ	0xFDA
 19727                           fsr2l	equ	0xFD9
 19728                           status	equ	0xFD8
 19729                           
 19730 ;; *************** function _TMR7_SetInterruptHandler *****************
 19731 ;; Defined at:
 19732 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 19733 ;; Parameters:    Size  Location     Type
 19734 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 19735 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 19736 ;; Auto vars:     Size  Location     Type
 19737 ;;		None
 19738 ;; Return value:  Size  Location     Type
 19739 ;;                  1    wreg      void 
 19740 ;; Registers used:
 19741 ;;		wreg, status,2, status,0
 19742 ;; Tracked objects:
 19743 ;;		On entry : 0/0
 19744 ;;		On exit  : 0/0
 19745 ;;		Unchanged: 0/0
 19746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19747 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19750 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19751 ;;Total ram usage:        3 bytes
 19752 ;; Hardware stack levels used:    1
 19753 ;; Hardware stack levels required when called:   14
 19754 ;; This function calls:
 19755 ;;		Nothing
 19756 ;; This function is called by:
 19757 ;;		_TMR7_Initialize
 19758 ;;		_main
 19759 ;; This function uses a non-reentrant model
 19760 ;;
 19761                           
 19762                           	psect	text53
 19763  016E38                     __ptext53:
 19764                           	opt stack 0
 19765  016E38                     _TMR7_SetInterruptHandler:
 19766                           	opt stack 16
 19767                           
 19768                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 19769                           
 19770                           ; BSR set to: 15
 19771                           ;incstack = 0
 19772  016E38  C117  F1BD         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 19773  016E3C  C118  F1BE         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 19774  016E40  C119  F1BF         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 19775  016E44  0012               	return		;funcret
 19776  016E46                     __end_of_TMR7_SetInterruptHandler:
 19777                           	opt stack 0
 19778                           tblptru	equ	0xFF8
 19779                           tblptrh	equ	0xFF7
 19780                           tblptrl	equ	0xFF6
 19781                           tablat	equ	0xFF5
 19782                           prodh	equ	0xFF4
 19783                           prodl	equ	0xFF3
 19784                           intcon	equ	0xFF2
 19785                           indf0	equ	0xFEF
 19786                           postinc0	equ	0xFEE
 19787                           fsr0h	equ	0xFEA
 19788                           fsr0l	equ	0xFE9
 19789                           wreg	equ	0xFE8
 19790                           indf1	equ	0xFE7
 19791                           postdec1	equ	0xFE5
 19792                           plusw1	equ	0xFE3
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           postinc2	equ	0xFDE
 19797                           postdec2	equ	0xFDD
 19798                           plusw2	equ	0xFDB
 19799                           fsr2h	equ	0xFDA
 19800                           fsr2l	equ	0xFD9
 19801                           status	equ	0xFD8
 19802                           
 19803 ;; *************** function _TMR6_Initialize *****************
 19804 ;; Defined at:
 19805 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;		None
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;		None
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  1    wreg      void 
 19812 ;; Registers used:
 19813 ;;		wreg, status,2, status,0, cstack
 19814 ;; Tracked objects:
 19815 ;;		On entry : 0/0
 19816 ;;		On exit  : 0/0
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19823 ;;Total ram usage:        0 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; Hardware stack levels required when called:   15
 19826 ;; This function calls:
 19827 ;;		_TMR6_SetInterruptHandler
 19828 ;; This function is called by:
 19829 ;;		_SYSTEM_Initialize
 19830 ;; This function uses a non-reentrant model
 19831 ;;
 19832                           
 19833                           	psect	text54
 19834  016AA4                     __ptext54:
 19835                           	opt stack 0
 19836  016AA4                     _TMR6_Initialize:
 19837                           	opt stack 14
 19838                           
 19839                           ;tmr6.c: 69: T6CLKCON = 0x04;
 19840                           
 19841                           ;incstack = 0
 19842  016AA4  0E04               	movlw	4
 19843  016AA6  6EB3               	movwf	4019,c	;volatile
 19844                           
 19845                           ;tmr6.c: 72: T6HLT = 0x20;
 19846  016AA8  0E20               	movlw	32
 19847  016AAA  6EB2               	movwf	4018,c	;volatile
 19848                           
 19849                           ;tmr6.c: 75: T6RST = 0x00;
 19850  016AAC  0E00               	movlw	0
 19851  016AAE  6EB4               	movwf	4020,c	;volatile
 19852                           
 19853                           ;tmr6.c: 78: T6PR = 0xF1;
 19854  016AB0  0EF1               	movlw	241
 19855  016AB2  6EB0               	movwf	4016,c	;volatile
 19856                           
 19857                           ;tmr6.c: 81: T6TMR = 0x00;
 19858  016AB4  0E00               	movlw	0
 19859  016AB6  6EAF               	movwf	4015,c	;volatile
 19860                           
 19861                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 19862  016AB8  010E               	movlb	14	; () banked
 19863  016ABA  9B38               	bcf	56,5,b	;volatile
 19864                           
 19865                           ; BSR set to: 14
 19866                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 19867  016ABC  8B2E               	bsf	46,5,b	;volatile
 19868                           
 19869                           ; BSR set to: 14
 19870                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 19871  016ABE  0ED4               	movlw	low _TMR6_DefaultInterruptHandler
 19872  016AC0  0101               	movlb	1	; () banked
 19873  016AC2  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 19874  016AC4  0E6E               	movlw	high _TMR6_DefaultInterruptHandler
 19875  016AC6  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19876  016AC8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 19877  016ACA  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 19878  016ACC  EC23  F0B7         	call	_TMR6_SetInterruptHandler	;wreg free
 19879                           
 19880                           ;tmr6.c: 93: T6CON = 0xBF;
 19881  016AD0  0EBF               	movlw	191
 19882  016AD2  6EB1               	movwf	4017,c	;volatile
 19883  016AD4  0012               	return		;funcret
 19884  016AD6                     __end_of_TMR6_Initialize:
 19885                           	opt stack 0
 19886                           tblptru	equ	0xFF8
 19887                           tblptrh	equ	0xFF7
 19888                           tblptrl	equ	0xFF6
 19889                           tablat	equ	0xFF5
 19890                           prodh	equ	0xFF4
 19891                           prodl	equ	0xFF3
 19892                           intcon	equ	0xFF2
 19893                           indf0	equ	0xFEF
 19894                           postinc0	equ	0xFEE
 19895                           fsr0h	equ	0xFEA
 19896                           fsr0l	equ	0xFE9
 19897                           wreg	equ	0xFE8
 19898                           indf1	equ	0xFE7
 19899                           postdec1	equ	0xFE5
 19900                           plusw1	equ	0xFE3
 19901                           fsr1h	equ	0xFE2
 19902                           fsr1l	equ	0xFE1
 19903                           indf2	equ	0xFDF
 19904                           postinc2	equ	0xFDE
 19905                           postdec2	equ	0xFDD
 19906                           plusw2	equ	0xFDB
 19907                           fsr2h	equ	0xFDA
 19908                           fsr2l	equ	0xFD9
 19909                           status	equ	0xFD8
 19910                           
 19911 ;; *************** function _TMR6_SetInterruptHandler *****************
 19912 ;; Defined at:
 19913 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 19914 ;; Parameters:    Size  Location     Type
 19915 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 19916 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 19917 ;; Auto vars:     Size  Location     Type
 19918 ;;		None
 19919 ;; Return value:  Size  Location     Type
 19920 ;;                  1    wreg      void 
 19921 ;; Registers used:
 19922 ;;		wreg, status,2, status,0
 19923 ;; Tracked objects:
 19924 ;;		On entry : 0/0
 19925 ;;		On exit  : 0/0
 19926 ;;		Unchanged: 0/0
 19927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19928 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19931 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19932 ;;Total ram usage:        3 bytes
 19933 ;; Hardware stack levels used:    1
 19934 ;; Hardware stack levels required when called:   14
 19935 ;; This function calls:
 19936 ;;		Nothing
 19937 ;; This function is called by:
 19938 ;;		_TMR6_Initialize
 19939 ;;		_main
 19940 ;; This function uses a non-reentrant model
 19941 ;;
 19942                           
 19943                           	psect	text55
 19944  016E46                     __ptext55:
 19945                           	opt stack 0
 19946  016E46                     _TMR6_SetInterruptHandler:
 19947                           	opt stack 16
 19948                           
 19949                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 19950                           
 19951                           ;incstack = 0
 19952  016E46  C117  F1C0         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 19953  016E4A  C118  F1C1         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 19954  016E4E  C119  F1C2         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 19955  016E52  0012               	return		;funcret
 19956  016E54                     __end_of_TMR6_SetInterruptHandler:
 19957                           	opt stack 0
 19958                           tblptru	equ	0xFF8
 19959                           tblptrh	equ	0xFF7
 19960                           tblptrl	equ	0xFF6
 19961                           tablat	equ	0xFF5
 19962                           prodh	equ	0xFF4
 19963                           prodl	equ	0xFF3
 19964                           intcon	equ	0xFF2
 19965                           indf0	equ	0xFEF
 19966                           postinc0	equ	0xFEE
 19967                           fsr0h	equ	0xFEA
 19968                           fsr0l	equ	0xFE9
 19969                           wreg	equ	0xFE8
 19970                           indf1	equ	0xFE7
 19971                           postdec1	equ	0xFE5
 19972                           plusw1	equ	0xFE3
 19973                           fsr1h	equ	0xFE2
 19974                           fsr1l	equ	0xFE1
 19975                           indf2	equ	0xFDF
 19976                           postinc2	equ	0xFDE
 19977                           postdec2	equ	0xFDD
 19978                           plusw2	equ	0xFDB
 19979                           fsr2h	equ	0xFDA
 19980                           fsr2l	equ	0xFD9
 19981                           status	equ	0xFD8
 19982                           
 19983 ;; *************** function _TMR5_Initialize *****************
 19984 ;; Defined at:
 19985 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 19986 ;; Parameters:    Size  Location     Type
 19987 ;;		None
 19988 ;; Auto vars:     Size  Location     Type
 19989 ;;		None
 19990 ;; Return value:  Size  Location     Type
 19991 ;;                  1    wreg      void 
 19992 ;; Registers used:
 19993 ;;		wreg, status,2, status,0, cstack
 19994 ;; Tracked objects:
 19995 ;;		On entry : 0/0
 19996 ;;		On exit  : 0/0
 19997 ;;		Unchanged: 0/0
 19998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20001 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20002 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20003 ;;Total ram usage:        2 bytes
 20004 ;; Hardware stack levels used:    1
 20005 ;; Hardware stack levels required when called:   15
 20006 ;; This function calls:
 20007 ;;		_TMR5_SetInterruptHandler
 20008 ;; This function is called by:
 20009 ;;		_SYSTEM_Initialize
 20010 ;; This function uses a non-reentrant model
 20011 ;;
 20012                           
 20013                           	psect	text56
 20014  0166FE                     __ptext56:
 20015                           	opt stack 0
 20016  0166FE                     _TMR5_Initialize:
 20017                           	opt stack 14
 20018                           
 20019                           ;tmr5.c: 69: T5GCON = 0x00;
 20020                           
 20021                           ;incstack = 0
 20022  0166FE  0E00               	movlw	0
 20023  016700  6EC4               	movwf	4036,c	;volatile
 20024                           
 20025                           ;tmr5.c: 72: T5GATE = 0x00;
 20026  016702  0E00               	movlw	0
 20027  016704  6EC5               	movwf	4037,c	;volatile
 20028                           
 20029                           ;tmr5.c: 75: T5CLK = 0x01;
 20030  016706  0E01               	movlw	1
 20031  016708  6EC6               	movwf	4038,c	;volatile
 20032                           
 20033                           ;tmr5.c: 78: TMR5H = 0x00;
 20034  01670A  0E00               	movlw	0
 20035  01670C  6EC2               	movwf	4034,c	;volatile
 20036                           
 20037                           ;tmr5.c: 81: TMR5L = 0x00;
 20038  01670E  0E00               	movlw	0
 20039  016710  6EC1               	movwf	4033,c	;volatile
 20040                           
 20041                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 20042  016712  50C1               	movf	4033,w,c	;volatile
 20043  016714  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 20044  016718  0101               	movlb	1	; () banked
 20045  01671A  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 20046  01671C  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 20047  016720  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 20048  016722  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 20049  016724  6FCB               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 20050  016726  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 20051  016728  6FCC               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 20052                           
 20053                           ; BSR set to: 1
 20054                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 20055  01672A  010E               	movlb	14	; () banked
 20056  01672C  9938               	bcf	56,4,b	;volatile
 20057                           
 20058                           ; BSR set to: 14
 20059                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 20060  01672E  892E               	bsf	46,4,b	;volatile
 20061                           
 20062                           ; BSR set to: 14
 20063                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 20064  016730  0ED6               	movlw	low _TMR5_DefaultInterruptHandler
 20065  016732  0101               	movlb	1	; () banked
 20066  016734  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 20067  016736  0E6E               	movlw	high _TMR5_DefaultInterruptHandler
 20068  016738  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20069  01673A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 20070  01673C  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20071  01673E  EC2A  F0B7         	call	_TMR5_SetInterruptHandler	;wreg free
 20072                           
 20073                           ;tmr5.c: 96: T5CON = 0x13;
 20074  016742  0E13               	movlw	19
 20075  016744  6EC3               	movwf	4035,c	;volatile
 20076  016746  0012               	return		;funcret
 20077  016748                     __end_of_TMR5_Initialize:
 20078                           	opt stack 0
 20079                           tblptru	equ	0xFF8
 20080                           tblptrh	equ	0xFF7
 20081                           tblptrl	equ	0xFF6
 20082                           tablat	equ	0xFF5
 20083                           prodh	equ	0xFF4
 20084                           prodl	equ	0xFF3
 20085                           intcon	equ	0xFF2
 20086                           indf0	equ	0xFEF
 20087                           postinc0	equ	0xFEE
 20088                           fsr0h	equ	0xFEA
 20089                           fsr0l	equ	0xFE9
 20090                           wreg	equ	0xFE8
 20091                           indf1	equ	0xFE7
 20092                           postdec1	equ	0xFE5
 20093                           plusw1	equ	0xFE3
 20094                           fsr1h	equ	0xFE2
 20095                           fsr1l	equ	0xFE1
 20096                           indf2	equ	0xFDF
 20097                           postinc2	equ	0xFDE
 20098                           postdec2	equ	0xFDD
 20099                           plusw2	equ	0xFDB
 20100                           fsr2h	equ	0xFDA
 20101                           fsr2l	equ	0xFD9
 20102                           status	equ	0xFD8
 20103                           
 20104 ;; *************** function _TMR5_SetInterruptHandler *****************
 20105 ;; Defined at:
 20106 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20109 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;		None
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  1    wreg      void 
 20114 ;; Registers used:
 20115 ;;		wreg, status,2, status,0
 20116 ;; Tracked objects:
 20117 ;;		On entry : 0/0
 20118 ;;		On exit  : 0/0
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20121 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20124 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20125 ;;Total ram usage:        3 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:   14
 20128 ;; This function calls:
 20129 ;;		Nothing
 20130 ;; This function is called by:
 20131 ;;		_TMR5_Initialize
 20132 ;; This function uses a non-reentrant model
 20133 ;;
 20134                           
 20135                           	psect	text57
 20136  016E54                     __ptext57:
 20137                           	opt stack 0
 20138  016E54                     _TMR5_SetInterruptHandler:
 20139                           	opt stack 14
 20140                           
 20141                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 20142                           
 20143                           ;incstack = 0
 20144  016E54  C117  F1BA         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 20145  016E58  C118  F1BB         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 20146  016E5C  C119  F1BC         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 20147  016E60  0012               	return		;funcret
 20148  016E62                     __end_of_TMR5_SetInterruptHandler:
 20149                           	opt stack 0
 20150                           tblptru	equ	0xFF8
 20151                           tblptrh	equ	0xFF7
 20152                           tblptrl	equ	0xFF6
 20153                           tablat	equ	0xFF5
 20154                           prodh	equ	0xFF4
 20155                           prodl	equ	0xFF3
 20156                           intcon	equ	0xFF2
 20157                           indf0	equ	0xFEF
 20158                           postinc0	equ	0xFEE
 20159                           fsr0h	equ	0xFEA
 20160                           fsr0l	equ	0xFE9
 20161                           wreg	equ	0xFE8
 20162                           indf1	equ	0xFE7
 20163                           postdec1	equ	0xFE5
 20164                           plusw1	equ	0xFE3
 20165                           fsr1h	equ	0xFE2
 20166                           fsr1l	equ	0xFE1
 20167                           indf2	equ	0xFDF
 20168                           postinc2	equ	0xFDE
 20169                           postdec2	equ	0xFDD
 20170                           plusw2	equ	0xFDB
 20171                           fsr2h	equ	0xFDA
 20172                           fsr2l	equ	0xFD9
 20173                           status	equ	0xFD8
 20174                           
 20175 ;; *************** function _PMD_Initialize *****************
 20176 ;; Defined at:
 20177 ;;		line 83 in file "mcc_generated_files/mcc.c"
 20178 ;; Parameters:    Size  Location     Type
 20179 ;;		None
 20180 ;; Auto vars:     Size  Location     Type
 20181 ;;		None
 20182 ;; Return value:  Size  Location     Type
 20183 ;;                  1    wreg      void 
 20184 ;; Registers used:
 20185 ;;		wreg, status,2
 20186 ;; Tracked objects:
 20187 ;;		On entry : 0/0
 20188 ;;		On exit  : 0/0
 20189 ;;		Unchanged: 0/0
 20190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20195 ;;Total ram usage:        0 bytes
 20196 ;; Hardware stack levels used:    1
 20197 ;; Hardware stack levels required when called:   14
 20198 ;; This function calls:
 20199 ;;		Nothing
 20200 ;; This function is called by:
 20201 ;;		_SYSTEM_Initialize
 20202 ;; This function uses a non-reentrant model
 20203 ;;
 20204                           
 20205                           	psect	text58
 20206  016D1C                     __ptext58:
 20207                           	opt stack 0
 20208  016D1C                     _PMD_Initialize:
 20209                           	opt stack 15
 20210                           
 20211                           ;mcc.c: 86: PMD0 = 0x00;
 20212                           
 20213                           ;incstack = 0
 20214  016D1C  0E00               	movlw	0
 20215  016D1E  010E               	movlb	14	; () banked
 20216  016D20  6F4C               	movwf	76,b	;volatile
 20217                           
 20218                           ;mcc.c: 88: PMD1 = 0x00;
 20219  016D22  0E00               	movlw	0
 20220  016D24  6F4D               	movwf	77,b	;volatile
 20221                           
 20222                           ;mcc.c: 90: PMD2 = 0x00;
 20223  016D26  0E00               	movlw	0
 20224  016D28  6F4E               	movwf	78,b	;volatile
 20225                           
 20226                           ;mcc.c: 92: PMD3 = 0x00;
 20227  016D2A  0E00               	movlw	0
 20228  016D2C  6F4F               	movwf	79,b	;volatile
 20229                           
 20230                           ;mcc.c: 94: PMD4 = 0x00;
 20231  016D2E  0E00               	movlw	0
 20232  016D30  6F50               	movwf	80,b	;volatile
 20233                           
 20234                           ;mcc.c: 96: PMD5 = 0x00;
 20235  016D32  0E00               	movlw	0
 20236  016D34  6F51               	movwf	81,b	;volatile
 20237                           
 20238                           ; BSR set to: 14
 20239  016D36  0012               	return		;funcret
 20240  016D38                     __end_of_PMD_Initialize:
 20241                           	opt stack 0
 20242                           tblptru	equ	0xFF8
 20243                           tblptrh	equ	0xFF7
 20244                           tblptrl	equ	0xFF6
 20245                           tablat	equ	0xFF5
 20246                           prodh	equ	0xFF4
 20247                           prodl	equ	0xFF3
 20248                           intcon	equ	0xFF2
 20249                           indf0	equ	0xFEF
 20250                           postinc0	equ	0xFEE
 20251                           fsr0h	equ	0xFEA
 20252                           fsr0l	equ	0xFE9
 20253                           wreg	equ	0xFE8
 20254                           indf1	equ	0xFE7
 20255                           postdec1	equ	0xFE5
 20256                           plusw1	equ	0xFE3
 20257                           fsr1h	equ	0xFE2
 20258                           fsr1l	equ	0xFE1
 20259                           indf2	equ	0xFDF
 20260                           postinc2	equ	0xFDE
 20261                           postdec2	equ	0xFDD
 20262                           plusw2	equ	0xFDB
 20263                           fsr2h	equ	0xFDA
 20264                           fsr2l	equ	0xFD9
 20265                           status	equ	0xFD8
 20266                           
 20267 ;; *************** function _PIN_MANAGER_Initialize *****************
 20268 ;; Defined at:
 20269 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 20270 ;; Parameters:    Size  Location     Type
 20271 ;;		None
 20272 ;; Auto vars:     Size  Location     Type
 20273 ;;		None
 20274 ;; Return value:  Size  Location     Type
 20275 ;;                  1    wreg      void 
 20276 ;; Registers used:
 20277 ;;		wreg, status,2
 20278 ;; Tracked objects:
 20279 ;;		On entry : 0/0
 20280 ;;		On exit  : 0/0
 20281 ;;		Unchanged: 0/0
 20282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20287 ;;Total ram usage:        0 bytes
 20288 ;; Hardware stack levels used:    1
 20289 ;; Hardware stack levels required when called:   14
 20290 ;; This function calls:
 20291 ;;		Nothing
 20292 ;; This function is called by:
 20293 ;;		_SYSTEM_Initialize
 20294 ;; This function uses a non-reentrant model
 20295 ;;
 20296                           
 20297                           	psect	text59
 20298  015988                     __ptext59:
 20299                           	opt stack 0
 20300  015988                     _PIN_MANAGER_Initialize:
 20301                           	opt stack 15
 20302                           
 20303                           ;pin_manager.c: 62: LATE = 0x00;
 20304                           
 20305                           ; BSR set to: 14
 20306                           ;incstack = 0
 20307  015988  0E00               	movlw	0
 20308  01598A  6E7D               	movwf	3965,c	;volatile
 20309                           
 20310                           ;pin_manager.c: 63: LATD = 0x00;
 20311  01598C  0E00               	movlw	0
 20312  01598E  6E7C               	movwf	3964,c	;volatile
 20313                           
 20314                           ;pin_manager.c: 64: LATA = 0x00;
 20315  015990  0E00               	movlw	0
 20316  015992  6E79               	movwf	3961,c	;volatile
 20317                           
 20318                           ;pin_manager.c: 65: LATF = 0x00;
 20319  015994  0E00               	movlw	0
 20320  015996  6E7E               	movwf	3966,c	;volatile
 20321                           
 20322                           ;pin_manager.c: 66: LATB = 0x00;
 20323  015998  0E00               	movlw	0
 20324  01599A  6E7A               	movwf	3962,c	;volatile
 20325                           
 20326                           ;pin_manager.c: 67: LATG = 0x00;
 20327  01599C  0E00               	movlw	0
 20328  01599E  6E7F               	movwf	3967,c	;volatile
 20329                           
 20330                           ;pin_manager.c: 68: LATC = 0x00;
 20331  0159A0  0E00               	movlw	0
 20332  0159A2  6E7B               	movwf	3963,c	;volatile
 20333                           
 20334                           ;pin_manager.c: 69: LATH = 0x00;
 20335  0159A4  0E00               	movlw	0
 20336  0159A6  6E80               	movwf	3968,c	;volatile
 20337                           
 20338                           ;pin_manager.c: 74: TRISE = 0xFF;
 20339  0159A8  6885               	setf	3973,c	;volatile
 20340                           
 20341                           ;pin_manager.c: 75: TRISF = 0xF0;
 20342  0159AA  0EF0               	movlw	240
 20343  0159AC  6E86               	movwf	3974,c	;volatile
 20344                           
 20345                           ;pin_manager.c: 76: TRISA = 0xFF;
 20346  0159AE  6881               	setf	3969,c	;volatile
 20347                           
 20348                           ;pin_manager.c: 77: TRISG = 0x5C;
 20349  0159B0  0E5C               	movlw	92
 20350  0159B2  6E87               	movwf	3975,c	;volatile
 20351                           
 20352                           ;pin_manager.c: 78: TRISB = 0xFF;
 20353  0159B4  6882               	setf	3970,c	;volatile
 20354                           
 20355                           ;pin_manager.c: 79: TRISH = 0x0F;
 20356  0159B6  0E0F               	movlw	15
 20357  0159B8  6E88               	movwf	3976,c	;volatile
 20358                           
 20359                           ;pin_manager.c: 80: TRISC = 0xFF;
 20360  0159BA  6883               	setf	3971,c	;volatile
 20361                           
 20362                           ;pin_manager.c: 81: TRISD = 0xFF;
 20363  0159BC  6884               	setf	3972,c	;volatile
 20364                           
 20365                           ;pin_manager.c: 86: ANSELD = 0xFF;
 20366  0159BE  010E               	movlb	14	; () banked
 20367  0159C0  69A7               	setf	167,b	;volatile
 20368                           
 20369                           ; BSR set to: 14
 20370                           ;pin_manager.c: 87: ANSELB = 0xFF;
 20371  0159C2  699A               	setf	154,b	;volatile
 20372                           
 20373                           ; BSR set to: 14
 20374                           ;pin_manager.c: 88: ANSELE = 0xFF;
 20375  0159C4  69AF               	setf	175,b	;volatile
 20376                           
 20377                           ;pin_manager.c: 89: ANSELG = 0x3C;
 20378  0159C6  0E3C               	movlw	60
 20379  0159C8  6FBC               	movwf	188,b	;volatile
 20380                           
 20381                           ;pin_manager.c: 90: ANSELF = 0xF0;
 20382  0159CA  0EF0               	movlw	240
 20383  0159CC  6FB4               	movwf	180,b	;volatile
 20384                           
 20385                           ; BSR set to: 14
 20386                           ;pin_manager.c: 91: ANSELA = 0xFF;
 20387  0159CE  6992               	setf	146,b	;volatile
 20388                           
 20389                           ;pin_manager.c: 96: WPUD = 0x00;
 20390  0159D0  0E00               	movlw	0
 20391  0159D2  6FA6               	movwf	166,b	;volatile
 20392                           
 20393                           ;pin_manager.c: 97: WPUF = 0x00;
 20394  0159D4  0E00               	movlw	0
 20395  0159D6  6FB3               	movwf	179,b	;volatile
 20396                           
 20397                           ;pin_manager.c: 98: WPUE = 0x00;
 20398  0159D8  0E00               	movlw	0
 20399  0159DA  6FAE               	movwf	174,b	;volatile
 20400                           
 20401                           ;pin_manager.c: 99: WPUB = 0x00;
 20402  0159DC  0E00               	movlw	0
 20403  0159DE  6F99               	movwf	153,b	;volatile
 20404                           
 20405                           ;pin_manager.c: 100: WPUG = 0x00;
 20406  0159E0  0E00               	movlw	0
 20407  0159E2  6FBB               	movwf	187,b	;volatile
 20408                           
 20409                           ;pin_manager.c: 101: WPUA = 0x00;
 20410  0159E4  0E00               	movlw	0
 20411  0159E6  6F91               	movwf	145,b	;volatile
 20412                           
 20413                           ;pin_manager.c: 102: WPUC = 0x00;
 20414  0159E8  0E00               	movlw	0
 20415  0159EA  6FA1               	movwf	161,b	;volatile
 20416                           
 20417                           ;pin_manager.c: 103: WPUH = 0x00;
 20418  0159EC  0E00               	movlw	0
 20419  0159EE  6FC0               	movwf	192,b	;volatile
 20420                           
 20421                           ;pin_manager.c: 108: ODCONE = 0x00;
 20422  0159F0  0E00               	movlw	0
 20423  0159F2  6FAD               	movwf	173,b	;volatile
 20424                           
 20425                           ;pin_manager.c: 109: ODCONF = 0x01;
 20426  0159F4  0E01               	movlw	1
 20427  0159F6  6FB2               	movwf	178,b	;volatile
 20428                           
 20429                           ;pin_manager.c: 110: ODCONA = 0x00;
 20430  0159F8  0E00               	movlw	0
 20431  0159FA  6F90               	movwf	144,b	;volatile
 20432                           
 20433                           ;pin_manager.c: 111: ODCONG = 0x00;
 20434  0159FC  0E00               	movlw	0
 20435  0159FE  6FBA               	movwf	186,b	;volatile
 20436                           
 20437                           ;pin_manager.c: 112: ODCONB = 0x00;
 20438  015A00  0E00               	movlw	0
 20439  015A02  6F98               	movwf	152,b	;volatile
 20440                           
 20441                           ;pin_manager.c: 113: ODCONH = 0x00;
 20442  015A04  0E00               	movlw	0
 20443  015A06  6FBF               	movwf	191,b	;volatile
 20444                           
 20445                           ;pin_manager.c: 114: ODCONC = 0x00;
 20446  015A08  0E00               	movlw	0
 20447  015A0A  6FA0               	movwf	160,b	;volatile
 20448                           
 20449                           ;pin_manager.c: 115: ODCOND = 0x00;
 20450  015A0C  0E00               	movlw	0
 20451  015A0E  6FA5               	movwf	165,b	;volatile
 20452                           
 20453                           ; BSR set to: 14
 20454                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 20455  015A10  698F               	setf	143,b	;volatile
 20456                           
 20457                           ; BSR set to: 14
 20458                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 20459  015A12  6997               	setf	151,b	;volatile
 20460                           
 20461                           ; BSR set to: 14
 20462                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 20463  015A14  699F               	setf	159,b	;volatile
 20464                           
 20465                           ; BSR set to: 14
 20466                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 20467  015A16  69A4               	setf	164,b	;volatile
 20468                           
 20469                           ; BSR set to: 14
 20470                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 20471  015A18  69AC               	setf	172,b	;volatile
 20472                           
 20473                           ; BSR set to: 14
 20474                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 20475  015A1A  69B1               	setf	177,b	;volatile
 20476                           
 20477                           ; BSR set to: 14
 20478                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 20479  015A1C  69B9               	setf	185,b	;volatile
 20480                           
 20481                           ; BSR set to: 14
 20482                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 20483  015A1E  69BE               	setf	190,b	;volatile
 20484                           
 20485                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 20486  015A20  0E0E               	movlw	14
 20487  015A22  6F89               	movwf	137,b	;volatile
 20488                           
 20489                           ;pin_manager.c: 137: RX2PPS = 0x36;
 20490  015A24  0E36               	movlw	54
 20491  015A26  6F11               	movwf	17,b	;volatile
 20492                           
 20493                           ; BSR set to: 14
 20494  015A28  0012               	return		;funcret
 20495  015A2A                     __end_of_PIN_MANAGER_Initialize:
 20496                           	opt stack 0
 20497                           tblptru	equ	0xFF8
 20498                           tblptrh	equ	0xFF7
 20499                           tblptrl	equ	0xFF6
 20500                           tablat	equ	0xFF5
 20501                           prodh	equ	0xFF4
 20502                           prodl	equ	0xFF3
 20503                           intcon	equ	0xFF2
 20504                           indf0	equ	0xFEF
 20505                           postinc0	equ	0xFEE
 20506                           fsr0h	equ	0xFEA
 20507                           fsr0l	equ	0xFE9
 20508                           wreg	equ	0xFE8
 20509                           indf1	equ	0xFE7
 20510                           postdec1	equ	0xFE5
 20511                           plusw1	equ	0xFE3
 20512                           fsr1h	equ	0xFE2
 20513                           fsr1l	equ	0xFE1
 20514                           indf2	equ	0xFDF
 20515                           postinc2	equ	0xFDE
 20516                           postdec2	equ	0xFDD
 20517                           plusw2	equ	0xFDB
 20518                           fsr2h	equ	0xFDA
 20519                           fsr2l	equ	0xFD9
 20520                           status	equ	0xFD8
 20521                           
 20522 ;; *************** function _OSCILLATOR_Initialize *****************
 20523 ;; Defined at:
 20524 ;;		line 65 in file "mcc_generated_files/mcc.c"
 20525 ;; Parameters:    Size  Location     Type
 20526 ;;		None
 20527 ;; Auto vars:     Size  Location     Type
 20528 ;;		None
 20529 ;; Return value:  Size  Location     Type
 20530 ;;                  1    wreg      void 
 20531 ;; Registers used:
 20532 ;;		wreg, status,2
 20533 ;; Tracked objects:
 20534 ;;		On entry : 0/0
 20535 ;;		On exit  : 0/0
 20536 ;;		Unchanged: 0/0
 20537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20542 ;;Total ram usage:        0 bytes
 20543 ;; Hardware stack levels used:    1
 20544 ;; Hardware stack levels required when called:   14
 20545 ;; This function calls:
 20546 ;;		Nothing
 20547 ;; This function is called by:
 20548 ;;		_SYSTEM_Initialize
 20549 ;; This function uses a non-reentrant model
 20550 ;;
 20551                           
 20552                           	psect	text60
 20553  016D38                     __ptext60:
 20554                           	opt stack 0
 20555  016D38                     _OSCILLATOR_Initialize:
 20556                           	opt stack 15
 20557                           
 20558                           ;mcc.c: 68: OSCCON1 = 0x20;
 20559                           
 20560                           ; BSR set to: 14
 20561                           ;incstack = 0
 20562  016D38  0E20               	movlw	32
 20563  016D3A  010E               	movlb	14	; () banked
 20564  016D3C  6F43               	movwf	67,b	;volatile
 20565                           
 20566                           ;mcc.c: 70: OSCCON3 = 0x00;
 20567  016D3E  0E00               	movlw	0
 20568  016D40  6F45               	movwf	69,b	;volatile
 20569                           
 20570                           ;mcc.c: 72: OSCEN = 0x00;
 20571  016D42  0E00               	movlw	0
 20572  016D44  6F47               	movwf	71,b	;volatile
 20573                           
 20574                           ;mcc.c: 74: OSCFRQ = 0x02;
 20575  016D46  0E02               	movlw	2
 20576  016D48  6F49               	movwf	73,b	;volatile
 20577                           
 20578                           ;mcc.c: 76: OSCTUNE = 0x00;
 20579  016D4A  0E00               	movlw	0
 20580  016D4C  6F48               	movwf	72,b	;volatile
 20581  016D4E                     
 20582                           ; BSR set to: 14
 20583                           
 20584                           ; BSR set to: 14
 20585                           ;mcc.c: 79: {
 20586  016D4E  B146               	btfsc	70,0,b	;volatile
 20587  016D50  0012               	return	
 20588  016D52  D7FD               	goto	l57
 20589  016D54                     __end_of_OSCILLATOR_Initialize:
 20590                           	opt stack 0
 20591                           tblptru	equ	0xFF8
 20592                           tblptrh	equ	0xFF7
 20593                           tblptrl	equ	0xFF6
 20594                           tablat	equ	0xFF5
 20595                           prodh	equ	0xFF4
 20596                           prodl	equ	0xFF3
 20597                           intcon	equ	0xFF2
 20598                           indf0	equ	0xFEF
 20599                           postinc0	equ	0xFEE
 20600                           fsr0h	equ	0xFEA
 20601                           fsr0l	equ	0xFE9
 20602                           wreg	equ	0xFE8
 20603                           indf1	equ	0xFE7
 20604                           postdec1	equ	0xFE5
 20605                           plusw1	equ	0xFE3
 20606                           fsr1h	equ	0xFE2
 20607                           fsr1l	equ	0xFE1
 20608                           indf2	equ	0xFDF
 20609                           postinc2	equ	0xFDE
 20610                           postdec2	equ	0xFDD
 20611                           plusw2	equ	0xFDB
 20612                           fsr2h	equ	0xFDA
 20613                           fsr2l	equ	0xFD9
 20614                           status	equ	0xFD8
 20615                           
 20616 ;; *************** function _INTERRUPT_Initialize *****************
 20617 ;; Defined at:
 20618 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20619 ;; Parameters:    Size  Location     Type
 20620 ;;		None
 20621 ;; Auto vars:     Size  Location     Type
 20622 ;;		None
 20623 ;; Return value:  Size  Location     Type
 20624 ;;                  1    wreg      void 
 20625 ;; Registers used:
 20626 ;;		None
 20627 ;; Tracked objects:
 20628 ;;		On entry : 0/0
 20629 ;;		On exit  : 0/0
 20630 ;;		Unchanged: 0/0
 20631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20636 ;;Total ram usage:        0 bytes
 20637 ;; Hardware stack levels used:    1
 20638 ;; Hardware stack levels required when called:   14
 20639 ;; This function calls:
 20640 ;;		Nothing
 20641 ;; This function is called by:
 20642 ;;		_SYSTEM_Initialize
 20643 ;; This function uses a non-reentrant model
 20644 ;;
 20645                           
 20646                           	psect	text61
 20647  016DA2                     __ptext61:
 20648                           	opt stack 0
 20649  016DA2                     _INTERRUPT_Initialize:
 20650                           	opt stack 15
 20651                           
 20652                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 20653                           
 20654                           ; BSR set to: 14
 20655                           ;incstack = 0
 20656  016DA2  8AF2               	bsf	intcon,5,c	;volatile
 20657                           
 20658                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 20659  016DA4  010E               	movlb	14	; () banked
 20660  016DA6  8F22               	bsf	34,7,b	;volatile
 20661                           
 20662                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 20663  016DA8  8924               	bsf	36,4,b	;volatile
 20664                           
 20665                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 20666  016DAA  8120               	bsf	32,0,b	;volatile
 20667                           
 20668                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 20669  016DAC  9B24               	bcf	36,5,b	;volatile
 20670                           
 20671                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 20672  016DAE  9D22               	bcf	34,6,b	;volatile
 20673                           
 20674                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 20675  016DB0  9D24               	bcf	36,6,b	;volatile
 20676                           
 20677                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 20678  016DB2  9F21               	bcf	33,7,b	;volatile
 20679                           
 20680                           ; BSR set to: 14
 20681  016DB4  0012               	return		;funcret
 20682  016DB6                     __end_of_INTERRUPT_Initialize:
 20683                           	opt stack 0
 20684                           tblptru	equ	0xFF8
 20685                           tblptrh	equ	0xFF7
 20686                           tblptrl	equ	0xFF6
 20687                           tablat	equ	0xFF5
 20688                           prodh	equ	0xFF4
 20689                           prodl	equ	0xFF3
 20690                           intcon	equ	0xFF2
 20691                           indf0	equ	0xFEF
 20692                           postinc0	equ	0xFEE
 20693                           fsr0h	equ	0xFEA
 20694                           fsr0l	equ	0xFE9
 20695                           wreg	equ	0xFE8
 20696                           indf1	equ	0xFE7
 20697                           postdec1	equ	0xFE5
 20698                           plusw1	equ	0xFE3
 20699                           fsr1h	equ	0xFE2
 20700                           fsr1l	equ	0xFE1
 20701                           indf2	equ	0xFDF
 20702                           postinc2	equ	0xFDE
 20703                           postdec2	equ	0xFDD
 20704                           plusw2	equ	0xFDB
 20705                           fsr2h	equ	0xFDA
 20706                           fsr2l	equ	0xFD9
 20707                           status	equ	0xFD8
 20708                           
 20709 ;; *************** function _HLVD_Initialize *****************
 20710 ;; Defined at:
 20711 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 20712 ;; Parameters:    Size  Location     Type
 20713 ;;		None
 20714 ;; Auto vars:     Size  Location     Type
 20715 ;;		None
 20716 ;; Return value:  Size  Location     Type
 20717 ;;                  1    wreg      void 
 20718 ;; Registers used:
 20719 ;;		wreg, status,2
 20720 ;; Tracked objects:
 20721 ;;		On entry : 0/0
 20722 ;;		On exit  : 0/0
 20723 ;;		Unchanged: 0/0
 20724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20729 ;;Total ram usage:        0 bytes
 20730 ;; Hardware stack levels used:    1
 20731 ;; Hardware stack levels required when called:   14
 20732 ;; This function calls:
 20733 ;;		Nothing
 20734 ;; This function is called by:
 20735 ;;		_SYSTEM_Initialize
 20736 ;; This function uses a non-reentrant model
 20737 ;;
 20738                           
 20739                           	psect	text62
 20740  016E0C                     __ptext62:
 20741                           	opt stack 0
 20742  016E0C                     _HLVD_Initialize:
 20743                           	opt stack 15
 20744                           
 20745                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 20746                           
 20747                           ; BSR set to: 14
 20748                           ;incstack = 0
 20749  016E0C  0E09               	movlw	9
 20750  016E0E  010E               	movlb	14	; () banked
 20751  016E10  6FC3               	movwf	195,b	;volatile
 20752                           
 20753                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 20754  016E12  0E82               	movlw	130
 20755  016E14  6FC2               	movwf	194,b	;volatile
 20756                           
 20757                           ; BSR set to: 14
 20758                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 20759  016E16  9F35               	bcf	53,7,b	;volatile
 20760                           
 20761                           ; BSR set to: 14
 20762                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 20763  016E18  8F2B               	bsf	43,7,b	;volatile
 20764                           
 20765                           ; BSR set to: 14
 20766  016E1A  0012               	return		;funcret
 20767  016E1C                     __end_of_HLVD_Initialize:
 20768                           	opt stack 0
 20769                           tblptru	equ	0xFF8
 20770                           tblptrh	equ	0xFF7
 20771                           tblptrl	equ	0xFF6
 20772                           tablat	equ	0xFF5
 20773                           prodh	equ	0xFF4
 20774                           prodl	equ	0xFF3
 20775                           intcon	equ	0xFF2
 20776                           indf0	equ	0xFEF
 20777                           postinc0	equ	0xFEE
 20778                           fsr0h	equ	0xFEA
 20779                           fsr0l	equ	0xFE9
 20780                           wreg	equ	0xFE8
 20781                           indf1	equ	0xFE7
 20782                           postdec1	equ	0xFE5
 20783                           plusw1	equ	0xFE3
 20784                           fsr1h	equ	0xFE2
 20785                           fsr1l	equ	0xFE1
 20786                           indf2	equ	0xFDF
 20787                           postinc2	equ	0xFDE
 20788                           postdec2	equ	0xFDD
 20789                           plusw2	equ	0xFDB
 20790                           fsr2h	equ	0xFDA
 20791                           fsr2l	equ	0xFD9
 20792                           status	equ	0xFD8
 20793                           
 20794 ;; *************** function _FVR_Initialize *****************
 20795 ;; Defined at:
 20796 ;;		line 58 in file "mcc_generated_files/fvr.c"
 20797 ;; Parameters:    Size  Location     Type
 20798 ;;		None
 20799 ;; Auto vars:     Size  Location     Type
 20800 ;;		None
 20801 ;; Return value:  Size  Location     Type
 20802 ;;                  1    wreg      void 
 20803 ;; Registers used:
 20804 ;;		wreg, status,2
 20805 ;; Tracked objects:
 20806 ;;		On entry : 0/0
 20807 ;;		On exit  : 0/0
 20808 ;;		Unchanged: 0/0
 20809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20814 ;;Total ram usage:        0 bytes
 20815 ;; Hardware stack levels used:    1
 20816 ;; Hardware stack levels required when called:   14
 20817 ;; This function calls:
 20818 ;;		Nothing
 20819 ;; This function is called by:
 20820 ;;		_SYSTEM_Initialize
 20821 ;; This function uses a non-reentrant model
 20822 ;;
 20823                           
 20824                           	psect	text63
 20825  016EB0                     __ptext63:
 20826                           	opt stack 0
 20827  016EB0                     _FVR_Initialize:
 20828                           	opt stack 15
 20829                           
 20830                           ;fvr.c: 61: FVRCON = 0xA6;
 20831                           
 20832                           ; BSR set to: 14
 20833                           ;incstack = 0
 20834  016EB0  0EA6               	movlw	166
 20835  016EB2  010E               	movlb	14	; () banked
 20836  016EB4  6FC4               	movwf	196,b	;volatile
 20837                           
 20838                           ; BSR set to: 14
 20839  016EB6  0012               	return		;funcret
 20840  016EB8                     __end_of_FVR_Initialize:
 20841                           	opt stack 0
 20842                           tblptru	equ	0xFF8
 20843                           tblptrh	equ	0xFF7
 20844                           tblptrl	equ	0xFF6
 20845                           tablat	equ	0xFF5
 20846                           prodh	equ	0xFF4
 20847                           prodl	equ	0xFF3
 20848                           intcon	equ	0xFF2
 20849                           indf0	equ	0xFEF
 20850                           postinc0	equ	0xFEE
 20851                           fsr0h	equ	0xFEA
 20852                           fsr0l	equ	0xFE9
 20853                           wreg	equ	0xFE8
 20854                           indf1	equ	0xFE7
 20855                           postdec1	equ	0xFE5
 20856                           plusw1	equ	0xFE3
 20857                           fsr1h	equ	0xFE2
 20858                           fsr1l	equ	0xFE1
 20859                           indf2	equ	0xFDF
 20860                           postinc2	equ	0xFDE
 20861                           postdec2	equ	0xFDD
 20862                           plusw2	equ	0xFDB
 20863                           fsr2h	equ	0xFDA
 20864                           fsr2l	equ	0xFD9
 20865                           status	equ	0xFD8
 20866                           
 20867 ;; *************** function _EUSART2_Initialize *****************
 20868 ;; Defined at:
 20869 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;		None
 20872 ;; Auto vars:     Size  Location     Type
 20873 ;;		None
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  1    wreg      void 
 20876 ;; Registers used:
 20877 ;;		wreg, status,2, status,0, cstack
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/0
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20887 ;;Total ram usage:        0 bytes
 20888 ;; Hardware stack levels used:    1
 20889 ;; Hardware stack levels required when called:   15
 20890 ;; This function calls:
 20891 ;;		_EUSART2_SetRxInterruptHandler
 20892 ;;		_EUSART2_SetTxInterruptHandler
 20893 ;; This function is called by:
 20894 ;;		_SYSTEM_Initialize
 20895 ;; This function uses a non-reentrant model
 20896 ;;
 20897                           
 20898                           	psect	text64
 20899  01614A                     __ptext64:
 20900                           	opt stack 0
 20901  01614A                     _EUSART2_Initialize:
 20902                           	opt stack 14
 20903                           
 20904                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 20905                           
 20906                           ; BSR set to: 14
 20907                           ;incstack = 0
 20908  01614A  827E               	bsf	3966,1,c	;volatile
 20909                           
 20910                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 20911  01614C  010E               	movlb	14	; () banked
 20912  01614E  9F2C               	bcf	44,7,b	;volatile
 20913                           
 20914                           ; BSR set to: 14
 20915                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 20916  016150  0E2C               	movlw	low _EUSART2_Receive_ISR
 20917  016152  0101               	movlb	1	; () banked
 20918  016154  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 20919  016156  0E58               	movlw	high _EUSART2_Receive_ISR
 20920  016158  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 20921  01615A  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 20922  01615C  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 20923  01615E  EC38  F0B7         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 20924                           
 20925                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 20926  016162  010E               	movlb	14	; () banked
 20927  016164  9D2C               	bcf	44,6,b	;volatile
 20928                           
 20929                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 20930  016166  0E06               	movlw	low _EUSART2_Transmit_ISR
 20931  016168  0101               	movlb	1	; () banked
 20932  01616A  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 20933  01616C  0E6A               	movlw	high _EUSART2_Transmit_ISR
 20934  01616E  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 20935  016170  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 20936  016172  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 20937  016174  EC31  F0B7         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 20938                           
 20939                           ;eusart2.c: 91: BAUD2CON = 0x08;
 20940  016178  0E08               	movlw	8
 20941  01617A  010E               	movlb	14	; () banked
 20942  01617C  6FF7               	movwf	247,b	;volatile
 20943                           
 20944                           ; BSR set to: 14
 20945                           ;eusart2.c: 94: RC2STA = 0x90;
 20946  01617E  0E90               	movlw	144
 20947  016180  6FF5               	movwf	245,b	;volatile
 20948                           
 20949                           ; BSR set to: 14
 20950                           ;eusart2.c: 97: TX2STA = 0x24;
 20951  016182  0E24               	movlw	36
 20952  016184  6FF6               	movwf	246,b	;volatile
 20953                           
 20954                           ; BSR set to: 14
 20955                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 20956  016186  0E8A               	movlw	138
 20957  016188  6FF3               	movwf	243,b	;volatile
 20958                           
 20959                           ; BSR set to: 14
 20960                           ;eusart2.c: 103: SP2BRGH = 0x00;
 20961  01618A  0E00               	movlw	0
 20962  01618C  6FF4               	movwf	244,b	;volatile
 20963                           
 20964                           ; BSR set to: 14
 20965                           ;eusart2.c: 107: eusart2TxHead = 0;
 20966  01618E  0E00               	movlw	0
 20967  016190  0101               	movlb	1	; () banked
 20968  016192  6FD4               	movwf	_eusart2TxHead& (0+255),b	;volatile
 20969                           
 20970                           ; BSR set to: 1
 20971                           ;eusart2.c: 108: eusart2TxTail = 0;
 20972  016194  0E00               	movlw	0
 20973  016196  6FD3               	movwf	_eusart2TxTail& (0+255),b	;volatile
 20974                           
 20975                           ; BSR set to: 1
 20976                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 20977  016198  0E80               	movlw	128
 20978  01619A  6FD2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 20979                           
 20980                           ; BSR set to: 1
 20981                           ;eusart2.c: 111: eusart2RxHead = 0;
 20982  01619C  0E00               	movlw	0
 20983  01619E  0100               	movlb	0	; () banked
 20984  0161A0  6FEC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;eusart2.c: 112: eusart2RxTail = 0;
 20988  0161A2  0E00               	movlw	0
 20989  0161A4  0101               	movlb	1	; () banked
 20990  0161A6  6FD1               	movwf	_eusart2RxTail& (0+255),b	;volatile
 20991                           
 20992                           ; BSR set to: 1
 20993                           ;eusart2.c: 113: eusart2RxCount = 0;
 20994  0161A8  0E00               	movlw	0
 20995  0161AA  6FD0               	movwf	_eusart2RxCount& (0+255),b	;volatile
 20996                           
 20997                           ; BSR set to: 1
 20998                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 20999  0161AC  010E               	movlb	14	; () banked
 21000  0161AE  8F2C               	bsf	44,7,b	;volatile
 21001                           
 21002                           ; BSR set to: 14
 21003                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 21004  0161B0  927E               	bcf	3966,1,c	;volatile
 21005                           
 21006                           ; BSR set to: 14
 21007  0161B2  0012               	return		;funcret
 21008  0161B4                     __end_of_EUSART2_Initialize:
 21009                           	opt stack 0
 21010                           tblptru	equ	0xFF8
 21011                           tblptrh	equ	0xFF7
 21012                           tblptrl	equ	0xFF6
 21013                           tablat	equ	0xFF5
 21014                           prodh	equ	0xFF4
 21015                           prodl	equ	0xFF3
 21016                           intcon	equ	0xFF2
 21017                           indf0	equ	0xFEF
 21018                           postinc0	equ	0xFEE
 21019                           fsr0h	equ	0xFEA
 21020                           fsr0l	equ	0xFE9
 21021                           wreg	equ	0xFE8
 21022                           indf1	equ	0xFE7
 21023                           postdec1	equ	0xFE5
 21024                           plusw1	equ	0xFE3
 21025                           fsr1h	equ	0xFE2
 21026                           fsr1l	equ	0xFE1
 21027                           indf2	equ	0xFDF
 21028                           postinc2	equ	0xFDE
 21029                           postdec2	equ	0xFDD
 21030                           plusw2	equ	0xFDB
 21031                           fsr2h	equ	0xFDA
 21032                           fsr2l	equ	0xFD9
 21033                           status	equ	0xFD8
 21034                           
 21035 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 21036 ;; Defined at:
 21037 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 21038 ;; Parameters:    Size  Location     Type
 21039 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21040 ;;		 -> EUSART2_Transmit_ISR(1), 
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;		None
 21043 ;; Return value:  Size  Location     Type
 21044 ;;                  1    wreg      void 
 21045 ;; Registers used:
 21046 ;;		wreg, status,2, status,0
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/0
 21049 ;;		On exit  : 0/0
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21052 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21055 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21056 ;;Total ram usage:        3 bytes
 21057 ;; Hardware stack levels used:    1
 21058 ;; Hardware stack levels required when called:   14
 21059 ;; This function calls:
 21060 ;;		Nothing
 21061 ;; This function is called by:
 21062 ;;		_EUSART2_Initialize
 21063 ;; This function uses a non-reentrant model
 21064 ;;
 21065                           
 21066                           	psect	text65
 21067  016E62                     __ptext65:
 21068                           	opt stack 0
 21069  016E62                     _EUSART2_SetTxInterruptHandler:
 21070                           	opt stack 14
 21071                           
 21072                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 21073                           
 21074                           ; BSR set to: 14
 21075                           ;incstack = 0
 21076  016E62  C117  F1C6         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 21077  016E66  C118  F1C7         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 21078  016E6A  C119  F1C8         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 21079  016E6E  0012               	return		;funcret
 21080  016E70                     __end_of_EUSART2_SetTxInterruptHandler:
 21081                           	opt stack 0
 21082                           tblptru	equ	0xFF8
 21083                           tblptrh	equ	0xFF7
 21084                           tblptrl	equ	0xFF6
 21085                           tablat	equ	0xFF5
 21086                           prodh	equ	0xFF4
 21087                           prodl	equ	0xFF3
 21088                           intcon	equ	0xFF2
 21089                           indf0	equ	0xFEF
 21090                           postinc0	equ	0xFEE
 21091                           fsr0h	equ	0xFEA
 21092                           fsr0l	equ	0xFE9
 21093                           wreg	equ	0xFE8
 21094                           indf1	equ	0xFE7
 21095                           postdec1	equ	0xFE5
 21096                           plusw1	equ	0xFE3
 21097                           fsr1h	equ	0xFE2
 21098                           fsr1l	equ	0xFE1
 21099                           indf2	equ	0xFDF
 21100                           postinc2	equ	0xFDE
 21101                           postdec2	equ	0xFDD
 21102                           plusw2	equ	0xFDB
 21103                           fsr2h	equ	0xFDA
 21104                           fsr2l	equ	0xFD9
 21105                           status	equ	0xFD8
 21106                           
 21107 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 21108 ;; Defined at:
 21109 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21112 ;;		 -> EUSART2_Receive_ISR(1), 
 21113 ;; Auto vars:     Size  Location     Type
 21114 ;;		None
 21115 ;; Return value:  Size  Location     Type
 21116 ;;                  1    wreg      void 
 21117 ;; Registers used:
 21118 ;;		wreg, status,2, status,0
 21119 ;; Tracked objects:
 21120 ;;		On entry : 0/0
 21121 ;;		On exit  : 0/0
 21122 ;;		Unchanged: 0/0
 21123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21124 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21127 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21128 ;;Total ram usage:        3 bytes
 21129 ;; Hardware stack levels used:    1
 21130 ;; Hardware stack levels required when called:   14
 21131 ;; This function calls:
 21132 ;;		Nothing
 21133 ;; This function is called by:
 21134 ;;		_EUSART2_Initialize
 21135 ;; This function uses a non-reentrant model
 21136 ;;
 21137                           
 21138                           	psect	text66
 21139  016E70                     __ptext66:
 21140                           	opt stack 0
 21141  016E70                     _EUSART2_SetRxInterruptHandler:
 21142                           	opt stack 14
 21143                           
 21144                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 21145                           
 21146                           ;incstack = 0
 21147  016E70  C117  F1C3         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 21148  016E74  C118  F1C4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 21149  016E78  C119  F1C5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 21150  016E7C  0012               	return		;funcret
 21151  016E7E                     __end_of_EUSART2_SetRxInterruptHandler:
 21152                           	opt stack 0
 21153                           tblptru	equ	0xFF8
 21154                           tblptrh	equ	0xFF7
 21155                           tblptrl	equ	0xFF6
 21156                           tablat	equ	0xFF5
 21157                           prodh	equ	0xFF4
 21158                           prodl	equ	0xFF3
 21159                           intcon	equ	0xFF2
 21160                           indf0	equ	0xFEF
 21161                           postinc0	equ	0xFEE
 21162                           fsr0h	equ	0xFEA
 21163                           fsr0l	equ	0xFE9
 21164                           wreg	equ	0xFE8
 21165                           indf1	equ	0xFE7
 21166                           postdec1	equ	0xFE5
 21167                           plusw1	equ	0xFE3
 21168                           fsr1h	equ	0xFE2
 21169                           fsr1l	equ	0xFE1
 21170                           indf2	equ	0xFDF
 21171                           postinc2	equ	0xFDE
 21172                           postdec2	equ	0xFDD
 21173                           plusw2	equ	0xFDB
 21174                           fsr2h	equ	0xFDA
 21175                           fsr2l	equ	0xFD9
 21176                           status	equ	0xFD8
 21177                           
 21178 ;; *************** function _ADCC_Initialize *****************
 21179 ;; Defined at:
 21180 ;;		line 63 in file "mcc_generated_files/adcc.c"
 21181 ;; Parameters:    Size  Location     Type
 21182 ;;		None
 21183 ;; Auto vars:     Size  Location     Type
 21184 ;;		None
 21185 ;; Return value:  Size  Location     Type
 21186 ;;                  1    wreg      void 
 21187 ;; Registers used:
 21188 ;;		wreg, status,2, status,0, cstack
 21189 ;; Tracked objects:
 21190 ;;		On entry : 0/0
 21191 ;;		On exit  : 0/0
 21192 ;;		Unchanged: 0/0
 21193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21198 ;;Total ram usage:        0 bytes
 21199 ;; Hardware stack levels used:    1
 21200 ;; Hardware stack levels required when called:   15
 21201 ;; This function calls:
 21202 ;;		_ADCC_SetADIInterruptHandler
 21203 ;; This function is called by:
 21204 ;;		_SYSTEM_Initialize
 21205 ;; This function uses a non-reentrant model
 21206 ;;
 21207                           
 21208                           	psect	text67
 21209  0162EA                     __ptext67:
 21210                           	opt stack 0
 21211  0162EA                     _ADCC_Initialize:
 21212                           	opt stack 14
 21213                           
 21214                           ;adcc.c: 67: ADLTHL = 0x00;
 21215                           
 21216                           ;incstack = 0
 21217  0162EA  0E00               	movlw	0
 21218  0162EC  6E6A               	movwf	3946,c	;volatile
 21219                           
 21220                           ;adcc.c: 69: ADLTHH = 0x00;
 21221  0162EE  0E00               	movlw	0
 21222  0162F0  6E6B               	movwf	3947,c	;volatile
 21223                           
 21224                           ;adcc.c: 71: ADUTHL = 0x00;
 21225  0162F2  0E00               	movlw	0
 21226  0162F4  6E6C               	movwf	3948,c	;volatile
 21227                           
 21228                           ;adcc.c: 73: ADUTHH = 0x00;
 21229  0162F6  0E00               	movlw	0
 21230  0162F8  6E6D               	movwf	3949,c	;volatile
 21231                           
 21232                           ;adcc.c: 75: ADSTPTL = 0x00;
 21233  0162FA  0E00               	movlw	0
 21234  0162FC  6E68               	movwf	3944,c	;volatile
 21235                           
 21236                           ;adcc.c: 77: ADSTPTH = 0x00;
 21237  0162FE  0E00               	movlw	0
 21238  016300  6E69               	movwf	3945,c	;volatile
 21239                           
 21240                           ;adcc.c: 79: ADRPT = 0x00;
 21241  016302  0E00               	movlw	0
 21242  016304  6E66               	movwf	3942,c	;volatile
 21243                           
 21244                           ;adcc.c: 81: ADPCH = 0x00;
 21245  016306  0E00               	movlw	0
 21246  016308  010F               	movlb	15	; () banked
 21247  01630A  6F5F               	movwf	95,b	;volatile
 21248                           
 21249                           ;adcc.c: 83: ADCAP = 0x00;
 21250  01630C  0E00               	movlw	0
 21251  01630E  6F5D               	movwf	93,b	;volatile
 21252                           
 21253                           ;adcc.c: 85: ADCON1 = 0x00;
 21254  016310  0E00               	movlw	0
 21255  016312  6F59               	movwf	89,b	;volatile
 21256                           
 21257                           ;adcc.c: 87: ADCON2 = 0x04;
 21258  016314  0E04               	movlw	4
 21259  016316  6F5A               	movwf	90,b	;volatile
 21260                           
 21261                           ;adcc.c: 89: ADCON3 = 0x00;
 21262  016318  0E00               	movlw	0
 21263  01631A  6F5B               	movwf	91,b	;volatile
 21264                           
 21265                           ;adcc.c: 91: ADSTAT = 0x00;
 21266  01631C  0E00               	movlw	0
 21267  01631E  6E65               	movwf	3941,c	;volatile
 21268                           
 21269                           ;adcc.c: 93: ADREF = 0x12;
 21270  016320  0E12               	movlw	18
 21271  016322  6F58               	movwf	88,b	;volatile
 21272                           
 21273                           ;adcc.c: 95: ADACT = 0x00;
 21274  016324  0E00               	movlw	0
 21275  016326  6F56               	movwf	86,b	;volatile
 21276                           
 21277                           ;adcc.c: 97: ADCLK = 0x00;
 21278  016328  0E00               	movlw	0
 21279  01632A  6F57               	movwf	87,b	;volatile
 21280                           
 21281                           ;adcc.c: 99: ADCON0 = 0x94;
 21282  01632C  0E94               	movlw	148
 21283  01632E  6E60               	movwf	3936,c	;volatile
 21284                           
 21285                           ;adcc.c: 101: ADACQ = 0x00;
 21286  016330  0E00               	movlw	0
 21287  016332  6F5C               	movwf	92,b	;volatile
 21288                           
 21289                           ; BSR set to: 15
 21290                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 21291  016334  010E               	movlb	14	; () banked
 21292  016336  9134               	bcf	52,0,b	;volatile
 21293                           
 21294                           ; BSR set to: 14
 21295                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 21296  016338  812A               	bsf	42,0,b	;volatile
 21297                           
 21298                           ; BSR set to: 14
 21299                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 21300  01633A  0ED8               	movlw	low _ADCC_DefaultInterruptHandler
 21301  01633C  0101               	movlb	1	; () banked
 21302  01633E  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 21303  016340  0E6E               	movlw	high _ADCC_DefaultInterruptHandler
 21304  016342  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 21305  016344  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 21306  016346  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 21307  016348  EC3F  F0B7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21308  01634C  0012               	return		;funcret
 21309  01634E                     __end_of_ADCC_Initialize:
 21310                           	opt stack 0
 21311                           tblptru	equ	0xFF8
 21312                           tblptrh	equ	0xFF7
 21313                           tblptrl	equ	0xFF6
 21314                           tablat	equ	0xFF5
 21315                           prodh	equ	0xFF4
 21316                           prodl	equ	0xFF3
 21317                           intcon	equ	0xFF2
 21318                           indf0	equ	0xFEF
 21319                           postinc0	equ	0xFEE
 21320                           fsr0h	equ	0xFEA
 21321                           fsr0l	equ	0xFE9
 21322                           wreg	equ	0xFE8
 21323                           indf1	equ	0xFE7
 21324                           postdec1	equ	0xFE5
 21325                           plusw1	equ	0xFE3
 21326                           fsr1h	equ	0xFE2
 21327                           fsr1l	equ	0xFE1
 21328                           indf2	equ	0xFDF
 21329                           postinc2	equ	0xFDE
 21330                           postdec2	equ	0xFDD
 21331                           plusw2	equ	0xFDB
 21332                           fsr2h	equ	0xFDA
 21333                           fsr2l	equ	0xFD9
 21334                           status	equ	0xFD8
 21335                           
 21336 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 21337 ;; Defined at:
 21338 ;;		line 306 in file "mcc_generated_files/adcc.c"
 21339 ;; Parameters:    Size  Location     Type
 21340 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21341 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 21342 ;; Auto vars:     Size  Location     Type
 21343 ;;		None
 21344 ;; Return value:  Size  Location     Type
 21345 ;;                  1    wreg      void 
 21346 ;; Registers used:
 21347 ;;		wreg, status,2, status,0
 21348 ;; Tracked objects:
 21349 ;;		On entry : 0/0
 21350 ;;		On exit  : 0/0
 21351 ;;		Unchanged: 0/0
 21352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21353 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21356 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21357 ;;Total ram usage:        3 bytes
 21358 ;; Hardware stack levels used:    1
 21359 ;; Hardware stack levels required when called:   14
 21360 ;; This function calls:
 21361 ;;		Nothing
 21362 ;; This function is called by:
 21363 ;;		_ADCC_Initialize
 21364 ;;		_main
 21365 ;; This function uses a non-reentrant model
 21366 ;;
 21367                           
 21368                           	psect	text68
 21369  016E7E                     __ptext68:
 21370                           	opt stack 0
 21371  016E7E                     _ADCC_SetADIInterruptHandler:
 21372                           	opt stack 14
 21373                           
 21374                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 21375                           
 21376                           ;incstack = 0
 21377  016E7E  C117  F0E6         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 21378  016E82  C118  F0E7         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 21379  016E86  C119  F0E8         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 21380  016E8A  0012               	return		;funcret
 21381  016E8C                     __end_of_ADCC_SetADIInterruptHandler:
 21382                           	opt stack 0
 21383                           tblptru	equ	0xFF8
 21384                           tblptrh	equ	0xFF7
 21385                           tblptrl	equ	0xFF6
 21386                           tablat	equ	0xFF5
 21387                           prodh	equ	0xFF4
 21388                           prodl	equ	0xFF3
 21389                           intcon	equ	0xFF2
 21390                           indf0	equ	0xFEF
 21391                           postinc0	equ	0xFEE
 21392                           fsr0h	equ	0xFEA
 21393                           fsr0l	equ	0xFE9
 21394                           wreg	equ	0xFE8
 21395                           indf1	equ	0xFE7
 21396                           postdec1	equ	0xFE5
 21397                           plusw1	equ	0xFE3
 21398                           fsr1h	equ	0xFE2
 21399                           fsr1l	equ	0xFE1
 21400                           indf2	equ	0xFDF
 21401                           postinc2	equ	0xFDE
 21402                           postdec2	equ	0xFDD
 21403                           plusw2	equ	0xFDB
 21404                           fsr2h	equ	0xFDA
 21405                           fsr2l	equ	0xFD9
 21406                           status	equ	0xFD8
 21407                           
 21408 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 21409 ;; Defined at:
 21410 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 21411 ;; Parameters:    Size  Location     Type
 21412 ;;		None
 21413 ;; Auto vars:     Size  Location     Type
 21414 ;;		None
 21415 ;; Return value:  Size  Location     Type
 21416 ;;                  1    wreg      void 
 21417 ;; Registers used:
 21418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21419 ;; Tracked objects:
 21420 ;;		On entry : 0/0
 21421 ;;		On exit  : 0/0
 21422 ;;		Unchanged: 0/0
 21423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21426 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21427 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21428 ;;Total ram usage:       21 bytes
 21429 ;; Hardware stack levels used:    1
 21430 ;; Hardware stack levels required when called:   13
 21431 ;; This function calls:
 21432 ;;		Absolute function
 21433 ;;		_EUSART2_Transmit_ISR
 21434 ;;		_HLVD_ISR
 21435 ;;		_TMR6_ISR
 21436 ;;		_TMR7_ISR
 21437 ;; This function is called by:
 21438 ;;		Interrupt level 1
 21439 ;; This function uses a non-reentrant model
 21440 ;;
 21441                           
 21442                           	psect	intcodelo
 21443  000018                     __pintcodelo:
 21444                           	opt stack 0
 21445  000018                     _INTERRUPT_InterruptManagerLow:
 21446                           	opt stack 9
 21447                           
 21448                           ;incstack = 0
 21449  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 21450  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 21451  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 21452  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 21453  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 21454  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 21455  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 21456  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 21457  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 21458  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 21459  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 21460  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 21461  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 21462  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 21463  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 21464  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 21465  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 21466  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 21467  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 21468  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 21469  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 21470  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 21471                           
 21472                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 21473  00006E  010E               	movlb	14	; () banked
 21474  000070  BB2E               	btfsc	46,5,b	;volatile
 21475                           
 21476                           ; BSR set to: 14
 21477  000072  AB38               	btfss	56,5,b	;volatile
 21478  000074  D003               	goto	i1l223
 21479                           
 21480                           ; BSR set to: 14
 21481                           ;interrupt_manager.c: 108: {
 21482                           ;interrupt_manager.c: 109: TMR6_ISR();
 21483  000076  ECC6  F0B5         	call	_TMR6_ISR	;wreg free
 21484                           
 21485                           ;interrupt_manager.c: 110: }
 21486  00007A  D01B               	goto	i1l229
 21487  00007C                     i1l223:
 21488                           
 21489                           ; BSR set to: 14
 21490                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 21491  00007C  BD2C               	btfsc	44,6,b	;volatile
 21492                           
 21493                           ; BSR set to: 14
 21494  00007E  AD36               	btfss	54,6,b	;volatile
 21495  000080  D00D               	goto	i1l225
 21496                           
 21497                           ; BSR set to: 14
 21498                           ;interrupt_manager.c: 112: {
 21499                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 21500  000082  D801               	call	i1u1807_28
 21501  000084  D016               	goto	i1l229
 21502  000086                     i1u1807_28:
 21503  000086  0005               	push	
 21504  000088  6EFA               	movwf	pclath,c
 21505  00008A  0101               	movlb	1	; () banked
 21506  00008C  51C6               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 21507  00008E  6EFD               	movwf	tosl,c
 21508  000090  51C7               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 21509  000092  6EFE               	movwf	tosh,c
 21510  000094  51C8               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 21511  000096  6EFF               	movwf	tosu,c
 21512  000098  50FA               	movf	pclath,w,c
 21513  00009A  0012               	return		;indir
 21514  00009C                     i1l225:
 21515                           
 21516                           ; BSR set to: 14
 21517                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 21518  00009C  BD2E               	btfsc	46,6,b	;volatile
 21519                           
 21520                           ; BSR set to: 14
 21521  00009E  AD38               	btfss	56,6,b	;volatile
 21522  0000A0  D003               	goto	i1l227
 21523                           
 21524                           ; BSR set to: 14
 21525                           ;interrupt_manager.c: 116: {
 21526                           ;interrupt_manager.c: 117: TMR7_ISR();
 21527  0000A2  EC1E  F0B5         	call	_TMR7_ISR	;wreg free
 21528                           
 21529                           ;interrupt_manager.c: 118: }
 21530  0000A6  D005               	goto	i1l229
 21531  0000A8                     i1l227:
 21532                           
 21533                           ; BSR set to: 14
 21534                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 21535  0000A8  BF2B               	btfsc	43,7,b	;volatile
 21536                           
 21537                           ; BSR set to: 14
 21538  0000AA  AF35               	btfss	53,7,b	;volatile
 21539  0000AC  D002               	goto	i1l229
 21540                           
 21541                           ; BSR set to: 14
 21542                           ;interrupt_manager.c: 120: {
 21543                           ;interrupt_manager.c: 121: HLVD_ISR();
 21544  0000AE  EC5C  F0B7         	call	_HLVD_ISR	;wreg free
 21545  0000B2                     i1l229:
 21546                           
 21547                           ;interrupt_manager.c: 123: else
 21548                           ;interrupt_manager.c: 124: {
 21549  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 21550  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 21551  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 21552  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 21553  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 21554  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 21555  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 21556  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 21557  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 21558  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 21559  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 21560  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 21561  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 21562  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 21563  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 21564  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 21565  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 21566  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 21567  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 21568  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 21569  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 21570  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 21571  000108  0010               	retfie	
 21572  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 21573                           	opt stack 0
 21574                           tosu	equ	0xFFF
 21575                           tosh	equ	0xFFE
 21576                           tosl	equ	0xFFD
 21577                           pclatu	equ	0xFFB
 21578                           pclath	equ	0xFFA
 21579                           tblptru	equ	0xFF8
 21580                           tblptrh	equ	0xFF7
 21581                           tblptrl	equ	0xFF6
 21582                           tablat	equ	0xFF5
 21583                           prodh	equ	0xFF4
 21584                           prodl	equ	0xFF3
 21585                           intcon	equ	0xFF2
 21586                           indf0	equ	0xFEF
 21587                           postinc0	equ	0xFEE
 21588                           fsr0h	equ	0xFEA
 21589                           fsr0l	equ	0xFE9
 21590                           wreg	equ	0xFE8
 21591                           indf1	equ	0xFE7
 21592                           postdec1	equ	0xFE5
 21593                           plusw1	equ	0xFE3
 21594                           fsr1h	equ	0xFE2
 21595                           fsr1l	equ	0xFE1
 21596                           bsr	equ	0xFE0
 21597                           indf2	equ	0xFDF
 21598                           postinc2	equ	0xFDE
 21599                           postdec2	equ	0xFDD
 21600                           plusw2	equ	0xFDB
 21601                           fsr2h	equ	0xFDA
 21602                           fsr2l	equ	0xFD9
 21603                           status	equ	0xFD8
 21604                           
 21605 ;; *************** function _TMR7_ISR *****************
 21606 ;; Defined at:
 21607 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 21608 ;; Parameters:    Size  Location     Type
 21609 ;;		None
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;		None
 21612 ;; Return value:  Size  Location     Type
 21613 ;;                  1    wreg      void 
 21614 ;; Registers used:
 21615 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 21616 ;; Tracked objects:
 21617 ;;		On entry : 0/0
 21618 ;;		On exit  : 0/0
 21619 ;;		Unchanged: 0/0
 21620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21625 ;;Total ram usage:        0 bytes
 21626 ;; Hardware stack levels used:    1
 21627 ;; Hardware stack levels required when called:   12
 21628 ;; This function calls:
 21629 ;;		Absolute function
 21630 ;;		_TMR7_DefaultInterruptHandler
 21631 ;;		_TMR7_WriteTimer
 21632 ;;		_acquisitionTimerCallback
 21633 ;; This function is called by:
 21634 ;;		_INTERRUPT_InterruptManagerLow
 21635 ;; This function uses a non-reentrant model
 21636 ;;
 21637                           
 21638                           	psect	text70
 21639  016A3C                     __ptext70:
 21640                           	opt stack 0
 21641  016A3C                     _TMR7_ISR:
 21642                           	opt stack 9
 21643                           
 21644                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 21645                           
 21646                           ;incstack = 0
 21647  016A3C  010E               	movlb	14	; () banked
 21648  016A3E  9D38               	bcf	56,6,b	;volatile
 21649                           
 21650                           ; BSR set to: 14
 21651                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 21652  016A40  C1CD  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 21653  016A44  C1CE  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 21654  016A48  EC14  F0B6         	call	_TMR7_WriteTimer	;wreg free
 21655                           
 21656                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 21657  016A4C  0101               	movlb	1	; () banked
 21658  016A4E  51BD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 21659  016A50  11BE               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 21660  016A52  11BF               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 21661  016A54  B4D8               	btfsc	status,2,c
 21662  016A56  0012               	return	
 21663                           
 21664                           ; BSR set to: 1
 21665                           ;tmr7.c: 172: {
 21666                           ;tmr7.c: 173: TMR7_InterruptHandler();
 21667  016A58  D801               	call	i1u1789_28
 21668  016A5A  0012               	return	
 21669  016A5C                     i1u1789_28:
 21670  016A5C  0005               	push	
 21671  016A5E  6EFA               	movwf	pclath,c
 21672  016A60  51BD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 21673  016A62  6EFD               	movwf	tosl,c
 21674  016A64  51BE               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 21675  016A66  6EFE               	movwf	tosh,c
 21676  016A68  51BF               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 21677  016A6A  6EFF               	movwf	tosu,c
 21678  016A6C  50FA               	movf	pclath,w,c
 21679  016A6E  0012               	return		;indir
 21680  016A70                     __end_of_TMR7_ISR:
 21681                           	opt stack 0
 21682                           tosu	equ	0xFFF
 21683                           tosh	equ	0xFFE
 21684                           tosl	equ	0xFFD
 21685                           pclatu	equ	0xFFB
 21686                           pclath	equ	0xFFA
 21687                           tblptru	equ	0xFF8
 21688                           tblptrh	equ	0xFF7
 21689                           tblptrl	equ	0xFF6
 21690                           tablat	equ	0xFF5
 21691                           prodh	equ	0xFF4
 21692                           prodl	equ	0xFF3
 21693                           intcon	equ	0xFF2
 21694                           indf0	equ	0xFEF
 21695                           postinc0	equ	0xFEE
 21696                           fsr0h	equ	0xFEA
 21697                           fsr0l	equ	0xFE9
 21698                           wreg	equ	0xFE8
 21699                           indf1	equ	0xFE7
 21700                           postdec1	equ	0xFE5
 21701                           plusw1	equ	0xFE3
 21702                           fsr1h	equ	0xFE2
 21703                           fsr1l	equ	0xFE1
 21704                           bsr	equ	0xFE0
 21705                           indf2	equ	0xFDF
 21706                           postinc2	equ	0xFDE
 21707                           postdec2	equ	0xFDD
 21708                           plusw2	equ	0xFDB
 21709                           fsr2h	equ	0xFDA
 21710                           fsr2l	equ	0xFD9
 21711                           status	equ	0xFD8
 21712                           
 21713 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 21714 ;; Defined at:
 21715 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 21716 ;; Parameters:    Size  Location     Type
 21717 ;;		None
 21718 ;; Auto vars:     Size  Location     Type
 21719 ;;		None
 21720 ;; Return value:  Size  Location     Type
 21721 ;;                  1    wreg      void 
 21722 ;; Registers used:
 21723 ;;		None
 21724 ;; Tracked objects:
 21725 ;;		On entry : 0/0
 21726 ;;		On exit  : 0/0
 21727 ;;		Unchanged: 0/0
 21728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21733 ;;Total ram usage:        0 bytes
 21734 ;; Hardware stack levels used:    1
 21735 ;; Hardware stack levels required when called:   10
 21736 ;; This function calls:
 21737 ;;		Nothing
 21738 ;; This function is called by:
 21739 ;;		_TMR7_Initialize
 21740 ;;		_TMR7_ISR
 21741 ;; This function uses a non-reentrant model
 21742 ;;
 21743                           
 21744                           	psect	text71
 21745  016ED2                     __ptext71:
 21746                           	opt stack 0
 21747  016ED2                     _TMR7_DefaultInterruptHandler:
 21748                           	opt stack 10
 21749                           
 21750                           ;incstack = 0
 21751  016ED2  0012               	return		;funcret
 21752  016ED4                     __end_of_TMR7_DefaultInterruptHandler:
 21753                           	opt stack 0
 21754                           tosu	equ	0xFFF
 21755                           tosh	equ	0xFFE
 21756                           tosl	equ	0xFFD
 21757                           pclatu	equ	0xFFB
 21758                           pclath	equ	0xFFA
 21759                           tblptru	equ	0xFF8
 21760                           tblptrh	equ	0xFF7
 21761                           tblptrl	equ	0xFF6
 21762                           tablat	equ	0xFF5
 21763                           prodh	equ	0xFF4
 21764                           prodl	equ	0xFF3
 21765                           intcon	equ	0xFF2
 21766                           indf0	equ	0xFEF
 21767                           postinc0	equ	0xFEE
 21768                           fsr0h	equ	0xFEA
 21769                           fsr0l	equ	0xFE9
 21770                           wreg	equ	0xFE8
 21771                           indf1	equ	0xFE7
 21772                           postdec1	equ	0xFE5
 21773                           plusw1	equ	0xFE3
 21774                           fsr1h	equ	0xFE2
 21775                           fsr1l	equ	0xFE1
 21776                           bsr	equ	0xFE0
 21777                           indf2	equ	0xFDF
 21778                           postinc2	equ	0xFDE
 21779                           postdec2	equ	0xFDD
 21780                           plusw2	equ	0xFDB
 21781                           fsr2h	equ	0xFDA
 21782                           fsr2l	equ	0xFD9
 21783                           status	equ	0xFD8
 21784                           
 21785 ;; *************** function _acquisitionTimerCallback *****************
 21786 ;; Defined at:
 21787 ;;		line 342 in file "main.c"
 21788 ;; Parameters:    Size  Location     Type
 21789 ;;		None
 21790 ;; Auto vars:     Size  Location     Type
 21791 ;;		None
 21792 ;; Return value:  Size  Location     Type
 21793 ;;                  1    wreg      void 
 21794 ;; Registers used:
 21795 ;;		wreg, status,2, cstack
 21796 ;; Tracked objects:
 21797 ;;		On entry : 0/0
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21805 ;;Total ram usage:        0 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; Hardware stack levels required when called:   11
 21808 ;; This function calls:
 21809 ;;		_ADCC_IsConversionDone
 21810 ;;		_ADCC_StartConversion
 21811 ;;		_TMR7_StopTimer
 21812 ;; This function is called by:
 21813 ;;		_main
 21814 ;;		_TMR7_ISR
 21815 ;; This function uses a non-reentrant model
 21816 ;;
 21817                           
 21818                           	psect	text72
 21819  0156BA                     __ptext72:
 21820                           	opt stack 0
 21821  0156BA                     _acquisitionTimerCallback:
 21822                           	opt stack 9
 21823                           
 21824                           ;main.c: 345: ADCC_StartConversion(channel_VSS);
 21825                           
 21826                           ;incstack = 0
 21827  0156BA  0E3C               	movlw	60
 21828  0156BC  EC46  F0B7         	call	_ADCC_StartConversion
 21829                           
 21830                           ;main.c: 348: while(!ADCC_IsConversionDone()) {
 21831  0156C0  D007               	goto	i1l969
 21832  0156C2                     i1l968:
 21833                           
 21834                           ;main.c: 350: if (adc_error_flag) {
 21835  0156C2  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 21836  0156C4  D005               	goto	i1l969
 21837                           
 21838                           ;main.c: 353: PIE5bits.TMR7IE = 0;
 21839  0156C6  010E               	movlb	14	; () banked
 21840  0156C8  9D2E               	bcf	46,6,b	;volatile
 21841                           
 21842                           ; BSR set to: 14
 21843                           ;main.c: 354: TMR7_StopTimer();
 21844  0156CA  EC63  F0B7         	call	_TMR7_StopTimer	;wreg free
 21845                           
 21846                           ;main.c: 355: return;
 21847  0156CE  0012               	return	
 21848  0156D0                     i1l969:
 21849  0156D0  EC4D  F0B7         	call	_ADCC_IsConversionDone	;wreg free
 21850  0156D4  0900               	iorlw	0
 21851  0156D6  B4D8               	btfsc	status,2,c
 21852  0156D8  D7F4               	goto	i1l968
 21853                           
 21854                           ;main.c: 357: }
 21855                           ;main.c: 359: }
 21856                           ;main.c: 362: ADCC_StartConversion(channel_FVR_buf1);
 21857  0156DA  0E3F               	movlw	63
 21858  0156DC  EC46  F0B7         	call	_ADCC_StartConversion
 21859                           
 21860                           ;main.c: 365: while(!ADCC_IsConversionDone()) {
 21861  0156E0  D007               	goto	i1l974
 21862  0156E2                     i1l973:
 21863                           
 21864                           ;main.c: 367: if (adc_error_flag) {
 21865  0156E2  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 21866  0156E4  D005               	goto	i1l974
 21867                           
 21868                           ;main.c: 370: PIE5bits.TMR7IE = 0;
 21869  0156E6  010E               	movlb	14	; () banked
 21870  0156E8  9D2E               	bcf	46,6,b	;volatile
 21871                           
 21872                           ; BSR set to: 14
 21873                           ;main.c: 371: TMR7_StopTimer();
 21874  0156EA  EC63  F0B7         	call	_TMR7_StopTimer	;wreg free
 21875                           
 21876                           ;main.c: 372: return;
 21877  0156EE  0012               	return	
 21878  0156F0                     i1l974:
 21879  0156F0  EC4D  F0B7         	call	_ADCC_IsConversionDone	;wreg free
 21880  0156F4  0900               	iorlw	0
 21881  0156F6  B4D8               	btfsc	status,2,c
 21882  0156F8  D7F4               	goto	i1l973
 21883                           
 21884                           ;main.c: 374: }
 21885                           ;main.c: 376: }
 21886                           ;main.c: 379: ADCC_StartConversion(POS3P3_ADC);
 21887  0156FA  0E22               	movlw	34
 21888  0156FC  EC46  F0B7         	call	_ADCC_StartConversion
 21889                           
 21890                           ;main.c: 382: while(!ADCC_IsConversionDone()) {
 21891  015700  D007               	goto	i1l978
 21892  015702                     i1l977:
 21893                           
 21894                           ;main.c: 384: if (adc_error_flag) {
 21895  015702  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 21896  015704  D005               	goto	i1l978
 21897                           
 21898                           ;main.c: 387: PIE5bits.TMR7IE = 0;
 21899  015706  010E               	movlb	14	; () banked
 21900  015708  9D2E               	bcf	46,6,b	;volatile
 21901                           
 21902                           ; BSR set to: 14
 21903                           ;main.c: 388: TMR7_StopTimer();
 21904  01570A  EC63  F0B7         	call	_TMR7_StopTimer	;wreg free
 21905                           
 21906                           ;main.c: 389: return;
 21907  01570E  0012               	return	
 21908  015710                     i1l978:
 21909  015710  EC4D  F0B7         	call	_ADCC_IsConversionDone	;wreg free
 21910  015714  0900               	iorlw	0
 21911  015716  B4D8               	btfsc	status,2,c
 21912  015718  D7F4               	goto	i1l977
 21913                           
 21914                           ;main.c: 391: }
 21915                           ;main.c: 393: }
 21916                           ;main.c: 396: ADCC_StartConversion(ISNS_ADC);
 21917  01571A  0E00               	movlw	0
 21918  01571C  EC46  F0B7         	call	_ADCC_StartConversion
 21919                           
 21920                           ;main.c: 399: while(!ADCC_IsConversionDone()) {
 21921  015720  D007               	goto	i1l982
 21922  015722                     i1l981:
 21923                           
 21924                           ;main.c: 401: if (adc_error_flag) {
 21925  015722  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 21926  015724  D005               	goto	i1l982
 21927                           
 21928                           ;main.c: 404: PIE5bits.TMR7IE = 0;
 21929  015726  010E               	movlb	14	; () banked
 21930  015728  9D2E               	bcf	46,6,b	;volatile
 21931                           
 21932                           ; BSR set to: 14
 21933                           ;main.c: 405: TMR7_StopTimer();
 21934  01572A  EC63  F0B7         	call	_TMR7_StopTimer	;wreg free
 21935                           
 21936                           ;main.c: 406: return;
 21937  01572E  0012               	return	
 21938  015730                     i1l982:
 21939  015730  EC4D  F0B7         	call	_ADCC_IsConversionDone	;wreg free
 21940  015734  0900               	iorlw	0
 21941  015736  B4D8               	btfsc	status,2,c
 21942  015738  D7F4               	goto	i1l981
 21943                           
 21944                           ;main.c: 408: }
 21945                           ;main.c: 410: }
 21946                           ;main.c: 413: ADCC_StartConversion(POS12_ADC);
 21947  01573A  0E04               	movlw	4
 21948  01573C  EC46  F0B7         	call	_ADCC_StartConversion
 21949                           
 21950                           ;main.c: 416: while(!ADCC_IsConversionDone()) {
 21951  015740  D007               	goto	i1l986
 21952  015742                     i1l985:
 21953                           
 21954                           ;main.c: 418: if (adc_error_flag) {
 21955  015742  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 21956  015744  D005               	goto	i1l986
 21957                           
 21958                           ;main.c: 421: PIE5bits.TMR7IE = 0;
 21959  015746  010E               	movlb	14	; () banked
 21960  015748  9D2E               	bcf	46,6,b	;volatile
 21961                           
 21962                           ; BSR set to: 14
 21963                           ;main.c: 422: TMR7_StopTimer();
 21964  01574A  EC63  F0B7         	call	_TMR7_StopTimer	;wreg free
 21965                           
 21966                           ;main.c: 423: return;
 21967  01574E  0012               	return	
 21968  015750                     i1l986:
 21969  015750  EC4D  F0B7         	call	_ADCC_IsConversionDone	;wreg free
 21970  015754  0900               	iorlw	0
 21971  015756  B4D8               	btfsc	status,2,c
 21972  015758  D7F4               	goto	i1l985
 21973                           
 21974                           ;main.c: 425: }
 21975                           ;main.c: 427: }
 21976                           ;main.c: 430: ADCC_StartConversion(channel_Temp);
 21977  01575A  0E3D               	movlw	61
 21978  01575C  EC46  F0B7         	call	_ADCC_StartConversion
 21979                           
 21980                           ;main.c: 433: while(!ADCC_IsConversionDone()) {
 21981  015760  D007               	goto	i1l990
 21982  015762                     i1l989:
 21983                           
 21984                           ;main.c: 435: if (adc_error_flag) {
 21985  015762  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 21986  015764  D005               	goto	i1l990
 21987                           
 21988                           ;main.c: 438: PIE5bits.TMR7IE == 0;
 21989  015766  010E               	movlb	14	; () banked
 21990  015768  512E               	movf	46,w,b	;volatile
 21991                           
 21992                           ; BSR set to: 14
 21993                           ;main.c: 439: TMR7_StopTimer();
 21994  01576A  EC63  F0B7         	call	_TMR7_StopTimer	;wreg free
 21995                           
 21996                           ;main.c: 440: return;
 21997  01576E  0012               	return	
 21998  015770                     i1l990:
 21999  015770  EC4D  F0B7         	call	_ADCC_IsConversionDone	;wreg free
 22000  015774  0900               	iorlw	0
 22001  015776  A4D8               	btfss	status,2,c
 22002  015778  0012               	return	
 22003  01577A  D7F3               	goto	i1l989
 22004  01577C                     __end_of_acquisitionTimerCallback:
 22005                           	opt stack 0
 22006                           tosu	equ	0xFFF
 22007                           tosh	equ	0xFFE
 22008                           tosl	equ	0xFFD
 22009                           pclatu	equ	0xFFB
 22010                           pclath	equ	0xFFA
 22011                           tblptru	equ	0xFF8
 22012                           tblptrh	equ	0xFF7
 22013                           tblptrl	equ	0xFF6
 22014                           tablat	equ	0xFF5
 22015                           prodh	equ	0xFF4
 22016                           prodl	equ	0xFF3
 22017                           intcon	equ	0xFF2
 22018                           indf0	equ	0xFEF
 22019                           postinc0	equ	0xFEE
 22020                           fsr0h	equ	0xFEA
 22021                           fsr0l	equ	0xFE9
 22022                           wreg	equ	0xFE8
 22023                           indf1	equ	0xFE7
 22024                           postdec1	equ	0xFE5
 22025                           plusw1	equ	0xFE3
 22026                           fsr1h	equ	0xFE2
 22027                           fsr1l	equ	0xFE1
 22028                           bsr	equ	0xFE0
 22029                           indf2	equ	0xFDF
 22030                           postinc2	equ	0xFDE
 22031                           postdec2	equ	0xFDD
 22032                           plusw2	equ	0xFDB
 22033                           fsr2h	equ	0xFDA
 22034                           fsr2l	equ	0xFD9
 22035                           status	equ	0xFD8
 22036                           
 22037 ;; *************** function _TMR7_StopTimer *****************
 22038 ;; Defined at:
 22039 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 22040 ;; Parameters:    Size  Location     Type
 22041 ;;		None
 22042 ;; Auto vars:     Size  Location     Type
 22043 ;;		None
 22044 ;; Return value:  Size  Location     Type
 22045 ;;                  1    wreg      void 
 22046 ;; Registers used:
 22047 ;;		None
 22048 ;; Tracked objects:
 22049 ;;		On entry : 0/0
 22050 ;;		On exit  : 0/0
 22051 ;;		Unchanged: 0/0
 22052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22057 ;;Total ram usage:        0 bytes
 22058 ;; Hardware stack levels used:    1
 22059 ;; Hardware stack levels required when called:   10
 22060 ;; This function calls:
 22061 ;;		Nothing
 22062 ;; This function is called by:
 22063 ;;		_acquisitionTimerCallback
 22064 ;; This function uses a non-reentrant model
 22065 ;;
 22066                           
 22067                           	psect	text73
 22068  016EC6                     __ptext73:
 22069                           	opt stack 0
 22070  016EC6                     _TMR7_StopTimer:
 22071                           	opt stack 9
 22072                           
 22073                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 22074                           
 22075                           ;incstack = 0
 22076  016EC6  010F               	movlb	15	; () banked
 22077  016EC8  9130               	bcf	48,0,b	;volatile
 22078                           
 22079                           ; BSR set to: 15
 22080  016ECA  0012               	return		;funcret
 22081  016ECC                     __end_of_TMR7_StopTimer:
 22082                           	opt stack 0
 22083                           tosu	equ	0xFFF
 22084                           tosh	equ	0xFFE
 22085                           tosl	equ	0xFFD
 22086                           pclatu	equ	0xFFB
 22087                           pclath	equ	0xFFA
 22088                           tblptru	equ	0xFF8
 22089                           tblptrh	equ	0xFF7
 22090                           tblptrl	equ	0xFF6
 22091                           tablat	equ	0xFF5
 22092                           prodh	equ	0xFF4
 22093                           prodl	equ	0xFF3
 22094                           intcon	equ	0xFF2
 22095                           indf0	equ	0xFEF
 22096                           postinc0	equ	0xFEE
 22097                           fsr0h	equ	0xFEA
 22098                           fsr0l	equ	0xFE9
 22099                           wreg	equ	0xFE8
 22100                           indf1	equ	0xFE7
 22101                           postdec1	equ	0xFE5
 22102                           plusw1	equ	0xFE3
 22103                           fsr1h	equ	0xFE2
 22104                           fsr1l	equ	0xFE1
 22105                           bsr	equ	0xFE0
 22106                           indf2	equ	0xFDF
 22107                           postinc2	equ	0xFDE
 22108                           postdec2	equ	0xFDD
 22109                           plusw2	equ	0xFDB
 22110                           fsr2h	equ	0xFDA
 22111                           fsr2l	equ	0xFD9
 22112                           status	equ	0xFD8
 22113                           
 22114 ;; *************** function _ADCC_StartConversion *****************
 22115 ;; Defined at:
 22116 ;;		line 112 in file "mcc_generated_files/adcc.c"
 22117 ;; Parameters:    Size  Location     Type
 22118 ;;  channel         1    wreg     enum E17310
 22119 ;; Auto vars:     Size  Location     Type
 22120 ;;  channel         1    0[BANK1 ] enum E17310
 22121 ;; Return value:  Size  Location     Type
 22122 ;;                  1    wreg      void 
 22123 ;; Registers used:
 22124 ;;		wreg
 22125 ;; Tracked objects:
 22126 ;;		On entry : 0/0
 22127 ;;		On exit  : 0/0
 22128 ;;		Unchanged: 0/0
 22129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22131 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22133 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22134 ;;Total ram usage:        1 bytes
 22135 ;; Hardware stack levels used:    1
 22136 ;; Hardware stack levels required when called:   10
 22137 ;; This function calls:
 22138 ;;		Nothing
 22139 ;; This function is called by:
 22140 ;;		_acquisitionTimerCallback
 22141 ;; This function uses a non-reentrant model
 22142 ;;
 22143                           
 22144                           	psect	text74
 22145  016E8C                     __ptext74:
 22146                           	opt stack 0
 22147  016E8C                     _ADCC_StartConversion:
 22148                           	opt stack 9
 22149                           
 22150                           ; BSR set to: 15
 22151                           ;incstack = 0
 22152                           ;ADCC_StartConversion@channel stored from wreg
 22153  016E8C  0101               	movlb	1	; () banked
 22154  016E8E  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 22155                           
 22156                           ;adcc.c: 115: ADPCH = channel;
 22157  016E90  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 22158                           
 22159                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 22160  016E94  8E60               	bsf	3936,7,c	;volatile
 22161                           
 22162                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 22163  016E96  8060               	bsf	3936,0,c	;volatile
 22164  016E98  0012               	return		;funcret
 22165  016E9A                     __end_of_ADCC_StartConversion:
 22166                           	opt stack 0
 22167                           tosu	equ	0xFFF
 22168                           tosh	equ	0xFFE
 22169                           tosl	equ	0xFFD
 22170                           pclatu	equ	0xFFB
 22171                           pclath	equ	0xFFA
 22172                           tblptru	equ	0xFF8
 22173                           tblptrh	equ	0xFF7
 22174                           tblptrl	equ	0xFF6
 22175                           tablat	equ	0xFF5
 22176                           prodh	equ	0xFF4
 22177                           prodl	equ	0xFF3
 22178                           intcon	equ	0xFF2
 22179                           indf0	equ	0xFEF
 22180                           postinc0	equ	0xFEE
 22181                           fsr0h	equ	0xFEA
 22182                           fsr0l	equ	0xFE9
 22183                           wreg	equ	0xFE8
 22184                           indf1	equ	0xFE7
 22185                           postdec1	equ	0xFE5
 22186                           plusw1	equ	0xFE3
 22187                           fsr1h	equ	0xFE2
 22188                           fsr1l	equ	0xFE1
 22189                           bsr	equ	0xFE0
 22190                           indf2	equ	0xFDF
 22191                           postinc2	equ	0xFDE
 22192                           postdec2	equ	0xFDD
 22193                           plusw2	equ	0xFDB
 22194                           fsr2h	equ	0xFDA
 22195                           fsr2l	equ	0xFD9
 22196                           status	equ	0xFD8
 22197                           
 22198 ;; *************** function _ADCC_IsConversionDone *****************
 22199 ;; Defined at:
 22200 ;;		line 124 in file "mcc_generated_files/adcc.c"
 22201 ;; Parameters:    Size  Location     Type
 22202 ;;		None
 22203 ;; Auto vars:     Size  Location     Type
 22204 ;;		None
 22205 ;; Return value:  Size  Location     Type
 22206 ;;                  1    wreg      unsigned char 
 22207 ;; Registers used:
 22208 ;;		wreg
 22209 ;; Tracked objects:
 22210 ;;		On entry : 0/0
 22211 ;;		On exit  : 0/0
 22212 ;;		Unchanged: 0/0
 22213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22218 ;;Total ram usage:        0 bytes
 22219 ;; Hardware stack levels used:    1
 22220 ;; Hardware stack levels required when called:   10
 22221 ;; This function calls:
 22222 ;;		Nothing
 22223 ;; This function is called by:
 22224 ;;		_acquisitionTimerCallback
 22225 ;; This function uses a non-reentrant model
 22226 ;;
 22227                           
 22228                           	psect	text75
 22229  016E9A                     __ptext75:
 22230                           	opt stack 0
 22231  016E9A                     _ADCC_IsConversionDone:
 22232                           	opt stack 9
 22233                           
 22234                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 22235                           
 22236                           ;incstack = 0
 22237  016E9A  B060               	btfsc	3936,0,c	;volatile
 22238  016E9C  D002               	goto	i1u746_20
 22239  016E9E  0E01               	movlw	1
 22240  016EA0  0012               	return	
 22241  016EA2                     i1u746_20:
 22242  016EA2  0E00               	movlw	0
 22243  016EA4  0012               	return	
 22244  016EA6                     __end_of_ADCC_IsConversionDone:
 22245                           	opt stack 0
 22246                           tosu	equ	0xFFF
 22247                           tosh	equ	0xFFE
 22248                           tosl	equ	0xFFD
 22249                           pclatu	equ	0xFFB
 22250                           pclath	equ	0xFFA
 22251                           tblptru	equ	0xFF8
 22252                           tblptrh	equ	0xFF7
 22253                           tblptrl	equ	0xFF6
 22254                           tablat	equ	0xFF5
 22255                           prodh	equ	0xFF4
 22256                           prodl	equ	0xFF3
 22257                           intcon	equ	0xFF2
 22258                           indf0	equ	0xFEF
 22259                           postinc0	equ	0xFEE
 22260                           fsr0h	equ	0xFEA
 22261                           fsr0l	equ	0xFE9
 22262                           wreg	equ	0xFE8
 22263                           indf1	equ	0xFE7
 22264                           postdec1	equ	0xFE5
 22265                           plusw1	equ	0xFE3
 22266                           fsr1h	equ	0xFE2
 22267                           fsr1l	equ	0xFE1
 22268                           bsr	equ	0xFE0
 22269                           indf2	equ	0xFDF
 22270                           postinc2	equ	0xFDE
 22271                           postdec2	equ	0xFDD
 22272                           plusw2	equ	0xFDB
 22273                           fsr2h	equ	0xFDA
 22274                           fsr2l	equ	0xFD9
 22275                           status	equ	0xFD8
 22276                           
 22277 ;; *************** function _TMR7_WriteTimer *****************
 22278 ;; Defined at:
 22279 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 22280 ;; Parameters:    Size  Location     Type
 22281 ;;  timerVal        2    0[BANK1 ] unsigned int 
 22282 ;; Auto vars:     Size  Location     Type
 22283 ;;		None
 22284 ;; Return value:  Size  Location     Type
 22285 ;;                  1    wreg      void 
 22286 ;; Registers used:
 22287 ;;		wreg, status,2
 22288 ;; Tracked objects:
 22289 ;;		On entry : 0/0
 22290 ;;		On exit  : 0/0
 22291 ;;		Unchanged: 0/0
 22292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22293 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22296 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22297 ;;Total ram usage:        2 bytes
 22298 ;; Hardware stack levels used:    1
 22299 ;; Hardware stack levels required when called:   10
 22300 ;; This function calls:
 22301 ;;		Nothing
 22302 ;; This function is called by:
 22303 ;;		_TMR7_ISR
 22304 ;;		_TMR7_Reload
 22305 ;; This function uses a non-reentrant model
 22306 ;;
 22307                           
 22308                           	psect	text76
 22309  016C28                     __ptext76:
 22310                           	opt stack 0
 22311  016C28                     _TMR7_WriteTimer:
 22312                           	opt stack 10
 22313                           
 22314                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 22315                           
 22316                           ;incstack = 0
 22317  016C28  010F               	movlb	15	; () banked
 22318  016C2A  A530               	btfss	48,2,b	;volatile
 22319  016C2C  D009               	goto	i1l640
 22320                           
 22321                           ; BSR set to: 15
 22322                           ;tmr7.c: 130: {
 22323                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 22324  016C2E  9130               	bcf	48,0,b	;volatile
 22325                           
 22326                           ; BSR set to: 15
 22327                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 22328  016C30  0101               	movlb	1	; () banked
 22329  016C32  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 22330  016C34  010F               	movlb	15	; () banked
 22331  016C36  6F2F               	movwf	47,b	;volatile
 22332                           
 22333                           ; BSR set to: 15
 22334                           ;tmr7.c: 136: TMR7L = timerVal;
 22335  016C38  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 22336                           
 22337                           ; BSR set to: 15
 22338                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 22339  016C3C  8130               	bsf	48,0,b	;volatile
 22340                           
 22341                           ;tmr7.c: 140: }
 22342  016C3E  0012               	return	
 22343  016C40                     i1l640:
 22344                           
 22345                           ; BSR set to: 15
 22346                           ;tmr7.c: 141: else
 22347                           ;tmr7.c: 142: {
 22348                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 22349                           
 22350                           ; BSR set to: 15
 22351  016C40  0101               	movlb	1	; () banked
 22352  016C42  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 22353  016C44  010F               	movlb	15	; () banked
 22354  016C46  6F2F               	movwf	47,b	;volatile
 22355                           
 22356                           ; BSR set to: 15
 22357                           ;tmr7.c: 145: TMR7L = timerVal;
 22358  016C48  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 22359  016C4C  0012               	return	
 22360  016C4E                     __end_of_TMR7_WriteTimer:
 22361                           	opt stack 0
 22362                           tosu	equ	0xFFF
 22363                           tosh	equ	0xFFE
 22364                           tosl	equ	0xFFD
 22365                           pclatu	equ	0xFFB
 22366                           pclath	equ	0xFFA
 22367                           tblptru	equ	0xFF8
 22368                           tblptrh	equ	0xFF7
 22369                           tblptrl	equ	0xFF6
 22370                           tablat	equ	0xFF5
 22371                           prodh	equ	0xFF4
 22372                           prodl	equ	0xFF3
 22373                           intcon	equ	0xFF2
 22374                           indf0	equ	0xFEF
 22375                           postinc0	equ	0xFEE
 22376                           fsr0h	equ	0xFEA
 22377                           fsr0l	equ	0xFE9
 22378                           wreg	equ	0xFE8
 22379                           indf1	equ	0xFE7
 22380                           postdec1	equ	0xFE5
 22381                           plusw1	equ	0xFE3
 22382                           fsr1h	equ	0xFE2
 22383                           fsr1l	equ	0xFE1
 22384                           bsr	equ	0xFE0
 22385                           indf2	equ	0xFDF
 22386                           postinc2	equ	0xFDE
 22387                           postdec2	equ	0xFDD
 22388                           plusw2	equ	0xFDB
 22389                           fsr2h	equ	0xFDA
 22390                           fsr2l	equ	0xFD9
 22391                           status	equ	0xFD8
 22392                           
 22393 ;; *************** function _TMR6_ISR *****************
 22394 ;; Defined at:
 22395 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 22396 ;; Parameters:    Size  Location     Type
 22397 ;;		None
 22398 ;; Auto vars:     Size  Location     Type
 22399 ;;		None
 22400 ;; Return value:  Size  Location     Type
 22401 ;;                  1    wreg      void 
 22402 ;; Registers used:
 22403 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 22404 ;; Tracked objects:
 22405 ;;		On entry : 0/0
 22406 ;;		On exit  : 0/0
 22407 ;;		Unchanged: 0/0
 22408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22413 ;;Total ram usage:        0 bytes
 22414 ;; Hardware stack levels used:    1
 22415 ;; Hardware stack levels required when called:   11
 22416 ;; This function calls:
 22417 ;;		Absolute function
 22418 ;;		_TMR6_DefaultInterruptHandler
 22419 ;;		_heartbeatTimerCallback
 22420 ;; This function is called by:
 22421 ;;		_INTERRUPT_InterruptManagerLow
 22422 ;; This function uses a non-reentrant model
 22423 ;;
 22424                           
 22425                           	psect	text77
 22426  016B8C                     __ptext77:
 22427                           	opt stack 0
 22428  016B8C                     _TMR6_ISR:
 22429                           	opt stack 10
 22430                           
 22431                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 22432                           
 22433                           ; BSR set to: 15
 22434                           ;incstack = 0
 22435  016B8C  010E               	movlb	14	; () banked
 22436  016B8E  9B38               	bcf	56,5,b	;volatile
 22437                           
 22438                           ; BSR set to: 14
 22439                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 22440  016B90  0101               	movlb	1	; () banked
 22441  016B92  51C0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22442  016B94  11C1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22443  016B96  11C2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22444  016B98  B4D8               	btfsc	status,2,c
 22445  016B9A  0012               	return	
 22446                           
 22447                           ; BSR set to: 1
 22448                           ;tmr6.c: 172: {
 22449                           ;tmr6.c: 173: TMR6_InterruptHandler();
 22450  016B9C  D801               	call	i1u1787_28
 22451  016B9E  0012               	return	
 22452  016BA0                     i1u1787_28:
 22453  016BA0  0005               	push	
 22454  016BA2  6EFA               	movwf	pclath,c
 22455  016BA4  51C0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22456  016BA6  6EFD               	movwf	tosl,c
 22457  016BA8  51C1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22458  016BAA  6EFE               	movwf	tosh,c
 22459  016BAC  51C2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22460  016BAE  6EFF               	movwf	tosu,c
 22461  016BB0  50FA               	movf	pclath,w,c
 22462  016BB2  0012               	return		;indir
 22463  016BB4                     __end_of_TMR6_ISR:
 22464                           	opt stack 0
 22465                           tosu	equ	0xFFF
 22466                           tosh	equ	0xFFE
 22467                           tosl	equ	0xFFD
 22468                           pclatu	equ	0xFFB
 22469                           pclath	equ	0xFFA
 22470                           tblptru	equ	0xFF8
 22471                           tblptrh	equ	0xFF7
 22472                           tblptrl	equ	0xFF6
 22473                           tablat	equ	0xFF5
 22474                           prodh	equ	0xFF4
 22475                           prodl	equ	0xFF3
 22476                           intcon	equ	0xFF2
 22477                           indf0	equ	0xFEF
 22478                           postinc0	equ	0xFEE
 22479                           fsr0h	equ	0xFEA
 22480                           fsr0l	equ	0xFE9
 22481                           wreg	equ	0xFE8
 22482                           indf1	equ	0xFE7
 22483                           postdec1	equ	0xFE5
 22484                           plusw1	equ	0xFE3
 22485                           fsr1h	equ	0xFE2
 22486                           fsr1l	equ	0xFE1
 22487                           bsr	equ	0xFE0
 22488                           indf2	equ	0xFDF
 22489                           postinc2	equ	0xFDE
 22490                           postdec2	equ	0xFDD
 22491                           plusw2	equ	0xFDB
 22492                           fsr2h	equ	0xFDA
 22493                           fsr2l	equ	0xFD9
 22494                           status	equ	0xFD8
 22495                           
 22496 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 22497 ;; Defined at:
 22498 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 22499 ;; Parameters:    Size  Location     Type
 22500 ;;		None
 22501 ;; Auto vars:     Size  Location     Type
 22502 ;;		None
 22503 ;; Return value:  Size  Location     Type
 22504 ;;                  1    wreg      void 
 22505 ;; Registers used:
 22506 ;;		None
 22507 ;; Tracked objects:
 22508 ;;		On entry : 0/0
 22509 ;;		On exit  : 0/0
 22510 ;;		Unchanged: 0/0
 22511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22516 ;;Total ram usage:        0 bytes
 22517 ;; Hardware stack levels used:    1
 22518 ;; Hardware stack levels required when called:   10
 22519 ;; This function calls:
 22520 ;;		Nothing
 22521 ;; This function is called by:
 22522 ;;		_TMR6_Initialize
 22523 ;;		_TMR6_ISR
 22524 ;; This function uses a non-reentrant model
 22525 ;;
 22526                           
 22527                           	psect	text78
 22528  016ED4                     __ptext78:
 22529                           	opt stack 0
 22530  016ED4                     _TMR6_DefaultInterruptHandler:
 22531                           	opt stack 10
 22532                           
 22533                           ;incstack = 0
 22534  016ED4  0012               	return		;funcret
 22535  016ED6                     __end_of_TMR6_DefaultInterruptHandler:
 22536                           	opt stack 0
 22537                           tosu	equ	0xFFF
 22538                           tosh	equ	0xFFE
 22539                           tosl	equ	0xFFD
 22540                           pclatu	equ	0xFFB
 22541                           pclath	equ	0xFFA
 22542                           tblptru	equ	0xFF8
 22543                           tblptrh	equ	0xFF7
 22544                           tblptrl	equ	0xFF6
 22545                           tablat	equ	0xFF5
 22546                           prodh	equ	0xFF4
 22547                           prodl	equ	0xFF3
 22548                           intcon	equ	0xFF2
 22549                           indf0	equ	0xFEF
 22550                           postinc0	equ	0xFEE
 22551                           fsr0h	equ	0xFEA
 22552                           fsr0l	equ	0xFE9
 22553                           wreg	equ	0xFE8
 22554                           indf1	equ	0xFE7
 22555                           postdec1	equ	0xFE5
 22556                           plusw1	equ	0xFE3
 22557                           fsr1h	equ	0xFE2
 22558                           fsr1l	equ	0xFE1
 22559                           bsr	equ	0xFE0
 22560                           indf2	equ	0xFDF
 22561                           postinc2	equ	0xFDE
 22562                           postdec2	equ	0xFDD
 22563                           plusw2	equ	0xFDB
 22564                           fsr2h	equ	0xFDA
 22565                           fsr2l	equ	0xFD9
 22566                           status	equ	0xFD8
 22567                           
 22568 ;; *************** function _heartbeatTimerCallback *****************
 22569 ;; Defined at:
 22570 ;;		line 139 in file "main.c"
 22571 ;; Parameters:    Size  Location     Type
 22572 ;;		None
 22573 ;; Auto vars:     Size  Location     Type
 22574 ;;		None
 22575 ;; Return value:  Size  Location     Type
 22576 ;;                  1    wreg      void 
 22577 ;; Registers used:
 22578 ;;		wreg, status,2, status,0
 22579 ;; Tracked objects:
 22580 ;;		On entry : 0/0
 22581 ;;		On exit  : 0/0
 22582 ;;		Unchanged: 0/0
 22583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22586 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22587 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22588 ;;Total ram usage:        1 bytes
 22589 ;; Hardware stack levels used:    1
 22590 ;; Hardware stack levels required when called:   10
 22591 ;; This function calls:
 22592 ;;		Nothing
 22593 ;; This function is called by:
 22594 ;;		_main
 22595 ;;		_TMR6_ISR
 22596 ;; This function uses a non-reentrant model
 22597 ;;
 22598                           
 22599                           	psect	text79
 22600  0168E4                     __ptext79:
 22601                           	opt stack 0
 22602  0168E4                     _heartbeatTimerCallback:
 22603                           	opt stack 10
 22604                           
 22605                           ;main.c: 142: LATFbits.LATF2 = !LATFbits.LATF2;
 22606                           
 22607                           ;incstack = 0
 22608  0168E4  B47E               	btfsc	3966,2,c	;volatile
 22609  0168E6  D004               	goto	i1u806_20
 22610  0168E8  0101               	movlb	1	; () banked
 22611  0168EA  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 22612  0168EC  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 22613  0168EE  D002               	goto	i1u807_28
 22614  0168F0                     i1u806_20:
 22615  0168F0  0101               	movlb	1	; () banked
 22616  0168F2  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 22617  0168F4                     i1u807_28:
 22618  0168F4  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 22619  0168F6  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 22620  0168F8  507E               	movf	3966,w,c	;volatile
 22621  0168FA  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 22622  0168FC  0BFB               	andlw	-5
 22623  0168FE  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 22624  016900  6E7E               	movwf	3966,c	;volatile
 22625                           
 22626                           ;main.c: 145: dev_on_time++;
 22627  016902  0E01               	movlw	1
 22628  016904  27B3               	addwf	_dev_on_time& (0+255),f,b	;volatile
 22629  016906  0E00               	movlw	0
 22630  016908  23B4               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 22631  01690A  23B5               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 22632  01690C  23B6               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 22633                           
 22634                           ; BSR set to: 1
 22635                           ;main.c: 148: if (load_enable) {
 22636  01690E  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 22637  016910  D006               	goto	i1l937
 22638                           
 22639                           ; BSR set to: 1
 22640                           ;main.c: 150: load_on_time++;
 22641  016912  0E01               	movlw	1
 22642  016914  27AF               	addwf	_load_on_time& (0+255),f,b	;volatile
 22643  016916  0E00               	movlw	0
 22644  016918  23B0               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 22645  01691A  23B1               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 22646  01691C  23B2               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 22647  01691E                     i1l937:
 22648                           
 22649                           ; BSR set to: 1
 22650  01691E  0004               	clrwdt		;# 
 22651  016920  0012               	return		;funcret
 22652  016922                     __end_of_heartbeatTimerCallback:
 22653                           	opt stack 0
 22654                           tosu	equ	0xFFF
 22655                           tosh	equ	0xFFE
 22656                           tosl	equ	0xFFD
 22657                           pclatu	equ	0xFFB
 22658                           pclath	equ	0xFFA
 22659                           tblptru	equ	0xFF8
 22660                           tblptrh	equ	0xFF7
 22661                           tblptrl	equ	0xFF6
 22662                           tablat	equ	0xFF5
 22663                           prodh	equ	0xFF4
 22664                           prodl	equ	0xFF3
 22665                           intcon	equ	0xFF2
 22666                           indf0	equ	0xFEF
 22667                           postinc0	equ	0xFEE
 22668                           fsr0h	equ	0xFEA
 22669                           fsr0l	equ	0xFE9
 22670                           wreg	equ	0xFE8
 22671                           indf1	equ	0xFE7
 22672                           postdec1	equ	0xFE5
 22673                           plusw1	equ	0xFE3
 22674                           fsr1h	equ	0xFE2
 22675                           fsr1l	equ	0xFE1
 22676                           bsr	equ	0xFE0
 22677                           indf2	equ	0xFDF
 22678                           postinc2	equ	0xFDE
 22679                           postdec2	equ	0xFDD
 22680                           plusw2	equ	0xFDB
 22681                           fsr2h	equ	0xFDA
 22682                           fsr2l	equ	0xFD9
 22683                           status	equ	0xFD8
 22684                           
 22685 ;; *************** function _HLVD_ISR *****************
 22686 ;; Defined at:
 22687 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 22688 ;; Parameters:    Size  Location     Type
 22689 ;;		None
 22690 ;; Auto vars:     Size  Location     Type
 22691 ;;		None
 22692 ;; Return value:  Size  Location     Type
 22693 ;;                  1    wreg      void 
 22694 ;; Registers used:
 22695 ;;		None
 22696 ;; Tracked objects:
 22697 ;;		On entry : 0/0
 22698 ;;		On exit  : 0/0
 22699 ;;		Unchanged: 0/0
 22700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22705 ;;Total ram usage:        0 bytes
 22706 ;; Hardware stack levels used:    1
 22707 ;; Hardware stack levels required when called:   10
 22708 ;; This function calls:
 22709 ;;		Nothing
 22710 ;; This function is called by:
 22711 ;;		_INTERRUPT_InterruptManagerLow
 22712 ;; This function uses a non-reentrant model
 22713 ;;
 22714                           
 22715                           	psect	text80
 22716  016EB8                     __ptext80:
 22717                           	opt stack 0
 22718  016EB8                     _HLVD_ISR:
 22719                           	opt stack 11
 22720                           
 22721                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 22722                           
 22723                           ;incstack = 0
 22724  016EB8  010E               	movlb	14	; () banked
 22725  016EBA  9F35               	bcf	53,7,b	;volatile
 22726                           
 22727                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 22728  016EBC  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 22729                           
 22730                           ; BSR set to: 14
 22731  016EBE  0012               	return		;funcret
 22732  016EC0                     __end_of_HLVD_ISR:
 22733                           	opt stack 0
 22734                           tosu	equ	0xFFF
 22735                           tosh	equ	0xFFE
 22736                           tosl	equ	0xFFD
 22737                           pclatu	equ	0xFFB
 22738                           pclath	equ	0xFFA
 22739                           tblptru	equ	0xFF8
 22740                           tblptrh	equ	0xFF7
 22741                           tblptrl	equ	0xFF6
 22742                           tablat	equ	0xFF5
 22743                           prodh	equ	0xFF4
 22744                           prodl	equ	0xFF3
 22745                           intcon	equ	0xFF2
 22746                           indf0	equ	0xFEF
 22747                           postinc0	equ	0xFEE
 22748                           fsr0h	equ	0xFEA
 22749                           fsr0l	equ	0xFE9
 22750                           wreg	equ	0xFE8
 22751                           indf1	equ	0xFE7
 22752                           postdec1	equ	0xFE5
 22753                           plusw1	equ	0xFE3
 22754                           fsr1h	equ	0xFE2
 22755                           fsr1l	equ	0xFE1
 22756                           bsr	equ	0xFE0
 22757                           indf2	equ	0xFDF
 22758                           postinc2	equ	0xFDE
 22759                           postdec2	equ	0xFDD
 22760                           plusw2	equ	0xFDB
 22761                           fsr2h	equ	0xFDA
 22762                           fsr2l	equ	0xFD9
 22763                           status	equ	0xFD8
 22764                           
 22765 ;; *************** function _EUSART2_Transmit_ISR *****************
 22766 ;; Defined at:
 22767 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 22768 ;; Parameters:    Size  Location     Type
 22769 ;;		None
 22770 ;; Auto vars:     Size  Location     Type
 22771 ;;		None
 22772 ;; Return value:  Size  Location     Type
 22773 ;;                  1    wreg      void 
 22774 ;; Registers used:
 22775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22776 ;; Tracked objects:
 22777 ;;		On entry : 0/0
 22778 ;;		On exit  : 0/0
 22779 ;;		Unchanged: 0/0
 22780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22785 ;;Total ram usage:        0 bytes
 22786 ;; Hardware stack levels used:    1
 22787 ;; Hardware stack levels required when called:   10
 22788 ;; This function calls:
 22789 ;;		Nothing
 22790 ;; This function is called by:
 22791 ;;		_EUSART2_Initialize
 22792 ;;		_INTERRUPT_InterruptManagerLow
 22793 ;; This function uses a non-reentrant model
 22794 ;;
 22795                           
 22796                           	psect	text81
 22797  016A06                     __ptext81:
 22798                           	opt stack 0
 22799  016A06                     _EUSART2_Transmit_ISR:
 22800                           	opt stack 11
 22801                           
 22802                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 22803                           
 22804                           ; BSR set to: 14
 22805                           ;incstack = 0
 22806  016A06  0E80               	movlw	128
 22807  016A08  0101               	movlb	1	; () banked
 22808  016A0A  61D2               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 22809  016A0C  D014               	goto	i1l403
 22810                           
 22811                           ; BSR set to: 1
 22812                           ;eusart2.c: 203: {
 22813                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 22814  016A0E  51D3               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 22815  016A10  0D01               	mullw	1
 22816  016A12  0E00               	movlw	low _eusart2TxBuffer
 22817  016A14  24F3               	addwf	prodl,w,c
 22818  016A16  6ED9               	movwf	fsr2l,c
 22819  016A18  0E03               	movlw	high _eusart2TxBuffer
 22820  016A1A  20F4               	addwfc	prodh,w,c
 22821  016A1C  6EDA               	movwf	fsr2h,c
 22822  016A1E  50DF               	movf	indf2,w,c
 22823  016A20  010E               	movlb	14	; () banked
 22824  016A22  6FF2               	movwf	242,b	;volatile
 22825                           
 22826                           ; BSR set to: 14
 22827  016A24  0101               	movlb	1	; () banked
 22828  016A26  2BD3               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 22829                           
 22830                           ; BSR set to: 1
 22831                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 22832  016A28  0E7F               	movlw	127
 22833  016A2A  65D3               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 22834  016A2C  D002               	goto	i1l404
 22835                           
 22836                           ; BSR set to: 1
 22837                           ;eusart2.c: 206: {
 22838                           ;eusart2.c: 207: eusart2TxTail = 0;
 22839  016A2E  0E00               	movlw	0
 22840  016A30  6FD3               	movwf	_eusart2TxTail& (0+255),b	;volatile
 22841  016A32                     i1l404:
 22842                           
 22843                           ; BSR set to: 1
 22844                           ;eusart2.c: 208: }
 22845                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 22846                           
 22847                           ; BSR set to: 1
 22848  016A32  2BD2               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 22849                           
 22850                           ;eusart2.c: 210: }
 22851  016A34  0012               	return	
 22852  016A36                     i1l403:
 22853                           
 22854                           ; BSR set to: 1
 22855                           ;eusart2.c: 211: else
 22856                           ;eusart2.c: 212: {
 22857                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 22858  016A36  010E               	movlb	14	; () banked
 22859  016A38  9D2C               	bcf	44,6,b	;volatile
 22860  016A3A  0012               	return	
 22861  016A3C                     __end_of_EUSART2_Transmit_ISR:
 22862                           	opt stack 0
 22863                           tosu	equ	0xFFF
 22864                           tosh	equ	0xFFE
 22865                           tosl	equ	0xFFD
 22866                           pclatu	equ	0xFFB
 22867                           pclath	equ	0xFFA
 22868                           tblptru	equ	0xFF8
 22869                           tblptrh	equ	0xFF7
 22870                           tblptrl	equ	0xFF6
 22871                           tablat	equ	0xFF5
 22872                           prodh	equ	0xFF4
 22873                           prodl	equ	0xFF3
 22874                           intcon	equ	0xFF2
 22875                           indf0	equ	0xFEF
 22876                           postinc0	equ	0xFEE
 22877                           fsr0h	equ	0xFEA
 22878                           fsr0l	equ	0xFE9
 22879                           wreg	equ	0xFE8
 22880                           indf1	equ	0xFE7
 22881                           postdec1	equ	0xFE5
 22882                           plusw1	equ	0xFE3
 22883                           fsr1h	equ	0xFE2
 22884                           fsr1l	equ	0xFE1
 22885                           bsr	equ	0xFE0
 22886                           indf2	equ	0xFDF
 22887                           postinc2	equ	0xFDE
 22888                           postdec2	equ	0xFDD
 22889                           plusw2	equ	0xFDB
 22890                           fsr2h	equ	0xFDA
 22891                           fsr2l	equ	0xFD9
 22892                           status	equ	0xFD8
 22893                           
 22894 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 22895 ;; Defined at:
 22896 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 22897 ;; Parameters:    Size  Location     Type
 22898 ;;		None
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;		None
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1    wreg      void 
 22903 ;; Registers used:
 22904 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/0
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22912 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22913 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22914 ;;Total ram usage:       18 bytes
 22915 ;; Hardware stack levels used:    1
 22916 ;; Hardware stack levels required when called:    9
 22917 ;; This function calls:
 22918 ;;		Absolute function
 22919 ;;		_ADCC_ISR
 22920 ;;		_EUSART2_Receive_ISR
 22921 ;;		_TMR5_ISR
 22922 ;; This function is called by:
 22923 ;;		Interrupt level 2
 22924 ;; This function uses a non-reentrant model
 22925 ;;
 22926                           
 22927                           	psect	intcode
 22928  000008                     __pintcode:
 22929                           	opt stack 0
 22930  000008                     _INTERRUPT_InterruptManagerHigh:
 22931                           	opt stack 9
 22932                           
 22933                           ;incstack = 0
 22934  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 22935  00000A  EFF7  F0AA         	goto	int_func
 22936                           tosu	equ	0xFFF
 22937                           tosh	equ	0xFFE
 22938                           tosl	equ	0xFFD
 22939                           pclatu	equ	0xFFB
 22940                           pclath	equ	0xFFA
 22941                           tblptru	equ	0xFF8
 22942                           tblptrh	equ	0xFF7
 22943                           tblptrl	equ	0xFF6
 22944                           tablat	equ	0xFF5
 22945                           prodh	equ	0xFF4
 22946                           prodl	equ	0xFF3
 22947                           intcon	equ	0xFF2
 22948                           indf0	equ	0xFEF
 22949                           postinc0	equ	0xFEE
 22950                           fsr0h	equ	0xFEA
 22951                           fsr0l	equ	0xFE9
 22952                           wreg	equ	0xFE8
 22953                           indf1	equ	0xFE7
 22954                           postdec1	equ	0xFE5
 22955                           plusw1	equ	0xFE3
 22956                           fsr1h	equ	0xFE2
 22957                           fsr1l	equ	0xFE1
 22958                           bsr	equ	0xFE0
 22959                           indf2	equ	0xFDF
 22960                           postinc2	equ	0xFDE
 22961                           postdec2	equ	0xFDD
 22962                           plusw2	equ	0xFDB
 22963                           fsr2h	equ	0xFDA
 22964                           fsr2l	equ	0xFD9
 22965                           status	equ	0xFD8
 22966                           
 22967                           	psect	intcode_body
 22968  0155EE                     __pintcode_body:
 22969                           	opt stack 9
 22970  0155EE                     int_func:
 22971                           	opt stack 9
 22972  0155EE  CFFA F0B6          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 22973  0155F2  CFFB F0B7          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 22974  0155F6  CFE9 F0B8          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 22975  0155FA  CFEA F0B9          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 22976  0155FE  CFE1 F0BA          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 22977  015602  CFE2 F0BB          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 22978  015606  CFD9 F0BC          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 22979  01560A  CFDA F0BD          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 22980  01560E  CFF3 F0BE          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 22981  015612  CFF4 F0BF          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 22982  015616  CFF6 F0C0          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 22983  01561A  CFF7 F0C1          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 22984  01561E  CFF8 F0C2          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 22985  015622  CFF5 F0C3          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 22986  015626  C05F  F0C4         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 22987  01562A  C060  F0C5         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 22988  01562E  C061  F0C6         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 22989  015632  C062  F0C7         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 22990                           
 22991                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 22992  015636  010E               	movlb	14	; () banked
 22993  015638  BF2C               	btfsc	44,7,b	;volatile
 22994                           
 22995                           ; BSR set to: 14
 22996  01563A  AF36               	btfss	54,7,b	;volatile
 22997  01563C  D00D               	goto	i2l212
 22998                           
 22999                           ; BSR set to: 14
 23000                           ;interrupt_manager.c: 87: {
 23001                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 23002  01563E  D801               	call	i2u1798_48
 23003  015640  D016               	goto	i2l216
 23004  015642                     i2u1798_48:
 23005  015642  0005               	push	
 23006  015644  6EFA               	movwf	pclath,c
 23007  015646  0101               	movlb	1	; () banked
 23008  015648  51C3               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 23009  01564A  6EFD               	movwf	tosl,c
 23010  01564C  51C4               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 23011  01564E  6EFE               	movwf	tosh,c
 23012  015650  51C5               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 23013  015652  6EFF               	movwf	tosu,c
 23014  015654  50FA               	movf	pclath,w,c
 23015  015656  0012               	return		;indir
 23016  015658                     i2l212:
 23017                           
 23018                           ; BSR set to: 14
 23019                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 23020  015658  B92E               	btfsc	46,4,b	;volatile
 23021                           
 23022                           ; BSR set to: 14
 23023  01565A  A938               	btfss	56,4,b	;volatile
 23024  01565C  D003               	goto	i2l214
 23025                           
 23026                           ; BSR set to: 14
 23027                           ;interrupt_manager.c: 91: {
 23028                           ;interrupt_manager.c: 92: TMR5_ISR();
 23029  01565E  EC38  F0B5         	call	_TMR5_ISR	;wreg free
 23030                           
 23031                           ;interrupt_manager.c: 93: }
 23032  015662  D005               	goto	i2l216
 23033  015664                     i2l214:
 23034                           
 23035                           ; BSR set to: 14
 23036                           ;interrupt_manager.c: 94: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 23037  015664  B12A               	btfsc	42,0,b	;volatile
 23038                           
 23039                           ; BSR set to: 14
 23040  015666  A134               	btfss	52,0,b	;volatile
 23041  015668  D002               	goto	i2l216
 23042                           
 23043                           ; BSR set to: 14
 23044                           ;interrupt_manager.c: 95: {
 23045                           ;interrupt_manager.c: 96: ADCC_ISR();
 23046  01566A  ECDA  F0B5         	call	_ADCC_ISR	;wreg free
 23047  01566E                     i2l216:
 23048                           
 23049                           ;interrupt_manager.c: 98: else
 23050                           ;interrupt_manager.c: 99: {
 23051  01566E  C0C7  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 23052  015672  C0C6  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 23053  015676  C0C5  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 23054  01567A  C0C4  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 23055  01567E  C0C3  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 23056  015682  C0C2  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 23057  015686  C0C1  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 23058  01568A  C0C0  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 23059  01568E  C0BF  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 23060  015692  C0BE  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 23061  015696  C0BD  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 23062  01569A  C0BC  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 23063  01569E  C0BB  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 23064  0156A2  C0BA  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 23065  0156A6  C0B9  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 23066  0156AA  C0B8  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 23067  0156AE  C0B7  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 23068  0156B2  C0B6  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 23069  0156B6  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23070  0156B8  0011               	retfie		f
 23071  0156BA                     __end_of_INTERRUPT_InterruptManagerHigh:
 23072                           	opt stack 0
 23073                           tosu	equ	0xFFF
 23074                           tosh	equ	0xFFE
 23075                           tosl	equ	0xFFD
 23076                           pclatu	equ	0xFFB
 23077                           pclath	equ	0xFFA
 23078                           tblptru	equ	0xFF8
 23079                           tblptrh	equ	0xFF7
 23080                           tblptrl	equ	0xFF6
 23081                           tablat	equ	0xFF5
 23082                           prodh	equ	0xFF4
 23083                           prodl	equ	0xFF3
 23084                           intcon	equ	0xFF2
 23085                           indf0	equ	0xFEF
 23086                           postinc0	equ	0xFEE
 23087                           fsr0h	equ	0xFEA
 23088                           fsr0l	equ	0xFE9
 23089                           wreg	equ	0xFE8
 23090                           indf1	equ	0xFE7
 23091                           postdec1	equ	0xFE5
 23092                           plusw1	equ	0xFE3
 23093                           fsr1h	equ	0xFE2
 23094                           fsr1l	equ	0xFE1
 23095                           bsr	equ	0xFE0
 23096                           indf2	equ	0xFDF
 23097                           postinc2	equ	0xFDE
 23098                           postdec2	equ	0xFDD
 23099                           plusw2	equ	0xFDB
 23100                           fsr2h	equ	0xFDA
 23101                           fsr2l	equ	0xFD9
 23102                           status	equ	0xFD8
 23103                           
 23104 ;; *************** function _TMR5_ISR *****************
 23105 ;; Defined at:
 23106 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23107 ;; Parameters:    Size  Location     Type
 23108 ;;		None
 23109 ;; Auto vars:     Size  Location     Type
 23110 ;;		None
 23111 ;; Return value:  Size  Location     Type
 23112 ;;                  1    wreg      void 
 23113 ;; Registers used:
 23114 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23115 ;; Tracked objects:
 23116 ;;		On entry : 0/0
 23117 ;;		On exit  : 0/0
 23118 ;;		Unchanged: 0/0
 23119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23124 ;;Total ram usage:        0 bytes
 23125 ;; Hardware stack levels used:    1
 23126 ;; Hardware stack levels required when called:    1
 23127 ;; This function calls:
 23128 ;;		Absolute function
 23129 ;;		_TMR5_DefaultInterruptHandler
 23130 ;;		_TMR5_WriteTimer
 23131 ;; This function is called by:
 23132 ;;		_INTERRUPT_InterruptManagerHigh
 23133 ;; This function uses a non-reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text83
 23137  016A70                     __ptext83:
 23138                           	opt stack 0
 23139  016A70                     _TMR5_ISR:
 23140                           	opt stack 16
 23141                           
 23142                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 23143                           
 23144                           ;incstack = 0
 23145  016A70  010E               	movlb	14	; () banked
 23146  016A72  9938               	bcf	56,4,b	;volatile
 23147                           
 23148                           ; BSR set to: 14
 23149                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 23150  016A74  C1CB  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 23151  016A78  C1CC  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 23152  016A7C  ECAA  F0B6         	call	_TMR5_WriteTimer	;wreg free
 23153                           
 23154                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 23155  016A80  0101               	movlb	1	; () banked
 23156  016A82  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23157  016A84  11BB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23158  016A86  11BC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23159  016A88  B4D8               	btfsc	status,2,c
 23160  016A8A  0012               	return	
 23161                           
 23162                           ; BSR set to: 1
 23163                           ;tmr5.c: 172: {
 23164                           ;tmr5.c: 173: TMR5_InterruptHandler();
 23165  016A8C  D801               	call	i2u1783_48
 23166  016A8E  0012               	return	
 23167  016A90                     i2u1783_48:
 23168  016A90  0005               	push	
 23169  016A92  6EFA               	movwf	pclath,c
 23170  016A94  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23171  016A96  6EFD               	movwf	tosl,c
 23172  016A98  51BB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23173  016A9A  6EFE               	movwf	tosh,c
 23174  016A9C  51BC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23175  016A9E  6EFF               	movwf	tosu,c
 23176  016AA0  50FA               	movf	pclath,w,c
 23177  016AA2  0012               	return		;indir
 23178  016AA4                     __end_of_TMR5_ISR:
 23179                           	opt stack 0
 23180                           tosu	equ	0xFFF
 23181                           tosh	equ	0xFFE
 23182                           tosl	equ	0xFFD
 23183                           pclatu	equ	0xFFB
 23184                           pclath	equ	0xFFA
 23185                           tblptru	equ	0xFF8
 23186                           tblptrh	equ	0xFF7
 23187                           tblptrl	equ	0xFF6
 23188                           tablat	equ	0xFF5
 23189                           prodh	equ	0xFF4
 23190                           prodl	equ	0xFF3
 23191                           intcon	equ	0xFF2
 23192                           indf0	equ	0xFEF
 23193                           postinc0	equ	0xFEE
 23194                           fsr0h	equ	0xFEA
 23195                           fsr0l	equ	0xFE9
 23196                           wreg	equ	0xFE8
 23197                           indf1	equ	0xFE7
 23198                           postdec1	equ	0xFE5
 23199                           plusw1	equ	0xFE3
 23200                           fsr1h	equ	0xFE2
 23201                           fsr1l	equ	0xFE1
 23202                           bsr	equ	0xFE0
 23203                           indf2	equ	0xFDF
 23204                           postinc2	equ	0xFDE
 23205                           postdec2	equ	0xFDD
 23206                           plusw2	equ	0xFDB
 23207                           fsr2h	equ	0xFDA
 23208                           fsr2l	equ	0xFD9
 23209                           status	equ	0xFD8
 23210                           
 23211 ;; *************** function _TMR5_WriteTimer *****************
 23212 ;; Defined at:
 23213 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;  timerVal        2    0[COMRAM] unsigned int 
 23216 ;; Auto vars:     Size  Location     Type
 23217 ;;		None
 23218 ;; Return value:  Size  Location     Type
 23219 ;;                  1    wreg      void 
 23220 ;; Registers used:
 23221 ;;		wreg, status,2
 23222 ;; Tracked objects:
 23223 ;;		On entry : 0/0
 23224 ;;		On exit  : 0/0
 23225 ;;		Unchanged: 0/0
 23226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23231 ;;Total ram usage:        2 bytes
 23232 ;; Hardware stack levels used:    1
 23233 ;; This function calls:
 23234 ;;		Nothing
 23235 ;; This function is called by:
 23236 ;;		_TMR5_ISR
 23237 ;;		_TMR5_Reload
 23238 ;; This function uses a non-reentrant model
 23239 ;;
 23240                           
 23241                           	psect	text84
 23242  016D54                     __ptext84:
 23243                           	opt stack 0
 23244  016D54                     _TMR5_WriteTimer:
 23245                           	opt stack 16
 23246                           
 23247                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 23248                           
 23249                           ;incstack = 0
 23250  016D54  A4C3               	btfss	4035,2,c	;volatile
 23251  016D56  D007               	goto	i2l714
 23252                           
 23253                           ;tmr5.c: 130: {
 23254                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 23255  016D58  90C3               	bcf	4035,0,c	;volatile
 23256                           
 23257                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 23258  016D5A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 23259  016D5C  6EC2               	movwf	4034,c	;volatile
 23260                           
 23261                           ;tmr5.c: 136: TMR5L = timerVal;
 23262  016D5E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 23263                           
 23264                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 23265  016D62  80C3               	bsf	4035,0,c	;volatile
 23266                           
 23267                           ;tmr5.c: 140: }
 23268  016D64  0012               	return	
 23269  016D66                     i2l714:
 23270                           
 23271                           ;tmr5.c: 141: else
 23272                           ;tmr5.c: 142: {
 23273                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 23274  016D66  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 23275  016D68  6EC2               	movwf	4034,c	;volatile
 23276                           
 23277                           ;tmr5.c: 145: TMR5L = timerVal;
 23278  016D6A  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 23279  016D6E  0012               	return	
 23280  016D70                     __end_of_TMR5_WriteTimer:
 23281                           	opt stack 0
 23282                           tosu	equ	0xFFF
 23283                           tosh	equ	0xFFE
 23284                           tosl	equ	0xFFD
 23285                           pclatu	equ	0xFFB
 23286                           pclath	equ	0xFFA
 23287                           tblptru	equ	0xFF8
 23288                           tblptrh	equ	0xFF7
 23289                           tblptrl	equ	0xFF6
 23290                           tablat	equ	0xFF5
 23291                           prodh	equ	0xFF4
 23292                           prodl	equ	0xFF3
 23293                           intcon	equ	0xFF2
 23294                           indf0	equ	0xFEF
 23295                           postinc0	equ	0xFEE
 23296                           fsr0h	equ	0xFEA
 23297                           fsr0l	equ	0xFE9
 23298                           wreg	equ	0xFE8
 23299                           indf1	equ	0xFE7
 23300                           postdec1	equ	0xFE5
 23301                           plusw1	equ	0xFE3
 23302                           fsr1h	equ	0xFE2
 23303                           fsr1l	equ	0xFE1
 23304                           bsr	equ	0xFE0
 23305                           indf2	equ	0xFDF
 23306                           postinc2	equ	0xFDE
 23307                           postdec2	equ	0xFDD
 23308                           plusw2	equ	0xFDB
 23309                           fsr2h	equ	0xFDA
 23310                           fsr2l	equ	0xFD9
 23311                           status	equ	0xFD8
 23312                           
 23313 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23314 ;; Defined at:
 23315 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23316 ;; Parameters:    Size  Location     Type
 23317 ;;		None
 23318 ;; Auto vars:     Size  Location     Type
 23319 ;;		None
 23320 ;; Return value:  Size  Location     Type
 23321 ;;                  1    wreg      void 
 23322 ;; Registers used:
 23323 ;;		None
 23324 ;; Tracked objects:
 23325 ;;		On entry : 0/0
 23326 ;;		On exit  : 0/0
 23327 ;;		Unchanged: 0/0
 23328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23333 ;;Total ram usage:        0 bytes
 23334 ;; Hardware stack levels used:    1
 23335 ;; This function calls:
 23336 ;;		Nothing
 23337 ;; This function is called by:
 23338 ;;		_TMR5_Initialize
 23339 ;;		_TMR5_ISR
 23340 ;; This function uses a non-reentrant model
 23341 ;;
 23342                           
 23343                           	psect	text85
 23344  016ED6                     __ptext85:
 23345                           	opt stack 0
 23346  016ED6                     _TMR5_DefaultInterruptHandler:
 23347                           	opt stack 16
 23348                           
 23349                           ;incstack = 0
 23350  016ED6  0012               	return		;funcret
 23351  016ED8                     __end_of_TMR5_DefaultInterruptHandler:
 23352                           	opt stack 0
 23353                           tosu	equ	0xFFF
 23354                           tosh	equ	0xFFE
 23355                           tosl	equ	0xFFD
 23356                           pclatu	equ	0xFFB
 23357                           pclath	equ	0xFFA
 23358                           tblptru	equ	0xFF8
 23359                           tblptrh	equ	0xFF7
 23360                           tblptrl	equ	0xFF6
 23361                           tablat	equ	0xFF5
 23362                           prodh	equ	0xFF4
 23363                           prodl	equ	0xFF3
 23364                           intcon	equ	0xFF2
 23365                           indf0	equ	0xFEF
 23366                           postinc0	equ	0xFEE
 23367                           fsr0h	equ	0xFEA
 23368                           fsr0l	equ	0xFE9
 23369                           wreg	equ	0xFE8
 23370                           indf1	equ	0xFE7
 23371                           postdec1	equ	0xFE5
 23372                           plusw1	equ	0xFE3
 23373                           fsr1h	equ	0xFE2
 23374                           fsr1l	equ	0xFE1
 23375                           bsr	equ	0xFE0
 23376                           indf2	equ	0xFDF
 23377                           postinc2	equ	0xFDE
 23378                           postdec2	equ	0xFDD
 23379                           plusw2	equ	0xFDB
 23380                           fsr2h	equ	0xFDA
 23381                           fsr2l	equ	0xFD9
 23382                           status	equ	0xFD8
 23383                           
 23384 ;; *************** function _EUSART2_Receive_ISR *****************
 23385 ;; Defined at:
 23386 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 23387 ;; Parameters:    Size  Location     Type
 23388 ;;		None
 23389 ;; Auto vars:     Size  Location     Type
 23390 ;;		None
 23391 ;; Return value:  Size  Location     Type
 23392 ;;                  1    wreg      void 
 23393 ;; Registers used:
 23394 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23395 ;; Tracked objects:
 23396 ;;		On entry : 0/0
 23397 ;;		On exit  : 0/0
 23398 ;;		Unchanged: 0/0
 23399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23404 ;;Total ram usage:        0 bytes
 23405 ;; Hardware stack levels used:    1
 23406 ;; Hardware stack levels required when called:    4
 23407 ;; This function calls:
 23408 ;;		i2_printf
 23409 ;; This function is called by:
 23410 ;;		_EUSART2_Initialize
 23411 ;;		_INTERRUPT_InterruptManagerHigh
 23412 ;; This function uses a non-reentrant model
 23413 ;;
 23414                           
 23415                           	psect	text86
 23416  01582C                     __ptext86:
 23417                           	opt stack 0
 23418  01582C                     _EUSART2_Receive_ISR:
 23419                           	opt stack 13
 23420                           
 23421                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 23422                           
 23423                           ;incstack = 0
 23424  01582C  010E               	movlb	14	; () banked
 23425  01582E  A3F5               	btfss	245,1,b	;volatile
 23426  015830  D003               	goto	i2l409
 23427                           
 23428                           ; BSR set to: 14
 23429                           ;eusart2.c: 221: {
 23430                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 23431  015832  99F5               	bcf	245,4,b	;volatile
 23432                           
 23433                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 23434  015834  89F5               	bsf	245,4,b	;volatile
 23435                           
 23436                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 23437  015836  827E               	bsf	3966,1,c	;volatile
 23438  015838                     i2l409:
 23439                           
 23440                           ; BSR set to: 14
 23441                           ;eusart2.c: 227: }
 23442                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 23443  015838  927E               	bcf	3966,1,c	;volatile
 23444                           
 23445                           ; BSR set to: 14
 23446                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 23447  01583A  0100               	movlb	0	; () banked
 23448  01583C  51EC               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 23449  01583E  0D01               	mullw	1
 23450  015840  0E00               	movlw	low _eusart2RxBuffer
 23451  015842  24F3               	addwf	prodl,w,c
 23452  015844  6ED9               	movwf	fsr2l,c
 23453  015846  0E02               	movlw	high _eusart2RxBuffer
 23454  015848  20F4               	addwfc	prodh,w,c
 23455  01584A  6EDA               	movwf	fsr2h,c
 23456  01584C  CEF1 FFDF          	movff	3825,indf2	;volatile
 23457                           
 23458                           ; BSR set to: 0
 23459  015850  2BEC               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 23460                           
 23461                           ; BSR set to: 0
 23462                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 23463  015852  0E3F               	movlw	63
 23464  015854  65EC               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 23465  015856  D002               	goto	i2l410
 23466                           
 23467                           ; BSR set to: 0
 23468                           ;eusart2.c: 234: {
 23469                           ;eusart2.c: 235: eusart2RxHead = 0;
 23470  015858  0E00               	movlw	0
 23471  01585A  6FEC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 23472  01585C                     i2l410:
 23473                           
 23474                           ; BSR set to: 0
 23475                           ;eusart2.c: 236: }
 23476                           ;eusart2.c: 237: eusart2RxCount++;
 23477                           
 23478                           ; BSR set to: 0
 23479  01585C  0101               	movlb	1	; () banked
 23480  01585E  2BD0               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 23481                           
 23482                           ; BSR set to: 1
 23483                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 23484  015860  0E0A               	movlw	10
 23485  015862  010E               	movlb	14	; () banked
 23486  015864  19F1               	xorwf	241,w,b	;volatile
 23487  015866  B4D8               	btfsc	status,2,c
 23488  015868  D004               	goto	i2u1793_40
 23489                           
 23490                           ; BSR set to: 14
 23491  01586A  0E0D               	movlw	13
 23492  01586C  19F1               	xorwf	241,w,b	;volatile
 23493  01586E  A4D8               	btfss	status,2,c
 23494  015870  D006               	goto	i2l411
 23495  015872                     i2u1793_40:
 23496                           
 23497                           ; BSR set to: 14
 23498                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 23499  015872  0100               	movlb	0	; () banked
 23500  015874  81FE               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;eusart2.c: 248: RC2REG = 0;
 23504  015876  0E00               	movlw	0
 23505  015878  010E               	movlb	14	; () banked
 23506  01587A  6FF1               	movwf	241,b	;volatile
 23507                           
 23508                           ;eusart2.c: 250: }
 23509  01587C  D002               	goto	i2l414
 23510  01587E                     i2l411:
 23511                           
 23512                           ; BSR set to: 14
 23513                           ;eusart2.c: 252: else {
 23514                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 23515  01587E  0100               	movlb	0	; () banked
 23516  015880  91FE               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 23517  015882                     i2l414:
 23518                           
 23519                           ;eusart2.c: 256: }
 23520                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 23521                           
 23522                           ; BSR set to: 0
 23523  015882  0E08               	movlw	8
 23524  015884  010E               	movlb	14	; () banked
 23525  015886  19F1               	xorwf	241,w,b	;volatile
 23526  015888  A4D8               	btfss	status,2,c
 23527  01588A  0012               	return	
 23528                           
 23529                           ; BSR set to: 14
 23530                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 23531  01588C  0100               	movlb	0	; () banked
 23532  01588E  51EC               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 23533  015890  0D01               	mullw	1
 23534  015892  0E00               	movlw	low _eusart2RxBuffer
 23535  015894  24F3               	addwf	prodl,w,c
 23536  015896  6ED9               	movwf	fsr2l,c
 23537  015898  0E02               	movlw	high _eusart2RxBuffer
 23538  01589A  20F4               	addwfc	prodh,w,c
 23539  01589C  6EDA               	movwf	fsr2h,c
 23540  01589E  0E00               	movlw	0
 23541  0158A0  6EDF               	movwf	indf2,c
 23542                           
 23543                           ; BSR set to: 0
 23544                           ;eusart2.c: 262: eusart2RxHead--;
 23545  0158A2  07EC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 23546                           
 23547                           ; BSR set to: 0
 23548                           ;eusart2.c: 265: printf("\033[K");
 23549  0158A4  0EC5               	movlw	low STR_1
 23550  0158A6  6F66               	movwf	i2printf@f& (0+255),b
 23551  0158A8  0EFF               	movlw	high STR_1
 23552  0158AA  6F67               	movwf	(i2printf@f+1)& (0+255),b
 23553  0158AC  EC0E  F08C         	call	i2_printf	;wreg free
 23554                           
 23555                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 23556  0158B0  0101               	movlb	1	; () banked
 23557  0158B2  51D1               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 23558  0158B4  0100               	movlb	0	; () banked
 23559  0158B6  19EC               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 23560  0158B8  B4D8               	btfsc	status,2,c
 23561  0158BA  D00B               	goto	i2l416
 23562                           
 23563                           ; BSR set to: 0
 23564                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 23565  0158BC  51EC               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 23566  0158BE  0D01               	mullw	1
 23567  0158C0  0E00               	movlw	low _eusart2RxBuffer
 23568  0158C2  24F3               	addwf	prodl,w,c
 23569  0158C4  6ED9               	movwf	fsr2l,c
 23570  0158C6  0E02               	movlw	high _eusart2RxBuffer
 23571  0158C8  20F4               	addwfc	prodh,w,c
 23572  0158CA  6EDA               	movwf	fsr2h,c
 23573  0158CC  0E00               	movlw	0
 23574  0158CE  6EDF               	movwf	indf2,c
 23575                           
 23576                           ; BSR set to: 0
 23577                           ;eusart2.c: 270: eusart2RxHead--;
 23578  0158D0  07EC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 23579  0158D2                     i2l416:
 23580                           
 23581                           ; BSR set to: 0
 23582                           ;eusart2.c: 272: }
 23583                           ;eusart2.c: 274: RC2REG = 0;
 23584                           
 23585                           ; BSR set to: 0
 23586  0158D2  0E00               	movlw	0
 23587  0158D4  010E               	movlb	14	; () banked
 23588  0158D6  6FF1               	movwf	241,b	;volatile
 23589  0158D8  0012               	return	
 23590  0158DA                     __end_of_EUSART2_Receive_ISR:
 23591                           	opt stack 0
 23592                           tosu	equ	0xFFF
 23593                           tosh	equ	0xFFE
 23594                           tosl	equ	0xFFD
 23595                           pclatu	equ	0xFFB
 23596                           pclath	equ	0xFFA
 23597                           tblptru	equ	0xFF8
 23598                           tblptrh	equ	0xFF7
 23599                           tblptrl	equ	0xFF6
 23600                           tablat	equ	0xFF5
 23601                           prodh	equ	0xFF4
 23602                           prodl	equ	0xFF3
 23603                           intcon	equ	0xFF2
 23604                           indf0	equ	0xFEF
 23605                           postinc0	equ	0xFEE
 23606                           fsr0h	equ	0xFEA
 23607                           fsr0l	equ	0xFE9
 23608                           wreg	equ	0xFE8
 23609                           indf1	equ	0xFE7
 23610                           postdec1	equ	0xFE5
 23611                           plusw1	equ	0xFE3
 23612                           fsr1h	equ	0xFE2
 23613                           fsr1l	equ	0xFE1
 23614                           bsr	equ	0xFE0
 23615                           indf2	equ	0xFDF
 23616                           postinc2	equ	0xFDE
 23617                           postdec2	equ	0xFDD
 23618                           plusw2	equ	0xFDB
 23619                           fsr2h	equ	0xFDA
 23620                           fsr2l	equ	0xFD9
 23621                           status	equ	0xFD8
 23622                           
 23623 ;; *************** function i2_printf *****************
 23624 ;; Defined at:
 23625 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 23628 ;;		 -> STR_119(30), STR_118(23), STR_117(39), STR_116(36), 
 23629 ;;		 -> STR_115(33), STR_114(2031), STR_112(53), STR_110(58), 
 23630 ;;		 -> STR_108(71), STR_107(63), STR_106(37), STR_105(46), 
 23631 ;;		 -> STR_104(102), STR_103(86), STR_101(25), STR_99(42), 
 23632 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 23633 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(56), 
 23634 ;;		 -> STR_81(34), STR_79(34), STR_77(35), STR_75(45), 
 23635 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 23636 ;;		 -> STR_59(54), STR_58(64), STR_56(57), STR_54(85), 
 23637 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 23638 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 23639 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 23640 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 23641 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 23642 ;; Auto vars:     Size  Location     Type
 23643 ;;  printf          4   35[BANK0 ] unsigned long 
 23644 ;;  printf          4   28[BANK0 ] struct .
 23645 ;;  printf          3   32[BANK0 ] struct .
 23646 ;;  printf          2   39[BANK0 ] int 
 23647 ;;  printf          2   26[BANK0 ] int 
 23648 ;;  printf          2   24[BANK0 ] unsigned short 
 23649 ;;  printf          2   22[BANK0 ] PTR void [1]
 23650 ;;		 -> ?i2_printf(2), ?_printf(2), 
 23651 ;;  printf          2   20[BANK0 ] PTR const unsigned char 
 23652 ;;		 -> STR_133(7), printf@c(1), STR_132(16), STR_131(22), 
 23653 ;;		 -> STR_130(21), STR_129(27), STR_128(41), STR_127(32), 
 23654 ;;		 -> STR_126(19), STR_125(16), STR_124(15), STR_123(16), 
 23655 ;;		 -> STR_122(10), STR_121(13), STR_120(12), ringBufferLUT@channel_name(22), 
 23656 ;;		 -> TRIAC_Firing_Angle(3), 
 23657 ;;  printf          2   18[BANK0 ] unsigned int 
 23658 ;;  printf          2    0        int 
 23659 ;;  printf          1   41[BANK0 ] char 
 23660 ;;  printf          1   17[BANK0 ] unsigned char 
 23661 ;;  printf          1    0        unsigned char 
 23662 ;; Return value:  Size  Location     Type
 23663 ;;                  2    6[BANK0 ] int 
 23664 ;; Registers used:
 23665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23666 ;; Tracked objects:
 23667 ;;		On entry : 0/0
 23668 ;;		On exit  : 0/0
 23669 ;;		Unchanged: 0/0
 23670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23672 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23673 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23674 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23675 ;;Total ram usage:       36 bytes
 23676 ;; Hardware stack levels used:    1
 23677 ;; Hardware stack levels required when called:    3
 23678 ;; This function calls:
 23679 ;;		i2___awdiv
 23680 ;;		i2___ftadd
 23681 ;;		i2___ftge
 23682 ;;		i2___ftmul
 23683 ;;		i2___ftneg
 23684 ;;		i2___ftsub
 23685 ;;		i2___fttol
 23686 ;;		i2___lldiv
 23687 ;;		i2___llmod
 23688 ;;		i2___lltoft
 23689 ;;		i2___wmul
 23690 ;;		i2__div_to_l_
 23691 ;;		i2__tdiv_to_l_
 23692 ;;		i2_fround
 23693 ;;		i2_isdigit
 23694 ;;		i2_putch
 23695 ;;		i2_scale
 23696 ;; This function is called by:
 23697 ;;		_EUSART2_Receive_ISR
 23698 ;; This function uses a non-reentrant model
 23699 ;;
 23700                           
 23701                           	psect	text87
 23702  01181C                     __ptext87:
 23703                           	opt stack 0
 23704  01181C                     i2_printf:
 23705                           	opt stack 13
 23706                           
 23707                           ;doprnt.c: 466: va_list ap;
 23708                           ;doprnt.c: 499: signed char c;
 23709                           ;doprnt.c: 501: int width;
 23710                           ;doprnt.c: 504: int prec;
 23711                           ;doprnt.c: 508: unsigned short flag;
 23712                           ;doprnt.c: 515: char d;
 23713                           ;doprnt.c: 516: double fval;
 23714                           ;doprnt.c: 517: int exp;
 23715                           ;doprnt.c: 523: union {
 23716                           ;doprnt.c: 524: unsigned long vd;
 23717                           ;doprnt.c: 525: double integ;
 23718                           ;doprnt.c: 526: } tmpval;
 23719                           ;doprnt.c: 528: unsigned long val;
 23720                           ;doprnt.c: 529: unsigned len;
 23721                           ;doprnt.c: 530: const char * cp;
 23722                           ;doprnt.c: 533: *ap = __va_start();
 23723                           
 23724                           ; BSR set to: 14
 23725                           ;incstack = 0
 23726  01181C  0E68               	movlw	low (?i2_printf+2)
 23727  01181E  0100               	movlb	0	; () banked
 23728  011820  6F76               	movwf	i2printf@ap& (0+255),b
 23729  011822  0E00               	movlw	high (?i2_printf+2)
 23730  011824  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 23731                           
 23732                           ;doprnt.c: 536: while(c = *f++) {
 23733  011826  EF56  F091         	goto	i2u1779_40
 23734  01182A                     
 23735                           ; BSR set to: 0
 23736                           ;doprnt.c: 538: if(c != '%')
 23737                           
 23738                           ; BSR set to: 0
 23739  01182A  0E25               	movlw	37
 23740  01182C  1989               	xorwf	i2printf@c& (0+255),w,b
 23741  01182E  B4D8               	btfsc	status,2,c
 23742  011830  D005               	goto	i2l1352
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;doprnt.c: 540: {
 23746                           ;doprnt.c: 541: (putch(c) );
 23747  011832  5189               	movf	i2printf@c& (0+255),w,b
 23748  011834  EC53  F0B7         	call	i2_putch
 23749                           
 23750                           ;doprnt.c: 542: continue;
 23751  011838  EF56  F091         	goto	i2u1779_40
 23752  01183C                     i2l1352:
 23753                           
 23754                           ;doprnt.c: 543: }
 23755                           ;doprnt.c: 548: flag = 0;
 23756  01183C  0E00               	movlw	0
 23757  01183E  0100               	movlb	0	; () banked
 23758  011840  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 23759  011842  0E00               	movlw	0
 23760  011844  6F78               	movwf	i2printf@flag& (0+255),b
 23761                           
 23762                           ; BSR set to: 0
 23763                           ;doprnt.c: 611: if(*f == '.') {
 23764  011846  C066  FFF6         	movff	i2printf@f,tblptrl
 23765  01184A  C067  FFF7         	movff	i2printf@f+1,tblptrh
 23766  01184E  0E00               	movlw	low (__mediumconst shr (0+16))
 23767  011850  6EF8               	movwf	tblptru,c
 23768  011852  0E0D               	movlw	(high __ramtop+-1)
 23769  011854  64F7               	cpfsgt	tblptrh,c
 23770  011856  D003               	bra	i2u1729_47
 23771  011858  0008               	tblrd		*
 23772  01185A  50F5               	movf	tablat,w,c
 23773  01185C  D005               	bra	i2u1729_40
 23774  01185E                     i2u1729_47:
 23775  01185E  CFF6 FFE9          	movff	tblptrl,fsr0l
 23776  011862  CFF7 FFEA          	movff	tblptrh,fsr0h
 23777  011866  50EF               	movf	indf0,w,c
 23778  011868                     i2u1729_40:
 23779  011868  0A2E               	xorlw	46
 23780  01186A  A4D8               	btfss	status,2,c
 23781  01186C  D048               	goto	i2l1353
 23782                           
 23783                           ;doprnt.c: 612: flag |= 0x4000;
 23784  01186E  0100               	movlb	0	; () banked
 23785  011870  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 23786                           
 23787                           ;doprnt.c: 613: f++;
 23788  011872  4B66               	infsnz	i2printf@f& (0+255),f,b
 23789  011874  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 23790                           
 23791                           ; BSR set to: 0
 23792                           ;doprnt.c: 620: {
 23793                           ;doprnt.c: 621: prec = 0;
 23794  011876  0E00               	movlw	0
 23795  011878  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 23796  01187A  0E00               	movlw	0
 23797  01187C  6F87               	movwf	i2printf@prec& (0+255),b
 23798                           
 23799                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 23800  01187E  D029               	goto	i2l1354
 23801  011880                     
 23802                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 23803                           
 23804                           ; BSR set to: 0
 23805  011880  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 23806  011884  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 23807  011888  0E00               	movlw	0
 23808  01188A  6E12               	movwf	i2___wmul@multiplicand+1,c
 23809  01188C  0E0A               	movlw	10
 23810  01188E  6E11               	movwf	i2___wmul@multiplicand,c
 23811  011890  EC27  F0B6         	call	i2___wmul	;wreg free
 23812  011894  C066  FFF6         	movff	i2printf@f,tblptrl
 23813  011898  C067  FFF7         	movff	i2printf@f+1,tblptrh
 23814  01189C  0E00               	movlw	low (__mediumconst shr (0+16))
 23815  01189E  6EF8               	movwf	tblptru,c
 23816  0118A0  0E0D               	movlw	(high __ramtop+-1)
 23817  0118A2  64F7               	cpfsgt	tblptrh,c
 23818  0118A4  D003               	bra	i2u1731_47
 23819  0118A6  0008               	tblrd		*
 23820  0118A8  50F5               	movf	tablat,w,c
 23821  0118AA  D005               	bra	i2u1731_40
 23822  0118AC                     i2u1731_47:
 23823  0118AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23824  0118B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 23825  0118B4  50EF               	movf	indf0,w,c
 23826  0118B6                     i2u1731_40:
 23827  0118B6  0100               	movlb	0	; () banked
 23828  0118B8  6F68               	movwf	??i2_printf& (0+255),b
 23829  0118BA  5168               	movf	??i2_printf& (0+255),w,b
 23830  0118BC  260F               	addwf	?i2___wmul,f,c
 23831  0118BE  0E00               	movlw	0
 23832  0118C0  2210               	addwfc	?i2___wmul+1,f,c
 23833  0118C2  0ED0               	movlw	208
 23834  0118C4  240F               	addwf	?i2___wmul,w,c
 23835  0118C6  6F87               	movwf	i2printf@prec& (0+255),b
 23836  0118C8  0EFF               	movlw	255
 23837  0118CA  2010               	addwfc	?i2___wmul+1,w,c
 23838  0118CC  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 23839                           
 23840                           ; BSR set to: 0
 23841  0118CE  4B66               	infsnz	i2printf@f& (0+255),f,b
 23842  0118D0  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 23843  0118D2                     i2l1354:
 23844                           
 23845                           ; BSR set to: 0
 23846                           
 23847                           ; BSR set to: 0
 23848  0118D2  C066  FFF6         	movff	i2printf@f,tblptrl
 23849  0118D6  C067  FFF7         	movff	i2printf@f+1,tblptrh
 23850  0118DA  0E00               	movlw	low (__mediumconst shr (0+16))
 23851  0118DC  6EF8               	movwf	tblptru,c
 23852  0118DE  0E0D               	movlw	(high __ramtop+-1)
 23853  0118E0  64F7               	cpfsgt	tblptrh,c
 23854  0118E2  D003               	bra	i2u1732_47
 23855  0118E4  0008               	tblrd		*
 23856  0118E6  50F5               	movf	tablat,w,c
 23857  0118E8  D005               	bra	i2u1732_40
 23858  0118EA                     i2u1732_47:
 23859  0118EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 23860  0118EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 23861  0118F2  50EF               	movf	indf0,w,c
 23862  0118F4                     i2u1732_40:
 23863  0118F4  EC7F  F0B6         	call	i2_isdigit
 23864  0118F8  A0D8               	btfss	status,0,c
 23865  0118FA  D088               	goto	i2l1358
 23866  0118FC  D7C1               	goto	i2l1355
 23867  0118FE                     i2l1353:
 23868                           
 23869                           ;doprnt.c: 626: prec = 0;
 23870  0118FE  0E00               	movlw	0
 23871  011900  0100               	movlb	0	; () banked
 23872  011902  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 23873  011904  0E00               	movlw	0
 23874  011906  6F87               	movwf	i2printf@prec& (0+255),b
 23875                           
 23876                           ; BSR set to: 0
 23877                           ;doprnt.c: 628: flag |= 0x1000;
 23878  011908  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;doprnt.c: 630: }
 23882                           ;doprnt.c: 635: switch(c = *f++) {
 23883  01190A  D080               	goto	i2l1358
 23884  01190C                     
 23885                           ; BSR set to: 0
 23886                           ;doprnt.c: 663: flag |= 0x400;
 23887                           
 23888                           ; BSR set to: 0
 23889  01190C  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 23890                           
 23891                           ; BSR set to: 0
 23892                           ;doprnt.c: 698: case 'i':
 23893                           ;doprnt.c: 699: break;
 23894                           
 23895                           ; BSR set to: 0
 23896                           
 23897                           ;doprnt.c: 697: case 'd':
 23898                           
 23899                           ;doprnt.c: 664: break;
 23900  01190E  D0B5               	goto	i2l1362
 23901  011910                     
 23902                           ; BSR set to: 0
 23903                           ;doprnt.c: 718: case 'x':
 23904                           ;doprnt.c: 721: flag |= 0x80;
 23905                           
 23906                           ; BSR set to: 0
 23907                           
 23908                           ; BSR set to: 0
 23909  011910  8F78               	bsf	i2printf@flag& (0+255),7,b
 23910                           
 23911                           ;doprnt.c: 723: break;
 23912  011912  D0B3               	goto	i2l1362
 23913  011914                     
 23914                           ; BSR set to: 0
 23915                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23916                           
 23917                           ; BSR set to: 0
 23918  011914  C076  FFD9         	movff	i2printf@ap,fsr2l
 23919  011918  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 23920  01191C  CFDE F074          	movff	postinc2,i2printf@cp
 23921  011920  CFDD F075          	movff	postdec2,i2printf@cp+1
 23922                           
 23923                           ; BSR set to: 0
 23924  011924  0E02               	movlw	2
 23925  011926  2776               	addwf	i2printf@ap& (0+255),f,b
 23926  011928  0E00               	movlw	0
 23927  01192A  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 23928                           
 23929                           ; BSR set to: 0
 23930                           ;doprnt.c: 740: if(!cp)
 23931  01192C  5174               	movf	i2printf@cp& (0+255),w,b
 23932  01192E  1175               	iorwf	(i2printf@cp+1)& (0+255),w,b
 23933  011930  A4D8               	btfss	status,2,c
 23934  011932  D004               	goto	i2l1368
 23935                           
 23936                           ; BSR set to: 0
 23937                           ;doprnt.c: 741: cp = "(null)";
 23938  011934  0E86               	movlw	low STR_133
 23939  011936  6F74               	movwf	i2printf@cp& (0+255),b
 23940  011938  0EFF               	movlw	high STR_133
 23941  01193A  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 23942  01193C                     i2l1368:
 23943                           
 23944                           ; BSR set to: 0
 23945                           ;doprnt.c: 745: len = 0;
 23946                           
 23947                           ; BSR set to: 0
 23948  01193C  0E00               	movlw	0
 23949  01193E  6F73               	movwf	(i2printf@len+1)& (0+255),b
 23950  011940  0E00               	movlw	0
 23951  011942  6F72               	movwf	i2printf@len& (0+255),b
 23952                           
 23953                           ;doprnt.c: 746: while(cp[len])
 23954  011944  D003               	goto	i2l1369
 23955  011946                     
 23956                           ;doprnt.c: 747: len++;
 23957                           
 23958                           ; BSR set to: 0
 23959  011946  0100               	movlb	0	; () banked
 23960  011948  4B72               	infsnz	i2printf@len& (0+255),f,b
 23961  01194A  2B73               	incf	(i2printf@len+1)& (0+255),f,b
 23962  01194C                     i2l1369:
 23963                           
 23964                           ; BSR set to: 0
 23965                           
 23966                           ; BSR set to: 0
 23967  01194C  5172               	movf	i2printf@len& (0+255),w,b
 23968  01194E  2574               	addwf	i2printf@cp& (0+255),w,b
 23969  011950  6F68               	movwf	??i2_printf& (0+255),b
 23970  011952  5173               	movf	(i2printf@len+1)& (0+255),w,b
 23971  011954  2175               	addwfc	(i2printf@cp+1)& (0+255),w,b
 23972  011956  6F69               	movwf	(??i2_printf+1)& (0+255),b
 23973  011958  C068  FFF6         	movff	??i2_printf,tblptrl
 23974  01195C  C069  FFF7         	movff	??i2_printf+1,tblptrh
 23975  011960  0E00               	movlw	low (__mediumconst shr (0+16))
 23976  011962  6EF8               	movwf	tblptru,c
 23977  011964  0E0D               	movlw	(high __ramtop+-1)
 23978  011966  64F7               	cpfsgt	tblptrh,c
 23979  011968  D003               	bra	i2u1735_47
 23980  01196A  0008               	tblrd		*
 23981  01196C  50F5               	movf	tablat,w,c
 23982  01196E  D005               	bra	i2u1735_40
 23983  011970                     i2u1735_47:
 23984  011970  CFF6 FFE9          	movff	tblptrl,fsr0l
 23985  011974  CFF7 FFEA          	movff	tblptrh,fsr0h
 23986  011978  50EF               	movf	indf0,w,c
 23987  01197A                     i2u1735_40:
 23988  01197A  0900               	iorlw	0
 23989  01197C  A4D8               	btfss	status,2,c
 23990  01197E  D7E3               	goto	i2l1370
 23991  011980                     i2u1736_40:
 23992                           
 23993                           ;doprnt.c: 753: if(prec && prec < len)
 23994                           
 23995                           ;doprnt.c: 750: dostring:
 23996  011980  0100               	movlb	0	; () banked
 23997  011982  5187               	movf	i2printf@prec& (0+255),w,b
 23998  011984  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 23999  011986  B4D8               	btfsc	status,2,c
 24000  011988  D021               	goto	i2l1374
 24001                           
 24002                           ; BSR set to: 0
 24003  01198A  5172               	movf	i2printf@len& (0+255),w,b
 24004  01198C  5D87               	subwf	i2printf@prec& (0+255),w,b
 24005  01198E  5173               	movf	(i2printf@len+1)& (0+255),w,b
 24006  011990  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 24007  011992  B0D8               	btfsc	status,0,c
 24008  011994  D01B               	goto	i2l1374
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;doprnt.c: 754: len = prec;
 24012  011996  C087  F072         	movff	i2printf@prec,i2printf@len
 24013  01199A  C088  F073         	movff	i2printf@prec+1,i2printf@len+1
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;doprnt.c: 767: while(len--)
 24017  01199E  D016               	goto	i2l1374
 24018  0119A0                     i2l14327:
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;doprnt.c: 768: (putch(*cp++) );
 24022  0119A0  C074  FFF6         	movff	i2printf@cp,tblptrl
 24023  0119A4  C075  FFF7         	movff	i2printf@cp+1,tblptrh
 24024  0119A8  0E00               	movlw	low (__mediumconst shr (0+16))
 24025  0119AA  6EF8               	movwf	tblptru,c
 24026  0119AC  0E0D               	movlw	(high __ramtop+-1)
 24027  0119AE  64F7               	cpfsgt	tblptrh,c
 24028  0119B0  D003               	bra	i2u1739_47
 24029  0119B2  0008               	tblrd		*
 24030  0119B4  50F5               	movf	tablat,w,c
 24031  0119B6  D005               	bra	i2u1739_40
 24032  0119B8                     i2u1739_47:
 24033  0119B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 24034  0119BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 24035  0119C0  50EF               	movf	indf0,w,c
 24036  0119C2                     i2u1739_40:
 24037  0119C2  EC53  F0B7         	call	i2_putch
 24038  0119C6  0100               	movlb	0	; () banked
 24039  0119C8  4B74               	infsnz	i2printf@cp& (0+255),f,b
 24040  0119CA  2B75               	incf	(i2printf@cp+1)& (0+255),f,b
 24041  0119CC                     i2l1374:
 24042                           
 24043                           ; BSR set to: 0
 24044                           
 24045                           ; BSR set to: 0
 24046  0119CC  0772               	decf	i2printf@len& (0+255),f,b
 24047  0119CE  A0D8               	btfss	status,0,c
 24048  0119D0  0773               	decf	(i2printf@len+1)& (0+255),f,b
 24049  0119D2  2972               	incf	i2printf@len& (0+255),w,b
 24050  0119D4  E1E5               	bnz	i2l14327
 24051  0119D6  2973               	incf	(i2printf@len+1)& (0+255),w,b
 24052  0119D8  B4D8               	btfsc	status,2,c
 24053  0119DA  EF56  F091         	goto	i2u1779_40
 24054  0119DE  D7E0               	goto	i2l1375
 24055  0119E0                     
 24056                           ; BSR set to: 0
 24057                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24058                           
 24059                           ; BSR set to: 0
 24060  0119E0  C076  FFD9         	movff	i2printf@ap,fsr2l
 24061  0119E4  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 24062  0119E8  50DF               	movf	indf2,w,c
 24063  0119EA  6F89               	movwf	i2printf@c& (0+255),b
 24064                           
 24065                           ; BSR set to: 0
 24066  0119EC  0E02               	movlw	2
 24067  0119EE  2776               	addwf	i2printf@ap& (0+255),f,b
 24068  0119F0  0E00               	movlw	0
 24069  0119F2  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24070  0119F4                     
 24071                           ; BSR set to: 0
 24072                           ;doprnt.c: 805: cp = (char *)&c;
 24073                           
 24074                           ; BSR set to: 0
 24075  0119F4  0E89               	movlw	low i2printf@c
 24076  0119F6  6F74               	movwf	i2printf@cp& (0+255),b
 24077  0119F8  0E00               	movlw	high i2printf@c
 24078  0119FA  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 24079                           
 24080                           ; BSR set to: 0
 24081                           ;doprnt.c: 806: len = 1;
 24082  0119FC  0E00               	movlw	0
 24083  0119FE  6F73               	movwf	(i2printf@len+1)& (0+255),b
 24084  011A00  0E01               	movlw	1
 24085  011A02  6F72               	movwf	i2printf@len& (0+255),b
 24086                           
 24087                           ;doprnt.c: 807: goto dostring;
 24088  011A04  D7BD               	goto	i2u1736_40
 24089  011A06                     
 24090                           ; BSR set to: 0
 24091                           ;doprnt.c: 818: flag |= 0xC0;
 24092                           
 24093                           ; BSR set to: 0
 24094  011A06  0EC0               	movlw	192
 24095  011A08  1378               	iorwf	i2printf@flag& (0+255),f,b
 24096                           
 24097                           ; BSR set to: 0
 24098                           ;doprnt.c: 822: }
 24099                           
 24100                           ;doprnt.c: 819: break;
 24101  011A0A  D037               	goto	i2l1362
 24102  011A0C                     i2l1358:
 24103                           
 24104                           ; BSR set to: 0
 24105  011A0C  0100               	movlb	0	; () banked
 24106  011A0E  5166               	movf	i2printf@f& (0+255),w,b
 24107  011A10  6F68               	movwf	??i2_printf& (0+255),b
 24108  011A12  5167               	movf	(i2printf@f+1)& (0+255),w,b
 24109  011A14  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24110  011A16  4B66               	infsnz	i2printf@f& (0+255),f,b
 24111  011A18  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24112  011A1A  C068  FFF6         	movff	??i2_printf,tblptrl
 24113  011A1E  C069  FFF7         	movff	??i2_printf+1,tblptrh
 24114  011A22  0E00               	movlw	low (__mediumconst shr (0+16))
 24115  011A24  6EF8               	movwf	tblptru,c
 24116  011A26  0E0D               	movlw	(high __ramtop+-1)
 24117  011A28  64F7               	cpfsgt	tblptrh,c
 24118  011A2A  D003               	bra	i2u1741_47
 24119  011A2C  0008               	tblrd		*
 24120  011A2E  50F5               	movf	tablat,w,c
 24121  011A30  D005               	bra	i2u1741_40
 24122  011A32                     i2u1741_47:
 24123  011A32  CFF6 FFE9          	movff	tblptrl,fsr0l
 24124  011A36  CFF7 FFEA          	movff	tblptrh,fsr0h
 24125  011A3A  50EF               	movf	indf0,w,c
 24126  011A3C                     i2u1741_40:
 24127  011A3C  0100               	movlb	0	; () banked
 24128  011A3E  6F89               	movwf	i2printf@c& (0+255),b
 24129  011A40  5189               	movf	i2printf@c& (0+255),w,b
 24130                           
 24131                           ; Switch size 1, requested type "space"
 24132                           ; Number of cases is 9, Range of values is 0 to 120
 24133                           ; switch strategies available:
 24134                           ; Name         Instructions Cycles
 24135                           ; simple_byte           28    15 (average)
 24136                           ;	Chosen strategy is simple_byte
 24137  011A42  0A00               	xorlw	0	; case 0
 24138  011A44  B4D8               	btfsc	status,2,c
 24139  011A46  0012               	return	
 24140  011A48  0A58               	xorlw	88	; case 88
 24141  011A4A  B4D8               	btfsc	status,2,c
 24142  011A4C  D761               	goto	i2l1365
 24143  011A4E  0A3B               	xorlw	59	; case 99
 24144  011A50  B4D8               	btfsc	status,2,c
 24145  011A52  D7C6               	goto	i2l1377
 24146  011A54  0A07               	xorlw	7	; case 100
 24147  011A56  B4D8               	btfsc	status,2,c
 24148  011A58  D010               	goto	i2l1362
 24149  011A5A  0A02               	xorlw	2	; case 102
 24150  011A5C  B4D8               	btfsc	status,2,c
 24151  011A5E  D756               	goto	i2l1361
 24152  011A60  0A0F               	xorlw	15	; case 105
 24153  011A62  B4D8               	btfsc	status,2,c
 24154  011A64  D00A               	goto	i2l1362
 24155  011A66  0A1A               	xorlw	26	; case 115
 24156  011A68  B4D8               	btfsc	status,2,c
 24157  011A6A  D754               	goto	i2l1367
 24158  011A6C  0A06               	xorlw	6	; case 117
 24159  011A6E  B4D8               	btfsc	status,2,c
 24160  011A70  D7CA               	goto	i2l1379
 24161  011A72  0A0D               	xorlw	13	; case 120
 24162  011A74  B4D8               	btfsc	status,2,c
 24163  011A76  D74C               	goto	i2l1365
 24164  011A78  D7BD               	goto	i2l1378
 24165  011A7A                     i2l1362:
 24166                           
 24167                           ; BSR set to: 0
 24168                           ;doprnt.c: 825: if(flag & (0x700)) {
 24169                           
 24170                           ; BSR set to: 0
 24171  011A7A  0E07               	movlw	7
 24172  011A7C  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 24173  011A7E  B4D8               	btfsc	status,2,c
 24174  011A80  D2C0               	goto	i2l1380
 24175                           
 24176                           ; BSR set to: 0
 24177                           ;doprnt.c: 827: if(flag & 0x1000)
 24178  011A82  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 24179  011A84  D004               	goto	i2l1381
 24180                           
 24181                           ; BSR set to: 0
 24182                           ;doprnt.c: 829: prec = 6;
 24183  011A86  0E00               	movlw	0
 24184  011A88  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24185  011A8A  0E06               	movlw	6
 24186  011A8C  6F87               	movwf	i2printf@prec& (0+255),b
 24187  011A8E                     i2l1381:
 24188                           
 24189                           ; BSR set to: 0
 24190                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24191                           
 24192                           ; BSR set to: 0
 24193  011A8E  C076  FFD9         	movff	i2printf@ap,fsr2l
 24194  011A92  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 24195  011A96  CFDE F080          	movff	postinc2,i2printf@fval
 24196  011A9A  CFDE F081          	movff	postinc2,i2printf@fval+1
 24197  011A9E  CFDD F082          	movff	postdec2,i2printf@fval+2
 24198                           
 24199                           ; BSR set to: 0
 24200  011AA2  0E03               	movlw	3
 24201  011AA4  2776               	addwf	i2printf@ap& (0+255),f,b
 24202  011AA6  0E00               	movlw	0
 24203  011AA8  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24204                           
 24205                           ; BSR set to: 0
 24206                           ;doprnt.c: 831: if(fval < 0.0) {
 24207  011AAA  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 24208  011AAC  D011               	goto	i2l1382
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;doprnt.c: 832: fval = -fval;
 24212  011AAE  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 24213  011AB2  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 24214  011AB6  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 24215  011ABA  EC3A  F0B6         	call	i2___ftneg	;wreg free
 24216  011ABE  C024  F080         	movff	?i2___ftneg,i2printf@fval
 24217  011AC2  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 24218  011AC6  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 24219                           
 24220                           ;doprnt.c: 833: flag |= 0x03;
 24221  011ACA  0E03               	movlw	3
 24222  011ACC  0100               	movlb	0	; () banked
 24223  011ACE  1378               	iorwf	i2printf@flag& (0+255),f,b
 24224  011AD0                     i2l1382:
 24225                           
 24226                           ; BSR set to: 0
 24227                           ;doprnt.c: 834: }
 24228                           ;doprnt.c: 835: exp = 0;
 24229                           
 24230                           ; BSR set to: 0
 24231  011AD0  0E00               	movlw	0
 24232  011AD2  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 24233  011AD4  0E00               	movlw	0
 24234  011AD6  6F7A               	movwf	i2printf@exp& (0+255),b
 24235                           
 24236                           ; BSR set to: 0
 24237                           ;doprnt.c: 836: if( fval!=0) {
 24238  011AD8  5180               	movf	i2printf@fval& (0+255),w,b
 24239  011ADA  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 24240  011ADC  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 24241  011ADE  B4D8               	btfsc	status,2,c
 24242  011AE0  D086               	goto	i2l1387
 24243                           
 24244                           ; BSR set to: 0
 24245                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 24246  011AE2  0E82               	movlw	130
 24247  011AE4  6F68               	movwf	??i2_printf& (0+255),b
 24248  011AE6  0EFF               	movlw	255
 24249  011AE8  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24250  011AEA  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 24251  011AEE  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 24252  011AF2  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 24253  011AF6  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 24254  011AFA  0E10               	movlw	16
 24255  011AFC  D005               	goto	i2u1746_40
 24256  011AFE                     i2u1746_45:
 24257  011AFE  90D8               	bcf	status,0,c
 24258  011B00  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 24259  011B02  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 24260  011B04  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 24261  011B06  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 24262  011B08                     i2u1746_40:
 24263  011B08  2EE8               	decfsz	wreg,f,c
 24264  011B0A  D7F9               	goto	i2u1746_45
 24265  011B0C  516A               	movf	(??i2_printf+2)& (0+255),w,b
 24266  011B0E  2568               	addwf	??i2_printf& (0+255),w,b
 24267  011B10  6F7A               	movwf	i2printf@exp& (0+255),b
 24268  011B12  0E00               	movlw	0
 24269  011B14  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 24270  011B16  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 24271                           
 24272                           ; BSR set to: 0
 24273                           ;doprnt.c: 838: exp--;
 24274  011B18  077A               	decf	i2printf@exp& (0+255),f,b
 24275  011B1A  A0D8               	btfss	status,0,c
 24276  011B1C  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24277                           
 24278                           ; BSR set to: 0
 24279                           ;doprnt.c: 839: exp *= 3;
 24280  011B1E  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 24281  011B22  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 24282  011B26  0E00               	movlw	0
 24283  011B28  6E12               	movwf	i2___wmul@multiplicand+1,c
 24284  011B2A  0E03               	movlw	3
 24285  011B2C  6E11               	movwf	i2___wmul@multiplicand,c
 24286  011B2E  EC27  F0B6         	call	i2___wmul	;wreg free
 24287  011B32  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 24288  011B36  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 24289                           
 24290                           ;doprnt.c: 840: exp /= 10;
 24291  011B3A  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 24292  011B3E  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 24293  011B42  0E00               	movlw	0
 24294  011B44  6E0A               	movwf	i2___awdiv@divisor+1,c
 24295  011B46  0E0A               	movlw	10
 24296  011B48  6E09               	movwf	i2___awdiv@divisor,c
 24297  011B4A  ECB9  F0AE         	call	i2___awdiv	;wreg free
 24298  011B4E  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 24299  011B52  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 24300                           
 24301                           ;doprnt.c: 841: if(exp < 0)
 24302  011B56  0100               	movlb	0	; () banked
 24303  011B58  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 24304  011B5A  D003               	goto	i2l1384
 24305                           
 24306                           ; BSR set to: 0
 24307                           ;doprnt.c: 842: exp--;
 24308  011B5C  077A               	decf	i2printf@exp& (0+255),f,b
 24309  011B5E  A0D8               	btfss	status,0,c
 24310  011B60  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24311  011B62                     i2l1384:
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 24315                           
 24316                           ; BSR set to: 0
 24317  011B62  517A               	movf	i2printf@exp& (0+255),w,b
 24318  011B64  0800               	sublw	0
 24319  011B66  ECF1  F096         	call	i2_scale
 24320  011B6A  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 24321  011B6E  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 24322  011B72  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 24323                           
 24324                           ;doprnt.c: 847: tmpval.integ *= fval;
 24325  011B76  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 24326  011B7A  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 24327  011B7E  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 24328  011B82  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 24329  011B86  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 24330  011B8A  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 24331  011B8E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 24332  011B92  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 24333  011B96  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 24334  011B9A  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 24335                           
 24336                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 24337  011B9E  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 24338  011BA2  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 24339  011BA6  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 24340  011BAA  0E00               	movlw	0
 24341  011BAC  6E2D               	movwf	i2___ftge@ff2,c
 24342  011BAE  0E80               	movlw	128
 24343  011BB0  6E2E               	movwf	i2___ftge@ff2+1,c
 24344  011BB2  0E3F               	movlw	63
 24345  011BB4  6E2F               	movwf	i2___ftge@ff2+2,c
 24346  011BB6  ECA6  F0AD         	call	i2___ftge	;wreg free
 24347  011BBA  B0D8               	btfsc	status,0,c
 24348  011BBC  D005               	goto	i2l1385
 24349                           
 24350                           ;doprnt.c: 849: exp--;
 24351  011BBE  0100               	movlb	0	; () banked
 24352  011BC0  077A               	decf	i2printf@exp& (0+255),f,b
 24353  011BC2  A0D8               	btfss	status,0,c
 24354  011BC4  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24355  011BC6  D013               	goto	i2l1387
 24356  011BC8                     i2l1385:
 24357                           
 24358                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 24359                           
 24360                           ; BSR set to: 0
 24361  011BC8  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 24362  011BCC  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 24363  011BD0  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 24364  011BD4  0E00               	movlw	0
 24365  011BD6  6E2D               	movwf	i2___ftge@ff2,c
 24366  011BD8  0E20               	movlw	32
 24367  011BDA  6E2E               	movwf	i2___ftge@ff2+1,c
 24368  011BDC  0E41               	movlw	65
 24369  011BDE  6E2F               	movwf	i2___ftge@ff2+2,c
 24370  011BE0  ECA6  F0AD         	call	i2___ftge	;wreg free
 24371  011BE4  A0D8               	btfss	status,0,c
 24372  011BE6  D003               	goto	i2l1387
 24373                           
 24374                           ;doprnt.c: 851: exp++;
 24375  011BE8  0100               	movlb	0	; () banked
 24376  011BEA  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 24377  011BEC  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 24378  011BEE                     i2l1387:
 24379                           
 24380                           ;doprnt.c: 852: }
 24381                           ;doprnt.c: 1112: if(prec <= 12)
 24382                           
 24383                           ; BSR set to: 0
 24384                           
 24385                           ; BSR set to: 0
 24386                           
 24387                           ; BSR set to: 0
 24388  011BEE  0100               	movlb	0	; () banked
 24389  011BF0  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 24390  011BF2  D006               	goto	i2u1750_40
 24391  011BF4  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 24392  011BF6  E11B               	bnz	i2l14395
 24393  011BF8  0E0D               	movlw	13
 24394  011BFA  5D87               	subwf	i2printf@prec& (0+255),w,b
 24395  011BFC  B0D8               	btfsc	status,0,c
 24396  011BFE  D017               	goto	i2l1388
 24397  011C00                     i2u1750_40:
 24398                           
 24399                           ; BSR set to: 0
 24400                           ;doprnt.c: 1113: fval += fround(prec);
 24401  011C00  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 24402  011C04  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 24403  011C08  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 24404  011C0C  5187               	movf	i2printf@prec& (0+255),w,b
 24405  011C0E  EC17  F09C         	call	i2_fround
 24406  011C12  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 24407  011C16  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 24408  011C1A  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 24409  011C1E  EC52  F0A2         	call	i2___ftadd	;wreg free
 24410  011C22  C040  F080         	movff	?i2___ftadd,i2printf@fval
 24411  011C26  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 24412  011C2A  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 24413  011C2E                     i2l1388:
 24414  011C2E                     i2l14395:
 24415                           
 24416                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 24417  011C2E  0100               	movlb	0	; () banked
 24418  011C30  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 24419  011C32  D006               	goto	i2u1751_40
 24420  011C34  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 24421  011C36  E120               	bnz	i2l14403
 24422  011C38  0E0A               	movlw	10
 24423  011C3A  5D7A               	subwf	i2printf@exp& (0+255),w,b
 24424  011C3C  B0D8               	btfsc	status,0,c
 24425  011C3E  D01C               	goto	i2u1754_40
 24426  011C40                     i2u1751_40:
 24427                           
 24428                           ; BSR set to: 0
 24429  011C40  5180               	movf	i2printf@fval& (0+255),w,b
 24430  011C42  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 24431  011C44  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 24432  011C46  B4D8               	btfsc	status,2,c
 24433  011C48  D056               	goto	i2l1389
 24434                           
 24435                           ; BSR set to: 0
 24436  011C4A  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 24437  011C4E  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 24438  011C52  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 24439  011C56  ECD4  F0A7         	call	i2___fttol	;wreg free
 24440  011C5A  503D               	movf	?i2___fttol,w,c
 24441  011C5C  103E               	iorwf	?i2___fttol+1,w,c
 24442  011C5E  103F               	iorwf	?i2___fttol+2,w,c
 24443  011C60  1040               	iorwf	?i2___fttol+3,w,c
 24444  011C62  A4D8               	btfss	status,2,c
 24445  011C64  D048               	goto	i2l1389
 24446  011C66  0100               	movlb	0	; () banked
 24447  011C68  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 24448  011C6A  D045               	goto	i2l1389
 24449  011C6C  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 24450  011C6E  E104               	bnz	i2l14403
 24451  011C70  0E02               	movlw	2
 24452  011C72  5D7A               	subwf	i2printf@exp& (0+255),w,b
 24453  011C74  A0D8               	btfss	status,0,c
 24454  011C76  D03F               	goto	i2l1389
 24455  011C78                     i2u1754_40:
 24456  011C78                     i2l14403:
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 24460  011C78  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 24461  011C7C  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 24462  011C80  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 24463  011C84  0E70               	movlw	112
 24464  011C86  6E2D               	movwf	i2___ftge@ff2,c
 24465  011C88  0E89               	movlw	137
 24466  011C8A  6E2E               	movwf	i2___ftge@ff2+1,c
 24467  011C8C  0E40               	movlw	64
 24468  011C8E  6E2F               	movwf	i2___ftge@ff2+2,c
 24469  011C90  ECA6  F0AD         	call	i2___ftge	;wreg free
 24470  011C94  B0D8               	btfsc	status,0,c
 24471  011C96  D003               	goto	i2l1392
 24472                           
 24473                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24474  011C98  0100               	movlb	0	; () banked
 24475  011C9A  0EF7               	movlw	247
 24476  011C9C  D002               	goto	L9
 24477  011C9E                     i2l1392:
 24478                           
 24479                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24480                           
 24481                           ; BSR set to: 0
 24482  011C9E  0100               	movlb	0	; () banked
 24483  011CA0  0EF8               	movlw	248
 24484  011CA2                     L9:
 24485  011CA2  277A               	addwf	i2printf@exp& (0+255),f,b
 24486  011CA4  0EFF               	movlw	255
 24487  011CA6  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 24488                           
 24489                           ; BSR set to: 0
 24490                           ;doprnt.c: 1124: }
 24491                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 24492                           
 24493                           ; BSR set to: 0
 24494  011CA8  517A               	movf	i2printf@exp& (0+255),w,b
 24495  011CAA  ECF1  F096         	call	i2_scale
 24496  011CAE  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 24497  011CB2  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 24498  011CB6  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 24499                           
 24500                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24501  011CBA  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 24502  011CBE  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 24503  011CC2  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 24504  011CC6  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 24505  011CCA  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 24506  011CCE  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 24507  011CD2  EC8D  F0A4         	call	i2__tdiv_to_l_	;wreg free
 24508  011CD6  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 24509  011CDA  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 24510  011CDE  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 24511  011CE2  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 24512                           
 24513                           ;doprnt.c: 1129: fval = 0.0;
 24514  011CE6  0E00               	movlw	0
 24515  011CE8  0100               	movlb	0	; () banked
 24516  011CEA  6F80               	movwf	i2printf@fval& (0+255),b
 24517  011CEC  0E00               	movlw	0
 24518  011CEE  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 24519  011CF0  0E00               	movlw	0
 24520  011CF2  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 24521                           
 24522                           ;doprnt.c: 1130: } else {
 24523  011CF4  D033               	goto	i2l1398
 24524  011CF6                     i2l1389:
 24525                           
 24526                           ;doprnt.c: 1131: val = (unsigned long)fval;
 24527                           
 24528                           ; BSR set to: 0
 24529  011CF6  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 24530  011CFA  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 24531  011CFE  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 24532  011D02  ECD4  F0A7         	call	i2___fttol	;wreg free
 24533  011D06  C03D  F083         	movff	?i2___fttol,i2printf@val
 24534  011D0A  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 24535  011D0E  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 24536  011D12  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 24537                           
 24538                           ;doprnt.c: 1132: fval -= (double)val;
 24539  011D16  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 24540  011D1A  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 24541  011D1E  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 24542  011D22  C083  F009         	movff	i2printf@val,i2___lltoft@c
 24543  011D26  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 24544  011D2A  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 24545  011D2E  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 24546  011D32  EC36  F0B2         	call	i2___lltoft	;wreg free
 24547  011D36  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 24548  011D3A  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 24549  011D3E  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 24550  011D42  EC51  F0B4         	call	i2___ftsub	;wreg free
 24551  011D46  C060  F080         	movff	?i2___ftsub,i2printf@fval
 24552  011D4A  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 24553  011D4E  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 24554                           
 24555                           ;doprnt.c: 1133: exp = 0;
 24556  011D52  0E00               	movlw	0
 24557  011D54  0100               	movlb	0	; () banked
 24558  011D56  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 24559  011D58  0E00               	movlw	0
 24560  011D5A  6F7A               	movwf	i2printf@exp& (0+255),b
 24561  011D5C                     i2l1398:
 24562                           
 24563                           ; BSR set to: 0
 24564                           ;doprnt.c: 1134: }
 24565                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 24566                           
 24567                           ; BSR set to: 0
 24568  011D5C  0E01               	movlw	1
 24569  011D5E  6F89               	movwf	i2printf@c& (0+255),b
 24570  011D60                     i2l14423:
 24571                           
 24572                           ; BSR set to: 0
 24573  011D60  0E0A               	movlw	10
 24574  011D62  1989               	xorwf	i2printf@c& (0+255),w,b
 24575  011D64  B4D8               	btfsc	status,2,c
 24576  011D66  D01B               	goto	i2u1758_40
 24577                           
 24578                           ; BSR set to: 0
 24579                           ;doprnt.c: 1137: if(val < dpowers[c])
 24580                           
 24581                           ; BSR set to: 0
 24582                           
 24583                           ; BSR set to: 0
 24584  011D68  5189               	movf	i2printf@c& (0+255),w,b
 24585  011D6A  0D04               	mullw	4
 24586  011D6C  0EE3               	movlw	low _dpowers
 24587  011D6E  24F3               	addwf	prodl,w,c
 24588  011D70  6EF6               	movwf	tblptrl,c
 24589  011D72  0EEB               	movlw	high _dpowers
 24590  011D74  20F4               	addwfc	prodh,w,c
 24591  011D76  6EF7               	movwf	tblptrh,c
 24592  011D78                     	if	1	;There are 3 active tblptr bytes
 24593  011D78  6AF8               	clrf	tblptru,c
 24594  011D7A  0E00               	movlw	low (__mediumconst shr (0+16))
 24595  011D7C  22F8               	addwfc	tblptru,f,c
 24596  011D7E                     	endif
 24597  011D7E  0009               	tblrd		*+
 24598  011D80  50F5               	movf	tablat,w,c
 24599  011D82  5D83               	subwf	i2printf@val& (0+255),w,b
 24600  011D84  0009               	tblrd		*+
 24601  011D86  50F5               	movf	tablat,w,c
 24602  011D88  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 24603  011D8A  0009               	tblrd		*+
 24604  011D8C  50F5               	movf	tablat,w,c
 24605  011D8E  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 24606  011D90  0009               	tblrd		*+
 24607  011D92  50F5               	movf	tablat,w,c
 24608  011D94  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 24609  011D96  A0D8               	btfss	status,0,c
 24610  011D98  D002               	goto	i2u1758_40
 24611                           
 24612                           ; BSR set to: 0
 24613                           
 24614                           ; BSR set to: 0
 24615                           
 24616                           ; BSR set to: 0
 24617                           ;doprnt.c: 1138: break;
 24618  011D9A  2B89               	incf	i2printf@c& (0+255),f,b
 24619  011D9C  D7E1               	goto	i2l14423
 24620  011D9E                     i2u1758_40:
 24621                           
 24622                           ; BSR set to: 0
 24623                           ;doprnt.c: 1175: {
 24624                           ;doprnt.c: 1188: if(flag & 0x03)
 24625                           
 24626                           ; BSR set to: 0
 24627  011D9E  0E03               	movlw	3
 24628  011DA0  1578               	andwf	i2printf@flag& (0+255),w,b
 24629  011DA2  6F68               	movwf	??i2_printf& (0+255),b
 24630  011DA4  0E00               	movlw	0
 24631  011DA6  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 24632  011DA8  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24633  011DAA  5168               	movf	??i2_printf& (0+255),w,b
 24634  011DAC  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 24635  011DAE  B4D8               	btfsc	status,2,c
 24636  011DB0  D04D               	goto	i2l1403
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;doprnt.c: 1190: (putch('-') );
 24640  011DB2  0E2D               	movlw	45
 24641  011DB4  EC53  F0B7         	call	i2_putch
 24642                           
 24643                           ;doprnt.c: 1195: }
 24644                           ;doprnt.c: 1196: while(c--) {
 24645  011DB8  D049               	goto	i2l1403
 24646  011DBA                     
 24647                           ;doprnt.c: 1200: {
 24648                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 24649  011DBA  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 24650  011DBE  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 24651  011DC2  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 24652  011DC6  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 24653  011DCA  0100               	movlb	0	; () banked
 24654  011DCC  5189               	movf	i2printf@c& (0+255),w,b
 24655  011DCE  0D04               	mullw	4
 24656  011DD0  0EE3               	movlw	low _dpowers
 24657  011DD2  24F3               	addwf	prodl,w,c
 24658  011DD4  6EF6               	movwf	tblptrl,c
 24659  011DD6  0EEB               	movlw	high _dpowers
 24660  011DD8  20F4               	addwfc	prodh,w,c
 24661  011DDA  6EF7               	movwf	tblptrh,c
 24662  011DDC                     	if	1	;There are 3 active tblptr bytes
 24663  011DDC  6AF8               	clrf	tblptru,c
 24664  011DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 24665  011DE0  22F8               	addwfc	tblptru,f,c
 24666  011DE2                     	endif
 24667  011DE2  0009               	tblrd		*+
 24668  011DE4  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 24669  011DE8  0009               	tblrd		*+
 24670  011DEA  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 24671  011DEE  0009               	tblrd		*+
 24672  011DF0  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 24673  011DF4  000A               	tblrd		*-
 24674  011DF6  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 24675  011DFA  ECFB  F0AE         	call	i2___lldiv	;wreg free
 24676  011DFE  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 24677  011E02  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 24678  011E06  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 24679  011E0A  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 24680                           
 24681                           ;doprnt.c: 1202: tmpval.vd %= 10;
 24682  011E0E  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 24683  011E12  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 24684  011E16  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 24685  011E1A  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 24686  011E1E  0E0A               	movlw	10
 24687  011E20  6E12               	movwf	i2___llmod@divisor,c
 24688  011E22  0E00               	movlw	0
 24689  011E24  6E13               	movwf	i2___llmod@divisor+1,c
 24690  011E26  0E00               	movlw	0
 24691  011E28  6E14               	movwf	i2___llmod@divisor+2,c
 24692  011E2A  0E00               	movlw	0
 24693  011E2C  6E15               	movwf	i2___llmod@divisor+3,c
 24694  011E2E  EC42  F0B1         	call	i2___llmod	;wreg free
 24695  011E32  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 24696  011E36  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 24697  011E3A  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 24698  011E3E  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 24699                           
 24700                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 24701  011E42  0100               	movlb	0	; () banked
 24702  011E44  517C               	movf	i2printf@tmpval& (0+255),w,b
 24703  011E46  0F30               	addlw	48
 24704  011E48  EC53  F0B7         	call	i2_putch
 24705  011E4C                     i2l1403:
 24706  011E4C  0100               	movlb	0	; () banked
 24707  011E4E  0789               	decf	i2printf@c& (0+255),f,b
 24708  011E50  2989               	incf	i2printf@c& (0+255),w,b
 24709  011E52  B4D8               	btfsc	status,2,c
 24710  011E54  D008               	goto	i2l1406
 24711  011E56  D7B1               	goto	i2l1404
 24712  011E58                     i2l14447:
 24713                           
 24714                           ; BSR set to: 0
 24715                           ;doprnt.c: 1208: (putch('0') );
 24716  011E58  0E30               	movlw	48
 24717  011E5A  EC53  F0B7         	call	i2_putch
 24718                           
 24719                           ;doprnt.c: 1209: exp--;
 24720  011E5E  0100               	movlb	0	; () banked
 24721  011E60  077A               	decf	i2printf@exp& (0+255),f,b
 24722  011E62  A0D8               	btfss	status,0,c
 24723  011E64  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24724  011E66                     i2l1406:
 24725                           
 24726                           ; BSR set to: 0
 24727                           
 24728                           ; BSR set to: 0
 24729  011E66  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 24730  011E68  D005               	goto	i2u1761_40
 24731  011E6A  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 24732  011E6C  E1F5               	bnz	i2l14447
 24733  011E6E  057A               	decf	i2printf@exp& (0+255),w,b
 24734  011E70  B0D8               	btfsc	status,0,c
 24735  011E72  D7F2               	goto	i2l1407
 24736  011E74                     i2u1761_40:
 24737                           
 24738                           ; BSR set to: 0
 24739                           ;doprnt.c: 1210: }
 24740                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 24741                           
 24742                           ; BSR set to: 0
 24743  011E74  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 24744  011E76  D009               	goto	i2l1409
 24745  011E78  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 24746  011E7A  E104               	bnz	i2u1762_40
 24747  011E7C  0E09               	movlw	9
 24748  011E7E  5D87               	subwf	i2printf@prec& (0+255),w,b
 24749  011E80  A0D8               	btfss	status,0,c
 24750  011E82  D003               	goto	i2l1409
 24751  011E84                     i2u1762_40:
 24752                           
 24753                           ; BSR set to: 0
 24754                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 24755  011E84  0E08               	movlw	8
 24756  011E86  6F89               	movwf	i2printf@c& (0+255),b
 24757  011E88  D002               	goto	i2l1410
 24758  011E8A                     i2l1409:
 24759                           
 24760                           ; BSR set to: 0
 24761                           ;doprnt.c: 1213: else
 24762                           ;doprnt.c: 1214: c = prec;
 24763  011E8A  C087  F089         	movff	i2printf@prec,i2printf@c
 24764  011E8E                     i2l1410:
 24765                           
 24766                           ; BSR set to: 0
 24767                           ;doprnt.c: 1215: prec -= c;
 24768                           
 24769                           ; BSR set to: 0
 24770  011E8E  5189               	movf	i2printf@c& (0+255),w,b
 24771  011E90  5F87               	subwf	i2printf@prec& (0+255),f,b
 24772  011E92  0E00               	movlw	0
 24773  011E94  BF89               	btfsc	i2printf@c& (0+255),7,b
 24774  011E96  0EFF               	movlw	255
 24775  011E98  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 24776                           
 24777                           ; BSR set to: 0
 24778                           ;doprnt.c: 1219: if(c)
 24779  011E9A  5189               	movf	i2printf@c& (0+255),w,b
 24780  011E9C  B4D8               	btfsc	status,2,c
 24781  011E9E  D003               	goto	i2l1411
 24782                           
 24783                           ; BSR set to: 0
 24784                           ;doprnt.c: 1221: (putch('.') );
 24785  011EA0  0E2E               	movlw	46
 24786  011EA2  EC53  F0B7         	call	i2_putch
 24787  011EA6                     i2l1411:
 24788                           
 24789                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 24790  011EA6  0100               	movlb	0	; () banked
 24791  011EA8  5189               	movf	i2printf@c& (0+255),w,b
 24792  011EAA  ECF1  F096         	call	i2_scale
 24793  011EAE  C036  F06E         	movff	?i2_scale,i2_printf$4019
 24794  011EB2  C037  F06F         	movff	?i2_scale+1,i2_printf$4019+1
 24795  011EB6  C038  F070         	movff	?i2_scale+2,i2_printf$4019+2
 24796                           
 24797                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 24798  011EBA  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 24799  011EBE  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 24800  011EC2  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 24801  011EC6  C06E  F027         	movff	i2_printf$4019,i2___ftmul@f1
 24802  011ECA  C06F  F028         	movff	i2_printf$4019+1,i2___ftmul@f1+1
 24803  011ECE  C070  F029         	movff	i2_printf$4019+2,i2___ftmul@f1+2
 24804  011ED2  EC4E  F0A8         	call	i2___ftmul	;wreg free
 24805  011ED6  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 24806  011EDA  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 24807  011EDE  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 24808  011EE2  ECD4  F0A7         	call	i2___fttol	;wreg free
 24809  011EE6  C03D  F083         	movff	?i2___fttol,i2printf@val
 24810  011EEA  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 24811  011EEE  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 24812  011EF2  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 24813                           
 24814                           ;doprnt.c: 1228: while(c--) {
 24815  011EF6  D073               	goto	i2l1412
 24816  011EF8                     
 24817                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 24818  011EF8  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 24819  011EFC  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 24820  011F00  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 24821  011F04  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 24822  011F08  0100               	movlb	0	; () banked
 24823  011F0A  5189               	movf	i2printf@c& (0+255),w,b
 24824  011F0C  0D04               	mullw	4
 24825  011F0E  0EE3               	movlw	low _dpowers
 24826  011F10  24F3               	addwf	prodl,w,c
 24827  011F12  6EF6               	movwf	tblptrl,c
 24828  011F14  0EEB               	movlw	high _dpowers
 24829  011F16  20F4               	addwfc	prodh,w,c
 24830  011F18  6EF7               	movwf	tblptrh,c
 24831  011F1A                     	if	1	;There are 3 active tblptr bytes
 24832  011F1A  6AF8               	clrf	tblptru,c
 24833  011F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 24834  011F1E  22F8               	addwfc	tblptru,f,c
 24835  011F20                     	endif
 24836  011F20  0009               	tblrd		*+
 24837  011F22  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 24838  011F26  0009               	tblrd		*+
 24839  011F28  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 24840  011F2C  0009               	tblrd		*+
 24841  011F2E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 24842  011F32  000A               	tblrd		*-
 24843  011F34  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 24844  011F38  ECFB  F0AE         	call	i2___lldiv	;wreg free
 24845  011F3C  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 24846  011F40  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 24847  011F44  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 24848  011F48  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 24849                           
 24850                           ;doprnt.c: 1230: tmpval.vd %= 10;
 24851  011F4C  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 24852  011F50  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 24853  011F54  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 24854  011F58  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 24855  011F5C  0E0A               	movlw	10
 24856  011F5E  6E12               	movwf	i2___llmod@divisor,c
 24857  011F60  0E00               	movlw	0
 24858  011F62  6E13               	movwf	i2___llmod@divisor+1,c
 24859  011F64  0E00               	movlw	0
 24860  011F66  6E14               	movwf	i2___llmod@divisor+2,c
 24861  011F68  0E00               	movlw	0
 24862  011F6A  6E15               	movwf	i2___llmod@divisor+3,c
 24863  011F6C  EC42  F0B1         	call	i2___llmod	;wreg free
 24864  011F70  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 24865  011F74  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 24866  011F78  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 24867  011F7C  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 24868                           
 24869                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 24870  011F80  0100               	movlb	0	; () banked
 24871  011F82  517C               	movf	i2printf@tmpval& (0+255),w,b
 24872  011F84  0F30               	addlw	48
 24873  011F86  EC53  F0B7         	call	i2_putch
 24874                           
 24875                           ;doprnt.c: 1232: val %= dpowers[c];
 24876  011F8A  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 24877  011F8E  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 24878  011F92  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 24879  011F96  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 24880  011F9A  0100               	movlb	0	; () banked
 24881  011F9C  5189               	movf	i2printf@c& (0+255),w,b
 24882  011F9E  0D04               	mullw	4
 24883  011FA0  0EE3               	movlw	low _dpowers
 24884  011FA2  24F3               	addwf	prodl,w,c
 24885  011FA4  6EF6               	movwf	tblptrl,c
 24886  011FA6  0EEB               	movlw	high _dpowers
 24887  011FA8  20F4               	addwfc	prodh,w,c
 24888  011FAA  6EF7               	movwf	tblptrh,c
 24889  011FAC                     	if	1	;There are 3 active tblptr bytes
 24890  011FAC  6AF8               	clrf	tblptru,c
 24891  011FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 24892  011FB0  22F8               	addwfc	tblptru,f,c
 24893  011FB2                     	endif
 24894  011FB2  0009               	tblrd		*+
 24895  011FB4  CFF5 F012          	movff	tablat,i2___llmod@divisor
 24896  011FB8  0009               	tblrd		*+
 24897  011FBA  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 24898  011FBE  0009               	tblrd		*+
 24899  011FC0  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 24900  011FC4  000A               	tblrd		*-
 24901  011FC6  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 24902  011FCA  EC42  F0B1         	call	i2___llmod	;wreg free
 24903  011FCE  C00E  F083         	movff	?i2___llmod,i2printf@val
 24904  011FD2  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 24905  011FD6  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 24906  011FDA  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 24907  011FDE                     i2l1412:
 24908  011FDE  0100               	movlb	0	; () banked
 24909  011FE0  0789               	decf	i2printf@c& (0+255),f,b
 24910  011FE2  2989               	incf	i2printf@c& (0+255),w,b
 24911  011FE4  B4D8               	btfsc	status,2,c
 24912  011FE6  D008               	goto	i2l1415
 24913  011FE8  D787               	goto	i2l1413
 24914  011FEA                     
 24915                           ; BSR set to: 0
 24916                           ;doprnt.c: 1236: (putch('0') );
 24917                           
 24918                           ; BSR set to: 0
 24919  011FEA  0E30               	movlw	48
 24920  011FEC  EC53  F0B7         	call	i2_putch
 24921                           
 24922                           ;doprnt.c: 1237: prec--;
 24923  011FF0  0100               	movlb	0	; () banked
 24924  011FF2  0787               	decf	i2printf@prec& (0+255),f,b
 24925  011FF4  A0D8               	btfss	status,0,c
 24926  011FF6  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 24927  011FF8                     i2l1415:
 24928                           
 24929                           ; BSR set to: 0
 24930                           
 24931                           ; BSR set to: 0
 24932  011FF8  5187               	movf	i2printf@prec& (0+255),w,b
 24933  011FFA  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 24934  011FFC  B4D8               	btfsc	status,2,c
 24935  011FFE  D156               	goto	i2u1779_40
 24936  012000  D7F4               	goto	i2l1416
 24937  012002                     i2l1380:
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;doprnt.c: 1246: }
 24941                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 24942                           
 24943                           ; BSR set to: 0
 24944  012002  0EC0               	movlw	192
 24945  012004  1578               	andwf	i2printf@flag& (0+255),w,b
 24946  012006  6F68               	movwf	??i2_printf& (0+255),b
 24947  012008  0E00               	movlw	0
 24948  01200A  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 24949  01200C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24950  01200E  5168               	movf	??i2_printf& (0+255),w,b
 24951  012010  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 24952  012012  A4D8               	btfss	status,2,c
 24953  012014  D01E               	goto	i2l1418
 24954                           
 24955                           ; BSR set to: 0
 24956                           ;doprnt.c: 1253: {
 24957                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 24958  012016  C076  FFD9         	movff	i2printf@ap,fsr2l
 24959  01201A  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 24960  01201E  CFDE F083          	movff	postinc2,i2printf@val
 24961  012022  CFDD F084          	movff	postdec2,i2printf@val+1
 24962  012026  0E00               	movlw	0
 24963  012028  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 24964  01202A  0EFF               	movlw	-1
 24965  01202C  6F85               	movwf	(i2printf@val+2)& (0+255),b
 24966  01202E  6F86               	movwf	(i2printf@val+3)& (0+255),b
 24967                           
 24968                           ; BSR set to: 0
 24969  012030  0E02               	movlw	2
 24970  012032  2776               	addwf	i2printf@ap& (0+255),f,b
 24971  012034  0E00               	movlw	0
 24972  012036  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24973                           
 24974                           ; BSR set to: 0
 24975                           ;doprnt.c: 1261: if((long)val < 0) {
 24976  012038  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 24977  01203A  D01D               	goto	i2l1420
 24978                           
 24979                           ; BSR set to: 0
 24980                           ;doprnt.c: 1262: flag |= 0x03;
 24981  01203C  0E03               	movlw	3
 24982  01203E  1378               	iorwf	i2printf@flag& (0+255),f,b
 24983                           
 24984                           ; BSR set to: 0
 24985                           ;doprnt.c: 1263: val = -val;
 24986  012040  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 24987  012042  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 24988  012044  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 24989  012046  6D83               	negf	i2printf@val& (0+255),b
 24990  012048  0E00               	movlw	0
 24991  01204A  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 24992  01204C  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 24993  01204E  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 24994                           
 24995                           ; BSR set to: 0
 24996                           ;doprnt.c: 1264: }
 24997                           ;doprnt.c: 1266: }
 24998  012050  D012               	goto	i2l1420
 24999  012052                     i2l1418:
 25000                           
 25001                           ; BSR set to: 0
 25002                           ;doprnt.c: 1268: else
 25003                           ;doprnt.c: 1273: {
 25004                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25005                           
 25006                           ; BSR set to: 0
 25007  012052  C076  FFD9         	movff	i2printf@ap,fsr2l
 25008  012056  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 25009  01205A  CFDE F068          	movff	postinc2,??i2_printf
 25010  01205E  CFDD F069          	movff	postdec2,??i2_printf+1
 25011  012062  C068  F083         	movff	??i2_printf,i2printf@val
 25012  012066  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 25013  01206A  6B85               	clrf	(i2printf@val+2)& (0+255),b
 25014  01206C  6B86               	clrf	(i2printf@val+3)& (0+255),b
 25015                           
 25016                           ; BSR set to: 0
 25017  01206E  0E02               	movlw	2
 25018  012070  2776               	addwf	i2printf@ap& (0+255),f,b
 25019  012072  0E00               	movlw	0
 25020  012074  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25021  012076                     i2l1420:
 25022                           
 25023                           ; BSR set to: 0
 25024                           ;doprnt.c: 1287: }
 25025                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25026                           
 25027                           ; BSR set to: 0
 25028  012076  5187               	movf	i2printf@prec& (0+255),w,b
 25029  012078  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25030  01207A  A4D8               	btfss	status,2,c
 25031  01207C  D04B               	goto	i2l1422
 25032                           
 25033                           ; BSR set to: 0
 25034  01207E  5183               	movf	i2printf@val& (0+255),w,b
 25035  012080  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 25036  012082  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 25037  012084  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 25038  012086  A4D8               	btfss	status,2,c
 25039  012088  D045               	goto	i2l1422
 25040                           
 25041                           ; BSR set to: 0
 25042                           ;doprnt.c: 1291: prec++;
 25043  01208A  4B87               	infsnz	i2printf@prec& (0+255),f,b
 25044  01208C  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 25045                           
 25046                           ; BSR set to: 0
 25047                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25048  01208E  D042               	goto	i2l1422
 25049  012090                     
 25050                           ; BSR set to: 0
 25051                           ;doprnt.c: 1302: case 0xC0:
 25052                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25053                           
 25054                           ; BSR set to: 0
 25055                           
 25056                           ; BSR set to: 0
 25057  012090  0E01               	movlw	1
 25058  012092  6F89               	movwf	i2printf@c& (0+255),b
 25059  012094                     i2l14507:
 25060                           
 25061                           ; BSR set to: 0
 25062  012094  0E0A               	movlw	10
 25063  012096  1989               	xorwf	i2printf@c& (0+255),w,b
 25064  012098  B4D8               	btfsc	status,2,c
 25065  01209A  D047               	goto	i2l1428
 25066                           
 25067                           ; BSR set to: 0
 25068                           ;doprnt.c: 1306: if(val < dpowers[c])
 25069                           
 25070                           ; BSR set to: 0
 25071                           
 25072                           ; BSR set to: 0
 25073  01209C  5189               	movf	i2printf@c& (0+255),w,b
 25074  01209E  0D04               	mullw	4
 25075  0120A0  0EE3               	movlw	low _dpowers
 25076  0120A2  24F3               	addwf	prodl,w,c
 25077  0120A4  6EF6               	movwf	tblptrl,c
 25078  0120A6  0EEB               	movlw	high _dpowers
 25079  0120A8  20F4               	addwfc	prodh,w,c
 25080  0120AA  6EF7               	movwf	tblptrh,c
 25081  0120AC                     	if	1	;There are 3 active tblptr bytes
 25082  0120AC  6AF8               	clrf	tblptru,c
 25083  0120AE  0E00               	movlw	low (__mediumconst shr (0+16))
 25084  0120B0  22F8               	addwfc	tblptru,f,c
 25085  0120B2                     	endif
 25086  0120B2  0009               	tblrd		*+
 25087  0120B4  50F5               	movf	tablat,w,c
 25088  0120B6  5D83               	subwf	i2printf@val& (0+255),w,b
 25089  0120B8  0009               	tblrd		*+
 25090  0120BA  50F5               	movf	tablat,w,c
 25091  0120BC  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25092  0120BE  0009               	tblrd		*+
 25093  0120C0  50F5               	movf	tablat,w,c
 25094  0120C2  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25095  0120C4  0009               	tblrd		*+
 25096  0120C6  50F5               	movf	tablat,w,c
 25097  0120C8  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25098  0120CA  A0D8               	btfss	status,0,c
 25099  0120CC  D02E               	goto	i2l1428
 25100                           
 25101                           ; BSR set to: 0
 25102                           
 25103                           ; BSR set to: 0
 25104                           
 25105                           ; BSR set to: 0
 25106                           ;doprnt.c: 1307: break;
 25107  0120CE  2B89               	incf	i2printf@c& (0+255),f,b
 25108  0120D0  D7E1               	goto	i2l14507
 25109  0120D2                     
 25110                           ; BSR set to: 0
 25111                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25112                           
 25113                           ; BSR set to: 0
 25114  0120D2  0E01               	movlw	1
 25115  0120D4  6F89               	movwf	i2printf@c& (0+255),b
 25116  0120D6                     i2l14521:
 25117                           
 25118                           ; BSR set to: 0
 25119  0120D6  0E08               	movlw	8
 25120  0120D8  1989               	xorwf	i2printf@c& (0+255),w,b
 25121  0120DA  B4D8               	btfsc	status,2,c
 25122  0120DC  D026               	goto	i2l1428
 25123                           
 25124                           ; BSR set to: 0
 25125                           ;doprnt.c: 1317: if(val < hexpowers[c])
 25126                           
 25127                           ; BSR set to: 0
 25128                           
 25129                           ; BSR set to: 0
 25130  0120DE  5189               	movf	i2printf@c& (0+255),w,b
 25131  0120E0  0D04               	mullw	4
 25132  0120E2  0E59               	movlw	low _hexpowers
 25133  0120E4  24F3               	addwf	prodl,w,c
 25134  0120E6  6EF6               	movwf	tblptrl,c
 25135  0120E8  0EEC               	movlw	high _hexpowers
 25136  0120EA  20F4               	addwfc	prodh,w,c
 25137  0120EC  6EF7               	movwf	tblptrh,c
 25138  0120EE                     	if	1	;There are 3 active tblptr bytes
 25139  0120EE  6AF8               	clrf	tblptru,c
 25140  0120F0  0E00               	movlw	low (__mediumconst shr (0+16))
 25141  0120F2  22F8               	addwfc	tblptru,f,c
 25142  0120F4                     	endif
 25143  0120F4  0009               	tblrd		*+
 25144  0120F6  50F5               	movf	tablat,w,c
 25145  0120F8  5D83               	subwf	i2printf@val& (0+255),w,b
 25146  0120FA  0009               	tblrd		*+
 25147  0120FC  50F5               	movf	tablat,w,c
 25148  0120FE  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25149  012100  0009               	tblrd		*+
 25150  012102  50F5               	movf	tablat,w,c
 25151  012104  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25152  012106  0009               	tblrd		*+
 25153  012108  50F5               	movf	tablat,w,c
 25154  01210A  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25155  01210C  A0D8               	btfss	status,0,c
 25156  01210E  D00D               	goto	i2l1428
 25157                           
 25158                           ; BSR set to: 0
 25159                           
 25160                           ; BSR set to: 0
 25161                           
 25162                           ; BSR set to: 0
 25163                           ;doprnt.c: 1318: break;
 25164  012110  2B89               	incf	i2printf@c& (0+255),f,b
 25165  012112  D7E1               	goto	i2l14521
 25166  012114                     i2l1422:
 25167                           
 25168                           ; BSR set to: 0
 25169                           
 25170                           ; BSR set to: 0
 25171  012114  5178               	movf	i2printf@flag& (0+255),w,b
 25172  012116  0BC0               	andlw	192
 25173                           
 25174                           ; Switch size 1, requested type "space"
 25175                           ; Number of cases is 3, Range of values is 0 to 192
 25176                           ; switch strategies available:
 25177                           ; Name         Instructions Cycles
 25178                           ; simple_byte           10     6 (average)
 25179                           ;	Chosen strategy is simple_byte
 25180  012118  0A00               	xorlw	0	; case 0
 25181  01211A  B4D8               	btfsc	status,2,c
 25182  01211C  D7B9               	goto	i2l1423
 25183  01211E  0A80               	xorlw	128	; case 128
 25184  012120  B4D8               	btfsc	status,2,c
 25185  012122  D7D7               	goto	i2l1429
 25186  012124  0A40               	xorlw	64	; case 192
 25187  012126  B4D8               	btfsc	status,2,c
 25188  012128  D7B3               	goto	i2l1423
 25189  01212A                     i2l1428:
 25190                           
 25191                           ; BSR set to: 0
 25192                           ;doprnt.c: 1339: if(c < prec)
 25193                           
 25194                           ; BSR set to: 0
 25195  01212A  0E80               	movlw	128
 25196  01212C  BF89               	btfsc	i2printf@c& (0+255),7,b
 25197  01212E  0E7F               	movlw	127
 25198  012130  6F68               	movwf	??i2_printf& (0+255),b
 25199  012132  5187               	movf	i2printf@prec& (0+255),w,b
 25200  012134  5D89               	subwf	i2printf@c& (0+255),w,b
 25201  012136  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25202  012138  0A80               	xorlw	128
 25203  01213A  5968               	subwfb	??i2_printf& (0+255),w,b
 25204  01213C  B0D8               	btfsc	status,0,c
 25205  01213E  D003               	goto	i2l1433
 25206                           
 25207                           ; BSR set to: 0
 25208                           ;doprnt.c: 1340: c = prec;
 25209  012140  C087  F089         	movff	i2printf@prec,i2printf@c
 25210  012144  D010               	goto	i2l1435
 25211  012146                     i2l1433:
 25212                           
 25213                           ; BSR set to: 0
 25214                           ;doprnt.c: 1341: else if(prec < c)
 25215                           
 25216                           ; BSR set to: 0
 25217  012146  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25218  012148  0A80               	xorlw	128
 25219  01214A  6F68               	movwf	??i2_printf& (0+255),b
 25220  01214C  5189               	movf	i2printf@c& (0+255),w,b
 25221  01214E  5D87               	subwf	i2printf@prec& (0+255),w,b
 25222  012150  0E80               	movlw	128
 25223  012152  BF89               	btfsc	i2printf@c& (0+255),7,b
 25224  012154  0E7F               	movlw	127
 25225  012156  5968               	subwfb	??i2_printf& (0+255),w,b
 25226  012158  B0D8               	btfsc	status,0,c
 25227  01215A  D005               	goto	i2l1435
 25228                           
 25229                           ; BSR set to: 0
 25230                           ;doprnt.c: 1342: prec = c;
 25231  01215C  5189               	movf	i2printf@c& (0+255),w,b
 25232  01215E  6F87               	movwf	i2printf@prec& (0+255),b
 25233  012160  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 25234  012162  BF87               	btfsc	i2printf@prec& (0+255),7,b
 25235  012164  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 25236  012166                     i2l1435:
 25237                           
 25238                           ; BSR set to: 0
 25239                           ;doprnt.c: 1422: {
 25240                           ;doprnt.c: 1438: if(flag & 0x03)
 25241                           
 25242                           ; BSR set to: 0
 25243                           
 25244                           ; BSR set to: 0
 25245  012166  0E03               	movlw	3
 25246  012168  1578               	andwf	i2printf@flag& (0+255),w,b
 25247  01216A  6F68               	movwf	??i2_printf& (0+255),b
 25248  01216C  0E00               	movlw	0
 25249  01216E  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 25250  012170  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25251  012172  5168               	movf	??i2_printf& (0+255),w,b
 25252  012174  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 25253  012176  B4D8               	btfsc	status,2,c
 25254  012178  D090               	goto	i2l1437
 25255                           
 25256                           ; BSR set to: 0
 25257                           ;doprnt.c: 1439: (putch('-') );
 25258  01217A  0E2D               	movlw	45
 25259  01217C  EC53  F0B7         	call	i2_putch
 25260                           
 25261                           ;doprnt.c: 1469: }
 25262                           ;doprnt.c: 1474: while(prec--) {
 25263  012180  D08C               	goto	i2l1437
 25264  012182                     
 25265                           ;doprnt.c: 1486: case 0xC0:
 25266                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 25267  012182  C087  F068         	movff	i2printf@prec,??i2_printf
 25268  012186  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 25269  01218A  0100               	movlb	0	; () banked
 25270  01218C  90D8               	bcf	status,0,c
 25271  01218E  3768               	rlcf	??i2_printf& (0+255),f,b
 25272  012190  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25273  012192  90D8               	bcf	status,0,c
 25274  012194  3768               	rlcf	??i2_printf& (0+255),f,b
 25275  012196  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25276  012198  0EE3               	movlw	low _dpowers
 25277  01219A  2568               	addwf	??i2_printf& (0+255),w,b
 25278  01219C  6EF6               	movwf	tblptrl,c
 25279  01219E  0EEB               	movlw	high _dpowers
 25280  0121A0  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 25281  0121A2  6EF7               	movwf	tblptrh,c
 25282  0121A4                     	if	1	;There are 3 active tblptr bytes
 25283  0121A4  6AF8               	clrf	tblptru,c
 25284  0121A6  0E00               	movlw	low (__mediumconst shr (0+16))
 25285  0121A8  22F8               	addwfc	tblptru,f,c
 25286  0121AA                     	endif
 25287  0121AA  0009               	tblrd		*+
 25288  0121AC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25289  0121B0  0009               	tblrd		*+
 25290  0121B2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25291  0121B6  0009               	tblrd		*+
 25292  0121B8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25293  0121BC  000A               	tblrd		*-
 25294  0121BE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25295  0121C2  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25296  0121C6  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25297  0121CA  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25298  0121CE  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25299  0121D2  ECFB  F0AE         	call	i2___lldiv	;wreg free
 25300  0121D6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 25301  0121DA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 25302  0121DE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 25303  0121E2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 25304  0121E6  0E0A               	movlw	10
 25305  0121E8  6E12               	movwf	i2___llmod@divisor,c
 25306  0121EA  0E00               	movlw	0
 25307  0121EC  6E13               	movwf	i2___llmod@divisor+1,c
 25308  0121EE  0E00               	movlw	0
 25309  0121F0  6E14               	movwf	i2___llmod@divisor+2,c
 25310  0121F2  0E00               	movlw	0
 25311  0121F4  6E15               	movwf	i2___llmod@divisor+3,c
 25312  0121F6  EC42  F0B1         	call	i2___llmod	;wreg free
 25313  0121FA  500E               	movf	?i2___llmod,w,c
 25314  0121FC  0F30               	addlw	48
 25315  0121FE  0100               	movlb	0	; () banked
 25316  012200  6F89               	movwf	i2printf@c& (0+255),b
 25317                           
 25318                           ;doprnt.c: 1491: break;
 25319  012202  D048               	goto	i2l1442
 25320  012204                     
 25321                           ; BSR set to: 0
 25322                           ;doprnt.c: 1499: {
 25323                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 25324                           
 25325                           ; BSR set to: 0
 25326  012204  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25327  012208  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25328  01220C  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25329  012210  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25330  012214  C087  F068         	movff	i2printf@prec,??i2_printf
 25331  012218  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 25332  01221C  90D8               	bcf	status,0,c
 25333  01221E  3768               	rlcf	??i2_printf& (0+255),f,b
 25334  012220  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25335  012222  90D8               	bcf	status,0,c
 25336  012224  3768               	rlcf	??i2_printf& (0+255),f,b
 25337  012226  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25338  012228  0E59               	movlw	low _hexpowers
 25339  01222A  2568               	addwf	??i2_printf& (0+255),w,b
 25340  01222C  6EF6               	movwf	tblptrl,c
 25341  01222E  0EEC               	movlw	high _hexpowers
 25342  012230  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 25343  012232  6EF7               	movwf	tblptrh,c
 25344  012234                     	if	1	;There are 3 active tblptr bytes
 25345  012234  6AF8               	clrf	tblptru,c
 25346  012236  0E00               	movlw	low (__mediumconst shr (0+16))
 25347  012238  22F8               	addwfc	tblptru,f,c
 25348  01223A                     	endif
 25349  01223A  0009               	tblrd		*+
 25350  01223C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25351  012240  0009               	tblrd		*+
 25352  012242  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25353  012246  0009               	tblrd		*+
 25354  012248  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25355  01224C  000A               	tblrd		*-
 25356  01224E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25357  012252  ECFB  F0AE         	call	i2___lldiv	;wreg free
 25358  012256  5001               	movf	?i2___lldiv,w,c
 25359  012258  0B0F               	andlw	15
 25360  01225A  0100               	movlb	0	; () banked
 25361  01225C  6F71               	movwf	i2printf@idx& (0+255),b
 25362                           
 25363                           ; BSR set to: 0
 25364                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 25365  01225E  5171               	movf	i2printf@idx& (0+255),w,b
 25366  012260  0D01               	mullw	1
 25367  012262  0EEB               	movlw	low STR_134
 25368  012264  24F3               	addwf	prodl,w,c
 25369  012266  6EF6               	movwf	tblptrl,c
 25370  012268  0EFD               	movlw	high STR_134
 25371  01226A  20F4               	addwfc	prodh,w,c
 25372  01226C  6EF7               	movwf	tblptrh,c
 25373  01226E                     	if	1	;There are 3 active tblptr bytes
 25374  01226E  6AF8               	clrf	tblptru,c
 25375  012270  0E00               	movlw	low (__mediumconst shr (0+16))
 25376  012272  22F8               	addwfc	tblptru,f,c
 25377  012274                     	endif
 25378  012274  0008               	tblrd		*
 25379  012276  CFF5 F089          	movff	tablat,i2printf@c
 25380                           
 25381                           ; BSR set to: 0
 25382                           ;doprnt.c: 1523: }
 25383                           
 25384                           ;doprnt.c: 1508: }
 25385                           ;doprnt.c: 1510: break;
 25386  01227A  D00C               	goto	i2l1442
 25387  01227C                     i2l14557:
 25388  01227C  0100               	movlb	0	; () banked
 25389  01227E  5178               	movf	i2printf@flag& (0+255),w,b
 25390  012280  0BC0               	andlw	192
 25391                           
 25392                           ; Switch size 1, requested type "space"
 25393                           ; Number of cases is 3, Range of values is 0 to 192
 25394                           ; switch strategies available:
 25395                           ; Name         Instructions Cycles
 25396                           ; simple_byte           10     6 (average)
 25397                           ;	Chosen strategy is simple_byte
 25398  012282  0A00               	xorlw	0	; case 0
 25399  012284  B4D8               	btfsc	status,2,c
 25400  012286  D77D               	goto	i2l1440
 25401  012288  0A80               	xorlw	128	; case 128
 25402  01228A  B4D8               	btfsc	status,2,c
 25403  01228C  D7BB               	goto	i2l1443
 25404  01228E  0A40               	xorlw	64	; case 192
 25405  012290  B4D8               	btfsc	status,2,c
 25406  012292  D777               	goto	i2l1440
 25407  012294                     i2l1442:
 25408                           
 25409                           ; BSR set to: 0
 25410                           ;doprnt.c: 1524: (putch(c) );
 25411                           
 25412                           ; BSR set to: 0
 25413  012294  5189               	movf	i2printf@c& (0+255),w,b
 25414  012296  EC53  F0B7         	call	i2_putch
 25415  01229A                     i2l1437:
 25416  01229A  0100               	movlb	0	; () banked
 25417  01229C  0787               	decf	i2printf@prec& (0+255),f,b
 25418  01229E  A0D8               	btfss	status,0,c
 25419  0122A0  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 25420  0122A2  2987               	incf	i2printf@prec& (0+255),w,b
 25421  0122A4  E1EB               	bnz	i2l14557
 25422  0122A6  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 25423  0122A8  A4D8               	btfss	status,2,c
 25424  0122AA  D7E8               	goto	i2l1439
 25425  0122AC                     i2u1779_40:
 25426                           
 25427                           ; BSR set to: 0
 25428                           
 25429                           ; BSR set to: 0
 25430  0122AC  0100               	movlb	0	; () banked
 25431  0122AE  5166               	movf	i2printf@f& (0+255),w,b
 25432  0122B0  6F68               	movwf	??i2_printf& (0+255),b
 25433  0122B2  5167               	movf	(i2printf@f+1)& (0+255),w,b
 25434  0122B4  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25435  0122B6  4B66               	infsnz	i2printf@f& (0+255),f,b
 25436  0122B8  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 25437  0122BA  C068  FFF6         	movff	??i2_printf,tblptrl
 25438  0122BE  C069  FFF7         	movff	??i2_printf+1,tblptrh
 25439  0122C2  0E00               	movlw	low (__mediumconst shr (0+16))
 25440  0122C4  6EF8               	movwf	tblptru,c
 25441  0122C6  0E0D               	movlw	(high __ramtop+-1)
 25442  0122C8  64F7               	cpfsgt	tblptrh,c
 25443  0122CA  D003               	bra	i2u1780_47
 25444  0122CC  0008               	tblrd		*
 25445  0122CE  50F5               	movf	tablat,w,c
 25446  0122D0  D005               	bra	i2u1780_40
 25447  0122D2                     i2u1780_47:
 25448  0122D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 25449  0122D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 25450  0122DA  50EF               	movf	indf0,w,c
 25451  0122DC                     i2u1780_40:
 25452  0122DC  0100               	movlb	0	; () banked
 25453  0122DE  6F89               	movwf	i2printf@c& (0+255),b
 25454  0122E0  5189               	movf	i2printf@c& (0+255),w,b
 25455  0122E2  B4D8               	btfsc	status,2,c
 25456  0122E4  0012               	return	
 25457  0122E6  EF15  F08C         	goto	i2l1351
 25458  0122EA                     __end_ofi2_printf:
 25459                           	opt stack 0
 25460                           tosu	equ	0xFFF
 25461                           tosh	equ	0xFFE
 25462                           tosl	equ	0xFFD
 25463                           pclatu	equ	0xFFB
 25464                           pclath	equ	0xFFA
 25465                           tblptru	equ	0xFF8
 25466                           tblptrh	equ	0xFF7
 25467                           tblptrl	equ	0xFF6
 25468                           tablat	equ	0xFF5
 25469                           prodh	equ	0xFF4
 25470                           prodl	equ	0xFF3
 25471                           intcon	equ	0xFF2
 25472                           indf0	equ	0xFEF
 25473                           postinc0	equ	0xFEE
 25474                           fsr0h	equ	0xFEA
 25475                           fsr0l	equ	0xFE9
 25476                           wreg	equ	0xFE8
 25477                           indf1	equ	0xFE7
 25478                           postdec1	equ	0xFE5
 25479                           plusw1	equ	0xFE3
 25480                           fsr1h	equ	0xFE2
 25481                           fsr1l	equ	0xFE1
 25482                           bsr	equ	0xFE0
 25483                           indf2	equ	0xFDF
 25484                           postinc2	equ	0xFDE
 25485                           postdec2	equ	0xFDD
 25486                           plusw2	equ	0xFDB
 25487                           fsr2h	equ	0xFDA
 25488                           fsr2l	equ	0xFD9
 25489                           status	equ	0xFD8
 25490                           
 25491 ;; *************** function i2_scale *****************
 25492 ;; Defined at:
 25493 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25494 ;; Parameters:    Size  Location     Type
 25495 ;;  scl             1    wreg     char 
 25496 ;; Auto vars:     Size  Location     Type
 25497 ;;  scl             1   59[COMRAM] char 
 25498 ;; Return value:  Size  Location     Type
 25499 ;;                  3   53[COMRAM] char 
 25500 ;; Registers used:
 25501 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25502 ;; Tracked objects:
 25503 ;;		On entry : 0/0
 25504 ;;		On exit  : 0/0
 25505 ;;		Unchanged: 0/0
 25506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25507 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25511 ;;Total ram usage:        7 bytes
 25512 ;; Hardware stack levels used:    1
 25513 ;; Hardware stack levels required when called:    2
 25514 ;; This function calls:
 25515 ;;		i2___awdiv
 25516 ;;		i2___awmod
 25517 ;;		i2___ftmul
 25518 ;;		i2___wmul
 25519 ;; This function is called by:
 25520 ;;		i2_printf
 25521 ;; This function uses a non-reentrant model
 25522 ;;
 25523                           
 25524                           	psect	text88
 25525  012DE2                     __ptext88:
 25526                           	opt stack 0
 25527  012DE2                     i2_scale:
 25528                           	opt stack 13
 25529                           
 25530                           ; BSR set to: 0
 25531                           ;incstack = 0
 25532                           ;i2scale@scl stored from wreg
 25533  012DE2  6E3C               	movwf	i2scale@scl,c
 25534                           
 25535                           ;doprnt.c: 428: if(scl < 0) {
 25536  012DE4  AE3C               	btfss	i2scale@scl,7,c
 25537  012DE6  D113               	goto	i2l1340
 25538                           
 25539                           ;doprnt.c: 429: scl = -scl;
 25540  012DE8  6C3C               	negf	i2scale@scl,c
 25541                           
 25542                           ;doprnt.c: 430: if(scl>=110)
 25543  012DEA  503C               	movf	i2scale@scl,w,c
 25544  012DEC  0A80               	xorlw	128
 25545  012DEE  0F12               	addlw	-238
 25546  012DF0  A0D8               	btfss	status,0,c
 25547  012DF2  D09A               	goto	i2l1341
 25548                           
 25549                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 25550  012DF4  0E00               	movlw	0
 25551  012DF6  6E12               	movwf	i2___wmul@multiplicand+1,c
 25552  012DF8  0E03               	movlw	3
 25553  012DFA  6E11               	movwf	i2___wmul@multiplicand,c
 25554  012DFC  0E00               	movlw	0
 25555  012DFE  6E0A               	movwf	i2___awdiv@divisor+1,c
 25556  012E00  0E0A               	movlw	10
 25557  012E02  6E09               	movwf	i2___awdiv@divisor,c
 25558  012E04  0E00               	movlw	0
 25559  012E06  6E04               	movwf	i2___awmod@divisor+1,c
 25560  012E08  0E64               	movlw	100
 25561  012E0A  6E03               	movwf	i2___awmod@divisor,c
 25562  012E0C  503C               	movf	i2scale@scl,w,c
 25563  012E0E  6E01               	movwf	i2___awmod@dividend,c
 25564  012E10  6A02               	clrf	i2___awmod@dividend+1,c
 25565  012E12  BE01               	btfsc	i2___awmod@dividend,7,c
 25566  012E14  0602               	decf	i2___awmod@dividend+1,f,c
 25567  012E16  EC6D  F0B0         	call	i2___awmod	;wreg free
 25568  012E1A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 25569  012E1E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 25570  012E22  ECB9  F0AE         	call	i2___awdiv	;wreg free
 25571  012E26  0E09               	movlw	9
 25572  012E28  2407               	addwf	?i2___awdiv,w,c
 25573  012E2A  6E0F               	movwf	i2___wmul@multiplier,c
 25574  012E2C  0E00               	movlw	0
 25575  012E2E  2008               	addwfc	?i2___awdiv+1,w,c
 25576  012E30  6E10               	movwf	i2___wmul@multiplier+1,c
 25577  012E32  EC27  F0B6         	call	i2___wmul	;wreg free
 25578  012E36  0E32               	movlw	low __npowers_
 25579  012E38  240F               	addwf	?i2___wmul,w,c
 25580  012E3A  6EF6               	movwf	tblptrl,c
 25581  012E3C  0EEC               	movlw	high __npowers_
 25582  012E3E  2010               	addwfc	?i2___wmul+1,w,c
 25583  012E40  6EF7               	movwf	tblptrh,c
 25584  012E42                     	if	1	;There are 3 active tblptr bytes
 25585  012E42  6AF8               	clrf	tblptru,c
 25586  012E44  0E00               	movlw	low (__mediumconst shr (0+16))
 25587  012E46  22F8               	addwfc	tblptru,f,c
 25588  012E48                     	endif
 25589  012E48  0009               	tblrd		*+
 25590  012E4A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25591  012E4E  0009               	tblrd		*+
 25592  012E50  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25593  012E54  000A               	tblrd		*-
 25594  012E56  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25595  012E5A  0E00               	movlw	0
 25596  012E5C  6E0A               	movwf	i2___awdiv@divisor+1,c
 25597  012E5E  0E64               	movlw	100
 25598  012E60  6E09               	movwf	i2___awdiv@divisor,c
 25599  012E62  503C               	movf	i2scale@scl,w,c
 25600  012E64  6E07               	movwf	i2___awdiv@dividend,c
 25601  012E66  6A08               	clrf	i2___awdiv@dividend+1,c
 25602  012E68  BE07               	btfsc	i2___awdiv@dividend,7,c
 25603  012E6A  0608               	decf	i2___awdiv@dividend+1,f,c
 25604  012E6C  ECB9  F0AE         	call	i2___awdiv	;wreg free
 25605  012E70  0E12               	movlw	18
 25606  012E72  2407               	addwf	?i2___awdiv,w,c
 25607  012E74  6E0F               	movwf	i2___wmul@multiplier,c
 25608  012E76  0E00               	movlw	0
 25609  012E78  2008               	addwfc	?i2___awdiv+1,w,c
 25610  012E7A  6E10               	movwf	i2___wmul@multiplier+1,c
 25611  012E7C  0E00               	movlw	0
 25612  012E7E  6E12               	movwf	i2___wmul@multiplicand+1,c
 25613  012E80  0E03               	movlw	3
 25614  012E82  6E11               	movwf	i2___wmul@multiplicand,c
 25615  012E84  EC27  F0B6         	call	i2___wmul	;wreg free
 25616  012E88  0E32               	movlw	low __npowers_
 25617  012E8A  240F               	addwf	?i2___wmul,w,c
 25618  012E8C  6EF6               	movwf	tblptrl,c
 25619  012E8E  0EEC               	movlw	high __npowers_
 25620  012E90  2010               	addwfc	?i2___wmul+1,w,c
 25621  012E92  6EF7               	movwf	tblptrh,c
 25622  012E94                     	if	1	;There are 3 active tblptr bytes
 25623  012E94  6AF8               	clrf	tblptru,c
 25624  012E96  0E00               	movlw	low (__mediumconst shr (0+16))
 25625  012E98  22F8               	addwfc	tblptru,f,c
 25626  012E9A                     	endif
 25627  012E9A  0009               	tblrd		*+
 25628  012E9C  CFF5 F027          	movff	tablat,i2___ftmul@f1
 25629  012EA0  0009               	tblrd		*+
 25630  012EA2  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 25631  012EA6  000A               	tblrd		*-
 25632  012EA8  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 25633  012EAC  EC4E  F0A8         	call	i2___ftmul	;wreg free
 25634  012EB0  C027  F039         	movff	?i2___ftmul,i2_scale$4018
 25635  012EB4  C028  F03A         	movff	?i2___ftmul+1,i2_scale$4018+1
 25636  012EB8  C029  F03B         	movff	?i2___ftmul+2,i2_scale$4018+2
 25637                           
 25638                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 25639  012EBC  C039  F027         	movff	i2_scale$4018,i2___ftmul@f1
 25640  012EC0  C03A  F028         	movff	i2_scale$4018+1,i2___ftmul@f1+1
 25641  012EC4  C03B  F029         	movff	i2_scale$4018+2,i2___ftmul@f1+2
 25642  012EC8  0E00               	movlw	0
 25643  012ECA  6E12               	movwf	i2___wmul@multiplicand+1,c
 25644  012ECC  0E03               	movlw	3
 25645  012ECE  6E11               	movwf	i2___wmul@multiplicand,c
 25646  012ED0  0E00               	movlw	0
 25647  012ED2  6E04               	movwf	i2___awmod@divisor+1,c
 25648  012ED4  0E0A               	movlw	10
 25649  012ED6  6E03               	movwf	i2___awmod@divisor,c
 25650  012ED8  503C               	movf	i2scale@scl,w,c
 25651  012EDA  6E01               	movwf	i2___awmod@dividend,c
 25652  012EDC  6A02               	clrf	i2___awmod@dividend+1,c
 25653  012EDE  BE01               	btfsc	i2___awmod@dividend,7,c
 25654  012EE0  0602               	decf	i2___awmod@dividend+1,f,c
 25655  012EE2  EC6D  F0B0         	call	i2___awmod	;wreg free
 25656  012EE6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 25657  012EEA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 25658  012EEE  EC27  F0B6         	call	i2___wmul	;wreg free
 25659  012EF2  0E32               	movlw	low __npowers_
 25660  012EF4  240F               	addwf	?i2___wmul,w,c
 25661  012EF6  6EF6               	movwf	tblptrl,c
 25662  012EF8  0EEC               	movlw	high __npowers_
 25663  012EFA  2010               	addwfc	?i2___wmul+1,w,c
 25664  012EFC  6EF7               	movwf	tblptrh,c
 25665  012EFE                     	if	1	;There are 3 active tblptr bytes
 25666  012EFE  6AF8               	clrf	tblptru,c
 25667  012F00  0E00               	movlw	low (__mediumconst shr (0+16))
 25668  012F02  22F8               	addwfc	tblptru,f,c
 25669  012F04                     	endif
 25670  012F04  0009               	tblrd		*+
 25671  012F06  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25672  012F0A  0009               	tblrd		*+
 25673  012F0C  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25674  012F10  000A               	tblrd		*-
 25675  012F12  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25676  012F16  EC4E  F0A8         	call	i2___ftmul	;wreg free
 25677  012F1A  C027  F036         	movff	?i2___ftmul,?i2_scale
 25678  012F1E  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 25679  012F22  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 25680  012F26  0012               	return	
 25681  012F28                     i2l1341:
 25682                           
 25683                           ;doprnt.c: 432: else if(scl > 10)
 25684  012F28  503C               	movf	i2scale@scl,w,c
 25685  012F2A  0A80               	xorlw	128
 25686  012F2C  0F75               	addlw	-139
 25687  012F2E  A0D8               	btfss	status,0,c
 25688  012F30  D059               	goto	i2l1344
 25689                           
 25690                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 25691  012F32  0E00               	movlw	0
 25692  012F34  6E0A               	movwf	i2___awdiv@divisor+1,c
 25693  012F36  0E0A               	movlw	10
 25694  012F38  6E09               	movwf	i2___awdiv@divisor,c
 25695  012F3A  503C               	movf	i2scale@scl,w,c
 25696  012F3C  6E07               	movwf	i2___awdiv@dividend,c
 25697  012F3E  6A08               	clrf	i2___awdiv@dividend+1,c
 25698  012F40  BE07               	btfsc	i2___awdiv@dividend,7,c
 25699  012F42  0608               	decf	i2___awdiv@dividend+1,f,c
 25700  012F44  ECB9  F0AE         	call	i2___awdiv	;wreg free
 25701  012F48  0E09               	movlw	9
 25702  012F4A  2407               	addwf	?i2___awdiv,w,c
 25703  012F4C  6E0F               	movwf	i2___wmul@multiplier,c
 25704  012F4E  0E00               	movlw	0
 25705  012F50  2008               	addwfc	?i2___awdiv+1,w,c
 25706  012F52  6E10               	movwf	i2___wmul@multiplier+1,c
 25707  012F54  0E00               	movlw	0
 25708  012F56  6E12               	movwf	i2___wmul@multiplicand+1,c
 25709  012F58  0E03               	movlw	3
 25710  012F5A  6E11               	movwf	i2___wmul@multiplicand,c
 25711  012F5C  EC27  F0B6         	call	i2___wmul	;wreg free
 25712  012F60  0E32               	movlw	low __npowers_
 25713  012F62  240F               	addwf	?i2___wmul,w,c
 25714  012F64  6EF6               	movwf	tblptrl,c
 25715  012F66  0EEC               	movlw	high __npowers_
 25716  012F68  2010               	addwfc	?i2___wmul+1,w,c
 25717  012F6A  6EF7               	movwf	tblptrh,c
 25718  012F6C                     	if	1	;There are 3 active tblptr bytes
 25719  012F6C  6AF8               	clrf	tblptru,c
 25720  012F6E  0E00               	movlw	low (__mediumconst shr (0+16))
 25721  012F70  22F8               	addwfc	tblptru,f,c
 25722  012F72                     	endif
 25723  012F72  0009               	tblrd		*+
 25724  012F74  CFF5 F027          	movff	tablat,i2___ftmul@f1
 25725  012F78  0009               	tblrd		*+
 25726  012F7A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 25727  012F7E  000A               	tblrd		*-
 25728  012F80  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 25729  012F84  0E00               	movlw	0
 25730  012F86  6E12               	movwf	i2___wmul@multiplicand+1,c
 25731  012F88  0E03               	movlw	3
 25732  012F8A  6E11               	movwf	i2___wmul@multiplicand,c
 25733  012F8C  0E00               	movlw	0
 25734  012F8E  6E04               	movwf	i2___awmod@divisor+1,c
 25735  012F90  0E0A               	movlw	10
 25736  012F92  6E03               	movwf	i2___awmod@divisor,c
 25737  012F94  503C               	movf	i2scale@scl,w,c
 25738  012F96  6E01               	movwf	i2___awmod@dividend,c
 25739  012F98  6A02               	clrf	i2___awmod@dividend+1,c
 25740  012F9A  BE01               	btfsc	i2___awmod@dividend,7,c
 25741  012F9C  0602               	decf	i2___awmod@dividend+1,f,c
 25742  012F9E  EC6D  F0B0         	call	i2___awmod	;wreg free
 25743  012FA2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 25744  012FA6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 25745  012FAA  EC27  F0B6         	call	i2___wmul	;wreg free
 25746  012FAE  0E32               	movlw	low __npowers_
 25747  012FB0  240F               	addwf	?i2___wmul,w,c
 25748  012FB2  6EF6               	movwf	tblptrl,c
 25749  012FB4  0EEC               	movlw	high __npowers_
 25750  012FB6  2010               	addwfc	?i2___wmul+1,w,c
 25751  012FB8  6EF7               	movwf	tblptrh,c
 25752  012FBA                     	if	1	;There are 3 active tblptr bytes
 25753  012FBA  6AF8               	clrf	tblptru,c
 25754  012FBC  0E00               	movlw	low (__mediumconst shr (0+16))
 25755  012FBE  22F8               	addwfc	tblptru,f,c
 25756  012FC0                     	endif
 25757  012FC0  0009               	tblrd		*+
 25758  012FC2  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25759  012FC6  0009               	tblrd		*+
 25760  012FC8  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25761  012FCC  000A               	tblrd		*-
 25762  012FCE  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25763  012FD2  EC4E  F0A8         	call	i2___ftmul	;wreg free
 25764  012FD6  C027  F036         	movff	?i2___ftmul,?i2_scale
 25765  012FDA  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 25766  012FDE  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 25767  012FE2  0012               	return	
 25768  012FE4                     i2l1344:
 25769                           
 25770                           ;doprnt.c: 434: return _npowers_[scl];
 25771  012FE4  503C               	movf	i2scale@scl,w,c
 25772  012FE6  0D03               	mullw	3
 25773  012FE8  0E32               	movlw	low __npowers_
 25774  012FEA  24F3               	addwf	prodl,w,c
 25775  012FEC  6EF6               	movwf	tblptrl,c
 25776  012FEE  0EEC               	movlw	high __npowers_
 25777  012FF0  20F4               	addwfc	prodh,w,c
 25778  012FF2  6EF7               	movwf	tblptrh,c
 25779  012FF4                     	if	1	;There are 3 active tblptr bytes
 25780  012FF4  6AF8               	clrf	tblptru,c
 25781  012FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 25782  012FF8  22F8               	addwfc	tblptru,f,c
 25783  012FFA                     	endif
 25784  012FFA  0009               	tblrd		*+
 25785  012FFC  CFF5 F036          	movff	tablat,?i2_scale
 25786  013000  0009               	tblrd		*+
 25787  013002  CFF5 F037          	movff	tablat,?i2_scale+1
 25788  013006  000A               	tblrd		*-
 25789  013008  CFF5 F038          	movff	tablat,?i2_scale+2
 25790  01300C  0012               	return	
 25791  01300E                     i2l1340:
 25792                           
 25793                           ;doprnt.c: 435: }
 25794                           ;doprnt.c: 436: if(scl>=110)
 25795  01300E  503C               	movf	i2scale@scl,w,c
 25796  013010  0A80               	xorlw	128
 25797  013012  0F12               	addlw	-238
 25798  013014  A0D8               	btfss	status,0,c
 25799  013016  D09A               	goto	i2l1345
 25800                           
 25801                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 25802  013018  0E00               	movlw	0
 25803  01301A  6E12               	movwf	i2___wmul@multiplicand+1,c
 25804  01301C  0E03               	movlw	3
 25805  01301E  6E11               	movwf	i2___wmul@multiplicand,c
 25806  013020  0E00               	movlw	0
 25807  013022  6E0A               	movwf	i2___awdiv@divisor+1,c
 25808  013024  0E0A               	movlw	10
 25809  013026  6E09               	movwf	i2___awdiv@divisor,c
 25810  013028  0E00               	movlw	0
 25811  01302A  6E04               	movwf	i2___awmod@divisor+1,c
 25812  01302C  0E64               	movlw	100
 25813  01302E  6E03               	movwf	i2___awmod@divisor,c
 25814  013030  503C               	movf	i2scale@scl,w,c
 25815  013032  6E01               	movwf	i2___awmod@dividend,c
 25816  013034  6A02               	clrf	i2___awmod@dividend+1,c
 25817  013036  BE01               	btfsc	i2___awmod@dividend,7,c
 25818  013038  0602               	decf	i2___awmod@dividend+1,f,c
 25819  01303A  EC6D  F0B0         	call	i2___awmod	;wreg free
 25820  01303E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 25821  013042  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 25822  013046  ECB9  F0AE         	call	i2___awdiv	;wreg free
 25823  01304A  0E09               	movlw	9
 25824  01304C  2407               	addwf	?i2___awdiv,w,c
 25825  01304E  6E0F               	movwf	i2___wmul@multiplier,c
 25826  013050  0E00               	movlw	0
 25827  013052  2008               	addwfc	?i2___awdiv+1,w,c
 25828  013054  6E10               	movwf	i2___wmul@multiplier+1,c
 25829  013056  EC27  F0B6         	call	i2___wmul	;wreg free
 25830  01305A  0E0B               	movlw	low __powers_
 25831  01305C  240F               	addwf	?i2___wmul,w,c
 25832  01305E  6EF6               	movwf	tblptrl,c
 25833  013060  0EEC               	movlw	high __powers_
 25834  013062  2010               	addwfc	?i2___wmul+1,w,c
 25835  013064  6EF7               	movwf	tblptrh,c
 25836  013066                     	if	1	;There are 3 active tblptr bytes
 25837  013066  6AF8               	clrf	tblptru,c
 25838  013068  0E00               	movlw	low (__mediumconst shr (0+16))
 25839  01306A  22F8               	addwfc	tblptru,f,c
 25840  01306C                     	endif
 25841  01306C  0009               	tblrd		*+
 25842  01306E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25843  013072  0009               	tblrd		*+
 25844  013074  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25845  013078  000A               	tblrd		*-
 25846  01307A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25847  01307E  0E00               	movlw	0
 25848  013080  6E0A               	movwf	i2___awdiv@divisor+1,c
 25849  013082  0E64               	movlw	100
 25850  013084  6E09               	movwf	i2___awdiv@divisor,c
 25851  013086  503C               	movf	i2scale@scl,w,c
 25852  013088  6E07               	movwf	i2___awdiv@dividend,c
 25853  01308A  6A08               	clrf	i2___awdiv@dividend+1,c
 25854  01308C  BE07               	btfsc	i2___awdiv@dividend,7,c
 25855  01308E  0608               	decf	i2___awdiv@dividend+1,f,c
 25856  013090  ECB9  F0AE         	call	i2___awdiv	;wreg free
 25857  013094  0E12               	movlw	18
 25858  013096  2407               	addwf	?i2___awdiv,w,c
 25859  013098  6E0F               	movwf	i2___wmul@multiplier,c
 25860  01309A  0E00               	movlw	0
 25861  01309C  2008               	addwfc	?i2___awdiv+1,w,c
 25862  01309E  6E10               	movwf	i2___wmul@multiplier+1,c
 25863  0130A0  0E00               	movlw	0
 25864  0130A2  6E12               	movwf	i2___wmul@multiplicand+1,c
 25865  0130A4  0E03               	movlw	3
 25866  0130A6  6E11               	movwf	i2___wmul@multiplicand,c
 25867  0130A8  EC27  F0B6         	call	i2___wmul	;wreg free
 25868  0130AC  0E0B               	movlw	low __powers_
 25869  0130AE  240F               	addwf	?i2___wmul,w,c
 25870  0130B0  6EF6               	movwf	tblptrl,c
 25871  0130B2  0EEC               	movlw	high __powers_
 25872  0130B4  2010               	addwfc	?i2___wmul+1,w,c
 25873  0130B6  6EF7               	movwf	tblptrh,c
 25874  0130B8                     	if	1	;There are 3 active tblptr bytes
 25875  0130B8  6AF8               	clrf	tblptru,c
 25876  0130BA  0E00               	movlw	low (__mediumconst shr (0+16))
 25877  0130BC  22F8               	addwfc	tblptru,f,c
 25878  0130BE                     	endif
 25879  0130BE  0009               	tblrd		*+
 25880  0130C0  CFF5 F027          	movff	tablat,i2___ftmul@f1
 25881  0130C4  0009               	tblrd		*+
 25882  0130C6  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 25883  0130CA  000A               	tblrd		*-
 25884  0130CC  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 25885  0130D0  EC4E  F0A8         	call	i2___ftmul	;wreg free
 25886  0130D4  C027  F039         	movff	?i2___ftmul,i2_scale$4018
 25887  0130D8  C028  F03A         	movff	?i2___ftmul+1,i2_scale$4018+1
 25888  0130DC  C029  F03B         	movff	?i2___ftmul+2,i2_scale$4018+2
 25889                           
 25890                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 25891  0130E0  C039  F027         	movff	i2_scale$4018,i2___ftmul@f1
 25892  0130E4  C03A  F028         	movff	i2_scale$4018+1,i2___ftmul@f1+1
 25893  0130E8  C03B  F029         	movff	i2_scale$4018+2,i2___ftmul@f1+2
 25894  0130EC  0E00               	movlw	0
 25895  0130EE  6E12               	movwf	i2___wmul@multiplicand+1,c
 25896  0130F0  0E03               	movlw	3
 25897  0130F2  6E11               	movwf	i2___wmul@multiplicand,c
 25898  0130F4  0E00               	movlw	0
 25899  0130F6  6E04               	movwf	i2___awmod@divisor+1,c
 25900  0130F8  0E0A               	movlw	10
 25901  0130FA  6E03               	movwf	i2___awmod@divisor,c
 25902  0130FC  503C               	movf	i2scale@scl,w,c
 25903  0130FE  6E01               	movwf	i2___awmod@dividend,c
 25904  013100  6A02               	clrf	i2___awmod@dividend+1,c
 25905  013102  BE01               	btfsc	i2___awmod@dividend,7,c
 25906  013104  0602               	decf	i2___awmod@dividend+1,f,c
 25907  013106  EC6D  F0B0         	call	i2___awmod	;wreg free
 25908  01310A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 25909  01310E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 25910  013112  EC27  F0B6         	call	i2___wmul	;wreg free
 25911  013116  0E0B               	movlw	low __powers_
 25912  013118  240F               	addwf	?i2___wmul,w,c
 25913  01311A  6EF6               	movwf	tblptrl,c
 25914  01311C  0EEC               	movlw	high __powers_
 25915  01311E  2010               	addwfc	?i2___wmul+1,w,c
 25916  013120  6EF7               	movwf	tblptrh,c
 25917  013122                     	if	1	;There are 3 active tblptr bytes
 25918  013122  6AF8               	clrf	tblptru,c
 25919  013124  0E00               	movlw	low (__mediumconst shr (0+16))
 25920  013126  22F8               	addwfc	tblptru,f,c
 25921  013128                     	endif
 25922  013128  0009               	tblrd		*+
 25923  01312A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25924  01312E  0009               	tblrd		*+
 25925  013130  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25926  013134  000A               	tblrd		*-
 25927  013136  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25928  01313A  EC4E  F0A8         	call	i2___ftmul	;wreg free
 25929  01313E  C027  F036         	movff	?i2___ftmul,?i2_scale
 25930  013142  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 25931  013146  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 25932  01314A  0012               	return	
 25933  01314C                     i2l1345:
 25934                           
 25935                           ;doprnt.c: 438: else if(scl > 10)
 25936  01314C  503C               	movf	i2scale@scl,w,c
 25937  01314E  0A80               	xorlw	128
 25938  013150  0F75               	addlw	-139
 25939  013152  A0D8               	btfss	status,0,c
 25940  013154  D059               	goto	i2l1347
 25941                           
 25942                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 25943  013156  0E00               	movlw	0
 25944  013158  6E0A               	movwf	i2___awdiv@divisor+1,c
 25945  01315A  0E0A               	movlw	10
 25946  01315C  6E09               	movwf	i2___awdiv@divisor,c
 25947  01315E  503C               	movf	i2scale@scl,w,c
 25948  013160  6E07               	movwf	i2___awdiv@dividend,c
 25949  013162  6A08               	clrf	i2___awdiv@dividend+1,c
 25950  013164  BE07               	btfsc	i2___awdiv@dividend,7,c
 25951  013166  0608               	decf	i2___awdiv@dividend+1,f,c
 25952  013168  ECB9  F0AE         	call	i2___awdiv	;wreg free
 25953  01316C  0E09               	movlw	9
 25954  01316E  2407               	addwf	?i2___awdiv,w,c
 25955  013170  6E0F               	movwf	i2___wmul@multiplier,c
 25956  013172  0E00               	movlw	0
 25957  013174  2008               	addwfc	?i2___awdiv+1,w,c
 25958  013176  6E10               	movwf	i2___wmul@multiplier+1,c
 25959  013178  0E00               	movlw	0
 25960  01317A  6E12               	movwf	i2___wmul@multiplicand+1,c
 25961  01317C  0E03               	movlw	3
 25962  01317E  6E11               	movwf	i2___wmul@multiplicand,c
 25963  013180  EC27  F0B6         	call	i2___wmul	;wreg free
 25964  013184  0E0B               	movlw	low __powers_
 25965  013186  240F               	addwf	?i2___wmul,w,c
 25966  013188  6EF6               	movwf	tblptrl,c
 25967  01318A  0EEC               	movlw	high __powers_
 25968  01318C  2010               	addwfc	?i2___wmul+1,w,c
 25969  01318E  6EF7               	movwf	tblptrh,c
 25970  013190                     	if	1	;There are 3 active tblptr bytes
 25971  013190  6AF8               	clrf	tblptru,c
 25972  013192  0E00               	movlw	low (__mediumconst shr (0+16))
 25973  013194  22F8               	addwfc	tblptru,f,c
 25974  013196                     	endif
 25975  013196  0009               	tblrd		*+
 25976  013198  CFF5 F027          	movff	tablat,i2___ftmul@f1
 25977  01319C  0009               	tblrd		*+
 25978  01319E  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 25979  0131A2  000A               	tblrd		*-
 25980  0131A4  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 25981  0131A8  0E00               	movlw	0
 25982  0131AA  6E12               	movwf	i2___wmul@multiplicand+1,c
 25983  0131AC  0E03               	movlw	3
 25984  0131AE  6E11               	movwf	i2___wmul@multiplicand,c
 25985  0131B0  0E00               	movlw	0
 25986  0131B2  6E04               	movwf	i2___awmod@divisor+1,c
 25987  0131B4  0E0A               	movlw	10
 25988  0131B6  6E03               	movwf	i2___awmod@divisor,c
 25989  0131B8  503C               	movf	i2scale@scl,w,c
 25990  0131BA  6E01               	movwf	i2___awmod@dividend,c
 25991  0131BC  6A02               	clrf	i2___awmod@dividend+1,c
 25992  0131BE  BE01               	btfsc	i2___awmod@dividend,7,c
 25993  0131C0  0602               	decf	i2___awmod@dividend+1,f,c
 25994  0131C2  EC6D  F0B0         	call	i2___awmod	;wreg free
 25995  0131C6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 25996  0131CA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 25997  0131CE  EC27  F0B6         	call	i2___wmul	;wreg free
 25998  0131D2  0E0B               	movlw	low __powers_
 25999  0131D4  240F               	addwf	?i2___wmul,w,c
 26000  0131D6  6EF6               	movwf	tblptrl,c
 26001  0131D8  0EEC               	movlw	high __powers_
 26002  0131DA  2010               	addwfc	?i2___wmul+1,w,c
 26003  0131DC  6EF7               	movwf	tblptrh,c
 26004  0131DE                     	if	1	;There are 3 active tblptr bytes
 26005  0131DE  6AF8               	clrf	tblptru,c
 26006  0131E0  0E00               	movlw	low (__mediumconst shr (0+16))
 26007  0131E2  22F8               	addwfc	tblptru,f,c
 26008  0131E4                     	endif
 26009  0131E4  0009               	tblrd		*+
 26010  0131E6  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26011  0131EA  0009               	tblrd		*+
 26012  0131EC  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26013  0131F0  000A               	tblrd		*-
 26014  0131F2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26015  0131F6  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26016  0131FA  C027  F036         	movff	?i2___ftmul,?i2_scale
 26017  0131FE  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26018  013202  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26019  013206  0012               	return	
 26020  013208                     i2l1347:
 26021                           
 26022                           ;doprnt.c: 440: return _powers_[scl];
 26023  013208  503C               	movf	i2scale@scl,w,c
 26024  01320A  0D03               	mullw	3
 26025  01320C  0E0B               	movlw	low __powers_
 26026  01320E  24F3               	addwf	prodl,w,c
 26027  013210  6EF6               	movwf	tblptrl,c
 26028  013212  0EEC               	movlw	high __powers_
 26029  013214  20F4               	addwfc	prodh,w,c
 26030  013216  6EF7               	movwf	tblptrh,c
 26031  013218                     	if	1	;There are 3 active tblptr bytes
 26032  013218  6AF8               	clrf	tblptru,c
 26033  01321A  0E00               	movlw	low (__mediumconst shr (0+16))
 26034  01321C  22F8               	addwfc	tblptru,f,c
 26035  01321E                     	endif
 26036  01321E  0009               	tblrd		*+
 26037  013220  CFF5 F036          	movff	tablat,?i2_scale
 26038  013224  0009               	tblrd		*+
 26039  013226  CFF5 F037          	movff	tablat,?i2_scale+1
 26040  01322A  000A               	tblrd		*-
 26041  01322C  CFF5 F038          	movff	tablat,?i2_scale+2
 26042  013230  0012               	return	
 26043  013232                     __end_ofi2_scale:
 26044                           	opt stack 0
 26045                           tosu	equ	0xFFF
 26046                           tosh	equ	0xFFE
 26047                           tosl	equ	0xFFD
 26048                           pclatu	equ	0xFFB
 26049                           pclath	equ	0xFFA
 26050                           tblptru	equ	0xFF8
 26051                           tblptrh	equ	0xFF7
 26052                           tblptrl	equ	0xFF6
 26053                           tablat	equ	0xFF5
 26054                           prodh	equ	0xFF4
 26055                           prodl	equ	0xFF3
 26056                           intcon	equ	0xFF2
 26057                           indf0	equ	0xFEF
 26058                           postinc0	equ	0xFEE
 26059                           fsr0h	equ	0xFEA
 26060                           fsr0l	equ	0xFE9
 26061                           wreg	equ	0xFE8
 26062                           indf1	equ	0xFE7
 26063                           postdec1	equ	0xFE5
 26064                           plusw1	equ	0xFE3
 26065                           fsr1h	equ	0xFE2
 26066                           fsr1l	equ	0xFE1
 26067                           bsr	equ	0xFE0
 26068                           indf2	equ	0xFDF
 26069                           postinc2	equ	0xFDE
 26070                           postdec2	equ	0xFDD
 26071                           plusw2	equ	0xFDB
 26072                           fsr2h	equ	0xFDA
 26073                           fsr2l	equ	0xFD9
 26074                           status	equ	0xFD8
 26075                           
 26076 ;; *************** function i2_putch *****************
 26077 ;; Defined at:
 26078 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 26079 ;; Parameters:    Size  Location     Type
 26080 ;;  txData          1    wreg     unsigned char 
 26081 ;; Auto vars:     Size  Location     Type
 26082 ;;  txData          1    1[COMRAM] unsigned char 
 26083 ;; Return value:  Size  Location     Type
 26084 ;;                  1    wreg      void 
 26085 ;; Registers used:
 26086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26087 ;; Tracked objects:
 26088 ;;		On entry : 0/0
 26089 ;;		On exit  : 0/0
 26090 ;;		Unchanged: 0/0
 26091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26096 ;;Total ram usage:        1 bytes
 26097 ;; Hardware stack levels used:    1
 26098 ;; Hardware stack levels required when called:    1
 26099 ;; This function calls:
 26100 ;;		i2_EUSART2_Write
 26101 ;; This function is called by:
 26102 ;;		i2_printf
 26103 ;; This function uses a non-reentrant model
 26104 ;;
 26105                           
 26106                           	psect	text89
 26107  016EA6                     __ptext89:
 26108                           	opt stack 0
 26109  016EA6                     i2_putch:
 26110                           	opt stack 14
 26111                           
 26112                           ;incstack = 0
 26113                           ;i2putch@txData stored from wreg
 26114  016EA6  6E02               	movwf	i2putch@txData,c
 26115                           
 26116                           ;eusart2.c: 195: EUSART2_Write(txData);
 26117  016EA8  5002               	movf	i2putch@txData,w,c
 26118  016EAA  ECA4  F0B3         	call	i2_EUSART2_Write
 26119  016EAE  0012               	return		;funcret
 26120  016EB0                     __end_ofi2_putch:
 26121                           	opt stack 0
 26122                           tosu	equ	0xFFF
 26123                           tosh	equ	0xFFE
 26124                           tosl	equ	0xFFD
 26125                           pclatu	equ	0xFFB
 26126                           pclath	equ	0xFFA
 26127                           tblptru	equ	0xFF8
 26128                           tblptrh	equ	0xFF7
 26129                           tblptrl	equ	0xFF6
 26130                           tablat	equ	0xFF5
 26131                           prodh	equ	0xFF4
 26132                           prodl	equ	0xFF3
 26133                           intcon	equ	0xFF2
 26134                           indf0	equ	0xFEF
 26135                           postinc0	equ	0xFEE
 26136                           fsr0h	equ	0xFEA
 26137                           fsr0l	equ	0xFE9
 26138                           wreg	equ	0xFE8
 26139                           indf1	equ	0xFE7
 26140                           postdec1	equ	0xFE5
 26141                           plusw1	equ	0xFE3
 26142                           fsr1h	equ	0xFE2
 26143                           fsr1l	equ	0xFE1
 26144                           bsr	equ	0xFE0
 26145                           indf2	equ	0xFDF
 26146                           postinc2	equ	0xFDE
 26147                           postdec2	equ	0xFDD
 26148                           plusw2	equ	0xFDB
 26149                           fsr2h	equ	0xFDA
 26150                           fsr2l	equ	0xFD9
 26151                           status	equ	0xFD8
 26152                           
 26153 ;; *************** function i2_EUSART2_Write *****************
 26154 ;; Defined at:
 26155 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 26156 ;; Parameters:    Size  Location     Type
 26157 ;;  txData          1    wreg     unsigned char 
 26158 ;; Auto vars:     Size  Location     Type
 26159 ;;  txData          1    0[COMRAM] unsigned char 
 26160 ;; Return value:  Size  Location     Type
 26161 ;;                  1    wreg      void 
 26162 ;; Registers used:
 26163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26164 ;; Tracked objects:
 26165 ;;		On entry : 0/0
 26166 ;;		On exit  : 0/0
 26167 ;;		Unchanged: 0/0
 26168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26173 ;;Total ram usage:        1 bytes
 26174 ;; Hardware stack levels used:    1
 26175 ;; This function calls:
 26176 ;;		Nothing
 26177 ;; This function is called by:
 26178 ;;		i2_putch
 26179 ;; This function uses a non-reentrant model
 26180 ;;
 26181                           
 26182                           	psect	text90
 26183  016748                     __ptext90:
 26184                           	opt stack 0
 26185  016748                     i2_EUSART2_Write:
 26186                           	opt stack 14
 26187                           
 26188                           ;incstack = 0
 26189                           ;i2EUSART2_Write@txData stored from wreg
 26190  016748  6E01               	movwf	i2EUSART2_Write@txData,c
 26191                           
 26192                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 26193  01674A  D002               	goto	i2l388
 26194  01674C                     i2l389:
 26195                           
 26196                           ; BSR set to: 1
 26197  01674C  0004               	clrwdt		;# 
 26198                           
 26199                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 26200  01674E  827E               	bsf	3966,1,c	;volatile
 26201  016750                     i2l388:
 26202  016750  0101               	movlb	1	; () banked
 26203  016752  51D2               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 26204  016754  B4D8               	btfsc	status,2,c
 26205  016756  D7FA               	goto	i2l389
 26206                           
 26207                           ; BSR set to: 1
 26208                           ;eusart2.c: 167: }
 26209                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 26210  016758  927E               	bcf	3966,1,c	;volatile
 26211                           
 26212                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 26213  01675A  010E               	movlb	14	; () banked
 26214  01675C  BD2C               	btfsc	44,6,b	;volatile
 26215  01675E  D003               	goto	i2l391
 26216                           
 26217                           ; BSR set to: 14
 26218                           ;eusart2.c: 172: {
 26219                           ;eusart2.c: 173: TX2REG = txData;
 26220  016760  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 26221                           
 26222                           ;eusart2.c: 174: }
 26223  016764  D013               	goto	i2l392
 26224  016766                     i2l391:
 26225                           
 26226                           ; BSR set to: 14
 26227                           ;eusart2.c: 175: else
 26228                           ;eusart2.c: 176: {
 26229                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 26230  016766  9D2C               	bcf	44,6,b	;volatile
 26231                           
 26232                           ; BSR set to: 14
 26233                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 26234  016768  0101               	movlb	1	; () banked
 26235  01676A  51D4               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 26236  01676C  0D01               	mullw	1
 26237  01676E  0E00               	movlw	low _eusart2TxBuffer
 26238  016770  24F3               	addwf	prodl,w,c
 26239  016772  6ED9               	movwf	fsr2l,c
 26240  016774  0E03               	movlw	high _eusart2TxBuffer
 26241  016776  20F4               	addwfc	prodh,w,c
 26242  016778  6EDA               	movwf	fsr2h,c
 26243  01677A  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 26244                           
 26245                           ; BSR set to: 1
 26246  01677E  2BD4               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 26247                           
 26248                           ; BSR set to: 1
 26249                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 26250  016780  0E7F               	movlw	127
 26251  016782  65D4               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 26252  016784  D002               	goto	i2l393
 26253                           
 26254                           ; BSR set to: 1
 26255                           ;eusart2.c: 180: {
 26256                           ;eusart2.c: 181: eusart2TxHead = 0;
 26257  016786  0E00               	movlw	0
 26258  016788  6FD4               	movwf	_eusart2TxHead& (0+255),b	;volatile
 26259  01678A                     i2l393:
 26260                           
 26261                           ; BSR set to: 1
 26262                           ;eusart2.c: 182: }
 26263                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 26264                           
 26265                           ; BSR set to: 1
 26266  01678A  07D2               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 26267  01678C                     i2l392:
 26268                           
 26269                           ;eusart2.c: 184: }
 26270                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 26271                           
 26272                           ; BSR set to: 1
 26273  01678C  010E               	movlb	14	; () banked
 26274  01678E  8D2C               	bsf	44,6,b	;volatile
 26275                           
 26276                           ; BSR set to: 14
 26277  016790  0012               	return		;funcret
 26278  016792                     __end_ofi2_EUSART2_Write:
 26279                           	opt stack 0
 26280                           tosu	equ	0xFFF
 26281                           tosh	equ	0xFFE
 26282                           tosl	equ	0xFFD
 26283                           pclatu	equ	0xFFB
 26284                           pclath	equ	0xFFA
 26285                           tblptru	equ	0xFF8
 26286                           tblptrh	equ	0xFF7
 26287                           tblptrl	equ	0xFF6
 26288                           tablat	equ	0xFF5
 26289                           prodh	equ	0xFF4
 26290                           prodl	equ	0xFF3
 26291                           intcon	equ	0xFF2
 26292                           indf0	equ	0xFEF
 26293                           postinc0	equ	0xFEE
 26294                           fsr0h	equ	0xFEA
 26295                           fsr0l	equ	0xFE9
 26296                           wreg	equ	0xFE8
 26297                           indf1	equ	0xFE7
 26298                           postdec1	equ	0xFE5
 26299                           plusw1	equ	0xFE3
 26300                           fsr1h	equ	0xFE2
 26301                           fsr1l	equ	0xFE1
 26302                           bsr	equ	0xFE0
 26303                           indf2	equ	0xFDF
 26304                           postinc2	equ	0xFDE
 26305                           postdec2	equ	0xFDD
 26306                           plusw2	equ	0xFDB
 26307                           fsr2h	equ	0xFDA
 26308                           fsr2l	equ	0xFD9
 26309                           status	equ	0xFD8
 26310                           
 26311 ;; *************** function i2_isdigit *****************
 26312 ;; Defined at:
 26313 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 26314 ;; Parameters:    Size  Location     Type
 26315 ;;  c               1    wreg     unsigned char 
 26316 ;; Auto vars:     Size  Location     Type
 26317 ;;  c               1    2[COMRAM] unsigned char 
 26318 ;; Return value:  Size  Location     Type
 26319 ;;		None               void
 26320 ;; Registers used:
 26321 ;;		wreg, status,2, status,0
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/0
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26331 ;;Total ram usage:        3 bytes
 26332 ;; Hardware stack levels used:    1
 26333 ;; This function calls:
 26334 ;;		Nothing
 26335 ;; This function is called by:
 26336 ;;		i2_printf
 26337 ;; This function uses a non-reentrant model
 26338 ;;
 26339                           
 26340                           	psect	text91
 26341  016CFE                     __ptext91:
 26342                           	opt stack 0
 26343  016CFE                     i2_isdigit:
 26344                           	opt stack 15
 26345                           
 26346                           ; BSR set to: 14
 26347                           ;incstack = 0
 26348                           ;i2isdigit@c stored from wreg
 26349  016CFE  6E03               	movwf	i2isdigit@c,c
 26350  016D00  0E00               	movlw	0
 26351  016D02  6E02               	movwf	i2_isdigit$3141,c
 26352  016D04  0E3A               	movlw	58
 26353  016D06  6003               	cpfslt	i2isdigit@c,c
 26354  016D08  D005               	goto	i2l1874
 26355  016D0A  0E2F               	movlw	47
 26356  016D0C  6403               	cpfsgt	i2isdigit@c,c
 26357  016D0E  D002               	goto	i2l1874
 26358  016D10  0E01               	movlw	1
 26359  016D12  6E02               	movwf	i2_isdigit$3141,c
 26360  016D14                     i2l1874:
 26361  016D14  C002  F001         	movff	i2_isdigit$3141,??i2_isdigit
 26362  016D18  3001               	rrcf	??i2_isdigit,w,c
 26363  016D1A  0012               	return	
 26364  016D1C                     __end_ofi2_isdigit:
 26365                           	opt stack 0
 26366                           tosu	equ	0xFFF
 26367                           tosh	equ	0xFFE
 26368                           tosl	equ	0xFFD
 26369                           pclatu	equ	0xFFB
 26370                           pclath	equ	0xFFA
 26371                           tblptru	equ	0xFF8
 26372                           tblptrh	equ	0xFF7
 26373                           tblptrl	equ	0xFF6
 26374                           tablat	equ	0xFF5
 26375                           prodh	equ	0xFF4
 26376                           prodl	equ	0xFF3
 26377                           intcon	equ	0xFF2
 26378                           indf0	equ	0xFEF
 26379                           postinc0	equ	0xFEE
 26380                           fsr0h	equ	0xFEA
 26381                           fsr0l	equ	0xFE9
 26382                           wreg	equ	0xFE8
 26383                           indf1	equ	0xFE7
 26384                           postdec1	equ	0xFE5
 26385                           plusw1	equ	0xFE3
 26386                           fsr1h	equ	0xFE2
 26387                           fsr1l	equ	0xFE1
 26388                           bsr	equ	0xFE0
 26389                           indf2	equ	0xFDF
 26390                           postinc2	equ	0xFDE
 26391                           postdec2	equ	0xFDD
 26392                           plusw2	equ	0xFDB
 26393                           fsr2h	equ	0xFDA
 26394                           fsr2l	equ	0xFD9
 26395                           status	equ	0xFD8
 26396                           
 26397 ;; *************** function i2_fround *****************
 26398 ;; Defined at:
 26399 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26400 ;; Parameters:    Size  Location     Type
 26401 ;;  prec            1    wreg     unsigned char 
 26402 ;; Auto vars:     Size  Location     Type
 26403 ;;  prec            1   62[COMRAM] unsigned char 
 26404 ;; Return value:  Size  Location     Type
 26405 ;;                  3   53[COMRAM] unsigned char 
 26406 ;; Registers used:
 26407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26408 ;; Tracked objects:
 26409 ;;		On entry : 0/0
 26410 ;;		On exit  : 0/0
 26411 ;;		Unchanged: 0/0
 26412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26413 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26414 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26416 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26417 ;;Total ram usage:       10 bytes
 26418 ;; Hardware stack levels used:    1
 26419 ;; Hardware stack levels required when called:    2
 26420 ;; This function calls:
 26421 ;;		i2___awdiv
 26422 ;;		i2___awmod
 26423 ;;		i2___ftmul
 26424 ;;		i2___wmul
 26425 ;; This function is called by:
 26426 ;;		i2_printf
 26427 ;; This function uses a non-reentrant model
 26428 ;;
 26429                           
 26430                           	psect	text92
 26431  01382E                     __ptext92:
 26432                           	opt stack 0
 26433  01382E                     i2_fround:
 26434                           	opt stack 13
 26435                           
 26436                           ;incstack = 0
 26437                           ;i2fround@prec stored from wreg
 26438  01382E  6E3F               	movwf	i2fround@prec,c
 26439                           
 26440                           ;doprnt.c: 413: if(prec>=110)
 26441  013830  0E6D               	movlw	109
 26442  013832  643F               	cpfsgt	i2fround@prec,c
 26443  013834  D0A8               	goto	i2l1334
 26444                           
 26445                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 26446  013836  0E00               	movlw	0
 26447  013838  6E12               	movwf	i2___wmul@multiplicand+1,c
 26448  01383A  0E03               	movlw	3
 26449  01383C  6E11               	movwf	i2___wmul@multiplicand,c
 26450  01383E  0E00               	movlw	0
 26451  013840  6E0A               	movwf	i2___awdiv@divisor+1,c
 26452  013842  0E0A               	movlw	10
 26453  013844  6E09               	movwf	i2___awdiv@divisor,c
 26454  013846  0E00               	movlw	0
 26455  013848  6E04               	movwf	i2___awmod@divisor+1,c
 26456  01384A  0E64               	movlw	100
 26457  01384C  6E03               	movwf	i2___awmod@divisor,c
 26458  01384E  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 26459  013852  6A02               	clrf	i2___awmod@dividend+1,c
 26460  013854  EC6D  F0B0         	call	i2___awmod	;wreg free
 26461  013858  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26462  01385C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26463  013860  ECB9  F0AE         	call	i2___awdiv	;wreg free
 26464  013864  0E09               	movlw	9
 26465  013866  2407               	addwf	?i2___awdiv,w,c
 26466  013868  6E0F               	movwf	i2___wmul@multiplier,c
 26467  01386A  0E00               	movlw	0
 26468  01386C  2008               	addwfc	?i2___awdiv+1,w,c
 26469  01386E  6E10               	movwf	i2___wmul@multiplier+1,c
 26470  013870  EC27  F0B6         	call	i2___wmul	;wreg free
 26471  013874  0E32               	movlw	low __npowers_
 26472  013876  240F               	addwf	?i2___wmul,w,c
 26473  013878  6EF6               	movwf	tblptrl,c
 26474  01387A  0EEC               	movlw	high __npowers_
 26475  01387C  2010               	addwfc	?i2___wmul+1,w,c
 26476  01387E  6EF7               	movwf	tblptrh,c
 26477  013880                     	if	1	;There are 3 active tblptr bytes
 26478  013880  6AF8               	clrf	tblptru,c
 26479  013882  0E00               	movlw	low (__mediumconst shr (0+16))
 26480  013884  22F8               	addwfc	tblptru,f,c
 26481  013886                     	endif
 26482  013886  0009               	tblrd		*+
 26483  013888  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26484  01388C  0009               	tblrd		*+
 26485  01388E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26486  013892  000A               	tblrd		*-
 26487  013894  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26488  013898  0E00               	movlw	0
 26489  01389A  6E0A               	movwf	i2___awdiv@divisor+1,c
 26490  01389C  0E64               	movlw	100
 26491  01389E  6E09               	movwf	i2___awdiv@divisor,c
 26492  0138A0  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 26493  0138A4  6A08               	clrf	i2___awdiv@dividend+1,c
 26494  0138A6  ECB9  F0AE         	call	i2___awdiv	;wreg free
 26495  0138AA  0E12               	movlw	18
 26496  0138AC  2407               	addwf	?i2___awdiv,w,c
 26497  0138AE  6E0F               	movwf	i2___wmul@multiplier,c
 26498  0138B0  0E00               	movlw	0
 26499  0138B2  2008               	addwfc	?i2___awdiv+1,w,c
 26500  0138B4  6E10               	movwf	i2___wmul@multiplier+1,c
 26501  0138B6  0E00               	movlw	0
 26502  0138B8  6E12               	movwf	i2___wmul@multiplicand+1,c
 26503  0138BA  0E03               	movlw	3
 26504  0138BC  6E11               	movwf	i2___wmul@multiplicand,c
 26505  0138BE  EC27  F0B6         	call	i2___wmul	;wreg free
 26506  0138C2  0E32               	movlw	low __npowers_
 26507  0138C4  240F               	addwf	?i2___wmul,w,c
 26508  0138C6  6EF6               	movwf	tblptrl,c
 26509  0138C8  0EEC               	movlw	high __npowers_
 26510  0138CA  2010               	addwfc	?i2___wmul+1,w,c
 26511  0138CC  6EF7               	movwf	tblptrh,c
 26512  0138CE                     	if	1	;There are 3 active tblptr bytes
 26513  0138CE  6AF8               	clrf	tblptru,c
 26514  0138D0  0E00               	movlw	low (__mediumconst shr (0+16))
 26515  0138D2  22F8               	addwfc	tblptru,f,c
 26516  0138D4                     	endif
 26517  0138D4  0009               	tblrd		*+
 26518  0138D6  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26519  0138DA  0009               	tblrd		*+
 26520  0138DC  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26521  0138E0  000A               	tblrd		*-
 26522  0138E2  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26523  0138E6  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26524  0138EA  C027  F03C         	movff	?i2___ftmul,i2_fround$4016
 26525  0138EE  C028  F03D         	movff	?i2___ftmul+1,i2_fround$4016+1
 26526  0138F2  C029  F03E         	movff	?i2___ftmul+2,i2_fround$4016+2
 26527                           
 26528                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 26529  0138F6  0E00               	movlw	0
 26530  0138F8  6E12               	movwf	i2___wmul@multiplicand+1,c
 26531  0138FA  0E03               	movlw	3
 26532  0138FC  6E11               	movwf	i2___wmul@multiplicand,c
 26533  0138FE  0E00               	movlw	0
 26534  013900  6E04               	movwf	i2___awmod@divisor+1,c
 26535  013902  0E0A               	movlw	10
 26536  013904  6E03               	movwf	i2___awmod@divisor,c
 26537  013906  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 26538  01390A  6A02               	clrf	i2___awmod@dividend+1,c
 26539  01390C  EC6D  F0B0         	call	i2___awmod	;wreg free
 26540  013910  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26541  013914  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26542  013918  EC27  F0B6         	call	i2___wmul	;wreg free
 26543  01391C  0E32               	movlw	low __npowers_
 26544  01391E  240F               	addwf	?i2___wmul,w,c
 26545  013920  6EF6               	movwf	tblptrl,c
 26546  013922  0EEC               	movlw	high __npowers_
 26547  013924  2010               	addwfc	?i2___wmul+1,w,c
 26548  013926  6EF7               	movwf	tblptrh,c
 26549  013928                     	if	1	;There are 3 active tblptr bytes
 26550  013928  6AF8               	clrf	tblptru,c
 26551  01392A  0E00               	movlw	low (__mediumconst shr (0+16))
 26552  01392C  22F8               	addwfc	tblptru,f,c
 26553  01392E                     	endif
 26554  01392E  0009               	tblrd		*+
 26555  013930  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26556  013934  0009               	tblrd		*+
 26557  013936  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26558  01393A  000A               	tblrd		*-
 26559  01393C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26560  013940  C03C  F027         	movff	i2_fround$4016,i2___ftmul@f1
 26561  013944  C03D  F028         	movff	i2_fround$4016+1,i2___ftmul@f1+1
 26562  013948  C03E  F029         	movff	i2_fround$4016+2,i2___ftmul@f1+2
 26563  01394C  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26564  013950  C027  F039         	movff	?i2___ftmul,i2_fround$4017
 26565  013954  C028  F03A         	movff	?i2___ftmul+1,i2_fround$4017+1
 26566  013958  C029  F03B         	movff	?i2___ftmul+2,i2_fround$4017+2
 26567                           
 26568                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 26569  01395C  C039  F027         	movff	i2_fround$4017,i2___ftmul@f1
 26570  013960  C03A  F028         	movff	i2_fround$4017+1,i2___ftmul@f1+1
 26571  013964  C03B  F029         	movff	i2_fround$4017+2,i2___ftmul@f1+2
 26572  013968  0E00               	movlw	0
 26573  01396A  6E2A               	movwf	i2___ftmul@f2,c
 26574  01396C  0E00               	movlw	0
 26575  01396E  6E2B               	movwf	i2___ftmul@f2+1,c
 26576  013970  0E3F               	movlw	63
 26577  013972  6E2C               	movwf	i2___ftmul@f2+2,c
 26578  013974  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26579  013978  C027  F036         	movff	?i2___ftmul,?i2_fround
 26580  01397C  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 26581  013980  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 26582  013984  0012               	return	
 26583  013986                     i2l1334:
 26584                           
 26585                           ;doprnt.c: 415: else if(prec > 10)
 26586  013986  0E0A               	movlw	10
 26587  013988  643F               	cpfsgt	i2fround@prec,c
 26588  01398A  D069               	goto	i2l1337
 26589                           
 26590                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 26591  01398C  0E00               	movlw	0
 26592  01398E  6E12               	movwf	i2___wmul@multiplicand+1,c
 26593  013990  0E03               	movlw	3
 26594  013992  6E11               	movwf	i2___wmul@multiplicand,c
 26595  013994  0E00               	movlw	0
 26596  013996  6E04               	movwf	i2___awmod@divisor+1,c
 26597  013998  0E0A               	movlw	10
 26598  01399A  6E03               	movwf	i2___awmod@divisor,c
 26599  01399C  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 26600  0139A0  6A02               	clrf	i2___awmod@dividend+1,c
 26601  0139A2  EC6D  F0B0         	call	i2___awmod	;wreg free
 26602  0139A6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26603  0139AA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26604  0139AE  EC27  F0B6         	call	i2___wmul	;wreg free
 26605  0139B2  0E32               	movlw	low __npowers_
 26606  0139B4  240F               	addwf	?i2___wmul,w,c
 26607  0139B6  6EF6               	movwf	tblptrl,c
 26608  0139B8  0EEC               	movlw	high __npowers_
 26609  0139BA  2010               	addwfc	?i2___wmul+1,w,c
 26610  0139BC  6EF7               	movwf	tblptrh,c
 26611  0139BE                     	if	1	;There are 3 active tblptr bytes
 26612  0139BE  6AF8               	clrf	tblptru,c
 26613  0139C0  0E00               	movlw	low (__mediumconst shr (0+16))
 26614  0139C2  22F8               	addwfc	tblptru,f,c
 26615  0139C4                     	endif
 26616  0139C4  0009               	tblrd		*+
 26617  0139C6  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26618  0139CA  0009               	tblrd		*+
 26619  0139CC  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26620  0139D0  000A               	tblrd		*-
 26621  0139D2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26622  0139D6  0E00               	movlw	0
 26623  0139D8  6E0A               	movwf	i2___awdiv@divisor+1,c
 26624  0139DA  0E0A               	movlw	10
 26625  0139DC  6E09               	movwf	i2___awdiv@divisor,c
 26626  0139DE  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 26627  0139E2  6A08               	clrf	i2___awdiv@dividend+1,c
 26628  0139E4  ECB9  F0AE         	call	i2___awdiv	;wreg free
 26629  0139E8  0E09               	movlw	9
 26630  0139EA  2407               	addwf	?i2___awdiv,w,c
 26631  0139EC  6E0F               	movwf	i2___wmul@multiplier,c
 26632  0139EE  0E00               	movlw	0
 26633  0139F0  2008               	addwfc	?i2___awdiv+1,w,c
 26634  0139F2  6E10               	movwf	i2___wmul@multiplier+1,c
 26635  0139F4  0E00               	movlw	0
 26636  0139F6  6E12               	movwf	i2___wmul@multiplicand+1,c
 26637  0139F8  0E03               	movlw	3
 26638  0139FA  6E11               	movwf	i2___wmul@multiplicand,c
 26639  0139FC  EC27  F0B6         	call	i2___wmul	;wreg free
 26640  013A00  0E32               	movlw	low __npowers_
 26641  013A02  240F               	addwf	?i2___wmul,w,c
 26642  013A04  6EF6               	movwf	tblptrl,c
 26643  013A06  0EEC               	movlw	high __npowers_
 26644  013A08  2010               	addwfc	?i2___wmul+1,w,c
 26645  013A0A  6EF7               	movwf	tblptrh,c
 26646  013A0C                     	if	1	;There are 3 active tblptr bytes
 26647  013A0C  6AF8               	clrf	tblptru,c
 26648  013A0E  0E00               	movlw	low (__mediumconst shr (0+16))
 26649  013A10  22F8               	addwfc	tblptru,f,c
 26650  013A12                     	endif
 26651  013A12  0009               	tblrd		*+
 26652  013A14  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26653  013A18  0009               	tblrd		*+
 26654  013A1A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26655  013A1E  000A               	tblrd		*-
 26656  013A20  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26657  013A24  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26658  013A28  C027  F03C         	movff	?i2___ftmul,i2_fround$4016
 26659  013A2C  C028  F03D         	movff	?i2___ftmul+1,i2_fround$4016+1
 26660  013A30  C029  F03E         	movff	?i2___ftmul+2,i2_fround$4016+2
 26661                           
 26662                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 26663  013A34  C03C  F027         	movff	i2_fround$4016,i2___ftmul@f1
 26664  013A38  C03D  F028         	movff	i2_fround$4016+1,i2___ftmul@f1+1
 26665  013A3C  C03E  F029         	movff	i2_fround$4016+2,i2___ftmul@f1+2
 26666  013A40  0E00               	movlw	0
 26667  013A42  6E2A               	movwf	i2___ftmul@f2,c
 26668  013A44  0E00               	movlw	0
 26669  013A46  6E2B               	movwf	i2___ftmul@f2+1,c
 26670  013A48  0E3F               	movlw	63
 26671  013A4A  6E2C               	movwf	i2___ftmul@f2+2,c
 26672  013A4C  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26673  013A50  C027  F036         	movff	?i2___ftmul,?i2_fround
 26674  013A54  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 26675  013A58  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 26676  013A5C  0012               	return	
 26677  013A5E                     i2l1337:
 26678                           
 26679                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 26680  013A5E  503F               	movf	i2fround@prec,w,c
 26681  013A60  0D03               	mullw	3
 26682  013A62  0E32               	movlw	low __npowers_
 26683  013A64  24F3               	addwf	prodl,w,c
 26684  013A66  6EF6               	movwf	tblptrl,c
 26685  013A68  0EEC               	movlw	high __npowers_
 26686  013A6A  20F4               	addwfc	prodh,w,c
 26687  013A6C  6EF7               	movwf	tblptrh,c
 26688  013A6E                     	if	1	;There are 3 active tblptr bytes
 26689  013A6E  6AF8               	clrf	tblptru,c
 26690  013A70  0E00               	movlw	low (__mediumconst shr (0+16))
 26691  013A72  22F8               	addwfc	tblptru,f,c
 26692  013A74                     	endif
 26693  013A74  0009               	tblrd		*+
 26694  013A76  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26695  013A7A  0009               	tblrd		*+
 26696  013A7C  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26697  013A80  000A               	tblrd		*-
 26698  013A82  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26699  013A86  0E00               	movlw	0
 26700  013A88  6E2A               	movwf	i2___ftmul@f2,c
 26701  013A8A  0E00               	movlw	0
 26702  013A8C  6E2B               	movwf	i2___ftmul@f2+1,c
 26703  013A8E  0E3F               	movlw	63
 26704  013A90  6E2C               	movwf	i2___ftmul@f2+2,c
 26705  013A92  EC4E  F0A8         	call	i2___ftmul	;wreg free
 26706  013A96  C027  F036         	movff	?i2___ftmul,?i2_fround
 26707  013A9A  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 26708  013A9E  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 26709  013AA2  0012               	return	
 26710  013AA4                     __end_ofi2_fround:
 26711                           	opt stack 0
 26712                           tosu	equ	0xFFF
 26713                           tosh	equ	0xFFE
 26714                           tosl	equ	0xFFD
 26715                           pclatu	equ	0xFFB
 26716                           pclath	equ	0xFFA
 26717                           tblptru	equ	0xFF8
 26718                           tblptrh	equ	0xFF7
 26719                           tblptrl	equ	0xFF6
 26720                           tablat	equ	0xFF5
 26721                           prodh	equ	0xFF4
 26722                           prodl	equ	0xFF3
 26723                           intcon	equ	0xFF2
 26724                           indf0	equ	0xFEF
 26725                           postinc0	equ	0xFEE
 26726                           fsr0h	equ	0xFEA
 26727                           fsr0l	equ	0xFE9
 26728                           wreg	equ	0xFE8
 26729                           indf1	equ	0xFE7
 26730                           postdec1	equ	0xFE5
 26731                           plusw1	equ	0xFE3
 26732                           fsr1h	equ	0xFE2
 26733                           fsr1l	equ	0xFE1
 26734                           bsr	equ	0xFE0
 26735                           indf2	equ	0xFDF
 26736                           postinc2	equ	0xFDE
 26737                           postdec2	equ	0xFDD
 26738                           plusw2	equ	0xFDB
 26739                           fsr2h	equ	0xFDA
 26740                           fsr2l	equ	0xFD9
 26741                           status	equ	0xFD8
 26742                           
 26743 ;; *************** function i2___awmod *****************
 26744 ;; Defined at:
 26745 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 26746 ;; Parameters:    Size  Location     Type
 26747 ;;  dividend        2    0[COMRAM] int 
 26748 ;;  divisor         2    2[COMRAM] int 
 26749 ;; Auto vars:     Size  Location     Type
 26750 ;;  __awmod         1    5[COMRAM] unsigned char 
 26751 ;;  __awmod         1    4[COMRAM] unsigned char 
 26752 ;; Return value:  Size  Location     Type
 26753 ;;                  2    0[COMRAM] int 
 26754 ;; Registers used:
 26755 ;;		wreg, status,2, status,0
 26756 ;; Tracked objects:
 26757 ;;		On entry : 0/0
 26758 ;;		On exit  : 0/0
 26759 ;;		Unchanged: 0/0
 26760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26764 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26765 ;;Total ram usage:        6 bytes
 26766 ;; Hardware stack levels used:    1
 26767 ;; This function calls:
 26768 ;;		Nothing
 26769 ;; This function is called by:
 26770 ;;		i2_fround
 26771 ;;		i2_scale
 26772 ;; This function uses a non-reentrant model
 26773 ;;
 26774                           
 26775                           	psect	text93
 26776  0160DA                     __ptext93:
 26777                           	opt stack 0
 26778  0160DA                     i2___awmod:
 26779                           	opt stack 14
 26780                           
 26781                           ;incstack = 0
 26782  0160DA  0E00               	movlw	0
 26783  0160DC  6E06               	movwf	i2___awmod@sign,c
 26784  0160DE  AE02               	btfss	i2___awmod@dividend+1,7,c
 26785  0160E0  D006               	goto	i2l1679
 26786  0160E2  6C01               	negf	i2___awmod@dividend,c
 26787  0160E4  1E02               	comf	i2___awmod@dividend+1,f,c
 26788  0160E6  B0D8               	btfsc	status,0,c
 26789  0160E8  2A02               	incf	i2___awmod@dividend+1,f,c
 26790  0160EA  0E01               	movlw	1
 26791  0160EC  6E06               	movwf	i2___awmod@sign,c
 26792  0160EE                     i2l1679:
 26793  0160EE  AE04               	btfss	i2___awmod@divisor+1,7,c
 26794  0160F0  D004               	goto	i2l1680
 26795  0160F2  6C03               	negf	i2___awmod@divisor,c
 26796  0160F4  1E04               	comf	i2___awmod@divisor+1,f,c
 26797  0160F6  B0D8               	btfsc	status,0,c
 26798  0160F8  2A04               	incf	i2___awmod@divisor+1,f,c
 26799  0160FA                     i2l1680:
 26800  0160FA  5003               	movf	i2___awmod@divisor,w,c
 26801  0160FC  1004               	iorwf	i2___awmod@divisor+1,w,c
 26802  0160FE  B4D8               	btfsc	status,2,c
 26803  016100  D018               	goto	i2l1687
 26804  016102  0E01               	movlw	1
 26805  016104  6E05               	movwf	i2___awmod@counter,c
 26806  016106  D004               	goto	i2l1682
 26807  016108  90D8               	bcf	status,0,c
 26808  01610A  3603               	rlcf	i2___awmod@divisor,f,c
 26809  01610C  3604               	rlcf	i2___awmod@divisor+1,f,c
 26810  01610E  2A05               	incf	i2___awmod@counter,f,c
 26811  016110                     i2l1682:
 26812  016110  AE04               	btfss	i2___awmod@divisor+1,7,c
 26813  016112  D7FA               	goto	i2l1683
 26814  016114                     i2u1219_40:
 26815  016114  5003               	movf	i2___awmod@divisor,w,c
 26816  016116  5C01               	subwf	i2___awmod@dividend,w,c
 26817  016118  5004               	movf	i2___awmod@divisor+1,w,c
 26818  01611A  5802               	subwfb	i2___awmod@dividend+1,w,c
 26819  01611C  A0D8               	btfss	status,0,c
 26820  01611E  D004               	goto	i2l1686
 26821  016120  5003               	movf	i2___awmod@divisor,w,c
 26822  016122  5E01               	subwf	i2___awmod@dividend,f,c
 26823  016124  5004               	movf	i2___awmod@divisor+1,w,c
 26824  016126  5A02               	subwfb	i2___awmod@dividend+1,f,c
 26825  016128                     i2l1686:
 26826  016128  90D8               	bcf	status,0,c
 26827  01612A  3204               	rrcf	i2___awmod@divisor+1,f,c
 26828  01612C  3203               	rrcf	i2___awmod@divisor,f,c
 26829  01612E  2E05               	decfsz	i2___awmod@counter,f,c
 26830  016130  D7F1               	goto	i2u1219_40
 26831  016132                     i2l1687:
 26832  016132  5006               	movf	i2___awmod@sign,w,c
 26833  016134  B4D8               	btfsc	status,2,c
 26834  016136  D004               	goto	i2l1688
 26835  016138  6C01               	negf	i2___awmod@dividend,c
 26836  01613A  1E02               	comf	i2___awmod@dividend+1,f,c
 26837  01613C  B0D8               	btfsc	status,0,c
 26838  01613E  2A02               	incf	i2___awmod@dividend+1,f,c
 26839  016140                     i2l1688:
 26840  016140  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 26841  016144  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 26842  016148  0012               	return	
 26843  01614A                     __end_ofi2___awmod:
 26844                           	opt stack 0
 26845                           tosu	equ	0xFFF
 26846                           tosh	equ	0xFFE
 26847                           tosl	equ	0xFFD
 26848                           pclatu	equ	0xFFB
 26849                           pclath	equ	0xFFA
 26850                           tblptru	equ	0xFF8
 26851                           tblptrh	equ	0xFF7
 26852                           tblptrl	equ	0xFF6
 26853                           tablat	equ	0xFF5
 26854                           prodh	equ	0xFF4
 26855                           prodl	equ	0xFF3
 26856                           intcon	equ	0xFF2
 26857                           indf0	equ	0xFEF
 26858                           postinc0	equ	0xFEE
 26859                           fsr0h	equ	0xFEA
 26860                           fsr0l	equ	0xFE9
 26861                           wreg	equ	0xFE8
 26862                           indf1	equ	0xFE7
 26863                           postdec1	equ	0xFE5
 26864                           plusw1	equ	0xFE3
 26865                           fsr1h	equ	0xFE2
 26866                           fsr1l	equ	0xFE1
 26867                           bsr	equ	0xFE0
 26868                           indf2	equ	0xFDF
 26869                           postinc2	equ	0xFDE
 26870                           postdec2	equ	0xFDD
 26871                           plusw2	equ	0xFDB
 26872                           fsr2h	equ	0xFDA
 26873                           fsr2l	equ	0xFD9
 26874                           status	equ	0xFD8
 26875                           
 26876 ;; *************** function i2___awdiv *****************
 26877 ;; Defined at:
 26878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 26879 ;; Parameters:    Size  Location     Type
 26880 ;;  dividend        2    6[COMRAM] int 
 26881 ;;  divisor         2    8[COMRAM] int 
 26882 ;; Auto vars:     Size  Location     Type
 26883 ;;  __awdiv         2   12[COMRAM] int 
 26884 ;;  __awdiv         1   11[COMRAM] unsigned char 
 26885 ;;  __awdiv         1   10[COMRAM] unsigned char 
 26886 ;; Return value:  Size  Location     Type
 26887 ;;                  2    6[COMRAM] int 
 26888 ;; Registers used:
 26889 ;;		wreg, status,2, status,0
 26890 ;; Tracked objects:
 26891 ;;		On entry : 0/0
 26892 ;;		On exit  : 0/0
 26893 ;;		Unchanged: 0/0
 26894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26898 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26899 ;;Total ram usage:        8 bytes
 26900 ;; Hardware stack levels used:    1
 26901 ;; This function calls:
 26902 ;;		Nothing
 26903 ;; This function is called by:
 26904 ;;		i2_fround
 26905 ;;		i2_scale
 26906 ;;		i2_printf
 26907 ;; This function uses a non-reentrant model
 26908 ;;
 26909                           
 26910                           	psect	text94
 26911  015D72                     __ptext94:
 26912                           	opt stack 0
 26913  015D72                     i2___awdiv:
 26914                           	opt stack 14
 26915                           
 26916                           ;incstack = 0
 26917  015D72  0E00               	movlw	0
 26918  015D74  6E0C               	movwf	i2___awdiv@sign,c
 26919  015D76  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 26920  015D78  D006               	goto	i2l1666
 26921  015D7A  6C09               	negf	i2___awdiv@divisor,c
 26922  015D7C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 26923  015D7E  B0D8               	btfsc	status,0,c
 26924  015D80  2A0A               	incf	i2___awdiv@divisor+1,f,c
 26925  015D82  0E01               	movlw	1
 26926  015D84  6E0C               	movwf	i2___awdiv@sign,c
 26927  015D86                     i2l1666:
 26928  015D86  AE08               	btfss	i2___awdiv@dividend+1,7,c
 26929  015D88  D006               	goto	i2l1667
 26930  015D8A  6C07               	negf	i2___awdiv@dividend,c
 26931  015D8C  1E08               	comf	i2___awdiv@dividend+1,f,c
 26932  015D8E  B0D8               	btfsc	status,0,c
 26933  015D90  2A08               	incf	i2___awdiv@dividend+1,f,c
 26934  015D92  0E01               	movlw	1
 26935  015D94  1A0C               	xorwf	i2___awdiv@sign,f,c
 26936  015D96                     i2l1667:
 26937  015D96  0E00               	movlw	0
 26938  015D98  6E0E               	movwf	i2___awdiv@quotient+1,c
 26939  015D9A  0E00               	movlw	0
 26940  015D9C  6E0D               	movwf	i2___awdiv@quotient,c
 26941  015D9E  5009               	movf	i2___awdiv@divisor,w,c
 26942  015DA0  100A               	iorwf	i2___awdiv@divisor+1,w,c
 26943  015DA2  B4D8               	btfsc	status,2,c
 26944  015DA4  D01C               	goto	i2l1674
 26945  015DA6  0E01               	movlw	1
 26946  015DA8  6E0B               	movwf	i2___awdiv@counter,c
 26947  015DAA  D004               	goto	i2l1669
 26948  015DAC  90D8               	bcf	status,0,c
 26949  015DAE  3609               	rlcf	i2___awdiv@divisor,f,c
 26950  015DB0  360A               	rlcf	i2___awdiv@divisor+1,f,c
 26951  015DB2  2A0B               	incf	i2___awdiv@counter,f,c
 26952  015DB4                     i2l1669:
 26953  015DB4  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 26954  015DB6  D7FA               	goto	i2l1670
 26955  015DB8                     i2u1213_40:
 26956  015DB8  90D8               	bcf	status,0,c
 26957  015DBA  360D               	rlcf	i2___awdiv@quotient,f,c
 26958  015DBC  360E               	rlcf	i2___awdiv@quotient+1,f,c
 26959  015DBE  5009               	movf	i2___awdiv@divisor,w,c
 26960  015DC0  5C07               	subwf	i2___awdiv@dividend,w,c
 26961  015DC2  500A               	movf	i2___awdiv@divisor+1,w,c
 26962  015DC4  5808               	subwfb	i2___awdiv@dividend+1,w,c
 26963  015DC6  A0D8               	btfss	status,0,c
 26964  015DC8  D005               	goto	i2l1673
 26965  015DCA  5009               	movf	i2___awdiv@divisor,w,c
 26966  015DCC  5E07               	subwf	i2___awdiv@dividend,f,c
 26967  015DCE  500A               	movf	i2___awdiv@divisor+1,w,c
 26968  015DD0  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 26969  015DD2  800D               	bsf	i2___awdiv@quotient,0,c
 26970  015DD4                     i2l1673:
 26971  015DD4  90D8               	bcf	status,0,c
 26972  015DD6  320A               	rrcf	i2___awdiv@divisor+1,f,c
 26973  015DD8  3209               	rrcf	i2___awdiv@divisor,f,c
 26974  015DDA  2E0B               	decfsz	i2___awdiv@counter,f,c
 26975  015DDC  D7ED               	goto	i2u1213_40
 26976  015DDE                     i2l1674:
 26977  015DDE  500C               	movf	i2___awdiv@sign,w,c
 26978  015DE0  B4D8               	btfsc	status,2,c
 26979  015DE2  D004               	goto	i2l1675
 26980  015DE4  6C0D               	negf	i2___awdiv@quotient,c
 26981  015DE6  1E0E               	comf	i2___awdiv@quotient+1,f,c
 26982  015DE8  B0D8               	btfsc	status,0,c
 26983  015DEA  2A0E               	incf	i2___awdiv@quotient+1,f,c
 26984  015DEC                     i2l1675:
 26985  015DEC  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 26986  015DF0  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 26987  015DF4  0012               	return	
 26988  015DF6                     __end_ofi2___awdiv:
 26989                           	opt stack 0
 26990                           tosu	equ	0xFFF
 26991                           tosh	equ	0xFFE
 26992                           tosl	equ	0xFFD
 26993                           pclatu	equ	0xFFB
 26994                           pclath	equ	0xFFA
 26995                           tblptru	equ	0xFF8
 26996                           tblptrh	equ	0xFF7
 26997                           tblptrl	equ	0xFF6
 26998                           tablat	equ	0xFF5
 26999                           prodh	equ	0xFF4
 27000                           prodl	equ	0xFF3
 27001                           intcon	equ	0xFF2
 27002                           indf0	equ	0xFEF
 27003                           postinc0	equ	0xFEE
 27004                           fsr0h	equ	0xFEA
 27005                           fsr0l	equ	0xFE9
 27006                           wreg	equ	0xFE8
 27007                           indf1	equ	0xFE7
 27008                           postdec1	equ	0xFE5
 27009                           plusw1	equ	0xFE3
 27010                           fsr1h	equ	0xFE2
 27011                           fsr1l	equ	0xFE1
 27012                           bsr	equ	0xFE0
 27013                           indf2	equ	0xFDF
 27014                           postinc2	equ	0xFDE
 27015                           postdec2	equ	0xFDD
 27016                           plusw2	equ	0xFDB
 27017                           fsr2h	equ	0xFDA
 27018                           fsr2l	equ	0xFD9
 27019                           status	equ	0xFD8
 27020                           
 27021 ;; *************** function i2__tdiv_to_l_ *****************
 27022 ;; Defined at:
 27023 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 27024 ;; Parameters:    Size  Location     Type
 27025 ;;  f1              3    0[COMRAM] float 
 27026 ;;  f2              3    3[COMRAM] float 
 27027 ;; Auto vars:     Size  Location     Type
 27028 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 27029 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 27030 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 27031 ;; Return value:  Size  Location     Type
 27032 ;;                  4    0[COMRAM] unsigned long 
 27033 ;; Registers used:
 27034 ;;		wreg, status,2, status,0
 27035 ;; Tracked objects:
 27036 ;;		On entry : 0/0
 27037 ;;		On exit  : 0/0
 27038 ;;		Unchanged: 0/0
 27039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27040 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27041 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27042 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27043 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27044 ;;Total ram usage:       15 bytes
 27045 ;; Hardware stack levels used:    1
 27046 ;; This function calls:
 27047 ;;		Nothing
 27048 ;; This function is called by:
 27049 ;;		i2_printf
 27050 ;; This function uses a non-reentrant model
 27051 ;;
 27052                           
 27053                           	psect	text95
 27054  01491A                     __ptext95:
 27055                           	opt stack 0
 27056  01491A                     i2__tdiv_to_l_:
 27057                           	opt stack 15
 27058                           
 27059                           ;incstack = 0
 27060  01491A  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 27061  01491E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 27062  014920  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 27063  014922  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 27064  014924  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 27065  014926  E301               	bnc	u1257_41
 27066  014928  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 27067  01492A                     u1257_41:
 27068  01492A  5007               	movf	??i2__tdiv_to_l_,w,c
 27069  01492C  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 27070  01492E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27071  014930  A4D8               	btfss	status,2,c
 27072  014932  D009               	goto	i2l1814
 27073  014934  0E00               	movlw	0
 27074  014936  6E01               	movwf	?i2__tdiv_to_l_,c
 27075  014938  0E00               	movlw	0
 27076  01493A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27077  01493C  0E00               	movlw	0
 27078  01493E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27079  014940  0E00               	movlw	0
 27080  014942  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27081  014944  0012               	return	
 27082  014946                     i2l1814:
 27083  014946  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 27084  01494A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 27085  01494C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 27086  01494E  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 27087  014950  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 27088  014952  E301               	bnc	u1259_41
 27089  014954  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 27090  014956                     u1259_41:
 27091  014956  5007               	movf	??i2__tdiv_to_l_,w,c
 27092  014958  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 27093  01495A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 27094  01495C  A4D8               	btfss	status,2,c
 27095  01495E  D009               	goto	i2l1816
 27096  014960  0E00               	movlw	0
 27097  014962  6E01               	movwf	?i2__tdiv_to_l_,c
 27098  014964  0E00               	movlw	0
 27099  014966  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27100  014968  0E00               	movlw	0
 27101  01496A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27102  01496C  0E00               	movlw	0
 27103  01496E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27104  014970  0012               	return	
 27105  014972                     i2l1816:
 27106  014972  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 27107  014974  0EFF               	movlw	255
 27108  014976  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 27109  014978  0EFF               	movlw	255
 27110  01497A  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 27111  01497C  0E00               	movlw	0
 27112  01497E  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 27113  014980  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 27114  014982  0EFF               	movlw	255
 27115  014984  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 27116  014986  0EFF               	movlw	255
 27117  014988  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 27118  01498A  0E00               	movlw	0
 27119  01498C  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 27120  01498E  0E00               	movlw	0
 27121  014990  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 27122  014992  0E00               	movlw	0
 27123  014994  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 27124  014996  0E00               	movlw	0
 27125  014998  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 27126  01499A  0E00               	movlw	0
 27127  01499C  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 27128  01499E  0E7F               	movlw	127
 27129  0149A0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 27130  0149A2  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 27131  0149A4  0F98               	addlw	152
 27132  0149A6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 27133  0149A8  0E18               	movlw	24
 27134  0149AA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 27135  0149AC                     i2l1817:
 27136  0149AC  90D8               	bcf	status,0,c
 27137  0149AE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 27138  0149B0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 27139  0149B2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 27140  0149B4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 27141  0149B6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 27142  0149B8  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 27143  0149BA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 27144  0149BC  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 27145  0149BE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 27146  0149C0  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 27147  0149C2  A0D8               	btfss	status,0,c
 27148  0149C4  D007               	goto	i2l1818
 27149  0149C6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 27150  0149C8  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 27151  0149CA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 27152  0149CC  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 27153  0149CE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 27154  0149D0  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 27155  0149D2  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 27156  0149D4                     i2l1818:
 27157  0149D4  90D8               	bcf	status,0,c
 27158  0149D6  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 27159  0149D8  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 27160  0149DA  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 27161  0149DC  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 27162  0149DE  D7E6               	goto	i2l1817
 27163  0149E0  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 27164  0149E2  D016               	goto	i2l1820
 27165  0149E4  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27166  0149E6  0A80               	xorlw	128
 27167  0149E8  0F97               	addlw	151
 27168  0149EA  B0D8               	btfsc	status,0,c
 27169  0149EC  D009               	goto	i2l1821
 27170  0149EE  0E00               	movlw	0
 27171  0149F0  6E01               	movwf	?i2__tdiv_to_l_,c
 27172  0149F2  0E00               	movlw	0
 27173  0149F4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27174  0149F6  0E00               	movlw	0
 27175  0149F8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27176  0149FA  0E00               	movlw	0
 27177  0149FC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27178  0149FE  0012               	return	
 27179  014A00                     i2l1821:
 27180  014A00  90D8               	bcf	status,0,c
 27181  014A02  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 27182  014A04  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 27183  014A06  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 27184  014A08  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 27185  014A0A  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 27186  014A0C  D7F9               	goto	i2l1821
 27187  014A0E  D015               	goto	i2u1265_40
 27188  014A10                     i2l1820:
 27189  014A10  0E17               	movlw	23
 27190  014A12  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 27191  014A14  D00F               	goto	i2l1826
 27192  014A16  0E00               	movlw	0
 27193  014A18  6E01               	movwf	?i2__tdiv_to_l_,c
 27194  014A1A  0E00               	movlw	0
 27195  014A1C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27196  014A1E  0E00               	movlw	0
 27197  014A20  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27198  014A22  0E00               	movlw	0
 27199  014A24  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27200  014A26  0012               	return	
 27201  014A28  90D8               	bcf	status,0,c
 27202  014A2A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 27203  014A2C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 27204  014A2E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 27205  014A30  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 27206  014A32  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 27207  014A34                     i2l1826:
 27208  014A34  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27209  014A36  A4D8               	btfss	status,2,c
 27210  014A38  D7F7               	goto	i2l1827
 27211  014A3A                     i2u1265_40:
 27212  014A3A  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 27213  014A3E  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 27214  014A42  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 27215  014A46  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 27216  014A4A  0012               	return		;funcret
 27217  014A4C                     __end_ofi2__tdiv_to_l_:
 27218                           	opt stack 0
 27219                           tosu	equ	0xFFF
 27220                           tosh	equ	0xFFE
 27221                           tosl	equ	0xFFD
 27222                           pclatu	equ	0xFFB
 27223                           pclath	equ	0xFFA
 27224                           tblptru	equ	0xFF8
 27225                           tblptrh	equ	0xFF7
 27226                           tblptrl	equ	0xFF6
 27227                           tablat	equ	0xFF5
 27228                           prodh	equ	0xFF4
 27229                           prodl	equ	0xFF3
 27230                           intcon	equ	0xFF2
 27231                           indf0	equ	0xFEF
 27232                           postinc0	equ	0xFEE
 27233                           fsr0h	equ	0xFEA
 27234                           fsr0l	equ	0xFE9
 27235                           wreg	equ	0xFE8
 27236                           indf1	equ	0xFE7
 27237                           postdec1	equ	0xFE5
 27238                           plusw1	equ	0xFE3
 27239                           fsr1h	equ	0xFE2
 27240                           fsr1l	equ	0xFE1
 27241                           bsr	equ	0xFE0
 27242                           indf2	equ	0xFDF
 27243                           postinc2	equ	0xFDE
 27244                           postdec2	equ	0xFDD
 27245                           plusw2	equ	0xFDB
 27246                           fsr2h	equ	0xFDA
 27247                           fsr2l	equ	0xFD9
 27248                           status	equ	0xFD8
 27249                           
 27250 ;; *************** function i2__div_to_l_ *****************
 27251 ;; Defined at:
 27252 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 27253 ;; Parameters:    Size  Location     Type
 27254 ;;  f1              3    0[COMRAM] unsigned long 
 27255 ;;  f2              3    3[COMRAM] unsigned long 
 27256 ;; Auto vars:     Size  Location     Type
 27257 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 27258 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 27259 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 27260 ;; Return value:  Size  Location     Type
 27261 ;;                  4    0[COMRAM] unsigned long 
 27262 ;; Registers used:
 27263 ;;		wreg, status,2, status,0
 27264 ;; Tracked objects:
 27265 ;;		On entry : 0/0
 27266 ;;		On exit  : 0/0
 27267 ;;		Unchanged: 0/0
 27268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27270 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27272 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27273 ;;Total ram usage:       12 bytes
 27274 ;; Hardware stack levels used:    1
 27275 ;; This function calls:
 27276 ;;		Nothing
 27277 ;; This function is called by:
 27278 ;;		i2_printf
 27279 ;; This function uses a non-reentrant model
 27280 ;;
 27281                           
 27282                           	psect	text96
 27283  014B76                     __ptext96:
 27284                           	opt stack 0
 27285  014B76                     i2__div_to_l_:
 27286                           	opt stack 15
 27287                           
 27288                           ;incstack = 0
 27289  014B76  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 27290  014B78  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 27291  014B7A  6E0C               	movwf	i2__div_to_l_@exp1,c
 27292  014B7C  500C               	movf	i2__div_to_l_@exp1,w,c
 27293  014B7E  A4D8               	btfss	status,2,c
 27294  014B80  D009               	goto	i2l1710
 27295  014B82  0E00               	movlw	0
 27296  014B84  6E01               	movwf	?i2__div_to_l_,c
 27297  014B86  0E00               	movlw	0
 27298  014B88  6E02               	movwf	?i2__div_to_l_+1,c
 27299  014B8A  0E00               	movlw	0
 27300  014B8C  6E03               	movwf	?i2__div_to_l_+2,c
 27301  014B8E  0E00               	movlw	0
 27302  014B90  6E04               	movwf	?i2__div_to_l_+3,c
 27303  014B92  0012               	return	
 27304  014B94                     i2l1710:
 27305  014B94  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 27306  014B96  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 27307  014B98  6E0B               	movwf	i2__div_to_l_@cntr,c
 27308  014B9A  500B               	movf	i2__div_to_l_@cntr,w,c
 27309  014B9C  A4D8               	btfss	status,2,c
 27310  014B9E  D009               	goto	i2l1712
 27311  014BA0  0E00               	movlw	0
 27312  014BA2  6E01               	movwf	?i2__div_to_l_,c
 27313  014BA4  0E00               	movlw	0
 27314  014BA6  6E02               	movwf	?i2__div_to_l_+1,c
 27315  014BA8  0E00               	movlw	0
 27316  014BAA  6E03               	movwf	?i2__div_to_l_+2,c
 27317  014BAC  0E00               	movlw	0
 27318  014BAE  6E04               	movwf	?i2__div_to_l_+3,c
 27319  014BB0  0012               	return	
 27320  014BB2                     i2l1712:
 27321  014BB2  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 27322  014BB4  0EFF               	movlw	255
 27323  014BB6  1601               	andwf	i2__div_to_l_@f1,f,c
 27324  014BB8  0EFF               	movlw	255
 27325  014BBA  1602               	andwf	i2__div_to_l_@f1+1,f,c
 27326  014BBC  0EFF               	movlw	255
 27327  014BBE  1603               	andwf	i2__div_to_l_@f1+2,f,c
 27328  014BC0  0E00               	movlw	0
 27329  014BC2  1604               	andwf	i2__div_to_l_@f1+3,f,c
 27330  014BC4  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 27331  014BC6  0EFF               	movlw	255
 27332  014BC8  1604               	andwf	i2__div_to_l_@f2,f,c
 27333  014BCA  0EFF               	movlw	255
 27334  014BCC  1605               	andwf	i2__div_to_l_@f2+1,f,c
 27335  014BCE  0EFF               	movlw	255
 27336  014BD0  1606               	andwf	i2__div_to_l_@f2+2,f,c
 27337  014BD2  0E00               	movlw	0
 27338  014BD4  1607               	andwf	i2__div_to_l_@f2+3,f,c
 27339  014BD6  0E00               	movlw	0
 27340  014BD8  6E07               	movwf	i2__div_to_l_@quot,c
 27341  014BDA  0E00               	movlw	0
 27342  014BDC  6E08               	movwf	i2__div_to_l_@quot+1,c
 27343  014BDE  0E00               	movlw	0
 27344  014BE0  6E09               	movwf	i2__div_to_l_@quot+2,c
 27345  014BE2  0E00               	movlw	0
 27346  014BE4  6E0A               	movwf	i2__div_to_l_@quot+3,c
 27347  014BE6  0E7F               	movlw	127
 27348  014BE8  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 27349  014BEA  500B               	movf	i2__div_to_l_@cntr,w,c
 27350  014BEC  0FA0               	addlw	160
 27351  014BEE  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 27352  014BF0  0E20               	movlw	32
 27353  014BF2  6E0B               	movwf	i2__div_to_l_@cntr,c
 27354  014BF4  90D8               	bcf	status,0,c
 27355  014BF6  3607               	rlcf	i2__div_to_l_@quot,f,c
 27356  014BF8  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 27357  014BFA  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 27358  014BFC  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 27359  014BFE  5004               	movf	i2__div_to_l_@f2,w,c
 27360  014C00  5C01               	subwf	i2__div_to_l_@f1,w,c
 27361  014C02  5005               	movf	i2__div_to_l_@f2+1,w,c
 27362  014C04  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 27363  014C06  5006               	movf	i2__div_to_l_@f2+2,w,c
 27364  014C08  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 27365  014C0A  5007               	movf	i2__div_to_l_@f2+3,w,c
 27366  014C0C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 27367  014C0E  A0D8               	btfss	status,0,c
 27368  014C10  D009               	goto	i2l1714
 27369  014C12  5004               	movf	i2__div_to_l_@f2,w,c
 27370  014C14  5E01               	subwf	i2__div_to_l_@f1,f,c
 27371  014C16  5005               	movf	i2__div_to_l_@f2+1,w,c
 27372  014C18  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 27373  014C1A  5006               	movf	i2__div_to_l_@f2+2,w,c
 27374  014C1C  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 27375  014C1E  5007               	movf	i2__div_to_l_@f2+3,w,c
 27376  014C20  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 27377  014C22  8007               	bsf	i2__div_to_l_@quot,0,c
 27378  014C24                     i2l1714:
 27379  014C24  90D8               	bcf	status,0,c
 27380  014C26  3601               	rlcf	i2__div_to_l_@f1,f,c
 27381  014C28  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 27382  014C2A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 27383  014C2C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 27384  014C2E  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 27385  014C30  D7E1               	goto	i2l1713
 27386  014C32  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 27387  014C34  D016               	goto	i2l1716
 27388  014C36  500C               	movf	i2__div_to_l_@exp1,w,c
 27389  014C38  0A80               	xorlw	128
 27390  014C3A  0F9F               	addlw	159
 27391  014C3C  B0D8               	btfsc	status,0,c
 27392  014C3E  D009               	goto	i2l1717
 27393  014C40  0E00               	movlw	0
 27394  014C42  6E01               	movwf	?i2__div_to_l_,c
 27395  014C44  0E00               	movlw	0
 27396  014C46  6E02               	movwf	?i2__div_to_l_+1,c
 27397  014C48  0E00               	movlw	0
 27398  014C4A  6E03               	movwf	?i2__div_to_l_+2,c
 27399  014C4C  0E00               	movlw	0
 27400  014C4E  6E04               	movwf	?i2__div_to_l_+3,c
 27401  014C50  0012               	return	
 27402  014C52                     i2l1717:
 27403  014C52  90D8               	bcf	status,0,c
 27404  014C54  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 27405  014C56  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 27406  014C58  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 27407  014C5A  3207               	rrcf	i2__div_to_l_@quot,f,c
 27408  014C5C  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 27409  014C5E  D7F9               	goto	i2l1717
 27410  014C60  D015               	goto	i2u1256_40
 27411  014C62                     i2l1716:
 27412  014C62  0E1F               	movlw	31
 27413  014C64  640C               	cpfsgt	i2__div_to_l_@exp1,c
 27414  014C66  D00F               	goto	i2l1722
 27415  014C68  0E00               	movlw	0
 27416  014C6A  6E01               	movwf	?i2__div_to_l_,c
 27417  014C6C  0E00               	movlw	0
 27418  014C6E  6E02               	movwf	?i2__div_to_l_+1,c
 27419  014C70  0E00               	movlw	0
 27420  014C72  6E03               	movwf	?i2__div_to_l_+2,c
 27421  014C74  0E00               	movlw	0
 27422  014C76  6E04               	movwf	?i2__div_to_l_+3,c
 27423  014C78  0012               	return	
 27424  014C7A  90D8               	bcf	status,0,c
 27425  014C7C  3607               	rlcf	i2__div_to_l_@quot,f,c
 27426  014C7E  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 27427  014C80  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 27428  014C82  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 27429  014C84  060C               	decf	i2__div_to_l_@exp1,f,c
 27430  014C86                     i2l1722:
 27431  014C86  500C               	movf	i2__div_to_l_@exp1,w,c
 27432  014C88  A4D8               	btfss	status,2,c
 27433  014C8A  D7F7               	goto	i2l1723
 27434  014C8C                     i2u1256_40:
 27435  014C8C  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 27436  014C90  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 27437  014C94  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 27438  014C98  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 27439  014C9C  0012               	return		;funcret
 27440  014C9E                     __end_ofi2__div_to_l_:
 27441                           	opt stack 0
 27442                           tosu	equ	0xFFF
 27443                           tosh	equ	0xFFE
 27444                           tosl	equ	0xFFD
 27445                           pclatu	equ	0xFFB
 27446                           pclath	equ	0xFFA
 27447                           tblptru	equ	0xFF8
 27448                           tblptrh	equ	0xFF7
 27449                           tblptrl	equ	0xFF6
 27450                           tablat	equ	0xFF5
 27451                           prodh	equ	0xFF4
 27452                           prodl	equ	0xFF3
 27453                           intcon	equ	0xFF2
 27454                           indf0	equ	0xFEF
 27455                           postinc0	equ	0xFEE
 27456                           fsr0h	equ	0xFEA
 27457                           fsr0l	equ	0xFE9
 27458                           wreg	equ	0xFE8
 27459                           indf1	equ	0xFE7
 27460                           postdec1	equ	0xFE5
 27461                           plusw1	equ	0xFE3
 27462                           fsr1h	equ	0xFE2
 27463                           fsr1l	equ	0xFE1
 27464                           bsr	equ	0xFE0
 27465                           indf2	equ	0xFDF
 27466                           postinc2	equ	0xFDE
 27467                           postdec2	equ	0xFDD
 27468                           plusw2	equ	0xFDB
 27469                           fsr2h	equ	0xFDA
 27470                           fsr2l	equ	0xFD9
 27471                           status	equ	0xFD8
 27472                           
 27473 ;; *************** function i2___lltoft *****************
 27474 ;; Defined at:
 27475 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 27476 ;; Parameters:    Size  Location     Type
 27477 ;;  c               4    8[COMRAM] unsigned long 
 27478 ;; Auto vars:     Size  Location     Type
 27479 ;;  __lltoft        1   16[COMRAM] unsigned char 
 27480 ;; Return value:  Size  Location     Type
 27481 ;;                  3    8[COMRAM] float 
 27482 ;; Registers used:
 27483 ;;		wreg, status,2, status,0, cstack
 27484 ;; Tracked objects:
 27485 ;;		On entry : 0/0
 27486 ;;		On exit  : 0/0
 27487 ;;		Unchanged: 0/0
 27488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27492 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27493 ;;Total ram usage:        9 bytes
 27494 ;; Hardware stack levels used:    1
 27495 ;; Hardware stack levels required when called:    1
 27496 ;; This function calls:
 27497 ;;		i2___ftpack
 27498 ;; This function is called by:
 27499 ;;		i2_printf
 27500 ;; This function uses a non-reentrant model
 27501 ;;
 27502                           
 27503                           	psect	text97
 27504  01646C                     __ptext97:
 27505                           	opt stack 0
 27506  01646C                     i2___lltoft:
 27507                           	opt stack 14
 27508                           
 27509                           ;incstack = 0
 27510  01646C  0E8E               	movlw	142
 27511  01646E  6E11               	movwf	i2___lltoft@exp,c
 27512  016470  D006               	goto	i2l1921
 27513  016472  90D8               	bcf	status,0,c
 27514  016474  320C               	rrcf	i2___lltoft@c+3,f,c
 27515  016476  320B               	rrcf	i2___lltoft@c+2,f,c
 27516  016478  320A               	rrcf	i2___lltoft@c+1,f,c
 27517  01647A  3209               	rrcf	i2___lltoft@c,f,c
 27518  01647C  2A11               	incf	i2___lltoft@exp,f,c
 27519  01647E                     i2l1921:
 27520  01647E  0E00               	movlw	0
 27521  016480  1409               	andwf	i2___lltoft@c,w,c
 27522  016482  6E0D               	movwf	??i2___lltoft& (0+255),c
 27523  016484  0E00               	movlw	0
 27524  016486  140A               	andwf	i2___lltoft@c+1,w,c
 27525  016488  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 27526  01648A  0E00               	movlw	0
 27527  01648C  140B               	andwf	i2___lltoft@c+2,w,c
 27528  01648E  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 27529  016490  0EFF               	movlw	255
 27530  016492  140C               	andwf	i2___lltoft@c+3,w,c
 27531  016494  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 27532  016496  500D               	movf	??i2___lltoft,w,c
 27533  016498  100E               	iorwf	??i2___lltoft+1,w,c
 27534  01649A  100F               	iorwf	??i2___lltoft+2,w,c
 27535  01649C  1010               	iorwf	??i2___lltoft+3,w,c
 27536  01649E  A4D8               	btfss	status,2,c
 27537  0164A0  D7E8               	goto	i2l1922
 27538  0164A2  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 27539  0164A6  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 27540  0164AA  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 27541  0164AE  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 27542  0164B2  0E00               	movlw	0
 27543  0164B4  6E05               	movwf	i2___ftpack@sign,c
 27544  0164B6  EC6D  F0AC         	call	i2___ftpack	;wreg free
 27545  0164BA  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 27546  0164BE  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 27547  0164C2  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 27548  0164C6  0012               	return	
 27549  0164C8                     __end_ofi2___lltoft:
 27550                           	opt stack 0
 27551                           tosu	equ	0xFFF
 27552                           tosh	equ	0xFFE
 27553                           tosl	equ	0xFFD
 27554                           pclatu	equ	0xFFB
 27555                           pclath	equ	0xFFA
 27556                           tblptru	equ	0xFF8
 27557                           tblptrh	equ	0xFF7
 27558                           tblptrl	equ	0xFF6
 27559                           tablat	equ	0xFF5
 27560                           prodh	equ	0xFF4
 27561                           prodl	equ	0xFF3
 27562                           intcon	equ	0xFF2
 27563                           indf0	equ	0xFEF
 27564                           postinc0	equ	0xFEE
 27565                           fsr0h	equ	0xFEA
 27566                           fsr0l	equ	0xFE9
 27567                           wreg	equ	0xFE8
 27568                           indf1	equ	0xFE7
 27569                           postdec1	equ	0xFE5
 27570                           plusw1	equ	0xFE3
 27571                           fsr1h	equ	0xFE2
 27572                           fsr1l	equ	0xFE1
 27573                           bsr	equ	0xFE0
 27574                           indf2	equ	0xFDF
 27575                           postinc2	equ	0xFDE
 27576                           postdec2	equ	0xFDD
 27577                           plusw2	equ	0xFDB
 27578                           fsr2h	equ	0xFDA
 27579                           fsr2l	equ	0xFD9
 27580                           status	equ	0xFD8
 27581                           
 27582 ;; *************** function i2___llmod *****************
 27583 ;; Defined at:
 27584 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 27585 ;; Parameters:    Size  Location     Type
 27586 ;;  dividend        4   13[COMRAM] unsigned long 
 27587 ;;  divisor         4   17[COMRAM] unsigned long 
 27588 ;; Auto vars:     Size  Location     Type
 27589 ;;  __llmod         1   21[COMRAM] unsigned char 
 27590 ;; Return value:  Size  Location     Type
 27591 ;;                  4   13[COMRAM] unsigned long 
 27592 ;; Registers used:
 27593 ;;		wreg, status,2, status,0
 27594 ;; Tracked objects:
 27595 ;;		On entry : 0/0
 27596 ;;		On exit  : 0/0
 27597 ;;		Unchanged: 0/0
 27598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27602 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27603 ;;Total ram usage:        9 bytes
 27604 ;; Hardware stack levels used:    1
 27605 ;; This function calls:
 27606 ;;		Nothing
 27607 ;; This function is called by:
 27608 ;;		i2_printf
 27609 ;; This function uses a non-reentrant model
 27610 ;;
 27611                           
 27612                           	psect	text98
 27613  016284                     __ptext98:
 27614                           	opt stack 0
 27615  016284                     i2___llmod:
 27616                           	opt stack 15
 27617                           
 27618                           ;incstack = 0
 27619  016284  5012               	movf	i2___llmod@divisor,w,c
 27620  016286  1013               	iorwf	i2___llmod@divisor+1,w,c
 27621  016288  1014               	iorwf	i2___llmod@divisor+2,w,c
 27622  01628A  1015               	iorwf	i2___llmod@divisor+3,w,c
 27623  01628C  B4D8               	btfsc	status,2,c
 27624  01628E  D024               	goto	i2l1915
 27625  016290  0E01               	movlw	1
 27626  016292  6E16               	movwf	i2___llmod@counter,c
 27627  016294  D006               	goto	i2l1910
 27628  016296  90D8               	bcf	status,0,c
 27629  016298  3612               	rlcf	i2___llmod@divisor,f,c
 27630  01629A  3613               	rlcf	i2___llmod@divisor+1,f,c
 27631  01629C  3614               	rlcf	i2___llmod@divisor+2,f,c
 27632  01629E  3615               	rlcf	i2___llmod@divisor+3,f,c
 27633  0162A0  2A16               	incf	i2___llmod@counter,f,c
 27634  0162A2                     i2l1910:
 27635  0162A2  AE15               	btfss	i2___llmod@divisor+3,7,c
 27636  0162A4  D7F8               	goto	i2l1911
 27637  0162A6                     i2u1272_40:
 27638  0162A6  5012               	movf	i2___llmod@divisor,w,c
 27639  0162A8  5C0E               	subwf	i2___llmod@dividend,w,c
 27640  0162AA  5013               	movf	i2___llmod@divisor+1,w,c
 27641  0162AC  580F               	subwfb	i2___llmod@dividend+1,w,c
 27642  0162AE  5014               	movf	i2___llmod@divisor+2,w,c
 27643  0162B0  5810               	subwfb	i2___llmod@dividend+2,w,c
 27644  0162B2  5015               	movf	i2___llmod@divisor+3,w,c
 27645  0162B4  5811               	subwfb	i2___llmod@dividend+3,w,c
 27646  0162B6  A0D8               	btfss	status,0,c
 27647  0162B8  D008               	goto	i2l1914
 27648  0162BA  5012               	movf	i2___llmod@divisor,w,c
 27649  0162BC  5E0E               	subwf	i2___llmod@dividend,f,c
 27650  0162BE  5013               	movf	i2___llmod@divisor+1,w,c
 27651  0162C0  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 27652  0162C2  5014               	movf	i2___llmod@divisor+2,w,c
 27653  0162C4  5A10               	subwfb	i2___llmod@dividend+2,f,c
 27654  0162C6  5015               	movf	i2___llmod@divisor+3,w,c
 27655  0162C8  5A11               	subwfb	i2___llmod@dividend+3,f,c
 27656  0162CA                     i2l1914:
 27657  0162CA  90D8               	bcf	status,0,c
 27658  0162CC  3215               	rrcf	i2___llmod@divisor+3,f,c
 27659  0162CE  3214               	rrcf	i2___llmod@divisor+2,f,c
 27660  0162D0  3213               	rrcf	i2___llmod@divisor+1,f,c
 27661  0162D2  3212               	rrcf	i2___llmod@divisor,f,c
 27662  0162D4  2E16               	decfsz	i2___llmod@counter,f,c
 27663  0162D6  D7E7               	goto	i2u1272_40
 27664  0162D8                     i2l1915:
 27665  0162D8  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 27666  0162DC  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 27667  0162E0  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 27668  0162E4  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 27669  0162E8  0012               	return		;funcret
 27670  0162EA                     __end_ofi2___llmod:
 27671                           	opt stack 0
 27672                           tosu	equ	0xFFF
 27673                           tosh	equ	0xFFE
 27674                           tosl	equ	0xFFD
 27675                           pclatu	equ	0xFFB
 27676                           pclath	equ	0xFFA
 27677                           tblptru	equ	0xFF8
 27678                           tblptrh	equ	0xFF7
 27679                           tblptrl	equ	0xFF6
 27680                           tablat	equ	0xFF5
 27681                           prodh	equ	0xFF4
 27682                           prodl	equ	0xFF3
 27683                           intcon	equ	0xFF2
 27684                           indf0	equ	0xFEF
 27685                           postinc0	equ	0xFEE
 27686                           fsr0h	equ	0xFEA
 27687                           fsr0l	equ	0xFE9
 27688                           wreg	equ	0xFE8
 27689                           indf1	equ	0xFE7
 27690                           postdec1	equ	0xFE5
 27691                           plusw1	equ	0xFE3
 27692                           fsr1h	equ	0xFE2
 27693                           fsr1l	equ	0xFE1
 27694                           bsr	equ	0xFE0
 27695                           indf2	equ	0xFDF
 27696                           postinc2	equ	0xFDE
 27697                           postdec2	equ	0xFDD
 27698                           plusw2	equ	0xFDB
 27699                           fsr2h	equ	0xFDA
 27700                           fsr2l	equ	0xFD9
 27701                           status	equ	0xFD8
 27702                           
 27703 ;; *************** function i2___lldiv *****************
 27704 ;; Defined at:
 27705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 27706 ;; Parameters:    Size  Location     Type
 27707 ;;  dividend        4    0[COMRAM] unsigned long 
 27708 ;;  divisor         4    4[COMRAM] unsigned long 
 27709 ;; Auto vars:     Size  Location     Type
 27710 ;;  __lldiv         4    8[COMRAM] unsigned long 
 27711 ;;  __lldiv         1   12[COMRAM] unsigned char 
 27712 ;; Return value:  Size  Location     Type
 27713 ;;                  4    0[COMRAM] unsigned long 
 27714 ;; Registers used:
 27715 ;;		wreg, status,2, status,0
 27716 ;; Tracked objects:
 27717 ;;		On entry : 0/0
 27718 ;;		On exit  : 0/0
 27719 ;;		Unchanged: 0/0
 27720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27724 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27725 ;;Total ram usage:       13 bytes
 27726 ;; Hardware stack levels used:    1
 27727 ;; This function calls:
 27728 ;;		Nothing
 27729 ;; This function is called by:
 27730 ;;		i2_printf
 27731 ;; This function uses a non-reentrant model
 27732 ;;
 27733                           
 27734                           	psect	text99
 27735  015DF6                     __ptext99:
 27736                           	opt stack 0
 27737  015DF6                     i2___lldiv:
 27738                           	opt stack 15
 27739                           
 27740                           ;incstack = 0
 27741  015DF6  0E00               	movlw	0
 27742  015DF8  6E09               	movwf	i2___lldiv@quotient,c
 27743  015DFA  0E00               	movlw	0
 27744  015DFC  6E0A               	movwf	i2___lldiv@quotient+1,c
 27745  015DFE  0E00               	movlw	0
 27746  015E00  6E0B               	movwf	i2___lldiv@quotient+2,c
 27747  015E02  0E00               	movlw	0
 27748  015E04  6E0C               	movwf	i2___lldiv@quotient+3,c
 27749  015E06  5005               	movf	i2___lldiv@divisor,w,c
 27750  015E08  1006               	iorwf	i2___lldiv@divisor+1,w,c
 27751  015E0A  1007               	iorwf	i2___lldiv@divisor+2,w,c
 27752  015E0C  1008               	iorwf	i2___lldiv@divisor+3,w,c
 27753  015E0E  B4D8               	btfsc	status,2,c
 27754  015E10  D02A               	goto	i2l1905
 27755  015E12  0E01               	movlw	1
 27756  015E14  6E0D               	movwf	i2___lldiv@counter,c
 27757  015E16  D006               	goto	i2l1900
 27758  015E18  90D8               	bcf	status,0,c
 27759  015E1A  3605               	rlcf	i2___lldiv@divisor,f,c
 27760  015E1C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 27761  015E1E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 27762  015E20  3608               	rlcf	i2___lldiv@divisor+3,f,c
 27763  015E22  2A0D               	incf	i2___lldiv@counter,f,c
 27764  015E24                     i2l1900:
 27765  015E24  AE08               	btfss	i2___lldiv@divisor+3,7,c
 27766  015E26  D7F8               	goto	i2l1901
 27767  015E28                     i2u1269_40:
 27768  015E28  90D8               	bcf	status,0,c
 27769  015E2A  3609               	rlcf	i2___lldiv@quotient,f,c
 27770  015E2C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 27771  015E2E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 27772  015E30  360C               	rlcf	i2___lldiv@quotient+3,f,c
 27773  015E32  5005               	movf	i2___lldiv@divisor,w,c
 27774  015E34  5C01               	subwf	i2___lldiv@dividend,w,c
 27775  015E36  5006               	movf	i2___lldiv@divisor+1,w,c
 27776  015E38  5802               	subwfb	i2___lldiv@dividend+1,w,c
 27777  015E3A  5007               	movf	i2___lldiv@divisor+2,w,c
 27778  015E3C  5803               	subwfb	i2___lldiv@dividend+2,w,c
 27779  015E3E  5008               	movf	i2___lldiv@divisor+3,w,c
 27780  015E40  5804               	subwfb	i2___lldiv@dividend+3,w,c
 27781  015E42  A0D8               	btfss	status,0,c
 27782  015E44  D009               	goto	i2l1904
 27783  015E46  5005               	movf	i2___lldiv@divisor,w,c
 27784  015E48  5E01               	subwf	i2___lldiv@dividend,f,c
 27785  015E4A  5006               	movf	i2___lldiv@divisor+1,w,c
 27786  015E4C  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 27787  015E4E  5007               	movf	i2___lldiv@divisor+2,w,c
 27788  015E50  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 27789  015E52  5008               	movf	i2___lldiv@divisor+3,w,c
 27790  015E54  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 27791  015E56  8009               	bsf	i2___lldiv@quotient,0,c
 27792  015E58                     i2l1904:
 27793  015E58  90D8               	bcf	status,0,c
 27794  015E5A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 27795  015E5C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 27796  015E5E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 27797  015E60  3205               	rrcf	i2___lldiv@divisor,f,c
 27798  015E62  2E0D               	decfsz	i2___lldiv@counter,f,c
 27799  015E64  D7E1               	goto	i2u1269_40
 27800  015E66                     i2l1905:
 27801  015E66  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 27802  015E6A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 27803  015E6E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 27804  015E72  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 27805  015E76  0012               	return		;funcret
 27806  015E78                     __end_ofi2___lldiv:
 27807                           	opt stack 0
 27808                           tosu	equ	0xFFF
 27809                           tosh	equ	0xFFE
 27810                           tosl	equ	0xFFD
 27811                           pclatu	equ	0xFFB
 27812                           pclath	equ	0xFFA
 27813                           tblptru	equ	0xFF8
 27814                           tblptrh	equ	0xFF7
 27815                           tblptrl	equ	0xFF6
 27816                           tablat	equ	0xFF5
 27817                           prodh	equ	0xFF4
 27818                           prodl	equ	0xFF3
 27819                           intcon	equ	0xFF2
 27820                           indf0	equ	0xFEF
 27821                           postinc0	equ	0xFEE
 27822                           fsr0h	equ	0xFEA
 27823                           fsr0l	equ	0xFE9
 27824                           wreg	equ	0xFE8
 27825                           indf1	equ	0xFE7
 27826                           postdec1	equ	0xFE5
 27827                           plusw1	equ	0xFE3
 27828                           fsr1h	equ	0xFE2
 27829                           fsr1l	equ	0xFE1
 27830                           bsr	equ	0xFE0
 27831                           indf2	equ	0xFDF
 27832                           postinc2	equ	0xFDE
 27833                           postdec2	equ	0xFDD
 27834                           plusw2	equ	0xFDB
 27835                           fsr2h	equ	0xFDA
 27836                           fsr2l	equ	0xFD9
 27837                           status	equ	0xFD8
 27838                           
 27839 ;; *************** function _ADCC_ISR *****************
 27840 ;; Defined at:
 27841 ;;		line 297 in file "mcc_generated_files/adcc.c"
 27842 ;; Parameters:    Size  Location     Type
 27843 ;;		None
 27844 ;; Auto vars:     Size  Location     Type
 27845 ;;		None
 27846 ;; Return value:  Size  Location     Type
 27847 ;;                  1    wreg      void 
 27848 ;; Registers used:
 27849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27850 ;; Tracked objects:
 27851 ;;		On entry : 0/0
 27852 ;;		On exit  : 0/0
 27853 ;;		Unchanged: 0/0
 27854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27859 ;;Total ram usage:        0 bytes
 27860 ;; Hardware stack levels used:    1
 27861 ;; Hardware stack levels required when called:    8
 27862 ;; This function calls:
 27863 ;;		Absolute function
 27864 ;;		_ADCC_DefaultInterruptHandler
 27865 ;;		_ADCPostProcessingCallback
 27866 ;; This function is called by:
 27867 ;;		_INTERRUPT_InterruptManagerHigh
 27868 ;; This function uses a non-reentrant model
 27869 ;;
 27870                           
 27871                           	psect	text100
 27872  016BB4                     __ptext100:
 27873                           	opt stack 0
 27874  016BB4                     _ADCC_ISR:
 27875                           	opt stack 9
 27876                           
 27877                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 27878                           
 27879                           ;incstack = 0
 27880  016BB4  010E               	movlb	14	; () banked
 27881  016BB6  9134               	bcf	52,0,b	;volatile
 27882                           
 27883                           ; BSR set to: 14
 27884                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 27885  016BB8  0100               	movlb	0	; () banked
 27886  016BBA  51E6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27887  016BBC  11E7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27888  016BBE  11E8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27889  016BC0  B4D8               	btfsc	status,2,c
 27890  016BC2  0012               	return	
 27891                           
 27892                           ; BSR set to: 0
 27893                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 27894  016BC4  D801               	call	i2u1785_48
 27895  016BC6  0012               	return	
 27896  016BC8                     i2u1785_48:
 27897  016BC8  0005               	push	
 27898  016BCA  6EFA               	movwf	pclath,c
 27899  016BCC  51E6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27900  016BCE  6EFD               	movwf	tosl,c
 27901  016BD0  51E7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27902  016BD2  6EFE               	movwf	tosh,c
 27903  016BD4  51E8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27904  016BD6  6EFF               	movwf	tosu,c
 27905  016BD8  50FA               	movf	pclath,w,c
 27906  016BDA  0012               	return		;indir
 27907  016BDC                     __end_of_ADCC_ISR:
 27908                           	opt stack 0
 27909                           tosu	equ	0xFFF
 27910                           tosh	equ	0xFFE
 27911                           tosl	equ	0xFFD
 27912                           pclatu	equ	0xFFB
 27913                           pclath	equ	0xFFA
 27914                           tblptru	equ	0xFF8
 27915                           tblptrh	equ	0xFF7
 27916                           tblptrl	equ	0xFF6
 27917                           tablat	equ	0xFF5
 27918                           prodh	equ	0xFF4
 27919                           prodl	equ	0xFF3
 27920                           intcon	equ	0xFF2
 27921                           indf0	equ	0xFEF
 27922                           postinc0	equ	0xFEE
 27923                           fsr0h	equ	0xFEA
 27924                           fsr0l	equ	0xFE9
 27925                           wreg	equ	0xFE8
 27926                           indf1	equ	0xFE7
 27927                           postdec1	equ	0xFE5
 27928                           plusw1	equ	0xFE3
 27929                           fsr1h	equ	0xFE2
 27930                           fsr1l	equ	0xFE1
 27931                           bsr	equ	0xFE0
 27932                           indf2	equ	0xFDF
 27933                           postinc2	equ	0xFDE
 27934                           postdec2	equ	0xFDD
 27935                           plusw2	equ	0xFDB
 27936                           fsr2h	equ	0xFDA
 27937                           fsr2l	equ	0xFD9
 27938                           status	equ	0xFD8
 27939                           
 27940 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27941 ;; Defined at:
 27942 ;;		line 310 in file "mcc_generated_files/adcc.c"
 27943 ;; Parameters:    Size  Location     Type
 27944 ;;		None
 27945 ;; Auto vars:     Size  Location     Type
 27946 ;;		None
 27947 ;; Return value:  Size  Location     Type
 27948 ;;                  1    wreg      void 
 27949 ;; Registers used:
 27950 ;;		None
 27951 ;; Tracked objects:
 27952 ;;		On entry : 0/0
 27953 ;;		On exit  : 0/0
 27954 ;;		Unchanged: 0/0
 27955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27960 ;;Total ram usage:        0 bytes
 27961 ;; Hardware stack levels used:    1
 27962 ;; This function calls:
 27963 ;;		Nothing
 27964 ;; This function is called by:
 27965 ;;		_ADCC_Initialize
 27966 ;;		_ADCC_ISR
 27967 ;; This function uses a non-reentrant model
 27968 ;;
 27969                           
 27970                           	psect	text101
 27971  016ED8                     __ptext101:
 27972                           	opt stack 0
 27973  016ED8                     _ADCC_DefaultInterruptHandler:
 27974                           	opt stack 16
 27975                           
 27976                           ;incstack = 0
 27977  016ED8  0012               	return		;funcret
 27978  016EDA                     __end_of_ADCC_DefaultInterruptHandler:
 27979                           	opt stack 0
 27980                           tosu	equ	0xFFF
 27981                           tosh	equ	0xFFE
 27982                           tosl	equ	0xFFD
 27983                           pclatu	equ	0xFFB
 27984                           pclath	equ	0xFFA
 27985                           tblptru	equ	0xFF8
 27986                           tblptrh	equ	0xFF7
 27987                           tblptrl	equ	0xFF6
 27988                           tablat	equ	0xFF5
 27989                           prodh	equ	0xFF4
 27990                           prodl	equ	0xFF3
 27991                           intcon	equ	0xFF2
 27992                           indf0	equ	0xFEF
 27993                           postinc0	equ	0xFEE
 27994                           fsr0h	equ	0xFEA
 27995                           fsr0l	equ	0xFE9
 27996                           wreg	equ	0xFE8
 27997                           indf1	equ	0xFE7
 27998                           postdec1	equ	0xFE5
 27999                           plusw1	equ	0xFE3
 28000                           fsr1h	equ	0xFE2
 28001                           fsr1l	equ	0xFE1
 28002                           bsr	equ	0xFE0
 28003                           indf2	equ	0xFDF
 28004                           postinc2	equ	0xFDE
 28005                           postdec2	equ	0xFDD
 28006                           plusw2	equ	0xFDB
 28007                           fsr2h	equ	0xFDA
 28008                           fsr2l	equ	0xFD9
 28009                           status	equ	0xFD8
 28010                           
 28011 ;; *************** function _ADCPostProcessingCallback *****************
 28012 ;; Defined at:
 28013 ;;		line 160 in file "main.c"
 28014 ;; Parameters:    Size  Location     Type
 28015 ;;		None
 28016 ;; Auto vars:     Size  Location     Type
 28017 ;;  current_adc_    1   79[BANK0 ] enum E17421
 28018 ;; Return value:  Size  Location     Type
 28019 ;;                  1    wreg      void 
 28020 ;; Registers used:
 28021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28022 ;; Tracked objects:
 28023 ;;		On entry : 0/0
 28024 ;;		On exit  : 0/0
 28025 ;;		Unchanged: 0/0
 28026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28028 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28030 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28031 ;;Total ram usage:       16 bytes
 28032 ;; Hardware stack levels used:    1
 28033 ;; Hardware stack levels required when called:    7
 28034 ;; This function calls:
 28035 ;;		_ADCC_GetConversionResult
 28036 ;;		___lwtoft
 28037 ;;		_currentMeasuredToPeak
 28038 ;;		_peakToRMS
 28039 ;;		i2_TMR7_StopTimer
 28040 ;;		i2___ftadd
 28041 ;;		i2___ftdiv
 28042 ;;		i2___ftge
 28043 ;;		i2___ftmul
 28044 ;;		i2___ftneg
 28045 ;; This function is called by:
 28046 ;;		_main
 28047 ;;		_ADCC_ISR
 28048 ;; This function uses a non-reentrant model
 28049 ;;
 28050                           
 28051                           	psect	text102
 28052  0122EA                     __ptext102:
 28053                           	opt stack 0
 28054  0122EA                     _ADCPostProcessingCallback:
 28055                           	opt stack 9
 28056                           
 28057                           ;main.c: 163: adcc_channel_t current_adc_channel = ADPCH;
 28058                           
 28059                           ;incstack = 0
 28060  0122EA  CF5F F0AF          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 28061                           
 28062                           ;main.c: 166: switch (current_adc_channel) {
 28063  0122EE  D324               	goto	i2l941
 28064  0122F0                     
 28065                           ;main.c: 170: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 28066  0122F0  ECDB  F0B6         	call	_ADCC_GetConversionResult	;wreg free
 28067  0122F4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28068  0122F8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28069  0122FC  EC4C  F0B6         	call	___lwtoft	;wreg free
 28070  012300  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28071  012304  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28072  012308  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28073  01230C  0E68               	movlw	104
 28074  01230E  6E2A               	movwf	i2___ftmul@f2,c
 28075  012310  0E53               	movlw	83
 28076  012312  6E2B               	movwf	i2___ftmul@f2+1,c
 28077  012314  0E3B               	movlw	59
 28078  012316  6E2C               	movwf	i2___ftmul@f2+2,c
 28079  012318  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28080  01231C  C027  F0E3         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 28081  012320  C028  F0E4         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 28082  012324  C029  F0E5         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 28083                           
 28084                           ;main.c: 172: if (AVSS_ADC_Result > 0.01) {
 28085  012328  0ED7               	movlw	215
 28086  01232A  6E2A               	movwf	i2___ftge@ff1,c
 28087  01232C  0E23               	movlw	35
 28088  01232E  6E2B               	movwf	i2___ftge@ff1+1,c
 28089  012330  0E3C               	movlw	60
 28090  012332  6E2C               	movwf	i2___ftge@ff1+2,c
 28091  012334  C0E3  F02D         	movff	_AVSS_ADC_Result,i2___ftge@ff2	;volatile
 28092  012338  C0E4  F02E         	movff	_AVSS_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28093  01233C  C0E5  F02F         	movff	_AVSS_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28094  012340  ECA6  F0AD         	call	i2___ftge	;wreg free
 28095  012344  B0D8               	btfsc	status,0,c
 28096  012346  0012               	return	
 28097                           
 28098                           ;main.c: 174: LATFbits.LATF3 = 1;
 28099  012348  867E               	bsf	3966,3,c	;volatile
 28100                           
 28101                           ;main.c: 175: adc_error_flag = 1;
 28102  01234A  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28103                           
 28104                           ;main.c: 177: PIE5bits.TMR7IE == 0;
 28105  01234C  010E               	movlb	14	; () banked
 28106  01234E  512E               	movf	46,w,b	;volatile
 28107                           
 28108                           ; BSR set to: 14
 28109                           ;main.c: 178: TMR7_StopTimer();
 28110  012350  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28111                           
 28112                           ;main.c: 181: }
 28113                           ;main.c: 183: break;
 28114                           
 28115                           ;main.c: 179: return;
 28116  012354  0012               	return	
 28117  012356                     
 28118                           ;main.c: 188: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 28119  012356  0E68               	movlw	104
 28120  012358  6E2A               	movwf	i2___ftmul@f2,c
 28121  01235A  0E53               	movlw	83
 28122  01235C  6E2B               	movwf	i2___ftmul@f2+1,c
 28123  01235E  0E3B               	movlw	59
 28124  012360  6E2C               	movwf	i2___ftmul@f2+2,c
 28125  012362  ECDB  F0B6         	call	_ADCC_GetConversionResult	;wreg free
 28126  012366  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28127  01236A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28128  01236E  EC4C  F0B6         	call	___lwtoft	;wreg free
 28129  012372  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28130  012376  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28131  01237A  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28132  01237E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28133  012382  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 28134  012386  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 28135  01238A  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 28136  01238E  C0E3  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 28137  012392  C0E4  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 28138  012396  C0E5  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 28139  01239A  EC52  F0A2         	call	i2___ftadd	;wreg free
 28140  01239E  C040  F0ED         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 28141  0123A2  C041  F0EE         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 28142  0123A6  C042  F0EF         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 28143                           
 28144                           ;main.c: 189: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 28145  0123AA  0E12               	movlw	18
 28146  0123AC  6E15               	movwf	i2___ftdiv@f1,c
 28147  0123AE  0E03               	movlw	3
 28148  0123B0  6E16               	movwf	i2___ftdiv@f1+1,c
 28149  0123B2  0E40               	movlw	64
 28150  0123B4  6E17               	movwf	i2___ftdiv@f1+2,c
 28151  0123B6  C0ED  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 28152  0123BA  C0EE  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 28153  0123BE  C0EF  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 28154  0123C2  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 28155  0123C6  C015  F0E0         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 28156  0123CA  C016  F0E1         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 28157  0123CE  C017  F0E2         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 28158                           
 28159                           ;main.c: 191: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0) {
 28160  0123D2  0E00               	movlw	0
 28161  0123D4  6E2A               	movwf	i2___ftge@ff1,c
 28162  0123D6  0E20               	movlw	32
 28163  0123D8  6E2B               	movwf	i2___ftge@ff1+1,c
 28164  0123DA  0E40               	movlw	64
 28165  0123DC  6E2C               	movwf	i2___ftge@ff1+2,c
 28166  0123DE  C0ED  F02D         	movff	_FVR_ADC_Result,i2___ftge@ff2	;volatile
 28167  0123E2  C0EE  F02E         	movff	_FVR_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28168  0123E6  C0EF  F02F         	movff	_FVR_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28169  0123EA  ECA6  F0AD         	call	i2___ftge	;wreg free
 28170  0123EE  A0D8               	btfss	status,0,c
 28171  0123F0  D010               	goto	i2u1720_40
 28172  0123F2  C0ED  F02A         	movff	_FVR_ADC_Result,i2___ftge@ff1	;volatile
 28173  0123F6  C0EE  F02B         	movff	_FVR_ADC_Result+1,i2___ftge@ff1+1	;volatile
 28174  0123FA  C0EF  F02C         	movff	_FVR_ADC_Result+2,i2___ftge@ff1+2	;volatile
 28175  0123FE  0E00               	movlw	0
 28176  012400  6E2D               	movwf	i2___ftge@ff2,c
 28177  012402  0E00               	movlw	0
 28178  012404  6E2E               	movwf	i2___ftge@ff2+1,c
 28179  012406  0E40               	movlw	64
 28180  012408  6E2F               	movwf	i2___ftge@ff2+2,c
 28181  01240A  ECA6  F0AD         	call	i2___ftge	;wreg free
 28182  01240E  B0D8               	btfsc	status,0,c
 28183  012410  0012               	return	
 28184  012412                     i2u1720_40:
 28185                           
 28186                           ;main.c: 193: LATFbits.LATF3 = 1;
 28187  012412  867E               	bsf	3966,3,c	;volatile
 28188                           
 28189                           ;main.c: 194: adc_error_flag = 1;
 28190  012414  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28191                           
 28192                           ;main.c: 196: PIE5bits.TMR7IE == 0;
 28193  012416  010E               	movlb	14	; () banked
 28194  012418  512E               	movf	46,w,b	;volatile
 28195                           
 28196                           ; BSR set to: 14
 28197                           ;main.c: 197: TMR7_StopTimer();
 28198  01241A  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28199                           
 28200                           ;main.c: 200: }
 28201                           ;main.c: 203: break;
 28202                           
 28203                           ;main.c: 198: return;
 28204  01241E  0012               	return	
 28205  012420                     
 28206                           ;main.c: 208: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 28207  012420  C0E0  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 28208  012424  C0E1  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 28209  012428  C0E2  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 28210  01242C  ECDB  F0B6         	call	_ADCC_GetConversionResult	;wreg free
 28211  012430  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28212  012434  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28213  012438  EC4C  F0B6         	call	___lwtoft	;wreg free
 28214  01243C  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28215  012440  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28216  012444  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28217  012448  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28218  01244C  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$4005
 28219  012450  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4005+1
 28220  012454  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4005+2
 28221                           
 28222                           ;main.c: 208: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 28223  012458  C0B3  F027         	movff	_ADCPostProcessingCallback$4005,i2___ftmul@f1
 28224  01245C  C0B4  F028         	movff	_ADCPostProcessingCallback$4005+1,i2___ftmul@f1+1
 28225  012460  C0B5  F029         	movff	_ADCPostProcessingCallback$4005+2,i2___ftmul@f1+2
 28226  012464  0E68               	movlw	104
 28227  012466  6E2A               	movwf	i2___ftmul@f2,c
 28228  012468  0ED3               	movlw	211
 28229  01246A  6E2B               	movwf	i2___ftmul@f2+1,c
 28230  01246C  0E3B               	movlw	59
 28231  01246E  6E2C               	movwf	i2___ftmul@f2+2,c
 28232  012470  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28233  012474  C027  F0DD         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 28234  012478  C028  F0DE         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 28235  01247C  C029  F0DF         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 28236                           
 28237                           ;main.c: 210: if (POS3P3_ADC_Result > 3.5) {
 28238  012480  0E00               	movlw	0
 28239  012482  6E2A               	movwf	i2___ftge@ff1,c
 28240  012484  0E60               	movlw	96
 28241  012486  6E2B               	movwf	i2___ftge@ff1+1,c
 28242  012488  0E40               	movlw	64
 28243  01248A  6E2C               	movwf	i2___ftge@ff1+2,c
 28244  01248C  C0DD  F02D         	movff	_POS3P3_ADC_Result,i2___ftge@ff2	;volatile
 28245  012490  C0DE  F02E         	movff	_POS3P3_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28246  012494  C0DF  F02F         	movff	_POS3P3_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28247  012498  ECA6  F0AD         	call	i2___ftge	;wreg free
 28248  01249C  B0D8               	btfsc	status,0,c
 28249  01249E  0012               	return	
 28250                           
 28251                           ;main.c: 212: LATFbits.LATF3 = 1;
 28252  0124A0  867E               	bsf	3966,3,c	;volatile
 28253                           
 28254                           ;main.c: 213: adc_error_flag = 1;
 28255  0124A2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28256                           
 28257                           ;main.c: 215: PIE5bits.TMR7IE == 0;
 28258  0124A4  010E               	movlb	14	; () banked
 28259  0124A6  512E               	movf	46,w,b	;volatile
 28260                           
 28261                           ; BSR set to: 14
 28262                           ;main.c: 216: TMR7_StopTimer();
 28263  0124A8  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28264                           
 28265                           ;main.c: 219: }
 28266                           ;main.c: 221: break;
 28267                           
 28268                           ;main.c: 217: return;
 28269  0124AC  0012               	return	
 28270  0124AE                     
 28271                           ;main.c: 226: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 28272  0124AE  0EC0               	movlw	192
 28273  0124B0  6E18               	movwf	i2___ftdiv@f2,c
 28274  0124B2  0E7F               	movlw	127
 28275  0124B4  6E19               	movwf	i2___ftdiv@f2+1,c
 28276  0124B6  0E44               	movlw	68
 28277  0124B8  6E1A               	movwf	i2___ftdiv@f2+2,c
 28278  0124BA  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 28279  0124BE  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 28280  0124C2  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 28281  0124C6  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 28282  0124CA  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 28283  0124CE  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 28284  0124D2  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 28285  0124D6  ECDB  F0B6         	call	_ADCC_GetConversionResult	;wreg free
 28286  0124DA  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28287  0124DE  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28288  0124E2  EC4C  F0B6         	call	___lwtoft	;wreg free
 28289  0124E6  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28290  0124EA  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28291  0124EE  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28292  0124F2  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28293  0124F6  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$4005
 28294  0124FA  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4005+1
 28295  0124FE  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4005+2
 28296                           
 28297                           ;main.c: 226: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 28298  012502  C0B3  F027         	movff	_ADCPostProcessingCallback$4005,i2___ftmul@f1
 28299  012506  C0B4  F028         	movff	_ADCPostProcessingCallback$4005+1,i2___ftmul@f1+1
 28300  01250A  C0B5  F029         	movff	_ADCPostProcessingCallback$4005+2,i2___ftmul@f1+2
 28301  01250E  0E5E               	movlw	94
 28302  012510  6E2A               	movwf	i2___ftmul@f2,c
 28303  012512  0EF2               	movlw	242
 28304  012514  6E2B               	movwf	i2___ftmul@f2+1,c
 28305  012516  0E3F               	movlw	63
 28306  012518  6E2C               	movwf	i2___ftmul@f2+2,c
 28307  01251A  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28308  01251E  C027  F0CE         	movff	?i2___ftmul,_Imeas	;volatile
 28309  012522  C028  F0CF         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 28310  012526  C029  F0D0         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 28311                           
 28312                           ;main.c: 230: if (LATGbits.LATG0 != 1) {
 28313  01252A  B07F               	btfsc	3967,0,c	;volatile
 28314  01252C  D083               	goto	i2l953
 28315                           
 28316                           ;main.c: 235: if (load_enable) {
 28317  01252E  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 28318  012530  D029               	goto	i2l954
 28319                           
 28320                           ;main.c: 238: if (dimming_period < 0x7FEE) {
 28321  012532  0EEE               	movlw	238
 28322  012534  0100               	movlb	0	; () banked
 28323  012536  5DF9               	subwf	_dimming_period& (0+255),w,b	;volatile
 28324  012538  0E7F               	movlw	127
 28325  01253A  59FA               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 28326  01253C  B0D8               	btfsc	status,0,c
 28327  01253E  D007               	goto	i2l955
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;main.c: 240: Ipk = Imeas;
 28331  012540  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 28332  012544  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 28333  012548  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 28334                           
 28335                           ;main.c: 242: }
 28336  01254C  D014               	goto	i2l956
 28337  01254E                     i2l955:
 28338                           
 28339                           ; BSR set to: 0
 28340                           ;main.c: 245: else {
 28341                           ;main.c: 247: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 28342                           
 28343                           ; BSR set to: 0
 28344  01254E  C0CE  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 28345  012552  C0CF  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 28346  012556  C0D0  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 28347  01255A  C0FB  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 28348  01255E  C0FC  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 28349  012562  C0FD  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 28350  012566  ECD7  F0B1         	call	_currentMeasuredToPeak	;wreg free
 28351  01256A  C073  F0D1         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 28352  01256E  C074  F0D2         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 28353  012572  C075  F0D3         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 28354  012576                     i2l956:
 28355                           
 28356                           ;main.c: 249: }
 28357                           ;main.c: 251: Vpk = Vpk_const;
 28358  012576  C0F3  F0D4         	movff	_Vpk_const,_Vpk	;volatile
 28359  01257A  C0F4  F0D5         	movff	_Vpk_const+1,_Vpk+1	;volatile
 28360  01257E  C0F5  F0D6         	movff	_Vpk_const+2,_Vpk+2	;volatile
 28361                           
 28362                           ;main.c: 253: }
 28363  012582  D00D               	goto	i2l957
 28364  012584                     i2l954:
 28365                           
 28366                           ;main.c: 255: else {
 28367                           ;main.c: 257: Ipk = 0.0;
 28368  012584  0E00               	movlw	0
 28369  012586  0100               	movlb	0	; () banked
 28370  012588  6FD1               	movwf	_Ipk& (0+255),b	;volatile
 28371  01258A  0E00               	movlw	0
 28372  01258C  6FD2               	movwf	(_Ipk+1)& (0+255),b	;volatile
 28373  01258E  0E00               	movlw	0
 28374  012590  6FD3               	movwf	(_Ipk+2)& (0+255),b	;volatile
 28375                           
 28376                           ;main.c: 258: Vpk = 0.0;
 28377  012592  0E00               	movlw	0
 28378  012594  6FD4               	movwf	_Vpk& (0+255),b	;volatile
 28379  012596  0E00               	movlw	0
 28380  012598  6FD5               	movwf	(_Vpk+1)& (0+255),b	;volatile
 28381  01259A  0E00               	movlw	0
 28382  01259C  6FD6               	movwf	(_Vpk+2)& (0+255),b	;volatile
 28383  01259E                     i2l957:
 28384                           
 28385                           ;main.c: 260: }
 28386                           ;main.c: 262: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 28387                           
 28388                           ; BSR set to: 0
 28389  01259E  C0FB  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 28390  0125A2  C0FC  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 28391  0125A6  C0FD  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 28392  0125AA  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 28393  0125AE  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 28394  0125B2  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 28395  0125B6  ECB7  F09F         	call	_peakToRMS	;wreg free
 28396  0125BA  C094  F0B0         	movff	?_peakToRMS,_ADCPostProcessingCallback$4006
 28397  0125BE  C095  F0B1         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4006+1
 28398  0125C2  C096  F0B2         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4006+2
 28399                           
 28400                           ;main.c: 260: }
 28401                           ;main.c: 262: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 28402  0125C6  C0B0  F040         	movff	_ADCPostProcessingCallback$4006,i2___ftadd@f1
 28403  0125CA  C0B1  F041         	movff	_ADCPostProcessingCallback$4006+1,i2___ftadd@f1+1
 28404  0125CE  C0B2  F042         	movff	_ADCPostProcessingCallback$4006+2,i2___ftadd@f1+2
 28405  0125D2  C0F0  F043         	movff	_Irms_offset,i2___ftadd@f2
 28406  0125D6  C0F1  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 28407  0125DA  C0F2  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 28408  0125DE  EC52  F0A2         	call	i2___ftadd	;wreg free
 28409  0125E2  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 28410  0125E6  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 28411  0125EA  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 28412                           
 28413                           ;main.c: 263: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 28414  0125EE  C0D4  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 28415  0125F2  C0D5  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 28416  0125F6  C0D6  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 28417  0125FA  C0FB  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 28418  0125FE  C0FC  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 28419  012602  C0FD  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 28420  012606  ECB7  F09F         	call	_peakToRMS	;wreg free
 28421  01260A  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 28422  01260E  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 28423  012612  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 28424                           
 28425                           ;main.c: 264: Avg_Power = Vrms * Irms;
 28426  012616  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 28427  01261A  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 28428  01261E  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 28429  012622  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 28430  012626  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 28431  01262A  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 28432  01262E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28433  012632  D052               	goto	L10
 28434  012634                     i2l953:
 28435                           
 28436                           ;main.c: 269: else {
 28437                           ;main.c: 271: Ipk = Imeas;
 28438  012634  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 28439  012638  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 28440  01263C  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 28441                           
 28442                           ;main.c: 272: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 28443  012640  0E00               	movlw	0
 28444  012642  0100               	movlb	0	; () banked
 28445  012644  6F97               	movwf	peakToRMS@Angle& (0+255),b
 28446  012646  0E00               	movlw	0
 28447  012648  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 28448  01264A  0E00               	movlw	0
 28449  01264C  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 28450  01264E  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 28451  012652  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 28452  012656  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 28453  01265A  ECB7  F09F         	call	_peakToRMS	;wreg free
 28454  01265E  C094  F0B0         	movff	?_peakToRMS,_ADCPostProcessingCallback$4006
 28455  012662  C095  F0B1         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4006+1
 28456  012666  C096  F0B2         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4006+2
 28457                           
 28458                           ;main.c: 272: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 28459  01266A  C0B0  F040         	movff	_ADCPostProcessingCallback$4006,i2___ftadd@f1
 28460  01266E  C0B1  F041         	movff	_ADCPostProcessingCallback$4006+1,i2___ftadd@f1+1
 28461  012672  C0B2  F042         	movff	_ADCPostProcessingCallback$4006+2,i2___ftadd@f1+2
 28462  012676  C0F0  F043         	movff	_Irms_offset,i2___ftadd@f2
 28463  01267A  C0F1  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 28464  01267E  C0F2  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 28465  012682  EC52  F0A2         	call	i2___ftadd	;wreg free
 28466  012686  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 28467  01268A  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 28468  01268E  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 28469                           
 28470                           ;main.c: 273: Vrms = peakToRMS(Vpk_const, 0.0);
 28471  012692  C0F3  F094         	movff	_Vpk_const,peakToRMS@Peak
 28472  012696  C0F4  F095         	movff	_Vpk_const+1,peakToRMS@Peak+1
 28473  01269A  C0F5  F096         	movff	_Vpk_const+2,peakToRMS@Peak+2
 28474  01269E  0E00               	movlw	0
 28475  0126A0  0100               	movlb	0	; () banked
 28476  0126A2  6F97               	movwf	peakToRMS@Angle& (0+255),b
 28477  0126A4  0E00               	movlw	0
 28478  0126A6  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 28479  0126A8  0E00               	movlw	0
 28480  0126AA  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 28481  0126AC  ECB7  F09F         	call	_peakToRMS	;wreg free
 28482  0126B0  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 28483  0126B4  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 28484  0126B8  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 28485                           
 28486                           ;main.c: 274: Avg_Power = Vrms * Irms;
 28487  0126BC  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 28488  0126C0  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 28489  0126C4  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 28490  0126C8  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 28491  0126CC  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 28492  0126D0  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 28493  0126D4  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28494  0126D8                     L10:
 28495  0126D8  C027  F1B7         	movff	?i2___ftmul,_Avg_Power	;volatile
 28496  0126DC  C028  F1B8         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 28497  0126E0  C029  F1B9         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 28498                           
 28499                           ;main.c: 276: }
 28500                           ;main.c: 278: if (Irms > 5.0) {
 28501  0126E4  0E00               	movlw	0
 28502  0126E6  6E2A               	movwf	i2___ftge@ff1,c
 28503  0126E8  0EA0               	movlw	160
 28504  0126EA  6E2B               	movwf	i2___ftge@ff1+1,c
 28505  0126EC  0E40               	movlw	64
 28506  0126EE  6E2C               	movwf	i2___ftge@ff1+2,c
 28507  0126F0  C0CB  F02D         	movff	_Irms,i2___ftge@ff2	;volatile
 28508  0126F4  C0CC  F02E         	movff	_Irms+1,i2___ftge@ff2+1	;volatile
 28509  0126F8  C0CD  F02F         	movff	_Irms+2,i2___ftge@ff2+2	;volatile
 28510  0126FC  ECA6  F0AD         	call	i2___ftge	;wreg free
 28511  012700  B0D8               	btfsc	status,0,c
 28512  012702  0012               	return	
 28513                           
 28514                           ;main.c: 280: LATFbits.LATF3 = 1;
 28515  012704  867E               	bsf	3966,3,c	;volatile
 28516                           
 28517                           ;main.c: 281: adc_error_flag = 1;
 28518  012706  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28519                           
 28520                           ;main.c: 283: PIE5bits.TMR7IE == 0;
 28521  012708  010E               	movlb	14	; () banked
 28522  01270A  512E               	movf	46,w,b	;volatile
 28523                           
 28524                           ; BSR set to: 14
 28525                           ;main.c: 284: TMR7_StopTimer();
 28526  01270C  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28527                           
 28528                           ;main.c: 287: }
 28529                           ;main.c: 289: break;
 28530                           
 28531                           ;main.c: 285: return;
 28532  012710  0012               	return	
 28533  012712                     
 28534                           ;main.c: 294: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 28535  012712  0EC0               	movlw	192
 28536  012714  6E18               	movwf	i2___ftdiv@f2,c
 28537  012716  0E7F               	movlw	127
 28538  012718  6E19               	movwf	i2___ftdiv@f2+1,c
 28539  01271A  0E44               	movlw	68
 28540  01271C  6E1A               	movwf	i2___ftdiv@f2+2,c
 28541  01271E  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 28542  012722  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 28543  012726  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 28544  01272A  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 28545  01272E  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 28546  012732  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 28547  012736  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 28548  01273A  ECDB  F0B6         	call	_ADCC_GetConversionResult	;wreg free
 28549  01273E  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28550  012742  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28551  012746  EC4C  F0B6         	call	___lwtoft	;wreg free
 28552  01274A  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28553  01274E  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28554  012752  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28555  012756  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28556  01275A  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$4005
 28557  01275E  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4005+1
 28558  012762  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4005+2
 28559                           
 28560                           ;main.c: 294: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 28561  012766  C0B3  F027         	movff	_ADCPostProcessingCallback$4005,i2___ftmul@f1
 28562  01276A  C0B4  F028         	movff	_ADCPostProcessingCallback$4005+1,i2___ftmul@f1+1
 28563  01276E  C0B5  F029         	movff	_ADCPostProcessingCallback$4005+2,i2___ftmul@f1+2
 28564  012772  0EF8               	movlw	248
 28565  012774  6E2A               	movwf	i2___ftmul@f2,c
 28566  012776  0E80               	movlw	128
 28567  012778  6E2B               	movwf	i2___ftmul@f2+1,c
 28568  01277A  0E40               	movlw	64
 28569  01277C  6E2C               	movwf	i2___ftmul@f2+2,c
 28570  01277E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28571  012782  C027  F0DA         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 28572  012786  C028  F0DB         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 28573  01278A  C029  F0DC         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 28574                           
 28575                           ;main.c: 296: if (POS12_ADC_Result > 13.6) {
 28576  01278E  0E9A               	movlw	154
 28577  012790  6E2A               	movwf	i2___ftge@ff1,c
 28578  012792  0E59               	movlw	89
 28579  012794  6E2B               	movwf	i2___ftge@ff1+1,c
 28580  012796  0E41               	movlw	65
 28581  012798  6E2C               	movwf	i2___ftge@ff1+2,c
 28582  01279A  C0DA  F02D         	movff	_POS12_ADC_Result,i2___ftge@ff2	;volatile
 28583  01279E  C0DB  F02E         	movff	_POS12_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28584  0127A2  C0DC  F02F         	movff	_POS12_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28585  0127A6  ECA6  F0AD         	call	i2___ftge	;wreg free
 28586  0127AA  B0D8               	btfsc	status,0,c
 28587  0127AC  0012               	return	
 28588                           
 28589                           ;main.c: 298: LATFbits.LATF3 = 1;
 28590  0127AE  867E               	bsf	3966,3,c	;volatile
 28591                           
 28592                           ;main.c: 299: adc_error_flag = 1;
 28593  0127B0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28594                           
 28595                           ;main.c: 301: PIE5bits.TMR7IE == 0;
 28596  0127B2  010E               	movlb	14	; () banked
 28597  0127B4  512E               	movf	46,w,b	;volatile
 28598                           
 28599                           ; BSR set to: 14
 28600                           ;main.c: 302: TMR7_StopTimer();
 28601  0127B6  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28602                           
 28603                           ;main.c: 305: }
 28604                           ;main.c: 307: break;
 28605                           
 28606                           ;main.c: 303: return;
 28607  0127BA  0012               	return	
 28608  0127BC                     
 28609                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 28610  0127BC  0E00               	movlw	0
 28611  0127BE  6E18               	movwf	i2___ftdiv@f2,c
 28612  0127C0  0E00               	movlw	0
 28613  0127C2  6E19               	movwf	i2___ftdiv@f2+1,c
 28614  0127C4  0E40               	movlw	64
 28615  0127C6  6E1A               	movwf	i2___ftdiv@f2+2,c
 28616  0127C8  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 28617  0127CC  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 28618  0127D0  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 28619  0127D4  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 28620  0127D8  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 28621  0127DC  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 28622  0127E0  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 28623  0127E4  0E00               	movlw	0
 28624  0127E6  6E43               	movwf	i2___ftadd@f2,c
 28625  0127E8  0E80               	movlw	128
 28626  0127EA  6E44               	movwf	i2___ftadd@f2+1,c
 28627  0127EC  0E3F               	movlw	63
 28628  0127EE  6E45               	movwf	i2___ftadd@f2+2,c
 28629  0127F0  0EC0               	movlw	192
 28630  0127F2  6E18               	movwf	i2___ftdiv@f2,c
 28631  0127F4  0E7F               	movlw	127
 28632  0127F6  6E19               	movwf	i2___ftdiv@f2+1,c
 28633  0127F8  0E44               	movlw	68
 28634  0127FA  6E1A               	movwf	i2___ftdiv@f2+2,c
 28635  0127FC  ECDB  F0B6         	call	_ADCC_GetConversionResult	;wreg free
 28636  012800  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28637  012804  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28638  012808  EC4C  F0B6         	call	___lwtoft	;wreg free
 28639  01280C  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 28640  012810  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 28641  012814  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 28642  012818  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 28643  01281C  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 28644  012820  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 28645  012824  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 28646  012828  EC3A  F0B6         	call	i2___ftneg	;wreg free
 28647  01282C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 28648  012830  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 28649  012834  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 28650  012838  EC52  F0A2         	call	i2___ftadd	;wreg free
 28651  01283C  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 28652  012840  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 28653  012844  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 28654  012848  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28655  01284C  C027  F0A6         	movff	?i2___ftmul,_ADCPostProcessingCallback$4007
 28656  012850  C028  F0A7         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$4007+1
 28657  012854  C029  F0A8         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$4007+2
 28658                           
 28659                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 28660  012858  0E04               	movlw	4
 28661  01285A  6E18               	movwf	i2___ftdiv@f2,c
 28662  01285C  0EAD               	movlw	173
 28663  01285E  6E19               	movwf	i2___ftdiv@f2+1,c
 28664  012860  0E3A               	movlw	58
 28665  012862  6E1A               	movwf	i2___ftdiv@f2+2,c
 28666  012864  0EB4               	movlw	180
 28667  012866  6E43               	movwf	i2___ftadd@f2,c
 28668  012868  0E28               	movlw	40
 28669  01286A  6E44               	movwf	i2___ftadd@f2+1,c
 28670  01286C  0E3F               	movlw	63
 28671  01286E  6E45               	movwf	i2___ftadd@f2+2,c
 28672  012870  C0A6  F024         	movff	_ADCPostProcessingCallback$4007,i2___ftneg@f1
 28673  012874  C0A7  F025         	movff	_ADCPostProcessingCallback$4007+1,i2___ftneg@f1+1
 28674  012878  C0A8  F026         	movff	_ADCPostProcessingCallback$4007+2,i2___ftneg@f1+2
 28675  01287C  EC3A  F0B6         	call	i2___ftneg	;wreg free
 28676  012880  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 28677  012884  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 28678  012888  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 28679  01288C  EC52  F0A2         	call	i2___ftadd	;wreg free
 28680  012890  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 28681  012894  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 28682  012898  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 28683  01289C  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 28684  0128A0  C015  F0A9         	movff	?i2___ftdiv,_ADCPostProcessingCallback$4008
 28685  0128A4  C016  F0AA         	movff	?i2___ftdiv+1,_ADCPostProcessingCallback$4008+1
 28686  0128A8  C017  F0AB         	movff	?i2___ftdiv+2,_ADCPostProcessingCallback$4008+2
 28687                           
 28688                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 28689  0128AC  C0F6  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 28690  0128B0  C0F7  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 28691  0128B4  C0F8  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 28692  0128B8  C0A9  F040         	movff	_ADCPostProcessingCallback$4008,i2___ftadd@f1
 28693  0128BC  C0AA  F041         	movff	_ADCPostProcessingCallback$4008+1,i2___ftadd@f1+1
 28694  0128C0  C0AB  F042         	movff	_ADCPostProcessingCallback$4008+2,i2___ftadd@f1+2
 28695  0128C4  EC52  F0A2         	call	i2___ftadd	;wreg free
 28696  0128C8  C040  F0AC         	movff	?i2___ftadd,_ADCPostProcessingCallback$4009
 28697  0128CC  C041  F0AD         	movff	?i2___ftadd+1,_ADCPostProcessingCallback$4009+1
 28698  0128D0  C042  F0AE         	movff	?i2___ftadd+2,_ADCPostProcessingCallback$4009+2
 28699                           
 28700                           ;main.c: 312: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 28701  0128D4  C0AC  F040         	movff	_ADCPostProcessingCallback$4009,i2___ftadd@f1
 28702  0128D8  C0AD  F041         	movff	_ADCPostProcessingCallback$4009+1,i2___ftadd@f1+1
 28703  0128DC  C0AE  F042         	movff	_ADCPostProcessingCallback$4009+2,i2___ftadd@f1+2
 28704  0128E0  0E00               	movlw	0
 28705  0128E2  6E43               	movwf	i2___ftadd@f2,c
 28706  0128E4  0E20               	movlw	32
 28707  0128E6  6E44               	movwf	i2___ftadd@f2+1,c
 28708  0128E8  0EC2               	movlw	194
 28709  0128EA  6E45               	movwf	i2___ftadd@f2+2,c
 28710  0128EC  EC52  F0A2         	call	i2___ftadd	;wreg free
 28711  0128F0  C040  F0D7         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 28712  0128F4  C041  F0D8         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 28713  0128F8  C042  F0D9         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 28714                           
 28715                           ;main.c: 314: if (Temp_ADC_Result > 40.0) {
 28716  0128FC  0E00               	movlw	0
 28717  0128FE  6E2A               	movwf	i2___ftge@ff1,c
 28718  012900  0E20               	movlw	32
 28719  012902  6E2B               	movwf	i2___ftge@ff1+1,c
 28720  012904  0E42               	movlw	66
 28721  012906  6E2C               	movwf	i2___ftge@ff1+2,c
 28722  012908  C0D7  F02D         	movff	_Temp_ADC_Result,i2___ftge@ff2	;volatile
 28723  01290C  C0D8  F02E         	movff	_Temp_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28724  012910  C0D9  F02F         	movff	_Temp_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28725  012914  ECA6  F0AD         	call	i2___ftge	;wreg free
 28726  012918  B0D8               	btfsc	status,0,c
 28727  01291A  0012               	return	
 28728                           
 28729                           ;main.c: 316: LATFbits.LATF3 = 1;
 28730  01291C  867E               	bsf	3966,3,c	;volatile
 28731                           
 28732                           ;main.c: 317: adc_error_flag = 1;
 28733  01291E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28734                           
 28735                           ;main.c: 319: PIE5bits.TMR7IE == 0;
 28736  012920  010E               	movlb	14	; () banked
 28737  012922  512E               	movf	46,w,b	;volatile
 28738                           
 28739                           ; BSR set to: 14
 28740                           ;main.c: 320: TMR7_StopTimer();
 28741  012924  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28742                           
 28743                           ;main.c: 323: }
 28744                           ;main.c: 325: break;
 28745                           
 28746                           ;main.c: 321: return;
 28747  012928  0012               	return	
 28748  01292A                     i2l964:
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;main.c: 330: LATFbits.LATF3 = 1;
 28752  01292A  867E               	bsf	3966,3,c	;volatile
 28753                           
 28754                           ;main.c: 331: adc_error_flag = 1;
 28755  01292C  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;main.c: 333: PIE5bits.TMR7IE == 0;
 28759  01292E  010E               	movlb	14	; () banked
 28760  012930  512E               	movf	46,w,b	;volatile
 28761                           
 28762                           ; BSR set to: 14
 28763                           ;main.c: 334: TMR7_StopTimer();
 28764  012932  EC66  F0B7         	call	i2_TMR7_StopTimer	;wreg free
 28765                           
 28766                           ;main.c: 337: }
 28767                           
 28768                           ;main.c: 335: break;
 28769  012936  0012               	return	
 28770  012938                     i2l941:
 28771  012938  0100               	movlb	0	; () banked
 28772  01293A  51AF               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 28773                           
 28774                           ; Switch size 1, requested type "space"
 28775                           ; Number of cases is 6, Range of values is 0 to 63
 28776                           ; switch strategies available:
 28777                           ; Name         Instructions Cycles
 28778                           ; simple_byte           19    10 (average)
 28779                           ;	Chosen strategy is simple_byte
 28780  01293C  0A00               	xorlw	0	; case 0
 28781  01293E  B4D8               	btfsc	status,2,c
 28782  012940  D5B6               	goto	i2l952
 28783  012942  0A04               	xorlw	4	; case 4
 28784  012944  B4D8               	btfsc	status,2,c
 28785  012946  D6E5               	goto	i2l960
 28786  012948  0A26               	xorlw	38	; case 34
 28787  01294A  B4D8               	btfsc	status,2,c
 28788  01294C  D569               	goto	i2l950
 28789  01294E  0A1E               	xorlw	30	; case 60
 28790  012950  B4D8               	btfsc	status,2,c
 28791  012952  D4CE               	goto	i2l942
 28792  012954  0A01               	xorlw	1	; case 61
 28793  012956  B4D8               	btfsc	status,2,c
 28794  012958  D731               	goto	i2l962
 28795  01295A  0A02               	xorlw	2	; case 63
 28796  01295C  B4D8               	btfsc	status,2,c
 28797  01295E  D4FB               	goto	i2l946
 28798  012960  D7E4               	goto	i2l964
 28799  012962                     __end_of_ADCPostProcessingCallback:
 28800                           	opt stack 0
 28801                           tosu	equ	0xFFF
 28802                           tosh	equ	0xFFE
 28803                           tosl	equ	0xFFD
 28804                           pclatu	equ	0xFFB
 28805                           pclath	equ	0xFFA
 28806                           tblptru	equ	0xFF8
 28807                           tblptrh	equ	0xFF7
 28808                           tblptrl	equ	0xFF6
 28809                           tablat	equ	0xFF5
 28810                           prodh	equ	0xFF4
 28811                           prodl	equ	0xFF3
 28812                           intcon	equ	0xFF2
 28813                           indf0	equ	0xFEF
 28814                           postinc0	equ	0xFEE
 28815                           fsr0h	equ	0xFEA
 28816                           fsr0l	equ	0xFE9
 28817                           wreg	equ	0xFE8
 28818                           indf1	equ	0xFE7
 28819                           postdec1	equ	0xFE5
 28820                           plusw1	equ	0xFE3
 28821                           fsr1h	equ	0xFE2
 28822                           fsr1l	equ	0xFE1
 28823                           bsr	equ	0xFE0
 28824                           indf2	equ	0xFDF
 28825                           postinc2	equ	0xFDE
 28826                           postdec2	equ	0xFDD
 28827                           plusw2	equ	0xFDB
 28828                           fsr2h	equ	0xFDA
 28829                           fsr2l	equ	0xFD9
 28830                           status	equ	0xFD8
 28831                           
 28832 ;; *************** function i2_TMR7_StopTimer *****************
 28833 ;; Defined at:
 28834 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 28835 ;; Parameters:    Size  Location     Type
 28836 ;;		None
 28837 ;; Auto vars:     Size  Location     Type
 28838 ;;		None
 28839 ;; Return value:  Size  Location     Type
 28840 ;;                  1    wreg      void 
 28841 ;; Registers used:
 28842 ;;		None
 28843 ;; Tracked objects:
 28844 ;;		On entry : 0/0
 28845 ;;		On exit  : 0/0
 28846 ;;		Unchanged: 0/0
 28847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28852 ;;Total ram usage:        0 bytes
 28853 ;; Hardware stack levels used:    1
 28854 ;; This function calls:
 28855 ;;		Nothing
 28856 ;; This function is called by:
 28857 ;;		_ADCPostProcessingCallback
 28858 ;; This function uses a non-reentrant model
 28859 ;;
 28860                           
 28861                           	psect	text103
 28862  016ECC                     __ptext103:
 28863                           	opt stack 0
 28864  016ECC                     i2_TMR7_StopTimer:
 28865                           	opt stack 15
 28866                           
 28867                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 28868                           
 28869                           ;incstack = 0
 28870  016ECC  010F               	movlb	15	; () banked
 28871  016ECE  9130               	bcf	48,0,b	;volatile
 28872                           
 28873                           ; BSR set to: 15
 28874  016ED0  0012               	return		;funcret
 28875  016ED2                     __end_ofi2_TMR7_StopTimer:
 28876                           	opt stack 0
 28877                           tosu	equ	0xFFF
 28878                           tosh	equ	0xFFE
 28879                           tosl	equ	0xFFD
 28880                           pclatu	equ	0xFFB
 28881                           pclath	equ	0xFFA
 28882                           tblptru	equ	0xFF8
 28883                           tblptrh	equ	0xFF7
 28884                           tblptrl	equ	0xFF6
 28885                           tablat	equ	0xFF5
 28886                           prodh	equ	0xFF4
 28887                           prodl	equ	0xFF3
 28888                           intcon	equ	0xFF2
 28889                           indf0	equ	0xFEF
 28890                           postinc0	equ	0xFEE
 28891                           fsr0h	equ	0xFEA
 28892                           fsr0l	equ	0xFE9
 28893                           wreg	equ	0xFE8
 28894                           indf1	equ	0xFE7
 28895                           postdec1	equ	0xFE5
 28896                           plusw1	equ	0xFE3
 28897                           fsr1h	equ	0xFE2
 28898                           fsr1l	equ	0xFE1
 28899                           bsr	equ	0xFE0
 28900                           indf2	equ	0xFDF
 28901                           postinc2	equ	0xFDE
 28902                           postdec2	equ	0xFDD
 28903                           plusw2	equ	0xFDB
 28904                           fsr2h	equ	0xFDA
 28905                           fsr2l	equ	0xFD9
 28906                           status	equ	0xFD8
 28907                           
 28908 ;; *************** function _peakToRMS *****************
 28909 ;; Defined at:
 28910 ;;		line 103 in file "main.c"
 28911 ;; Parameters:    Size  Location     Type
 28912 ;;  Peak            3   52[BANK0 ] void 
 28913 ;;  Angle           3   55[BANK0 ] void 
 28914 ;; Auto vars:     Size  Location     Type
 28915 ;;  RMS             3   67[BANK0 ] void 
 28916 ;; Return value:  Size  Location     Type
 28917 ;;                  3   52[BANK0 ] void 
 28918 ;; Registers used:
 28919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28920 ;; Tracked objects:
 28921 ;;		On entry : 0/0
 28922 ;;		On exit  : 0/0
 28923 ;;		Unchanged: 0/0
 28924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28925 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28926 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28928 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28929 ;;Total ram usage:       18 bytes
 28930 ;; Hardware stack levels used:    1
 28931 ;; Hardware stack levels required when called:    6
 28932 ;; This function calls:
 28933 ;;		_acos
 28934 ;;		_sin
 28935 ;;		_sqrt
 28936 ;;		i2___ftadd
 28937 ;;		i2___ftdiv
 28938 ;;		i2___ftmul
 28939 ;;		i2___ftneg
 28940 ;; This function is called by:
 28941 ;;		_ADCPostProcessingCallback
 28942 ;; This function uses a non-reentrant model
 28943 ;;
 28944                           
 28945                           	psect	text104
 28946  013F6E                     __ptext104:
 28947                           	opt stack 0
 28948  013F6E                     _peakToRMS:
 28949                           	opt stack 9
 28950                           
 28951                           ;main.c: 106: double RMS = 0.0;
 28952                           
 28953                           ; BSR set to: 15
 28954                           ;incstack = 0
 28955  013F6E  0E00               	movlw	0
 28956  013F70  0100               	movlb	0	; () banked
 28957  013F72  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 28958  013F74  0E00               	movlw	0
 28959  013F76  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 28960  013F78  0E00               	movlw	0
 28961  013F7A  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 28962                           
 28963                           ; BSR set to: 0
 28964                           ;main.c: 109: RMS = 2.0 * acos(-1.0);
 28965  013F7C  0E00               	movlw	0
 28966  013F7E  6F8E               	movwf	acos@x& (0+255),b
 28967  013F80  0E80               	movlw	128
 28968  013F82  6F8F               	movwf	(acos@x+1)& (0+255),b
 28969  013F84  0EBF               	movlw	191
 28970  013F86  6F90               	movwf	(acos@x+2)& (0+255),b
 28971  013F88  EC90  F0B2         	call	_acos	;wreg free
 28972  013F8C  C08E  F0A0         	movff	?_acos,_peakToRMS$4002
 28973  013F90  C08F  F0A1         	movff	?_acos+1,_peakToRMS$4002+1
 28974  013F94  C090  F0A2         	movff	?_acos+2,_peakToRMS$4002+2
 28975                           
 28976                           ;main.c: 109: RMS = 2.0 * acos(-1.0);
 28977  013F98  C0A0  F027         	movff	_peakToRMS$4002,i2___ftmul@f1
 28978  013F9C  C0A1  F028         	movff	_peakToRMS$4002+1,i2___ftmul@f1+1
 28979  013FA0  C0A2  F029         	movff	_peakToRMS$4002+2,i2___ftmul@f1+2
 28980  013FA4  0E00               	movlw	0
 28981  013FA6  6E2A               	movwf	i2___ftmul@f2,c
 28982  013FA8  0E00               	movlw	0
 28983  013FAA  6E2B               	movwf	i2___ftmul@f2+1,c
 28984  013FAC  0E40               	movlw	64
 28985  013FAE  6E2C               	movwf	i2___ftmul@f2+2,c
 28986  013FB0  EC4E  F0A8         	call	i2___ftmul	;wreg free
 28987  013FB4  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 28988  013FB8  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 28989  013FBC  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 28990                           
 28991                           ;main.c: 110: RMS = RMS - (2.0 * Angle);
 28992  013FC0  0E00               	movlw	0
 28993  013FC2  6E2A               	movwf	i2___ftmul@f2,c
 28994  013FC4  0E00               	movlw	0
 28995  013FC6  6E2B               	movwf	i2___ftmul@f2+1,c
 28996  013FC8  0E40               	movlw	64
 28997  013FCA  6E2C               	movwf	i2___ftmul@f2+2,c
 28998  013FCC  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 28999  013FD0  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 29000  013FD4  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 29001  013FD8  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29002  013FDC  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 29003  013FE0  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 29004  013FE4  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 29005  013FE8  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29006  013FEC  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29007  013FF0  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29008  013FF4  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29009  013FF8  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 29010  013FFC  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 29011  014000  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 29012  014004  EC52  F0A2         	call	i2___ftadd	;wreg free
 29013  014008  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 29014  01400C  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 29015  014010  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 29016                           
 29017                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 29018  014014  0E00               	movlw	0
 29019  014016  6E2A               	movwf	i2___ftmul@f2,c
 29020  014018  0E00               	movlw	0
 29021  01401A  6E2B               	movwf	i2___ftmul@f2+1,c
 29022  01401C  0E40               	movlw	64
 29023  01401E  6E2C               	movwf	i2___ftmul@f2+2,c
 29024  014020  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 29025  014024  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 29026  014028  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 29027  01402C  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29028  014030  C027  F09A         	movff	?i2___ftmul,_peakToRMS$4003
 29029  014034  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$4003+1
 29030  014038  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$4003+2
 29031                           
 29032                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 29033  01403C  C09A  F066         	movff	_peakToRMS$4003,sin@f
 29034  014040  C09B  F067         	movff	_peakToRMS$4003+1,sin@f+1
 29035  014044  C09C  F068         	movff	_peakToRMS$4003+2,sin@f+2
 29036  014048  EC88  F09E         	call	_sin	;wreg free
 29037  01404C  C066  F09D         	movff	?_sin,_peakToRMS$4004
 29038  014050  C067  F09E         	movff	?_sin+1,_peakToRMS$4004+1
 29039  014054  C068  F09F         	movff	?_sin+2,_peakToRMS$4004+2
 29040                           
 29041                           ;main.c: 111: RMS = RMS + sin(2.0 * Angle);
 29042  014058  C09D  F040         	movff	_peakToRMS$4004,i2___ftadd@f1
 29043  01405C  C09E  F041         	movff	_peakToRMS$4004+1,i2___ftadd@f1+1
 29044  014060  C09F  F042         	movff	_peakToRMS$4004+2,i2___ftadd@f1+2
 29045  014064  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 29046  014068  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 29047  01406C  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 29048  014070  EC52  F0A2         	call	i2___ftadd	;wreg free
 29049  014074  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 29050  014078  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 29051  01407C  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 29052                           
 29053                           ;main.c: 112: RMS = RMS / (4.0 * acos(-1.0));
 29054  014080  0E00               	movlw	0
 29055  014082  0100               	movlb	0	; () banked
 29056  014084  6F8E               	movwf	acos@x& (0+255),b
 29057  014086  0E80               	movlw	128
 29058  014088  6F8F               	movwf	(acos@x+1)& (0+255),b
 29059  01408A  0EBF               	movlw	191
 29060  01408C  6F90               	movwf	(acos@x+2)& (0+255),b
 29061  01408E  EC90  F0B2         	call	_acos	;wreg free
 29062  014092  C08E  F0A0         	movff	?_acos,_peakToRMS$4002
 29063  014096  C08F  F0A1         	movff	?_acos+1,_peakToRMS$4002+1
 29064  01409A  C090  F0A2         	movff	?_acos+2,_peakToRMS$4002+2
 29065                           
 29066                           ;main.c: 112: RMS = RMS / (4.0 * acos(-1.0));
 29067  01409E  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 29068  0140A2  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 29069  0140A6  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 29070  0140AA  0E00               	movlw	0
 29071  0140AC  6E2A               	movwf	i2___ftmul@f2,c
 29072  0140AE  0E80               	movlw	128
 29073  0140B0  6E2B               	movwf	i2___ftmul@f2+1,c
 29074  0140B2  0E40               	movlw	64
 29075  0140B4  6E2C               	movwf	i2___ftmul@f2+2,c
 29076  0140B6  C0A0  F027         	movff	_peakToRMS$4002,i2___ftmul@f1
 29077  0140BA  C0A1  F028         	movff	_peakToRMS$4002+1,i2___ftmul@f1+1
 29078  0140BE  C0A2  F029         	movff	_peakToRMS$4002+2,i2___ftmul@f1+2
 29079  0140C2  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29080  0140C6  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 29081  0140CA  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 29082  0140CE  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 29083  0140D2  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 29084  0140D6  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 29085  0140DA  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 29086  0140DE  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 29087                           
 29088                           ;main.c: 113: RMS = sqrt(RMS);
 29089  0140E2  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 29090  0140E6  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 29091  0140EA  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 29092  0140EE  EC28  F0A3         	call	_sqrt	;wreg free
 29093  0140F2  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 29094  0140F6  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 29095  0140FA  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 29096                           
 29097                           ;main.c: 114: RMS = Peak * RMS;
 29098  0140FE  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 29099  014102  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 29100  014106  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 29101  01410A  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 29102  01410E  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 29103  014112  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 29104  014116  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29105  01411A  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 29106  01411E  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 29107  014122  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 29108                           
 29109                           ;main.c: 115: return RMS;
 29110  014126  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 29111  01412A  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 29112  01412E  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 29113  014132  0012               	return	
 29114  014134                     __end_of_peakToRMS:
 29115                           	opt stack 0
 29116                           tosu	equ	0xFFF
 29117                           tosh	equ	0xFFE
 29118                           tosl	equ	0xFFD
 29119                           pclatu	equ	0xFFB
 29120                           pclath	equ	0xFFA
 29121                           tblptru	equ	0xFF8
 29122                           tblptrh	equ	0xFF7
 29123                           tblptrl	equ	0xFF6
 29124                           tablat	equ	0xFF5
 29125                           prodh	equ	0xFF4
 29126                           prodl	equ	0xFF3
 29127                           intcon	equ	0xFF2
 29128                           indf0	equ	0xFEF
 29129                           postinc0	equ	0xFEE
 29130                           fsr0h	equ	0xFEA
 29131                           fsr0l	equ	0xFE9
 29132                           wreg	equ	0xFE8
 29133                           indf1	equ	0xFE7
 29134                           postdec1	equ	0xFE5
 29135                           plusw1	equ	0xFE3
 29136                           fsr1h	equ	0xFE2
 29137                           fsr1l	equ	0xFE1
 29138                           bsr	equ	0xFE0
 29139                           indf2	equ	0xFDF
 29140                           postinc2	equ	0xFDE
 29141                           postdec2	equ	0xFDD
 29142                           plusw2	equ	0xFDB
 29143                           fsr2h	equ	0xFDA
 29144                           fsr2l	equ	0xFD9
 29145                           status	equ	0xFD8
 29146                           
 29147 ;; *************** function _acos *****************
 29148 ;; Defined at:
 29149 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 29150 ;; Parameters:    Size  Location     Type
 29151 ;;  x               3   46[BANK0 ] void 
 29152 ;; Auto vars:     Size  Location     Type
 29153 ;;		None
 29154 ;; Return value:  Size  Location     Type
 29155 ;;                  3   46[BANK0 ] void 
 29156 ;; Registers used:
 29157 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29158 ;; Tracked objects:
 29159 ;;		On entry : 0/0
 29160 ;;		On exit  : 0/0
 29161 ;;		Unchanged: 0/0
 29162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29163 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29167 ;;Total ram usage:        6 bytes
 29168 ;; Hardware stack levels used:    1
 29169 ;; Hardware stack levels required when called:    5
 29170 ;; This function calls:
 29171 ;;		_asin
 29172 ;;		i2___ftadd
 29173 ;;		i2___ftneg
 29174 ;; This function is called by:
 29175 ;;		_peakToRMS
 29176 ;; This function uses a non-reentrant model
 29177 ;;
 29178                           
 29179                           	psect	text105
 29180  016520                     __ptext105:
 29181                           	opt stack 0
 29182  016520                     _acos:
 29183                           	opt stack 9
 29184                           
 29185                           ;incstack = 0
 29186  016520  C08E  F079         	movff	acos@x,asin@x
 29187  016524  C08F  F07A         	movff	acos@x+1,asin@x+1
 29188  016528  C090  F07B         	movff	acos@x+2,asin@x+2
 29189  01652C  EC52  F09D         	call	_asin	;wreg free
 29190  016530  C079  F091         	movff	?_asin,_acos$4010
 29191  016534  C07A  F092         	movff	?_asin+1,_acos$4010+1
 29192  016538  C07B  F093         	movff	?_asin+2,_acos$4010+2
 29193  01653C  C091  F024         	movff	_acos$4010,i2___ftneg@f1
 29194  016540  C092  F025         	movff	_acos$4010+1,i2___ftneg@f1+1
 29195  016544  C093  F026         	movff	_acos$4010+2,i2___ftneg@f1+2
 29196  016548  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29197  01654C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29198  016550  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29199  016554  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29200  016558  0E10               	movlw	16
 29201  01655A  6E43               	movwf	i2___ftadd@f2,c
 29202  01655C  0EC9               	movlw	201
 29203  01655E  6E44               	movwf	i2___ftadd@f2+1,c
 29204  016560  0E3F               	movlw	63
 29205  016562  6E45               	movwf	i2___ftadd@f2+2,c
 29206  016564  EC52  F0A2         	call	i2___ftadd	;wreg free
 29207  016568  C040  F08E         	movff	?i2___ftadd,?_acos
 29208  01656C  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 29209  016570  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 29210  016574  0012               	return	
 29211  016576                     __end_of_acos:
 29212                           	opt stack 0
 29213                           tosu	equ	0xFFF
 29214                           tosh	equ	0xFFE
 29215                           tosl	equ	0xFFD
 29216                           pclatu	equ	0xFFB
 29217                           pclath	equ	0xFFA
 29218                           tblptru	equ	0xFF8
 29219                           tblptrh	equ	0xFF7
 29220                           tblptrl	equ	0xFF6
 29221                           tablat	equ	0xFF5
 29222                           prodh	equ	0xFF4
 29223                           prodl	equ	0xFF3
 29224                           intcon	equ	0xFF2
 29225                           indf0	equ	0xFEF
 29226                           postinc0	equ	0xFEE
 29227                           fsr0h	equ	0xFEA
 29228                           fsr0l	equ	0xFE9
 29229                           wreg	equ	0xFE8
 29230                           indf1	equ	0xFE7
 29231                           postdec1	equ	0xFE5
 29232                           plusw1	equ	0xFE3
 29233                           fsr1h	equ	0xFE2
 29234                           fsr1l	equ	0xFE1
 29235                           bsr	equ	0xFE0
 29236                           indf2	equ	0xFDF
 29237                           postinc2	equ	0xFDE
 29238                           postdec2	equ	0xFDD
 29239                           plusw2	equ	0xFDB
 29240                           fsr2h	equ	0xFDA
 29241                           fsr2l	equ	0xFD9
 29242                           status	equ	0xFD8
 29243                           
 29244 ;; *************** function _asin *****************
 29245 ;; Defined at:
 29246 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 29247 ;; Parameters:    Size  Location     Type
 29248 ;;  x               3   25[BANK0 ] void 
 29249 ;; Auto vars:     Size  Location     Type
 29250 ;;  y               3   40[BANK0 ] void 
 29251 ;;  sgn             3   28[BANK0 ] void 
 29252 ;; Return value:  Size  Location     Type
 29253 ;;                  3   25[BANK0 ] void 
 29254 ;; Registers used:
 29255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29256 ;; Tracked objects:
 29257 ;;		On entry : 0/0
 29258 ;;		On exit  : 0/0
 29259 ;;		Unchanged: 0/0
 29260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29261 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29262 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29264 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29265 ;;Total ram usage:       21 bytes
 29266 ;; Hardware stack levels used:    1
 29267 ;; Hardware stack levels required when called:    4
 29268 ;; This function calls:
 29269 ;;		_atan
 29270 ;;		_fabs
 29271 ;;		_sqrt
 29272 ;;		i2___ftadd
 29273 ;;		i2___ftdiv
 29274 ;;		i2___ftge
 29275 ;;		i2___ftmul
 29276 ;;		i2___ftneg
 29277 ;; This function is called by:
 29278 ;;		_acos
 29279 ;; This function uses a non-reentrant model
 29280 ;;
 29281                           
 29282                           	psect	text106
 29283  013AA4                     __ptext106:
 29284                           	opt stack 0
 29285  013AA4                     _asin:
 29286                           	opt stack 9
 29287                           
 29288                           ;incstack = 0
 29289  013AA4  0E00               	movlw	0
 29290  013AA6  6E2A               	movwf	i2___ftge@ff1,c
 29291  013AA8  0E80               	movlw	128
 29292  013AAA  6E2B               	movwf	i2___ftge@ff1+1,c
 29293  013AAC  0E3F               	movlw	63
 29294  013AAE  6E2C               	movwf	i2___ftge@ff1+2,c
 29295  013AB0  C079  F027         	movff	asin@x,fabs@d
 29296  013AB4  C07A  F028         	movff	asin@x+1,fabs@d+1
 29297  013AB8  C07B  F029         	movff	asin@x+2,fabs@d+2
 29298  013ABC  EC83  F0B5         	call	_fabs	;wreg free
 29299  013AC0  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 29300  013AC4  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 29301  013AC8  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 29302  013ACC  ECA6  F0AD         	call	i2___ftge	;wreg free
 29303  013AD0  B0D8               	btfsc	status,0,c
 29304  013AD2  D00D               	goto	i2l1590
 29305  013AD4  0E00               	movlw	0
 29306  013AD6  0101               	movlb	1	; () banked
 29307  013AD8  6FCA               	movwf	(_errno+1)& (0+255),b
 29308  013ADA  0E21               	movlw	33
 29309  013ADC  6FC9               	movwf	_errno& (0+255),b
 29310  013ADE  0E00               	movlw	0
 29311  013AE0  0100               	movlb	0	; () banked
 29312  013AE2  6F79               	movwf	?_asin& (0+255),b
 29313  013AE4  0E00               	movlw	0
 29314  013AE6  6F7A               	movwf	(?_asin+1)& (0+255),b
 29315  013AE8  0E00               	movlw	0
 29316  013AEA  6F7B               	movwf	(?_asin+2)& (0+255),b
 29317                           
 29318                           ; BSR set to: 0
 29319  013AEC  0012               	return	
 29320  013AEE                     i2l1590:
 29321                           
 29322                           ; BSR set to: 0
 29323  013AEE  0E00               	movlw	0
 29324  013AF0  0100               	movlb	0	; () banked
 29325  013AF2  6F7C               	movwf	asin@sgn& (0+255),b
 29326  013AF4  0E80               	movlw	128
 29327  013AF6  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 29328  013AF8  0E3F               	movlw	63
 29329  013AFA  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 29330                           
 29331                           ; BSR set to: 0
 29332  013AFC  C079  F02A         	movff	asin@x,i2___ftmul@f2
 29333  013B00  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 29334  013B04  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 29335  013B08  C079  F027         	movff	asin@x,i2___ftmul@f1
 29336  013B0C  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 29337  013B10  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 29338  013B14  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29339  013B18  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 29340  013B1C  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 29341  013B20  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 29342  013B24  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29343  013B28  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29344  013B2C  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29345  013B30  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29346  013B34  0E00               	movlw	0
 29347  013B36  6E43               	movwf	i2___ftadd@f2,c
 29348  013B38  0E80               	movlw	128
 29349  013B3A  6E44               	movwf	i2___ftadd@f2+1,c
 29350  013B3C  0E3F               	movlw	63
 29351  013B3E  6E45               	movwf	i2___ftadd@f2+2,c
 29352  013B40  EC52  F0A2         	call	i2___ftadd	;wreg free
 29353  013B44  C040  F07F         	movff	?i2___ftadd,_asin$4011
 29354  013B48  C041  F080         	movff	?i2___ftadd+1,_asin$4011+1
 29355  013B4C  C042  F081         	movff	?i2___ftadd+2,_asin$4011+2
 29356  013B50  C07F  F066         	movff	_asin$4011,sqrt@a
 29357  013B54  C080  F067         	movff	_asin$4011+1,sqrt@a+1
 29358  013B58  C081  F068         	movff	_asin$4011+2,sqrt@a+2
 29359  013B5C  EC28  F0A3         	call	_sqrt	;wreg free
 29360  013B60  C066  F088         	movff	?_sqrt,asin@y
 29361  013B64  C067  F089         	movff	?_sqrt+1,asin@y+1
 29362  013B68  C068  F08A         	movff	?_sqrt+2,asin@y+2
 29363  013B6C  C079  F027         	movff	asin@x,fabs@d
 29364  013B70  C07A  F028         	movff	asin@x+1,fabs@d+1
 29365  013B74  C07B  F029         	movff	asin@x+2,fabs@d+2
 29366  013B78  EC83  F0B5         	call	_fabs	;wreg free
 29367  013B7C  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 29368  013B80  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 29369  013B84  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 29370  013B88  0EC3               	movlw	195
 29371  013B8A  6E2D               	movwf	i2___ftge@ff2,c
 29372  013B8C  0E35               	movlw	53
 29373  013B8E  6E2E               	movwf	i2___ftge@ff2+1,c
 29374  013B90  0E3F               	movlw	63
 29375  013B92  6E2F               	movwf	i2___ftge@ff2+2,c
 29376  013B94  ECA6  F0AD         	call	i2___ftge	;wreg free
 29377  013B98  B0D8               	btfsc	status,0,c
 29378  013B9A  D023               	goto	i2l1592
 29379  013B9C  C079  F015         	movff	asin@x,i2___ftdiv@f1
 29380  013BA0  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 29381  013BA4  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 29382  013BA8  C088  F018         	movff	asin@y,i2___ftdiv@f2
 29383  013BAC  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 29384  013BB0  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 29385  013BB4  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 29386  013BB8  C015  F08B         	movff	?i2___ftdiv,_asin$4012
 29387  013BBC  C016  F08C         	movff	?i2___ftdiv+1,_asin$4012+1
 29388  013BC0  C017  F08D         	movff	?i2___ftdiv+2,_asin$4012+2
 29389  013BC4  C08B  F058         	movff	_asin$4012,atan@f
 29390  013BC8  C08C  F059         	movff	_asin$4012+1,atan@f+1
 29391  013BCC  C08D  F05A         	movff	_asin$4012+2,atan@f+2
 29392  013BD0  EC9A  F0A0         	call	_atan	;wreg free
 29393  013BD4  C058  F079         	movff	?_atan,?_asin
 29394  013BD8  C059  F07A         	movff	?_atan+1,?_asin+1
 29395  013BDC  C05A  F07B         	movff	?_atan+2,?_asin+2
 29396  013BE0  0012               	return	
 29397  013BE2                     i2l1592:
 29398  013BE2  0100               	movlb	0	; () banked
 29399  013BE4  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 29400  013BE6  D055               	goto	i2l1593
 29401                           
 29402                           ; BSR set to: 0
 29403  013BE8  C079  F018         	movff	asin@x,i2___ftdiv@f2
 29404  013BEC  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 29405  013BF0  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 29406  013BF4  C088  F024         	movff	asin@y,i2___ftneg@f1
 29407  013BF8  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 29408  013BFC  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 29409  013C00  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29410  013C04  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 29411  013C08  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 29412  013C0C  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 29413  013C10  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 29414  013C14  C015  F08B         	movff	?i2___ftdiv,_asin$4012
 29415  013C18  C016  F08C         	movff	?i2___ftdiv+1,_asin$4012+1
 29416  013C1C  C017  F08D         	movff	?i2___ftdiv+2,_asin$4012+2
 29417  013C20  C08B  F058         	movff	_asin$4012,atan@f
 29418  013C24  C08C  F059         	movff	_asin$4012+1,atan@f+1
 29419  013C28  C08D  F05A         	movff	_asin$4012+2,atan@f+2
 29420  013C2C  EC9A  F0A0         	call	_atan	;wreg free
 29421  013C30  C058  F085         	movff	?_atan,_asin$4013
 29422  013C34  C059  F086         	movff	?_atan+1,_asin$4013+1
 29423  013C38  C05A  F087         	movff	?_atan+2,_asin$4013+2
 29424  013C3C  0E10               	movlw	16
 29425  013C3E  6E43               	movwf	i2___ftadd@f2,c
 29426  013C40  0EC9               	movlw	201
 29427  013C42  6E44               	movwf	i2___ftadd@f2+1,c
 29428  013C44  0E3F               	movlw	63
 29429  013C46  6E45               	movwf	i2___ftadd@f2+2,c
 29430  013C48  C085  F024         	movff	_asin$4013,i2___ftneg@f1
 29431  013C4C  C086  F025         	movff	_asin$4013+1,i2___ftneg@f1+1
 29432  013C50  C087  F026         	movff	_asin$4013+2,i2___ftneg@f1+2
 29433  013C54  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29434  013C58  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29435  013C5C  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29436  013C60  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29437  013C64  EC52  F0A2         	call	i2___ftadd	;wreg free
 29438  013C68  C040  F082         	movff	?i2___ftadd,_asin$4014
 29439  013C6C  C041  F083         	movff	?i2___ftadd+1,_asin$4014+1
 29440  013C70  C042  F084         	movff	?i2___ftadd+2,_asin$4014+2
 29441  013C74  C082  F024         	movff	_asin$4014,i2___ftneg@f1
 29442  013C78  C083  F025         	movff	_asin$4014+1,i2___ftneg@f1+1
 29443  013C7C  C084  F026         	movff	_asin$4014+2,i2___ftneg@f1+2
 29444  013C80  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29445  013C84  C024  F079         	movff	?i2___ftneg,?_asin
 29446  013C88  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 29447  013C8C  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 29448  013C90  0012               	return	
 29449  013C92                     i2l1593:
 29450  013C92  C079  F018         	movff	asin@x,i2___ftdiv@f2
 29451  013C96  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 29452  013C9A  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 29453  013C9E  C088  F015         	movff	asin@y,i2___ftdiv@f1
 29454  013CA2  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 29455  013CA6  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 29456  013CAA  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 29457  013CAE  C015  F08B         	movff	?i2___ftdiv,_asin$4012
 29458  013CB2  C016  F08C         	movff	?i2___ftdiv+1,_asin$4012+1
 29459  013CB6  C017  F08D         	movff	?i2___ftdiv+2,_asin$4012+2
 29460  013CBA  C08B  F058         	movff	_asin$4012,atan@f
 29461  013CBE  C08C  F059         	movff	_asin$4012+1,atan@f+1
 29462  013CC2  C08D  F05A         	movff	_asin$4012+2,atan@f+2
 29463  013CC6  EC9A  F0A0         	call	_atan	;wreg free
 29464  013CCA  C058  F085         	movff	?_atan,_asin$4013
 29465  013CCE  C059  F086         	movff	?_atan+1,_asin$4013+1
 29466  013CD2  C05A  F087         	movff	?_atan+2,_asin$4013+2
 29467  013CD6  C085  F024         	movff	_asin$4013,i2___ftneg@f1
 29468  013CDA  C086  F025         	movff	_asin$4013+1,i2___ftneg@f1+1
 29469  013CDE  C087  F026         	movff	_asin$4013+2,i2___ftneg@f1+2
 29470  013CE2  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29471  013CE6  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29472  013CEA  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29473  013CEE  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29474  013CF2  0E10               	movlw	16
 29475  013CF4  6E43               	movwf	i2___ftadd@f2,c
 29476  013CF6  0EC9               	movlw	201
 29477  013CF8  6E44               	movwf	i2___ftadd@f2+1,c
 29478  013CFA  0E3F               	movlw	63
 29479  013CFC  6E45               	movwf	i2___ftadd@f2+2,c
 29480  013CFE  EC52  F0A2         	call	i2___ftadd	;wreg free
 29481  013D02  C040  F079         	movff	?i2___ftadd,?_asin
 29482  013D06  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 29483  013D0A  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 29484  013D0E  0012               	return	
 29485  013D10                     __end_of_asin:
 29486                           	opt stack 0
 29487                           tosu	equ	0xFFF
 29488                           tosh	equ	0xFFE
 29489                           tosl	equ	0xFFD
 29490                           pclatu	equ	0xFFB
 29491                           pclath	equ	0xFFA
 29492                           tblptru	equ	0xFF8
 29493                           tblptrh	equ	0xFF7
 29494                           tblptrl	equ	0xFF6
 29495                           tablat	equ	0xFF5
 29496                           prodh	equ	0xFF4
 29497                           prodl	equ	0xFF3
 29498                           intcon	equ	0xFF2
 29499                           indf0	equ	0xFEF
 29500                           postinc0	equ	0xFEE
 29501                           fsr0h	equ	0xFEA
 29502                           fsr0l	equ	0xFE9
 29503                           wreg	equ	0xFE8
 29504                           indf1	equ	0xFE7
 29505                           postdec1	equ	0xFE5
 29506                           plusw1	equ	0xFE3
 29507                           fsr1h	equ	0xFE2
 29508                           fsr1l	equ	0xFE1
 29509                           bsr	equ	0xFE0
 29510                           indf2	equ	0xFDF
 29511                           postinc2	equ	0xFDE
 29512                           postdec2	equ	0xFDD
 29513                           plusw2	equ	0xFDB
 29514                           fsr2h	equ	0xFDA
 29515                           fsr2l	equ	0xFD9
 29516                           status	equ	0xFD8
 29517                           
 29518 ;; *************** function _sqrt *****************
 29519 ;; Defined at:
 29520 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 29521 ;; Parameters:    Size  Location     Type
 29522 ;;  a               3    6[BANK0 ] void 
 29523 ;; Auto vars:     Size  Location     Type
 29524 ;;  x               3   22[BANK0 ] void 
 29525 ;;  q               3   19[BANK0 ] void 
 29526 ;;  z               3   16[BANK0 ] void 
 29527 ;;  og              3   12[BANK0 ] void 
 29528 ;;  i               1   15[BANK0 ] unsigned char 
 29529 ;; Return value:  Size  Location     Type
 29530 ;;                  3    6[BANK0 ] unsigned char 
 29531 ;; Registers used:
 29532 ;;		wreg, status,2, status,0, cstack
 29533 ;; Tracked objects:
 29534 ;;		On entry : 0/0
 29535 ;;		On exit  : 0/0
 29536 ;;		Unchanged: 0/0
 29537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29538 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29539 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29540 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29541 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29542 ;;Total ram usage:       19 bytes
 29543 ;; Hardware stack levels used:    1
 29544 ;; Hardware stack levels required when called:    3
 29545 ;; This function calls:
 29546 ;;		i2___ftge
 29547 ;;		i2___ftmul
 29548 ;;		i2___ftsub
 29549 ;; This function is called by:
 29550 ;;		_peakToRMS
 29551 ;;		_asin
 29552 ;; This function uses a non-reentrant model
 29553 ;;
 29554                           
 29555                           	psect	text107
 29556  014650                     __ptext107:
 29557                           	opt stack 0
 29558  014650                     _sqrt:
 29559                           	opt stack 11
 29560                           
 29561                           ;incstack = 0
 29562  014650  0E00               	movlw	0
 29563  014652  6E2A               	movwf	i2___ftge@ff1,c
 29564  014654  0E00               	movlw	0
 29565  014656  6E2B               	movwf	i2___ftge@ff1+1,c
 29566  014658  0E00               	movlw	0
 29567  01465A  6E2C               	movwf	i2___ftge@ff1+2,c
 29568  01465C  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 29569  014660  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 29570  014664  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 29571  014668  ECA6  F0AD         	call	i2___ftge	;wreg free
 29572  01466C  A0D8               	btfss	status,0,c
 29573  01466E  D010               	goto	i2l2118
 29574  014670  0100               	movlb	0	; () banked
 29575  014672  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 29576  014674  D005               	goto	i2l2119
 29577                           
 29578                           ; BSR set to: 0
 29579  014676  0E00               	movlw	0
 29580  014678  0101               	movlb	1	; () banked
 29581  01467A  6FCA               	movwf	(_errno+1)& (0+255),b
 29582  01467C  0E21               	movlw	33
 29583  01467E  6FC9               	movwf	_errno& (0+255),b
 29584  014680                     i2l2119:
 29585  014680  0E00               	movlw	0
 29586  014682  0100               	movlb	0	; () banked
 29587  014684  6F66               	movwf	?_sqrt& (0+255),b
 29588  014686  0E00               	movlw	0
 29589  014688  6F67               	movwf	(?_sqrt+1)& (0+255),b
 29590  01468A  0E00               	movlw	0
 29591  01468C  6F68               	movwf	(?_sqrt+2)& (0+255),b
 29592                           
 29593                           ; BSR set to: 0
 29594  01468E  0012               	return	
 29595  014690                     i2l2118:
 29596  014690  C066  F070         	movff	sqrt@a,sqrt@z
 29597  014694  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 29598  014698  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 29599  01469C  C066  F069         	movff	sqrt@a,??_sqrt
 29600  0146A0  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 29601  0146A4  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 29602  0146A8  0100               	movlb	0	; () banked
 29603  0146AA  1F69               	comf	??_sqrt& (0+255),f,b
 29604  0146AC  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 29605  0146AE  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 29606  0146B0  2B69               	incf	??_sqrt& (0+255),f,b
 29607  0146B2  0E00               	movlw	0
 29608  0146B4  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 29609  0146B6  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 29610  0146B8  0EC8               	movlw	200
 29611  0146BA  2569               	addwf	??_sqrt& (0+255),w,b
 29612  0146BC  6F76               	movwf	sqrt@x& (0+255),b
 29613  0146BE  0E6E               	movlw	110
 29614  0146C0  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 29615  0146C2  6F77               	movwf	(sqrt@x+1)& (0+255),b
 29616  0146C4  0EBE               	movlw	190
 29617  0146C6  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 29618  0146C8  6F78               	movwf	(sqrt@x+2)& (0+255),b
 29619                           
 29620                           ; BSR set to: 0
 29621  0146CA  90D8               	bcf	status,0,c
 29622  0146CC  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 29623  0146CE  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 29624  0146D0  3376               	rrcf	sqrt@x& (0+255),f,b
 29625                           
 29626                           ; BSR set to: 0
 29627  0146D2  0E00               	movlw	0
 29628  0146D4  5F70               	subwf	sqrt@z& (0+255),f,b
 29629  0146D6  0E80               	movlw	128
 29630  0146D8  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 29631  0146DA  0E00               	movlw	0
 29632  0146DC  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 29633                           
 29634                           ; BSR set to: 0
 29635  0146DE  0E04               	movlw	4
 29636  0146E0  6F6F               	movwf	sqrt@i& (0+255),b
 29637  0146E2                     
 29638                           ; BSR set to: 0
 29639                           
 29640                           ; BSR set to: 0
 29641  0146E2  C076  F06C         	movff	sqrt@x,sqrt@og
 29642  0146E6  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 29643  0146EA  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 29644                           
 29645                           ; BSR set to: 0
 29646  0146EE  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 29647  0146F2  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 29648  0146F6  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 29649  0146FA  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 29650  0146FE  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 29651  014702  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 29652  014706  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29653  01470A  C027  F073         	movff	?i2___ftmul,sqrt@q
 29654  01470E  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 29655  014712  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 29656  014716  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 29657  01471A  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 29658  01471E  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 29659  014722  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 29660  014726  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 29661  01472A  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 29662  01472E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29663  014732  C027  F073         	movff	?i2___ftmul,sqrt@q
 29664  014736  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 29665  01473A  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 29666  01473E  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 29667  014742  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 29668  014746  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 29669  01474A  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 29670  01474E  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 29671  014752  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 29672  014756  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29673  01475A  C027  F073         	movff	?i2___ftmul,sqrt@q
 29674  01475E  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 29675  014762  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 29676  014766  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 29677  01476A  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 29678  01476E  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 29679  014772  0E00               	movlw	0
 29680  014774  6E2A               	movwf	i2___ftmul@f2,c
 29681  014776  0EC0               	movlw	192
 29682  014778  6E2B               	movwf	i2___ftmul@f2+1,c
 29683  01477A  0E3F               	movlw	63
 29684  01477C  6E2C               	movwf	i2___ftmul@f2+2,c
 29685  01477E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29686  014782  C027  F076         	movff	?i2___ftmul,sqrt@x
 29687  014786  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 29688  01478A  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 29689  01478E  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 29690  014792  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 29691  014796  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 29692  01479A  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 29693  01479E  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 29694  0147A2  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 29695  0147A6  EC51  F0B4         	call	i2___ftsub	;wreg free
 29696  0147AA  C060  F076         	movff	?i2___ftsub,sqrt@x
 29697  0147AE  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 29698  0147B2  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 29699  0147B6  0100               	movlb	0	; () banked
 29700  0147B8  2F6F               	decfsz	sqrt@i& (0+255),f,b
 29701  0147BA  D793               	goto	i2l2121
 29702                           
 29703                           ; BSR set to: 0
 29704                           
 29705                           ; BSR set to: 0
 29706  0147BC  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 29707  0147C0  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 29708  0147C4  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 29709  0147C8  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 29710  0147CC  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 29711  0147D0  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 29712  0147D4  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29713  0147D8  C027  F066         	movff	?i2___ftmul,?_sqrt
 29714  0147DC  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 29715  0147E0  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 29716  0147E4  0012               	return	
 29717  0147E6                     __end_of_sqrt:
 29718                           	opt stack 0
 29719                           tosu	equ	0xFFF
 29720                           tosh	equ	0xFFE
 29721                           tosl	equ	0xFFD
 29722                           pclatu	equ	0xFFB
 29723                           pclath	equ	0xFFA
 29724                           tblptru	equ	0xFF8
 29725                           tblptrh	equ	0xFF7
 29726                           tblptrl	equ	0xFF6
 29727                           tablat	equ	0xFF5
 29728                           prodh	equ	0xFF4
 29729                           prodl	equ	0xFF3
 29730                           intcon	equ	0xFF2
 29731                           indf0	equ	0xFEF
 29732                           postinc0	equ	0xFEE
 29733                           fsr0h	equ	0xFEA
 29734                           fsr0l	equ	0xFE9
 29735                           wreg	equ	0xFE8
 29736                           indf1	equ	0xFE7
 29737                           postdec1	equ	0xFE5
 29738                           plusw1	equ	0xFE3
 29739                           fsr1h	equ	0xFE2
 29740                           fsr1l	equ	0xFE1
 29741                           bsr	equ	0xFE0
 29742                           indf2	equ	0xFDF
 29743                           postinc2	equ	0xFDE
 29744                           postdec2	equ	0xFDD
 29745                           plusw2	equ	0xFDB
 29746                           fsr2h	equ	0xFDA
 29747                           fsr2l	equ	0xFD9
 29748                           status	equ	0xFD8
 29749                           
 29750 ;; *************** function _atan *****************
 29751 ;; Defined at:
 29752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 29753 ;; Parameters:    Size  Location     Type
 29754 ;;  f               3   87[COMRAM] unsigned char 
 29755 ;; Auto vars:     Size  Location     Type
 29756 ;;  val             3   10[BANK0 ] unsigned char 
 29757 ;;  val_squared     3    7[BANK0 ] unsigned char 
 29758 ;;  x               3    3[BANK0 ] unsigned char 
 29759 ;;  y               3    0[BANK0 ] unsigned char 
 29760 ;;  recip           1    6[BANK0 ] unsigned char 
 29761 ;; Return value:  Size  Location     Type
 29762 ;;                  3   87[COMRAM] unsigned char 
 29763 ;; Registers used:
 29764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29765 ;; Tracked objects:
 29766 ;;		On entry : 0/0
 29767 ;;		On exit  : 0/0
 29768 ;;		Unchanged: 0/0
 29769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29770 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29771 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29773 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29774 ;;Total ram usage:       16 bytes
 29775 ;; Hardware stack levels used:    1
 29776 ;; Hardware stack levels required when called:    3
 29777 ;; This function calls:
 29778 ;;		_eval_poly
 29779 ;;		_fabs
 29780 ;;		i2___ftadd
 29781 ;;		i2___ftdiv
 29782 ;;		i2___ftge
 29783 ;;		i2___ftmul
 29784 ;;		i2___ftneg
 29785 ;; This function is called by:
 29786 ;;		_asin
 29787 ;; This function uses a non-reentrant model
 29788 ;;
 29789                           
 29790                           	psect	text108
 29791  014134                     __ptext108:
 29792                           	opt stack 0
 29793  014134                     _atan:
 29794                           	opt stack 9
 29795                           
 29796                           ;incstack = 0
 29797  014134  C058  F027         	movff	atan@f,fabs@d
 29798  014138  C059  F028         	movff	atan@f+1,fabs@d+1
 29799  01413C  C05A  F029         	movff	atan@f+2,fabs@d+2
 29800  014140  EC83  F0B5         	call	_fabs	;wreg free
 29801  014144  C027  F06A         	movff	?_fabs,atan@val
 29802  014148  C028  F06B         	movff	?_fabs+1,atan@val+1
 29803  01414C  C029  F06C         	movff	?_fabs+2,atan@val+2
 29804  014150  0100               	movlb	0	; () banked
 29805  014152  516A               	movf	atan@val& (0+255),w,b
 29806  014154  116B               	iorwf	(atan@val+1)& (0+255),w,b
 29807  014156  116C               	iorwf	(atan@val+2)& (0+255),w,b
 29808  014158  A4D8               	btfss	status,2,c
 29809  01415A  D007               	goto	i2l1609
 29810                           
 29811                           ; BSR set to: 0
 29812  01415C  0E00               	movlw	0
 29813  01415E  6E58               	movwf	?_atan,c
 29814  014160  0E00               	movlw	0
 29815  014162  6E59               	movwf	?_atan+1,c
 29816  014164  0E00               	movlw	0
 29817  014166  6E5A               	movwf	?_atan+2,c
 29818                           
 29819                           ; BSR set to: 0
 29820  014168  0012               	return	
 29821  01416A                     i2l1609:
 29822                           
 29823                           ; BSR set to: 0
 29824                           
 29825                           ; BSR set to: 0
 29826  01416A  0E00               	movlw	0
 29827  01416C  6E2A               	movwf	i2___ftge@ff1,c
 29828  01416E  0E80               	movlw	128
 29829  014170  6E2B               	movwf	i2___ftge@ff1+1,c
 29830  014172  0E3F               	movlw	63
 29831  014174  6E2C               	movwf	i2___ftge@ff1+2,c
 29832  014176  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 29833  01417A  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 29834  01417E  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 29835  014182  ECA6  F0AD         	call	i2___ftge	;wreg free
 29836  014186  B0D8               	btfsc	status,0,c
 29837  014188  D002               	goto	i2u1682_40
 29838  01418A  0E01               	movlw	1
 29839  01418C  D001               	goto	i2u1683_40
 29840  01418E                     i2u1682_40:
 29841  01418E  0E00               	movlw	0
 29842  014190                     i2u1683_40:
 29843  014190  0100               	movlb	0	; () banked
 29844  014192  6F66               	movwf	atan@recip& (0+255),b
 29845  014194  5166               	movf	atan@recip& (0+255),w,b
 29846  014196  B4D8               	btfsc	status,2,c
 29847  014198  D014               	goto	i2l1611
 29848                           
 29849                           ; BSR set to: 0
 29850  01419A  0E00               	movlw	0
 29851  01419C  6E15               	movwf	i2___ftdiv@f1,c
 29852  01419E  0E80               	movlw	128
 29853  0141A0  6E16               	movwf	i2___ftdiv@f1+1,c
 29854  0141A2  0E3F               	movlw	63
 29855  0141A4  6E17               	movwf	i2___ftdiv@f1+2,c
 29856  0141A6  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 29857  0141AA  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 29858  0141AE  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 29859  0141B2  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 29860  0141B6  C015  F06A         	movff	?i2___ftdiv,atan@val
 29861  0141BA  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 29862  0141BE  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 29863  0141C2                     i2l1611:
 29864  0141C2  C06A  F027         	movff	atan@val,i2___ftmul@f1
 29865  0141C6  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 29866  0141CA  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 29867  0141CE  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 29868  0141D2  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 29869  0141D6  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 29870  0141DA  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29871  0141DE  C027  F067         	movff	?i2___ftmul,atan@val_squared
 29872  0141E2  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 29873  0141E6  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 29874  0141EA  C067  F04C         	movff	atan@val_squared,eval_poly@x
 29875  0141EE  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 29876  0141F2  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 29877  0141F6  0E9A               	movlw	low atan@coeff_b
 29878  0141F8  6E4F               	movwf	eval_poly@d,c
 29879  0141FA  0EEC               	movlw	high atan@coeff_b
 29880  0141FC  6E50               	movwf	eval_poly@d+1,c
 29881  0141FE  0E00               	movlw	0
 29882  014200  6E52               	movwf	eval_poly@n+1,c
 29883  014202  0E04               	movlw	4
 29884  014204  6E51               	movwf	eval_poly@n,c
 29885  014206  EC1E  F0AA         	call	_eval_poly	;wreg free
 29886  01420A  C04C  F060         	movff	?_eval_poly,atan@y
 29887  01420E  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 29888  014212  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 29889  014216  C067  F04C         	movff	atan@val_squared,eval_poly@x
 29890  01421A  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 29891  01421E  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 29892  014222  0E79               	movlw	low atan@coeff_a
 29893  014224  6E4F               	movwf	eval_poly@d,c
 29894  014226  0EEC               	movlw	high atan@coeff_a
 29895  014228  6E50               	movwf	eval_poly@d+1,c
 29896  01422A  0E00               	movlw	0
 29897  01422C  6E52               	movwf	eval_poly@n+1,c
 29898  01422E  0E05               	movlw	5
 29899  014230  6E51               	movwf	eval_poly@n,c
 29900  014232  EC1E  F0AA         	call	_eval_poly	;wreg free
 29901  014236  C04C  F063         	movff	?_eval_poly,atan@x
 29902  01423A  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 29903  01423E  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 29904  014242  C06A  F027         	movff	atan@val,i2___ftmul@f1
 29905  014246  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 29906  01424A  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 29907  01424E  C060  F018         	movff	atan@y,i2___ftdiv@f2
 29908  014252  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 29909  014256  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 29910  01425A  C063  F015         	movff	atan@x,i2___ftdiv@f1
 29911  01425E  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 29912  014262  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 29913  014266  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 29914  01426A  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 29915  01426E  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 29916  014272  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 29917  014276  EC4E  F0A8         	call	i2___ftmul	;wreg free
 29918  01427A  C027  F06A         	movff	?i2___ftmul,atan@val
 29919  01427E  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 29920  014282  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 29921  014286  0100               	movlb	0	; () banked
 29922  014288  5166               	movf	atan@recip& (0+255),w,b
 29923  01428A  B4D8               	btfsc	status,2,c
 29924  01428C  D01C               	goto	i2l1612
 29925                           
 29926                           ; BSR set to: 0
 29927  01428E  C06A  F024         	movff	atan@val,i2___ftneg@f1
 29928  014292  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 29929  014296  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 29930  01429A  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29931  01429E  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29932  0142A2  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29933  0142A6  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29934  0142AA  0E10               	movlw	16
 29935  0142AC  6E43               	movwf	i2___ftadd@f2,c
 29936  0142AE  0EC9               	movlw	201
 29937  0142B0  6E44               	movwf	i2___ftadd@f2+1,c
 29938  0142B2  0E3F               	movlw	63
 29939  0142B4  6E45               	movwf	i2___ftadd@f2+2,c
 29940  0142B6  EC52  F0A2         	call	i2___ftadd	;wreg free
 29941  0142BA  C040  F06A         	movff	?i2___ftadd,atan@val
 29942  0142BE  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 29943  0142C2  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 29944  0142C6                     i2l1612:
 29945  0142C6  BE5A               	btfsc	atan@f+2,7,c
 29946  0142C8  D007               	goto	i2l1614
 29947  0142CA  C06A  F058         	movff	atan@val,?_atan
 29948  0142CE  C06B  F059         	movff	atan@val+1,?_atan+1
 29949  0142D2  C06C  F05A         	movff	atan@val+2,?_atan+2
 29950  0142D6  0012               	return	
 29951  0142D8                     i2l1614:
 29952  0142D8  C06A  F024         	movff	atan@val,i2___ftneg@f1
 29953  0142DC  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 29954  0142E0  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 29955  0142E4  EC3A  F0B6         	call	i2___ftneg	;wreg free
 29956  0142E8  C024  F058         	movff	?i2___ftneg,?_atan
 29957  0142EC  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 29958  0142F0  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 29959  0142F4  0012               	return	
 29960  0142F6                     __end_of_atan:
 29961                           	opt stack 0
 29962                           tosu	equ	0xFFF
 29963                           tosh	equ	0xFFE
 29964                           tosl	equ	0xFFD
 29965                           pclatu	equ	0xFFB
 29966                           pclath	equ	0xFFA
 29967                           tblptru	equ	0xFF8
 29968                           tblptrh	equ	0xFF7
 29969                           tblptrl	equ	0xFF6
 29970                           tablat	equ	0xFF5
 29971                           prodh	equ	0xFF4
 29972                           prodl	equ	0xFF3
 29973                           intcon	equ	0xFF2
 29974                           indf0	equ	0xFEF
 29975                           postinc0	equ	0xFEE
 29976                           fsr0h	equ	0xFEA
 29977                           fsr0l	equ	0xFE9
 29978                           wreg	equ	0xFE8
 29979                           indf1	equ	0xFE7
 29980                           postdec1	equ	0xFE5
 29981                           plusw1	equ	0xFE3
 29982                           fsr1h	equ	0xFE2
 29983                           fsr1l	equ	0xFE1
 29984                           bsr	equ	0xFE0
 29985                           indf2	equ	0xFDF
 29986                           postinc2	equ	0xFDE
 29987                           postdec2	equ	0xFDD
 29988                           plusw2	equ	0xFDB
 29989                           fsr2h	equ	0xFDA
 29990                           fsr2l	equ	0xFD9
 29991                           status	equ	0xFD8
 29992                           
 29993 ;; *************** function _fabs *****************
 29994 ;; Defined at:
 29995 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 29996 ;; Parameters:    Size  Location     Type
 29997 ;;  d               3   38[COMRAM] unsigned char 
 29998 ;; Auto vars:     Size  Location     Type
 29999 ;;		None
 30000 ;; Return value:  Size  Location     Type
 30001 ;;                  3   38[COMRAM] unsigned char 
 30002 ;; Registers used:
 30003 ;;		wreg, status,2, status,0, cstack
 30004 ;; Tracked objects:
 30005 ;;		On entry : 0/0
 30006 ;;		On exit  : 0/0
 30007 ;;		Unchanged: 0/0
 30008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30009 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30012 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30013 ;;Total ram usage:        3 bytes
 30014 ;; Hardware stack levels used:    1
 30015 ;; Hardware stack levels required when called:    1
 30016 ;; This function calls:
 30017 ;;		i2___ftneg
 30018 ;; This function is called by:
 30019 ;;		_asin
 30020 ;;		_atan
 30021 ;; This function uses a non-reentrant model
 30022 ;;
 30023                           
 30024                           	psect	text109
 30025  016B06                     __ptext109:
 30026                           	opt stack 0
 30027  016B06                     _fabs:
 30028                           	opt stack 11
 30029                           
 30030                           ;incstack = 0
 30031  016B06  AE29               	btfss	fabs@d+2,7,c
 30032  016B08  D00F               	goto	i2l1706
 30033  016B0A  C027  F024         	movff	fabs@d,i2___ftneg@f1
 30034  016B0E  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 30035  016B12  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 30036  016B16  EC3A  F0B6         	call	i2___ftneg	;wreg free
 30037  016B1A  C024  F027         	movff	?i2___ftneg,?_fabs
 30038  016B1E  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 30039  016B22  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 30040  016B26  0012               	return	
 30041  016B28                     i2l1706:
 30042  016B28  C027  F027         	movff	fabs@d,?_fabs
 30043  016B2C  C028  F028         	movff	fabs@d+1,?_fabs+1
 30044  016B30  C029  F029         	movff	fabs@d+2,?_fabs+2
 30045  016B34  0012               	return		;funcret
 30046  016B36                     __end_of_fabs:
 30047                           	opt stack 0
 30048                           tosu	equ	0xFFF
 30049                           tosh	equ	0xFFE
 30050                           tosl	equ	0xFFD
 30051                           pclatu	equ	0xFFB
 30052                           pclath	equ	0xFFA
 30053                           tblptru	equ	0xFF8
 30054                           tblptrh	equ	0xFF7
 30055                           tblptrl	equ	0xFF6
 30056                           tablat	equ	0xFF5
 30057                           prodh	equ	0xFF4
 30058                           prodl	equ	0xFF3
 30059                           intcon	equ	0xFF2
 30060                           indf0	equ	0xFEF
 30061                           postinc0	equ	0xFEE
 30062                           fsr0h	equ	0xFEA
 30063                           fsr0l	equ	0xFE9
 30064                           wreg	equ	0xFE8
 30065                           indf1	equ	0xFE7
 30066                           postdec1	equ	0xFE5
 30067                           plusw1	equ	0xFE3
 30068                           fsr1h	equ	0xFE2
 30069                           fsr1l	equ	0xFE1
 30070                           bsr	equ	0xFE0
 30071                           indf2	equ	0xFDF
 30072                           postinc2	equ	0xFDE
 30073                           postdec2	equ	0xFDD
 30074                           plusw2	equ	0xFDB
 30075                           fsr2h	equ	0xFDA
 30076                           fsr2l	equ	0xFD9
 30077                           status	equ	0xFD8
 30078                           
 30079 ;; *************** function _currentMeasuredToPeak *****************
 30080 ;; Defined at:
 30081 ;;		line 120 in file "main.c"
 30082 ;; Parameters:    Size  Location     Type
 30083 ;;  Measured        3   19[BANK0 ] unsigned char 
 30084 ;;  Angle           3   22[BANK0 ] unsigned char 
 30085 ;; Auto vars:     Size  Location     Type
 30086 ;;  Peak            3   25[BANK0 ] unsigned char 
 30087 ;; Return value:  Size  Location     Type
 30088 ;;                  3   19[BANK0 ] unsigned char 
 30089 ;; Registers used:
 30090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30091 ;; Tracked objects:
 30092 ;;		On entry : 0/0
 30093 ;;		On exit  : 0/0
 30094 ;;		Unchanged: 0/0
 30095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30096 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30097 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30099 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30100 ;;Total ram usage:        9 bytes
 30101 ;; Hardware stack levels used:    1
 30102 ;; Hardware stack levels required when called:    4
 30103 ;; This function calls:
 30104 ;;		_sin
 30105 ;;		i2___ftdiv
 30106 ;; This function is called by:
 30107 ;;		_ADCPostProcessingCallback
 30108 ;; This function uses a non-reentrant model
 30109 ;;
 30110                           
 30111                           	psect	text110
 30112  0163AE                     __ptext110:
 30113                           	opt stack 0
 30114  0163AE                     _currentMeasuredToPeak:
 30115                           	opt stack 11
 30116                           
 30117                           ;main.c: 123: double Peak = 0.0;
 30118                           
 30119                           ;incstack = 0
 30120  0163AE  0E00               	movlw	0
 30121  0163B0  0100               	movlb	0	; () banked
 30122  0163B2  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 30123  0163B4  0E00               	movlw	0
 30124  0163B6  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 30125  0163B8  0E00               	movlw	0
 30126  0163BA  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 30127                           
 30128                           ; BSR set to: 0
 30129                           ;main.c: 126: Peak = sin(Angle);
 30130  0163BC  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 30131  0163C0  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 30132  0163C4  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 30133  0163C8  EC88  F09E         	call	_sin	;wreg free
 30134  0163CC  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 30135  0163D0  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 30136  0163D4  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 30137                           
 30138                           ;main.c: 127: Peak = Measured / Peak;
 30139  0163D8  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 30140  0163DC  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 30141  0163E0  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 30142  0163E4  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 30143  0163E8  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 30144  0163EC  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 30145  0163F0  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 30146  0163F4  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 30147  0163F8  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 30148  0163FC  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 30149                           
 30150                           ;main.c: 128: return Peak;
 30151  016400  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 30152  016404  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 30153  016408  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 30154  01640C  0012               	return	
 30155  01640E                     __end_of_currentMeasuredToPeak:
 30156                           	opt stack 0
 30157                           tosu	equ	0xFFF
 30158                           tosh	equ	0xFFE
 30159                           tosl	equ	0xFFD
 30160                           pclatu	equ	0xFFB
 30161                           pclath	equ	0xFFA
 30162                           tblptru	equ	0xFF8
 30163                           tblptrh	equ	0xFF7
 30164                           tblptrl	equ	0xFF6
 30165                           tablat	equ	0xFF5
 30166                           prodh	equ	0xFF4
 30167                           prodl	equ	0xFF3
 30168                           intcon	equ	0xFF2
 30169                           indf0	equ	0xFEF
 30170                           postinc0	equ	0xFEE
 30171                           fsr0h	equ	0xFEA
 30172                           fsr0l	equ	0xFE9
 30173                           wreg	equ	0xFE8
 30174                           indf1	equ	0xFE7
 30175                           postdec1	equ	0xFE5
 30176                           plusw1	equ	0xFE3
 30177                           fsr1h	equ	0xFE2
 30178                           fsr1l	equ	0xFE1
 30179                           bsr	equ	0xFE0
 30180                           indf2	equ	0xFDF
 30181                           postinc2	equ	0xFDE
 30182                           postdec2	equ	0xFDD
 30183                           plusw2	equ	0xFDB
 30184                           fsr2h	equ	0xFDA
 30185                           fsr2l	equ	0xFD9
 30186                           status	equ	0xFD8
 30187                           
 30188 ;; *************** function _sin *****************
 30189 ;; Defined at:
 30190 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;  f               3    6[BANK0 ] unsigned char 
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;  x2              3   15[BANK0 ] unsigned char 
 30195 ;;  y               3    9[BANK0 ] unsigned char 
 30196 ;;  sgn             1   18[BANK0 ] unsigned char 
 30197 ;; Return value:  Size  Location     Type
 30198 ;;                  3    6[BANK0 ] unsigned char 
 30199 ;; Registers used:
 30200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30201 ;; Tracked objects:
 30202 ;;		On entry : 0/0
 30203 ;;		On exit  : 0/0
 30204 ;;		Unchanged: 0/0
 30205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30206 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30207 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30209 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30210 ;;Total ram usage:       13 bytes
 30211 ;; Hardware stack levels used:    1
 30212 ;; Hardware stack levels required when called:    3
 30213 ;; This function calls:
 30214 ;;		_eval_poly
 30215 ;;		_floor
 30216 ;;		i2___ftadd
 30217 ;;		i2___ftdiv
 30218 ;;		i2___ftge
 30219 ;;		i2___ftmul
 30220 ;;		i2___ftneg
 30221 ;;		i2___ftsub
 30222 ;; This function is called by:
 30223 ;;		_peakToRMS
 30224 ;;		_currentMeasuredToPeak
 30225 ;; This function uses a non-reentrant model
 30226 ;;
 30227                           
 30228                           	psect	text111
 30229  013D10                     __ptext111:
 30230                           	opt stack 0
 30231  013D10                     _sin:
 30232                           	opt stack 11
 30233                           
 30234                           ;incstack = 0
 30235  013D10  0E00               	movlw	0
 30236  013D12  0100               	movlb	0	; () banked
 30237  013D14  6F72               	movwf	sin@sgn& (0+255),b
 30238                           
 30239                           ; BSR set to: 0
 30240  013D16  AF68               	btfss	(sin@f+2)& (0+255),7,b
 30241  013D18  D011               	goto	i2l1989
 30242                           
 30243                           ; BSR set to: 0
 30244  013D1A  C066  F024         	movff	sin@f,i2___ftneg@f1
 30245  013D1E  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 30246  013D22  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 30247  013D26  EC3A  F0B6         	call	i2___ftneg	;wreg free
 30248  013D2A  C024  F066         	movff	?i2___ftneg,sin@f
 30249  013D2E  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 30250  013D32  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 30251  013D36  0E01               	movlw	1
 30252  013D38  0100               	movlb	0	; () banked
 30253  013D3A  6F72               	movwf	sin@sgn& (0+255),b
 30254  013D3C                     i2l1989:
 30255                           
 30256                           ; BSR set to: 0
 30257                           
 30258                           ; BSR set to: 0
 30259  013D3C  C066  F027         	movff	sin@f,i2___ftmul@f1
 30260  013D40  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30261  013D44  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30262  013D48  0EFA               	movlw	250
 30263  013D4A  6E2A               	movwf	i2___ftmul@f2,c
 30264  013D4C  0E22               	movlw	34
 30265  013D4E  6E2B               	movwf	i2___ftmul@f2+1,c
 30266  013D50  0E3E               	movlw	62
 30267  013D52  6E2C               	movwf	i2___ftmul@f2+2,c
 30268  013D54  EC4E  F0A8         	call	i2___ftmul	;wreg free
 30269  013D58  C027  F066         	movff	?i2___ftmul,sin@f
 30270  013D5C  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 30271  013D60  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 30272  013D64  C066  F060         	movff	sin@f,i2___ftsub@f1
 30273  013D68  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 30274  013D6C  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 30275  013D70  C066  F056         	movff	sin@f,floor@x
 30276  013D74  C067  F057         	movff	sin@f+1,floor@x+1
 30277  013D78  C068  F058         	movff	sin@f+2,floor@x+2
 30278  013D7C  ECAF  F0A9         	call	_floor	;wreg free
 30279  013D80  C056  F063         	movff	?_floor,i2___ftsub@f2
 30280  013D84  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 30281  013D88  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 30282  013D8C  EC51  F0B4         	call	i2___ftsub	;wreg free
 30283  013D90  C060  F066         	movff	?i2___ftsub,sin@f
 30284  013D94  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 30285  013D98  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 30286  013D9C  C066  F027         	movff	sin@f,i2___ftmul@f1
 30287  013DA0  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30288  013DA4  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30289  013DA8  0E00               	movlw	0
 30290  013DAA  6E2A               	movwf	i2___ftmul@f2,c
 30291  013DAC  0E80               	movlw	128
 30292  013DAE  6E2B               	movwf	i2___ftmul@f2+1,c
 30293  013DB0  0E40               	movlw	64
 30294  013DB2  6E2C               	movwf	i2___ftmul@f2+2,c
 30295  013DB4  EC4E  F0A8         	call	i2___ftmul	;wreg free
 30296  013DB8  C027  F066         	movff	?i2___ftmul,sin@f
 30297  013DBC  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 30298  013DC0  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 30299  013DC4  0E00               	movlw	0
 30300  013DC6  6E2A               	movwf	i2___ftge@ff1,c
 30301  013DC8  0E00               	movlw	0
 30302  013DCA  6E2B               	movwf	i2___ftge@ff1+1,c
 30303  013DCC  0E40               	movlw	64
 30304  013DCE  6E2C               	movwf	i2___ftge@ff1+2,c
 30305  013DD0  C066  F02D         	movff	sin@f,i2___ftge@ff2
 30306  013DD4  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 30307  013DD8  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 30308  013DDC  ECA6  F0AD         	call	i2___ftge	;wreg free
 30309  013DE0  B0D8               	btfsc	status,0,c
 30310  013DE2  D01D               	goto	i2l1990
 30311  013DE4  C066  F060         	movff	sin@f,i2___ftsub@f1
 30312  013DE8  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 30313  013DEC  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 30314  013DF0  0E00               	movlw	0
 30315  013DF2  0100               	movlb	0	; () banked
 30316  013DF4  6F63               	movwf	i2___ftsub@f2& (0+255),b
 30317  013DF6  0E00               	movlw	0
 30318  013DF8  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 30319  013DFA  0E40               	movlw	64
 30320  013DFC  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 30321  013DFE  EC51  F0B4         	call	i2___ftsub	;wreg free
 30322  013E02  C060  F066         	movff	?i2___ftsub,sin@f
 30323  013E06  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 30324  013E0A  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 30325  013E0E  0100               	movlb	0	; () banked
 30326  013E10  5172               	movf	sin@sgn& (0+255),w,b
 30327  013E12  A4D8               	btfss	status,2,c
 30328  013E14  D002               	goto	i2u1706_40
 30329  013E16  0E01               	movlw	1
 30330  013E18  D001               	goto	i2u1707_40
 30331  013E1A                     i2u1706_40:
 30332  013E1A  0E00               	movlw	0
 30333  013E1C                     i2u1707_40:
 30334  013E1C  6F72               	movwf	sin@sgn& (0+255),b
 30335  013E1E                     i2l1990:
 30336                           
 30337                           ; BSR set to: 0
 30338  013E1E  0E00               	movlw	0
 30339  013E20  6E2A               	movwf	i2___ftge@ff1,c
 30340  013E22  0E80               	movlw	128
 30341  013E24  6E2B               	movwf	i2___ftge@ff1+1,c
 30342  013E26  0E3F               	movlw	63
 30343  013E28  6E2C               	movwf	i2___ftge@ff1+2,c
 30344  013E2A  C066  F02D         	movff	sin@f,i2___ftge@ff2
 30345  013E2E  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 30346  013E32  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 30347  013E36  ECA6  F0AD         	call	i2___ftge	;wreg free
 30348  013E3A  B0D8               	btfsc	status,0,c
 30349  013E3C  D01C               	goto	i2l1991
 30350  013E3E  C066  F024         	movff	sin@f,i2___ftneg@f1
 30351  013E42  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 30352  013E46  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 30353  013E4A  EC3A  F0B6         	call	i2___ftneg	;wreg free
 30354  013E4E  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30355  013E52  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30356  013E56  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30357  013E5A  0E00               	movlw	0
 30358  013E5C  6E43               	movwf	i2___ftadd@f2,c
 30359  013E5E  0E00               	movlw	0
 30360  013E60  6E44               	movwf	i2___ftadd@f2+1,c
 30361  013E62  0E40               	movlw	64
 30362  013E64  6E45               	movwf	i2___ftadd@f2+2,c
 30363  013E66  EC52  F0A2         	call	i2___ftadd	;wreg free
 30364  013E6A  C040  F066         	movff	?i2___ftadd,sin@f
 30365  013E6E  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 30366  013E72  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 30367  013E76                     i2l1991:
 30368  013E76  C066  F027         	movff	sin@f,i2___ftmul@f1
 30369  013E7A  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30370  013E7E  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30371  013E82  C066  F02A         	movff	sin@f,i2___ftmul@f2
 30372  013E86  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 30373  013E8A  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 30374  013E8E  EC4E  F0A8         	call	i2___ftmul	;wreg free
 30375  013E92  C027  F06F         	movff	?i2___ftmul,sin@x2
 30376  013E96  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 30377  013E9A  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 30378  013E9E  C06F  F04C         	movff	sin@x2,eval_poly@x
 30379  013EA2  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 30380  013EA6  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 30381  013EAA  0EA9               	movlw	low sin@coeff_b
 30382  013EAC  6E4F               	movwf	eval_poly@d,c
 30383  013EAE  0EEC               	movlw	high sin@coeff_b
 30384  013EB0  6E50               	movwf	eval_poly@d+1,c
 30385  013EB2  0E00               	movlw	0
 30386  013EB4  6E52               	movwf	eval_poly@n+1,c
 30387  013EB6  0E03               	movlw	3
 30388  013EB8  6E51               	movwf	eval_poly@n,c
 30389  013EBA  EC1E  F0AA         	call	_eval_poly	;wreg free
 30390  013EBE  C04C  F069         	movff	?_eval_poly,sin@y
 30391  013EC2  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 30392  013EC6  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 30393  013ECA  C069  F018         	movff	sin@y,i2___ftdiv@f2
 30394  013ECE  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 30395  013ED2  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 30396  013ED6  0E00               	movlw	0
 30397  013ED8  6E52               	movwf	eval_poly@n+1,c
 30398  013EDA  0E04               	movlw	4
 30399  013EDC  6E51               	movwf	eval_poly@n,c
 30400  013EDE  0E8B               	movlw	low sin@coeff_a
 30401  013EE0  6E4F               	movwf	eval_poly@d,c
 30402  013EE2  0EEC               	movlw	high sin@coeff_a
 30403  013EE4  6E50               	movwf	eval_poly@d+1,c
 30404  013EE6  C06F  F04C         	movff	sin@x2,eval_poly@x
 30405  013EEA  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 30406  013EEE  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 30407  013EF2  EC1E  F0AA         	call	_eval_poly	;wreg free
 30408  013EF6  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 30409  013EFA  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 30410  013EFE  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 30411  013F02  EC3C  F0A9         	call	i2___ftdiv	;wreg free
 30412  013F06  C015  F06C         	movff	?i2___ftdiv,_sin$4015
 30413  013F0A  C016  F06D         	movff	?i2___ftdiv+1,_sin$4015+1
 30414  013F0E  C017  F06E         	movff	?i2___ftdiv+2,_sin$4015+2
 30415  013F12  C066  F027         	movff	sin@f,i2___ftmul@f1
 30416  013F16  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30417  013F1A  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30418  013F1E  C06C  F02A         	movff	_sin$4015,i2___ftmul@f2
 30419  013F22  C06D  F02B         	movff	_sin$4015+1,i2___ftmul@f2+1
 30420  013F26  C06E  F02C         	movff	_sin$4015+2,i2___ftmul@f2+2
 30421  013F2A  EC4E  F0A8         	call	i2___ftmul	;wreg free
 30422  013F2E  C027  F066         	movff	?i2___ftmul,sin@f
 30423  013F32  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 30424  013F36  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 30425  013F3A  0100               	movlb	0	; () banked
 30426  013F3C  5172               	movf	sin@sgn& (0+255),w,b
 30427  013F3E  B4D8               	btfsc	status,2,c
 30428  013F40  D00F               	goto	i2l1992
 30429                           
 30430                           ; BSR set to: 0
 30431  013F42  C066  F024         	movff	sin@f,i2___ftneg@f1
 30432  013F46  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 30433  013F4A  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 30434  013F4E  EC3A  F0B6         	call	i2___ftneg	;wreg free
 30435  013F52  C024  F066         	movff	?i2___ftneg,?_sin
 30436  013F56  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 30437  013F5A  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 30438  013F5E  0012               	return	
 30439  013F60                     i2l1992:
 30440                           
 30441                           ; BSR set to: 0
 30442  013F60  C066  F066         	movff	sin@f,?_sin
 30443  013F64  C067  F067         	movff	sin@f+1,?_sin+1
 30444  013F68  C068  F068         	movff	sin@f+2,?_sin+2
 30445  013F6C  0012               	return		;funcret
 30446  013F6E                     __end_of_sin:
 30447                           	opt stack 0
 30448                           tosu	equ	0xFFF
 30449                           tosh	equ	0xFFE
 30450                           tosl	equ	0xFFD
 30451                           pclatu	equ	0xFFB
 30452                           pclath	equ	0xFFA
 30453                           tblptru	equ	0xFF8
 30454                           tblptrh	equ	0xFF7
 30455                           tblptrl	equ	0xFF6
 30456                           tablat	equ	0xFF5
 30457                           prodh	equ	0xFF4
 30458                           prodl	equ	0xFF3
 30459                           intcon	equ	0xFF2
 30460                           indf0	equ	0xFEF
 30461                           postinc0	equ	0xFEE
 30462                           fsr0h	equ	0xFEA
 30463                           fsr0l	equ	0xFE9
 30464                           wreg	equ	0xFE8
 30465                           indf1	equ	0xFE7
 30466                           postdec1	equ	0xFE5
 30467                           plusw1	equ	0xFE3
 30468                           fsr1h	equ	0xFE2
 30469                           fsr1l	equ	0xFE1
 30470                           bsr	equ	0xFE0
 30471                           indf2	equ	0xFDF
 30472                           postinc2	equ	0xFDE
 30473                           postdec2	equ	0xFDD
 30474                           plusw2	equ	0xFDB
 30475                           fsr2h	equ	0xFDA
 30476                           fsr2l	equ	0xFD9
 30477                           status	equ	0xFD8
 30478                           
 30479 ;; *************** function i2___ftsub *****************
 30480 ;; Defined at:
 30481 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 30482 ;; Parameters:    Size  Location     Type
 30483 ;;  f1              3    0[BANK0 ] float 
 30484 ;;  f2              3    3[BANK0 ] float 
 30485 ;; Auto vars:     Size  Location     Type
 30486 ;;		None
 30487 ;; Return value:  Size  Location     Type
 30488 ;;                  3    0[BANK0 ] float 
 30489 ;; Registers used:
 30490 ;;		wreg, status,2, status,0, cstack
 30491 ;; Tracked objects:
 30492 ;;		On entry : 0/0
 30493 ;;		On exit  : 0/0
 30494 ;;		Unchanged: 0/0
 30495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30496 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30499 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30500 ;;Total ram usage:        6 bytes
 30501 ;; Hardware stack levels used:    1
 30502 ;; Hardware stack levels required when called:    2
 30503 ;; This function calls:
 30504 ;;		i2___ftadd
 30505 ;; This function is called by:
 30506 ;;		_sin
 30507 ;;		_sqrt
 30508 ;;		i2_printf
 30509 ;; This function uses a non-reentrant model
 30510 ;;
 30511                           
 30512                           	psect	text112
 30513  0168A2                     __ptext112:
 30514                           	opt stack 0
 30515  0168A2                     i2___ftsub:
 30516                           	opt stack 13
 30517                           
 30518                           ;incstack = 0
 30519  0168A2  0100               	movlb	0	; () banked
 30520  0168A4  5163               	movf	i2___ftsub@f2& (0+255),w,b
 30521  0168A6  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 30522  0168A8  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 30523  0168AA  B4D8               	btfsc	status,2,c
 30524  0168AC  D006               	goto	i2l1855
 30525                           
 30526                           ; BSR set to: 0
 30527  0168AE  0E00               	movlw	0
 30528  0168B0  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 30529  0168B2  0E00               	movlw	0
 30530  0168B4  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 30531  0168B6  0E80               	movlw	128
 30532  0168B8  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 30533  0168BA                     i2l1855:
 30534                           
 30535                           ; BSR set to: 0
 30536                           
 30537                           ; BSR set to: 0
 30538  0168BA  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 30539  0168BE  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 30540  0168C2  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 30541  0168C6  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 30542  0168CA  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 30543  0168CE  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 30544  0168D2  EC52  F0A2         	call	i2___ftadd	;wreg free
 30545  0168D6  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 30546  0168DA  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 30547  0168DE  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 30548  0168E2  0012               	return	
 30549  0168E4                     __end_ofi2___ftsub:
 30550                           	opt stack 0
 30551                           tosu	equ	0xFFF
 30552                           tosh	equ	0xFFE
 30553                           tosl	equ	0xFFD
 30554                           pclatu	equ	0xFFB
 30555                           pclath	equ	0xFFA
 30556                           tblptru	equ	0xFF8
 30557                           tblptrh	equ	0xFF7
 30558                           tblptrl	equ	0xFF6
 30559                           tablat	equ	0xFF5
 30560                           prodh	equ	0xFF4
 30561                           prodl	equ	0xFF3
 30562                           intcon	equ	0xFF2
 30563                           indf0	equ	0xFEF
 30564                           postinc0	equ	0xFEE
 30565                           fsr0h	equ	0xFEA
 30566                           fsr0l	equ	0xFE9
 30567                           wreg	equ	0xFE8
 30568                           indf1	equ	0xFE7
 30569                           postdec1	equ	0xFE5
 30570                           plusw1	equ	0xFE3
 30571                           fsr1h	equ	0xFE2
 30572                           fsr1l	equ	0xFE1
 30573                           bsr	equ	0xFE0
 30574                           indf2	equ	0xFDF
 30575                           postinc2	equ	0xFDE
 30576                           postdec2	equ	0xFDD
 30577                           plusw2	equ	0xFDB
 30578                           fsr2h	equ	0xFDA
 30579                           fsr2l	equ	0xFD9
 30580                           status	equ	0xFD8
 30581                           
 30582 ;; *************** function i2___ftneg *****************
 30583 ;; Defined at:
 30584 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 30585 ;; Parameters:    Size  Location     Type
 30586 ;;  f1              3   35[COMRAM] float 
 30587 ;; Auto vars:     Size  Location     Type
 30588 ;;		None
 30589 ;; Return value:  Size  Location     Type
 30590 ;;                  3   35[COMRAM] float 
 30591 ;; Registers used:
 30592 ;;		wreg, status,2, status,0
 30593 ;; Tracked objects:
 30594 ;;		On entry : 0/0
 30595 ;;		On exit  : 0/0
 30596 ;;		Unchanged: 0/0
 30597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30598 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30602 ;;Total ram usage:        3 bytes
 30603 ;; Hardware stack levels used:    1
 30604 ;; This function calls:
 30605 ;;		Nothing
 30606 ;; This function is called by:
 30607 ;;		_peakToRMS
 30608 ;;		_ADCPostProcessingCallback
 30609 ;;		_acos
 30610 ;;		_asin
 30611 ;;		_atan
 30612 ;;		_fabs
 30613 ;;		_sin
 30614 ;;		i2_printf
 30615 ;; This function uses a non-reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text113
 30619  016C74                     __ptext113:
 30620                           	opt stack 0
 30621  016C74                     i2___ftneg:
 30622                           	opt stack 15
 30623                           
 30624                           ;incstack = 0
 30625  016C74  5024               	movf	i2___ftneg@f1,w,c
 30626  016C76  1025               	iorwf	i2___ftneg@f1+1,w,c
 30627  016C78  1026               	iorwf	i2___ftneg@f1+2,w,c
 30628  016C7A  B4D8               	btfsc	status,2,c
 30629  016C7C  D006               	goto	i2l1849
 30630  016C7E  0E00               	movlw	0
 30631  016C80  1A24               	xorwf	i2___ftneg@f1,f,c
 30632  016C82  0E00               	movlw	0
 30633  016C84  1A25               	xorwf	i2___ftneg@f1+1,f,c
 30634  016C86  0E80               	movlw	128
 30635  016C88  1A26               	xorwf	i2___ftneg@f1+2,f,c
 30636  016C8A                     i2l1849:
 30637  016C8A  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 30638  016C8E  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 30639  016C92  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 30640  016C96  0012               	return		;funcret
 30641  016C98                     __end_ofi2___ftneg:
 30642                           	opt stack 0
 30643                           tosu	equ	0xFFF
 30644                           tosh	equ	0xFFE
 30645                           tosl	equ	0xFFD
 30646                           pclatu	equ	0xFFB
 30647                           pclath	equ	0xFFA
 30648                           tblptru	equ	0xFF8
 30649                           tblptrh	equ	0xFF7
 30650                           tblptrl	equ	0xFF6
 30651                           tablat	equ	0xFF5
 30652                           prodh	equ	0xFF4
 30653                           prodl	equ	0xFF3
 30654                           intcon	equ	0xFF2
 30655                           indf0	equ	0xFEF
 30656                           postinc0	equ	0xFEE
 30657                           fsr0h	equ	0xFEA
 30658                           fsr0l	equ	0xFE9
 30659                           wreg	equ	0xFE8
 30660                           indf1	equ	0xFE7
 30661                           postdec1	equ	0xFE5
 30662                           plusw1	equ	0xFE3
 30663                           fsr1h	equ	0xFE2
 30664                           fsr1l	equ	0xFE1
 30665                           bsr	equ	0xFE0
 30666                           indf2	equ	0xFDF
 30667                           postinc2	equ	0xFDE
 30668                           postdec2	equ	0xFDD
 30669                           plusw2	equ	0xFDB
 30670                           fsr2h	equ	0xFDA
 30671                           fsr2l	equ	0xFD9
 30672                           status	equ	0xFD8
 30673                           
 30674 ;; *************** function i2___ftdiv *****************
 30675 ;; Defined at:
 30676 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 30677 ;; Parameters:    Size  Location     Type
 30678 ;;  f1              3   20[COMRAM] float 
 30679 ;;  f2              3   23[COMRAM] float 
 30680 ;; Auto vars:     Size  Location     Type
 30681 ;;  __ftdiv         3   31[COMRAM] float 
 30682 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 30683 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 30684 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 30685 ;; Return value:  Size  Location     Type
 30686 ;;                  3   20[COMRAM] float 
 30687 ;; Registers used:
 30688 ;;		wreg, status,2, status,0, cstack
 30689 ;; Tracked objects:
 30690 ;;		On entry : 0/0
 30691 ;;		On exit  : 0/0
 30692 ;;		Unchanged: 0/0
 30693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30694 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30695 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30697 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30698 ;;Total ram usage:       15 bytes
 30699 ;; Hardware stack levels used:    1
 30700 ;; Hardware stack levels required when called:    1
 30701 ;; This function calls:
 30702 ;;		i2___ftpack
 30703 ;; This function is called by:
 30704 ;;		_peakToRMS
 30705 ;;		_currentMeasuredToPeak
 30706 ;;		_ADCPostProcessingCallback
 30707 ;;		_asin
 30708 ;;		_atan
 30709 ;;		_sin
 30710 ;; This function uses a non-reentrant model
 30711 ;;
 30712                           
 30713                           	psect	text114
 30714  015278                     __ptext114:
 30715                           	opt stack 0
 30716  015278                     i2___ftdiv:
 30717                           	opt stack 14
 30718                           
 30719                           ;incstack = 0
 30720  015278  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 30721  01527C  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 30722  01527E  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 30723  015280  3416               	rlcf	i2___ftdiv@f1+1,w,c
 30724  015282  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 30725  015284  E301               	bnc	u1668_41
 30726  015286  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 30727  015288                     u1668_41:
 30728  015288  501B               	movf	??i2___ftdiv,w,c
 30729  01528A  6E1F               	movwf	i2___ftdiv@exp,c
 30730  01528C  501F               	movf	i2___ftdiv@exp,w,c
 30731  01528E  A4D8               	btfss	status,2,c
 30732  015290  D007               	goto	i2l1806
 30733  015292  0E00               	movlw	0
 30734  015294  6E15               	movwf	?i2___ftdiv,c
 30735  015296  0E00               	movlw	0
 30736  015298  6E16               	movwf	?i2___ftdiv+1,c
 30737  01529A  0E00               	movlw	0
 30738  01529C  6E17               	movwf	?i2___ftdiv+2,c
 30739  01529E  0012               	return	
 30740  0152A0                     i2l1806:
 30741  0152A0  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 30742  0152A4  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 30743  0152A6  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 30744  0152A8  3419               	rlcf	i2___ftdiv@f2+1,w,c
 30745  0152AA  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 30746  0152AC  E301               	bnc	u1670_41
 30747  0152AE  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 30748  0152B0                     u1670_41:
 30749  0152B0  501B               	movf	??i2___ftdiv,w,c
 30750  0152B2  6E23               	movwf	i2___ftdiv@sign,c
 30751  0152B4  5023               	movf	i2___ftdiv@sign,w,c
 30752  0152B6  A4D8               	btfss	status,2,c
 30753  0152B8  D007               	goto	i2l1808
 30754  0152BA  0E00               	movlw	0
 30755  0152BC  6E15               	movwf	?i2___ftdiv,c
 30756  0152BE  0E00               	movlw	0
 30757  0152C0  6E16               	movwf	?i2___ftdiv+1,c
 30758  0152C2  0E00               	movlw	0
 30759  0152C4  6E17               	movwf	?i2___ftdiv+2,c
 30760  0152C6  0012               	return	
 30761  0152C8                     i2l1808:
 30762  0152C8  0E00               	movlw	0
 30763  0152CA  6E20               	movwf	i2___ftdiv@f3,c
 30764  0152CC  0E00               	movlw	0
 30765  0152CE  6E21               	movwf	i2___ftdiv@f3+1,c
 30766  0152D0  0E00               	movlw	0
 30767  0152D2  6E22               	movwf	i2___ftdiv@f3+2,c
 30768  0152D4  5023               	movf	i2___ftdiv@sign,w,c
 30769  0152D6  0F89               	addlw	137
 30770  0152D8  5E1F               	subwf	i2___ftdiv@exp,f,c
 30771  0152DA  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 30772  0152DE  501A               	movf	i2___ftdiv@f2+2,w,c
 30773  0152E0  1A23               	xorwf	i2___ftdiv@sign,f,c
 30774  0152E2  0E80               	movlw	128
 30775  0152E4  1623               	andwf	i2___ftdiv@sign,f,c
 30776  0152E6  8E16               	bsf	i2___ftdiv@f1+1,7,c
 30777  0152E8  0EFF               	movlw	255
 30778  0152EA  1615               	andwf	i2___ftdiv@f1,f,c
 30779  0152EC  0EFF               	movlw	255
 30780  0152EE  1616               	andwf	i2___ftdiv@f1+1,f,c
 30781  0152F0  0E00               	movlw	0
 30782  0152F2  1617               	andwf	i2___ftdiv@f1+2,f,c
 30783  0152F4  8E19               	bsf	i2___ftdiv@f2+1,7,c
 30784  0152F6  0EFF               	movlw	255
 30785  0152F8  1618               	andwf	i2___ftdiv@f2,f,c
 30786  0152FA  0EFF               	movlw	255
 30787  0152FC  1619               	andwf	i2___ftdiv@f2+1,f,c
 30788  0152FE  0E00               	movlw	0
 30789  015300  161A               	andwf	i2___ftdiv@f2+2,f,c
 30790  015302  0E18               	movlw	24
 30791  015304  6E1E               	movwf	i2___ftdiv@cntr,c
 30792  015306  90D8               	bcf	status,0,c
 30793  015308  3620               	rlcf	i2___ftdiv@f3,f,c
 30794  01530A  3621               	rlcf	i2___ftdiv@f3+1,f,c
 30795  01530C  3622               	rlcf	i2___ftdiv@f3+2,f,c
 30796  01530E  5018               	movf	i2___ftdiv@f2,w,c
 30797  015310  5C15               	subwf	i2___ftdiv@f1,w,c
 30798  015312  5019               	movf	i2___ftdiv@f2+1,w,c
 30799  015314  5816               	subwfb	i2___ftdiv@f1+1,w,c
 30800  015316  501A               	movf	i2___ftdiv@f2+2,w,c
 30801  015318  5817               	subwfb	i2___ftdiv@f1+2,w,c
 30802  01531A  A0D8               	btfss	status,0,c
 30803  01531C  D007               	goto	i2l1810
 30804  01531E  5018               	movf	i2___ftdiv@f2,w,c
 30805  015320  5E15               	subwf	i2___ftdiv@f1,f,c
 30806  015322  5019               	movf	i2___ftdiv@f2+1,w,c
 30807  015324  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 30808  015326  501A               	movf	i2___ftdiv@f2+2,w,c
 30809  015328  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 30810  01532A  8020               	bsf	i2___ftdiv@f3,0,c
 30811  01532C                     i2l1810:
 30812  01532C  90D8               	bcf	status,0,c
 30813  01532E  3615               	rlcf	i2___ftdiv@f1,f,c
 30814  015330  3616               	rlcf	i2___ftdiv@f1+1,f,c
 30815  015332  3617               	rlcf	i2___ftdiv@f1+2,f,c
 30816  015334  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 30817  015336  D7E7               	goto	i2l1809
 30818  015338  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 30819  01533C  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 30820  015340  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 30821  015344  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 30822  015348  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 30823  01534C  EC6D  F0AC         	call	i2___ftpack	;wreg free
 30824  015350  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 30825  015354  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 30826  015358  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 30827  01535C  0012               	return	
 30828  01535E                     __end_ofi2___ftdiv:
 30829                           	opt stack 0
 30830                           tosu	equ	0xFFF
 30831                           tosh	equ	0xFFE
 30832                           tosl	equ	0xFFD
 30833                           pclatu	equ	0xFFB
 30834                           pclath	equ	0xFFA
 30835                           tblptru	equ	0xFF8
 30836                           tblptrh	equ	0xFF7
 30837                           tblptrl	equ	0xFF6
 30838                           tablat	equ	0xFF5
 30839                           prodh	equ	0xFF4
 30840                           prodl	equ	0xFF3
 30841                           intcon	equ	0xFF2
 30842                           indf0	equ	0xFEF
 30843                           postinc0	equ	0xFEE
 30844                           fsr0h	equ	0xFEA
 30845                           fsr0l	equ	0xFE9
 30846                           wreg	equ	0xFE8
 30847                           indf1	equ	0xFE7
 30848                           postdec1	equ	0xFE5
 30849                           plusw1	equ	0xFE3
 30850                           fsr1h	equ	0xFE2
 30851                           fsr1l	equ	0xFE1
 30852                           bsr	equ	0xFE0
 30853                           indf2	equ	0xFDF
 30854                           postinc2	equ	0xFDE
 30855                           postdec2	equ	0xFDD
 30856                           plusw2	equ	0xFDB
 30857                           fsr2h	equ	0xFDA
 30858                           fsr2l	equ	0xFD9
 30859                           status	equ	0xFD8
 30860                           
 30861 ;; *************** function _floor *****************
 30862 ;; Defined at:
 30863 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 30864 ;; Parameters:    Size  Location     Type
 30865 ;;  x               3   85[COMRAM] float 
 30866 ;; Auto vars:     Size  Location     Type
 30867 ;;  i               3   88[COMRAM] float 
 30868 ;;  expon           2   91[COMRAM] int 
 30869 ;; Return value:  Size  Location     Type
 30870 ;;                  3   85[COMRAM] int 
 30871 ;; Registers used:
 30872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30873 ;; Tracked objects:
 30874 ;;		On entry : 0/0
 30875 ;;		On exit  : 0/0
 30876 ;;		Unchanged: 0/0
 30877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30878 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30879 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30882 ;;Total ram usage:        8 bytes
 30883 ;; Hardware stack levels used:    1
 30884 ;; Hardware stack levels required when called:    2
 30885 ;; This function calls:
 30886 ;;		___altoft
 30887 ;;		_frexp
 30888 ;;		i2___ftadd
 30889 ;;		i2___ftge
 30890 ;;		i2___fttol
 30891 ;; This function is called by:
 30892 ;;		_sin
 30893 ;; This function uses a non-reentrant model
 30894 ;;
 30895                           
 30896                           	psect	text115
 30897  01535E                     __ptext115:
 30898                           	opt stack 0
 30899  01535E                     _floor:
 30900                           	opt stack 11
 30901                           
 30902                           ;incstack = 0
 30903  01535E  C056  F001         	movff	floor@x,frexp@value
 30904  015362  C057  F002         	movff	floor@x+1,frexp@value+1
 30905  015366  C058  F003         	movff	floor@x+2,frexp@value+2
 30906  01536A  0E5C               	movlw	low floor@expon
 30907  01536C  6E04               	movwf	frexp@eptr,c
 30908  01536E  0E00               	movlw	high floor@expon
 30909  015370  6E05               	movwf	frexp@eptr+1,c
 30910  015372  ECBC  F0AF         	call	_frexp	;wreg free
 30911  015376  AE5D               	btfss	floor@expon+1,7,c
 30912  015378  D010               	goto	i2l2200
 30913  01537A  AE58               	btfss	floor@x+2,7,c
 30914  01537C  D007               	goto	i2l2201
 30915  01537E  0E00               	movlw	0
 30916  015380  6E56               	movwf	?_floor,c
 30917  015382  0E80               	movlw	128
 30918  015384  6E57               	movwf	?_floor+1,c
 30919  015386  0EBF               	movlw	191
 30920  015388  6E58               	movwf	?_floor+2,c
 30921  01538A  0012               	return	
 30922  01538C                     i2l2201:
 30923  01538C  0E00               	movlw	0
 30924  01538E  6E56               	movwf	?_floor,c
 30925  015390  0E00               	movlw	0
 30926  015392  6E57               	movwf	?_floor+1,c
 30927  015394  0E00               	movlw	0
 30928  015396  6E58               	movwf	?_floor+2,c
 30929  015398  0012               	return	
 30930  01539A                     i2l2200:
 30931  01539A  505D               	movf	floor@expon+1,w,c
 30932  01539C  E104               	bnz	i2u1702_40
 30933  01539E  0E15               	movlw	21
 30934  0153A0  5C5C               	subwf	floor@expon,w,c
 30935  0153A2  A0D8               	btfss	status,0,c
 30936  0153A4  D007               	goto	i2l2203
 30937  0153A6                     i2u1702_40:
 30938  0153A6  C056  F056         	movff	floor@x,?_floor
 30939  0153AA  C057  F057         	movff	floor@x+1,?_floor+1
 30940  0153AE  C058  F058         	movff	floor@x+2,?_floor+2
 30941  0153B2  0012               	return	
 30942  0153B4                     i2l2203:
 30943  0153B4  C056  F03D         	movff	floor@x,i2___fttol@f1
 30944  0153B8  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 30945  0153BC  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 30946  0153C0  ECD4  F0A7         	call	i2___fttol	;wreg free
 30947  0153C4  C03D  F04C         	movff	?i2___fttol,___altoft@c
 30948  0153C8  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 30949  0153CC  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 30950  0153D0  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 30951  0153D4  ECF8  F0AF         	call	___altoft	;wreg free
 30952  0153D8  C04C  F059         	movff	?___altoft,floor@i
 30953  0153DC  C04D  F05A         	movff	?___altoft+1,floor@i+1
 30954  0153E0  C04E  F05B         	movff	?___altoft+2,floor@i+2
 30955  0153E4  C056  F02A         	movff	floor@x,i2___ftge@ff1
 30956  0153E8  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 30957  0153EC  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 30958  0153F0  C059  F02D         	movff	floor@i,i2___ftge@ff2
 30959  0153F4  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 30960  0153F8  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 30961  0153FC  ECA6  F0AD         	call	i2___ftge	;wreg free
 30962  015400  B0D8               	btfsc	status,0,c
 30963  015402  D015               	goto	i2l2204
 30964  015404  C059  F040         	movff	floor@i,i2___ftadd@f1
 30965  015408  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 30966  01540C  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 30967  015410  0E00               	movlw	0
 30968  015412  6E43               	movwf	i2___ftadd@f2,c
 30969  015414  0E80               	movlw	128
 30970  015416  6E44               	movwf	i2___ftadd@f2+1,c
 30971  015418  0EBF               	movlw	191
 30972  01541A  6E45               	movwf	i2___ftadd@f2+2,c
 30973  01541C  EC52  F0A2         	call	i2___ftadd	;wreg free
 30974  015420  C040  F056         	movff	?i2___ftadd,?_floor
 30975  015424  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 30976  015428  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 30977  01542C  0012               	return	
 30978  01542E                     i2l2204:
 30979  01542E  C059  F056         	movff	floor@i,?_floor
 30980  015432  C05A  F057         	movff	floor@i+1,?_floor+1
 30981  015436  C05B  F058         	movff	floor@i+2,?_floor+2
 30982  01543A  0012               	return		;funcret
 30983  01543C                     __end_of_floor:
 30984                           	opt stack 0
 30985                           tosu	equ	0xFFF
 30986                           tosh	equ	0xFFE
 30987                           tosl	equ	0xFFD
 30988                           pclatu	equ	0xFFB
 30989                           pclath	equ	0xFFA
 30990                           tblptru	equ	0xFF8
 30991                           tblptrh	equ	0xFF7
 30992                           tblptrl	equ	0xFF6
 30993                           tablat	equ	0xFF5
 30994                           prodh	equ	0xFF4
 30995                           prodl	equ	0xFF3
 30996                           intcon	equ	0xFF2
 30997                           indf0	equ	0xFEF
 30998                           postinc0	equ	0xFEE
 30999                           fsr0h	equ	0xFEA
 31000                           fsr0l	equ	0xFE9
 31001                           wreg	equ	0xFE8
 31002                           indf1	equ	0xFE7
 31003                           postdec1	equ	0xFE5
 31004                           plusw1	equ	0xFE3
 31005                           fsr1h	equ	0xFE2
 31006                           fsr1l	equ	0xFE1
 31007                           bsr	equ	0xFE0
 31008                           indf2	equ	0xFDF
 31009                           postinc2	equ	0xFDE
 31010                           postdec2	equ	0xFDD
 31011                           plusw2	equ	0xFDB
 31012                           fsr2h	equ	0xFDA
 31013                           fsr2l	equ	0xFD9
 31014                           status	equ	0xFD8
 31015                           
 31016 ;; *************** function i2___fttol *****************
 31017 ;; Defined at:
 31018 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 31019 ;; Parameters:    Size  Location     Type
 31020 ;;  f1              3   60[COMRAM] float 
 31021 ;; Auto vars:     Size  Location     Type
 31022 ;;  __fttol         4   70[COMRAM] unsigned long 
 31023 ;;  __fttol         1   74[COMRAM] unsigned char 
 31024 ;;  __fttol         1   69[COMRAM] unsigned char 
 31025 ;; Return value:  Size  Location     Type
 31026 ;;                  4   60[COMRAM] long 
 31027 ;; Registers used:
 31028 ;;		wreg, status,2, status,0
 31029 ;; Tracked objects:
 31030 ;;		On entry : 0/0
 31031 ;;		On exit  : 0/0
 31032 ;;		Unchanged: 0/0
 31033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31035 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31036 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31037 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31038 ;;Total ram usage:       15 bytes
 31039 ;; Hardware stack levels used:    1
 31040 ;; This function calls:
 31041 ;;		Nothing
 31042 ;; This function is called by:
 31043 ;;		_floor
 31044 ;;		i2_printf
 31045 ;; This function uses a non-reentrant model
 31046 ;;
 31047                           
 31048                           	psect	text116
 31049  014FA8                     __ptext116:
 31050                           	opt stack 0
 31051  014FA8                     i2___fttol:
 31052                           	opt stack 15
 31053                           
 31054                           ;incstack = 0
 31055  014FA8  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 31056  014FAC  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 31057  014FAE  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 31058  014FB0  343E               	rlcf	i2___fttol@f1+1,w,c
 31059  014FB2  3641               	rlcf	??i2___fttol& (0+255),f,c
 31060  014FB4  E301               	bnc	u1689_41
 31061  014FB6  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 31062  014FB8                     u1689_41:
 31063  014FB8  5041               	movf	??i2___fttol,w,c
 31064  014FBA  6E4B               	movwf	i2___fttol@exp1,c
 31065  014FBC  504B               	movf	i2___fttol@exp1,w,c
 31066  014FBE  A4D8               	btfss	status,2,c
 31067  014FC0  D009               	goto	i2l1859
 31068  014FC2  0E00               	movlw	0
 31069  014FC4  6E3D               	movwf	?i2___fttol,c
 31070  014FC6  0E00               	movlw	0
 31071  014FC8  6E3E               	movwf	?i2___fttol+1,c
 31072  014FCA  0E00               	movlw	0
 31073  014FCC  6E3F               	movwf	?i2___fttol+2,c
 31074  014FCE  0E00               	movlw	0
 31075  014FD0  6E40               	movwf	?i2___fttol+3,c
 31076  014FD2  0012               	return	
 31077  014FD4                     i2l1859:
 31078  014FD4  0E17               	movlw	23
 31079  014FD6  6E41               	movwf	??i2___fttol& (0+255),c
 31080  014FD8  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 31081  014FDC  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 31082  014FE0  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 31083  014FE4  2841               	incf	??i2___fttol,w,c
 31084  014FE6  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 31085  014FE8  D004               	goto	i2u1691_40
 31086  014FEA                     i2u1691_45:
 31087  014FEA  90D8               	bcf	status,0,c
 31088  014FEC  3244               	rrcf	??i2___fttol+3,f,c
 31089  014FEE  3243               	rrcf	??i2___fttol+2,f,c
 31090  014FF0  3242               	rrcf	??i2___fttol+1,f,c
 31091  014FF2                     i2u1691_40:
 31092  014FF2  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 31093  014FF4  D7FA               	goto	i2u1691_45
 31094  014FF6  5042               	movf	??i2___fttol+1,w,c
 31095  014FF8  6E46               	movwf	i2___fttol@sign1,c
 31096  014FFA  8E3E               	bsf	i2___fttol@f1+1,7,c
 31097  014FFC  0EFF               	movlw	255
 31098  014FFE  163D               	andwf	i2___fttol@f1,f,c
 31099  015000  0EFF               	movlw	255
 31100  015002  163E               	andwf	i2___fttol@f1+1,f,c
 31101  015004  0E00               	movlw	0
 31102  015006  163F               	andwf	i2___fttol@f1+2,f,c
 31103  015008  503D               	movf	i2___fttol@f1,w,c
 31104  01500A  6E47               	movwf	i2___fttol@lval,c
 31105  01500C  503E               	movf	i2___fttol@f1+1,w,c
 31106  01500E  6E48               	movwf	i2___fttol@lval+1,c
 31107  015010  503F               	movf	i2___fttol@f1+2,w,c
 31108  015012  6E49               	movwf	i2___fttol@lval+2,c
 31109  015014  6A4A               	clrf	i2___fttol@lval+3,c
 31110  015016  0E8E               	movlw	142
 31111  015018  5E4B               	subwf	i2___fttol@exp1,f,c
 31112  01501A  AE4B               	btfss	i2___fttol@exp1,7,c
 31113  01501C  D016               	goto	i2l1861
 31114  01501E  504B               	movf	i2___fttol@exp1,w,c
 31115  015020  0A80               	xorlw	128
 31116  015022  0F8F               	addlw	143
 31117  015024  B0D8               	btfsc	status,0,c
 31118  015026  D009               	goto	i2l1862
 31119  015028  0E00               	movlw	0
 31120  01502A  6E3D               	movwf	?i2___fttol,c
 31121  01502C  0E00               	movlw	0
 31122  01502E  6E3E               	movwf	?i2___fttol+1,c
 31123  015030  0E00               	movlw	0
 31124  015032  6E3F               	movwf	?i2___fttol+2,c
 31125  015034  0E00               	movlw	0
 31126  015036  6E40               	movwf	?i2___fttol+3,c
 31127  015038  0012               	return	
 31128  01503A                     i2l1862:
 31129  01503A  90D8               	bcf	status,0,c
 31130  01503C  324A               	rrcf	i2___fttol@lval+3,f,c
 31131  01503E  3249               	rrcf	i2___fttol@lval+2,f,c
 31132  015040  3248               	rrcf	i2___fttol@lval+1,f,c
 31133  015042  3247               	rrcf	i2___fttol@lval,f,c
 31134  015044  3E4B               	incfsz	i2___fttol@exp1,f,c
 31135  015046  D7F9               	goto	i2l1862
 31136  015048  D015               	goto	i2u1695_40
 31137  01504A                     i2l1861:
 31138  01504A  0E17               	movlw	23
 31139  01504C  644B               	cpfsgt	i2___fttol@exp1,c
 31140  01504E  D00F               	goto	i2l1867
 31141  015050  0E00               	movlw	0
 31142  015052  6E3D               	movwf	?i2___fttol,c
 31143  015054  0E00               	movlw	0
 31144  015056  6E3E               	movwf	?i2___fttol+1,c
 31145  015058  0E00               	movlw	0
 31146  01505A  6E3F               	movwf	?i2___fttol+2,c
 31147  01505C  0E00               	movlw	0
 31148  01505E  6E40               	movwf	?i2___fttol+3,c
 31149  015060  0012               	return	
 31150  015062  90D8               	bcf	status,0,c
 31151  015064  3647               	rlcf	i2___fttol@lval,f,c
 31152  015066  3648               	rlcf	i2___fttol@lval+1,f,c
 31153  015068  3649               	rlcf	i2___fttol@lval+2,f,c
 31154  01506A  364A               	rlcf	i2___fttol@lval+3,f,c
 31155  01506C  064B               	decf	i2___fttol@exp1,f,c
 31156  01506E                     i2l1867:
 31157  01506E  504B               	movf	i2___fttol@exp1,w,c
 31158  015070  A4D8               	btfss	status,2,c
 31159  015072  D7F7               	goto	i2l1868
 31160  015074                     i2u1695_40:
 31161  015074  5046               	movf	i2___fttol@sign1,w,c
 31162  015076  B4D8               	btfsc	status,2,c
 31163  015078  D008               	goto	i2l1870
 31164  01507A  1E4A               	comf	i2___fttol@lval+3,f,c
 31165  01507C  1E49               	comf	i2___fttol@lval+2,f,c
 31166  01507E  1E48               	comf	i2___fttol@lval+1,f,c
 31167  015080  6C47               	negf	i2___fttol@lval,c
 31168  015082  0E00               	movlw	0
 31169  015084  2248               	addwfc	i2___fttol@lval+1,f,c
 31170  015086  2249               	addwfc	i2___fttol@lval+2,f,c
 31171  015088  224A               	addwfc	i2___fttol@lval+3,f,c
 31172  01508A                     i2l1870:
 31173  01508A  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 31174  01508E  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 31175  015092  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 31176  015096  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 31177  01509A  0012               	return	
 31178  01509C                     __end_ofi2___fttol:
 31179                           	opt stack 0
 31180                           tosu	equ	0xFFF
 31181                           tosh	equ	0xFFE
 31182                           tosl	equ	0xFFD
 31183                           pclatu	equ	0xFFB
 31184                           pclath	equ	0xFFA
 31185                           tblptru	equ	0xFF8
 31186                           tblptrh	equ	0xFF7
 31187                           tblptrl	equ	0xFF6
 31188                           tablat	equ	0xFF5
 31189                           prodh	equ	0xFF4
 31190                           prodl	equ	0xFF3
 31191                           intcon	equ	0xFF2
 31192                           indf0	equ	0xFEF
 31193                           postinc0	equ	0xFEE
 31194                           fsr0h	equ	0xFEA
 31195                           fsr0l	equ	0xFE9
 31196                           wreg	equ	0xFE8
 31197                           indf1	equ	0xFE7
 31198                           postdec1	equ	0xFE5
 31199                           plusw1	equ	0xFE3
 31200                           fsr1h	equ	0xFE2
 31201                           fsr1l	equ	0xFE1
 31202                           bsr	equ	0xFE0
 31203                           indf2	equ	0xFDF
 31204                           postinc2	equ	0xFDE
 31205                           postdec2	equ	0xFDD
 31206                           plusw2	equ	0xFDB
 31207                           fsr2h	equ	0xFDA
 31208                           fsr2l	equ	0xFD9
 31209                           status	equ	0xFD8
 31210                           
 31211 ;; *************** function i2___ftge *****************
 31212 ;; Defined at:
 31213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 31214 ;; Parameters:    Size  Location     Type
 31215 ;;  ff1             3   41[COMRAM] float 
 31216 ;;  ff2             3   44[COMRAM] float 
 31217 ;; Auto vars:     Size  Location     Type
 31218 ;;		None
 31219 ;; Return value:  Size  Location     Type
 31220 ;;		None               void
 31221 ;; Registers used:
 31222 ;;		wreg, status,2, status,0
 31223 ;; Tracked objects:
 31224 ;;		On entry : 0/0
 31225 ;;		On exit  : 0/0
 31226 ;;		Unchanged: 0/0
 31227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31228 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31230 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31231 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31232 ;;Total ram usage:        9 bytes
 31233 ;; Hardware stack levels used:    1
 31234 ;; This function calls:
 31235 ;;		Nothing
 31236 ;; This function is called by:
 31237 ;;		_ADCPostProcessingCallback
 31238 ;;		_asin
 31239 ;;		_atan
 31240 ;;		_sin
 31241 ;;		_sqrt
 31242 ;;		_floor
 31243 ;;		i2_printf
 31244 ;; This function uses a non-reentrant model
 31245 ;;
 31246                           
 31247                           	psect	text117
 31248  015B4C                     __ptext117:
 31249                           	opt stack 0
 31250  015B4C                     i2___ftge:
 31251                           	opt stack 15
 31252                           
 31253                           ;incstack = 0
 31254  015B4C  AE2C               	btfss	i2___ftge@ff1+2,7,c
 31255  015B4E  D016               	goto	i2l1831
 31256  015B50  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 31257  015B54  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 31258  015B58  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 31259  015B5C  1E30               	comf	??i2___ftge,f,c
 31260  015B5E  1E31               	comf	??i2___ftge+1,f,c
 31261  015B60  1E32               	comf	??i2___ftge+2,f,c
 31262  015B62  2A30               	incf	??i2___ftge,f,c
 31263  015B64  0E00               	movlw	0
 31264  015B66  2231               	addwfc	??i2___ftge+1,f,c
 31265  015B68  2232               	addwfc	??i2___ftge+2,f,c
 31266  015B6A  0E00               	movlw	0
 31267  015B6C  2430               	addwf	??i2___ftge,w,c
 31268  015B6E  6E2A               	movwf	i2___ftge@ff1,c
 31269  015B70  0E00               	movlw	0
 31270  015B72  2031               	addwfc	??i2___ftge+1,w,c
 31271  015B74  6E2B               	movwf	i2___ftge@ff1+1,c
 31272  015B76  0E80               	movlw	128
 31273  015B78  2032               	addwfc	??i2___ftge+2,w,c
 31274  015B7A  6E2C               	movwf	i2___ftge@ff1+2,c
 31275  015B7C                     i2l1831:
 31276  015B7C  AE2F               	btfss	i2___ftge@ff2+2,7,c
 31277  015B7E  D016               	goto	i2l1832
 31278  015B80  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 31279  015B84  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 31280  015B88  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 31281  015B8C  1E30               	comf	??i2___ftge,f,c
 31282  015B8E  1E31               	comf	??i2___ftge+1,f,c
 31283  015B90  1E32               	comf	??i2___ftge+2,f,c
 31284  015B92  2A30               	incf	??i2___ftge,f,c
 31285  015B94  0E00               	movlw	0
 31286  015B96  2231               	addwfc	??i2___ftge+1,f,c
 31287  015B98  2232               	addwfc	??i2___ftge+2,f,c
 31288  015B9A  0E00               	movlw	0
 31289  015B9C  2430               	addwf	??i2___ftge,w,c
 31290  015B9E  6E2D               	movwf	i2___ftge@ff2,c
 31291  015BA0  0E00               	movlw	0
 31292  015BA2  2031               	addwfc	??i2___ftge+1,w,c
 31293  015BA4  6E2E               	movwf	i2___ftge@ff2+1,c
 31294  015BA6  0E80               	movlw	128
 31295  015BA8  2032               	addwfc	??i2___ftge+2,w,c
 31296  015BAA  6E2F               	movwf	i2___ftge@ff2+2,c
 31297  015BAC                     i2l1832:
 31298  015BAC  0E00               	movlw	0
 31299  015BAE  1A2A               	xorwf	i2___ftge@ff1,f,c
 31300  015BB0  0E00               	movlw	0
 31301  015BB2  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 31302  015BB4  0E80               	movlw	128
 31303  015BB6  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 31304  015BB8  0E00               	movlw	0
 31305  015BBA  1A2D               	xorwf	i2___ftge@ff2,f,c
 31306  015BBC  0E00               	movlw	0
 31307  015BBE  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 31308  015BC0  0E80               	movlw	128
 31309  015BC2  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 31310  015BC4  502D               	movf	i2___ftge@ff2,w,c
 31311  015BC6  5C2A               	subwf	i2___ftge@ff1,w,c
 31312  015BC8  502E               	movf	i2___ftge@ff2+1,w,c
 31313  015BCA  582B               	subwfb	i2___ftge@ff1+1,w,c
 31314  015BCC  502F               	movf	i2___ftge@ff2+2,w,c
 31315  015BCE  582C               	subwfb	i2___ftge@ff1+2,w,c
 31316  015BD0  B0D8               	btfsc	status,0,c
 31317  015BD2  D002               	goto	i2l13545
 31318  015BD4  90D8               	bcf	status,0,c
 31319  015BD6  0012               	return	
 31320  015BD8                     i2l13545:
 31321  015BD8  80D8               	bsf	status,0,c
 31322  015BDA  0012               	return	
 31323  015BDC                     __end_ofi2___ftge:
 31324                           	opt stack 0
 31325                           tosu	equ	0xFFF
 31326                           tosh	equ	0xFFE
 31327                           tosl	equ	0xFFD
 31328                           pclatu	equ	0xFFB
 31329                           pclath	equ	0xFFA
 31330                           tblptru	equ	0xFF8
 31331                           tblptrh	equ	0xFF7
 31332                           tblptrl	equ	0xFF6
 31333                           tablat	equ	0xFF5
 31334                           prodh	equ	0xFF4
 31335                           prodl	equ	0xFF3
 31336                           intcon	equ	0xFF2
 31337                           indf0	equ	0xFEF
 31338                           postinc0	equ	0xFEE
 31339                           fsr0h	equ	0xFEA
 31340                           fsr0l	equ	0xFE9
 31341                           wreg	equ	0xFE8
 31342                           indf1	equ	0xFE7
 31343                           postdec1	equ	0xFE5
 31344                           plusw1	equ	0xFE3
 31345                           fsr1h	equ	0xFE2
 31346                           fsr1l	equ	0xFE1
 31347                           bsr	equ	0xFE0
 31348                           indf2	equ	0xFDF
 31349                           postinc2	equ	0xFDE
 31350                           postdec2	equ	0xFDD
 31351                           plusw2	equ	0xFDB
 31352                           fsr2h	equ	0xFDA
 31353                           fsr2l	equ	0xFD9
 31354                           status	equ	0xFD8
 31355                           
 31356 ;; *************** function _frexp *****************
 31357 ;; Defined at:
 31358 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 31359 ;; Parameters:    Size  Location     Type
 31360 ;;  value           3    0[COMRAM] float 
 31361 ;;  eptr            2    3[COMRAM] PTR int 
 31362 ;;		 -> floor@expon(2), 
 31363 ;; Auto vars:     Size  Location     Type
 31364 ;;		None
 31365 ;; Return value:  Size  Location     Type
 31366 ;;                  3    0[COMRAM] PTR int 
 31367 ;; Registers used:
 31368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31369 ;; Tracked objects:
 31370 ;;		On entry : 0/0
 31371 ;;		On exit  : 0/0
 31372 ;;		Unchanged: 0/0
 31373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31374 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31378 ;;Total ram usage:        7 bytes
 31379 ;; Hardware stack levels used:    1
 31380 ;; This function calls:
 31381 ;;		Nothing
 31382 ;; This function is called by:
 31383 ;;		_floor
 31384 ;; This function uses a non-reentrant model
 31385 ;;
 31386                           
 31387                           	psect	text118
 31388  015F78                     __ptext118:
 31389                           	opt stack 0
 31390  015F78                     _frexp:
 31391                           	opt stack 12
 31392                           
 31393                           ;incstack = 0
 31394  015F78  5001               	movf	frexp@value,w,c
 31395  015F7A  1002               	iorwf	frexp@value+1,w,c
 31396  015F7C  1003               	iorwf	frexp@value+2,w,c
 31397  015F7E  A4D8               	btfss	status,2,c
 31398  015F80  D009               	goto	i2l2209
 31399  015F82  C004  FFD9         	movff	frexp@eptr,fsr2l
 31400  015F86  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31401  015F8A  0E00               	movlw	0
 31402  015F8C  6EDE               	movwf	postinc2,c
 31403  015F8E  0E00               	movlw	0
 31404  015F90  6EDD               	movwf	postdec2,c
 31405                           
 31406                           ;	Return value of _frexp is never used
 31407  015F92  0012               	return	
 31408  015F94                     i2l2209:
 31409  015F94  5003               	movf	frexp@value+2,w,c
 31410  015F96  0B7F               	andlw	127
 31411  015F98  6E06               	movwf	??_frexp& (0+255),c
 31412  015F9A  6A07               	clrf	(??_frexp+1)& (0+255),c
 31413  015F9C  90D8               	bcf	status,0,c
 31414  015F9E  3606               	rlcf	??_frexp,f,c
 31415  015FA0  3607               	rlcf	??_frexp+1,f,c
 31416  015FA2  C004  FFD9         	movff	frexp@eptr,fsr2l
 31417  015FA6  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31418  015FAA  C006  FFDE         	movff	??_frexp,postinc2
 31419  015FAE  C007  FFDD         	movff	??_frexp+1,postdec2
 31420  015FB2  AE02               	btfss	frexp@value+1,7,c
 31421  015FB4  D003               	goto	i2u1688_40
 31422  015FB6  6A06               	clrf	??_frexp& (0+255),c
 31423  015FB8  2A06               	incf	??_frexp& (0+255),f,c
 31424  015FBA  D001               	goto	i2u1688_48
 31425  015FBC                     i2u1688_40:
 31426  015FBC  6A06               	clrf	??_frexp& (0+255),c
 31427  015FBE                     i2u1688_48:
 31428  015FBE  5006               	movf	??_frexp,w,c
 31429  015FC0  C004  FFD9         	movff	frexp@eptr,fsr2l
 31430  015FC4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31431  015FC8  12DE               	iorwf	postinc2,f,c
 31432  015FCA  0E00               	movlw	0
 31433  015FCC  12DD               	iorwf	postdec2,f,c
 31434  015FCE  C004  FFD9         	movff	frexp@eptr,fsr2l
 31435  015FD2  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31436  015FD6  0E82               	movlw	130
 31437  015FD8  26DE               	addwf	postinc2,f,c
 31438  015FDA  0EFF               	movlw	255
 31439  015FDC  22DD               	addwfc	postdec2,f,c
 31440  015FDE  8003               	bsf	frexp@value+2,0,c
 31441  015FE0  8203               	bsf	frexp@value+2,1,c
 31442  015FE2  8403               	bsf	frexp@value+2,2,c
 31443  015FE4  8603               	bsf	frexp@value+2,3,c
 31444  015FE6  8803               	bsf	frexp@value+2,4,c
 31445  015FE8  8A03               	bsf	frexp@value+2,5,c
 31446  015FEA  9C03               	bcf	frexp@value+2,6,c
 31447  015FEC  9E02               	bcf	frexp@value+1,7,c
 31448  015FEE  0012               	return	
 31449  015FF0                     __end_of_frexp:
 31450                           	opt stack 0
 31451                           tosu	equ	0xFFF
 31452                           tosh	equ	0xFFE
 31453                           tosl	equ	0xFFD
 31454                           pclatu	equ	0xFFB
 31455                           pclath	equ	0xFFA
 31456                           tblptru	equ	0xFF8
 31457                           tblptrh	equ	0xFF7
 31458                           tblptrl	equ	0xFF6
 31459                           tablat	equ	0xFF5
 31460                           prodh	equ	0xFF4
 31461                           prodl	equ	0xFF3
 31462                           intcon	equ	0xFF2
 31463                           indf0	equ	0xFEF
 31464                           postinc0	equ	0xFEE
 31465                           fsr0h	equ	0xFEA
 31466                           fsr0l	equ	0xFE9
 31467                           wreg	equ	0xFE8
 31468                           indf1	equ	0xFE7
 31469                           postdec1	equ	0xFE5
 31470                           plusw1	equ	0xFE3
 31471                           fsr1h	equ	0xFE2
 31472                           fsr1l	equ	0xFE1
 31473                           bsr	equ	0xFE0
 31474                           indf2	equ	0xFDF
 31475                           postinc2	equ	0xFDE
 31476                           postdec2	equ	0xFDD
 31477                           plusw2	equ	0xFDB
 31478                           fsr2h	equ	0xFDA
 31479                           fsr2l	equ	0xFD9
 31480                           status	equ	0xFD8
 31481                           
 31482 ;; *************** function ___altoft *****************
 31483 ;; Defined at:
 31484 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 31485 ;; Parameters:    Size  Location     Type
 31486 ;;  c               4   75[COMRAM] long 
 31487 ;; Auto vars:     Size  Location     Type
 31488 ;;  sign            1   84[COMRAM] unsigned char 
 31489 ;;  exp             1   83[COMRAM] unsigned char 
 31490 ;; Return value:  Size  Location     Type
 31491 ;;                  3   75[COMRAM] float 
 31492 ;; Registers used:
 31493 ;;		wreg, status,2, status,0, cstack
 31494 ;; Tracked objects:
 31495 ;;		On entry : 0/0
 31496 ;;		On exit  : 0/0
 31497 ;;		Unchanged: 0/0
 31498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31501 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31502 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31503 ;;Total ram usage:       10 bytes
 31504 ;; Hardware stack levels used:    1
 31505 ;; Hardware stack levels required when called:    1
 31506 ;; This function calls:
 31507 ;;		i2___ftpack
 31508 ;; This function is called by:
 31509 ;;		_floor
 31510 ;; This function uses a non-reentrant model
 31511 ;;
 31512                           
 31513                           	psect	text119
 31514  015FF0                     __ptext119:
 31515                           	opt stack 0
 31516  015FF0                     ___altoft:
 31517                           	opt stack 11
 31518                           
 31519                           ;incstack = 0
 31520  015FF0  0E00               	movlw	0
 31521  015FF2  6E55               	movwf	___altoft@sign,c
 31522  015FF4  0E8E               	movlw	142
 31523  015FF6  6E54               	movwf	___altoft@exp,c
 31524  015FF8  AE4F               	btfss	___altoft@c+3,7,c
 31525  015FFA  D011               	goto	i2l1536
 31526  015FFC  1E4F               	comf	___altoft@c+3,f,c
 31527  015FFE  1E4E               	comf	___altoft@c+2,f,c
 31528  016000  1E4D               	comf	___altoft@c+1,f,c
 31529  016002  6C4C               	negf	___altoft@c,c
 31530  016004  0E00               	movlw	0
 31531  016006  224D               	addwfc	___altoft@c+1,f,c
 31532  016008  224E               	addwfc	___altoft@c+2,f,c
 31533  01600A  224F               	addwfc	___altoft@c+3,f,c
 31534  01600C  0E01               	movlw	1
 31535  01600E  6E55               	movwf	___altoft@sign,c
 31536  016010  D006               	goto	i2l1536
 31537  016012  90D8               	bcf	status,0,c
 31538  016014  324F               	rrcf	___altoft@c+3,f,c
 31539  016016  324E               	rrcf	___altoft@c+2,f,c
 31540  016018  324D               	rrcf	___altoft@c+1,f,c
 31541  01601A  324C               	rrcf	___altoft@c,f,c
 31542  01601C  2A54               	incf	___altoft@exp,f,c
 31543  01601E                     i2l1536:
 31544  01601E  0E00               	movlw	0
 31545  016020  144C               	andwf	___altoft@c,w,c
 31546  016022  6E50               	movwf	??___altoft& (0+255),c
 31547  016024  0E00               	movlw	0
 31548  016026  144D               	andwf	___altoft@c+1,w,c
 31549  016028  6E51               	movwf	(??___altoft+1)& (0+255),c
 31550  01602A  0E00               	movlw	0
 31551  01602C  144E               	andwf	___altoft@c+2,w,c
 31552  01602E  6E52               	movwf	(??___altoft+2)& (0+255),c
 31553  016030  0EFF               	movlw	255
 31554  016032  144F               	andwf	___altoft@c+3,w,c
 31555  016034  6E53               	movwf	(??___altoft+3)& (0+255),c
 31556  016036  5050               	movf	??___altoft,w,c
 31557  016038  1051               	iorwf	??___altoft+1,w,c
 31558  01603A  1052               	iorwf	??___altoft+2,w,c
 31559  01603C  1053               	iorwf	??___altoft+3,w,c
 31560  01603E  A4D8               	btfss	status,2,c
 31561  016040  D7E8               	goto	i2l1537
 31562  016042  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 31563  016046  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 31564  01604A  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 31565  01604E  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 31566  016052  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 31567  016056  EC6D  F0AC         	call	i2___ftpack	;wreg free
 31568  01605A  C001  F04C         	movff	?i2___ftpack,?___altoft
 31569  01605E  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 31570  016062  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 31571  016066  0012               	return	
 31572  016068                     __end_of___altoft:
 31573                           	opt stack 0
 31574                           tosu	equ	0xFFF
 31575                           tosh	equ	0xFFE
 31576                           tosl	equ	0xFFD
 31577                           pclatu	equ	0xFFB
 31578                           pclath	equ	0xFFA
 31579                           tblptru	equ	0xFF8
 31580                           tblptrh	equ	0xFF7
 31581                           tblptrl	equ	0xFF6
 31582                           tablat	equ	0xFF5
 31583                           prodh	equ	0xFF4
 31584                           prodl	equ	0xFF3
 31585                           intcon	equ	0xFF2
 31586                           indf0	equ	0xFEF
 31587                           postinc0	equ	0xFEE
 31588                           fsr0h	equ	0xFEA
 31589                           fsr0l	equ	0xFE9
 31590                           wreg	equ	0xFE8
 31591                           indf1	equ	0xFE7
 31592                           postdec1	equ	0xFE5
 31593                           plusw1	equ	0xFE3
 31594                           fsr1h	equ	0xFE2
 31595                           fsr1l	equ	0xFE1
 31596                           bsr	equ	0xFE0
 31597                           indf2	equ	0xFDF
 31598                           postinc2	equ	0xFDE
 31599                           postdec2	equ	0xFDD
 31600                           plusw2	equ	0xFDB
 31601                           fsr2h	equ	0xFDA
 31602                           fsr2l	equ	0xFD9
 31603                           status	equ	0xFD8
 31604                           
 31605 ;; *************** function _eval_poly *****************
 31606 ;; Defined at:
 31607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 31608 ;; Parameters:    Size  Location     Type
 31609 ;;  x               3   75[COMRAM] float 
 31610 ;;  d               2   78[COMRAM] PTR const 
 31611 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 31612 ;;  n               2   80[COMRAM] int 
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;  res             3   84[COMRAM] int 
 31615 ;; Return value:  Size  Location     Type
 31616 ;;                  3   75[COMRAM] int 
 31617 ;; Registers used:
 31618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31619 ;; Tracked objects:
 31620 ;;		On entry : 0/0
 31621 ;;		On exit  : 0/0
 31622 ;;		Unchanged: 0/0
 31623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31624 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31627 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31628 ;;Total ram usage:       12 bytes
 31629 ;; Hardware stack levels used:    1
 31630 ;; Hardware stack levels required when called:    2
 31631 ;; This function calls:
 31632 ;;		i2___ftadd
 31633 ;;		i2___ftmul
 31634 ;;		i2___wmul
 31635 ;; This function is called by:
 31636 ;;		_atan
 31637 ;;		_sin
 31638 ;; This function uses a non-reentrant model
 31639 ;;
 31640                           
 31641                           	psect	text120
 31642  01543C                     __ptext120:
 31643                           	opt stack 0
 31644  01543C                     _eval_poly:
 31645                           	opt stack 11
 31646                           
 31647                           ;incstack = 0
 31648  01543C  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 31649  015440  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 31650  015444  0E00               	movlw	0
 31651  015446  6E12               	movwf	i2___wmul@multiplicand+1,c
 31652  015448  0E03               	movlw	3
 31653  01544A  6E11               	movwf	i2___wmul@multiplicand,c
 31654  01544C  EC27  F0B6         	call	i2___wmul	;wreg free
 31655  015450  C04F  F053         	movff	eval_poly@d,??_eval_poly
 31656  015454  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 31657  015458  500F               	movf	?i2___wmul,w,c
 31658  01545A  2653               	addwf	??_eval_poly,f,c
 31659  01545C  5010               	movf	?i2___wmul+1,w,c
 31660  01545E  2254               	addwfc	??_eval_poly+1,f,c
 31661  015460  C053  FFF6         	movff	??_eval_poly,tblptrl
 31662  015464  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 31663  015468                     	if	0	;tblptru may be non-zero
 31664  015468                     	endif
 31665  015468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31666  015468  0E00               	movlw	low (__mediumconst shr (0+16))
 31667  01546A  6EF8               	movwf	tblptru,c
 31668  01546C                     	endif
 31669  01546C  0009               	tblrd		*+
 31670  01546E  CFF5 F055          	movff	tablat,eval_poly@res
 31671  015472  0009               	tblrd		*+
 31672  015474  CFF5 F056          	movff	tablat,eval_poly@res+1
 31673  015478  000A               	tblrd		*-
 31674  01547A  CFF5 F057          	movff	tablat,eval_poly@res+2
 31675  01547E  D040               	goto	i2l1700
 31676  015480  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 31677  015484  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 31678  015488  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 31679  01548C  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 31680  015490  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 31681  015494  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 31682  015498  EC4E  F0A8         	call	i2___ftmul	;wreg free
 31683  01549C  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 31684  0154A0  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 31685  0154A4  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 31686  0154A8  0E00               	movlw	0
 31687  0154AA  6E12               	movwf	i2___wmul@multiplicand+1,c
 31688  0154AC  0E03               	movlw	3
 31689  0154AE  6E11               	movwf	i2___wmul@multiplicand,c
 31690  0154B0  0651               	decf	eval_poly@n,f,c
 31691  0154B2  A0D8               	btfss	status,0,c
 31692  0154B4  0652               	decf	eval_poly@n+1,f,c
 31693  0154B6  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 31694  0154BA  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 31695  0154BE  EC27  F0B6         	call	i2___wmul	;wreg free
 31696  0154C2  C04F  F053         	movff	eval_poly@d,??_eval_poly
 31697  0154C6  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 31698  0154CA  500F               	movf	?i2___wmul,w,c
 31699  0154CC  2653               	addwf	??_eval_poly,f,c
 31700  0154CE  5010               	movf	?i2___wmul+1,w,c
 31701  0154D0  2254               	addwfc	??_eval_poly+1,f,c
 31702  0154D2  C053  FFF6         	movff	??_eval_poly,tblptrl
 31703  0154D6  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 31704  0154DA                     	if	0	;tblptru may be non-zero
 31705  0154DA                     	endif
 31706  0154DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31707  0154DA  0E00               	movlw	low (__mediumconst shr (0+16))
 31708  0154DC  6EF8               	movwf	tblptru,c
 31709  0154DE                     	endif
 31710  0154DE  0009               	tblrd		*+
 31711  0154E0  CFF5 F043          	movff	tablat,i2___ftadd@f2
 31712  0154E4  0009               	tblrd		*+
 31713  0154E6  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 31714  0154EA  000A               	tblrd		*-
 31715  0154EC  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 31716  0154F0  EC52  F0A2         	call	i2___ftadd	;wreg free
 31717  0154F4  C040  F055         	movff	?i2___ftadd,eval_poly@res
 31718  0154F8  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 31719  0154FC  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 31720  015500                     i2l1700:
 31721  015500  5051               	movf	eval_poly@n,w,c
 31722  015502  1052               	iorwf	eval_poly@n+1,w,c
 31723  015504  A4D8               	btfss	status,2,c
 31724  015506  D7BC               	goto	i2l1701
 31725  015508  C055  F04C         	movff	eval_poly@res,?_eval_poly
 31726  01550C  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 31727  015510  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 31728  015514  0012               	return		;funcret
 31729  015516                     __end_of_eval_poly:
 31730                           	opt stack 0
 31731                           tosu	equ	0xFFF
 31732                           tosh	equ	0xFFE
 31733                           tosl	equ	0xFFD
 31734                           pclatu	equ	0xFFB
 31735                           pclath	equ	0xFFA
 31736                           tblptru	equ	0xFF8
 31737                           tblptrh	equ	0xFF7
 31738                           tblptrl	equ	0xFF6
 31739                           tablat	equ	0xFF5
 31740                           prodh	equ	0xFF4
 31741                           prodl	equ	0xFF3
 31742                           intcon	equ	0xFF2
 31743                           indf0	equ	0xFEF
 31744                           postinc0	equ	0xFEE
 31745                           fsr0h	equ	0xFEA
 31746                           fsr0l	equ	0xFE9
 31747                           wreg	equ	0xFE8
 31748                           indf1	equ	0xFE7
 31749                           postdec1	equ	0xFE5
 31750                           plusw1	equ	0xFE3
 31751                           fsr1h	equ	0xFE2
 31752                           fsr1l	equ	0xFE1
 31753                           bsr	equ	0xFE0
 31754                           indf2	equ	0xFDF
 31755                           postinc2	equ	0xFDE
 31756                           postdec2	equ	0xFDD
 31757                           plusw2	equ	0xFDB
 31758                           fsr2h	equ	0xFDA
 31759                           fsr2l	equ	0xFD9
 31760                           status	equ	0xFD8
 31761                           
 31762 ;; *************** function i2___wmul *****************
 31763 ;; Defined at:
 31764 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 31765 ;; Parameters:    Size  Location     Type
 31766 ;;  multiplier      2   14[COMRAM] unsigned int 
 31767 ;;  multiplicand    2   16[COMRAM] unsigned int 
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;  __wmul          2   18[COMRAM] unsigned int 
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  2   14[COMRAM] unsigned int 
 31772 ;; Registers used:
 31773 ;;		wreg, status,2, status,0, prodl, prodh
 31774 ;; Tracked objects:
 31775 ;;		On entry : 0/0
 31776 ;;		On exit  : 0/0
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31782 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31783 ;;Total ram usage:        6 bytes
 31784 ;; Hardware stack levels used:    1
 31785 ;; This function calls:
 31786 ;;		Nothing
 31787 ;; This function is called by:
 31788 ;;		_eval_poly
 31789 ;;		i2_fround
 31790 ;;		i2_scale
 31791 ;;		i2_printf
 31792 ;; This function uses a non-reentrant model
 31793 ;;
 31794                           
 31795                           	psect	text121
 31796  016C4E                     __ptext121:
 31797                           	opt stack 0
 31798  016C4E                     i2___wmul:
 31799                           	opt stack 14
 31800                           
 31801                           ;incstack = 0
 31802  016C4E  500F               	movf	i2___wmul@multiplier,w,c
 31803  016C50  0211               	mulwf	i2___wmul@multiplicand,c
 31804  016C52  CFF3 F013          	movff	prodl,i2___wmul@product
 31805  016C56  CFF4 F014          	movff	prodh,i2___wmul@product+1
 31806  016C5A  500F               	movf	i2___wmul@multiplier,w,c
 31807  016C5C  0212               	mulwf	i2___wmul@multiplicand+1,c
 31808  016C5E  50F3               	movf	prodl,w,c
 31809  016C60  2614               	addwf	i2___wmul@product+1,f,c
 31810  016C62  5010               	movf	i2___wmul@multiplier+1,w,c
 31811  016C64  0211               	mulwf	i2___wmul@multiplicand,c
 31812  016C66  50F3               	movf	prodl,w,c
 31813  016C68  2614               	addwf	i2___wmul@product+1,f,c
 31814  016C6A  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 31815  016C6E  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 31816  016C72  0012               	return	
 31817  016C74                     __end_ofi2___wmul:
 31818                           	opt stack 0
 31819                           tosu	equ	0xFFF
 31820                           tosh	equ	0xFFE
 31821                           tosl	equ	0xFFD
 31822                           pclatu	equ	0xFFB
 31823                           pclath	equ	0xFFA
 31824                           tblptru	equ	0xFF8
 31825                           tblptrh	equ	0xFF7
 31826                           tblptrl	equ	0xFF6
 31827                           tablat	equ	0xFF5
 31828                           prodh	equ	0xFF4
 31829                           prodl	equ	0xFF3
 31830                           intcon	equ	0xFF2
 31831                           indf0	equ	0xFEF
 31832                           postinc0	equ	0xFEE
 31833                           fsr0h	equ	0xFEA
 31834                           fsr0l	equ	0xFE9
 31835                           wreg	equ	0xFE8
 31836                           indf1	equ	0xFE7
 31837                           postdec1	equ	0xFE5
 31838                           plusw1	equ	0xFE3
 31839                           fsr1h	equ	0xFE2
 31840                           fsr1l	equ	0xFE1
 31841                           bsr	equ	0xFE0
 31842                           indf2	equ	0xFDF
 31843                           postinc2	equ	0xFDE
 31844                           postdec2	equ	0xFDD
 31845                           plusw2	equ	0xFDB
 31846                           fsr2h	equ	0xFDA
 31847                           fsr2l	equ	0xFD9
 31848                           status	equ	0xFD8
 31849                           
 31850 ;; *************** function i2___ftmul *****************
 31851 ;; Defined at:
 31852 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;  f1              3   38[COMRAM] float 
 31855 ;;  f2              3   41[COMRAM] float 
 31856 ;; Auto vars:     Size  Location     Type
 31857 ;;  __ftmul         3   48[COMRAM] unsigned um
 31858 ;;  __ftmul         1   52[COMRAM] unsigned char 
 31859 ;;  __ftmul         1   51[COMRAM] unsigned char 
 31860 ;;  __ftmul         1   47[COMRAM] unsigned char 
 31861 ;; Return value:  Size  Location     Type
 31862 ;;                  3   38[COMRAM] float 
 31863 ;; Registers used:
 31864 ;;		wreg, status,2, status,0, cstack
 31865 ;; Tracked objects:
 31866 ;;		On entry : 0/0
 31867 ;;		On exit  : 0/0
 31868 ;;		Unchanged: 0/0
 31869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31870 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31871 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31872 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31873 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31874 ;;Total ram usage:       15 bytes
 31875 ;; Hardware stack levels used:    1
 31876 ;; Hardware stack levels required when called:    1
 31877 ;; This function calls:
 31878 ;;		i2___ftpack
 31879 ;; This function is called by:
 31880 ;;		_peakToRMS
 31881 ;;		_ADCPostProcessingCallback
 31882 ;;		_asin
 31883 ;;		_atan
 31884 ;;		_eval_poly
 31885 ;;		_sin
 31886 ;;		_sqrt
 31887 ;;		i2_fround
 31888 ;;		i2_scale
 31889 ;;		i2_printf
 31890 ;; This function uses a non-reentrant model
 31891 ;;
 31892                           
 31893                           	psect	text122
 31894  01509C                     __ptext122:
 31895                           	opt stack 0
 31896  01509C                     i2___ftmul:
 31897                           	opt stack 13
 31898                           
 31899                           ;incstack = 0
 31900  01509C  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 31901  0150A0  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 31902  0150A2  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 31903  0150A4  3428               	rlcf	i2___ftmul@f1+1,w,c
 31904  0150A6  362D               	rlcf	??i2___ftmul& (0+255),f,c
 31905  0150A8  E301               	bnc	u1659_41
 31906  0150AA  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 31907  0150AC                     u1659_41:
 31908  0150AC  502D               	movf	??i2___ftmul,w,c
 31909  0150AE  6E30               	movwf	i2___ftmul@exp,c
 31910  0150B0  5030               	movf	i2___ftmul@exp,w,c
 31911  0150B2  A4D8               	btfss	status,2,c
 31912  0150B4  D007               	goto	i2l1838
 31913  0150B6  0E00               	movlw	0
 31914  0150B8  6E27               	movwf	?i2___ftmul,c
 31915  0150BA  0E00               	movlw	0
 31916  0150BC  6E28               	movwf	?i2___ftmul+1,c
 31917  0150BE  0E00               	movlw	0
 31918  0150C0  6E29               	movwf	?i2___ftmul+2,c
 31919  0150C2  0012               	return	
 31920  0150C4                     i2l1838:
 31921  0150C4  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 31922  0150C8  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 31923  0150CA  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 31924  0150CC  342B               	rlcf	i2___ftmul@f2+1,w,c
 31925  0150CE  362D               	rlcf	??i2___ftmul& (0+255),f,c
 31926  0150D0  E301               	bnc	u1661_41
 31927  0150D2  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 31928  0150D4                     u1661_41:
 31929  0150D4  502D               	movf	??i2___ftmul,w,c
 31930  0150D6  6E35               	movwf	i2___ftmul@sign,c
 31931  0150D8  5035               	movf	i2___ftmul@sign,w,c
 31932  0150DA  A4D8               	btfss	status,2,c
 31933  0150DC  D007               	goto	i2l1840
 31934  0150DE  0E00               	movlw	0
 31935  0150E0  6E27               	movwf	?i2___ftmul,c
 31936  0150E2  0E00               	movlw	0
 31937  0150E4  6E28               	movwf	?i2___ftmul+1,c
 31938  0150E6  0E00               	movlw	0
 31939  0150E8  6E29               	movwf	?i2___ftmul+2,c
 31940  0150EA  0012               	return	
 31941  0150EC                     i2l1840:
 31942  0150EC  5035               	movf	i2___ftmul@sign,w,c
 31943  0150EE  0F7B               	addlw	123
 31944  0150F0  2630               	addwf	i2___ftmul@exp,f,c
 31945  0150F2  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 31946  0150F6  502C               	movf	i2___ftmul@f2+2,w,c
 31947  0150F8  1A35               	xorwf	i2___ftmul@sign,f,c
 31948  0150FA  0E80               	movlw	128
 31949  0150FC  1635               	andwf	i2___ftmul@sign,f,c
 31950  0150FE  8E28               	bsf	i2___ftmul@f1+1,7,c
 31951  015100  8E2B               	bsf	i2___ftmul@f2+1,7,c
 31952  015102  0EFF               	movlw	255
 31953  015104  162A               	andwf	i2___ftmul@f2,f,c
 31954  015106  0EFF               	movlw	255
 31955  015108  162B               	andwf	i2___ftmul@f2+1,f,c
 31956  01510A  0E00               	movlw	0
 31957  01510C  162C               	andwf	i2___ftmul@f2+2,f,c
 31958  01510E  0E00               	movlw	0
 31959  015110  6E31               	movwf	i2___ftmul@f3_as_product,c
 31960  015112  0E00               	movlw	0
 31961  015114  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 31962  015116  0E00               	movlw	0
 31963  015118  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 31964  01511A  0E07               	movlw	7
 31965  01511C  6E34               	movwf	i2___ftmul@cntr,c
 31966  01511E  A027               	btfss	i2___ftmul@f1,0,c
 31967  015120  D006               	goto	i2l1842
 31968  015122  502A               	movf	i2___ftmul@f2,w,c
 31969  015124  2631               	addwf	i2___ftmul@f3_as_product,f,c
 31970  015126  502B               	movf	i2___ftmul@f2+1,w,c
 31971  015128  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 31972  01512A  502C               	movf	i2___ftmul@f2+2,w,c
 31973  01512C  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 31974  01512E                     i2l1842:
 31975  01512E  90D8               	bcf	status,0,c
 31976  015130  3229               	rrcf	i2___ftmul@f1+2,f,c
 31977  015132  3228               	rrcf	i2___ftmul@f1+1,f,c
 31978  015134  3227               	rrcf	i2___ftmul@f1,f,c
 31979  015136  90D8               	bcf	status,0,c
 31980  015138  362A               	rlcf	i2___ftmul@f2,f,c
 31981  01513A  362B               	rlcf	i2___ftmul@f2+1,f,c
 31982  01513C  362C               	rlcf	i2___ftmul@f2+2,f,c
 31983  01513E  2E34               	decfsz	i2___ftmul@cntr,f,c
 31984  015140  D7EE               	goto	i2l1841
 31985  015142  0E09               	movlw	9
 31986  015144  6E34               	movwf	i2___ftmul@cntr,c
 31987  015146  A027               	btfss	i2___ftmul@f1,0,c
 31988  015148  D006               	goto	i2l1845
 31989  01514A  502A               	movf	i2___ftmul@f2,w,c
 31990  01514C  2631               	addwf	i2___ftmul@f3_as_product,f,c
 31991  01514E  502B               	movf	i2___ftmul@f2+1,w,c
 31992  015150  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 31993  015152  502C               	movf	i2___ftmul@f2+2,w,c
 31994  015154  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 31995  015156                     i2l1845:
 31996  015156  90D8               	bcf	status,0,c
 31997  015158  3229               	rrcf	i2___ftmul@f1+2,f,c
 31998  01515A  3228               	rrcf	i2___ftmul@f1+1,f,c
 31999  01515C  3227               	rrcf	i2___ftmul@f1,f,c
 32000  01515E  90D8               	bcf	status,0,c
 32001  015160  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 32002  015162  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 32003  015164  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 32004  015166  2E34               	decfsz	i2___ftmul@cntr,f,c
 32005  015168  D7EE               	goto	i2l1844
 32006  01516A  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 32007  01516E  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 32008  015172  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 32009  015176  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 32010  01517A  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 32011  01517E  EC6D  F0AC         	call	i2___ftpack	;wreg free
 32012  015182  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 32013  015186  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 32014  01518A  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 32015  01518E  0012               	return	
 32016  015190                     __end_ofi2___ftmul:
 32017                           	opt stack 0
 32018                           tosu	equ	0xFFF
 32019                           tosh	equ	0xFFE
 32020                           tosl	equ	0xFFD
 32021                           pclatu	equ	0xFFB
 32022                           pclath	equ	0xFFA
 32023                           tblptru	equ	0xFF8
 32024                           tblptrh	equ	0xFF7
 32025                           tblptrl	equ	0xFF6
 32026                           tablat	equ	0xFF5
 32027                           prodh	equ	0xFF4
 32028                           prodl	equ	0xFF3
 32029                           intcon	equ	0xFF2
 32030                           indf0	equ	0xFEF
 32031                           postinc0	equ	0xFEE
 32032                           fsr0h	equ	0xFEA
 32033                           fsr0l	equ	0xFE9
 32034                           wreg	equ	0xFE8
 32035                           indf1	equ	0xFE7
 32036                           postdec1	equ	0xFE5
 32037                           plusw1	equ	0xFE3
 32038                           fsr1h	equ	0xFE2
 32039                           fsr1l	equ	0xFE1
 32040                           bsr	equ	0xFE0
 32041                           indf2	equ	0xFDF
 32042                           postinc2	equ	0xFDE
 32043                           postdec2	equ	0xFDD
 32044                           plusw2	equ	0xFDB
 32045                           fsr2h	equ	0xFDA
 32046                           fsr2l	equ	0xFD9
 32047                           status	equ	0xFD8
 32048                           
 32049 ;; *************** function i2___ftadd *****************
 32050 ;; Defined at:
 32051 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 32052 ;; Parameters:    Size  Location     Type
 32053 ;;  f1              3   63[COMRAM] float 
 32054 ;;  f2              3   66[COMRAM] float 
 32055 ;; Auto vars:     Size  Location     Type
 32056 ;;  __ftadd         1   74[COMRAM] unsigned char 
 32057 ;;  __ftadd         1   73[COMRAM] unsigned char 
 32058 ;;  __ftadd         1   72[COMRAM] unsigned char 
 32059 ;; Return value:  Size  Location     Type
 32060 ;;                  3   63[COMRAM] float 
 32061 ;; Registers used:
 32062 ;;		wreg, status,2, status,0, cstack
 32063 ;; Tracked objects:
 32064 ;;		On entry : 0/0
 32065 ;;		On exit  : 0/0
 32066 ;;		Unchanged: 0/0
 32067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32069 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32070 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32071 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32072 ;;Total ram usage:       12 bytes
 32073 ;; Hardware stack levels used:    1
 32074 ;; Hardware stack levels required when called:    1
 32075 ;; This function calls:
 32076 ;;		i2___ftpack
 32077 ;; This function is called by:
 32078 ;;		_peakToRMS
 32079 ;;		_ADCPostProcessingCallback
 32080 ;;		_acos
 32081 ;;		_asin
 32082 ;;		_atan
 32083 ;;		_eval_poly
 32084 ;;		_sin
 32085 ;;		_floor
 32086 ;;		i2_printf
 32087 ;;		i2___ftsub
 32088 ;; This function uses a non-reentrant model
 32089 ;;
 32090                           
 32091                           	psect	text123
 32092  0144A4                     __ptext123:
 32093                           	opt stack 0
 32094  0144A4                     i2___ftadd:
 32095                           	opt stack 13
 32096                           
 32097                           ;incstack = 0
 32098  0144A4  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 32099  0144A8  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 32100  0144AA  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 32101  0144AC  3441               	rlcf	i2___ftadd@f1+1,w,c
 32102  0144AE  3646               	rlcf	??i2___ftadd& (0+255),f,c
 32103  0144B0  E301               	bnc	u1638_41
 32104  0144B2  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 32105  0144B4                     u1638_41:
 32106  0144B4  5046               	movf	??i2___ftadd,w,c
 32107  0144B6  6E4B               	movwf	i2___ftadd@exp1,c
 32108  0144B8  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 32109  0144BC  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 32110  0144BE  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 32111  0144C0  3444               	rlcf	i2___ftadd@f2+1,w,c
 32112  0144C2  3646               	rlcf	??i2___ftadd& (0+255),f,c
 32113  0144C4  E301               	bnc	u1639_41
 32114  0144C6  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 32115  0144C8                     u1639_41:
 32116  0144C8  5046               	movf	??i2___ftadd,w,c
 32117  0144CA  6E4A               	movwf	i2___ftadd@exp2,c
 32118  0144CC  504B               	movf	i2___ftadd@exp1,w,c
 32119  0144CE  B4D8               	btfsc	status,2,c
 32120  0144D0  D00B               	goto	i2u1642_40
 32121  0144D2  504A               	movf	i2___ftadd@exp2,w,c
 32122  0144D4  5C4B               	subwf	i2___ftadd@exp1,w,c
 32123  0144D6  B0D8               	btfsc	status,0,c
 32124  0144D8  D00E               	goto	i2l1773
 32125  0144DA  504B               	movf	i2___ftadd@exp1,w,c
 32126  0144DC  0800               	sublw	0
 32127  0144DE  244A               	addwf	i2___ftadd@exp2,w,c
 32128  0144E0  6E46               	movwf	??i2___ftadd& (0+255),c
 32129  0144E2  0E18               	movlw	24
 32130  0144E4  6446               	cpfsgt	??i2___ftadd,c
 32131  0144E6  D007               	goto	i2l1773
 32132  0144E8                     i2u1642_40:
 32133  0144E8  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 32134  0144EC  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 32135  0144F0  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 32136  0144F4  0012               	return	
 32137  0144F6                     i2l1773:
 32138  0144F6  504A               	movf	i2___ftadd@exp2,w,c
 32139  0144F8  B4D8               	btfsc	status,2,c
 32140  0144FA  D00B               	goto	i2u1645_40
 32141  0144FC  504B               	movf	i2___ftadd@exp1,w,c
 32142  0144FE  5C4A               	subwf	i2___ftadd@exp2,w,c
 32143  014500  B0D8               	btfsc	status,0,c
 32144  014502  D00E               	goto	i2l1777
 32145  014504  504A               	movf	i2___ftadd@exp2,w,c
 32146  014506  0800               	sublw	0
 32147  014508  244B               	addwf	i2___ftadd@exp1,w,c
 32148  01450A  6E46               	movwf	??i2___ftadd& (0+255),c
 32149  01450C  0E18               	movlw	24
 32150  01450E  6446               	cpfsgt	??i2___ftadd,c
 32151  014510  D007               	goto	i2l1777
 32152  014512                     i2u1645_40:
 32153  014512  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 32154  014516  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 32155  01451A  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 32156  01451E  0012               	return	
 32157  014520                     i2l1777:
 32158  014520  0E06               	movlw	6
 32159  014522  6E49               	movwf	i2___ftadd@sign,c
 32160  014524  BE42               	btfsc	i2___ftadd@f1+2,7,c
 32161  014526  8E49               	bsf	i2___ftadd@sign,7,c
 32162  014528  BE45               	btfsc	i2___ftadd@f2+2,7,c
 32163  01452A  8C49               	bsf	i2___ftadd@sign,6,c
 32164  01452C  8E41               	bsf	i2___ftadd@f1+1,7,c
 32165  01452E  0EFF               	movlw	255
 32166  014530  1640               	andwf	i2___ftadd@f1,f,c
 32167  014532  0EFF               	movlw	255
 32168  014534  1641               	andwf	i2___ftadd@f1+1,f,c
 32169  014536  0E00               	movlw	0
 32170  014538  1642               	andwf	i2___ftadd@f1+2,f,c
 32171  01453A  8E44               	bsf	i2___ftadd@f2+1,7,c
 32172  01453C  0EFF               	movlw	255
 32173  01453E  1643               	andwf	i2___ftadd@f2,f,c
 32174  014540  0EFF               	movlw	255
 32175  014542  1644               	andwf	i2___ftadd@f2+1,f,c
 32176  014544  0E00               	movlw	0
 32177  014546  1645               	andwf	i2___ftadd@f2+2,f,c
 32178  014548  504A               	movf	i2___ftadd@exp2,w,c
 32179  01454A  5C4B               	subwf	i2___ftadd@exp1,w,c
 32180  01454C  B0D8               	btfsc	status,0,c
 32181  01454E  D01B               	goto	i2l1782
 32182  014550                     i2u1648_40:
 32183  014550  90D8               	bcf	status,0,c
 32184  014552  3643               	rlcf	i2___ftadd@f2,f,c
 32185  014554  3644               	rlcf	i2___ftadd@f2+1,f,c
 32186  014556  3645               	rlcf	i2___ftadd@f2+2,f,c
 32187  014558  064A               	decf	i2___ftadd@exp2,f,c
 32188  01455A  504B               	movf	i2___ftadd@exp1,w,c
 32189  01455C  184A               	xorwf	i2___ftadd@exp2,w,c
 32190  01455E  B4D8               	btfsc	status,2,c
 32191  014560  D00D               	goto	i2l1787
 32192  014562  0649               	decf	i2___ftadd@sign,f,c
 32193  014564  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 32194  014568  0E07               	movlw	7
 32195  01456A  1646               	andwf	??i2___ftadd,f,c
 32196  01456C  B4D8               	btfsc	status,2,c
 32197  01456E  D006               	goto	i2l1787
 32198  014570  D7EF               	goto	i2u1648_40
 32199  014572  90D8               	bcf	status,0,c
 32200  014574  3242               	rrcf	i2___ftadd@f1+2,f,c
 32201  014576  3241               	rrcf	i2___ftadd@f1+1,f,c
 32202  014578  3240               	rrcf	i2___ftadd@f1,f,c
 32203  01457A  2A4B               	incf	i2___ftadd@exp1,f,c
 32204  01457C                     i2l1787:
 32205  01457C  504A               	movf	i2___ftadd@exp2,w,c
 32206  01457E  184B               	xorwf	i2___ftadd@exp1,w,c
 32207  014580  B4D8               	btfsc	status,2,c
 32208  014582  D01F               	goto	i2u1655_40
 32209  014584  D7F6               	goto	i2l1788
 32210  014586                     i2l1782:
 32211  014586  504B               	movf	i2___ftadd@exp1,w,c
 32212  014588  5C4A               	subwf	i2___ftadd@exp2,w,c
 32213  01458A  B0D8               	btfsc	status,0,c
 32214  01458C  D01A               	goto	i2u1655_40
 32215  01458E                     i2u1652_40:
 32216  01458E  90D8               	bcf	status,0,c
 32217  014590  3640               	rlcf	i2___ftadd@f1,f,c
 32218  014592  3641               	rlcf	i2___ftadd@f1+1,f,c
 32219  014594  3642               	rlcf	i2___ftadd@f1+2,f,c
 32220  014596  064B               	decf	i2___ftadd@exp1,f,c
 32221  014598  504B               	movf	i2___ftadd@exp1,w,c
 32222  01459A  184A               	xorwf	i2___ftadd@exp2,w,c
 32223  01459C  B4D8               	btfsc	status,2,c
 32224  01459E  D00D               	goto	i2l1796
 32225  0145A0  0649               	decf	i2___ftadd@sign,f,c
 32226  0145A2  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 32227  0145A6  0E07               	movlw	7
 32228  0145A8  1646               	andwf	??i2___ftadd,f,c
 32229  0145AA  B4D8               	btfsc	status,2,c
 32230  0145AC  D006               	goto	i2l1796
 32231  0145AE  D7EF               	goto	i2u1652_40
 32232  0145B0  90D8               	bcf	status,0,c
 32233  0145B2  3245               	rrcf	i2___ftadd@f2+2,f,c
 32234  0145B4  3244               	rrcf	i2___ftadd@f2+1,f,c
 32235  0145B6  3243               	rrcf	i2___ftadd@f2,f,c
 32236  0145B8  2A4A               	incf	i2___ftadd@exp2,f,c
 32237  0145BA                     i2l1796:
 32238  0145BA  504A               	movf	i2___ftadd@exp2,w,c
 32239  0145BC  184B               	xorwf	i2___ftadd@exp1,w,c
 32240  0145BE  A4D8               	btfss	status,2,c
 32241  0145C0  D7F7               	goto	i2l1797
 32242  0145C2                     i2u1655_40:
 32243  0145C2  AE49               	btfss	i2___ftadd@sign,7,c
 32244  0145C4  D00C               	goto	i2l1799
 32245  0145C6  0EFF               	movlw	255
 32246  0145C8  1A40               	xorwf	i2___ftadd@f1,f,c
 32247  0145CA  0EFF               	movlw	255
 32248  0145CC  1A41               	xorwf	i2___ftadd@f1+1,f,c
 32249  0145CE  0EFF               	movlw	255
 32250  0145D0  1A42               	xorwf	i2___ftadd@f1+2,f,c
 32251  0145D2  0E01               	movlw	1
 32252  0145D4  2640               	addwf	i2___ftadd@f1,f,c
 32253  0145D6  0E00               	movlw	0
 32254  0145D8  2241               	addwfc	i2___ftadd@f1+1,f,c
 32255  0145DA  0E00               	movlw	0
 32256  0145DC  2242               	addwfc	i2___ftadd@f1+2,f,c
 32257  0145DE                     i2l1799:
 32258  0145DE  AC49               	btfss	i2___ftadd@sign,6,c
 32259  0145E0  D00C               	goto	i2l1800
 32260  0145E2  0EFF               	movlw	255
 32261  0145E4  1A43               	xorwf	i2___ftadd@f2,f,c
 32262  0145E6  0EFF               	movlw	255
 32263  0145E8  1A44               	xorwf	i2___ftadd@f2+1,f,c
 32264  0145EA  0EFF               	movlw	255
 32265  0145EC  1A45               	xorwf	i2___ftadd@f2+2,f,c
 32266  0145EE  0E01               	movlw	1
 32267  0145F0  2643               	addwf	i2___ftadd@f2,f,c
 32268  0145F2  0E00               	movlw	0
 32269  0145F4  2244               	addwfc	i2___ftadd@f2+1,f,c
 32270  0145F6  0E00               	movlw	0
 32271  0145F8  2245               	addwfc	i2___ftadd@f2+2,f,c
 32272  0145FA                     i2l1800:
 32273  0145FA  0E00               	movlw	0
 32274  0145FC  6E49               	movwf	i2___ftadd@sign,c
 32275  0145FE  5040               	movf	i2___ftadd@f1,w,c
 32276  014600  2643               	addwf	i2___ftadd@f2,f,c
 32277  014602  5041               	movf	i2___ftadd@f1+1,w,c
 32278  014604  2244               	addwfc	i2___ftadd@f2+1,f,c
 32279  014606  5042               	movf	i2___ftadd@f1+2,w,c
 32280  014608  2245               	addwfc	i2___ftadd@f2+2,f,c
 32281  01460A  AE45               	btfss	i2___ftadd@f2+2,7,c
 32282  01460C  D00E               	goto	i2l1801
 32283  01460E  0EFF               	movlw	255
 32284  014610  1A43               	xorwf	i2___ftadd@f2,f,c
 32285  014612  0EFF               	movlw	255
 32286  014614  1A44               	xorwf	i2___ftadd@f2+1,f,c
 32287  014616  0EFF               	movlw	255
 32288  014618  1A45               	xorwf	i2___ftadd@f2+2,f,c
 32289  01461A  0E01               	movlw	1
 32290  01461C  2643               	addwf	i2___ftadd@f2,f,c
 32291  01461E  0E00               	movlw	0
 32292  014620  2244               	addwfc	i2___ftadd@f2+1,f,c
 32293  014622  0E00               	movlw	0
 32294  014624  2245               	addwfc	i2___ftadd@f2+2,f,c
 32295  014626  0E01               	movlw	1
 32296  014628  6E49               	movwf	i2___ftadd@sign,c
 32297  01462A                     i2l1801:
 32298  01462A  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 32299  01462E  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 32300  014632  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 32301  014636  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 32302  01463A  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 32303  01463E  EC6D  F0AC         	call	i2___ftpack	;wreg free
 32304  014642  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 32305  014646  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 32306  01464A  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 32307  01464E  0012               	return	
 32308  014650                     __end_ofi2___ftadd:
 32309                           	opt stack 0
 32310                           tosu	equ	0xFFF
 32311                           tosh	equ	0xFFE
 32312                           tosl	equ	0xFFD
 32313                           pclatu	equ	0xFFB
 32314                           pclath	equ	0xFFA
 32315                           tblptru	equ	0xFF8
 32316                           tblptrh	equ	0xFF7
 32317                           tblptrl	equ	0xFF6
 32318                           tablat	equ	0xFF5
 32319                           prodh	equ	0xFF4
 32320                           prodl	equ	0xFF3
 32321                           intcon	equ	0xFF2
 32322                           indf0	equ	0xFEF
 32323                           postinc0	equ	0xFEE
 32324                           fsr0h	equ	0xFEA
 32325                           fsr0l	equ	0xFE9
 32326                           wreg	equ	0xFE8
 32327                           indf1	equ	0xFE7
 32328                           postdec1	equ	0xFE5
 32329                           plusw1	equ	0xFE3
 32330                           fsr1h	equ	0xFE2
 32331                           fsr1l	equ	0xFE1
 32332                           bsr	equ	0xFE0
 32333                           indf2	equ	0xFDF
 32334                           postinc2	equ	0xFDE
 32335                           postdec2	equ	0xFDD
 32336                           plusw2	equ	0xFDB
 32337                           fsr2h	equ	0xFDA
 32338                           fsr2l	equ	0xFD9
 32339                           status	equ	0xFD8
 32340                           
 32341 ;; *************** function ___lwtoft *****************
 32342 ;; Defined at:
 32343 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 32344 ;; Parameters:    Size  Location     Type
 32345 ;;  c               2    8[COMRAM] unsigned int 
 32346 ;; Auto vars:     Size  Location     Type
 32347 ;;		None
 32348 ;; Return value:  Size  Location     Type
 32349 ;;                  3    8[COMRAM] float 
 32350 ;; Registers used:
 32351 ;;		wreg, status,2, status,0, cstack
 32352 ;; Tracked objects:
 32353 ;;		On entry : 0/0
 32354 ;;		On exit  : 0/0
 32355 ;;		Unchanged: 0/0
 32356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32360 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32361 ;;Total ram usage:        3 bytes
 32362 ;; Hardware stack levels used:    1
 32363 ;; Hardware stack levels required when called:    1
 32364 ;; This function calls:
 32365 ;;		i2___ftpack
 32366 ;; This function is called by:
 32367 ;;		_ADCPostProcessingCallback
 32368 ;; This function uses a non-reentrant model
 32369 ;;
 32370                           
 32371                           	psect	text124
 32372  016C98                     __ptext124:
 32373                           	opt stack 0
 32374  016C98                     ___lwtoft:
 32375                           	opt stack 14
 32376                           
 32377                           ;incstack = 0
 32378  016C98  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 32379  016C9C  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 32380  016CA0  6A03               	clrf	i2___ftpack@arg+2,c
 32381  016CA2  0E8E               	movlw	142
 32382  016CA4  6E04               	movwf	i2___ftpack@exp,c
 32383  016CA6  0E00               	movlw	0
 32384  016CA8  6E05               	movwf	i2___ftpack@sign,c
 32385  016CAA  EC6D  F0AC         	call	i2___ftpack	;wreg free
 32386  016CAE  C001  F009         	movff	?i2___ftpack,?___lwtoft
 32387  016CB2  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 32388  016CB6  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 32389  016CBA  0012               	return	
 32390  016CBC                     __end_of___lwtoft:
 32391                           	opt stack 0
 32392                           tosu	equ	0xFFF
 32393                           tosh	equ	0xFFE
 32394                           tosl	equ	0xFFD
 32395                           pclatu	equ	0xFFB
 32396                           pclath	equ	0xFFA
 32397                           tblptru	equ	0xFF8
 32398                           tblptrh	equ	0xFF7
 32399                           tblptrl	equ	0xFF6
 32400                           tablat	equ	0xFF5
 32401                           prodh	equ	0xFF4
 32402                           prodl	equ	0xFF3
 32403                           intcon	equ	0xFF2
 32404                           indf0	equ	0xFEF
 32405                           postinc0	equ	0xFEE
 32406                           fsr0h	equ	0xFEA
 32407                           fsr0l	equ	0xFE9
 32408                           wreg	equ	0xFE8
 32409                           indf1	equ	0xFE7
 32410                           postdec1	equ	0xFE5
 32411                           plusw1	equ	0xFE3
 32412                           fsr1h	equ	0xFE2
 32413                           fsr1l	equ	0xFE1
 32414                           bsr	equ	0xFE0
 32415                           indf2	equ	0xFDF
 32416                           postinc2	equ	0xFDE
 32417                           postdec2	equ	0xFDD
 32418                           plusw2	equ	0xFDB
 32419                           fsr2h	equ	0xFDA
 32420                           fsr2l	equ	0xFD9
 32421                           status	equ	0xFD8
 32422                           
 32423 ;; *************** function i2___ftpack *****************
 32424 ;; Defined at:
 32425 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 32426 ;; Parameters:    Size  Location     Type
 32427 ;;  arg             3    0[COMRAM] unsigned um
 32428 ;;  exp             1    3[COMRAM] unsigned char 
 32429 ;;  sign            1    4[COMRAM] unsigned char 
 32430 ;; Auto vars:     Size  Location     Type
 32431 ;;		None
 32432 ;; Return value:  Size  Location     Type
 32433 ;;                  3    0[COMRAM] float 
 32434 ;; Registers used:
 32435 ;;		wreg, status,2, status,0
 32436 ;; Tracked objects:
 32437 ;;		On entry : 0/0
 32438 ;;		On exit  : 0/0
 32439 ;;		Unchanged: 0/0
 32440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32441 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32445 ;;Total ram usage:        8 bytes
 32446 ;; Hardware stack levels used:    1
 32447 ;; This function calls:
 32448 ;;		Nothing
 32449 ;; This function is called by:
 32450 ;;		___altoft
 32451 ;;		___lwtoft
 32452 ;;		i2___ftadd
 32453 ;;		i2___ftdiv
 32454 ;;		i2___ftmul
 32455 ;;		i2___lltoft
 32456 ;; This function uses a non-reentrant model
 32457 ;;
 32458                           
 32459                           	psect	text125
 32460  0158DA                     __ptext125:
 32461                           	opt stack 0
 32462  0158DA                     i2___ftpack:
 32463                           	opt stack 13
 32464                           
 32465                           ;incstack = 0
 32466  0158DA  5004               	movf	i2___ftpack@exp,w,c
 32467  0158DC  B4D8               	btfsc	status,2,c
 32468  0158DE  D005               	goto	i2u1631_40
 32469  0158E0  5001               	movf	i2___ftpack@arg,w,c
 32470  0158E2  1002               	iorwf	i2___ftpack@arg+1,w,c
 32471  0158E4  1003               	iorwf	i2___ftpack@arg+2,w,c
 32472  0158E6  A4D8               	btfss	status,2,c
 32473  0158E8  D00C               	goto	i2l1742
 32474  0158EA                     i2u1631_40:
 32475  0158EA  0E00               	movlw	0
 32476  0158EC  6E01               	movwf	?i2___ftpack,c
 32477  0158EE  0E00               	movlw	0
 32478  0158F0  6E02               	movwf	?i2___ftpack+1,c
 32479  0158F2  0E00               	movlw	0
 32480  0158F4  6E03               	movwf	?i2___ftpack+2,c
 32481  0158F6  0012               	return	
 32482  0158F8  2A04               	incf	i2___ftpack@exp,f,c
 32483  0158FA  90D8               	bcf	status,0,c
 32484  0158FC  3203               	rrcf	i2___ftpack@arg+2,f,c
 32485  0158FE  3202               	rrcf	i2___ftpack@arg+1,f,c
 32486  015900  3201               	rrcf	i2___ftpack@arg,f,c
 32487  015902                     i2l1742:
 32488  015902  0E00               	movlw	0
 32489  015904  1401               	andwf	i2___ftpack@arg,w,c
 32490  015906  6E06               	movwf	??i2___ftpack& (0+255),c
 32491  015908  0E00               	movlw	0
 32492  01590A  1402               	andwf	i2___ftpack@arg+1,w,c
 32493  01590C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 32494  01590E  0EFE               	movlw	254
 32495  015910  1403               	andwf	i2___ftpack@arg+2,w,c
 32496  015912  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 32497  015914  5006               	movf	??i2___ftpack,w,c
 32498  015916  1007               	iorwf	??i2___ftpack+1,w,c
 32499  015918  1008               	iorwf	??i2___ftpack+2,w,c
 32500  01591A  B4D8               	btfsc	status,2,c
 32501  01591C  D00C               	goto	i2l1745
 32502  01591E  D7EC               	goto	i2l1743
 32503  015920  2A04               	incf	i2___ftpack@exp,f,c
 32504  015922  0E01               	movlw	1
 32505  015924  2601               	addwf	i2___ftpack@arg,f,c
 32506  015926  0E00               	movlw	0
 32507  015928  2202               	addwfc	i2___ftpack@arg+1,f,c
 32508  01592A  0E00               	movlw	0
 32509  01592C  2203               	addwfc	i2___ftpack@arg+2,f,c
 32510  01592E  90D8               	bcf	status,0,c
 32511  015930  3203               	rrcf	i2___ftpack@arg+2,f,c
 32512  015932  3202               	rrcf	i2___ftpack@arg+1,f,c
 32513  015934  3201               	rrcf	i2___ftpack@arg,f,c
 32514  015936                     i2l1745:
 32515  015936  0E00               	movlw	0
 32516  015938  1401               	andwf	i2___ftpack@arg,w,c
 32517  01593A  6E06               	movwf	??i2___ftpack& (0+255),c
 32518  01593C  0E00               	movlw	0
 32519  01593E  1402               	andwf	i2___ftpack@arg+1,w,c
 32520  015940  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 32521  015942  0EFF               	movlw	255
 32522  015944  1403               	andwf	i2___ftpack@arg+2,w,c
 32523  015946  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 32524  015948  5006               	movf	??i2___ftpack,w,c
 32525  01594A  1007               	iorwf	??i2___ftpack+1,w,c
 32526  01594C  1008               	iorwf	??i2___ftpack+2,w,c
 32527  01594E  B4D8               	btfsc	status,2,c
 32528  015950  D006               	goto	i2l1748
 32529  015952  D7E6               	goto	i2l1746
 32530  015954  0604               	decf	i2___ftpack@exp,f,c
 32531  015956  90D8               	bcf	status,0,c
 32532  015958  3601               	rlcf	i2___ftpack@arg,f,c
 32533  01595A  3602               	rlcf	i2___ftpack@arg+1,f,c
 32534  01595C  3603               	rlcf	i2___ftpack@arg+2,f,c
 32535  01595E                     i2l1748:
 32536  01595E  BE02               	btfsc	i2___ftpack@arg+1,7,c
 32537  015960  D003               	goto	i2u1635_40
 32538  015962  0E02               	movlw	2
 32539  015964  6004               	cpfslt	i2___ftpack@exp,c
 32540  015966  D7F6               	goto	i2l1749
 32541  015968                     i2u1635_40:
 32542  015968  A004               	btfss	i2___ftpack@exp,0,c
 32543  01596A  9E02               	bcf	i2___ftpack@arg+1,7,c
 32544  01596C  90D8               	bcf	status,0,c
 32545  01596E  3204               	rrcf	i2___ftpack@exp,f,c
 32546  015970  5004               	movf	i2___ftpack@exp,w,c
 32547  015972  1203               	iorwf	i2___ftpack@arg+2,f,c
 32548  015974  5005               	movf	i2___ftpack@sign,w,c
 32549  015976  A4D8               	btfss	status,2,c
 32550  015978  8E03               	bsf	i2___ftpack@arg+2,7,c
 32551  01597A  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 32552  01597E  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 32553  015982  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 32554  015986  0012               	return	
 32555  015988                     __end_ofi2___ftpack:
 32556                           	opt stack 0
 32557                           tosu	equ	0xFFF
 32558                           tosh	equ	0xFFE
 32559                           tosl	equ	0xFFD
 32560                           pclatu	equ	0xFFB
 32561                           pclath	equ	0xFFA
 32562                           tblptru	equ	0xFF8
 32563                           tblptrh	equ	0xFF7
 32564                           tblptrl	equ	0xFF6
 32565                           tablat	equ	0xFF5
 32566                           prodh	equ	0xFF4
 32567                           prodl	equ	0xFF3
 32568                           intcon	equ	0xFF2
 32569                           indf0	equ	0xFEF
 32570                           postinc0	equ	0xFEE
 32571                           fsr0h	equ	0xFEA
 32572                           fsr0l	equ	0xFE9
 32573                           wreg	equ	0xFE8
 32574                           indf1	equ	0xFE7
 32575                           postdec1	equ	0xFE5
 32576                           plusw1	equ	0xFE3
 32577                           fsr1h	equ	0xFE2
 32578                           fsr1l	equ	0xFE1
 32579                           bsr	equ	0xFE0
 32580                           indf2	equ	0xFDF
 32581                           postinc2	equ	0xFDE
 32582                           postdec2	equ	0xFDD
 32583                           plusw2	equ	0xFDB
 32584                           fsr2h	equ	0xFDA
 32585                           fsr2l	equ	0xFD9
 32586                           status	equ	0xFD8
 32587                           
 32588 ;; *************** function _ADCC_GetConversionResult *****************
 32589 ;; Defined at:
 32590 ;;		line 130 in file "mcc_generated_files/adcc.c"
 32591 ;; Parameters:    Size  Location     Type
 32592 ;;		None
 32593 ;; Auto vars:     Size  Location     Type
 32594 ;;		None
 32595 ;; Return value:  Size  Location     Type
 32596 ;;                  2    0[COMRAM] unsigned int 
 32597 ;; Registers used:
 32598 ;;		wreg, status,2, status,0
 32599 ;; Tracked objects:
 32600 ;;		On entry : 0/0
 32601 ;;		On exit  : 0/0
 32602 ;;		Unchanged: 0/0
 32603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32608 ;;Total ram usage:        4 bytes
 32609 ;; Hardware stack levels used:    1
 32610 ;; This function calls:
 32611 ;;		Nothing
 32612 ;; This function is called by:
 32613 ;;		_ADCPostProcessingCallback
 32614 ;; This function uses a non-reentrant model
 32615 ;;
 32616                           
 32617                           	psect	text126
 32618  016DB6                     __ptext126:
 32619                           	opt stack 0
 32620  016DB6                     _ADCC_GetConversionResult:
 32621                           	opt stack 15
 32622                           
 32623                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 32624                           
 32625                           ;incstack = 0
 32626  016DB6  5064               	movf	3940,w,c	;volatile
 32627  016DB8  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 32628  016DBA  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 32629  016DBC  5063               	movf	3939,w,c	;volatile
 32630  016DBE  2403               	addwf	??_ADCC_GetConversionResult,w,c
 32631  016DC0  6E01               	movwf	?_ADCC_GetConversionResult,c
 32632  016DC2  0E00               	movlw	0
 32633  016DC4  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 32634  016DC6  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 32635  016DC8  0012               	return	
 32636  016DCA                     __end_of_ADCC_GetConversionResult:
 32637                           	opt stack 0
 32638                           tosu	equ	0xFFF
 32639                           tosh	equ	0xFFE
 32640                           tosl	equ	0xFFD
 32641                           pclatu	equ	0xFFB
 32642                           pclath	equ	0xFFA
 32643                           tblptru	equ	0xFF8
 32644                           tblptrh	equ	0xFF7
 32645                           tblptrl	equ	0xFF6
 32646                           tablat	equ	0xFF5
 32647                           prodh	equ	0xFF4
 32648                           prodl	equ	0xFF3
 32649                           intcon	equ	0xFF2
 32650                           indf0	equ	0xFEF
 32651                           postinc0	equ	0xFEE
 32652                           fsr0h	equ	0xFEA
 32653                           fsr0l	equ	0xFE9
 32654                           wreg	equ	0xFE8
 32655                           indf1	equ	0xFE7
 32656                           postdec1	equ	0xFE5
 32657                           plusw1	equ	0xFE3
 32658                           fsr1h	equ	0xFE2
 32659                           fsr1l	equ	0xFE1
 32660                           bsr	equ	0xFE0
 32661                           indf2	equ	0xFDF
 32662                           postinc2	equ	0xFDE
 32663                           postdec2	equ	0xFDD
 32664                           plusw2	equ	0xFDB
 32665                           fsr2h	equ	0xFDA
 32666                           fsr2l	equ	0xFD9
 32667                           status	equ	0xFD8
 32668                           tosu	equ	0xFFF
 32669                           tosh	equ	0xFFE
 32670                           tosl	equ	0xFFD
 32671                           pclatu	equ	0xFFB
 32672                           pclath	equ	0xFFA
 32673                           tblptru	equ	0xFF8
 32674                           tblptrh	equ	0xFF7
 32675                           tblptrl	equ	0xFF6
 32676                           tablat	equ	0xFF5
 32677                           prodh	equ	0xFF4
 32678                           prodl	equ	0xFF3
 32679                           intcon	equ	0xFF2
 32680                           indf0	equ	0xFEF
 32681                           postinc0	equ	0xFEE
 32682                           fsr0h	equ	0xFEA
 32683                           fsr0l	equ	0xFE9
 32684                           wreg	equ	0xFE8
 32685                           indf1	equ	0xFE7
 32686                           postdec1	equ	0xFE5
 32687                           plusw1	equ	0xFE3
 32688                           fsr1h	equ	0xFE2
 32689                           fsr1l	equ	0xFE1
 32690                           bsr	equ	0xFE0
 32691                           indf2	equ	0xFDF
 32692                           postinc2	equ	0xFDE
 32693                           postdec2	equ	0xFDD
 32694                           plusw2	equ	0xFDB
 32695                           fsr2h	equ	0xFDA
 32696                           fsr2l	equ	0xFD9
 32697                           status	equ	0xFD8
 32698                           
 32699                           	psect	text127
 32700  000000                     __ptext127:
 32701                           	opt stack 0
 32702                           tosu	equ	0xFFF
 32703                           tosh	equ	0xFFE
 32704                           tosl	equ	0xFFD
 32705                           pclatu	equ	0xFFB
 32706                           pclath	equ	0xFFA
 32707                           tblptru	equ	0xFF8
 32708                           tblptrh	equ	0xFF7
 32709                           tblptrl	equ	0xFF6
 32710                           tablat	equ	0xFF5
 32711                           prodh	equ	0xFF4
 32712                           prodl	equ	0xFF3
 32713                           intcon	equ	0xFF2
 32714                           indf0	equ	0xFEF
 32715                           postinc0	equ	0xFEE
 32716                           fsr0h	equ	0xFEA
 32717                           fsr0l	equ	0xFE9
 32718                           wreg	equ	0xFE8
 32719                           indf1	equ	0xFE7
 32720                           postdec1	equ	0xFE5
 32721                           plusw1	equ	0xFE3
 32722                           fsr1h	equ	0xFE2
 32723                           fsr1l	equ	0xFE1
 32724                           bsr	equ	0xFE0
 32725                           indf2	equ	0xFDF
 32726                           postinc2	equ	0xFDE
 32727                           postdec2	equ	0xFDD
 32728                           plusw2	equ	0xFDB
 32729                           fsr2h	equ	0xFDA
 32730                           fsr2l	equ	0xFD9
 32731                           status	equ	0xFD8
 32732                           
 32733                           	psect	rparam
 32734  0000                     tosu	equ	0xFFF
 32735                           tosh	equ	0xFFE
 32736                           tosl	equ	0xFFD
 32737                           pclatu	equ	0xFFB
 32738                           pclath	equ	0xFFA
 32739                           tblptru	equ	0xFF8
 32740                           tblptrh	equ	0xFF7
 32741                           tblptrl	equ	0xFF6
 32742                           tablat	equ	0xFF5
 32743                           prodh	equ	0xFF4
 32744                           prodl	equ	0xFF3
 32745                           intcon	equ	0xFF2
 32746                           indf0	equ	0xFEF
 32747                           postinc0	equ	0xFEE
 32748                           fsr0h	equ	0xFEA
 32749                           fsr0l	equ	0xFE9
 32750                           wreg	equ	0xFE8
 32751                           indf1	equ	0xFE7
 32752                           postdec1	equ	0xFE5
 32753                           plusw1	equ	0xFE3
 32754                           fsr1h	equ	0xFE2
 32755                           fsr1l	equ	0xFE1
 32756                           bsr	equ	0xFE0
 32757                           indf2	equ	0xFDF
 32758                           postinc2	equ	0xFDE
 32759                           postdec2	equ	0xFDD
 32760                           plusw2	equ	0xFDB
 32761                           fsr2h	equ	0xFDA
 32762                           fsr2l	equ	0xFD9
 32763                           status	equ	0xFD8
 32764                           
 32765                           	psect	temp
 32766  00005F                     btemp:
 32767                           	opt stack 0
 32768  00005F                     	ds	1
 32769  0000                     int$flags	set	btemp
 32770  0000                     wtemp6	set	btemp+1
 32771                           tosu	equ	0xFFF
 32772                           tosh	equ	0xFFE
 32773                           tosl	equ	0xFFD
 32774                           pclatu	equ	0xFFB
 32775                           pclath	equ	0xFFA
 32776                           tblptru	equ	0xFF8
 32777                           tblptrh	equ	0xFF7
 32778                           tblptrl	equ	0xFF6
 32779                           tablat	equ	0xFF5
 32780                           prodh	equ	0xFF4
 32781                           prodl	equ	0xFF3
 32782                           intcon	equ	0xFF2
 32783                           indf0	equ	0xFEF
 32784                           postinc0	equ	0xFEE
 32785                           fsr0h	equ	0xFEA
 32786                           fsr0l	equ	0xFE9
 32787                           wreg	equ	0xFE8
 32788                           indf1	equ	0xFE7
 32789                           postdec1	equ	0xFE5
 32790                           plusw1	equ	0xFE3
 32791                           fsr1h	equ	0xFE2
 32792                           fsr1l	equ	0xFE1
 32793                           bsr	equ	0xFE0
 32794                           indf2	equ	0xFDF
 32795                           postinc2	equ	0xFDE
 32796                           postdec2	equ	0xFDD
 32797                           plusw2	equ	0xFDB
 32798                           fsr2h	equ	0xFDA
 32799                           fsr2l	equ	0xFD9
 32800                           status	equ	0xFD8


Data Sizes:
    Strings     4938
    Constant    210
    Data        38
    BSS         334
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    104     159
    BANK1           256    175     214
    BANK2           256     34     186
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_102(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_102(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_113(CODE[5]), STR_111(CODE[14]), STR_109(CODE[16]), STR_100(CODE[13]), 
		 -> STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), STR_92(CODE[15]), 
		 -> STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), STR_84(CODE[14]), 
		 -> STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), STR_76(CODE[16]), 
		 -> STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), 
		 -> STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), 
		 -> STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_133(CODE[7]), printf@c(BANK1[1]), STR_132(CODE[16]), STR_131(CODE[22]), 
		 -> STR_130(CODE[21]), STR_129(CODE[27]), STR_128(CODE[41]), STR_127(CODE[32]), 
		 -> STR_126(CODE[19]), STR_125(CODE[16]), STR_124(CODE[15]), STR_123(CODE[16]), 
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[3]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2031
		 -> STR_119(CODE[30]), STR_118(CODE[23]), STR_117(CODE[39]), STR_116(CODE[36]), 
		 -> STR_115(CODE[33]), STR_114(CODE[2031]), STR_112(CODE[53]), STR_110(CODE[58]), 
		 -> STR_108(CODE[71]), STR_107(CODE[63]), STR_106(CODE[37]), STR_105(CODE[46]), 
		 -> STR_104(CODE[102]), STR_103(CODE[86]), STR_101(CODE[25]), STR_99(CODE[42]), 
		 -> STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), 
		 -> STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[56]), 
		 -> STR_81(CODE[34]), STR_79(CODE[34]), STR_77(CODE[35]), STR_75(CODE[45]), 
		 -> STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), 
		 -> STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[57]), STR_54(CODE[85]), 
		 -> STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_131(CODE[22]), STR_130(CODE[21]), STR_129(CODE[27]), STR_128(CODE[41]), 
		 -> STR_127(CODE[32]), STR_126(CODE[19]), STR_125(CODE[16]), STR_124(CODE[15]), 
		 -> STR_123(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_122(CODE[10]), STR_121(CODE[13]), STR_120(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_132(CODE[16]), STR_131(CODE[22]), STR_130(CODE[21]), STR_129(CODE[27]), 
		 -> STR_128(CODE[41]), STR_127(CODE[32]), STR_126(CODE[19]), STR_125(CODE[16]), 
		 -> STR_124(CODE[15]), STR_123(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  690886
                                            173 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   86082
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  418287
                                            164 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       38    36      2  417559
                                            160 BANK1      4     2      2
                                              0 BANK2     34    34      0
                    _TMR7_StartTimer
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   98751
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   98751
                                            142 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   86082
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1549
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    4993
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4621
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _TMR7_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   86082
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    37      8   86082
                                            100 BANK1     42    34      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18586
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   18307
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    4098
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9561
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7384
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6638
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    2278
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                     _TMR7_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR7_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _HLVD_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  353824
                                             86 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   67297
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   67297
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13741
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13246
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  286287
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          16    16      0  286287
                                             70 BANK0     16    16      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  194917
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   93583
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   85892
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   18321
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   43127
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   66625
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   61933
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6906
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   13245
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    2376
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18610
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7746
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6259
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StartTimer
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion
       _TMR7_StopTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2_TMR7_StopTimer
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      80      12       50.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     22      BA      10       72.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AF      D6       7       83.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     68      9F       5       99.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30D       8        0.0%
DATA                 0      0     30D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 05 13:34:26 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 6E62  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l57 6D4E                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 6EB8                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 58DA  
               __end_of_heartbeatTimerCallback 6922                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 646C  
                                 ___ftadd@sign 0134                                            l381 679E  
                                          l382 679A                                            l391 66D2  
                                          l392 66F8                                            l384 67C8  
                                          l393 66F6                                            l388 66BC  
                                          l389 66B8                                            l996 5F6C  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00D1                                            _Vpk 00D4  
                    __end_of_getDeviceIDString 63AE                                            _sin 3D10  
                   currentMeasuredToPeak@Angle 0076                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                             ??_TMR7_StopTimer 0100                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___ftdiv@cntr 0140                                   ___ftdiv@sign 0145  
                                         l1040 4D42                                           l1041 4D14  
                                         l1202 044A                                           l1210 036E  
                                         l1203 041E                                           l1211 0386  
                                         l1035 4CBE                                           l1300 65A6  
                                         l1204 03CE                                           l1212 039E  
                                         l1213 03B6                                           l1205 030E  
                                         l1037 4CFA                                           l1302 65AE  
                                         l1070 32B6                                           l1230 06D8  
                                         l1222 0578                                           l1206 03FE  
                                         l1038 4CDE                                           l1071 32CE  
                                         l1207 0326                                           l1080 33B8  
                                         l1064 32FE                                           l1072 32E6  
                                         l1240 0886                                           l1232 0730  
                                         l1224 05D0                                           l1216 04A2  
                                         l1208 033E                                           l1073 3418  
                                         l1081 33D0                                           l1065 3256  
                                         l1209 0356                                           l1410 13BC  
                                         l1090 34C6                                           l1082 33E8  
                                         l1074 3340                                           l1066 3328  
                                         l1242 08D4                                           l1234 0788  
                                         l1226 0628                                           l1218 0520  
                                         l1411 13D4                                           l1403 137A  
                                         l1091 34DE                                           l1075 344E  
                                         l1083 3400                                           l1067 326E  
                                         l1251 0A76                                           l1219 04F4  
                                         l1340 2BA8                                           l1420 15A6  
                                         l1412 150E                                           l1404 12E6  
                                         l1084 353E                                           l1092 34F6  
                                         l1076 3358                                           l1068 3286  
                                         l1244 0926                                           l1236 07E0  
                                         l1228 0680                                           l1341 2AB8  
                                         l1413 1426                                           l1309 6AFC  
                                         l2125 6676                                           l1093 350E  
                                         l1085 3466                                           l1077 3370  
                                         l1069 329E                                           l1334 3704  
                                         l1422 1644                                           l1406 1394  
                                         l2134 65D4                                           l2142 69E4  
                                         l2230 5ABE                                           l2126 6670  
                                         l1086 3574                                           l1094 3526  
                                         l1078 3388                                           l1246 0978  
                                         l1238 0838                                           l1190 014C  
                                         l1423 15C0                                           l1415 1528  
                                         l1407 1386                                           l1351 0D56  
                                         l2135 65CA                                           l2143 69DA  
                                         l2231 5B28                                           l1087 347E  
                                         l1079 33A0                                           l1344 2B7C  
                                         l1440 16B2                                           l1416 151A  
                                         l1352 0D68                                           l2224 69B4  
                                         l2128 6690                                           l1088 3496  
                                         l1256 0C26                                           l1248 0BCA  
                                         l1184 003E                                           l1337 37E6  
                                         l1345 2CF2                                           l1433 1676  
                                         l1409 13B8                                           l1361 0E3A  
                                         l1353 0E2C                                           l1281 636C  
                                         l2129 6686                                           l1089 34AE  
                                         l1249 09B2                                           l1290 657E  
                                         l1442 17C6                                           l1418 1582  
                                         l1362 0FA8                                           l1370 0E74  
                                         l1354 0E00                                           l1282 6376  
                                         l2170 5C46                                           l1258 0C82  
                                         l1194 01BC                                           l1186 007A  
                                         l1347 2DB6                                           l1443 1736  
                                         l1435 1696                                           l1355 0DAC  
                                         l2171 5BDE                                           l2155 61BE  
                                         l1292 6586                                           l1428 165A  
                                         l1380 1532                                           l2148 64D8  
                                         l2172 5C1A                                           l2156 61EE  
                                         l1196 022A                                           l1188 00D4  
                                         l1437 17CC                                           l1429 1602  
                                         l1381 0FBC                                           l1365 0E3E  
                                         l1277 6380                                           l2149 64D2  
                                         l2229 5B30                                           l1294 658E  
                                         l1710 4A6C                                           l1382 0FFE  
                                         l1358 0F3A                                           l1374 0EFA  
                                         l1278 6362                                           l2158 620A  
                                         l1198 02D0                                           l1439 17AE  
                                         l1375 0ECE                                           l1367 0E42  
                                         l2159 61FA                                           l1199 0286  
                                         l1296 6596                                           l1800 444E  
                                         l1712 4A8A                                           l1392 11CC  
                                         l1384 1092                                           l1368 0E6A  
                                         l1801 447E                                           l1713 4ACC  
                                         l1385 10FA                                           l1377 0F0E  
                                         l1369 0E7A                                           l1298 659E  
                                         l1722 4B5E                                           l1714 4AFC  
                                         l1378 0F22                                           l1810 5246  
                                         l1650 5560                                           l1723 4B52  
                                         l1387 1120                                           l1379 0F34  
                                         l1900 5D1E                                           l1716 4B3A  
                                         l1820 48DE                                           l1388 115E  
                                         l1901 5D12                                           l1717 4B2A  
                                         l1821 48CE                                           l1389 1222  
                                         l1653 55B0                                           l1742 57A6  
                                         l1910 623C                                           l1814 4814  
                                         l1670 5CA4                                           l1398 1288  
                                         l1806 51BA                                           l1654 5572  
                                         l1831 5A5C                                           l1743 579C  
                                         l1911 6230                                           l1647 551E  
                                         l1832 5A8C                                           l1904 5D52  
                                         l1816 4840                                           l1680 608A  
                                         l1840 4F04                                           l1808 51E2  
                                         l1656 55E4                                           l1648 5518  
                                         l1745 57DA                                           l1905 5D60  
                                         l1921 6422                                           l1817 487A  
                                         l1673 5CCC                                           l1841 4F36  
                                         l1809 5220                                           l1746 57C4  
                                         l1914 6264                                           l1922 6416  
                                         l1826 4902                                           l1818 48A2  
                                         l1674 5CD6                                           l1666 5C7E  
                                         l1682 60A0                                           l1842 4F46  
                                         l1915 6272                                           l1827 48F6  
                                         l1675 5CE4                                           l1667 5C8E  
                                         l1683 6098                                           l1748 5802  
                                         l1844 4F5E                                           l1749 57F8  
                                         l1773 434A                                           l1861 4E60  
                                         l1669 5CAC                                           l1845 4F6E  
                                         l1782 43DA                                           l1870 4EA0  
                                         l1862 4E50                                           l1686 60B8  
                                         l1838 4EDC                                           l1694 6974  
                         _ADCC_StartConversion 6E8C                                           l1855 6878  
                                         l1687 60C2                                           l1679 607E  
                                         l1688 60D0                                           l1849 6C1A  
                                         l1777 4374                                           l1874 6CD6  
                                         l1787 43D0                                           l1867 4E84  
                                         l1859 4DE8                                           l1796 440E  
                                         l1788 43C6                                           l1868 4E78  
                                         l1797 4404                                           l1799 4432  
                                         l9117 5AB8                                           ?_sin 0066  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 F4A4                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 0180                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         u9810 580C                                           _PLLR 007230  
                                         u9770 578E                                           _TMR6 000FAF  
                            ??_TMR7_StartTimer 0117                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                             __end_of_ADCC_ISR 6BDC                                           _Irms 00CB  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 66B2  
                                         _Vrms 00C8                                           _acos 6520  
                                         _fabs 6B06                                           _atan 4134  
                                         _asin 3AA4                                           _atoi 5516  
                                         _main 5EF8                                           _line 0240  
                                 ___ftpack@arg 0117                                   ___ftpack@exp 011A  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                                           _sqrt 4650  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 01CB  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 3232  
                 __end_of_EUSART2_Transmit_ISR 6A3C                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 6EB0                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 004A  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01CD  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0128                               __end_of_HLVD_ISR 6EC0  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 6D54  
                     ?_terminal_textAttributes 018E                              ??_TMR7_WriteTimer 0102  
                                        l10211 128C                                          l10115 0ECE  
                                        l10235 1386                                          l10309 1606  
                                        l10191 11A6                                          l10183 115E  
                                        l10345 17AE                                          l10373 61FA  
                                        l10295 15C4                                          l11611 09A2  
                                        l12075 4CAE                                          l10581 5ABE  
                                        l11621 09E8                                          l12085 4CD4  
                                        l11627 0A1E                                          l11475 0276  
                                        l11629 0A76                                          l11485 02C6  
                                        l10885 55AC                                          l14757 639A  
                                        l14759 63A4                                          ?_acos 008E  
                                        ?_fabs 0027                                          ?_atan 0058  
                                        ?_asin 0079                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 012B                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                              __end_of___awdiv 5CEE                                          _ADPRE 000F5E  
                              __end_of___ftadd 44A4                                          STR_10 FFC1  
                                        STR_11 FFF6                                          STR_12 FFCA  
                                        STR_20 FFC9                                          STR_13 FD70  
                                        STR_21 FFCC                                          STR_30 FF4D  
                                        STR_14 FFDF                                          STR_22 FFD2  
                                        STR_15 FFE5                                          STR_23 FFD8  
                                        STR_31 FFCF                                          STR_40 F76D  
                                        STR_16 FFF1                                          STR_24 FFDE  
                                        STR_32 FFD5                                          STR_41 FE28  
                                        STR_17 FFF9                                          STR_25 FFE4  
                                        STR_33 FFDB                                          STR_18 FFCA  
                                        STR_42 FFB0                                          STR_26 FFEA  
                                        STR_34 FFE1                                          STR_50 FFB5  
                                        STR_43 FFB9                                          STR_19 FFFB  
                                        STR_27 FFF0                                          STR_35 FFE7  
                                        STR_51 FDFC                                          STR_28 FFF0  
                                        STR_36 FFED                                          STR_44 FFA0  
                                        STR_60 FF67                                          STR_52 F9E3  
                              __end_of___awmod 60DA                                          STR_29 FFFB  
                                        STR_45 FFB0                                          STR_37 FFF3  
                                        STR_61 FFA6                                          STR_53 FF5C  
                                        STR_38 FFF3                                          STR_46 FFB9  
                                        STR_62 FF94                                          STR_70 FD17  
                                        STR_54 F6D4                                          STR_39 FFFD  
                                        STR_63 FF8D                                          STR_55 FF1D  
                                        STR_71 FE7E                                          STR_47 FE5E  
                                        STR_64 FEF4                                          STR_80 FDD9  
                                        STR_72 FD87                                          STR_48 F97F  
                                        STR_56 F86B                                          _ADRPT 000F66  
                                        STR_49 FF9A                                          STR_57 FF72  
                                        STR_65 FF02                                          STR_73 FE0D  
                                        STR_81 FBC9                                          STR_82 FF2A  
                                        STR_66 FECA                                          STR_90 FD9C  
                                        STR_58 F7B2                                          STR_74 F770  
                                        STR_67 FD5C                                          STR_91 FC0D  
                                        STR_75 FA40                                          STR_59 F914  
                                        STR_83 F8DC                                          STR_68 FF7C  
                                        STR_84 FED8                                          STR_92 FEAC  
                                        STR_76 FE3E                                          STR_77 FBA6  
                                        STR_85 FB38                                          STR_69 F9B3  
                                        STR_93 F8A4                                          STR_94 FEBB  
                                        STR_78 FE9D                                          STR_86 FCCB  
                                        STR_87 FC72                                          STR_79 FC2F  
                                        STR_95 FAE9                                          STR_96 FE6E  
                                        STR_88 FDB1                                          STR_89 FBEB  
                                        STR_97 FAC0                                          STR_98 FF50  
                                        STR_99 FA6D                                __end_of___ftdiv 5278  
                              __end_of___ftneg 6C28                                __end_of___lldiv 5D72  
                                        ?_sqrt 0066                                          u10220 4366  
                                        u11110 4E8A                                          u10151 4308  
                                        u10320 4416                                          u12000 64FA  
                                        u10161 431C                                          u10250 43A4  
                                        u11051 4DCC                                          u11140 5D22  
                              __end_of___ftmul 4FA8                                          u10190 433C  
                                        u11070 4E06                                          u11310 0DE4  
                                        u12030 5AF0                                          u12007 64F0  
                                        u11320 0E22                                          u10361 4EC4  
                                        u10290 43E2                                          u11170 6240  
                                        u10530 60A4                                          u11410 0F6A  
                                        u11075 4DFE                                          u11500 1130  
                                        u12300 5C5E                                ___awdiv@divisor 011F  
                                        u10381 4EEC                                          u11317 0DDA  
                                        u10470 5CB0                                          u11510 1170  
                                        u11350 0EA8                                          u12230 660C  
                                        u11327 0E18                                          u11360 0EAE  
                                        u13200 0A1E                                          u14000 4CD4  
                              __end_of___llmod 6284                                          u11417 0F60  
                                        u11610 13A2                                          u11290 0D94  
                              __end_of___ftsub 68A2                                          u12251 6358  
                                        u11620 13B2                                          u11540 11A6  
                                        u11460 1036                                __end_of___fttol 4EB2  
                                        u11357 0E9E                                          u10910 4B64  
                                        u11390 0EF0                                          u10840 4908  
                                        u11800 180E                                          u10761 47F8  
                                        u11465 102C                                          u11297 0D8A  
                                        u12265 694E                                          u12371 51A2  
                                        u11580 12CA                                          u13180 09E8  
                                        u10781 4824                                          u11397 0EE6  
                                        u13190 0A10                                          u11807 1804  
                                        u12391 51CA                                          u11790 17DE  
                                        _T5CLK 000FC6                                          u12920 0112  
                                        _T5CON 000FC3                                          u12970 02C6  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        u18137 5F0C                                          _T6HLT 000FB2  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 6A36                                          i1l227 00A8  
                                        i1l404 6A32                                          i1l229 00B2  
                                        i2l212 5658                                          i2l214 5664  
                                        i2l216 566E                                          i1l640 6C40  
                                        i2l410 585C                                          i2l411 587E  
                                        i2l414 5882                                          i2l416 58D2  
                                        i2l409 5838                                          _T6TMR 000FAF  
                                        i2l391 6766                                          i2l392 678C  
                                        i2l393 678A                                          i1l937 691E  
                                        i2l714 6D66                                          _T6RST 000FB4  
                                        i2l388 6750                                          i2l389 674C  
                                        i1l981 5722                                          i1l973 56E2  
                                        i1l990 5770                                          i1l982 5730  
                                        i1l974 56F0                                          i1l968 56C2  
                                        i1l985 5742                                          i1l977 5702  
                                        i1l969 56D0                                          i1l986 5750  
                                        i1l978 5710                                          i2l941 2938  
                                        i1l989 5762                                          i2l950 2420  
                                        i2l942 22F0                                          i2l960 2712  
                                        i2l952 24AE                                          i2l953 2634  
                                        i2l962 27BC                                          i2l954 2584  
                                        i2l946 2356                                          i2l955 254E  
                                        i2l964 292A                                          i2l956 2576  
                              ___awdiv@counter 0121                                          i2l957 259E  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 4B76  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a EC9A                             __end_ofsin@coeff_b ECB5  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 00CE  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0127                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 6AA4  
                             __end_of_TMR6_ISR 6BB4                               __end_of_TMR7_ISR 6A70  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                                ___awtoft@sign 0122                      ??_terminal_ringBufferPull 01A4  
                              __end_of_dpowers EC0B                                          acos@x 008E  
                                        fabs@d 0027                                     i2scale@scl 003C  
                                        _floor 535E                                          _frexp 5F78  
                                        _errno 01C9                          ?_ADCC_StartConversion 0001  
                                        _scale 2962                                __end_of_isdigit 6CDE  
                                        atan@f 0058                                          atan@x 0063  
                                        atan@y 0060                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 011B                                          asin@x 0079  
                                        asin@y 0088                                          atoi@a 0130  
                                        atoi@s 012B                                          _putch 6E2A  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          sin@x2 006F  
                                        tablat 000FF5                               __end_ofi2___ftge 5BDC  
                             __end_ofi2___wmul 6C74                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                                        sqrt@a 0066                                          sqrt@i 006F  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          status 000FD8  
                                        wtemp6 0060                                __end_of_strncmp 5B4C  
                              __end_of_strncpy 621C                               __end_ofi2_fround 3AA4  
               ?_INTERRUPT_InterruptManagerLow 0001                                  i2___ftdiv@exp 001F  
                           __size_ofi2___awdiv 0084                             __size_ofi2___ftadd 01AC  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___ftdiv 00E6                             __size_ofi2___ftneg 0024  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0042                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 22EA                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 6E70  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 6E62  
                              _TMR5_Initialize 66FE                                __initialization 5E78  
                            i2___lldiv@divisor 0005                                   __end_of_acos 6576  
                                 __end_of_fabs 6B36                                   __end_of_atan 42F6  
                                 __end_of_asin 3D10                                   __end_of_atoi 55EE  
                                 __end_of_main 5F78                              i2___lldiv@counter 000D  
                                i2___ftmul@exp 0030                                   __end_of_sqrt 47E6  
                                   i2printf@ap 0076                                     i2printf@cp 0074  
                        __end_of_ringBufferLUT 0D48                                 __CFG_SCANE$OFF 000000  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                                    ?i2___ftpack 0001  
                                       ??_acos 005E                                         ??_fabs 002A  
                                       ??_atan 005B                                    ?i2___lltoft 0009  
                                       ??_asin 005E                                         ??_atoi 012D  
                                       ??_main 01AD                                  ___fttol@sign1 015E  
                     _TMR5_SetInterruptHandler 6E54                                         ??_sqrt 0069  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                         getUserID@initialOffset 0124  
                              _TMR6_Initialize 6AA4                             _TRIAC_Firing_Angle 00FB  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 61B4                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01D2  
                                       ?_floor 0056                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             __end_of___altoft 6068                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 0155  
                                       STR_100 FF37                                         _ADLTHL 000F6A  
                                       STR_101 FCE5                                         STR_102 FCFE  
                                       STR_110 F831                                         STR_111 FEE6  
                                       STR_103 F67E                                         STR_112 F94A  
                                       STR_104 F618                                         STR_120 FF44  
                                       STR_113 FFAB                                         STR_105 FA12  
                                       STR_121 FF10                                         STR_106 FB5D  
                                       STR_114 ECB5                                         _ADRESH 000F64  
                                       STR_122 FF7C                                         STR_130 FD72  
                                       STR_115 FC51                                         STR_107 F7F2  
                                       STR_131 FD46                                         STR_123 FE1E  
                                       STR_132 FE1E                                         STR_116 FB82  
                                       STR_108 F729                                         STR_124 FE8E  
                                       STR_133 FF86                                         STR_109 FE4E  
                                       STR_117 FB11                                         STR_125 FE2E  
                                       STR_134 FDEB                                         STR_118 FD2F  
                                       _ADRESL 000F63                                         STR_126 FDC6  
                                       STR_119 FC92                                         STR_127 FAA0  
                                       STR_128 FA97                                         STR_129 FCB0  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                             __end_of___awtoft 6998                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                               __end_of___ftpack 582C  
                                       _ANSELG 000EBC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                             __end_of___lltoft 646C                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l2200 539A                                         i2l2201 538C  
                                       i2l2121 46E2                                         i2l1410 1E8E  
                                       i2l2203 53B4                                         i2l1411 1EA6  
                                       i2l1403 1E4C                                         i2l2204 542E  
                                       i2l1340 300E                                         i2l1420 2076  
                                       i2l1412 1FDE                                         i2l1404 1DBA  
                                       i2l1341 2F28                                         i2l1413 1EF8  
                                       i2l2118 4690                                         i2l1334 3986  
                                       i2l1422 2114                                         i2l1406 1E66  
                                       i2l2119 4680                                         i2l1423 2090  
                                       i2l1415 1FF8                                         i2l1407 1E58  
                                       i2l1351 182A                                         i2l1344 2FE4  
                                       i2l1440 2182                                         i2l1416 1FEA  
                                       i2l1352 183C                                         i2l2209 5F94  
                                       i2l1337 3A5E                                         i2l1345 314C  
                                       i2l1433 2146                                         i2l1409 1E8A  
                                       i2l1361 190C                                         i2l1353 18FE  
                                       i2l1442 2294                                         i2l1418 2052  
                                       i2l1362 1A7A                                         i2l1370 1946  
                                       i2l1354 18D2                                         i2l1611 41C2  
                                       i2l1347 3208                                         i2l1443 2204  
                                       i2l1435 2166                                         i2l1355 1880  
                                       i2l1700 5500                                         i2l1612 42C6  
                                       i2l1428 212A                                         i2l1380 2002  
                                       i2l1701 5480                                         i2l1437 229A  
                                       i2l1429 20D2                                         i2l1381 1A8E  
                                       i2l1365 1910                                         i2l1614 42D8  
                                       i2l1710 4B94                                         i2l1382 1AD0  
                                       i2l1358 1A0C                                         i2l1374 19CC  
                                       i2l1439 227C                                         i2l1375 19A0  
                                       i2l1367 1914                                         i2l1800 45FA  
                                       i2l1536 601E                                         i2l1712 4BB2  
                                       i2l1392 1C9E                                         i2l1384 1B62  
                                       i2l1368 193C                                         i2l1801 462A  
                                       i2l1537 6012                                         i2l1609 416A  
                                       i2l1713 4BF4                                         i2l1385 1BC8  
                                       i2l1377 19E0                                         i2l1369 194C  
                                       i2l1810 532C                                         i2l1706 6B28  
                                       i2l1722 4C86                                         i2l1714 4C24  
                                       i2l1378 19F4                                         i2l1723 4C7A  
                                       i2l1387 1BEE                                         i2l1379 1A06  
                                       i2l1900 5E24                                         i2l1716 4C62  
                                       i2l1820 4A10                                         i2l1388 1C2E  
                                       i2l1901 5E18                                         i2l1717 4C52  
                                       i2l1821 4A00                                         i2l1389 1CF6  
                                       i2l1742 5902                                         i2l1806 52A0  
                                       i2l1590 3AEE                                         i2l1910 62A2  
                                       i2l1814 4946                                         i2l1670 5DAC  
                                       i2l1398 1D5C                                         i2l1743 58F8  
                                       i2l1831 5B7C                                         i2l1911 6296  
                                       i2l1840 50EC                                         i2l1832 5BAC  
                                       i2l1808 52C8                                         i2l1592 3BE2  
                                       i2l1904 5E58                                         i2l1816 4972  
                                       i2l1680 60FA                                         i2l1745 5936  
                                       i2l1841 511E                                         i2l1809 5306  
                                       i2l1593 3C92                                         i2l1905 5E66  
                                       i2l1921 647E                                         i2l1817 49AC  
                                       i2l1673 5DD4                                         i2l1746 5920  
                                       i2l1842 512E                                         i2l1914 62CA  
                                       i2l1922 6472                                         i2l1826 4A34  
                                       i2l1818 49D4                                         i2l1674 5DDE  
                                       i2l1666 5D86                                         i2l1682 6110  
                                       i2l1915 62D8                                         i2l1827 4A28  
                                       i2l1675 5DEC                                         i2l1667 5D96  
                                       i2l1683 6108                                         i2l1748 595E  
                                       i2l1844 5146                                         i2l1749 5954  
                                       i2l1773 44F6                                         i2l1845 5156  
                                       i2l1861 504A                                         i2l1669 5DB4  
                                       i2l1782 4586                                         i2l1838 50C4  
                                       i2l1870 508A                                         i2l1862 503A  
                                       i2l1686 6128                                         i2l1855 68BA  
                                       i2l1687 6132                                         i2l1679 60EE  
                                       i2l1688 6140                                         i2l1777 4520  
                                       i2l1849 6C8A                                         i2l1874 6D14  
                                       i2l1787 457C                                         i2l1867 506E  
                                       i2l1859 4FD4                                         i2l1796 45BA  
                                       i2l1788 4572                                         i2l1868 5062  
                                       i2l1797 45B0                                         i2l1990 3E1E  
                                       i2l1799 45DE                                         i2l1991 3E76  
                                       i2l1992 3F60                                         i2l1989 3D3C  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 0039                               __end_of___lwtoft 6CBC  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 6618                                   i2_scale$4018 0039  
                             __end_of__powers_ EC32           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 4DBA                                         ___ftge 5A2A  
                                       ___wmul 6B64                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                     ??_terminal_setCursorHome 018E                                         _fround 359A  
                                       clear_0 5EBE                                         clear_1 5ECA  
                                       clear_2 5ED6                                         clear_3 5EE6  
                         _eusart2RxStringReady 07F0                               ___awdiv@quotient 0123  
                              ___awmod@divisor 0119                                ___awmod@counter 011B  
                                       _printf 0D48                                         _strcat 6666  
                                       _strchr 6998                                         _strcmp 65C8  
                                       _strcpy 69D0                                      ?_ADCC_ISR 0001  
                                       _strlen 64C8                                 i2___awdiv@sign 000C  
                                       _strstr 5BDC                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                 getCauseOfResetString@strings 02A2                               _background_color 00E9  
                              _ADCC_Initialize 62EA                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 22EA                                 _PMD_Initialize 6D1C  
                      FLASH_ReadWord@flashAddr 011B                                      ??_isdigit 0117  
                            __end_ofi2___awdiv 5DF6                              __end_ofi2___ftadd 4650  
                            __end_ofi2___awmod 614A                              __end_ofi2___ftdiv 535E  
                               i2___ftadd@exp1 004B                                 i2___ftadd@exp2 004A  
                            __end_ofi2___ftneg 6C98                              __end_ofi2___lldiv 5E78  
                                       sin@sgn 0072                              __end_ofi2___ftmul 5190  
                            __end_ofi2___llmod 62EA                              __end_ofi2___ftsub 68E4  
                            __end_ofi2___fttol 509C                                 i2___ftadd@sign 0049  
                                 __mediumconst EBE2                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 6A06                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                         sqrt@og 006C  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 0097  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 018E                  __size_of_INTERRUPT_Initialize 0014  
                              _eusart2RxBuffer 0200                        __end_of_TMR5_Initialize 6748  
                            __end_ofi2_isdigit 6D1C                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00B6                              _SYSTEM_Initialize 6B36  
         __end_of_TMR7_DefaultInterruptHandler 6ED4          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 6ED2                                 i2___ftdiv@cntr 001E  
                              _eusart2TxBuffer 0300                                     __accesstop 0060  
                      __end_of__initialization 5EEE                                     ___altoft@c 004C  
                               i2___ftdiv@sign 0023                                     ___ftadd@f1 012B  
                                   ___ftadd@f2 012E                            __size_ofi2___ftpack 00AE  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 007C  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 6D54  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01A7  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                   __end_of_getMajorRevisionID 695E                                     ___fttol@f1 0155  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 018E                                   __pidataBANK0 6E1C  
                                 __pidataBANK2 6D8A                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 543C                                  __end_of_frexp 5FF0  
                               i2___ftmul@cntr 0034                                  __end_of_scale 2DE2  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 6E38                              ??_HLVD_Initialize 0117  
                                  i2printf@idx 0071                       ??_terminal_clearTerminal 018E  
                                  i2printf@len 0072                                    i2printf@exp 007A  
                                  i2printf@val 0083                        __end_of_TMR6_Initialize 6AD6  
                     __size_of_getCauseOfReset 0052                         __end_of_PMD_Initialize 6D38  
                               i2___fttol@exp1 004B                          _getCauseOfResetString 6AD6  
                                   ___lwtoft@c 0009                                 i2___fttol@lval 0047  
                                    ?i2___ftge 002A                                     ??_ADCC_ISR 005E  
                         __end_of_EUSART2_Read 67DA                                      ?i2___wmul 000F  
                                i2__tdiv_to_l_ 491A                                     __div_to_l_ 4A4C  
                              _TMR7_StartTimer 6EC0                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0036  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0066                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0122                                        ??_floor 0059  
                              __div_to_l_@cntr 0121                                        ??_frexp 0006  
                                      ??_scale 0158                      __end_of_SYSTEM_Initialize 6B64  
                               i2___lltoft@exp 0011                                __div_to_l_@quot 011D  
                                      ??_putch 0118                                   peakToRMS@RMS 00A3  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00EC  
                                _eusart2TxHead 01D4                                     __pbssBANK0 00C8  
                                   __pbssBANK1 01AF                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                  _eusart2RxTail 01D1  
                                _eusart2TxTail 01D3                             __size_of_eval_poly 00DA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 6666                             __size_of_peakToRMS 01C6  
                                   ??_HLVD_ISR 0100                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011A  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 6C28  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4002 00A0  
                               _peakToRMS$4003 009A                                 _peakToRMS$4004 009D  
                        ringBufferLUT@arg_buff 0299                                    _Irms_offset 00F0  
                                      ?___ftge 0117              terminal_ringBufferPull@index_2365 01A9  
                                      ?___wmul 0125                          _currentMeasuredToPeak 63AE  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 6E54  
                      __end_of_ADCC_Initialize 634E                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                    ?___altoft 004C                                        ?_fround 0155  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___awtoft 011F                                      ?___ftpack 0117  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0164  
                              ?_PMD_Initialize 0001                                      ?___lltoft 011F  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___ftge 0030  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 6D70  
                                    ?___lwtoft 0009                                        ?_strstr 0126  
                                   ??i2___wmul 0013                                 _FLASH_ReadWord 681E  
                                      u1257_41 492A                                        u1259_41 4956  
                                      u1661_41 50D4                                        u1638_41 44B4  
                                      u1670_41 52B0                                        u1639_41 44C8  
                                      i2l14403 1C78                                        i2l14423 1D60  
                                      i2l14327 19A0                                        i2l13545 5BD8  
                                      i2l14521 20D6                                        i2l14507 2094  
                                      i2l14447 1E58                                        i2l14395 1C2E  
                                      i2l14557 227C                                        u1659_41 50AC  
                                      u1668_41 5288                                        u1689_41 4FB8  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0039  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 58DA  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 0068  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 6EA6  
                     _acquisitionTimerCallback 56BA                        __end_of_TMR5_WriteTimer 6D70  
             __size_of_terminal_textAttributes 0368                                        i2_scale 2DE2  
                             ?_TMR5_Initialize 0001                                        i2_putch 6EA6  
         __end_of_terminal_textAttributesReset 6DDC          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 6DCA                              __end_of__npowers_ EC59  
                                      __Hparam 0000                                     _scale$3818 0158  
                                      __Lparam 0000                              __end_of_getUserID 681E  
                   ??_TMR5_SetInterruptHandler 011A                                 _adc_error_flag 02F0  
                              __size_of___ftge 0092                                        ___awdiv 5C68  
                                      ___ftadd 42F6                                        ___awmod 6068  
                                      ___ftdiv 5190                                        ___ftneg 6C02  
                      __end_of_TMR7_StartTimer 6EC6                                        ___lldiv 5CEE  
                              __size_of___wmul 0028                                        ___ftmul 4EB2  
                                      ___llmod 621C                                        ___ftsub 6860  
                                      ___fttol 4DBA                                     ??___altoft 0050  
                       __end_of_FLASH_ReadByte 6D8A                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord 6860                                        __pcinit 5E78  
                                 ??i2___ftpack 0006                                     ??___awtoft 0122  
                                   ??___ftpack 011C                              __end_of_eval_poly 5516  
                              __size_of_fround 0294                               ?_TMR6_Initialize 0001  
                      i2___ftmul@f3_as_product 0031                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                   ??i2___lltoft 000D  
                                   ??___lltoft 0123                                        __ptext0 5EF8  
                                      __ptext1 6DDC                                        __ptext2 4C9E  
                                      __ptext3 0000                                        __ptext4 6DCA  
                                      __ptext5 3232                                        __ptext6 61B4  
                                      __ptext7 6666                                        __ptext8 6DEC  
                                      __ptext9 5BDC                              __end_of_peakToRMS 4134  
                              __size_of_printf 0AD4                  currentMeasuredToPeak@Measured 0073  
                                   ??___lwtoft 000C                     ringBufferLUT@angle_degrees 0296  
                                i2_fround$4016 003C                                  i2_fround$4017 0039  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers EC79  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers EBE3  
                        _OSCILLATOR_Initialize 6D38                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 6CBC  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 006A                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 007C                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 029E                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 5ABC                                 __pintcode_body 55EE  
                                      _strncpy 61B4                           end_of_initialization 5EEE  
                      __end_of_TMR7_WriteTimer 6C4E                        getDeviceIDString@F17550 02B4  
                       _terminal_setCursorHome 6DDC                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                        int_func 55EE  
                          i2___wmul@multiplier 000F                                      _T6RSTbits 000FB4  
                                    i1u1807_28 0086                                      i2u1213_40 5DB8  
                      __size_of_TMR7_StopTimer 0006                                      i2u1219_40 6114  
                                    i1u1787_28 6BA0                                      i1u1789_28 6A5C  
                                    i2u1272_40 62A6                                      i2u1256_40 4C8C  
                           __end_ofi2___ftpack 5988                                      i2u1265_40 4A3A  
                                    i2u1269_40 5E28                                      i2u1702_40 53A6  
                                    i2u1631_40 58EA                                      i2u1720_40 2412  
                                    i2u1642_40 44E8                                      i2u1706_40 3E1A  
                                    i2u1635_40 5968                                      i2u1707_40 3E1C  
                                    i2u1731_40 18B6                                      i2u1731_47 18AC  
                                    i2u1652_40 458E                                      i2u1732_40 18F4  
                                    i2u1732_47 18EA                                      i2u1645_40 4512  
                                    i2u1741_40 1A3C                                      i2u1741_47 1A32  
                                    i2u1750_40 1C00                                      i2u1655_40 45C2  
                                    i2u1751_40 1C40                                      i2u1735_40 197A  
                                    i2u1735_47 1970                                      i2u1648_40 4550  
                                    i2u1736_40 1980                                      i2u1761_40 1E74  
                                    i2u1729_40 1868                                      i2u1729_47 185E  
                                    i2u1682_40 418E                                      i2u1762_40 1E84  
                                    i2u1754_40 1C78                                      i2u1746_40 1B08  
                                    i2u1746_45 1AFE                                      i2u1691_40 4FF2  
                                    i2u1683_40 4190                                      i2u1739_40 19C2  
                                    i2u1691_45 4FEA                                      i2u1739_47 19B8  
                                    i2u1780_40 22DC                                      i2u1780_47 22D2  
                           __end_ofi2___lltoft 64C8                                      i2u1758_40 1D9E  
                                    i2u1695_40 5074                                      i2u1688_40 5FBC  
                                    i2u1783_48 6A90                                      i2u1688_48 5FBE  
                                    i2u1793_40 5872                                      i2u1785_48 6BC8  
                              ___lldiv@divisor 011B                                      i2u1779_40 22AC  
                                    i2u1798_48 5642                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 614A                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 6748                                  ??_getDeviceID 0124  
                                      printf@c 018D                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0048                 _ADCPostProcessingCallback$4005 00B3  
               _ADCPostProcessingCallback$4006 00B0                 _ADCPostProcessingCallback$4007 00A6  
               _ADCPostProcessingCallback$4008 00A9                 _ADCPostProcessingCallback$4009 00AC  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 01AB                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 6E46  
                        _TMR5_InterruptHandler 01BA                               i2_TMR7_StopTimer 6ECC  
                     ?_terminal_ringBufferPull 0001                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 6E8C  
                  _ADCC_SetADIInterruptHandler 6E7E                                      i2___awdiv 5D72  
                                    i2___ftadd 44A4                                      i2___awmod 60DA  
                             __CFG_FEXTOSC$ECH 000000                                      i2___ftdiv 5278  
                                    i2___ftneg 6C74                                      i2___lldiv 5DF6  
                                    i2___ftmul 509C                                      i2___llmod 6284  
                                    i2___ftsub 68A2                                      i2___fttol 4FA8  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 6DFC                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 0D48                  ??_ADCC_SetADIInterruptHandler 011A  
                                  ___ftdiv@exp 0144                                   _EUSART2_Read 6792  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 6E0C  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 6CFE                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0008                                    ___ftmul@exp 014F  
                                    _Avg_Power 01B7                   __end_of_INTERRUPT_Initialize 6DB6  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                             ?_TMR7_StartTimer 0001                                 __end_of___ftge 5ABC  
                __end_of_terminal_printNewline 6DFC                                 __end_of___wmul 6B8C  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07F0                            __end_of_getDeviceID 6CFE  
                               __end_of_fround 382E              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 005C  
                             i2___wmul@product 0013                                 __end_of_printf 181C  
                                i2_printf$4019 006E                             _getMajorRevisionID 6922  
                               __end_of_strcat 66B2                                 __end_of_strchr 69D0  
                               __end_of_strcmp 6618                                   i2printf@flag 0078  
                               __end_of_strcpy 6A06                                 __end_of_strlen 6520  
                                 i2printf@fval 0080                                 __end_of_strstr 5C68  
                                 i2printf@prec 0087                            start_initialization 5E78  
                            __size_ofi2___ftge 0090                                     eval_poly@d 004F  
                                   eval_poly@n 0051                                     eval_poly@x 004C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 6ED8          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 6ED6                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 491A                                    __end_of_sin 3F6E  
                                    i2printf@c 0089                                      i2printf@f 0066  
                              i2___fttol@sign1 0046                        _terminal_textAttributes 3232  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                            __size_ofi2_fround 0276                                     ?i2___awdiv 0007  
                                   ?i2___ftadd 0040                                     ?i2___awmod 0001  
                                   ?i2___ftdiv 0015                                     ?i2___ftneg 0024  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 0027  
                                   ?i2___llmod 000E                                     ?i2___ftsub 0060  
                                   ?i2___fttol 003D                  __size_of_ADCC_StartConversion 000E  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                            __size_ofi2_printf 0ACE                          __end_of_EUSART2_Write 66FE  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0191                        __end_ofi2_EUSART2_Write 6792  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 00ED  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0117  
                                     ??___ftge 011D                                       ??___wmul 0129  
              __size_of_heartbeatTimerCallback 003E                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F0                                    __pdataBANK2 02A2  
                                     ??_fround 0158                                  _ringBufferLUT 0000  
               ??_terminal_textAttributesReset 01A0                                       ??_printf 016C  
            getCauseOfReset@return_reset_cause 0117                              _POS3P3_ADC_Result 00DD  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 0094                     __end_of_getMinorRevisionID 6C02  
                                     ??_strstr 012A                              __size_of___altoft 0078  
                                    _Vpk_const 00F3                                     fround@prec 015E  
                               _eusart2RxCount 01D0                                  ?i2__div_to_l_ 0001  
                            __size_of___awtoft 003A                              __size_of___ftpack 00B0  
                                    _acos$4010 0091                              __size_of___lltoft 005E  
                            __size_of___lwtoft 0024                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0280  
                                 _isdigit$3141 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 6E1C                            EUSART2_Write@txData 0117  
                                 _load_on_time 01AF                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$4011 007F  
                                    _asin$4012 008B                                      _asin$4013 0085  
                                    _asin$4014 0082                                       ?i2_putch 0001  
                                   sin@coeff_a EC8B                                     sin@coeff_b ECA9  
                               _TMR7_StopTimer 6EC6                          _TMR6_InterruptHandler 01C0  
                                    __pnvBANK1 01D5                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 5988                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 6CDE  
                                __pmediumconst EBE2                                       ?___awdiv 011D  
                                    __ptext100 6BB4                                      __ptext101 6ED8  
                                    __ptext110 63AE                                      __ptext102 22EA  
                                    __ptext111 3D10                                      __ptext103 6ECC  
                                    __ptext120 543C                                      __ptext112 68A2  
                                    __ptext104 3F6E                                      __ptext121 6C4E  
                                    __ptext113 6C74                                      __ptext105 6520  
                                    __ptext122 509C                                      __ptext114 5278  
                                    __ptext106 3AA4                                      __ptext123 44A4  
                                    __ptext115 535E                                      __ptext107 4650  
                                    __ptext124 6C98                                      __ptext116 4FA8  
                                    __ptext108 4134                                      __ptext125 58DA  
                                    __ptext117 5B4C                                      __ptext109 6B06  
                                     ?___ftadd 012B                                      __ptext126 6DB6  
                                    __ptext118 5F78                                      __ptext127 0000  
                                    __ptext119 5FF0                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 6E46  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ EC32  
                                     ?___fttol 0155                                _getCauseOfReset 6576  
                               ?_ringBufferLUT 01A0                                      _getUserID 67DA  
            _EUSART2_TxDefaultInterruptHandler 01C6                                    __pintcodelo 0018  
                         _VCC_overvoltage_flag 02F2                                    __tdiv_to_l_ 47E6  
                                     _ADCC_ISR 6BB4                                 ??i2__div_to_l_ 0007  
                                 ??__div_to_l_ 011D                               _POS12_ADC_Result 00DA  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 01B3                                      _eval_poly 543C  
                    ??_terminal_textAttributes 0190                                      _attribute 00EB  
                                    _peakToRMS 3F6E                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers EC59  
                       _heartbeatTimerCallback 68E4                                 _dimming_period 00F9  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 0046  
                                  ??i2___awmod 0005                                 __size_of_floor 00DE  
                                  ??i2___ftdiv 001B                                 __size_of_frexp 0078  
                                  ??i2___ftneg 0027                                    ??i2___lldiv 0009  
                                  ??i2___ftmul 002D                                 __size_of_scale 0480  
                                  ??i2___llmod 0016                                    ??i2___ftsub 005E  
                                  ??i2___fttol 0041                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 6DA2                         __end_of_TMR7_StopTimer 6ECC  
                                     _T6CLKCON 000FB3                          _ADCC_IsConversionDone 6E9A  
       terminal_textAttributes@input_attribute 018F                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00AE  
                               ___wmul@product 0129                      currentMeasuredToPeak@Peak 0079  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR 6EB8  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0066                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 6ED2  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     i1u806_20 68F0                                       i1u807_28 68F4  
                                     _PIR1bits 000E34                                       i1u746_20 6EA2  
                           __end_of__div_to_l_ 4B76                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 6A70  
                                     _TMR6_ISR 6B8C                                       _TMR7_ISR 6A3C  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   ?_getUserID 0122                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0125  
                                     i2___ftge 5B4C                                       i2___wmul 6C4E  
                      __size_of_FVR_Initialize 0008                                     printf@flag 017C  
                                   printf@fval 0188                                     printf@prec 018B  
                                   ?_eval_poly 004C                 __end_of_terminal_setCursorHome 6DEC  
                            i2___awdiv@divisor 0009                                       i2_fround 382E  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 0094  
                            i2___awdiv@counter 000B                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 181C  
                          __end_ofatan@coeff_a EC8B                            __end_ofatan@coeff_b ECA9  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 5E8C                                      copy_data1 5EAC  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 01CF                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001               __size_of_terminal_ringBufferPull 011C  
                             __size_ofi2_scale 0450                 ??_TMR5_DefaultInterruptHandler 0001  
                             __size_ofi2_putch 000A                                      frexp@eptr 0004  
                      __end_of_getCauseOfReset 65C8                __end_of_terminal_textAttributes 359A  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00AF  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 6DCA  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 6E7E  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 6E70  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01A2                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 00EA                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___awdiv 0086                               __size_of___ftadd 01AE  
                             __size_of___awmod 0072                               __size_of___ftdiv 00E8  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0084                                       ___altoft 5FF0  
                             __size_of___ftmul 00F6                               __size_of___llmod 0068  
                             __size_of___ftsub 0042                               __size_of___fttol 00F8  
                                  _load_enable 02F1                                       ___awtoft 695E  
                                     ___ftpack 577C               __end_of_acquisitionTimerCallback 577C  
                                  _fround$3816 015B                                    _fround$3817 0158  
                                     ___lltoft 640E                          __end_ofi2__tdiv_to_l_ 4A4C  
                                     ___lwtoft 6C98                       _TMR7_SetInterruptHandler 6E38  
                        _TMR7_InterruptHandler 01BD                             _ADC_Result_Scaling 00E0  
      terminal_textAttributes@foreground_color 0190                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 6E0C                               __size_of_isdigit 0022  
                                     __ptext10 5ABC                                       __ptext11 64C8  
                                     __ptext20 681E                                       __ptext12 6998  
                                     __ptext21 6D70                                       __ptext13 69D0  
                                     __ptext30 2962                                       __ptext22 6AD6  
                                     __ptext14 65C8                                       __ptext31 6E2A  
                                     __ptext23 5516                                       __ptext15 67DA  
                                     __ptext40 4A4C                                       __ptext32 66B2  
                                     __ptext24 5190                                       __ptext16 6BDC  
                                     __ptext41 640E                                       __ptext33 6CBC  
                                     __ptext25 695E                                       __ptext17 6922  
                                     __ptext50 6576                                       __ptext42 621C  
                                     __ptext34 359A                                       __ptext26 6EC0  
                                     __ptext18 634E                                       __ptext51 6B36  
                                     __ptext43 5CEE                                       __ptext35 6B64  
                                     __ptext27 6792                                       __ptext19 6CDE  
                                     __ptext60 6D38                                       __ptext52 6618  
                                     __ptext44 4DBA                                       __ptext36 4EB2  
                                     __ptext28 6DFC                                       __ptext61 6DA2  
                                     __ptext53 6E38                                       __ptext45 6860  
                                     __ptext37 6068                                       __ptext29 0D48  
                                     __ptext70 6A3C                                       __ptext62 6E0C  
                                     __ptext54 6AA4                                       __ptext46 42F6  
                                     __ptext38 5C68                                       __ptext71 6ED2  
                                     __ptext63 6EB0                                       __ptext55 6E46  
                                     __ptext47 577C                                       __ptext39 47E6  
                                     __ptext80 6EB8                                       __ptext72 56BA  
                                     __ptext64 614A                                       __ptext56 66FE  
                                     __ptext48 6C02                                       __ptext81 6A06  
                                     __ptext73 6EC6                                       __ptext65 6E62  
                                     __ptext57 6E54                                       __ptext49 5A2A  
                                     __ptext90 6748                                       __ptext74 6E8C  
                                     __ptext66 6E70                                       __ptext58 6D1C  
                                     __ptext91 6CFE                                       __ptext83 6A70  
                                     __ptext75 6E9A                                       __ptext67 62EA  
                                     __ptext59 5988                                       __ptext92 382E  
                                     __ptext84 6D54                                       __ptext76 6C28  
                                     __ptext68 6E7E                                       __ptext93 60DA  
                                     __ptext85 6ED6                                       __ptext77 6B8C  
                                     __ptext94 5D72                                       __ptext86 582C  
                                     __ptext78 6ED4                                       __ptext95 491A  
                                     __ptext87 181C                                       __ptext79 68E4  
                                     __ptext96 4B76                                       __ptext88 2DE2  
                                     __ptext97 646C                                       __ptext89 6EA6  
                                     __ptext98 6284                                       __ptext99 5DF6  
                                     _sin$4015 006C                                       __powers_ EC0B  
                       ?_ADCC_IsConversionDone 0001                            ringBufferLUT@userID 02A0  
                              _Temp_ADC_Offset 00F6                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                 i2_isdigit$3141 0002  
                              _Temp_ADC_Result 00D7                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026C                                  __size_of_atoi 00D8  
                                __size_of_main 0080                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0196             __size_of_ADCPostProcessingCallback 0678  
                         __end_ofi2__div_to_l_ 4C9E                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 0280  
                    _ADCC_ADI_InterruptHandler 00E6                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 6E9A                                       int$flags 005F  
                                     atoi@sign 012F                                    ??_getUserID 0124  
                                    printf@idx 0175                                      printf@len 0176  
                                    printf@exp 017E                                      printf@val 0184  
                                  atan@coeff_a EC79                                    atan@coeff_b EC9A  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 6DEC  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0053  
                     __size_of_TMR7_StartTimer 0006                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 015B           __end_of_TMR6_DefaultInterruptHandler 6ED6  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 6ED4  
         __end_of_ADCC_DefaultInterruptHandler 6EDA          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 6ED8                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID 6BDC  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 029C  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                  _reset_cause 01D5                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 00E3              __end_of_ADCPostProcessingCallback 2962  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 017A  
                                     printf@cp 0178                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 6B06                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 6DB6                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                         __size_of_EUSART2_Write 004C  
                          _EUSART2_Receive_ISR 582C         __end_of_INTERRUPT_InterruptManagerHigh 56BA  
      __size_of_INTERRUPT_InterruptManagerHigh 56B2                 _INTERRUPT_InterruptManagerHigh 0008  
                  getMajorRevisionID@REVID_RAW 0125                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 6EB0                                    _printf$3819 0172  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01A0  
                             ___lldiv@quotient 011F                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 634E  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 010A         __size_of_INTERRUPT_InterruptManagerLow 00F2  
                _INTERRUPT_InterruptManagerLow 0018                 __end_of_PIN_MANAGER_Initialize 5A2A  
                            ??_ADCC_Initialize 011A                              i2__div_to_l_@exp1 000C  
                            i2__div_to_l_@cntr 000B                        _terminal_ringBufferPull 4C9E  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0007                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 00C2                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 01C3  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 640E  
