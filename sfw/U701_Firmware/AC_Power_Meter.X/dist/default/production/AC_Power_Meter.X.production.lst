

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 06 01:10:46 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155  0000                     
   156                           ; Version 1.45 (B)
   157                           ; Generated 30/01/2018 GMT
   158                           ; 
   159                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   160                           ; All rights reserved.
   161                           ; 
   162                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   163                           ; 
   164                           ; Redistribution and use in source and binary forms, with or without modification, are
   165                           ; permitted provided that the following conditions are met:
   166                           ; 
   167                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   168                           ;        conditions and the following disclaimer.
   169                           ; 
   170                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   171                           ;        of conditions and the following disclaimer in the documentation and/or other
   172                           ;        materials provided with the distribution.
   173                           ; 
   174                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   175                           ;        software without specific prior written permission.
   176                           ; 
   177                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   178                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   179                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   180                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   181                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   182                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   183                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   184                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   185                           ; 
   186                           ; 
   187                           ; Code-generator required, PIC18LF67K40 Definitions
   188                           ; 
   189                           ; SFR Addresses
   190  0000                     
   191                           	psect	idataBANK0
   192  0183CC                     __pidataBANK0:
   193                           	opt stack 0
   194                           
   195                           ;initializer for _dimming_period
   196  0183CC  7FEE               	dw	32750
   197                           
   198                           ;initializer for _TRIAC_Firing_Angle
   199                           ;main.c: 71: volatile double FVR_ADC_Result;
   200                           ;main.c: 72: volatile double AVSS_ADC_Result;
   201                           ;main.c: 73: volatile double ADC_Result_Scaling;
   202                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   203                           ;main.c: 75: volatile double POS12_ADC_Result;
   204                           ;main.c: 76: volatile double Temp_ADC_Result;
   205                           ;main.c: 77: volatile double Temp_ADC_Offset = 631.993725;
   206                           ;main.c: 78: double Vpk_const = 169.7056274847714;
   207                           ;main.c: 79: volatile double Vpk;
   208                           ;main.c: 80: volatile double Ipk;
   209                           ;main.c: 81: volatile double Imeas;
   210                           ;main.c: 82: double Irms_offset = -0.113;
   211  0183CE  0000               	dw	0
   212  0183D0  42B4               	dw	17076
   213                           
   214                           	psect	idataBANK1
   215  0183F0                     __pidataBANK1:
   216                           	opt stack 0
   217                           
   218                           ;initializer for _next_channel
   219  0183F0  3C                 	db	60
   220                           
   221                           	psect	idataBANK2
   222  01819C                     __pidataBANK2:
   223                           	opt stack 0
   224                           
   225                           ;initializer for getCauseOfResetString@strings
   226  01819C  10                 	db	low STR_130
   227  01819D  FE                 	db	high STR_130
   228  01819E  80                 	db	low STR_131
   229  01819F  FE                 	db	high STR_131
   230  0181A0  20                 	db	low STR_132
   231  0181A1  FE                 	db	high STR_132
   232  0181A2  A7                 	db	low STR_133
   233  0181A3  FD                 	db	high STR_133
   234  0181A4  5E                 	db	low (STR_135+9)
   235  0181A5  FA                 	db	high (STR_135+9)
   236  0181A6  55                 	db	low STR_135
   237  0181A7  FA                 	db	high STR_135
   238  0181A8  A8                 	db	low STR_136
   239  0181A9  FC                 	db	high STR_136
   240  0181AA  53                 	db	low STR_137
   241  0181AB  FD                 	db	high STR_137
   242  0181AC  27                 	db	low STR_138
   243  0181AD  FD                 	db	high STR_138
   244                           
   245                           ;initializer for getDeviceIDString@F17550
   246  0181AE  44                 	db	low STR_127
   247  0181AF  FF                 	db	high STR_127
   248  0181B0  10                 	db	low STR_128
   249  0181B1  FF                 	db	high STR_128
   250  0181B2  7C                 	db	low STR_68
   251  0181B3  FF                 	db	high STR_68
   252                           
   253                           ;initializer for _Irms_offset
   254  0181B4  6C8B               	dw	27787
   255  0181B6  BDE7               	dw	48615
   256                           
   257                           ;initializer for _Vpk_const
   258                           ;main.c: 71: volatile double FVR_ADC_Result;
   259                           ;main.c: 72: volatile double AVSS_ADC_Result;
   260                           ;main.c: 73: volatile double ADC_Result_Scaling;
   261                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   262                           ;main.c: 75: volatile double POS12_ADC_Result;
   263                           ;main.c: 76: volatile double Temp_ADC_Result;
   264                           ;main.c: 77: volatile double Temp_ADC_Offset = 631.993725;
   265  0181B8  B4A4               	dw	46244
   266  0181BA  4329               	dw	17193
   267                           
   268                           ;initializer for _Temp_ADC_Offset
   269                           ;main.c: 71: volatile double FVR_ADC_Result;
   270                           ;main.c: 72: volatile double AVSS_ADC_Result;
   271                           ;main.c: 73: volatile double ADC_Result_Scaling;
   272                           ;main.c: 74: volatile double POS3P3_ADC_Result;
   273                           ;main.c: 75: volatile double POS12_ADC_Result;
   274                           ;main.c: 76: volatile double Temp_ADC_Result;
   275  0181BC  FF99               	dw	65433
   276  0181BE  441D               	dw	17437
   277                           
   278                           	psect	mediumconst
   279  00EA1A                     __pmediumconst:
   280                           	opt stack 0
   281  00EA1A  00                 	db	0
   282  00EA1B                     __powers_:
   283                           	opt stack 0
   284  00EA1B  0000               	dw	0
   285  00EA1D  3F80               	dw	16256
   286  00EA1F  0000               	dw	0
   287  00EA21  4120               	dw	16672
   288  00EA23  0000               	dw	0
   289  00EA25  42C8               	dw	17096
   290  00EA27  0000               	dw	0
   291  00EA29  447A               	dw	17530
   292  00EA2B  4000               	dw	16384
   293  00EA2D  461C               	dw	17948
   294  00EA2F  5000               	dw	20480
   295  00EA31  47C3               	dw	18371
   296  00EA33  2400               	dw	9216
   297  00EA35  4974               	dw	18804
   298  00EA37  9680               	dw	38528
   299  00EA39  4B18               	dw	19224
   300  00EA3B  BC20               	dw	48160
   301  00EA3D  4CBE               	dw	19646
   302  00EA3F  6B28               	dw	27432
   303  00EA41  4E6E               	dw	20078
   304  00EA43  02F9               	dw	761
   305  00EA45  5015               	dw	20501
   306  00EA47  78EC               	dw	30956
   307  00EA49  60AD               	dw	24749
   308  00EA4B  F2CA               	dw	62154
   309  00EA4D  7149               	dw	29001
   310  00EA4F                     __end_of__powers_:
   311                           	opt stack 0
   312  00EA4F                     __npowers_:
   313                           	opt stack 0
   314  00EA4F  0000               	dw	0
   315  00EA51  3F80               	dw	16256
   316  00EA53  CCCD               	dw	52429
   317  00EA55  3DCC               	dw	15820
   318  00EA57  D70A               	dw	55050
   319  00EA59  3C23               	dw	15395
   320  00EA5B  126F               	dw	4719
   321  00EA5D  3A83               	dw	14979
   322  00EA5F  B717               	dw	46871
   323  00EA61  38D1               	dw	14545
   324  00EA63  C5AC               	dw	50604
   325  00EA65  3727               	dw	14119
   326  00EA67  37BD               	dw	14269
   327  00EA69  3586               	dw	13702
   328  00EA6B  BF95               	dw	49045
   329  00EA6D  33D6               	dw	13270
   330  00EA6F  CC77               	dw	52343
   331  00EA71  322B               	dw	12843
   332  00EA73  705F               	dw	28767
   333  00EA75  3089               	dw	12425
   334  00EA77  E6FF               	dw	59135
   335  00EA79  2EDB               	dw	11995
   336  00EA7B  E508               	dw	58632
   337  00EA7D  1E3C               	dw	7740
   338  00EA7F  4260               	dw	16992
   339  00EA81  0DA2               	dw	3490
   340  00EA83                     __end_of__npowers_:
   341                           	opt stack 0
   342  00EA83                     _dpowers:
   343                           	opt stack 0
   344  00EA83  0001               	dw	1
   345  00EA85  0000               	dw	0
   346  00EA87  000A               	dw	10
   347  00EA89  0000               	dw	0
   348  00EA8B  0064               	dw	100
   349  00EA8D  0000               	dw	0
   350  00EA8F  03E8               	dw	1000
   351  00EA91  0000               	dw	0
   352  00EA93  2710               	dw	10000
   353  00EA95  0000               	dw	0
   354  00EA97  86A0               	dw	34464
   355  00EA99  0001               	dw	1
   356  00EA9B  4240               	dw	16960
   357  00EA9D  000F               	dw	15
   358  00EA9F  9680               	dw	38528
   359  00EAA1  0098               	dw	152
   360  00EAA3  E100               	dw	57600
   361  00EAA5  05F5               	dw	1525
   362  00EAA7  CA00               	dw	51712
   363  00EAA9  3B9A               	dw	15258
   364  00EAAB                     __end_of_dpowers:
   365                           	opt stack 0
   366  00EAAB                     _hexpowers:
   367                           	opt stack 0
   368  00EAAB  0001               	dw	1
   369  00EAAD  0000               	dw	0
   370  00EAAF  0010               	dw	16
   371  00EAB1  0000               	dw	0
   372  00EAB3  0100               	dw	256
   373  00EAB5  0000               	dw	0
   374  00EAB7  1000               	dw	4096
   375  00EAB9  0000               	dw	0
   376  00EABB  0000               	dw	0
   377  00EABD  0001               	dw	1
   378  00EABF  0000               	dw	0
   379  00EAC1  0010               	dw	16
   380  00EAC3  0000               	dw	0
   381  00EAC5  0100               	dw	256
   382  00EAC7  0000               	dw	0
   383  00EAC9  1000               	dw	4096
   384  00EACB                     __end_of_hexpowers:
   385                           	opt stack 0
   386  00EACB                     atan@coeff_a:
   387                           	opt stack 0
   388  00EACB  3C06               	dw	15366
   389  00EACD  4204               	dw	16900
   390  00EACF  9F7D               	dw	40829
   391  00EAD1  426A               	dw	17002
   392  00EAD3  905C               	dw	36956
   393  00EAD5  4201               	dw	16897
   394  00EAD7  4D60               	dw	19808
   395  00EAD9  40BB               	dw	16571
   396  00EADB  EC51               	dw	60497
   397  00EADD  3E47               	dw	15943
   398  00EADF  8DDE               	dw	36318
   399  00EAE1  BB1F               	dw	47903
   400  00EAE3                     __end_ofatan@coeff_a:
   401                           	opt stack 0
   402  00EAE3                     sin@coeff_a:
   403                           	opt stack 0
   404  00EAE3  F3EC               	dw	62444
   405  00EAE5  484A               	dw	18506
   406  00EAE7  9535               	dw	38197
   407  00EAE9  C795               	dw	51093
   408  00EAEB  C117               	dw	49431
   409  00EAED  45DC               	dw	17884
   410  00EAEF  DBFD               	dw	56317
   411  00EAF1  C36D               	dw	50029
   412  00EAF3  B372               	dw	45938
   413  00EAF5  4033               	dw	16435
   414  00EAF7                     __end_ofsin@coeff_a:
   415                           	opt stack 0
   416  00EAF7                     atan@coeff_b:
   417                           	opt stack 0
   418  00EAF7  3C06               	dw	15366
   419  00EAF9  4204               	dw	16900
   420  00EAFB  59C0               	dw	22976
   421  00EAFD  428B               	dw	17035
   422  00EAFF  0474               	dw	1140
   423  00EB01  4244               	dw	16964
   424  00EB03  9BF9               	dw	39929
   425  00EB05  414F               	dw	16719
   426  00EB07  0000               	dw	0
   427  00EB09  3F80               	dw	16256
   428  00EB0B                     __end_ofatan@coeff_b:
   429                           	opt stack 0
   430  00EB0B                     sin@coeff_b:
   431                           	opt stack 0
   432  00EB0B  342B               	dw	13355
   433  00EB0D  4801               	dw	18433
   434  00EB0F  9D7F               	dw	40319
   435  00EB11  45B0               	dw	17840
   436  00EB13  FFE7               	dw	65511
   437  00EB15  42D9               	dw	17113
   438  00EB17  0000               	dw	0
   439  00EB19  3F80               	dw	16256
   440  00EB1B                     __end_ofsin@coeff_b:
   441                           	opt stack 0
   442  00EB1B                     STR_121:
   443  00EB1B  4C                 	db	76	;'L'
   444  00EB1C  69                 	db	105	;'i'
   445  00EB1D  73                 	db	115	;'s'
   446  00EB1E  74                 	db	116	;'t'
   447  00EB1F  20                 	db	32
   448  00EB20  6F                 	db	111	;'o'
   449  00EB21  66                 	db	102	;'f'
   450  00EB22  20                 	db	32
   451  00EB23  73                 	db	115	;'s'
   452  00EB24  75                 	db	117	;'u'
   453  00EB25  70                 	db	112	;'p'
   454  00EB26  70                 	db	112	;'p'
   455  00EB27  6F                 	db	111	;'o'
   456  00EB28  72                 	db	114	;'r'
   457  00EB29  74                 	db	116	;'t'
   458  00EB2A  65                 	db	101	;'e'
   459  00EB2B  64                 	db	100	;'d'
   460  00EB2C  20                 	db	32
   461  00EB2D  63                 	db	99	;'c'
   462  00EB2E  6F                 	db	111	;'o'
   463  00EB2F  6D                 	db	109	;'m'
   464  00EB30  6D                 	db	109	;'m'
   465  00EB31  61                 	db	97	;'a'
   466  00EB32  6E                 	db	110	;'n'
   467  00EB33  64                 	db	100	;'d'
   468  00EB34  73                 	db	115	;'s'
   469  00EB35  3A                 	db	58	;':'
   470  00EB36  0A                 	db	10
   471  00EB37  0D                 	db	13
   472  00EB38  44                 	db	68	;'D'
   473  00EB39  65                 	db	101	;'e'
   474  00EB3A  76                 	db	118	;'v'
   475  00EB3B  69                 	db	105	;'i'
   476  00EB3C  63                 	db	99	;'c'
   477  00EB3D  65                 	db	101	;'e'
   478  00EB3E  20                 	db	32
   479  00EB3F  43                 	db	67	;'C'
   480  00EB40  6F                 	db	111	;'o'
   481  00EB41  6D                 	db	109	;'m'
   482  00EB42  6D                 	db	109	;'m'
   483  00EB43  61                 	db	97	;'a'
   484  00EB44  6E                 	db	110	;'n'
   485  00EB45  64                 	db	100	;'d'
   486  00EB46  73                 	db	115	;'s'
   487  00EB47  3A                 	db	58	;':'
   488  00EB48  0A                 	db	10
   489  00EB49  0D                 	db	13
   490  00EB4A  20                 	db	32
   491  00EB4B  20                 	db	32
   492  00EB4C  20                 	db	32
   493  00EB4D  52                 	db	82	;'R'
   494  00EB4E  65                 	db	101	;'e'
   495  00EB4F  73                 	db	115	;'s'
   496  00EB50  65                 	db	101	;'e'
   497  00EB51  74                 	db	116	;'t'
   498  00EB52  3A                 	db	58	;':'
   499  00EB53  20                 	db	32
   500  00EB54  43                 	db	67	;'C'
   501  00EB55  6C                 	db	108	;'l'
   502  00EB56  65                 	db	101	;'e'
   503  00EB57  61                 	db	97	;'a'
   504  00EB58  72                 	db	114	;'r'
   505  00EB59  73                 	db	115	;'s'
   506  00EB5A  20                 	db	32
   507  00EB5B  74                 	db	116	;'t'
   508  00EB5C  68                 	db	104	;'h'
   509  00EB5D  65                 	db	101	;'e'
   510  00EB5E  20                 	db	32
   511  00EB5F  74                 	db	116	;'t'
   512  00EB60  65                 	db	101	;'e'
   513  00EB61  72                 	db	114	;'r'
   514  00EB62  6D                 	db	109	;'m'
   515  00EB63  69                 	db	105	;'i'
   516  00EB64  6E                 	db	110	;'n'
   517  00EB65  61                 	db	97	;'a'
   518  00EB66  6C                 	db	108	;'l'
   519  00EB67  20                 	db	32
   520  00EB68  61                 	db	97	;'a'
   521  00EB69  6E                 	db	110	;'n'
   522  00EB6A  64                 	db	100	;'d'
   523  00EB6B  20                 	db	32
   524  00EB6C  72                 	db	114	;'r'
   525  00EB6D  65                 	db	101	;'e'
   526  00EB6E  73                 	db	115	;'s'
   527  00EB6F  65                 	db	101	;'e'
   528  00EB70  74                 	db	116	;'t'
   529  00EB71  73                 	db	115	;'s'
   530  00EB72  20                 	db	32
   531  00EB73  74                 	db	116	;'t'
   532  00EB74  68                 	db	104	;'h'
   533  00EB75  65                 	db	101	;'e'
   534  00EB76  20                 	db	32
   535  00EB77  6D                 	db	109	;'m'
   536  00EB78  69                 	db	105	;'i'
   537  00EB79  63                 	db	99	;'c'
   538  00EB7A  72                 	db	114	;'r'
   539  00EB7B  6F                 	db	111	;'o'
   540  00EB7C  0A                 	db	10
   541  00EB7D  0D                 	db	13
   542  00EB7E  20                 	db	32
   543  00EB7F  20                 	db	32
   544  00EB80  20                 	db	32
   545  00EB81  43                 	db	67	;'C'
   546  00EB82  6C                 	db	108	;'l'
   547  00EB83  65                 	db	101	;'e'
   548  00EB84  61                 	db	97	;'a'
   549  00EB85  72                 	db	114	;'r'
   550  00EB86  3A                 	db	58	;':'
   551  00EB87  20                 	db	32
   552  00EB88  43                 	db	67	;'C'
   553  00EB89  6C                 	db	108	;'l'
   554  00EB8A  65                 	db	101	;'e'
   555  00EB8B  61                 	db	97	;'a'
   556  00EB8C  72                 	db	114	;'r'
   557  00EB8D  73                 	db	115	;'s'
   558  00EB8E  20                 	db	32
   559  00EB8F  74                 	db	116	;'t'
   560  00EB90  68                 	db	104	;'h'
   561  00EB91  65                 	db	101	;'e'
   562  00EB92  20                 	db	32
   563  00EB93  74                 	db	116	;'t'
   564  00EB94  65                 	db	101	;'e'
   565  00EB95  72                 	db	114	;'r'
   566  00EB96  6D                 	db	109	;'m'
   567  00EB97  69                 	db	105	;'i'
   568  00EB98  6E                 	db	110	;'n'
   569  00EB99  61                 	db	97	;'a'
   570  00EB9A  6C                 	db	108	;'l'
   571  00EB9B  20                 	db	32
   572  00EB9C  62                 	db	98	;'b'
   573  00EB9D  75                 	db	117	;'u'
   574  00EB9E  74                 	db	116	;'t'
   575  00EB9F  20                 	db	32
   576  00EBA0  64                 	db	100	;'d'
   577  00EBA1  6F                 	db	111	;'o'
   578  00EBA2  65                 	db	101	;'e'
   579  00EBA3  73                 	db	115	;'s'
   580  00EBA4  6E                 	db	110	;'n'
   581  00EBA5  27                 	db	39
   582  00EBA6  74                 	db	116	;'t'
   583  00EBA7  20                 	db	32
   584  00EBA8  72                 	db	114	;'r'
   585  00EBA9  65                 	db	101	;'e'
   586  00EBAA  73                 	db	115	;'s'
   587  00EBAB  65                 	db	101	;'e'
   588  00EBAC  74                 	db	116	;'t'
   589  00EBAD  20                 	db	32
   590  00EBAE  74                 	db	116	;'t'
   591  00EBAF  68                 	db	104	;'h'
   592  00EBB0  65                 	db	101	;'e'
   593  00EBB1  20                 	db	32
   594  00EBB2  6D                 	db	109	;'m'
   595  00EBB3  69                 	db	105	;'i'
   596  00EBB4  63                 	db	99	;'c'
   597  00EBB5  72                 	db	114	;'r'
   598  00EBB6  6F                 	db	111	;'o'
   599  00EBB7  0A                 	db	10
   600  00EBB8  0D                 	db	13
   601  00EBB9  20                 	db	32
   602  00EBBA  20                 	db	32
   603  00EBBB  20                 	db	32
   604  00EBBC  43                 	db	67	;'C'
   605  00EBBD  61                 	db	97	;'a'
   606  00EBBE  75                 	db	117	;'u'
   607  00EBBF  73                 	db	115	;'s'
   608  00EBC0  65                 	db	101	;'e'
   609  00EBC1  20                 	db	32
   610  00EBC2  6F                 	db	111	;'o'
   611  00EBC3  66                 	db	102	;'f'
   612  00EBC4  20                 	db	32
   613  00EBC5  52                 	db	82	;'R'
   614  00EBC6  65                 	db	101	;'e'
   615  00EBC7  73                 	db	115	;'s'
   616  00EBC8  65                 	db	101	;'e'
   617  00EBC9  74                 	db	116	;'t'
   618  00EBCA  3F                 	db	63	;'?'
   619  00EBCB  3A                 	db	58	;':'
   620  00EBCC  20                 	db	32
   621  00EBCD  52                 	db	82	;'R'
   622  00EBCE  65                 	db	101	;'e'
   623  00EBCF  74                 	db	116	;'t'
   624  00EBD0  75                 	db	117	;'u'
   625  00EBD1  72                 	db	114	;'r'
   626  00EBD2  6E                 	db	110	;'n'
   627  00EBD3  73                 	db	115	;'s'
   628  00EBD4  20                 	db	32
   629  00EBD5  74                 	db	116	;'t'
   630  00EBD6  68                 	db	104	;'h'
   631  00EBD7  65                 	db	101	;'e'
   632  00EBD8  20                 	db	32
   633  00EBD9  63                 	db	99	;'c'
   634  00EBDA  61                 	db	97	;'a'
   635  00EBDB  75                 	db	117	;'u'
   636  00EBDC  73                 	db	115	;'s'
   637  00EBDD  65                 	db	101	;'e'
   638  00EBDE  20                 	db	32
   639  00EBDF  6F                 	db	111	;'o'
   640  00EBE0  66                 	db	102	;'f'
   641  00EBE1  20                 	db	32
   642  00EBE2  74                 	db	116	;'t'
   643  00EBE3  68                 	db	104	;'h'
   644  00EBE4  65                 	db	101	;'e'
   645  00EBE5  20                 	db	32
   646  00EBE6  6D                 	db	109	;'m'
   647  00EBE7  6F                 	db	111	;'o'
   648  00EBE8  73                 	db	115	;'s'
   649  00EBE9  74                 	db	116	;'t'
   650  00EBEA  20                 	db	32
   651  00EBEB  72                 	db	114	;'r'
   652  00EBEC  65                 	db	101	;'e'
   653  00EBED  63                 	db	99	;'c'
   654  00EBEE  65                 	db	101	;'e'
   655  00EBEF  6E                 	db	110	;'n'
   656  00EBF0  74                 	db	116	;'t'
   657  00EBF1  20                 	db	32
   658  00EBF2  64                 	db	100	;'d'
   659  00EBF3  65                 	db	101	;'e'
   660  00EBF4  76                 	db	118	;'v'
   661  00EBF5  69                 	db	105	;'i'
   662  00EBF6  63                 	db	99	;'c'
   663  00EBF7  65                 	db	101	;'e'
   664  00EBF8  20                 	db	32
   665  00EBF9  72                 	db	114	;'r'
   666  00EBFA  65                 	db	101	;'e'
   667  00EBFB  73                 	db	115	;'s'
   668  00EBFC  65                 	db	101	;'e'
   669  00EBFD  74                 	db	116	;'t'
   670  00EBFE  0A                 	db	10
   671  00EBFF  0D                 	db	13
   672  00EC00  20                 	db	32
   673  00EC01  20                 	db	32
   674  00EC02  20                 	db	32
   675  00EC03  2A                 	db	42
   676  00EC04  49                 	db	73	;'I'
   677  00EC05  44                 	db	68	;'D'
   678  00EC06  4E                 	db	78	;'N'
   679  00EC07  3F                 	db	63	;'?'
   680  00EC08  3A                 	db	58	;':'
   681  00EC09  20                 	db	32
   682  00EC0A  52                 	db	82	;'R'
   683  00EC0B  65                 	db	101	;'e'
   684  00EC0C  74                 	db	116	;'t'
   685  00EC0D  75                 	db	117	;'u'
   686  00EC0E  72                 	db	114	;'r'
   687  00EC0F  6E                 	db	110	;'n'
   688  00EC10  73                 	db	115	;'s'
   689  00EC11  20                 	db	32
   690  00EC12  64                 	db	100	;'d'
   691  00EC13  65                 	db	101	;'e'
   692  00EC14  76                 	db	118	;'v'
   693  00EC15  69                 	db	105	;'i'
   694  00EC16  63                 	db	99	;'c'
   695  00EC17  65                 	db	101	;'e'
   696  00EC18  20                 	db	32
   697  00EC19  69                 	db	105	;'i'
   698  00EC1A  64                 	db	100	;'d'
   699  00EC1B  65                 	db	101	;'e'
   700  00EC1C  6E                 	db	110	;'n'
   701  00EC1D  74                 	db	116	;'t'
   702  00EC1E  69                 	db	105	;'i'
   703  00EC1F  66                 	db	102	;'f'
   704  00EC20  69                 	db	105	;'i'
   705  00EC21  63                 	db	99	;'c'
   706  00EC22  61                 	db	97	;'a'
   707  00EC23  74                 	db	116	;'t'
   708  00EC24  69                 	db	105	;'i'
   709  00EC25  6F                 	db	111	;'o'
   710  00EC26  6E                 	db	110	;'n'
   711  00EC27  20                 	db	32
   712  00EC28  73                 	db	115	;'s'
   713  00EC29  74                 	db	116	;'t'
   714  00EC2A  72                 	db	114	;'r'
   715  00EC2B  69                 	db	105	;'i'
   716  00EC2C  6E                 	db	110	;'n'
   717  00EC2D  67                 	db	103	;'g'
   718  00EC2E  0A                 	db	10
   719  00EC2F  0D                 	db	13
   720  00EC30  20                 	db	32
   721  00EC31  20                 	db	32
   722  00EC32  20                 	db	32
   723  00EC33  44                 	db	68	;'D'
   724  00EC34  65                 	db	101	;'e'
   725  00EC35  76                 	db	118	;'v'
   726  00EC36  69                 	db	105	;'i'
   727  00EC37  63                 	db	99	;'c'
   728  00EC38  65                 	db	101	;'e'
   729  00EC39  20                 	db	32
   730  00EC3A  4F                 	db	79	;'O'
   731  00EC3B  6E                 	db	110	;'n'
   732  00EC3C  20                 	db	32
   733  00EC3D  54                 	db	84	;'T'
   734  00EC3E  69                 	db	105	;'i'
   735  00EC3F  6D                 	db	109	;'m'
   736  00EC40  65                 	db	101	;'e'
   737  00EC41  3F                 	db	63	;'?'
   738  00EC42  3A                 	db	58	;':'
   739  00EC43  20                 	db	32
   740  00EC44  52                 	db	82	;'R'
   741  00EC45  65                 	db	101	;'e'
   742  00EC46  74                 	db	116	;'t'
   743  00EC47  75                 	db	117	;'u'
   744  00EC48  72                 	db	114	;'r'
   745  00EC49  6E                 	db	110	;'n'
   746  00EC4A  73                 	db	115	;'s'
   747  00EC4B  20                 	db	32
   748  00EC4C  64                 	db	100	;'d'
   749  00EC4D  65                 	db	101	;'e'
   750  00EC4E  76                 	db	118	;'v'
   751  00EC4F  69                 	db	105	;'i'
   752  00EC50  63                 	db	99	;'c'
   753  00EC51  65                 	db	101	;'e'
   754  00EC52  20                 	db	32
   755  00EC53  6F                 	db	111	;'o'
   756  00EC54  6E                 	db	110	;'n'
   757  00EC55  20                 	db	32
   758  00EC56  74                 	db	116	;'t'
   759  00EC57  69                 	db	105	;'i'
   760  00EC58  6D                 	db	109	;'m'
   761  00EC59  65                 	db	101	;'e'
   762  00EC5A  20                 	db	32
   763  00EC5B  73                 	db	115	;'s'
   764  00EC5C  69                 	db	105	;'i'
   765  00EC5D  6E                 	db	110	;'n'
   766  00EC5E  63                 	db	99	;'c'
   767  00EC5F  65                 	db	101	;'e'
   768  00EC60  20                 	db	32
   769  00EC61  6C                 	db	108	;'l'
   770  00EC62  61                 	db	97	;'a'
   771  00EC63  73                 	db	115	;'s'
   772  00EC64  74                 	db	116	;'t'
   773  00EC65  20                 	db	32
   774  00EC66  64                 	db	100	;'d'
   775  00EC67  65                 	db	101	;'e'
   776  00EC68  76                 	db	118	;'v'
   777  00EC69  69                 	db	105	;'i'
   778  00EC6A  63                 	db	99	;'c'
   779  00EC6B  65                 	db	101	;'e'
   780  00EC6C  20                 	db	32
   781  00EC6D  72                 	db	114	;'r'
   782  00EC6E  65                 	db	101	;'e'
   783  00EC6F  73                 	db	115	;'s'
   784  00EC70  65                 	db	101	;'e'
   785  00EC71  74                 	db	116	;'t'
   786  00EC72  0A                 	db	10
   787  00EC73  0D                 	db	13
   788  00EC74  20                 	db	32
   789  00EC75  20                 	db	32
   790  00EC76  20                 	db	32
   791  00EC77  44                 	db	68	;'D'
   792  00EC78  65                 	db	101	;'e'
   793  00EC79  76                 	db	118	;'v'
   794  00EC7A  69                 	db	105	;'i'
   795  00EC7B  63                 	db	99	;'c'
   796  00EC7C  65                 	db	101	;'e'
   797  00EC7D  20                 	db	32
   798  00EC7E  49                 	db	73	;'I'
   799  00EC7F  44                 	db	68	;'D'
   800  00EC80  3F                 	db	63	;'?'
   801  00EC81  3A                 	db	58	;':'
   802  00EC82  20                 	db	32
   803  00EC83  52                 	db	82	;'R'
   804  00EC84  65                 	db	101	;'e'
   805  00EC85  74                 	db	116	;'t'
   806  00EC86  75                 	db	117	;'u'
   807  00EC87  72                 	db	114	;'r'
   808  00EC88  6E                 	db	110	;'n'
   809  00EC89  73                 	db	115	;'s'
   810  00EC8A  20                 	db	32
   811  00EC8B  64                 	db	100	;'d'
   812  00EC8C  65                 	db	101	;'e'
   813  00EC8D  76                 	db	118	;'v'
   814  00EC8E  69                 	db	105	;'i'
   815  00EC8F  63                 	db	99	;'c'
   816  00EC90  65                 	db	101	;'e'
   817  00EC91  20                 	db	32
   818  00EC92  49                 	db	73	;'I'
   819  00EC93  44                 	db	68	;'D'
   820  00EC94  20                 	db	32
   821  00EC95  61                 	db	97	;'a'
   822  00EC96  73                 	db	115	;'s'
   823  00EC97  20                 	db	32
   824  00EC98  70                 	db	112	;'p'
   825  00EC99  72                 	db	114	;'r'
   826  00EC9A  65                 	db	101	;'e'
   827  00EC9B  2D                 	db	45
   828  00EC9C  70                 	db	112	;'p'
   829  00EC9D  72                 	db	114	;'r'
   830  00EC9E  6F                 	db	111	;'o'
   831  00EC9F  67                 	db	103	;'g'
   832  00ECA0  72                 	db	114	;'r'
   833  00ECA1  61                 	db	97	;'a'
   834  00ECA2  6D                 	db	109	;'m'
   835  00ECA3  6D                 	db	109	;'m'
   836  00ECA4  65                 	db	101	;'e'
   837  00ECA5  64                 	db	100	;'d'
   838  00ECA6  20                 	db	32
   839  00ECA7  69                 	db	105	;'i'
   840  00ECA8  6E                 	db	110	;'n'
   841  00ECA9  20                 	db	32
   842  00ECAA  66                 	db	102	;'f'
   843  00ECAB  6C                 	db	108	;'l'
   844  00ECAC  61                 	db	97	;'a'
   845  00ECAD  73                 	db	115	;'s'
   846  00ECAE  68                 	db	104	;'h'
   847  00ECAF  20                 	db	32
   848  00ECB0  6D                 	db	109	;'m'
   849  00ECB1  65                 	db	101	;'e'
   850  00ECB2  6D                 	db	109	;'m'
   851  00ECB3  6F                 	db	111	;'o'
   852  00ECB4  72                 	db	114	;'r'
   853  00ECB5  79                 	db	121	;'y'
   854  00ECB6  0A                 	db	10
   855  00ECB7  0D                 	db	13
   856  00ECB8  20                 	db	32
   857  00ECB9  20                 	db	32
   858  00ECBA  20                 	db	32
   859  00ECBB  52                 	db	82	;'R'
   860  00ECBC  65                 	db	101	;'e'
   861  00ECBD  76                 	db	118	;'v'
   862  00ECBE  69                 	db	105	;'i'
   863  00ECBF  73                 	db	115	;'s'
   864  00ECC0  69                 	db	105	;'i'
   865  00ECC1  6F                 	db	111	;'o'
   866  00ECC2  6E                 	db	110	;'n'
   867  00ECC3  20                 	db	32
   868  00ECC4  49                 	db	73	;'I'
   869  00ECC5  44                 	db	68	;'D'
   870  00ECC6  3F                 	db	63	;'?'
   871  00ECC7  3A                 	db	58	;':'
   872  00ECC8  20                 	db	32
   873  00ECC9  52                 	db	82	;'R'
   874  00ECCA  65                 	db	101	;'e'
   875  00ECCB  74                 	db	116	;'t'
   876  00ECCC  75                 	db	117	;'u'
   877  00ECCD  72                 	db	114	;'r'
   878  00ECCE  6E                 	db	110	;'n'
   879  00ECCF  73                 	db	115	;'s'
   880  00ECD0  20                 	db	32
   881  00ECD1  64                 	db	100	;'d'
   882  00ECD2  65                 	db	101	;'e'
   883  00ECD3  76                 	db	118	;'v'
   884  00ECD4  69                 	db	105	;'i'
   885  00ECD5  63                 	db	99	;'c'
   886  00ECD6  65                 	db	101	;'e'
   887  00ECD7  20                 	db	32
   888  00ECD8  73                 	db	115	;'s'
   889  00ECD9  69                 	db	105	;'i'
   890  00ECDA  6C                 	db	108	;'l'
   891  00ECDB  69                 	db	105	;'i'
   892  00ECDC  63                 	db	99	;'c'
   893  00ECDD  6F                 	db	111	;'o'
   894  00ECDE  6E                 	db	110	;'n'
   895  00ECDF  20                 	db	32
   896  00ECE0  72                 	db	114	;'r'
   897  00ECE1  65                 	db	101	;'e'
   898  00ECE2  76                 	db	118	;'v'
   899  00ECE3  69                 	db	105	;'i'
   900  00ECE4  73                 	db	115	;'s'
   901  00ECE5  69                 	db	105	;'i'
   902  00ECE6  6F                 	db	111	;'o'
   903  00ECE7  6E                 	db	110	;'n'
   904  00ECE8  20                 	db	32
   905  00ECE9  49                 	db	73	;'I'
   906  00ECEA  44                 	db	68	;'D'
   907  00ECEB  20                 	db	32
   908  00ECEC  61                 	db	97	;'a'
   909  00ECED  73                 	db	115	;'s'
   910  00ECEE  20                 	db	32
   911  00ECEF  70                 	db	112	;'p'
   912  00ECF0  72                 	db	114	;'r'
   913  00ECF1  65                 	db	101	;'e'
   914  00ECF2  2D                 	db	45
   915  00ECF3  70                 	db	112	;'p'
   916  00ECF4  72                 	db	114	;'r'
   917  00ECF5  6F                 	db	111	;'o'
   918  00ECF6  67                 	db	103	;'g'
   919  00ECF7  72                 	db	114	;'r'
   920  00ECF8  61                 	db	97	;'a'
   921  00ECF9  6D                 	db	109	;'m'
   922  00ECFA  6D                 	db	109	;'m'
   923  00ECFB  65                 	db	101	;'e'
   924  00ECFC  64                 	db	100	;'d'
   925  00ECFD  20                 	db	32
   926  00ECFE  69                 	db	105	;'i'
   927  00ECFF  6E                 	db	110	;'n'
   928  00ED00  20                 	db	32
   929  00ED01  66                 	db	102	;'f'
   930  00ED02  6C                 	db	108	;'l'
   931  00ED03  61                 	db	97	;'a'
   932  00ED04  73                 	db	115	;'s'
   933  00ED05  68                 	db	104	;'h'
   934  00ED06  20                 	db	32
   935  00ED07  6D                 	db	109	;'m'
   936  00ED08  65                 	db	101	;'e'
   937  00ED09  6D                 	db	109	;'m'
   938  00ED0A  6F                 	db	111	;'o'
   939  00ED0B  72                 	db	114	;'r'
   940  00ED0C  79                 	db	121	;'y'
   941  00ED0D  0A                 	db	10
   942  00ED0E  0D                 	db	13
   943  00ED0F  20                 	db	32
   944  00ED10  20                 	db	32
   945  00ED11  20                 	db	32
   946  00ED12  55                 	db	85	;'U'
   947  00ED13  73                 	db	115	;'s'
   948  00ED14  65                 	db	101	;'e'
   949  00ED15  72                 	db	114	;'r'
   950  00ED16  20                 	db	32
   951  00ED17  49                 	db	73	;'I'
   952  00ED18  44                 	db	68	;'D'
   953  00ED19  73                 	db	115	;'s'
   954  00ED1A  3F                 	db	63	;'?'
   955  00ED1B  3A                 	db	58	;':'
   956  00ED1C  20                 	db	32
   957  00ED1D  52                 	db	82	;'R'
   958  00ED1E  65                 	db	101	;'e'
   959  00ED1F  74                 	db	116	;'t'
   960  00ED20  75                 	db	117	;'u'
   961  00ED21  72                 	db	114	;'r'
   962  00ED22  6E                 	db	110	;'n'
   963  00ED23  73                 	db	115	;'s'
   964  00ED24  20                 	db	32
   965  00ED25  61                 	db	97	;'a'
   966  00ED26  20                 	db	32
   967  00ED27  6C                 	db	108	;'l'
   968  00ED28  69                 	db	105	;'i'
   969  00ED29  73                 	db	115	;'s'
   970  00ED2A  74                 	db	116	;'t'
   971  00ED2B  20                 	db	32
   972  00ED2C  6F                 	db	111	;'o'
   973  00ED2D  66                 	db	102	;'f'
   974  00ED2E  20                 	db	32
   975  00ED2F  75                 	db	117	;'u'
   976  00ED30  73                 	db	115	;'s'
   977  00ED31  65                 	db	101	;'e'
   978  00ED32  72                 	db	114	;'r'
   979  00ED33  20                 	db	32
   980  00ED34  49                 	db	73	;'I'
   981  00ED35  44                 	db	68	;'D'
   982  00ED36  73                 	db	115	;'s'
   983  00ED37  20                 	db	32
   984  00ED38  28                 	db	40
   985  00ED39  64                 	db	100	;'d'
   986  00ED3A  69                 	db	105	;'i'
   987  00ED3B  73                 	db	115	;'s'
   988  00ED3C  70                 	db	112	;'p'
   989  00ED3D  6C                 	db	108	;'l'
   990  00ED3E  61                 	db	97	;'a'
   991  00ED3F  79                 	db	121	;'y'
   992  00ED40  65                 	db	101	;'e'
   993  00ED41  64                 	db	100	;'d'
   994  00ED42  20                 	db	32
   995  00ED43  69                 	db	105	;'i'
   996  00ED44  6E                 	db	110	;'n'
   997  00ED45  20                 	db	32
   998  00ED46  68                 	db	104	;'h'
   999  00ED47  65                 	db	101	;'e'
  1000  00ED48  78                 	db	120	;'x'
  1001  00ED49  29                 	db	41
  1002  00ED4A  20                 	db	32
  1003  00ED4B  61                 	db	97	;'a'
  1004  00ED4C  73                 	db	115	;'s'
  1005  00ED4D  20                 	db	32
  1006  00ED4E  73                 	db	115	;'s'
  1007  00ED4F  74                 	db	116	;'t'
  1008  00ED50  6F                 	db	111	;'o'
  1009  00ED51  72                 	db	114	;'r'
  1010  00ED52  65                 	db	101	;'e'
  1011  00ED53  64                 	db	100	;'d'
  1012  00ED54  20                 	db	32
  1013  00ED55  69                 	db	105	;'i'
  1014  00ED56  6E                 	db	110	;'n'
  1015  00ED57  20                 	db	32
  1016  00ED58  66                 	db	102	;'f'
  1017  00ED59  6C                 	db	108	;'l'
  1018  00ED5A  61                 	db	97	;'a'
  1019  00ED5B  73                 	db	115	;'s'
  1020  00ED5C  68                 	db	104	;'h'
  1021  00ED5D  20                 	db	32
  1022  00ED5E  6D                 	db	109	;'m'
  1023  00ED5F  65                 	db	101	;'e'
  1024  00ED60  6D                 	db	109	;'m'
  1025  00ED61  6F                 	db	111	;'o'
  1026  00ED62  72                 	db	114	;'r'
  1027  00ED63  79                 	db	121	;'y'
  1028  00ED64  0A                 	db	10
  1029  00ED65  0D                 	db	13
  1030  00ED66  20                 	db	32
  1031  00ED67  20                 	db	32
  1032  00ED68  20                 	db	32
  1033  00ED69  41                 	db	65	;'A'
  1034  00ED6A  44                 	db	68	;'D'
  1035  00ED6B  43                 	db	67	;'C'
  1036  00ED6C  20                 	db	32
  1037  00ED6D  45                 	db	69	;'E'
  1038  00ED6E  72                 	db	114	;'r'
  1039  00ED6F  72                 	db	114	;'r'
  1040  00ED70  6F                 	db	111	;'o'
  1041  00ED71  72                 	db	114	;'r'
  1042  00ED72  3F                 	db	63	;'?'
  1043  00ED73  3A                 	db	58	;':'
  1044  00ED74  20                 	db	32
  1045  00ED75  52                 	db	82	;'R'
  1046  00ED76  65                 	db	101	;'e'
  1047  00ED77  74                 	db	116	;'t'
  1048  00ED78  75                 	db	117	;'u'
  1049  00ED79  72                 	db	114	;'r'
  1050  00ED7A  6E                 	db	110	;'n'
  1051  00ED7B  73                 	db	115	;'s'
  1052  00ED7C  20                 	db	32
  1053  00ED7D  74                 	db	116	;'t'
  1054  00ED7E  68                 	db	104	;'h'
  1055  00ED7F  65                 	db	101	;'e'
  1056  00ED80  20                 	db	32
  1057  00ED81  63                 	db	99	;'c'
  1058  00ED82  61                 	db	97	;'a'
  1059  00ED83  75                 	db	117	;'u'
  1060  00ED84  73                 	db	115	;'s'
  1061  00ED85  65                 	db	101	;'e'
  1062  00ED86  20                 	db	32
  1063  00ED87  6F                 	db	111	;'o'
  1064  00ED88  66                 	db	102	;'f'
  1065  00ED89  20                 	db	32
  1066  00ED8A  61                 	db	97	;'a'
  1067  00ED8B  6E                 	db	110	;'n'
  1068  00ED8C  20                 	db	32
  1069  00ED8D  41                 	db	65	;'A'
  1070  00ED8E  44                 	db	68	;'D'
  1071  00ED8F  43                 	db	67	;'C'
  1072  00ED90  20                 	db	32
  1073  00ED91  65                 	db	101	;'e'
  1074  00ED92  72                 	db	114	;'r'
  1075  00ED93  72                 	db	114	;'r'
  1076  00ED94  6F                 	db	111	;'o'
  1077  00ED95  72                 	db	114	;'r'
  1078  00ED96  20                 	db	32
  1079  00ED97  69                 	db	105	;'i'
  1080  00ED98  66                 	db	102	;'f'
  1081  00ED99  20                 	db	32
  1082  00ED9A  61                 	db	97	;'a'
  1083  00ED9B  6E                 	db	110	;'n'
  1084  00ED9C  20                 	db	32
  1085  00ED9D  65                 	db	101	;'e'
  1086  00ED9E  72                 	db	114	;'r'
  1087  00ED9F  72                 	db	114	;'r'
  1088  00EDA0  6F                 	db	111	;'o'
  1089  00EDA1  72                 	db	114	;'r'
  1090  00EDA2  20                 	db	32
  1091  00EDA3  6F                 	db	111	;'o'
  1092  00EDA4  63                 	db	99	;'c'
  1093  00EDA5  63                 	db	99	;'c'
  1094  00EDA6  75                 	db	117	;'u'
  1095  00EDA7  72                 	db	114	;'r'
  1096  00EDA8  72                 	db	114	;'r'
  1097  00EDA9  65                 	db	101	;'e'
  1098  00EDAA  64                 	db	100	;'d'
  1099  00EDAB  0A                 	db	10
  1100  00EDAC  0D                 	db	13
  1101  00EDAD  20                 	db	32
  1102  00EDAE  20                 	db	32
  1103  00EDAF  20                 	db	32
  1104  00EDB0  43                 	db	67	;'C'
  1105  00EDB1  6C                 	db	108	;'l'
  1106  00EDB2  65                 	db	101	;'e'
  1107  00EDB3  61                 	db	97	;'a'
  1108  00EDB4  72                 	db	114	;'r'
  1109  00EDB5  20                 	db	32
  1110  00EDB6  41                 	db	65	;'A'
  1111  00EDB7  44                 	db	68	;'D'
  1112  00EDB8  43                 	db	67	;'C'
  1113  00EDB9  20                 	db	32
  1114  00EDBA  45                 	db	69	;'E'
  1115  00EDBB  72                 	db	114	;'r'
  1116  00EDBC  72                 	db	114	;'r'
  1117  00EDBD  6F                 	db	111	;'o'
  1118  00EDBE  72                 	db	114	;'r'
  1119  00EDBF  3A                 	db	58	;':'
  1120  00EDC0  20                 	db	32
  1121  00EDC1  43                 	db	67	;'C'
  1122  00EDC2  6C                 	db	108	;'l'
  1123  00EDC3  65                 	db	101	;'e'
  1124  00EDC4  61                 	db	97	;'a'
  1125  00EDC5  72                 	db	114	;'r'
  1126  00EDC6  73                 	db	115	;'s'
  1127  00EDC7  20                 	db	32
  1128  00EDC8  74                 	db	116	;'t'
  1129  00EDC9  68                 	db	104	;'h'
  1130  00EDCA  65                 	db	101	;'e'
  1131  00EDCB  20                 	db	32
  1132  00EDCC  41                 	db	65	;'A'
  1133  00EDCD  44                 	db	68	;'D'
  1134  00EDCE  43                 	db	67	;'C'
  1135  00EDCF  20                 	db	32
  1136  00EDD0  65                 	db	101	;'e'
  1137  00EDD1  72                 	db	114	;'r'
  1138  00EDD2  72                 	db	114	;'r'
  1139  00EDD3  6F                 	db	111	;'o'
  1140  00EDD4  72                 	db	114	;'r'
  1141  00EDD5  20                 	db	32
  1142  00EDD6  61                 	db	97	;'a'
  1143  00EDD7  6E                 	db	110	;'n'
  1144  00EDD8  64                 	db	100	;'d'
  1145  00EDD9  20                 	db	32
  1146  00EDDA  72                 	db	114	;'r'
  1147  00EDDB  65                 	db	101	;'e'
  1148  00EDDC  73                 	db	115	;'s'
  1149  00EDDD  75                 	db	117	;'u'
  1150  00EDDE  6D                 	db	109	;'m'
  1151  00EDDF  65                 	db	101	;'e'
  1152  00EDE0  73                 	db	115	;'s'
  1153  00EDE1  20                 	db	32
  1154  00EDE2  41                 	db	65	;'A'
  1155  00EDE3  44                 	db	68	;'D'
  1156  00EDE4  43                 	db	67	;'C'
  1157  00EDE5  20                 	db	32
  1158  00EDE6  63                 	db	99	;'c'
  1159  00EDE7  6F                 	db	111	;'o'
  1160  00EDE8  6E                 	db	110	;'n'
  1161  00EDE9  76                 	db	118	;'v'
  1162  00EDEA  65                 	db	101	;'e'
  1163  00EDEB  72                 	db	114	;'r'
  1164  00EDEC  73                 	db	115	;'s'
  1165  00EDED  69                 	db	105	;'i'
  1166  00EDEE  6F                 	db	111	;'o'
  1167  00EDEF  6E                 	db	110	;'n'
  1168  00EDF0  73                 	db	115	;'s'
  1169  00EDF1  0A                 	db	10
  1170  00EDF2  0D                 	db	13
  1171  00EDF3  20                 	db	32
  1172  00EDF4  20                 	db	32
  1173  00EDF5  20                 	db	32
  1174  00EDF6  56                 	db	86	;'V'
  1175  00EDF7  43                 	db	67	;'C'
  1176  00EDF8  43                 	db	67	;'C'
  1177  00EDF9  20                 	db	32
  1178  00EDFA  4F                 	db	79	;'O'
  1179  00EDFB  76                 	db	118	;'v'
  1180  00EDFC  65                 	db	101	;'e'
  1181  00EDFD  72                 	db	114	;'r'
  1182  00EDFE  76                 	db	118	;'v'
  1183  00EDFF  6F                 	db	111	;'o'
  1184  00EE00  6C                 	db	108	;'l'
  1185  00EE01  74                 	db	116	;'t'
  1186  00EE02  61                 	db	97	;'a'
  1187  00EE03  67                 	db	103	;'g'
  1188  00EE04  65                 	db	101	;'e'
  1189  00EE05  3F                 	db	63	;'?'
  1190  00EE06  3A                 	db	58	;':'
  1191  00EE07  20                 	db	32
  1192  00EE08  53                 	db	83	;'S'
  1193  00EE09  74                 	db	116	;'t'
  1194  00EE0A  61                 	db	97	;'a'
  1195  00EE0B  74                 	db	116	;'t'
  1196  00EE0C  65                 	db	101	;'e'
  1197  00EE0D  73                 	db	115	;'s'
  1198  00EE0E  20                 	db	32
  1199  00EE0F  69                 	db	105	;'i'
  1200  00EE10  66                 	db	102	;'f'
  1201  00EE11  20                 	db	32
  1202  00EE12  61                 	db	97	;'a'
  1203  00EE13  20                 	db	32
  1204  00EE14  56                 	db	86	;'V'
  1205  00EE15  43                 	db	67	;'C'
  1206  00EE16  43                 	db	67	;'C'
  1207  00EE17  20                 	db	32
  1208  00EE18  6F                 	db	111	;'o'
  1209  00EE19  76                 	db	118	;'v'
  1210  00EE1A  65                 	db	101	;'e'
  1211  00EE1B  72                 	db	114	;'r'
  1212  00EE1C  76                 	db	118	;'v'
  1213  00EE1D  6F                 	db	111	;'o'
  1214  00EE1E  6C                 	db	108	;'l'
  1215  00EE1F  74                 	db	116	;'t'
  1216  00EE20  61                 	db	97	;'a'
  1217  00EE21  67                 	db	103	;'g'
  1218  00EE22  65                 	db	101	;'e'
  1219  00EE23  20                 	db	32
  1220  00EE24  63                 	db	99	;'c'
  1221  00EE25  6F                 	db	111	;'o'
  1222  00EE26  6E                 	db	110	;'n'
  1223  00EE27  64                 	db	100	;'d'
  1224  00EE28  69                 	db	105	;'i'
  1225  00EE29  74                 	db	116	;'t'
  1226  00EE2A  69                 	db	105	;'i'
  1227  00EE2B  6F                 	db	111	;'o'
  1228  00EE2C  6E                 	db	110	;'n'
  1229  00EE2D  20                 	db	32
  1230  00EE2E  68                 	db	104	;'h'
  1231  00EE2F  61                 	db	97	;'a'
  1232  00EE30  73                 	db	115	;'s'
  1233  00EE31  20                 	db	32
  1234  00EE32  6F                 	db	111	;'o'
  1235  00EE33  63                 	db	99	;'c'
  1236  00EE34  63                 	db	99	;'c'
  1237  00EE35  75                 	db	117	;'u'
  1238  00EE36  72                 	db	114	;'r'
  1239  00EE37  72                 	db	114	;'r'
  1240  00EE38  65                 	db	101	;'e'
  1241  00EE39  64                 	db	100	;'d'
  1242  00EE3A  20                 	db	32
  1243  00EE3B  6F                 	db	111	;'o'
  1244  00EE3C  72                 	db	114	;'r'
  1245  00EE3D  20                 	db	32
  1246  00EE3E  6E                 	db	110	;'n'
  1247  00EE3F  6F                 	db	111	;'o'
  1248  00EE40  74                 	db	116	;'t'
  1249  00EE41  0A                 	db	10
  1250  00EE42  0D                 	db	13
  1251  00EE43  20                 	db	32
  1252  00EE44  20                 	db	32
  1253  00EE45  20                 	db	32
  1254  00EE46  48                 	db	72	;'H'
  1255  00EE47  65                 	db	101	;'e'
  1256  00EE48  6C                 	db	108	;'l'
  1257  00EE49  70                 	db	112	;'p'
  1258  00EE4A  3A                 	db	58	;':'
  1259  00EE4B  20                 	db	32
  1260  00EE4C  54                 	db	84	;'T'
  1261  00EE4D  68                 	db	104	;'h'
  1262  00EE4E  69                 	db	105	;'i'
  1263  00EE4F  73                 	db	115	;'s'
  1264  00EE50  20                 	db	32
  1265  00EE51  6D                 	db	109	;'m'
  1266  00EE52  65                 	db	101	;'e'
  1267  00EE53  73                 	db	115	;'s'
  1268  00EE54  73                 	db	115	;'s'
  1269  00EE55  61                 	db	97	;'a'
  1270  00EE56  67                 	db	103	;'g'
  1271  00EE57  65                 	db	101	;'e'
  1272  00EE58  2C                 	db	44
  1273  00EE59  20                 	db	32
  1274  00EE5A  6C                 	db	108	;'l'
  1275  00EE5B  69                 	db	105	;'i'
  1276  00EE5C  73                 	db	115	;'s'
  1277  00EE5D  74                 	db	116	;'t'
  1278  00EE5E  73                 	db	115	;'s'
  1279  00EE5F  20                 	db	32
  1280  00EE60  73                 	db	115	;'s'
  1281  00EE61  75                 	db	117	;'u'
  1282  00EE62  70                 	db	112	;'p'
  1283  00EE63  70                 	db	112	;'p'
  1284  00EE64  6F                 	db	111	;'o'
  1285  00EE65  72                 	db	114	;'r'
  1286  00EE66  74                 	db	116	;'t'
  1287  00EE67  65                 	db	101	;'e'
  1288  00EE68  64                 	db	100	;'d'
  1289  00EE69  20                 	db	32
  1290  00EE6A  63                 	db	99	;'c'
  1291  00EE6B  6F                 	db	111	;'o'
  1292  00EE6C  6D                 	db	109	;'m'
  1293  00EE6D  6D                 	db	109	;'m'
  1294  00EE6E  61                 	db	97	;'a'
  1295  00EE6F  6E                 	db	110	;'n'
  1296  00EE70  64                 	db	100	;'d'
  1297  00EE71  73                 	db	115	;'s'
  1298  00EE72  0A                 	db	10
  1299  00EE73  0D                 	db	13
  1300  00EE74  44                 	db	68	;'D'
  1301  00EE75  65                 	db	101	;'e'
  1302  00EE76  76                 	db	118	;'v'
  1303  00EE77  69                 	db	105	;'i'
  1304  00EE78  63                 	db	99	;'c'
  1305  00EE79  65                 	db	101	;'e'
  1306  00EE7A  20                 	db	32
  1307  00EE7B  4D                 	db	77	;'M'
  1308  00EE7C  65                 	db	101	;'e'
  1309  00EE7D  61                 	db	97	;'a'
  1310  00EE7E  73                 	db	115	;'s'
  1311  00EE7F  75                 	db	117	;'u'
  1312  00EE80  72                 	db	114	;'r'
  1313  00EE81  65                 	db	101	;'e'
  1314  00EE82  6D                 	db	109	;'m'
  1315  00EE83  65                 	db	101	;'e'
  1316  00EE84  6E                 	db	110	;'n'
  1317  00EE85  74                 	db	116	;'t'
  1318  00EE86  20                 	db	32
  1319  00EE87  43                 	db	67	;'C'
  1320  00EE88  6F                 	db	111	;'o'
  1321  00EE89  6D                 	db	109	;'m'
  1322  00EE8A  6D                 	db	109	;'m'
  1323  00EE8B  61                 	db	97	;'a'
  1324  00EE8C  6E                 	db	110	;'n'
  1325  00EE8D  64                 	db	100	;'d'
  1326  00EE8E  73                 	db	115	;'s'
  1327  00EE8F  3A                 	db	58	;':'
  1328  00EE90  0A                 	db	10
  1329  00EE91  0D                 	db	13
  1330  00EE92  20                 	db	32
  1331  00EE93  20                 	db	32
  1332  00EE94  20                 	db	32
  1333  00EE95  4D                 	db	77	;'M'
  1334  00EE96  65                 	db	101	;'e'
  1335  00EE97  61                 	db	97	;'a'
  1336  00EE98  73                 	db	115	;'s'
  1337  00EE99  75                 	db	117	;'u'
  1338  00EE9A  72                 	db	114	;'r'
  1339  00EE9B  65                 	db	101	;'e'
  1340  00EE9C  20                 	db	32
  1341  00EE9D  50                 	db	80	;'P'
  1342  00EE9E  4F                 	db	79	;'O'
  1343  00EE9F  53                 	db	83	;'S'
  1344  00EEA0  33                 	db	51	;'3'
  1345  00EEA1  50                 	db	80	;'P'
  1346  00EEA2  33                 	db	51	;'3'
  1347  00EEA3  3F                 	db	63	;'?'
  1348  00EEA4  3A                 	db	58	;':'
  1349  00EEA5  20                 	db	32
  1350  00EEA6  52                 	db	82	;'R'
  1351  00EEA7  65                 	db	101	;'e'
  1352  00EEA8  74                 	db	116	;'t'
  1353  00EEA9  75                 	db	117	;'u'
  1354  00EEAA  72                 	db	114	;'r'
  1355  00EEAB  6E                 	db	110	;'n'
  1356  00EEAC  73                 	db	115	;'s'
  1357  00EEAD  20                 	db	32
  1358  00EEAE  2B                 	db	43
  1359  00EEAF  33                 	db	51	;'3'
  1360  00EEB0  2E                 	db	46
  1361  00EEB1  33                 	db	51	;'3'
  1362  00EEB2  56                 	db	86	;'V'
  1363  00EEB3  20                 	db	32
  1364  00EEB4  41                 	db	65	;'A'
  1365  00EEB5  44                 	db	68	;'D'
  1366  00EEB6  43                 	db	67	;'C'
  1367  00EEB7  20                 	db	32
  1368  00EEB8  43                 	db	67	;'C'
  1369  00EEB9  6F                 	db	111	;'o'
  1370  00EEBA  6E                 	db	110	;'n'
  1371  00EEBB  76                 	db	118	;'v'
  1372  00EEBC  65                 	db	101	;'e'
  1373  00EEBD  72                 	db	114	;'r'
  1374  00EEBE  73                 	db	115	;'s'
  1375  00EEBF  69                 	db	105	;'i'
  1376  00EEC0  6F                 	db	111	;'o'
  1377  00EEC1  6E                 	db	110	;'n'
  1378  00EEC2  20                 	db	32
  1379  00EEC3  69                 	db	105	;'i'
  1380  00EEC4  6E                 	db	110	;'n'
  1381  00EEC5  20                 	db	32
  1382  00EEC6  76                 	db	118	;'v'
  1383  00EEC7  6F                 	db	111	;'o'
  1384  00EEC8  6C                 	db	108	;'l'
  1385  00EEC9  74                 	db	116	;'t'
  1386  00EECA  73                 	db	115	;'s'
  1387  00EECB  0A                 	db	10
  1388  00EECC  0D                 	db	13
  1389  00EECD  20                 	db	32
  1390  00EECE  20                 	db	32
  1391  00EECF  20                 	db	32
  1392  00EED0  4D                 	db	77	;'M'
  1393  00EED1  65                 	db	101	;'e'
  1394  00EED2  61                 	db	97	;'a'
  1395  00EED3  73                 	db	115	;'s'
  1396  00EED4  75                 	db	117	;'u'
  1397  00EED5  72                 	db	114	;'r'
  1398  00EED6  65                 	db	101	;'e'
  1399  00EED7  20                 	db	32
  1400  00EED8  50                 	db	80	;'P'
  1401  00EED9  4F                 	db	79	;'O'
  1402  00EEDA  53                 	db	83	;'S'
  1403  00EEDB  31                 	db	49	;'1'
  1404  00EEDC  32                 	db	50	;'2'
  1405  00EEDD  3F                 	db	63	;'?'
  1406  00EEDE  3A                 	db	58	;':'
  1407  00EEDF  20                 	db	32
  1408  00EEE0  52                 	db	82	;'R'
  1409  00EEE1  65                 	db	101	;'e'
  1410  00EEE2  74                 	db	116	;'t'
  1411  00EEE3  75                 	db	117	;'u'
  1412  00EEE4  72                 	db	114	;'r'
  1413  00EEE5  6E                 	db	110	;'n'
  1414  00EEE6  73                 	db	115	;'s'
  1415  00EEE7  20                 	db	32
  1416  00EEE8  2B                 	db	43
  1417  00EEE9  31                 	db	49	;'1'
  1418  00EEEA  32                 	db	50	;'2'
  1419  00EEEB  56                 	db	86	;'V'
  1420  00EEEC  20                 	db	32
  1421  00EEED  41                 	db	65	;'A'
  1422  00EEEE  44                 	db	68	;'D'
  1423  00EEEF  43                 	db	67	;'C'
  1424  00EEF0  20                 	db	32
  1425  00EEF1  43                 	db	67	;'C'
  1426  00EEF2  6F                 	db	111	;'o'
  1427  00EEF3  6E                 	db	110	;'n'
  1428  00EEF4  76                 	db	118	;'v'
  1429  00EEF5  65                 	db	101	;'e'
  1430  00EEF6  72                 	db	114	;'r'
  1431  00EEF7  73                 	db	115	;'s'
  1432  00EEF8  69                 	db	105	;'i'
  1433  00EEF9  6F                 	db	111	;'o'
  1434  00EEFA  6E                 	db	110	;'n'
  1435  00EEFB  20                 	db	32
  1436  00EEFC  69                 	db	105	;'i'
  1437  00EEFD  6E                 	db	110	;'n'
  1438  00EEFE  20                 	db	32
  1439  00EEFF  76                 	db	118	;'v'
  1440  00EF00  6F                 	db	111	;'o'
  1441  00EF01  6C                 	db	108	;'l'
  1442  00EF02  74                 	db	116	;'t'
  1443  00EF03  73                 	db	115	;'s'
  1444  00EF04  0A                 	db	10
  1445  00EF05  0D                 	db	13
  1446  00EF06  20                 	db	32
  1447  00EF07  20                 	db	32
  1448  00EF08  20                 	db	32
  1449  00EF09  4D                 	db	77	;'M'
  1450  00EF0A  65                 	db	101	;'e'
  1451  00EF0B  61                 	db	97	;'a'
  1452  00EF0C  73                 	db	115	;'s'
  1453  00EF0D  75                 	db	117	;'u'
  1454  00EF0E  72                 	db	114	;'r'
  1455  00EF0F  65                 	db	101	;'e'
  1456  00EF10  20                 	db	32
  1457  00EF11  44                 	db	68	;'D'
  1458  00EF12  69                 	db	105	;'i'
  1459  00EF13  65                 	db	101	;'e'
  1460  00EF14  20                 	db	32
  1461  00EF15  54                 	db	84	;'T'
  1462  00EF16  65                 	db	101	;'e'
  1463  00EF17  6D                 	db	109	;'m'
  1464  00EF18  70                 	db	112	;'p'
  1465  00EF19  3F                 	db	63	;'?'
  1466  00EF1A  3A                 	db	58	;':'
  1467  00EF1B  20                 	db	32
  1468  00EF1C  52                 	db	82	;'R'
  1469  00EF1D  65                 	db	101	;'e'
  1470  00EF1E  74                 	db	116	;'t'
  1471  00EF1F  75                 	db	117	;'u'
  1472  00EF20  72                 	db	114	;'r'
  1473  00EF21  6E                 	db	110	;'n'
  1474  00EF22  73                 	db	115	;'s'
  1475  00EF23  20                 	db	32
  1476  00EF24  74                 	db	116	;'t'
  1477  00EF25  68                 	db	104	;'h'
  1478  00EF26  65                 	db	101	;'e'
  1479  00EF27  20                 	db	32
  1480  00EF28  6D                 	db	109	;'m'
  1481  00EF29  69                 	db	105	;'i'
  1482  00EF2A  63                 	db	99	;'c'
  1483  00EF2B  72                 	db	114	;'r'
  1484  00EF2C  6F                 	db	111	;'o'
  1485  00EF2D  63                 	db	99	;'c'
  1486  00EF2E  6F                 	db	111	;'o'
  1487  00EF2F  6E                 	db	110	;'n'
  1488  00EF30  74                 	db	116	;'t'
  1489  00EF31  72                 	db	114	;'r'
  1490  00EF32  6F                 	db	111	;'o'
  1491  00EF33  6C                 	db	108	;'l'
  1492  00EF34  6C                 	db	108	;'l'
  1493  00EF35  65                 	db	101	;'e'
  1494  00EF36  72                 	db	114	;'r'
  1495  00EF37  20                 	db	32
  1496  00EF38  64                 	db	100	;'d'
  1497  00EF39  69                 	db	105	;'i'
  1498  00EF3A  65                 	db	101	;'e'
  1499  00EF3B  20                 	db	32
  1500  00EF3C  74                 	db	116	;'t'
  1501  00EF3D  65                 	db	101	;'e'
  1502  00EF3E  6D                 	db	109	;'m'
  1503  00EF3F  70                 	db	112	;'p'
  1504  00EF40  65                 	db	101	;'e'
  1505  00EF41  72                 	db	114	;'r'
  1506  00EF42  61                 	db	97	;'a'
  1507  00EF43  74                 	db	116	;'t'
  1508  00EF44  75                 	db	117	;'u'
  1509  00EF45  72                 	db	114	;'r'
  1510  00EF46  65                 	db	101	;'e'
  1511  00EF47  20                 	db	32
  1512  00EF48  69                 	db	105	;'i'
  1513  00EF49  6E                 	db	110	;'n'
  1514  00EF4A  20                 	db	32
  1515  00EF4B  64                 	db	100	;'d'
  1516  00EF4C  65                 	db	101	;'e'
  1517  00EF4D  67                 	db	103	;'g'
  1518  00EF4E  72                 	db	114	;'r'
  1519  00EF4F  65                 	db	101	;'e'
  1520  00EF50  65                 	db	101	;'e'
  1521  00EF51  73                 	db	115	;'s'
  1522  00EF52  20                 	db	32
  1523  00EF53  43                 	db	67	;'C'
  1524  00EF54  0A                 	db	10
  1525  00EF55  0D                 	db	13
  1526  00EF56  20                 	db	32
  1527  00EF57  20                 	db	32
  1528  00EF58  20                 	db	32
  1529  00EF59  4D                 	db	77	;'M'
  1530  00EF5A  65                 	db	101	;'e'
  1531  00EF5B  61                 	db	97	;'a'
  1532  00EF5C  73                 	db	115	;'s'
  1533  00EF5D  75                 	db	117	;'u'
  1534  00EF5E  72                 	db	114	;'r'
  1535  00EF5F  65                 	db	101	;'e'
  1536  00EF60  20                 	db	32
  1537  00EF61  46                 	db	70	;'F'
  1538  00EF62  56                 	db	86	;'V'
  1539  00EF63  52                 	db	82	;'R'
  1540  00EF64  3F                 	db	63	;'?'
  1541  00EF65  3A                 	db	58	;':'
  1542  00EF66  20                 	db	32
  1543  00EF67  52                 	db	82	;'R'
  1544  00EF68  65                 	db	101	;'e'
  1545  00EF69  74                 	db	116	;'t'
  1546  00EF6A  75                 	db	117	;'u'
  1547  00EF6B  72                 	db	114	;'r'
  1548  00EF6C  6E                 	db	110	;'n'
  1549  00EF6D  73                 	db	115	;'s'
  1550  00EF6E  20                 	db	32
  1551  00EF6F  74                 	db	116	;'t'
  1552  00EF70  68                 	db	104	;'h'
  1553  00EF71  65                 	db	101	;'e'
  1554  00EF72  20                 	db	32
  1555  00EF73  69                 	db	105	;'i'
  1556  00EF74  6E                 	db	110	;'n'
  1557  00EF75  74                 	db	116	;'t'
  1558  00EF76  65                 	db	101	;'e'
  1559  00EF77  72                 	db	114	;'r'
  1560  00EF78  6E                 	db	110	;'n'
  1561  00EF79  61                 	db	97	;'a'
  1562  00EF7A  6C                 	db	108	;'l'
  1563  00EF7B  20                 	db	32
  1564  00EF7C  66                 	db	102	;'f'
  1565  00EF7D  69                 	db	105	;'i'
  1566  00EF7E  78                 	db	120	;'x'
  1567  00EF7F  65                 	db	101	;'e'
  1568  00EF80  64                 	db	100	;'d'
  1569  00EF81  20                 	db	32
  1570  00EF82  76                 	db	118	;'v'
  1571  00EF83  6F                 	db	111	;'o'
  1572  00EF84  6C                 	db	108	;'l'
  1573  00EF85  74                 	db	116	;'t'
  1574  00EF86  61                 	db	97	;'a'
  1575  00EF87  67                 	db	103	;'g'
  1576  00EF88  65                 	db	101	;'e'
  1577  00EF89  20                 	db	32
  1578  00EF8A  72                 	db	114	;'r'
  1579  00EF8B  65                 	db	101	;'e'
  1580  00EF8C  66                 	db	102	;'f'
  1581  00EF8D  65                 	db	101	;'e'
  1582  00EF8E  72                 	db	114	;'r'
  1583  00EF8F  65                 	db	101	;'e'
  1584  00EF90  6E                 	db	110	;'n'
  1585  00EF91  63                 	db	99	;'c'
  1586  00EF92  65                 	db	101	;'e'
  1587  00EF93  20                 	db	32
  1588  00EF94  62                 	db	98	;'b'
  1589  00EF95  75                 	db	117	;'u'
  1590  00EF96  66                 	db	102	;'f'
  1591  00EF97  66                 	db	102	;'f'
  1592  00EF98  65                 	db	101	;'e'
  1593  00EF99  72                 	db	114	;'r'
  1594  00EF9A  20                 	db	32
  1595  00EF9B  31                 	db	49	;'1'
  1596  00EF9C  20                 	db	32
  1597  00EF9D  6F                 	db	111	;'o'
  1598  00EF9E  75                 	db	117	;'u'
  1599  00EF9F  74                 	db	116	;'t'
  1600  00EFA0  70                 	db	112	;'p'
  1601  00EFA1  75                 	db	117	;'u'
  1602  00EFA2  74                 	db	116	;'t'
  1603  00EFA3  20                 	db	32
  1604  00EFA4  69                 	db	105	;'i'
  1605  00EFA5  6E                 	db	110	;'n'
  1606  00EFA6  20                 	db	32
  1607  00EFA7  76                 	db	118	;'v'
  1608  00EFA8  6F                 	db	111	;'o'
  1609  00EFA9  6C                 	db	108	;'l'
  1610  00EFAA  74                 	db	116	;'t'
  1611  00EFAB  73                 	db	115	;'s'
  1612  00EFAC  0A                 	db	10
  1613  00EFAD  0D                 	db	13
  1614  00EFAE  20                 	db	32
  1615  00EFAF  20                 	db	32
  1616  00EFB0  20                 	db	32
  1617  00EFB1  4D                 	db	77	;'M'
  1618  00EFB2  65                 	db	101	;'e'
  1619  00EFB3  61                 	db	97	;'a'
  1620  00EFB4  73                 	db	115	;'s'
  1621  00EFB5  75                 	db	117	;'u'
  1622  00EFB6  72                 	db	114	;'r'
  1623  00EFB7  65                 	db	101	;'e'
  1624  00EFB8  20                 	db	32
  1625  00EFB9  41                 	db	65	;'A'
  1626  00EFBA  56                 	db	86	;'V'
  1627  00EFBB  53                 	db	83	;'S'
  1628  00EFBC  53                 	db	83	;'S'
  1629  00EFBD  3F                 	db	63	;'?'
  1630  00EFBE  3A                 	db	58	;':'
  1631  00EFBF  20                 	db	32
  1632  00EFC0  52                 	db	82	;'R'
  1633  00EFC1  65                 	db	101	;'e'
  1634  00EFC2  74                 	db	116	;'t'
  1635  00EFC3  75                 	db	117	;'u'
  1636  00EFC4  72                 	db	114	;'r'
  1637  00EFC5  6E                 	db	110	;'n'
  1638  00EFC6  73                 	db	115	;'s'
  1639  00EFC7  20                 	db	32
  1640  00EFC8  74                 	db	116	;'t'
  1641  00EFC9  68                 	db	104	;'h'
  1642  00EFCA  65                 	db	101	;'e'
  1643  00EFCB  20                 	db	32
  1644  00EFCC  6D                 	db	109	;'m'
  1645  00EFCD  65                 	db	101	;'e'
  1646  00EFCE  61                 	db	97	;'a'
  1647  00EFCF  73                 	db	115	;'s'
  1648  00EFD0  75                 	db	117	;'u'
  1649  00EFD1  72                 	db	114	;'r'
  1650  00EFD2  65                 	db	101	;'e'
  1651  00EFD3  64                 	db	100	;'d'
  1652  00EFD4  20                 	db	32
  1653  00EFD5  76                 	db	118	;'v'
  1654  00EFD6  61                 	db	97	;'a'
  1655  00EFD7  6C                 	db	108	;'l'
  1656  00EFD8  75                 	db	117	;'u'
  1657  00EFD9  65                 	db	101	;'e'
  1658  00EFDA  20                 	db	32
  1659  00EFDB  6F                 	db	111	;'o'
  1660  00EFDC  66                 	db	102	;'f'
  1661  00EFDD  20                 	db	32
  1662  00EFDE  41                 	db	65	;'A'
  1663  00EFDF  6E                 	db	110	;'n'
  1664  00EFE0  61                 	db	97	;'a'
  1665  00EFE1  6C                 	db	108	;'l'
  1666  00EFE2  6F                 	db	111	;'o'
  1667  00EFE3  67                 	db	103	;'g'
  1668  00EFE4  20                 	db	32
  1669  00EFE5  56                 	db	86	;'V'
  1670  00EFE6  53                 	db	83	;'S'
  1671  00EFE7  53                 	db	83	;'S'
  1672  00EFE8  20                 	db	32
  1673  00EFE9  69                 	db	105	;'i'
  1674  00EFEA  6E                 	db	110	;'n'
  1675  00EFEB  20                 	db	32
  1676  00EFEC  76                 	db	118	;'v'
  1677  00EFED  6F                 	db	111	;'o'
  1678  00EFEE  6C                 	db	108	;'l'
  1679  00EFEF  74                 	db	116	;'t'
  1680  00EFF0  73                 	db	115	;'s'
  1681  00EFF1  0A                 	db	10
  1682  00EFF2  0D                 	db	13
  1683  00EFF3  50                 	db	80	;'P'
  1684  00EFF4  72                 	db	114	;'r'
  1685  00EFF5  69                 	db	105	;'i'
  1686  00EFF6  6D                 	db	109	;'m'
  1687  00EFF7  61                 	db	97	;'a'
  1688  00EFF8  72                 	db	114	;'r'
  1689  00EFF9  79                 	db	121	;'y'
  1690  00EFFA  20                 	db	32
  1691  00EFFB  4D                 	db	77	;'M'
  1692  00EFFC  65                 	db	101	;'e'
  1693  00EFFD  61                 	db	97	;'a'
  1694  00EFFE  73                 	db	115	;'s'
  1695  00EFFF  75                 	db	117	;'u'
  1696  00F000  72                 	db	114	;'r'
  1697  00F001  65                 	db	101	;'e'
  1698  00F002  6D                 	db	109	;'m'
  1699  00F003  65                 	db	101	;'e'
  1700  00F004  6E                 	db	110	;'n'
  1701  00F005  74                 	db	116	;'t'
  1702  00F006  20                 	db	32
  1703  00F007  43                 	db	67	;'C'
  1704  00F008  6F                 	db	111	;'o'
  1705  00F009  6D                 	db	109	;'m'
  1706  00F00A  6D                 	db	109	;'m'
  1707  00F00B  61                 	db	97	;'a'
  1708  00F00C  6E                 	db	110	;'n'
  1709  00F00D  64                 	db	100	;'d'
  1710  00F00E  73                 	db	115	;'s'
  1711  00F00F  3A                 	db	58	;':'
  1712  00F010  0A                 	db	10
  1713  00F011  0D                 	db	13
  1714  00F012  20                 	db	32
  1715  00F013  20                 	db	32
  1716  00F014  20                 	db	32
  1717  00F015  4D                 	db	77	;'M'
  1718  00F016  65                 	db	101	;'e'
  1719  00F017  61                 	db	97	;'a'
  1720  00F018  73                 	db	115	;'s'
  1721  00F019  75                 	db	117	;'u'
  1722  00F01A  72                 	db	114	;'r'
  1723  00F01B  65                 	db	101	;'e'
  1724  00F01C  20                 	db	32
  1725  00F01D  44                 	db	68	;'D'
  1726  00F01E  65                 	db	101	;'e'
  1727  00F01F  74                 	db	116	;'t'
  1728  00F020  65                 	db	101	;'e'
  1729  00F021  63                 	db	99	;'c'
  1730  00F022  74                 	db	116	;'t'
  1731  00F023  65                 	db	101	;'e'
  1732  00F024  64                 	db	100	;'d'
  1733  00F025  20                 	db	32
  1734  00F026  43                 	db	67	;'C'
  1735  00F027  75                 	db	117	;'u'
  1736  00F028  72                 	db	114	;'r'
  1737  00F029  72                 	db	114	;'r'
  1738  00F02A  65                 	db	101	;'e'
  1739  00F02B  6E                 	db	110	;'n'
  1740  00F02C  74                 	db	116	;'t'
  1741  00F02D  3F                 	db	63	;'?'
  1742  00F02E  3A                 	db	58	;':'
  1743  00F02F  20                 	db	32
  1744  00F030  52                 	db	82	;'R'
  1745  00F031  65                 	db	101	;'e'
  1746  00F032  74                 	db	116	;'t'
  1747  00F033  75                 	db	117	;'u'
  1748  00F034  72                 	db	114	;'r'
  1749  00F035  6E                 	db	110	;'n'
  1750  00F036  73                 	db	115	;'s'
  1751  00F037  20                 	db	32
  1752  00F038  6D                 	db	109	;'m'
  1753  00F039  65                 	db	101	;'e'
  1754  00F03A  61                 	db	97	;'a'
  1755  00F03B  73                 	db	115	;'s'
  1756  00F03C  75                 	db	117	;'u'
  1757  00F03D  72                 	db	114	;'r'
  1758  00F03E  65                 	db	101	;'e'
  1759  00F03F  64                 	db	100	;'d'
  1760  00F040  20                 	db	32
  1761  00F041  6F                 	db	111	;'o'
  1762  00F042  75                 	db	117	;'u'
  1763  00F043  74                 	db	116	;'t'
  1764  00F044  70                 	db	112	;'p'
  1765  00F045  75                 	db	117	;'u'
  1766  00F046  74                 	db	116	;'t'
  1767  00F047  20                 	db	32
  1768  00F048  63                 	db	99	;'c'
  1769  00F049  75                 	db	117	;'u'
  1770  00F04A  72                 	db	114	;'r'
  1771  00F04B  72                 	db	114	;'r'
  1772  00F04C  65                 	db	101	;'e'
  1773  00F04D  6E                 	db	110	;'n'
  1774  00F04E  74                 	db	116	;'t'
  1775  00F04F  20                 	db	32
  1776  00F050  69                 	db	105	;'i'
  1777  00F051  6E                 	db	110	;'n'
  1778  00F052  20                 	db	32
  1779  00F053  61                 	db	97	;'a'
  1780  00F054  6D                 	db	109	;'m'
  1781  00F055  70                 	db	112	;'p'
  1782  00F056  73                 	db	115	;'s'
  1783  00F057  20                 	db	32
  1784  00F058  61                 	db	97	;'a'
  1785  00F059  73                 	db	115	;'s'
  1786  00F05A  20                 	db	32
  1787  00F05B  73                 	db	115	;'s'
  1788  00F05C  65                 	db	101	;'e'
  1789  00F05D  65                 	db	101	;'e'
  1790  00F05E  6E                 	db	110	;'n'
  1791  00F05F  20                 	db	32
  1792  00F060  62                 	db	98	;'b'
  1793  00F061  79                 	db	121	;'y'
  1794  00F062  20                 	db	32
  1795  00F063  41                 	db	65	;'A'
  1796  00F064  44                 	db	68	;'D'
  1797  00F065  43                 	db	67	;'C'
  1798  00F066  0A                 	db	10
  1799  00F067  0D                 	db	13
  1800  00F068  20                 	db	32
  1801  00F069  20                 	db	32
  1802  00F06A  20                 	db	32
  1803  00F06B  4D                 	db	77	;'M'
  1804  00F06C  65                 	db	101	;'e'
  1805  00F06D  61                 	db	97	;'a'
  1806  00F06E  73                 	db	115	;'s'
  1807  00F06F  75                 	db	117	;'u'
  1808  00F070  72                 	db	114	;'r'
  1809  00F071  65                 	db	101	;'e'
  1810  00F072  20                 	db	32
  1811  00F073  52                 	db	82	;'R'
  1812  00F074  4D                 	db	77	;'M'
  1813  00F075  53                 	db	83	;'S'
  1814  00F076  20                 	db	32
  1815  00F077  43                 	db	67	;'C'
  1816  00F078  75                 	db	117	;'u'
  1817  00F079  72                 	db	114	;'r'
  1818  00F07A  72                 	db	114	;'r'
  1819  00F07B  65                 	db	101	;'e'
  1820  00F07C  6E                 	db	110	;'n'
  1821  00F07D  74                 	db	116	;'t'
  1822  00F07E  3F                 	db	63	;'?'
  1823  00F07F  3A                 	db	58	;':'
  1824  00F080  20                 	db	32
  1825  00F081  52                 	db	82	;'R'
  1826  00F082  65                 	db	101	;'e'
  1827  00F083  74                 	db	116	;'t'
  1828  00F084  75                 	db	117	;'u'
  1829  00F085  72                 	db	114	;'r'
  1830  00F086  6E                 	db	110	;'n'
  1831  00F087  73                 	db	115	;'s'
  1832  00F088  20                 	db	32
  1833  00F089  74                 	db	116	;'t'
  1834  00F08A  68                 	db	104	;'h'
  1835  00F08B  65                 	db	101	;'e'
  1836  00F08C  20                 	db	32
  1837  00F08D  63                 	db	99	;'c'
  1838  00F08E  61                 	db	97	;'a'
  1839  00F08F  6C                 	db	108	;'l'
  1840  00F090  63                 	db	99	;'c'
  1841  00F091  75                 	db	117	;'u'
  1842  00F092  6C                 	db	108	;'l'
  1843  00F093  61                 	db	97	;'a'
  1844  00F094  74                 	db	116	;'t'
  1845  00F095  65                 	db	101	;'e'
  1846  00F096  64                 	db	100	;'d'
  1847  00F097  20                 	db	32
  1848  00F098  52                 	db	82	;'R'
  1849  00F099  4D                 	db	77	;'M'
  1850  00F09A  53                 	db	83	;'S'
  1851  00F09B  20                 	db	32
  1852  00F09C  6F                 	db	111	;'o'
  1853  00F09D  75                 	db	117	;'u'
  1854  00F09E  74                 	db	116	;'t'
  1855  00F09F  70                 	db	112	;'p'
  1856  00F0A0  75                 	db	117	;'u'
  1857  00F0A1  74                 	db	116	;'t'
  1858  00F0A2  20                 	db	32
  1859  00F0A3  63                 	db	99	;'c'
  1860  00F0A4  75                 	db	117	;'u'
  1861  00F0A5  72                 	db	114	;'r'
  1862  00F0A6  72                 	db	114	;'r'
  1863  00F0A7  65                 	db	101	;'e'
  1864  00F0A8  6E                 	db	110	;'n'
  1865  00F0A9  74                 	db	116	;'t'
  1866  00F0AA  20                 	db	32
  1867  00F0AB  66                 	db	102	;'f'
  1868  00F0AC  72                 	db	114	;'r'
  1869  00F0AD  6F                 	db	111	;'o'
  1870  00F0AE  6D                 	db	109	;'m'
  1871  00F0AF  20                 	db	32
  1872  00F0B0  6D                 	db	109	;'m'
  1873  00F0B1  65                 	db	101	;'e'
  1874  00F0B2  61                 	db	97	;'a'
  1875  00F0B3  73                 	db	115	;'s'
  1876  00F0B4  75                 	db	117	;'u'
  1877  00F0B5  72                 	db	114	;'r'
  1878  00F0B6  65                 	db	101	;'e'
  1879  00F0B7  6D                 	db	109	;'m'
  1880  00F0B8  65                 	db	101	;'e'
  1881  00F0B9  6E                 	db	110	;'n'
  1882  00F0BA  74                 	db	116	;'t'
  1883  00F0BB  73                 	db	115	;'s'
  1884  00F0BC  20                 	db	32
  1885  00F0BD  61                 	db	97	;'a'
  1886  00F0BE  6E                 	db	110	;'n'
  1887  00F0BF  64                 	db	100	;'d'
  1888  00F0C0  20                 	db	32
  1889  00F0C1  54                 	db	84	;'T'
  1890  00F0C2  52                 	db	82	;'R'
  1891  00F0C3  49                 	db	73	;'I'
  1892  00F0C4  41                 	db	65	;'A'
  1893  00F0C5  43                 	db	67	;'C'
  1894  00F0C6  20                 	db	32
  1895  00F0C7  66                 	db	102	;'f'
  1896  00F0C8  69                 	db	105	;'i'
  1897  00F0C9  72                 	db	114	;'r'
  1898  00F0CA  69                 	db	105	;'i'
  1899  00F0CB  6E                 	db	110	;'n'
  1900  00F0CC  67                 	db	103	;'g'
  1901  00F0CD  20                 	db	32
  1902  00F0CE  61                 	db	97	;'a'
  1903  00F0CF  6E                 	db	110	;'n'
  1904  00F0D0  67                 	db	103	;'g'
  1905  00F0D1  6C                 	db	108	;'l'
  1906  00F0D2  65                 	db	101	;'e'
  1907  00F0D3  0A                 	db	10
  1908  00F0D4  0D                 	db	13
  1909  00F0D5  20                 	db	32
  1910  00F0D6  20                 	db	32
  1911  00F0D7  20                 	db	32
  1912  00F0D8  4D                 	db	77	;'M'
  1913  00F0D9  65                 	db	101	;'e'
  1914  00F0DA  61                 	db	97	;'a'
  1915  00F0DB  73                 	db	115	;'s'
  1916  00F0DC  75                 	db	117	;'u'
  1917  00F0DD  72                 	db	114	;'r'
  1918  00F0DE  65                 	db	101	;'e'
  1919  00F0DF  20                 	db	32
  1920  00F0E0  52                 	db	82	;'R'
  1921  00F0E1  4D                 	db	77	;'M'
  1922  00F0E2  53                 	db	83	;'S'
  1923  00F0E3  20                 	db	32
  1924  00F0E4  56                 	db	86	;'V'
  1925  00F0E5  6F                 	db	111	;'o'
  1926  00F0E6  6C                 	db	108	;'l'
  1927  00F0E7  74                 	db	116	;'t'
  1928  00F0E8  61                 	db	97	;'a'
  1929  00F0E9  67                 	db	103	;'g'
  1930  00F0EA  65                 	db	101	;'e'
  1931  00F0EB  3F                 	db	63	;'?'
  1932  00F0EC  3A                 	db	58	;':'
  1933  00F0ED  20                 	db	32
  1934  00F0EE  52                 	db	82	;'R'
  1935  00F0EF  65                 	db	101	;'e'
  1936  00F0F0  74                 	db	116	;'t'
  1937  00F0F1  75                 	db	117	;'u'
  1938  00F0F2  72                 	db	114	;'r'
  1939  00F0F3  6E                 	db	110	;'n'
  1940  00F0F4  73                 	db	115	;'s'
  1941  00F0F5  20                 	db	32
  1942  00F0F6  74                 	db	116	;'t'
  1943  00F0F7  68                 	db	104	;'h'
  1944  00F0F8  65                 	db	101	;'e'
  1945  00F0F9  20                 	db	32
  1946  00F0FA  63                 	db	99	;'c'
  1947  00F0FB  61                 	db	97	;'a'
  1948  00F0FC  6C                 	db	108	;'l'
  1949  00F0FD  63                 	db	99	;'c'
  1950  00F0FE  75                 	db	117	;'u'
  1951  00F0FF  6C                 	db	108	;'l'
  1952  00F100  61                 	db	97	;'a'
  1953  00F101  74                 	db	116	;'t'
  1954  00F102  65                 	db	101	;'e'
  1955  00F103  64                 	db	100	;'d'
  1956  00F104  20                 	db	32
  1957  00F105  52                 	db	82	;'R'
  1958  00F106  4D                 	db	77	;'M'
  1959  00F107  53                 	db	83	;'S'
  1960  00F108  20                 	db	32
  1961  00F109  6F                 	db	111	;'o'
  1962  00F10A  75                 	db	117	;'u'
  1963  00F10B  74                 	db	116	;'t'
  1964  00F10C  70                 	db	112	;'p'
  1965  00F10D  75                 	db	117	;'u'
  1966  00F10E  74                 	db	116	;'t'
  1967  00F10F  20                 	db	32
  1968  00F110  76                 	db	118	;'v'
  1969  00F111  6F                 	db	111	;'o'
  1970  00F112  6C                 	db	108	;'l'
  1971  00F113  74                 	db	116	;'t'
  1972  00F114  61                 	db	97	;'a'
  1973  00F115  67                 	db	103	;'g'
  1974  00F116  65                 	db	101	;'e'
  1975  00F117  20                 	db	32
  1976  00F118  66                 	db	102	;'f'
  1977  00F119  72                 	db	114	;'r'
  1978  00F11A  6F                 	db	111	;'o'
  1979  00F11B  6D                 	db	109	;'m'
  1980  00F11C  20                 	db	32
  1981  00F11D  54                 	db	84	;'T'
  1982  00F11E  52                 	db	82	;'R'
  1983  00F11F  49                 	db	73	;'I'
  1984  00F120  41                 	db	65	;'A'
  1985  00F121  43                 	db	67	;'C'
  1986  00F122  20                 	db	32
  1987  00F123  66                 	db	102	;'f'
  1988  00F124  69                 	db	105	;'i'
  1989  00F125  72                 	db	114	;'r'
  1990  00F126  69                 	db	105	;'i'
  1991  00F127  6E                 	db	110	;'n'
  1992  00F128  67                 	db	103	;'g'
  1993  00F129  20                 	db	32
  1994  00F12A  61                 	db	97	;'a'
  1995  00F12B  6E                 	db	110	;'n'
  1996  00F12C  67                 	db	103	;'g'
  1997  00F12D  6C                 	db	108	;'l'
  1998  00F12E  65                 	db	101	;'e'
  1999  00F12F  0A                 	db	10
  2000  00F130  0D                 	db	13
  2001  00F131  20                 	db	32
  2002  00F132  20                 	db	32
  2003  00F133  20                 	db	32
  2004  00F134  4D                 	db	77	;'M'
  2005  00F135  65                 	db	101	;'e'
  2006  00F136  61                 	db	97	;'a'
  2007  00F137  73                 	db	115	;'s'
  2008  00F138  75                 	db	117	;'u'
  2009  00F139  72                 	db	114	;'r'
  2010  00F13A  65                 	db	101	;'e'
  2011  00F13B  20                 	db	32
  2012  00F13C  50                 	db	80	;'P'
  2013  00F13D  6F                 	db	111	;'o'
  2014  00F13E  77                 	db	119	;'w'
  2015  00F13F  65                 	db	101	;'e'
  2016  00F140  72                 	db	114	;'r'
  2017  00F141  3F                 	db	63	;'?'
  2018  00F142  3A                 	db	58	;':'
  2019  00F143  20                 	db	32
  2020  00F144  52                 	db	82	;'R'
  2021  00F145  65                 	db	101	;'e'
  2022  00F146  74                 	db	116	;'t'
  2023  00F147  75                 	db	117	;'u'
  2024  00F148  72                 	db	114	;'r'
  2025  00F149  6E                 	db	110	;'n'
  2026  00F14A  73                 	db	115	;'s'
  2027  00F14B  20                 	db	32
  2028  00F14C  74                 	db	116	;'t'
  2029  00F14D  68                 	db	104	;'h'
  2030  00F14E  65                 	db	101	;'e'
  2031  00F14F  20                 	db	32
  2032  00F150  63                 	db	99	;'c'
  2033  00F151  61                 	db	97	;'a'
  2034  00F152  6C                 	db	108	;'l'
  2035  00F153  63                 	db	99	;'c'
  2036  00F154  75                 	db	117	;'u'
  2037  00F155  6C                 	db	108	;'l'
  2038  00F156  61                 	db	97	;'a'
  2039  00F157  74                 	db	116	;'t'
  2040  00F158  65                 	db	101	;'e'
  2041  00F159  64                 	db	100	;'d'
  2042  00F15A  20                 	db	32
  2043  00F15B  6F                 	db	111	;'o'
  2044  00F15C  75                 	db	117	;'u'
  2045  00F15D  74                 	db	116	;'t'
  2046  00F15E  70                 	db	112	;'p'
  2047  00F15F  75                 	db	117	;'u'
  2048  00F160  74                 	db	116	;'t'
  2049  00F161  20                 	db	32
  2050  00F162  70                 	db	112	;'p'
  2051  00F163  6F                 	db	111	;'o'
  2052  00F164  77                 	db	119	;'w'
  2053  00F165  65                 	db	101	;'e'
  2054  00F166  72                 	db	114	;'r'
  2055  00F167  20                 	db	32
  2056  00F168  69                 	db	105	;'i'
  2057  00F169  6E                 	db	110	;'n'
  2058  00F16A  20                 	db	32
  2059  00F16B  57                 	db	87	;'W'
  2060  00F16C  61                 	db	97	;'a'
  2061  00F16D  74                 	db	116	;'t'
  2062  00F16E  74                 	db	116	;'t'
  2063  00F16F  73                 	db	115	;'s'
  2064  00F170  0A                 	db	10
  2065  00F171  0D                 	db	13
  2066  00F172  20                 	db	32
  2067  00F173  20                 	db	32
  2068  00F174  20                 	db	32
  2069  00F175  4C                 	db	76	;'L'
  2070  00F176  6F                 	db	111	;'o'
  2071  00F177  61                 	db	97	;'a'
  2072  00F178  64                 	db	100	;'d'
  2073  00F179  20                 	db	32
  2074  00F17A  4F                 	db	79	;'O'
  2075  00F17B  6E                 	db	110	;'n'
  2076  00F17C  20                 	db	32
  2077  00F17D  54                 	db	84	;'T'
  2078  00F17E  69                 	db	105	;'i'
  2079  00F17F  6D                 	db	109	;'m'
  2080  00F180  65                 	db	101	;'e'
  2081  00F181  3F                 	db	63	;'?'
  2082  00F182  3A                 	db	58	;':'
  2083  00F183  20                 	db	32
  2084  00F184  52                 	db	82	;'R'
  2085  00F185  65                 	db	101	;'e'
  2086  00F186  74                 	db	116	;'t'
  2087  00F187  75                 	db	117	;'u'
  2088  00F188  72                 	db	114	;'r'
  2089  00F189  6E                 	db	110	;'n'
  2090  00F18A  73                 	db	115	;'s'
  2091  00F18B  20                 	db	32
  2092  00F18C  6C                 	db	108	;'l'
  2093  00F18D  6F                 	db	111	;'o'
  2094  00F18E  61                 	db	97	;'a'
  2095  00F18F  64                 	db	100	;'d'
  2096  00F190  20                 	db	32
  2097  00F191  6F                 	db	111	;'o'
  2098  00F192  6E                 	db	110	;'n'
  2099  00F193  20                 	db	32
  2100  00F194  74                 	db	116	;'t'
  2101  00F195  69                 	db	105	;'i'
  2102  00F196  6D                 	db	109	;'m'
  2103  00F197  65                 	db	101	;'e'
  2104  00F198  20                 	db	32
  2105  00F199  73                 	db	115	;'s'
  2106  00F19A  69                 	db	105	;'i'
  2107  00F19B  6E                 	db	110	;'n'
  2108  00F19C  63                 	db	99	;'c'
  2109  00F19D  65                 	db	101	;'e'
  2110  00F19E  20                 	db	32
  2111  00F19F  6C                 	db	108	;'l'
  2112  00F1A0  61                 	db	97	;'a'
  2113  00F1A1  73                 	db	115	;'s'
  2114  00F1A2  74                 	db	116	;'t'
  2115  00F1A3  20                 	db	32
  2116  00F1A4  64                 	db	100	;'d'
  2117  00F1A5  65                 	db	101	;'e'
  2118  00F1A6  76                 	db	118	;'v'
  2119  00F1A7  69                 	db	105	;'i'
  2120  00F1A8  63                 	db	99	;'c'
  2121  00F1A9  65                 	db	101	;'e'
  2122  00F1AA  20                 	db	32
  2123  00F1AB  72                 	db	114	;'r'
  2124  00F1AC  65                 	db	101	;'e'
  2125  00F1AD  73                 	db	115	;'s'
  2126  00F1AE  65                 	db	101	;'e'
  2127  00F1AF  74                 	db	116	;'t'
  2128  00F1B0  20                 	db	32
  2129  00F1B1  69                 	db	105	;'i'
  2130  00F1B2  6E                 	db	110	;'n'
  2131  00F1B3  20                 	db	32
  2132  00F1B4  73                 	db	115	;'s'
  2133  00F1B5  65                 	db	101	;'e'
  2134  00F1B6  63                 	db	99	;'c'
  2135  00F1B7  6F                 	db	111	;'o'
  2136  00F1B8  6E                 	db	110	;'n'
  2137  00F1B9  64                 	db	100	;'d'
  2138  00F1BA  73                 	db	115	;'s'
  2139  00F1BB  0A                 	db	10
  2140  00F1BC  0D                 	db	13
  2141  00F1BD  4F                 	db	79	;'O'
  2142  00F1BE  75                 	db	117	;'u'
  2143  00F1BF  74                 	db	116	;'t'
  2144  00F1C0  70                 	db	112	;'p'
  2145  00F1C1  75                 	db	117	;'u'
  2146  00F1C2  74                 	db	116	;'t'
  2147  00F1C3  20                 	db	32
  2148  00F1C4  43                 	db	67	;'C'
  2149  00F1C5  6F                 	db	111	;'o'
  2150  00F1C6  6E                 	db	110	;'n'
  2151  00F1C7  74                 	db	116	;'t'
  2152  00F1C8  72                 	db	114	;'r'
  2153  00F1C9  6F                 	db	111	;'o'
  2154  00F1CA  6C                 	db	108	;'l'
  2155  00F1CB  20                 	db	32
  2156  00F1CC  43                 	db	67	;'C'
  2157  00F1CD  6F                 	db	111	;'o'
  2158  00F1CE  6D                 	db	109	;'m'
  2159  00F1CF  6D                 	db	109	;'m'
  2160  00F1D0  61                 	db	97	;'a'
  2161  00F1D1  6E                 	db	110	;'n'
  2162  00F1D2  64                 	db	100	;'d'
  2163  00F1D3  73                 	db	115	;'s'
  2164  00F1D4  3A                 	db	58	;':'
  2165  00F1D5  0A                 	db	10
  2166  00F1D6  0D                 	db	13
  2167  00F1D7  20                 	db	32
  2168  00F1D8  20                 	db	32
  2169  00F1D9  20                 	db	32
  2170  00F1DA  45                 	db	69	;'E'
  2171  00F1DB  6E                 	db	110	;'n'
  2172  00F1DC  61                 	db	97	;'a'
  2173  00F1DD  62                 	db	98	;'b'
  2174  00F1DE  6C                 	db	108	;'l'
  2175  00F1DF  65                 	db	101	;'e'
  2176  00F1E0  20                 	db	32
  2177  00F1E1  44                 	db	68	;'D'
  2178  00F1E2  69                 	db	105	;'i'
  2179  00F1E3  6D                 	db	109	;'m'
  2180  00F1E4  6D                 	db	109	;'m'
  2181  00F1E5  69                 	db	105	;'i'
  2182  00F1E6  6E                 	db	110	;'n'
  2183  00F1E7  67                 	db	103	;'g'
  2184  00F1E8  3A                 	db	58	;':'
  2185  00F1E9  20                 	db	32
  2186  00F1EA  45                 	db	69	;'E'
  2187  00F1EB  6E                 	db	110	;'n'
  2188  00F1EC  61                 	db	97	;'a'
  2189  00F1ED  62                 	db	98	;'b'
  2190  00F1EE  6C                 	db	108	;'l'
  2191  00F1EF  65                 	db	101	;'e'
  2192  00F1F0  20                 	db	32
  2193  00F1F1  54                 	db	84	;'T'
  2194  00F1F2  52                 	db	82	;'R'
  2195  00F1F3  49                 	db	73	;'I'
  2196  00F1F4  41                 	db	65	;'A'
  2197  00F1F5  43                 	db	67	;'C'
  2198  00F1F6  20                 	db	32
  2199  00F1F7  6F                 	db	111	;'o'
  2200  00F1F8  75                 	db	117	;'u'
  2201  00F1F9  74                 	db	116	;'t'
  2202  00F1FA  70                 	db	112	;'p'
  2203  00F1FB  75                 	db	117	;'u'
  2204  00F1FC  74                 	db	116	;'t'
  2205  00F1FD  20                 	db	32
  2206  00F1FE  64                 	db	100	;'d'
  2207  00F1FF  69                 	db	105	;'i'
  2208  00F200  6D                 	db	109	;'m'
  2209  00F201  6D                 	db	109	;'m'
  2210  00F202  69                 	db	105	;'i'
  2211  00F203  6E                 	db	110	;'n'
  2212  00F204  67                 	db	103	;'g'
  2213  00F205  0A                 	db	10
  2214  00F206  0D                 	db	13
  2215  00F207  20                 	db	32
  2216  00F208  20                 	db	32
  2217  00F209  20                 	db	32
  2218  00F20A  44                 	db	68	;'D'
  2219  00F20B  69                 	db	105	;'i'
  2220  00F20C  73                 	db	115	;'s'
  2221  00F20D  61                 	db	97	;'a'
  2222  00F20E  62                 	db	98	;'b'
  2223  00F20F  6C                 	db	108	;'l'
  2224  00F210  65                 	db	101	;'e'
  2225  00F211  20                 	db	32
  2226  00F212  44                 	db	68	;'D'
  2227  00F213  69                 	db	105	;'i'
  2228  00F214  6D                 	db	109	;'m'
  2229  00F215  6D                 	db	109	;'m'
  2230  00F216  69                 	db	105	;'i'
  2231  00F217  6E                 	db	110	;'n'
  2232  00F218  67                 	db	103	;'g'
  2233  00F219  3A                 	db	58	;':'
  2234  00F21A  20                 	db	32
  2235  00F21B  44                 	db	68	;'D'
  2236  00F21C  69                 	db	105	;'i'
  2237  00F21D  73                 	db	115	;'s'
  2238  00F21E  61                 	db	97	;'a'
  2239  00F21F  62                 	db	98	;'b'
  2240  00F220  6C                 	db	108	;'l'
  2241  00F221  65                 	db	101	;'e'
  2242  00F222  20                 	db	32
  2243  00F223  54                 	db	84	;'T'
  2244  00F224  52                 	db	82	;'R'
  2245  00F225  49                 	db	73	;'I'
  2246  00F226  41                 	db	65	;'A'
  2247  00F227  43                 	db	67	;'C'
  2248  00F228  20                 	db	32
  2249  00F229  6F                 	db	111	;'o'
  2250  00F22A  75                 	db	117	;'u'
  2251  00F22B  74                 	db	116	;'t'
  2252  00F22C  70                 	db	112	;'p'
  2253  00F22D  75                 	db	117	;'u'
  2254  00F22E  74                 	db	116	;'t'
  2255  00F22F  20                 	db	32
  2256  00F230  64                 	db	100	;'d'
  2257  00F231  69                 	db	105	;'i'
  2258  00F232  6D                 	db	109	;'m'
  2259  00F233  6D                 	db	109	;'m'
  2260  00F234  69                 	db	105	;'i'
  2261  00F235  6E                 	db	110	;'n'
  2262  00F236  67                 	db	103	;'g'
  2263  00F237  0A                 	db	10
  2264  00F238  0D                 	db	13
  2265  00F239  20                 	db	32
  2266  00F23A  20                 	db	32
  2267  00F23B  20                 	db	32
  2268  00F23C  45                 	db	69	;'E'
  2269  00F23D  6E                 	db	110	;'n'
  2270  00F23E  61                 	db	97	;'a'
  2271  00F23F  62                 	db	98	;'b'
  2272  00F240  6C                 	db	108	;'l'
  2273  00F241  65                 	db	101	;'e'
  2274  00F242  20                 	db	32
  2275  00F243  4C                 	db	76	;'L'
  2276  00F244  6F                 	db	111	;'o'
  2277  00F245  61                 	db	97	;'a'
  2278  00F246  64                 	db	100	;'d'
  2279  00F247  3A                 	db	58	;':'
  2280  00F248  20                 	db	32
  2281  00F249  45                 	db	69	;'E'
  2282  00F24A  6E                 	db	110	;'n'
  2283  00F24B  61                 	db	97	;'a'
  2284  00F24C  62                 	db	98	;'b'
  2285  00F24D  6C                 	db	108	;'l'
  2286  00F24E  65                 	db	101	;'e'
  2287  00F24F  73                 	db	115	;'s'
  2288  00F250  20                 	db	32
  2289  00F251  74                 	db	116	;'t'
  2290  00F252  68                 	db	104	;'h'
  2291  00F253  65                 	db	101	;'e'
  2292  00F254  20                 	db	32
  2293  00F255  6F                 	db	111	;'o'
  2294  00F256  75                 	db	117	;'u'
  2295  00F257  74                 	db	116	;'t'
  2296  00F258  70                 	db	112	;'p'
  2297  00F259  75                 	db	117	;'u'
  2298  00F25A  74                 	db	116	;'t'
  2299  00F25B  20                 	db	32
  2300  00F25C  54                 	db	84	;'T'
  2301  00F25D  52                 	db	82	;'R'
  2302  00F25E  49                 	db	73	;'I'
  2303  00F25F  41                 	db	65	;'A'
  2304  00F260  43                 	db	67	;'C'
  2305  00F261  20                 	db	32
  2306  00F262  77                 	db	119	;'w'
  2307  00F263  69                 	db	105	;'i'
  2308  00F264  74                 	db	116	;'t'
  2309  00F265  68                 	db	104	;'h'
  2310  00F266  20                 	db	32
  2311  00F267  64                 	db	100	;'d'
  2312  00F268  69                 	db	105	;'i'
  2313  00F269  6D                 	db	109	;'m'
  2314  00F26A  6D                 	db	109	;'m'
  2315  00F26B  69                 	db	105	;'i'
  2316  00F26C  6E                 	db	110	;'n'
  2317  00F26D  67                 	db	103	;'g'
  2318  00F26E  20                 	db	32
  2319  00F26F  64                 	db	100	;'d'
  2320  00F270  69                 	db	105	;'i'
  2321  00F271  73                 	db	115	;'s'
  2322  00F272  61                 	db	97	;'a'
  2323  00F273  62                 	db	98	;'b'
  2324  00F274  6C                 	db	108	;'l'
  2325  00F275  65                 	db	101	;'e'
  2326  00F276  64                 	db	100	;'d'
  2327  00F277  0A                 	db	10
  2328  00F278  0D                 	db	13
  2329  00F279  20                 	db	32
  2330  00F27A  20                 	db	32
  2331  00F27B  20                 	db	32
  2332  00F27C  44                 	db	68	;'D'
  2333  00F27D  69                 	db	105	;'i'
  2334  00F27E  73                 	db	115	;'s'
  2335  00F27F  61                 	db	97	;'a'
  2336  00F280  62                 	db	98	;'b'
  2337  00F281  6C                 	db	108	;'l'
  2338  00F282  65                 	db	101	;'e'
  2339  00F283  20                 	db	32
  2340  00F284  4C                 	db	76	;'L'
  2341  00F285  6F                 	db	111	;'o'
  2342  00F286  61                 	db	97	;'a'
  2343  00F287  64                 	db	100	;'d'
  2344  00F288  3A                 	db	58	;':'
  2345  00F289  20                 	db	32
  2346  00F28A  44                 	db	68	;'D'
  2347  00F28B  69                 	db	105	;'i'
  2348  00F28C  73                 	db	115	;'s'
  2349  00F28D  61                 	db	97	;'a'
  2350  00F28E  62                 	db	98	;'b'
  2351  00F28F  6C                 	db	108	;'l'
  2352  00F290  65                 	db	101	;'e'
  2353  00F291  73                 	db	115	;'s'
  2354  00F292  20                 	db	32
  2355  00F293  74                 	db	116	;'t'
  2356  00F294  68                 	db	104	;'h'
  2357  00F295  65                 	db	101	;'e'
  2358  00F296  20                 	db	32
  2359  00F297  6F                 	db	111	;'o'
  2360  00F298  75                 	db	117	;'u'
  2361  00F299  74                 	db	116	;'t'
  2362  00F29A  70                 	db	112	;'p'
  2363  00F29B  75                 	db	117	;'u'
  2364  00F29C  74                 	db	116	;'t'
  2365  00F29D  20                 	db	32
  2366  00F29E  54                 	db	84	;'T'
  2367  00F29F  52                 	db	82	;'R'
  2368  00F2A0  49                 	db	73	;'I'
  2369  00F2A1  41                 	db	65	;'A'
  2370  00F2A2  43                 	db	67	;'C'
  2371  00F2A3  20                 	db	32
  2372  00F2A4  63                 	db	99	;'c'
  2373  00F2A5  6F                 	db	111	;'o'
  2374  00F2A6  6D                 	db	109	;'m'
  2375  00F2A7  70                 	db	112	;'p'
  2376  00F2A8  6C                 	db	108	;'l'
  2377  00F2A9  65                 	db	101	;'e'
  2378  00F2AA  74                 	db	116	;'t'
  2379  00F2AB  65                 	db	101	;'e'
  2380  00F2AC  6C                 	db	108	;'l'
  2381  00F2AD  79                 	db	121	;'y'
  2382  00F2AE  0A                 	db	10
  2383  00F2AF  0D                 	db	13
  2384  00F2B0  20                 	db	32
  2385  00F2B1  20                 	db	32
  2386  00F2B2  20                 	db	32
  2387  00F2B3  4C                 	db	76	;'L'
  2388  00F2B4  6F                 	db	111	;'o'
  2389  00F2B5  61                 	db	97	;'a'
  2390  00F2B6  64                 	db	100	;'d'
  2391  00F2B7  20                 	db	32
  2392  00F2B8  45                 	db	69	;'E'
  2393  00F2B9  6E                 	db	110	;'n'
  2394  00F2BA  61                 	db	97	;'a'
  2395  00F2BB  62                 	db	98	;'b'
  2396  00F2BC  6C                 	db	108	;'l'
  2397  00F2BD  65                 	db	101	;'e'
  2398  00F2BE  64                 	db	100	;'d'
  2399  00F2BF  3F                 	db	63	;'?'
  2400  00F2C0  3A                 	db	58	;':'
  2401  00F2C1  20                 	db	32
  2402  00F2C2  52                 	db	82	;'R'
  2403  00F2C3  65                 	db	101	;'e'
  2404  00F2C4  74                 	db	116	;'t'
  2405  00F2C5  75                 	db	117	;'u'
  2406  00F2C6  72                 	db	114	;'r'
  2407  00F2C7  6E                 	db	110	;'n'
  2408  00F2C8  73                 	db	115	;'s'
  2409  00F2C9  20                 	db	32
  2410  00F2CA  69                 	db	105	;'i'
  2411  00F2CB  66                 	db	102	;'f'
  2412  00F2CC  20                 	db	32
  2413  00F2CD  74                 	db	116	;'t'
  2414  00F2CE  68                 	db	104	;'h'
  2415  00F2CF  65                 	db	101	;'e'
  2416  00F2D0  20                 	db	32
  2417  00F2D1  6F                 	db	111	;'o'
  2418  00F2D2  75                 	db	117	;'u'
  2419  00F2D3  74                 	db	116	;'t'
  2420  00F2D4  70                 	db	112	;'p'
  2421  00F2D5  75                 	db	117	;'u'
  2422  00F2D6  74                 	db	116	;'t'
  2423  00F2D7  20                 	db	32
  2424  00F2D8  6C                 	db	108	;'l'
  2425  00F2D9  6F                 	db	111	;'o'
  2426  00F2DA  61                 	db	97	;'a'
  2427  00F2DB  64                 	db	100	;'d'
  2428  00F2DC  20                 	db	32
  2429  00F2DD  69                 	db	105	;'i'
  2430  00F2DE  73                 	db	115	;'s'
  2431  00F2DF  20                 	db	32
  2432  00F2E0  65                 	db	101	;'e'
  2433  00F2E1  6E                 	db	110	;'n'
  2434  00F2E2  61                 	db	97	;'a'
  2435  00F2E3  62                 	db	98	;'b'
  2436  00F2E4  6C                 	db	108	;'l'
  2437  00F2E5  65                 	db	101	;'e'
  2438  00F2E6  64                 	db	100	;'d'
  2439  00F2E7  20                 	db	32
  2440  00F2E8  6F                 	db	111	;'o'
  2441  00F2E9  72                 	db	114	;'r'
  2442  00F2EA  20                 	db	32
  2443  00F2EB  64                 	db	100	;'d'
  2444  00F2EC  69                 	db	105	;'i'
  2445  00F2ED  73                 	db	115	;'s'
  2446  00F2EE  61                 	db	97	;'a'
  2447  00F2EF  62                 	db	98	;'b'
  2448  00F2F0  6C                 	db	108	;'l'
  2449  00F2F1  65                 	db	101	;'e'
  2450  00F2F2  64                 	db	100	;'d'
  2451  00F2F3  0A                 	db	10
  2452  00F2F4  0D                 	db	13
  2453  00F2F5  20                 	db	32
  2454  00F2F6  20                 	db	32
  2455  00F2F7  20                 	db	32
  2456  00F2F8  44                 	db	68	;'D'
  2457  00F2F9  69                 	db	105	;'i'
  2458  00F2FA  6D                 	db	109	;'m'
  2459  00F2FB  6D                 	db	109	;'m'
  2460  00F2FC  69                 	db	105	;'i'
  2461  00F2FD  6E                 	db	110	;'n'
  2462  00F2FE  67                 	db	103	;'g'
  2463  00F2FF  20                 	db	32
  2464  00F300  45                 	db	69	;'E'
  2465  00F301  6E                 	db	110	;'n'
  2466  00F302  61                 	db	97	;'a'
  2467  00F303  62                 	db	98	;'b'
  2468  00F304  6C                 	db	108	;'l'
  2469  00F305  65                 	db	101	;'e'
  2470  00F306  64                 	db	100	;'d'
  2471  00F307  3F                 	db	63	;'?'
  2472  00F308  3A                 	db	58	;':'
  2473  00F309  20                 	db	32
  2474  00F30A  52                 	db	82	;'R'
  2475  00F30B  65                 	db	101	;'e'
  2476  00F30C  74                 	db	116	;'t'
  2477  00F30D  75                 	db	117	;'u'
  2478  00F30E  72                 	db	114	;'r'
  2479  00F30F  6E                 	db	110	;'n'
  2480  00F310  73                 	db	115	;'s'
  2481  00F311  20                 	db	32
  2482  00F312  69                 	db	105	;'i'
  2483  00F313  66                 	db	102	;'f'
  2484  00F314  20                 	db	32
  2485  00F315  64                 	db	100	;'d'
  2486  00F316  69                 	db	105	;'i'
  2487  00F317  6D                 	db	109	;'m'
  2488  00F318  6D                 	db	109	;'m'
  2489  00F319  69                 	db	105	;'i'
  2490  00F31A  6E                 	db	110	;'n'
  2491  00F31B  67                 	db	103	;'g'
  2492  00F31C  20                 	db	32
  2493  00F31D  6F                 	db	111	;'o'
  2494  00F31E  66                 	db	102	;'f'
  2495  00F31F  20                 	db	32
  2496  00F320  74                 	db	116	;'t'
  2497  00F321  68                 	db	104	;'h'
  2498  00F322  65                 	db	101	;'e'
  2499  00F323  20                 	db	32
  2500  00F324  6F                 	db	111	;'o'
  2501  00F325  75                 	db	117	;'u'
  2502  00F326  74                 	db	116	;'t'
  2503  00F327  70                 	db	112	;'p'
  2504  00F328  75                 	db	117	;'u'
  2505  00F329  74                 	db	116	;'t'
  2506  00F32A  20                 	db	32
  2507  00F32B  6C                 	db	108	;'l'
  2508  00F32C  6F                 	db	111	;'o'
  2509  00F32D  61                 	db	97	;'a'
  2510  00F32E  64                 	db	100	;'d'
  2511  00F32F  20                 	db	32
  2512  00F330  69                 	db	105	;'i'
  2513  00F331  73                 	db	115	;'s'
  2514  00F332  20                 	db	32
  2515  00F333  65                 	db	101	;'e'
  2516  00F334  6E                 	db	110	;'n'
  2517  00F335  61                 	db	97	;'a'
  2518  00F336  62                 	db	98	;'b'
  2519  00F337  6C                 	db	108	;'l'
  2520  00F338  65                 	db	101	;'e'
  2521  00F339  64                 	db	100	;'d'
  2522  00F33A  20                 	db	32
  2523  00F33B  6F                 	db	111	;'o'
  2524  00F33C  72                 	db	114	;'r'
  2525  00F33D  20                 	db	32
  2526  00F33E  6E                 	db	110	;'n'
  2527  00F33F  6F                 	db	111	;'o'
  2528  00F340  74                 	db	116	;'t'
  2529  00F341  0A                 	db	10
  2530  00F342  0D                 	db	13
  2531  00F343  20                 	db	32
  2532  00F344  20                 	db	32
  2533  00F345  20                 	db	32
  2534  00F346  53                 	db	83	;'S'
  2535  00F347  65                 	db	101	;'e'
  2536  00F348  74                 	db	116	;'t'
  2537  00F349  20                 	db	32
  2538  00F34A  44                 	db	68	;'D'
  2539  00F34B  69                 	db	105	;'i'
  2540  00F34C  6D                 	db	109	;'m'
  2541  00F34D  6D                 	db	109	;'m'
  2542  00F34E  69                 	db	105	;'i'
  2543  00F34F  6E                 	db	110	;'n'
  2544  00F350  67                 	db	103	;'g'
  2545  00F351  20                 	db	32
  2546  00F352  50                 	db	80	;'P'
  2547  00F353  65                 	db	101	;'e'
  2548  00F354  72                 	db	114	;'r'
  2549  00F355  63                 	db	99	;'c'
  2550  00F356  65                 	db	101	;'e'
  2551  00F357  6E                 	db	110	;'n'
  2552  00F358  74                 	db	116	;'t'
  2553  00F359  61                 	db	97	;'a'
  2554  00F35A  67                 	db	103	;'g'
  2555  00F35B  65                 	db	101	;'e'
  2556  00F35C  3A                 	db	58	;':'
  2557  00F35D  20                 	db	32
  2558  00F35E  3C                 	db	60	;'<'
  2559  00F35F  78                 	db	120	;'x'
  2560  00F360  3E                 	db	62	;'>'
  2561  00F361  3A                 	db	58	;':'
  2562  00F362  20                 	db	32
  2563  00F363  53                 	db	83	;'S'
  2564  00F364  65                 	db	101	;'e'
  2565  00F365  74                 	db	116	;'t'
  2566  00F366  73                 	db	115	;'s'
  2567  00F367  20                 	db	32
  2568  00F368  74                 	db	116	;'t'
  2569  00F369  68                 	db	104	;'h'
  2570  00F36A  65                 	db	101	;'e'
  2571  00F36B  20                 	db	32
  2572  00F36C  6F                 	db	111	;'o'
  2573  00F36D  75                 	db	117	;'u'
  2574  00F36E  74                 	db	116	;'t'
  2575  00F36F  70                 	db	112	;'p'
  2576  00F370  75                 	db	117	;'u'
  2577  00F371  74                 	db	116	;'t'
  2578  00F372  20                 	db	32
  2579  00F373  64                 	db	100	;'d'
  2580  00F374  69                 	db	105	;'i'
  2581  00F375  6D                 	db	109	;'m'
  2582  00F376  6D                 	db	109	;'m'
  2583  00F377  69                 	db	105	;'i'
  2584  00F378  6E                 	db	110	;'n'
  2585  00F379  67                 	db	103	;'g'
  2586  00F37A  20                 	db	32
  2587  00F37B  70                 	db	112	;'p'
  2588  00F37C  65                 	db	101	;'e'
  2589  00F37D  72                 	db	114	;'r'
  2590  00F37E  63                 	db	99	;'c'
  2591  00F37F  65                 	db	101	;'e'
  2592  00F380  6E                 	db	110	;'n'
  2593  00F381  74                 	db	116	;'t'
  2594  00F382  61                 	db	97	;'a'
  2595  00F383  67                 	db	103	;'g'
  2596  00F384  65                 	db	101	;'e'
  2597  00F385  20                 	db	32
  2598  00F386  61                 	db	97	;'a'
  2599  00F387  73                 	db	115	;'s'
  2600  00F388  20                 	db	32
  2601  00F389  78                 	db	120	;'x'
  2602  00F38A  20                 	db	32
  2603  00F38B  70                 	db	112	;'p'
  2604  00F38C  65                 	db	101	;'e'
  2605  00F38D  72                 	db	114	;'r'
  2606  00F38E  63                 	db	99	;'c'
  2607  00F38F  65                 	db	101	;'e'
  2608  00F390  6E                 	db	110	;'n'
  2609  00F391  74                 	db	116	;'t'
  2610  00F392  0A                 	db	10
  2611  00F393  0D                 	db	13
  2612  00F394  00                 	db	0
  2613  00F395  20                 	db	32
  2614  00F396  20                 	db	32
  2615  00F397  20                 	db	32
  2616  00F398  20                 	db	32
  2617  00F399  42                 	db	66	;'B'
  2618  00F39A  6F                 	db	111	;'o'
  2619  00F39B  6F                 	db	111	;'o'
  2620  00F39C  74                 	db	116	;'t'
  2621  00F39D  20                 	db	32
  2622  00F39E  63                 	db	99	;'c'
  2623  00F39F  6F                 	db	111	;'o'
  2624  00F3A0  6D                 	db	109	;'m'
  2625  00F3A1  70                 	db	112	;'p'
  2626  00F3A2  6C                 	db	108	;'l'
  2627  00F3A3  65                 	db	101	;'e'
  2628  00F3A4  74                 	db	116	;'t'
  2629  00F3A5  65                 	db	101	;'e'
  2630  00F3A6  0A                 	db	10
  2631  00F3A7  0D                 	db	13
  2632  00F3A8  20                 	db	32
  2633  00F3A9  20                 	db	32
  2634  00F3AA  20                 	db	32
  2635  00F3AB  20                 	db	32
  2636  00F3AC  50                 	db	80	;'P'
  2637  00F3AD  49                 	db	73	;'I'
  2638  00F3AE  43                 	db	67	;'C'
  2639  00F3AF  31                 	db	49	;'1'
  2640  00F3B0  38                 	db	56	;'8'
  2641  00F3B1  46                 	db	70	;'F'
  2642  00F3B2  36                 	db	54	;'6'
  2643  00F3B3  37                 	db	55	;'7'
  2644  00F3B4  4B                 	db	75	;'K'
  2645  00F3B5  34                 	db	52	;'4'
  2646  00F3B6  30                 	db	48	;'0'
  2647  00F3B7  20                 	db	32
  2648  00F3B8  6D                 	db	109	;'m'
  2649  00F3B9  54                 	db	84	;'T'
  2650  00F3BA  6F                 	db	111	;'o'
  2651  00F3BB  75                 	db	117	;'u'
  2652  00F3BC  63                 	db	99	;'c'
  2653  00F3BD  68                 	db	104	;'h'
  2654  00F3BE  20                 	db	32
  2655  00F3BF  54                 	db	84	;'T'
  2656  00F3C0  65                 	db	101	;'e'
  2657  00F3C1  73                 	db	115	;'s'
  2658  00F3C2  74                 	db	116	;'t'
  2659  00F3C3  20                 	db	32
  2660  00F3C4  42                 	db	66	;'B'
  2661  00F3C5  6F                 	db	111	;'o'
  2662  00F3C6  61                 	db	97	;'a'
  2663  00F3C7  72                 	db	114	;'r'
  2664  00F3C8  64                 	db	100	;'d'
  2665  00F3C9  0A                 	db	10
  2666  00F3CA  0D                 	db	13
  2667  00F3CB  20                 	db	32
  2668  00F3CC  20                 	db	32
  2669  00F3CD  20                 	db	32
  2670  00F3CE  20                 	db	32
  2671  00F3CF  45                 	db	69	;'E'
  2672  00F3D0  76                 	db	118	;'v'
  2673  00F3D1  61                 	db	97	;'a'
  2674  00F3D2  6C                 	db	108	;'l'
  2675  00F3D3  75                 	db	117	;'u'
  2676  00F3D4  61                 	db	97	;'a'
  2677  00F3D5  74                 	db	116	;'t'
  2678  00F3D6  65                 	db	101	;'e'
  2679  00F3D7  73                 	db	115	;'s'
  2680  00F3D8  20                 	db	32
  2681  00F3D9  74                 	db	116	;'t'
  2682  00F3DA  68                 	db	104	;'h'
  2683  00F3DB  65                 	db	101	;'e'
  2684  00F3DC  20                 	db	32
  2685  00F3DD  6D                 	db	109	;'m'
  2686  00F3DE  54                 	db	84	;'T'
  2687  00F3DF  6F                 	db	111	;'o'
  2688  00F3E0  75                 	db	117	;'u'
  2689  00F3E1  63                 	db	99	;'c'
  2690  00F3E2  68                 	db	104	;'h'
  2691  00F3E3  20                 	db	32
  2692  00F3E4  63                 	db	99	;'c'
  2693  00F3E5  61                 	db	97	;'a'
  2694  00F3E6  70                 	db	112	;'p'
  2695  00F3E7  61                 	db	97	;'a'
  2696  00F3E8  63                 	db	99	;'c'
  2697  00F3E9  69                 	db	105	;'i'
  2698  00F3EA  74                 	db	116	;'t'
  2699  00F3EB  69                 	db	105	;'i'
  2700  00F3EC  76                 	db	118	;'v'
  2701  00F3ED  65                 	db	101	;'e'
  2702  00F3EE  20                 	db	32
  2703  00F3EF  74                 	db	116	;'t'
  2704  00F3F0  6F                 	db	111	;'o'
  2705  00F3F1  75                 	db	117	;'u'
  2706  00F3F2  63                 	db	99	;'c'
  2707  00F3F3  68                 	db	104	;'h'
  2708  00F3F4  20                 	db	32
  2709  00F3F5  6C                 	db	108	;'l'
  2710  00F3F6  69                 	db	105	;'i'
  2711  00F3F7  62                 	db	98	;'b'
  2712  00F3F8  72                 	db	114	;'r'
  2713  00F3F9  61                 	db	97	;'a'
  2714  00F3FA  72                 	db	114	;'r'
  2715  00F3FB  79                 	db	121	;'y'
  2716  00F3FC  20                 	db	32
  2717  00F3FD  64                 	db	100	;'d'
  2718  00F3FE  69                 	db	105	;'i'
  2719  00F3FF  73                 	db	115	;'s'
  2720  00F400  74                 	db	116	;'t'
  2721  00F401  72                 	db	114	;'r'
  2722  00F402  69                 	db	105	;'i'
  2723  00F403  62                 	db	98	;'b'
  2724  00F404  75                 	db	117	;'u'
  2725  00F405  74                 	db	116	;'t'
  2726  00F406  65                 	db	101	;'e'
  2727  00F407  64                 	db	100	;'d'
  2728  00F408  20                 	db	32
  2729  00F409  62                 	db	98	;'b'
  2730  00F40A  79                 	db	121	;'y'
  2731  00F40B  20                 	db	32
  2732  00F40C  4D                 	db	77	;'M'
  2733  00F40D  69                 	db	105	;'i'
  2734  00F40E  63                 	db	99	;'c'
  2735  00F40F  72                 	db	114	;'r'
  2736  00F410  6F                 	db	111	;'o'
  2737  00F411  63                 	db	99	;'c'
  2738  00F412  68                 	db	104	;'h'
  2739  00F413  69                 	db	105	;'i'
  2740  00F414  70                 	db	112	;'p'
  2741  00F415  0A                 	db	10
  2742  00F416  0D                 	db	13
  2743  00F417  20                 	db	32
  2744  00F418  20                 	db	32
  2745  00F419  20                 	db	32
  2746  00F41A  20                 	db	32
  2747  00F41B  53                 	db	83	;'S'
  2748  00F41C  65                 	db	101	;'e'
  2749  00F41D  74                 	db	116	;'t'
  2750  00F41E  73                 	db	115	;'s'
  2751  00F41F  20                 	db	32
  2752  00F420  74                 	db	116	;'t'
  2753  00F421  68                 	db	104	;'h'
  2754  00F422  65                 	db	101	;'e'
  2755  00F423  20                 	db	32
  2756  00F424  73                 	db	115	;'s'
  2757  00F425  74                 	db	116	;'t'
  2758  00F426  61                 	db	97	;'a'
  2759  00F427  74                 	db	116	;'t'
  2760  00F428  65                 	db	101	;'e'
  2761  00F429  20                 	db	32
  2762  00F42A  6F                 	db	111	;'o'
  2763  00F42B  66                 	db	102	;'f'
  2764  00F42C  20                 	db	32
  2765  00F42D  66                 	db	102	;'f'
  2766  00F42E  69                 	db	105	;'i'
  2767  00F42F  76                 	db	118	;'v'
  2768  00F430  65                 	db	101	;'e'
  2769  00F431  20                 	db	32
  2770  00F432  4C                 	db	76	;'L'
  2771  00F433  45                 	db	69	;'E'
  2772  00F434  44                 	db	68	;'D'
  2773  00F435  73                 	db	115	;'s'
  2774  00F436  20                 	db	32
  2775  00F437  62                 	db	98	;'b'
  2776  00F438  61                 	db	97	;'a'
  2777  00F439  73                 	db	115	;'s'
  2778  00F43A  65                 	db	101	;'e'
  2779  00F43B  64                 	db	100	;'d'
  2780  00F43C  20                 	db	32
  2781  00F43D  6F                 	db	111	;'o'
  2782  00F43E  6E                 	db	110	;'n'
  2783  00F43F  20                 	db	32
  2784  00F440  6D                 	db	109	;'m'
  2785  00F441  54                 	db	84	;'T'
  2786  00F442  6F                 	db	111	;'o'
  2787  00F443  75                 	db	117	;'u'
  2788  00F444  63                 	db	99	;'c'
  2789  00F445  68                 	db	104	;'h'
  2790  00F446  20                 	db	32
  2791  00F447  63                 	db	99	;'c'
  2792  00F448  61                 	db	97	;'a'
  2793  00F449  70                 	db	112	;'p'
  2794  00F44A  61                 	db	97	;'a'
  2795  00F44B  63                 	db	99	;'c'
  2796  00F44C  69                 	db	105	;'i'
  2797  00F44D  74                 	db	116	;'t'
  2798  00F44E  69                 	db	105	;'i'
  2799  00F44F  76                 	db	118	;'v'
  2800  00F450  65                 	db	101	;'e'
  2801  00F451  20                 	db	32
  2802  00F452  70                 	db	112	;'p'
  2803  00F453  75                 	db	117	;'u'
  2804  00F454  73                 	db	115	;'s'
  2805  00F455  68                 	db	104	;'h'
  2806  00F456  62                 	db	98	;'b'
  2807  00F457  75                 	db	117	;'u'
  2808  00F458  74                 	db	116	;'t'
  2809  00F459  74                 	db	116	;'t'
  2810  00F45A  6F                 	db	111	;'o'
  2811  00F45B  6E                 	db	110	;'n'
  2812  00F45C  73                 	db	115	;'s'
  2813  00F45D  0A                 	db	10
  2814  00F45E  0D                 	db	13
  2815  00F45F  20                 	db	32
  2816  00F460  20                 	db	32
  2817  00F461  20                 	db	32
  2818  00F462  20                 	db	32
  2819  00F463  42                 	db	66	;'B'
  2820  00F464  61                 	db	97	;'a'
  2821  00F465  75                 	db	117	;'u'
  2822  00F466  64                 	db	100	;'d'
  2823  00F467  20                 	db	32
  2824  00F468  72                 	db	114	;'r'
  2825  00F469  61                 	db	97	;'a'
  2826  00F46A  74                 	db	116	;'t'
  2827  00F46B  65                 	db	101	;'e'
  2828  00F46C  3A                 	db	58	;':'
  2829  00F46D  20                 	db	32
  2830  00F46E  31                 	db	49	;'1'
  2831  00F46F  31                 	db	49	;'1'
  2832  00F470  35                 	db	53	;'5'
  2833  00F471  32                 	db	50	;'2'
  2834  00F472  30                 	db	48	;'0'
  2835  00F473  30                 	db	48	;'0'
  2836  00F474  20                 	db	32
  2837  00F475  62                 	db	98	;'b'
  2838  00F476  70                 	db	112	;'p'
  2839  00F477  73                 	db	115	;'s'
  2840  00F478  0A                 	db	10
  2841  00F479  0D                 	db	13
  2842  00F47A  20                 	db	32
  2843  00F47B  20                 	db	32
  2844  00F47C  20                 	db	32
  2845  00F47D  20                 	db	32
  2846  00F47E  4E                 	db	78	;'N'
  2847  00F47F  6F                 	db	111	;'o'
  2848  00F480  20                 	db	32
  2849  00F481  70                 	db	112	;'p'
  2850  00F482  61                 	db	97	;'a'
  2851  00F483  72                 	db	114	;'r'
  2852  00F484  69                 	db	105	;'i'
  2853  00F485  74                 	db	116	;'t'
  2854  00F486  79                 	db	121	;'y'
  2855  00F487  2C                 	db	44
  2856  00F488  20                 	db	32
  2857  00F489  38                 	db	56	;'8'
  2858  00F48A  20                 	db	32
  2859  00F48B  62                 	db	98	;'b'
  2860  00F48C  69                 	db	105	;'i'
  2861  00F48D  74                 	db	116	;'t'
  2862  00F48E  73                 	db	115	;'s'
  2863  00F48F  2C                 	db	44
  2864  00F490  20                 	db	32
  2865  00F491  6E                 	db	110	;'n'
  2866  00F492  6F                 	db	111	;'o'
  2867  00F493  20                 	db	32
  2868  00F494  66                 	db	102	;'f'
  2869  00F495  6C                 	db	108	;'l'
  2870  00F496  6F                 	db	111	;'o'
  2871  00F497  77                 	db	119	;'w'
  2872  00F498  20                 	db	32
  2873  00F499  63                 	db	99	;'c'
  2874  00F49A  6F                 	db	111	;'o'
  2875  00F49B  6E                 	db	110	;'n'
  2876  00F49C  74                 	db	116	;'t'
  2877  00F49D  72                 	db	114	;'r'
  2878  00F49E  6F                 	db	111	;'o'
  2879  00F49F  6C                 	db	108	;'l'
  2880  00F4A0  2C                 	db	44
  2881  00F4A1  20                 	db	32
  2882  00F4A2  31                 	db	49	;'1'
  2883  00F4A3  20                 	db	32
  2884  00F4A4  73                 	db	115	;'s'
  2885  00F4A5  74                 	db	116	;'t'
  2886  00F4A6  6F                 	db	111	;'o'
  2887  00F4A7  70                 	db	112	;'p'
  2888  00F4A8  20                 	db	32
  2889  00F4A9  62                 	db	98	;'b'
  2890  00F4AA  69                 	db	105	;'i'
  2891  00F4AB  74                 	db	116	;'t'
  2892  00F4AC  0A                 	db	10
  2893  00F4AD  0D                 	db	13
  2894  00F4AE  20                 	db	32
  2895  00F4AF  20                 	db	32
  2896  00F4B0  20                 	db	32
  2897  00F4B1  20                 	db	32
  2898  00F4B2  43                 	db	67	;'C'
  2899  00F4B3  6F                 	db	111	;'o'
  2900  00F4B4  6D                 	db	109	;'m'
  2901  00F4B5  6D                 	db	109	;'m'
  2902  00F4B6  61                 	db	97	;'a'
  2903  00F4B7  6E                 	db	110	;'n'
  2904  00F4B8  64                 	db	100	;'d'
  2905  00F4B9  73                 	db	115	;'s'
  2906  00F4BA  20                 	db	32
  2907  00F4BB  61                 	db	97	;'a'
  2908  00F4BC  72                 	db	114	;'r'
  2909  00F4BD  65                 	db	101	;'e'
  2910  00F4BE  20                 	db	32
  2911  00F4BF  63                 	db	99	;'c'
  2912  00F4C0  61                 	db	97	;'a'
  2913  00F4C1  73                 	db	115	;'s'
  2914  00F4C2  65                 	db	101	;'e'
  2915  00F4C3  20                 	db	32
  2916  00F4C4  73                 	db	115	;'s'
  2917  00F4C5  65                 	db	101	;'e'
  2918  00F4C6  6E                 	db	110	;'n'
  2919  00F4C7  73                 	db	115	;'s'
  2920  00F4C8  69                 	db	105	;'i'
  2921  00F4C9  74                 	db	116	;'t'
  2922  00F4CA  69                 	db	105	;'i'
  2923  00F4CB  76                 	db	118	;'v'
  2924  00F4CC  65                 	db	101	;'e'
  2925  00F4CD  0A                 	db	10
  2926  00F4CE  0D                 	db	13
  2927  00F4CF  20                 	db	32
  2928  00F4D0  20                 	db	32
  2929  00F4D1  20                 	db	32
  2930  00F4D2  20                 	db	32
  2931  00F4D3  45                 	db	69	;'E'
  2932  00F4D4  6E                 	db	110	;'n'
  2933  00F4D5  74                 	db	116	;'t'
  2934  00F4D6  65                 	db	101	;'e'
  2935  00F4D7  72                 	db	114	;'r'
  2936  00F4D8  20                 	db	32
  2937  00F4D9  61                 	db	97	;'a'
  2938  00F4DA  20                 	db	32
  2939  00F4DB  63                 	db	99	;'c'
  2940  00F4DC  6F                 	db	111	;'o'
  2941  00F4DD  6D                 	db	109	;'m'
  2942  00F4DE  6D                 	db	109	;'m'
  2943  00F4DF  61                 	db	97	;'a'
  2944  00F4E0  6E                 	db	110	;'n'
  2945  00F4E1  64                 	db	100	;'d'
  2946  00F4E2  2C                 	db	44
  2947  00F4E3  20                 	db	32
  2948  00F4E4  6F                 	db	111	;'o'
  2949  00F4E5  72                 	db	114	;'r'
  2950  00F4E6  20                 	db	32
  2951  00F4E7  65                 	db	101	;'e'
  2952  00F4E8  6E                 	db	110	;'n'
  2953  00F4E9  74                 	db	116	;'t'
  2954  00F4EA  65                 	db	101	;'e'
  2955  00F4EB  72                 	db	114	;'r'
  2956  00F4EC  20                 	db	32
  2957  00F4ED  48                 	db	72	;'H'
  2958  00F4EE  65                 	db	101	;'e'
  2959  00F4EF  6C                 	db	108	;'l'
  2960  00F4F0  70                 	db	112	;'p'
  2961  00F4F1  20                 	db	32
  2962  00F4F2  66                 	db	102	;'f'
  2963  00F4F3  6F                 	db	111	;'o'
  2964  00F4F4  72                 	db	114	;'r'
  2965  00F4F5  20                 	db	32
  2966  00F4F6  6C                 	db	108	;'l'
  2967  00F4F7  69                 	db	105	;'i'
  2968  00F4F8  73                 	db	115	;'s'
  2969  00F4F9  74                 	db	116	;'t'
  2970  00F4FA  20                 	db	32
  2971  00F4FB  6F                 	db	111	;'o'
  2972  00F4FC  66                 	db	102	;'f'
  2973  00F4FD  20                 	db	32
  2974  00F4FE  63                 	db	99	;'c'
  2975  00F4FF  6F                 	db	111	;'o'
  2976  00F500  6D                 	db	109	;'m'
  2977  00F501  6D                 	db	109	;'m'
  2978  00F502  61                 	db	97	;'a'
  2979  00F503  6E                 	db	110	;'n'
  2980  00F504  64                 	db	100	;'d'
  2981  00F505  73                 	db	115	;'s'
  2982  00F506  0A                 	db	10
  2983  00F507  0D                 	db	13
  2984  00F508  00                 	db	0
  2985  00F509                     STR_111:
  2986  00F509  49                 	db	73	;'I'
  2987  00F50A  66                 	db	102	;'f'
  2988  00F50B  20                 	db	32
  2989  00F50C  79                 	db	121	;'y'
  2990  00F50D  6F                 	db	111	;'o'
  2991  00F50E  75                 	db	117	;'u'
  2992  00F50F  27                 	db	39
  2993  00F510  64                 	db	100	;'d'
  2994  00F511  20                 	db	32
  2995  00F512  6C                 	db	108	;'l'
  2996  00F513  69                 	db	105	;'i'
  2997  00F514  6B                 	db	107	;'k'
  2998  00F515  65                 	db	101	;'e'
  2999  00F516  20                 	db	32
  3000  00F517  74                 	db	116	;'t'
  3001  00F518  6F                 	db	111	;'o'
  3002  00F519  20                 	db	32
  3003  00F51A  63                 	db	99	;'c'
  3004  00F51B  6F                 	db	111	;'o'
  3005  00F51C  6D                 	db	109	;'m'
  3006  00F51D  70                 	db	112	;'p'
  3007  00F51E  6C                 	db	108	;'l'
  3008  00F51F  65                 	db	101	;'e'
  3009  00F520  74                 	db	116	;'t'
  3010  00F521  65                 	db	101	;'e'
  3011  00F522  6C                 	db	108	;'l'
  3012  00F523  79                 	db	121	;'y'
  3013  00F524  20                 	db	32
  3014  00F525  65                 	db	101	;'e'
  3015  00F526  6E                 	db	110	;'n'
  3016  00F527  61                 	db	97	;'a'
  3017  00F528  62                 	db	98	;'b'
  3018  00F529  6C                 	db	108	;'l'
  3019  00F52A  65                 	db	101	;'e'
  3020  00F52B  20                 	db	32
  3021  00F52C  6F                 	db	111	;'o'
  3022  00F52D  72                 	db	114	;'r'
  3023  00F52E  20                 	db	32
  3024  00F52F  64                 	db	100	;'d'
  3025  00F530  69                 	db	105	;'i'
  3026  00F531  73                 	db	115	;'s'
  3027  00F532  61                 	db	97	;'a'
  3028  00F533  62                 	db	98	;'b'
  3029  00F534  6C                 	db	108	;'l'
  3030  00F535  65                 	db	101	;'e'
  3031  00F536  20                 	db	32
  3032  00F537  74                 	db	116	;'t'
  3033  00F538  68                 	db	104	;'h'
  3034  00F539  65                 	db	101	;'e'
  3035  00F53A  20                 	db	32
  3036  00F53B  6C                 	db	108	;'l'
  3037  00F53C  6F                 	db	111	;'o'
  3038  00F53D  61                 	db	97	;'a'
  3039  00F53E  64                 	db	100	;'d'
  3040  00F53F  2C                 	db	44
  3041  00F540  20                 	db	32
  3042  00F541  64                 	db	100	;'d'
  3043  00F542  69                 	db	105	;'i'
  3044  00F543  73                 	db	115	;'s'
  3045  00F544  61                 	db	97	;'a'
  3046  00F545  62                 	db	98	;'b'
  3047  00F546  6C                 	db	108	;'l'
  3048  00F547  65                 	db	101	;'e'
  3049  00F548  20                 	db	32
  3050  00F549  64                 	db	100	;'d'
  3051  00F54A  69                 	db	105	;'i'
  3052  00F54B  6D                 	db	109	;'m'
  3053  00F54C  6D                 	db	109	;'m'
  3054  00F54D  69                 	db	105	;'i'
  3055  00F54E  6E                 	db	110	;'n'
  3056  00F54F  67                 	db	103	;'g'
  3057  00F550  20                 	db	32
  3058  00F551  61                 	db	97	;'a'
  3059  00F552  6E                 	db	110	;'n'
  3060  00F553  64                 	db	100	;'d'
  3061  00F554  20                 	db	32
  3062  00F555  75                 	db	117	;'u'
  3063  00F556  73                 	db	115	;'s'
  3064  00F557  65                 	db	101	;'e'
  3065  00F558  20                 	db	32
  3066  00F559  72                 	db	114	;'r'
  3067  00F55A  65                 	db	101	;'e'
  3068  00F55B  73                 	db	115	;'s'
  3069  00F55C  70                 	db	112	;'p'
  3070  00F55D  65                 	db	101	;'e'
  3071  00F55E  63                 	db	99	;'c'
  3072  00F55F  74                 	db	116	;'t'
  3073  00F560  69                 	db	105	;'i'
  3074  00F561  76                 	db	118	;'v'
  3075  00F562  65                 	db	101	;'e'
  3076  00F563  20                 	db	32
  3077  00F564  63                 	db	99	;'c'
  3078  00F565  6F                 	db	111	;'o'
  3079  00F566  6D                 	db	109	;'m'
  3080  00F567  6D                 	db	109	;'m'
  3081  00F568  61                 	db	97	;'a'
  3082  00F569  6E                 	db	110	;'n'
  3083  00F56A  64                 	db	100	;'d'
  3084  00F56B  73                 	db	115	;'s'
  3085  00F56C  0A                 	db	10
  3086  00F56D  0D                 	db	13
  3087  00F56E  00                 	db	0
  3088  00F56F                     STR_110:
  3089  00F56F  45                 	db	69	;'E'
  3090  00F570  52                 	db	82	;'R'
  3091  00F571  52                 	db	82	;'R'
  3092  00F572  4F                 	db	79	;'O'
  3093  00F573  52                 	db	82	;'R'
  3094  00F574  3A                 	db	58	;':'
  3095  00F575  20                 	db	32
  3096  00F576  50                 	db	80	;'P'
  3097  00F577  6C                 	db	108	;'l'
  3098  00F578  65                 	db	101	;'e'
  3099  00F579  61                 	db	97	;'a'
  3100  00F57A  73                 	db	115	;'s'
  3101  00F57B  65                 	db	101	;'e'
  3102  00F57C  20                 	db	32
  3103  00F57D  73                 	db	115	;'s'
  3104  00F57E  65                 	db	101	;'e'
  3105  00F57F  74                 	db	116	;'t'
  3106  00F580  20                 	db	32
  3107  00F581  64                 	db	100	;'d'
  3108  00F582  69                 	db	105	;'i'
  3109  00F583  6D                 	db	109	;'m'
  3110  00F584  6D                 	db	109	;'m'
  3111  00F585  69                 	db	105	;'i'
  3112  00F586  6E                 	db	110	;'n'
  3113  00F587  67                 	db	103	;'g'
  3114  00F588  20                 	db	32
  3115  00F589  70                 	db	112	;'p'
  3116  00F58A  65                 	db	101	;'e'
  3117  00F58B  72                 	db	114	;'r'
  3118  00F58C  63                 	db	99	;'c'
  3119  00F58D  65                 	db	101	;'e'
  3120  00F58E  6E                 	db	110	;'n'
  3121  00F58F  74                 	db	116	;'t'
  3122  00F590  61                 	db	97	;'a'
  3123  00F591  67                 	db	103	;'g'
  3124  00F592  65                 	db	101	;'e'
  3125  00F593  20                 	db	32
  3126  00F594  74                 	db	116	;'t'
  3127  00F595  6F                 	db	111	;'o'
  3128  00F596  20                 	db	32
  3129  00F597  61                 	db	97	;'a'
  3130  00F598  6E                 	db	110	;'n'
  3131  00F599  20                 	db	32
  3132  00F59A  69                 	db	105	;'i'
  3133  00F59B  6E                 	db	110	;'n'
  3134  00F59C  74                 	db	116	;'t'
  3135  00F59D  65                 	db	101	;'e'
  3136  00F59E  67                 	db	103	;'g'
  3137  00F59F  65                 	db	101	;'e'
  3138  00F5A0  72                 	db	114	;'r'
  3139  00F5A1  20                 	db	32
  3140  00F5A2  67                 	db	103	;'g'
  3141  00F5A3  72                 	db	114	;'r'
  3142  00F5A4  65                 	db	101	;'e'
  3143  00F5A5  61                 	db	97	;'a'
  3144  00F5A6  74                 	db	116	;'t'
  3145  00F5A7  65                 	db	101	;'e'
  3146  00F5A8  72                 	db	114	;'r'
  3147  00F5A9  20                 	db	32
  3148  00F5AA  74                 	db	116	;'t'
  3149  00F5AB  68                 	db	104	;'h'
  3150  00F5AC  61                 	db	97	;'a'
  3151  00F5AD  6E                 	db	110	;'n'
  3152  00F5AE  20                 	db	32
  3153  00F5AF  30                 	db	48	;'0'
  3154  00F5B0  20                 	db	32
  3155  00F5B1  61                 	db	97	;'a'
  3156  00F5B2  6E                 	db	110	;'n'
  3157  00F5B3  64                 	db	100	;'d'
  3158  00F5B4  20                 	db	32
  3159  00F5B5  6C                 	db	108	;'l'
  3160  00F5B6  65                 	db	101	;'e'
  3161  00F5B7  73                 	db	115	;'s'
  3162  00F5B8  73                 	db	115	;'s'
  3163  00F5B9  20                 	db	32
  3164  00F5BA  74                 	db	116	;'t'
  3165  00F5BB  68                 	db	104	;'h'
  3166  00F5BC  61                 	db	97	;'a'
  3167  00F5BD  6E                 	db	110	;'n'
  3168  00F5BE  20                 	db	32
  3169  00F5BF  31                 	db	49	;'1'
  3170  00F5C0  30                 	db	48	;'0'
  3171  00F5C1  30                 	db	48	;'0'
  3172  00F5C2  0A                 	db	10
  3173  00F5C3  0D                 	db	13
  3174  00F5C4  00                 	db	0
  3175  00F5C5                     STR_54:
  3176  00F5C5  44                 	db	68	;'D'
  3177  00F5C6  65                 	db	101	;'e'
  3178  00F5C7  76                 	db	118	;'v'
  3179  00F5C8  69                 	db	105	;'i'
  3180  00F5C9  63                 	db	99	;'c'
  3181  00F5CA  65                 	db	101	;'e'
  3182  00F5CB  20                 	db	32
  3183  00F5CC  49                 	db	73	;'I'
  3184  00F5CD  44                 	db	68	;'D'
  3185  00F5CE  20                 	db	32
  3186  00F5CF  73                 	db	115	;'s'
  3187  00F5D0  74                 	db	116	;'t'
  3188  00F5D1  6F                 	db	111	;'o'
  3189  00F5D2  72                 	db	114	;'r'
  3190  00F5D3  65                 	db	101	;'e'
  3191  00F5D4  64                 	db	100	;'d'
  3192  00F5D5  20                 	db	32
  3193  00F5D6  69                 	db	105	;'i'
  3194  00F5D7  6E                 	db	110	;'n'
  3195  00F5D8  20                 	db	32
  3196  00F5D9  46                 	db	70	;'F'
  3197  00F5DA  6C                 	db	108	;'l'
  3198  00F5DB  61                 	db	97	;'a'
  3199  00F5DC  73                 	db	115	;'s'
  3200  00F5DD  68                 	db	104	;'h'
  3201  00F5DE  20                 	db	32
  3202  00F5DF  69                 	db	105	;'i'
  3203  00F5E0  73                 	db	115	;'s'
  3204  00F5E1  3A                 	db	58	;':'
  3205  00F5E2  20                 	db	32
  3206  00F5E3  30                 	db	48	;'0'
  3207  00F5E4  78                 	db	120	;'x'
  3208  00F5E5  25                 	db	37
  3209  00F5E6  58                 	db	88	;'X'
  3210  00F5E7  2E                 	db	46
  3211  00F5E8  20                 	db	32
  3212  00F5E9  54                 	db	84	;'T'
  3213  00F5EA  68                 	db	104	;'h'
  3214  00F5EB  69                 	db	105	;'i'
  3215  00F5EC  73                 	db	115	;'s'
  3216  00F5ED  20                 	db	32
  3217  00F5EE  63                 	db	99	;'c'
  3218  00F5EF  6F                 	db	111	;'o'
  3219  00F5F0  72                 	db	114	;'r'
  3220  00F5F1  72                 	db	114	;'r'
  3221  00F5F2  65                 	db	101	;'e'
  3222  00F5F3  73                 	db	115	;'s'
  3223  00F5F4  70                 	db	112	;'p'
  3224  00F5F5  6F                 	db	111	;'o'
  3225  00F5F6  6E                 	db	110	;'n'
  3226  00F5F7  64                 	db	100	;'d'
  3227  00F5F8  73                 	db	115	;'s'
  3228  00F5F9  20                 	db	32
  3229  00F5FA  74                 	db	116	;'t'
  3230  00F5FB  6F                 	db	111	;'o'
  3231  00F5FC  20                 	db	32
  3232  00F5FD  61                 	db	97	;'a'
  3233  00F5FE  20                 	db	32
  3234  00F5FF  64                 	db	100	;'d'
  3235  00F600  65                 	db	101	;'e'
  3236  00F601  76                 	db	118	;'v'
  3237  00F602  69                 	db	105	;'i'
  3238  00F603  63                 	db	99	;'c'
  3239  00F604  65                 	db	101	;'e'
  3240  00F605  20                 	db	32
  3241  00F606  70                 	db	112	;'p'
  3242  00F607  61                 	db	97	;'a'
  3243  00F608  72                 	db	114	;'r'
  3244  00F609  74                 	db	116	;'t'
  3245  00F60A  20                 	db	32
  3246  00F60B  6E                 	db	110	;'n'
  3247  00F60C  75                 	db	117	;'u'
  3248  00F60D  6D                 	db	109	;'m'
  3249  00F60E  62                 	db	98	;'b'
  3250  00F60F  65                 	db	101	;'e'
  3251  00F610  72                 	db	114	;'r'
  3252  00F611  20                 	db	32
  3253  00F612  6F                 	db	111	;'o'
  3254  00F613  66                 	db	102	;'f'
  3255  00F614  20                 	db	32
  3256  00F615  25                 	db	37
  3257  00F616  73                 	db	115	;'s'
  3258  00F617  0A                 	db	10
  3259  00F618  0D                 	db	13
  3260  00F619  00                 	db	0
  3261  00F61A                     STR_115:
  3262  00F61A  54                 	db	84	;'T'
  3263  00F61B  68                 	db	104	;'h'
  3264  00F61C  69                 	db	105	;'i'
  3265  00F61D  73                 	db	115	;'s'
  3266  00F61E  20                 	db	32
  3267  00F61F  63                 	db	99	;'c'
  3268  00F620  6F                 	db	111	;'o'
  3269  00F621  72                 	db	114	;'r'
  3270  00F622  72                 	db	114	;'r'
  3271  00F623  65                 	db	101	;'e'
  3272  00F624  73                 	db	115	;'s'
  3273  00F625  70                 	db	112	;'p'
  3274  00F626  6F                 	db	111	;'o'
  3275  00F627  6E                 	db	110	;'n'
  3276  00F628  64                 	db	100	;'d'
  3277  00F629  73                 	db	115	;'s'
  3278  00F62A  20                 	db	32
  3279  00F62B  74                 	db	116	;'t'
  3280  00F62C  6F                 	db	111	;'o'
  3281  00F62D  20                 	db	32
  3282  00F62E  61                 	db	97	;'a'
  3283  00F62F  20                 	db	32
  3284  00F630  31                 	db	49	;'1'
  3285  00F631  36                 	db	54	;'6'
  3286  00F632  20                 	db	32
  3287  00F633  62                 	db	98	;'b'
  3288  00F634  69                 	db	105	;'i'
  3289  00F635  74                 	db	116	;'t'
  3290  00F636  20                 	db	32
  3291  00F637  74                 	db	116	;'t'
  3292  00F638  69                 	db	105	;'i'
  3293  00F639  6D                 	db	109	;'m'
  3294  00F63A  65                 	db	101	;'e'
  3295  00F63B  72                 	db	114	;'r'
  3296  00F63C  20                 	db	32
  3297  00F63D  70                 	db	112	;'p'
  3298  00F63E  72                 	db	114	;'r'
  3299  00F63F  65                 	db	101	;'e'
  3300  00F640  2D                 	db	45
  3301  00F641  6C                 	db	108	;'l'
  3302  00F642  6F                 	db	111	;'o'
  3303  00F643  61                 	db	97	;'a'
  3304  00F644  64                 	db	100	;'d'
  3305  00F645  20                 	db	32
  3306  00F646  76                 	db	118	;'v'
  3307  00F647  61                 	db	97	;'a'
  3308  00F648  6C                 	db	108	;'l'
  3309  00F649  75                 	db	117	;'u'
  3310  00F64A  65                 	db	101	;'e'
  3311  00F64B  20                 	db	32
  3312  00F64C  6F                 	db	111	;'o'
  3313  00F64D  66                 	db	102	;'f'
  3314  00F64E  20                 	db	32
  3315  00F64F  30                 	db	48	;'0'
  3316  00F650  78                 	db	120	;'x'
  3317  00F651  25                 	db	37
  3318  00F652  58                 	db	88	;'X'
  3319  00F653  20                 	db	32
  3320  00F654  28                 	db	40
  3321  00F655  25                 	db	37
  3322  00F656  75                 	db	117	;'u'
  3323  00F657  20                 	db	32
  3324  00F658  4C                 	db	76	;'L'
  3325  00F659  53                 	db	83	;'S'
  3326  00F65A  42                 	db	66	;'B'
  3327  00F65B  73                 	db	115	;'s'
  3328  00F65C  29                 	db	41
  3329  00F65D  20                 	db	32
  3330  00F65E  0A                 	db	10
  3331  00F65F  0D                 	db	13
  3332  00F660  00                 	db	0
  3333  00F661                     STR_74:
  3334  00F661  56                 	db	86	;'V'
  3335  00F662  43                 	db	67	;'C'
  3336  00F663  43                 	db	67	;'C'
  3337  00F664  20                 	db	32
  3338  00F665  4F                 	db	79	;'O'
  3339  00F666  76                 	db	118	;'v'
  3340  00F667  65                 	db	101	;'e'
  3341  00F668  72                 	db	114	;'r'
  3342  00F669  76                 	db	118	;'v'
  3343  00F66A  6F                 	db	111	;'o'
  3344  00F66B  6C                 	db	108	;'l'
  3345  00F66C  74                 	db	116	;'t'
  3346  00F66D  61                 	db	97	;'a'
  3347  00F66E  67                 	db	103	;'g'
  3348  00F66F  65                 	db	101	;'e'
  3349  00F670  20                 	db	32
  3350  00F671  63                 	db	99	;'c'
  3351  00F672  6F                 	db	111	;'o'
  3352  00F673  6E                 	db	110	;'n'
  3353  00F674  64                 	db	100	;'d'
  3354  00F675  69                 	db	105	;'i'
  3355  00F676  74                 	db	116	;'t'
  3356  00F677  69                 	db	105	;'i'
  3357  00F678  6F                 	db	111	;'o'
  3358  00F679  6E                 	db	110	;'n'
  3359  00F67A  20                 	db	32
  3360  00F67B  68                 	db	104	;'h'
  3361  00F67C  61                 	db	97	;'a'
  3362  00F67D  73                 	db	115	;'s'
  3363  00F67E  20                 	db	32
  3364  00F67F  6F                 	db	111	;'o'
  3365  00F680  63                 	db	99	;'c'
  3366  00F681  63                 	db	99	;'c'
  3367  00F682  75                 	db	117	;'u'
  3368  00F683  72                 	db	114	;'r'
  3369  00F684  72                 	db	114	;'r'
  3370  00F685  65                 	db	101	;'e'
  3371  00F686  64                 	db	100	;'d'
  3372  00F687  20                 	db	32
  3373  00F688  28                 	db	40
  3374  00F689  56                 	db	86	;'V'
  3375  00F68A  43                 	db	67	;'C'
  3376  00F68B  43                 	db	67	;'C'
  3377  00F68C  20                 	db	32
  3378  00F68D  68                 	db	104	;'h'
  3379  00F68E  61                 	db	97	;'a'
  3380  00F68F  73                 	db	115	;'s'
  3381  00F690  20                 	db	32
  3382  00F691  65                 	db	101	;'e'
  3383  00F692  78                 	db	120	;'x'
  3384  00F693  63                 	db	99	;'c'
  3385  00F694  65                 	db	101	;'e'
  3386  00F695  65                 	db	101	;'e'
  3387  00F696  64                 	db	100	;'d'
  3388  00F697  65                 	db	101	;'e'
  3389  00F698  64                 	db	100	;'d'
  3390  00F699  20                 	db	32
  3391  00F69A  33                 	db	51	;'3'
  3392  00F69B  2E                 	db	46
  3393  00F69C  36                 	db	54	;'6'
  3394  00F69D  30                 	db	48	;'0'
  3395  00F69E  56                 	db	86	;'V'
  3396  00F69F  29                 	db	41
  3397  00F6A0  0A                 	db	10
  3398  00F6A1  0D                 	db	13
  3399  00F6A2  00                 	db	0
  3400  00F6A3                     STR_58:
  3401  00F6A3  54                 	db	84	;'T'
  3402  00F6A4  68                 	db	104	;'h'
  3403  00F6A5  65                 	db	101	;'e'
  3404  00F6A6  20                 	db	32
  3405  00F6A7  66                 	db	102	;'f'
  3406  00F6A8  6F                 	db	111	;'o'
  3407  00F6A9  6C                 	db	108	;'l'
  3408  00F6AA  6C                 	db	108	;'l'
  3409  00F6AB  6F                 	db	111	;'o'
  3410  00F6AC  77                 	db	119	;'w'
  3411  00F6AD  69                 	db	105	;'i'
  3412  00F6AE  6E                 	db	110	;'n'
  3413  00F6AF  67                 	db	103	;'g'
  3414  00F6B0  20                 	db	32
  3415  00F6B1  55                 	db	85	;'U'
  3416  00F6B2  73                 	db	115	;'s'
  3417  00F6B3  65                 	db	101	;'e'
  3418  00F6B4  72                 	db	114	;'r'
  3419  00F6B5  20                 	db	32
  3420  00F6B6  49                 	db	73	;'I'
  3421  00F6B7  44                 	db	68	;'D'
  3422  00F6B8  73                 	db	115	;'s'
  3423  00F6B9  20                 	db	32
  3424  00F6BA  68                 	db	104	;'h'
  3425  00F6BB  61                 	db	97	;'a'
  3426  00F6BC  76                 	db	118	;'v'
  3427  00F6BD  65                 	db	101	;'e'
  3428  00F6BE  20                 	db	32
  3429  00F6BF  62                 	db	98	;'b'
  3430  00F6C0  65                 	db	101	;'e'
  3431  00F6C1  65                 	db	101	;'e'
  3432  00F6C2  6E                 	db	110	;'n'
  3433  00F6C3  20                 	db	32
  3434  00F6C4  72                 	db	114	;'r'
  3435  00F6C5  65                 	db	101	;'e'
  3436  00F6C6  74                 	db	116	;'t'
  3437  00F6C7  72                 	db	114	;'r'
  3438  00F6C8  69                 	db	105	;'i'
  3439  00F6C9  65                 	db	101	;'e'
  3440  00F6CA  76                 	db	118	;'v'
  3441  00F6CB  65                 	db	101	;'e'
  3442  00F6CC  64                 	db	100	;'d'
  3443  00F6CD  20                 	db	32
  3444  00F6CE  66                 	db	102	;'f'
  3445  00F6CF  72                 	db	114	;'r'
  3446  00F6D0  6F                 	db	111	;'o'
  3447  00F6D1  6D                 	db	109	;'m'
  3448  00F6D2  20                 	db	32
  3449  00F6D3  66                 	db	102	;'f'
  3450  00F6D4  6C                 	db	108	;'l'
  3451  00F6D5  61                 	db	97	;'a'
  3452  00F6D6  73                 	db	115	;'s'
  3453  00F6D7  68                 	db	104	;'h'
  3454  00F6D8  20                 	db	32
  3455  00F6D9  6D                 	db	109	;'m'
  3456  00F6DA  65                 	db	101	;'e'
  3457  00F6DB  6D                 	db	109	;'m'
  3458  00F6DC  6F                 	db	111	;'o'
  3459  00F6DD  72                 	db	114	;'r'
  3460  00F6DE  79                 	db	121	;'y'
  3461  00F6DF  3A                 	db	58	;':'
  3462  00F6E0  0A                 	db	10
  3463  00F6E1  0D                 	db	13
  3464  00F6E2  00                 	db	0
  3465  00F6E3                     STR_114:
  3466  00F6E3  43                 	db	67	;'C'
  3467  00F6E4  61                 	db	97	;'a'
  3468  00F6E5  6C                 	db	108	;'l'
  3469  00F6E6  63                 	db	99	;'c'
  3470  00F6E7  75                 	db	117	;'u'
  3471  00F6E8  6C                 	db	108	;'l'
  3472  00F6E9  61                 	db	97	;'a'
  3473  00F6EA  74                 	db	116	;'t'
  3474  00F6EB  65                 	db	101	;'e'
  3475  00F6EC  64                 	db	100	;'d'
  3476  00F6ED  20                 	db	32
  3477  00F6EE  54                 	db	84	;'T'
  3478  00F6EF  52                 	db	82	;'R'
  3479  00F6F0  49                 	db	73	;'I'
  3480  00F6F1  41                 	db	65	;'A'
  3481  00F6F2  43                 	db	67	;'C'
  3482  00F6F3  20                 	db	32
  3483  00F6F4  66                 	db	102	;'f'
  3484  00F6F5  69                 	db	105	;'i'
  3485  00F6F6  72                 	db	114	;'r'
  3486  00F6F7  69                 	db	105	;'i'
  3487  00F6F8  6E                 	db	110	;'n'
  3488  00F6F9  67                 	db	103	;'g'
  3489  00F6FA  20                 	db	32
  3490  00F6FB  61                 	db	97	;'a'
  3491  00F6FC  6E                 	db	110	;'n'
  3492  00F6FD  67                 	db	103	;'g'
  3493  00F6FE  6C                 	db	108	;'l'
  3494  00F6FF  65                 	db	101	;'e'
  3495  00F700  20                 	db	32
  3496  00F701  69                 	db	105	;'i'
  3497  00F702  73                 	db	115	;'s'
  3498  00F703  20                 	db	32
  3499  00F704  25                 	db	37
  3500  00F705  2E                 	db	46
  3501  00F706  33                 	db	51	;'3'
  3502  00F707  66                 	db	102	;'f'
  3503  00F708  20                 	db	32
  3504  00F709  72                 	db	114	;'r'
  3505  00F70A  61                 	db	97	;'a'
  3506  00F70B  64                 	db	100	;'d'
  3507  00F70C  69                 	db	105	;'i'
  3508  00F70D  61                 	db	97	;'a'
  3509  00F70E  6E                 	db	110	;'n'
  3510  00F70F  73                 	db	115	;'s'
  3511  00F710  20                 	db	32
  3512  00F711  28                 	db	40
  3513  00F712  25                 	db	37
  3514  00F713  2E                 	db	46
  3515  00F714  33                 	db	51	;'3'
  3516  00F715  66                 	db	102	;'f'
  3517  00F716  20                 	db	32
  3518  00F717  64                 	db	100	;'d'
  3519  00F718  65                 	db	101	;'e'
  3520  00F719  67                 	db	103	;'g'
  3521  00F71A  72                 	db	114	;'r'
  3522  00F71B  65                 	db	101	;'e'
  3523  00F71C  65                 	db	101	;'e'
  3524  00F71D  73                 	db	115	;'s'
  3525  00F71E  29                 	db	41
  3526  00F71F  0A                 	db	10
  3527  00F720  0D                 	db	13
  3528  00F721  00                 	db	0
  3529  00F722                     STR_123:
  3530  00F722  53                 	db	83	;'S'
  3531  00F723  79                 	db	121	;'y'
  3532  00F724  73                 	db	115	;'s'
  3533  00F725  74                 	db	116	;'t'
  3534  00F726  65                 	db	101	;'e'
  3535  00F727  6D                 	db	109	;'m'
  3536  00F728  20                 	db	32
  3537  00F729  70                 	db	112	;'p'
  3538  00F72A  61                 	db	97	;'a'
  3539  00F72B  72                 	db	114	;'r'
  3540  00F72C  61                 	db	97	;'a'
  3541  00F72D  6D                 	db	109	;'m'
  3542  00F72E  65                 	db	101	;'e'
  3543  00F72F  74                 	db	116	;'t'
  3544  00F730  65                 	db	101	;'e'
  3545  00F731  72                 	db	114	;'r'
  3546  00F732  73                 	db	115	;'s'
  3547  00F733  20                 	db	32
  3548  00F734  61                 	db	97	;'a'
  3549  00F735  6E                 	db	110	;'n'
  3550  00F736  64                 	db	100	;'d'
  3551  00F737  20                 	db	32
  3552  00F738  61                 	db	97	;'a'
  3553  00F739  66                 	db	102	;'f'
  3554  00F73A  66                 	db	102	;'f'
  3555  00F73B  69                 	db	105	;'i'
  3556  00F73C  72                 	db	114	;'r'
  3557  00F73D  6D                 	db	109	;'m'
  3558  00F73E  61                 	db	97	;'a'
  3559  00F73F  74                 	db	116	;'t'
  3560  00F740  69                 	db	105	;'i'
  3561  00F741  76                 	db	118	;'v'
  3562  00F742  65                 	db	101	;'e'
  3563  00F743  20                 	db	32
  3564  00F744  72                 	db	114	;'r'
  3565  00F745  65                 	db	101	;'e'
  3566  00F746  73                 	db	115	;'s'
  3567  00F747  70                 	db	112	;'p'
  3568  00F748  6F                 	db	111	;'o'
  3569  00F749  6E                 	db	110	;'n'
  3570  00F74A  73                 	db	115	;'s'
  3571  00F74B  65                 	db	101	;'e'
  3572  00F74C  73                 	db	115	;'s'
  3573  00F74D  20                 	db	32
  3574  00F74E  61                 	db	97	;'a'
  3575  00F74F  70                 	db	112	;'p'
  3576  00F750  70                 	db	112	;'p'
  3577  00F751  65                 	db	101	;'e'
  3578  00F752  61                 	db	97	;'a'
  3579  00F753  72                 	db	114	;'r'
  3580  00F754  20                 	db	32
  3581  00F755  69                 	db	105	;'i'
  3582  00F756  6E                 	db	110	;'n'
  3583  00F757  20                 	db	32
  3584  00F758  67                 	db	103	;'g'
  3585  00F759  72                 	db	114	;'r'
  3586  00F75A  65                 	db	101	;'e'
  3587  00F75B  65                 	db	101	;'e'
  3588  00F75C  6E                 	db	110	;'n'
  3589  00F75D  0A                 	db	10
  3590  00F75E  0D                 	db	13
  3591  00F75F  00                 	db	0
  3592  00F760                     STR_117:
  3593  00F760  44                 	db	68	;'D'
  3594  00F761  65                 	db	101	;'e'
  3595  00F762  76                 	db	118	;'v'
  3596  00F763  69                 	db	105	;'i'
  3597  00F764  63                 	db	99	;'c'
  3598  00F765  65                 	db	101	;'e'
  3599  00F766  20                 	db	32
  3600  00F767  6F                 	db	111	;'o'
  3601  00F768  6E                 	db	110	;'n'
  3602  00F769  20                 	db	32
  3603  00F76A  74                 	db	116	;'t'
  3604  00F76B  69                 	db	105	;'i'
  3605  00F76C  6D                 	db	109	;'m'
  3606  00F76D  65                 	db	101	;'e'
  3607  00F76E  20                 	db	32
  3608  00F76F  73                 	db	115	;'s'
  3609  00F770  69                 	db	105	;'i'
  3610  00F771  6E                 	db	110	;'n'
  3611  00F772  63                 	db	99	;'c'
  3612  00F773  65                 	db	101	;'e'
  3613  00F774  20                 	db	32
  3614  00F775  6C                 	db	108	;'l'
  3615  00F776  61                 	db	97	;'a'
  3616  00F777  73                 	db	115	;'s'
  3617  00F778  74                 	db	116	;'t'
  3618  00F779  20                 	db	32
  3619  00F77A  72                 	db	114	;'r'
  3620  00F77B  65                 	db	101	;'e'
  3621  00F77C  73                 	db	115	;'s'
  3622  00F77D  65                 	db	101	;'e'
  3623  00F77E  74                 	db	116	;'t'
  3624  00F77F  20                 	db	32
  3625  00F780  63                 	db	99	;'c'
  3626  00F781  6F                 	db	111	;'o'
  3627  00F782  6E                 	db	110	;'n'
  3628  00F783  64                 	db	100	;'d'
  3629  00F784  69                 	db	105	;'i'
  3630  00F785  74                 	db	116	;'t'
  3631  00F786  69                 	db	105	;'i'
  3632  00F787  6F                 	db	111	;'o'
  3633  00F788  6E                 	db	110	;'n'
  3634  00F789  20                 	db	32
  3635  00F78A  69                 	db	105	;'i'
  3636  00F78B  73                 	db	115	;'s'
  3637  00F78C  20                 	db	32
  3638  00F78D  25                 	db	37
  3639  00F78E  64                 	db	100	;'d'
  3640  00F78F  20                 	db	32
  3641  00F790  73                 	db	115	;'s'
  3642  00F791  65                 	db	101	;'e'
  3643  00F792  63                 	db	99	;'c'
  3644  00F793  6F                 	db	111	;'o'
  3645  00F794  6E                 	db	110	;'n'
  3646  00F795  64                 	db	100	;'d'
  3647  00F796  73                 	db	115	;'s'
  3648  00F797  0A                 	db	10
  3649  00F798  0D                 	db	13
  3650  00F799  00                 	db	0
  3651  00F79A                     STR_83:
  3652  00F79A  46                 	db	70	;'F'
  3653  00F79B  69                 	db	105	;'i'
  3654  00F79C  78                 	db	120	;'x'
  3655  00F79D  65                 	db	101	;'e'
  3656  00F79E  64                 	db	100	;'d'
  3657  00F79F  20                 	db	32
  3658  00F7A0  56                 	db	86	;'V'
  3659  00F7A1  6F                 	db	111	;'o'
  3660  00F7A2  6C                 	db	108	;'l'
  3661  00F7A3  74                 	db	116	;'t'
  3662  00F7A4  61                 	db	97	;'a'
  3663  00F7A5  67                 	db	103	;'g'
  3664  00F7A6  65                 	db	101	;'e'
  3665  00F7A7  20                 	db	32
  3666  00F7A8  52                 	db	82	;'R'
  3667  00F7A9  65                 	db	101	;'e'
  3668  00F7AA  66                 	db	102	;'f'
  3669  00F7AB  65                 	db	101	;'e'
  3670  00F7AC  72                 	db	114	;'r'
  3671  00F7AD  65                 	db	101	;'e'
  3672  00F7AE  6E                 	db	110	;'n'
  3673  00F7AF  63                 	db	99	;'c'
  3674  00F7B0  65                 	db	101	;'e'
  3675  00F7B1  20                 	db	32
  3676  00F7B2  42                 	db	66	;'B'
  3677  00F7B3  75                 	db	117	;'u'
  3678  00F7B4  66                 	db	102	;'f'
  3679  00F7B5  66                 	db	102	;'f'
  3680  00F7B6  65                 	db	101	;'e'
  3681  00F7B7  72                 	db	114	;'r'
  3682  00F7B8  20                 	db	32
  3683  00F7B9  31                 	db	49	;'1'
  3684  00F7BA  20                 	db	32
  3685  00F7BB  6D                 	db	109	;'m'
  3686  00F7BC  65                 	db	101	;'e'
  3687  00F7BD  61                 	db	97	;'a'
  3688  00F7BE  73                 	db	115	;'s'
  3689  00F7BF  75                 	db	117	;'u'
  3690  00F7C0  72                 	db	114	;'r'
  3691  00F7C1  65                 	db	101	;'e'
  3692  00F7C2  64                 	db	100	;'d'
  3693  00F7C3  20                 	db	32
  3694  00F7C4  61                 	db	97	;'a'
  3695  00F7C5  73                 	db	115	;'s'
  3696  00F7C6  20                 	db	32
  3697  00F7C7  25                 	db	37
  3698  00F7C8  2E                 	db	46
  3699  00F7C9  33                 	db	51	;'3'
  3700  00F7CA  66                 	db	102	;'f'
  3701  00F7CB  20                 	db	32
  3702  00F7CC  56                 	db	86	;'V'
  3703  00F7CD  6F                 	db	111	;'o'
  3704  00F7CE  6C                 	db	108	;'l'
  3705  00F7CF  74                 	db	116	;'t'
  3706  00F7D0  73                 	db	115	;'s'
  3707  00F7D1  0A                 	db	10
  3708  00F7D2  0D                 	db	13
  3709  00F7D3  00                 	db	0
  3710  00F7D4                     STR_56:
  3711  00F7D4  44                 	db	68	;'D'
  3712  00F7D5  65                 	db	101	;'e'
  3713  00F7D6  76                 	db	118	;'v'
  3714  00F7D7  69                 	db	105	;'i'
  3715  00F7D8  63                 	db	99	;'c'
  3716  00F7D9  65                 	db	101	;'e'
  3717  00F7DA  20                 	db	32
  3718  00F7DB  73                 	db	115	;'s'
  3719  00F7DC  69                 	db	105	;'i'
  3720  00F7DD  6C                 	db	108	;'l'
  3721  00F7DE  69                 	db	105	;'i'
  3722  00F7DF  63                 	db	99	;'c'
  3723  00F7E0  6F                 	db	111	;'o'
  3724  00F7E1  6E                 	db	110	;'n'
  3725  00F7E2  20                 	db	32
  3726  00F7E3  72                 	db	114	;'r'
  3727  00F7E4  65                 	db	101	;'e'
  3728  00F7E5  76                 	db	118	;'v'
  3729  00F7E6  69                 	db	105	;'i'
  3730  00F7E7  73                 	db	115	;'s'
  3731  00F7E8  69                 	db	105	;'i'
  3732  00F7E9  6F                 	db	111	;'o'
  3733  00F7EA  6E                 	db	110	;'n'
  3734  00F7EB  20                 	db	32
  3735  00F7EC  49                 	db	73	;'I'
  3736  00F7ED  44                 	db	68	;'D'
  3737  00F7EE  20                 	db	32
  3738  00F7EF  61                 	db	97	;'a'
  3739  00F7F0  73                 	db	115	;'s'
  3740  00F7F1  20                 	db	32
  3741  00F7F2  73                 	db	115	;'s'
  3742  00F7F3  74                 	db	116	;'t'
  3743  00F7F4  6F                 	db	111	;'o'
  3744  00F7F5  72                 	db	114	;'r'
  3745  00F7F6  65                 	db	101	;'e'
  3746  00F7F7  64                 	db	100	;'d'
  3747  00F7F8  20                 	db	32
  3748  00F7F9  69                 	db	105	;'i'
  3749  00F7FA  6E                 	db	110	;'n'
  3750  00F7FB  20                 	db	32
  3751  00F7FC  46                 	db	70	;'F'
  3752  00F7FD  6C                 	db	108	;'l'
  3753  00F7FE  61                 	db	97	;'a'
  3754  00F7FF  73                 	db	115	;'s'
  3755  00F800  68                 	db	104	;'h'
  3756  00F801  20                 	db	32
  3757  00F802  69                 	db	105	;'i'
  3758  00F803  73                 	db	115	;'s'
  3759  00F804  3A                 	db	58	;':'
  3760  00F805  20                 	db	32
  3761  00F806  25                 	db	37
  3762  00F807  63                 	db	99	;'c'
  3763  00F808  25                 	db	37
  3764  00F809  64                 	db	100	;'d'
  3765  00F80A  0A                 	db	10
  3766  00F80B  0D                 	db	13
  3767  00F80C  00                 	db	0
  3768  00F80D                     STR_93:
  3769  00F80D  4F                 	db	79	;'O'
  3770  00F80E  75                 	db	117	;'u'
  3771  00F80F  74                 	db	116	;'t'
  3772  00F810  70                 	db	112	;'p'
  3773  00F811  75                 	db	117	;'u'
  3774  00F812  74                 	db	116	;'t'
  3775  00F813  20                 	db	32
  3776  00F814  70                 	db	112	;'p'
  3777  00F815  6F                 	db	111	;'o'
  3778  00F816  77                 	db	119	;'w'
  3779  00F817  65                 	db	101	;'e'
  3780  00F818  72                 	db	114	;'r'
  3781  00F819  20                 	db	32
  3782  00F81A  63                 	db	99	;'c'
  3783  00F81B  61                 	db	97	;'a'
  3784  00F81C  6C                 	db	108	;'l'
  3785  00F81D  63                 	db	99	;'c'
  3786  00F81E  75                 	db	117	;'u'
  3787  00F81F  6C                 	db	108	;'l'
  3788  00F820  61                 	db	97	;'a'
  3789  00F821  74                 	db	116	;'t'
  3790  00F822  65                 	db	101	;'e'
  3791  00F823  64                 	db	100	;'d'
  3792  00F824  20                 	db	32
  3793  00F825  61                 	db	97	;'a'
  3794  00F826  73                 	db	115	;'s'
  3795  00F827  20                 	db	32
  3796  00F828  25                 	db	37
  3797  00F829  2E                 	db	46
  3798  00F82A  33                 	db	51	;'3'
  3799  00F82B  66                 	db	102	;'f'
  3800  00F82C  20                 	db	32
  3801  00F82D  57                 	db	87	;'W'
  3802  00F82E  61                 	db	97	;'a'
  3803  00F82F  74                 	db	116	;'t'
  3804  00F830  74                 	db	116	;'t'
  3805  00F831  73                 	db	115	;'s'
  3806  00F832  20                 	db	32
  3807  00F833  66                 	db	102	;'f'
  3808  00F834  72                 	db	114	;'r'
  3809  00F835  6F                 	db	111	;'o'
  3810  00F836  6D                 	db	109	;'m'
  3811  00F837  20                 	db	32
  3812  00F838  52                 	db	82	;'R'
  3813  00F839  4D                 	db	77	;'M'
  3814  00F83A  53                 	db	83	;'S'
  3815  00F83B  20                 	db	32
  3816  00F83C  76                 	db	118	;'v'
  3817  00F83D  61                 	db	97	;'a'
  3818  00F83E  6C                 	db	108	;'l'
  3819  00F83F  75                 	db	117	;'u'
  3820  00F840  65                 	db	101	;'e'
  3821  00F841  73                 	db	115	;'s'
  3822  00F842  0A                 	db	10
  3823  00F843  0D                 	db	13
  3824  00F844  00                 	db	0
  3825  00F845                     STR_59:
  3826  00F845  20                 	db	32
  3827  00F846  20                 	db	32
  3828  00F847  20                 	db	32
  3829  00F848  20                 	db	32
  3830  00F849  55                 	db	85	;'U'
  3831  00F84A  73                 	db	115	;'s'
  3832  00F84B  65                 	db	101	;'e'
  3833  00F84C  72                 	db	114	;'r'
  3834  00F84D  20                 	db	32
  3835  00F84E  49                 	db	73	;'I'
  3836  00F84F  44                 	db	68	;'D'
  3837  00F850  20                 	db	32
  3838  00F851  57                 	db	87	;'W'
  3839  00F852  6F                 	db	111	;'o'
  3840  00F853  72                 	db	114	;'r'
  3841  00F854  64                 	db	100	;'d'
  3842  00F855  20                 	db	32
  3843  00F856  25                 	db	37
  3844  00F857  64                 	db	100	;'d'
  3845  00F858  20                 	db	32
  3846  00F859  28                 	db	40
  3847  00F85A  46                 	db	70	;'F'
  3848  00F85B  6C                 	db	108	;'l'
  3849  00F85C  61                 	db	97	;'a'
  3850  00F85D  73                 	db	115	;'s'
  3851  00F85E  68                 	db	104	;'h'
  3852  00F85F  20                 	db	32
  3853  00F860  61                 	db	97	;'a'
  3854  00F861  64                 	db	100	;'d'
  3855  00F862  64                 	db	100	;'d'
  3856  00F863  72                 	db	114	;'r'
  3857  00F864  65                 	db	101	;'e'
  3858  00F865  73                 	db	115	;'s'
  3859  00F866  73                 	db	115	;'s'
  3860  00F867  20                 	db	32
  3861  00F868  30                 	db	48	;'0'
  3862  00F869  78                 	db	120	;'x'
  3863  00F86A  32                 	db	50	;'2'
  3864  00F86B  30                 	db	48	;'0'
  3865  00F86C  30                 	db	48	;'0'
  3866  00F86D  30                 	db	48	;'0'
  3867  00F86E  30                 	db	48	;'0'
  3868  00F86F  25                 	db	37
  3869  00F870  58                 	db	88	;'X'
  3870  00F871  29                 	db	41
  3871  00F872  3A                 	db	58	;':'
  3872  00F873  20                 	db	32
  3873  00F874  30                 	db	48	;'0'
  3874  00F875  78                 	db	120	;'x'
  3875  00F876  25                 	db	37
  3876  00F877  58                 	db	88	;'X'
  3877  00F878  0A                 	db	10
  3878  00F879  0D                 	db	13
  3879  00F87A  00                 	db	0
  3880  00F87B                     STR_105:
  3881  00F87B  4C                 	db	76	;'L'
  3882  00F87C  6F                 	db	111	;'o'
  3883  00F87D  61                 	db	97	;'a'
  3884  00F87E  64                 	db	100	;'d'
  3885  00F87F  20                 	db	32
  3886  00F880  69                 	db	105	;'i'
  3887  00F881  73                 	db	115	;'s'
  3888  00F882  20                 	db	32
  3889  00F883  63                 	db	99	;'c'
  3890  00F884  75                 	db	117	;'u'
  3891  00F885  72                 	db	114	;'r'
  3892  00F886  72                 	db	114	;'r'
  3893  00F887  65                 	db	101	;'e'
  3894  00F888  6E                 	db	110	;'n'
  3895  00F889  74                 	db	116	;'t'
  3896  00F88A  6C                 	db	108	;'l'
  3897  00F88B  79                 	db	121	;'y'
  3898  00F88C  20                 	db	32
  3899  00F88D  65                 	db	101	;'e'
  3900  00F88E  6E                 	db	110	;'n'
  3901  00F88F  61                 	db	97	;'a'
  3902  00F890  62                 	db	98	;'b'
  3903  00F891  6C                 	db	108	;'l'
  3904  00F892  65                 	db	101	;'e'
  3905  00F893  64                 	db	100	;'d'
  3906  00F894  2C                 	db	44
  3907  00F895  20                 	db	32
  3908  00F896  62                 	db	98	;'b'
  3909  00F897  75                 	db	117	;'u'
  3910  00F898  74                 	db	116	;'t'
  3911  00F899  20                 	db	32
  3912  00F89A  64                 	db	100	;'d'
  3913  00F89B  69                 	db	105	;'i'
  3914  00F89C  6D                 	db	109	;'m'
  3915  00F89D  6D                 	db	109	;'m'
  3916  00F89E  69                 	db	105	;'i'
  3917  00F89F  6E                 	db	110	;'n'
  3918  00F8A0  67                 	db	103	;'g'
  3919  00F8A1  20                 	db	32
  3920  00F8A2  69                 	db	105	;'i'
  3921  00F8A3  73                 	db	115	;'s'
  3922  00F8A4  20                 	db	32
  3923  00F8A5  64                 	db	100	;'d'
  3924  00F8A6  69                 	db	105	;'i'
  3925  00F8A7  73                 	db	115	;'s'
  3926  00F8A8  61                 	db	97	;'a'
  3927  00F8A9  62                 	db	98	;'b'
  3928  00F8AA  6C                 	db	108	;'l'
  3929  00F8AB  65                 	db	101	;'e'
  3930  00F8AC  64                 	db	100	;'d'
  3931  00F8AD  0A                 	db	10
  3932  00F8AE  0D                 	db	13
  3933  00F8AF  00                 	db	0
  3934  00F8B0                     STR_119:
  3935  00F8B0  4C                 	db	76	;'L'
  3936  00F8B1  6F                 	db	111	;'o'
  3937  00F8B2  61                 	db	97	;'a'
  3938  00F8B3  64                 	db	100	;'d'
  3939  00F8B4  20                 	db	32
  3940  00F8B5  6F                 	db	111	;'o'
  3941  00F8B6  6E                 	db	110	;'n'
  3942  00F8B7  20                 	db	32
  3943  00F8B8  74                 	db	116	;'t'
  3944  00F8B9  69                 	db	105	;'i'
  3945  00F8BA  6D                 	db	109	;'m'
  3946  00F8BB  65                 	db	101	;'e'
  3947  00F8BC  20                 	db	32
  3948  00F8BD  73                 	db	115	;'s'
  3949  00F8BE  69                 	db	105	;'i'
  3950  00F8BF  6E                 	db	110	;'n'
  3951  00F8C0  63                 	db	99	;'c'
  3952  00F8C1  65                 	db	101	;'e'
  3953  00F8C2  20                 	db	32
  3954  00F8C3  6C                 	db	108	;'l'
  3955  00F8C4  61                 	db	97	;'a'
  3956  00F8C5  73                 	db	115	;'s'
  3957  00F8C6  74                 	db	116	;'t'
  3958  00F8C7  20                 	db	32
  3959  00F8C8  64                 	db	100	;'d'
  3960  00F8C9  65                 	db	101	;'e'
  3961  00F8CA  76                 	db	118	;'v'
  3962  00F8CB  69                 	db	105	;'i'
  3963  00F8CC  63                 	db	99	;'c'
  3964  00F8CD  65                 	db	101	;'e'
  3965  00F8CE  20                 	db	32
  3966  00F8CF  72                 	db	114	;'r'
  3967  00F8D0  65                 	db	101	;'e'
  3968  00F8D1  73                 	db	115	;'s'
  3969  00F8D2  65                 	db	101	;'e'
  3970  00F8D3  74                 	db	116	;'t'
  3971  00F8D4  20                 	db	32
  3972  00F8D5  69                 	db	105	;'i'
  3973  00F8D6  73                 	db	115	;'s'
  3974  00F8D7  20                 	db	32
  3975  00F8D8  25                 	db	37
  3976  00F8D9  64                 	db	100	;'d'
  3977  00F8DA  20                 	db	32
  3978  00F8DB  73                 	db	115	;'s'
  3979  00F8DC  65                 	db	101	;'e'
  3980  00F8DD  63                 	db	99	;'c'
  3981  00F8DE  6F                 	db	111	;'o'
  3982  00F8DF  6E                 	db	110	;'n'
  3983  00F8E0  64                 	db	100	;'d'
  3984  00F8E1  73                 	db	115	;'s'
  3985  00F8E2  0A                 	db	10
  3986  00F8E3  0D                 	db	13
  3987  00F8E4  00                 	db	0
  3988  00F8E5                     STR_48:
  3989  00F8E5  54                 	db	84	;'T'
  3990  00F8E6  68                 	db	104	;'h'
  3991  00F8E7  65                 	db	101	;'e'
  3992  00F8E8  20                 	db	32
  3993  00F8E9  63                 	db	99	;'c'
  3994  00F8EA  61                 	db	97	;'a'
  3995  00F8EB  75                 	db	117	;'u'
  3996  00F8EC  73                 	db	115	;'s'
  3997  00F8ED  65                 	db	101	;'e'
  3998  00F8EE  20                 	db	32
  3999  00F8EF  6F                 	db	111	;'o'
  4000  00F8F0  66                 	db	102	;'f'
  4001  00F8F1  20                 	db	32
  4002  00F8F2  74                 	db	116	;'t'
  4003  00F8F3  68                 	db	104	;'h'
  4004  00F8F4  65                 	db	101	;'e'
  4005  00F8F5  20                 	db	32
  4006  00F8F6  6D                 	db	109	;'m'
  4007  00F8F7  6F                 	db	111	;'o'
  4008  00F8F8  73                 	db	115	;'s'
  4009  00F8F9  74                 	db	116	;'t'
  4010  00F8FA  20                 	db	32
  4011  00F8FB  72                 	db	114	;'r'
  4012  00F8FC  65                 	db	101	;'e'
  4013  00F8FD  63                 	db	99	;'c'
  4014  00F8FE  65                 	db	101	;'e'
  4015  00F8FF  6E                 	db	110	;'n'
  4016  00F900  74                 	db	116	;'t'
  4017  00F901  20                 	db	32
  4018  00F902  64                 	db	100	;'d'
  4019  00F903  65                 	db	101	;'e'
  4020  00F904  76                 	db	118	;'v'
  4021  00F905  69                 	db	105	;'i'
  4022  00F906  63                 	db	99	;'c'
  4023  00F907  65                 	db	101	;'e'
  4024  00F908  20                 	db	32
  4025  00F909  72                 	db	114	;'r'
  4026  00F90A  65                 	db	101	;'e'
  4027  00F90B  73                 	db	115	;'s'
  4028  00F90C  65                 	db	101	;'e'
  4029  00F90D  74                 	db	116	;'t'
  4030  00F90E  20                 	db	32
  4031  00F90F  77                 	db	119	;'w'
  4032  00F910  61                 	db	97	;'a'
  4033  00F911  73                 	db	115	;'s'
  4034  00F912  3A                 	db	58	;':'
  4035  00F913  20                 	db	32
  4036  00F914  25                 	db	37
  4037  00F915  73                 	db	115	;'s'
  4038  00F916  0A                 	db	10
  4039  00F917  0D                 	db	13
  4040  00F918  00                 	db	0
  4041  00F919                     STR_69:
  4042  00F919  54                 	db	84	;'T'
  4043  00F91A  68                 	db	104	;'h'
  4044  00F91B  65                 	db	101	;'e'
  4045  00F91C  20                 	db	32
  4046  00F91D  66                 	db	102	;'f'
  4047  00F91E  6F                 	db	111	;'o'
  4048  00F91F  6C                 	db	108	;'l'
  4049  00F920  6C                 	db	108	;'l'
  4050  00F921  6F                 	db	111	;'o'
  4051  00F922  77                 	db	119	;'w'
  4052  00F923  69                 	db	105	;'i'
  4053  00F924  6E                 	db	110	;'n'
  4054  00F925  67                 	db	103	;'g'
  4055  00F926  20                 	db	32
  4056  00F927  63                 	db	99	;'c'
  4057  00F928  68                 	db	104	;'h'
  4058  00F929  61                 	db	97	;'a'
  4059  00F92A  6E                 	db	110	;'n'
  4060  00F92B  6E                 	db	110	;'n'
  4061  00F92C  65                 	db	101	;'e'
  4062  00F92D  6C                 	db	108	;'l'
  4063  00F92E  20                 	db	32
  4064  00F92F  63                 	db	99	;'c'
  4065  00F930  61                 	db	97	;'a'
  4066  00F931  75                 	db	117	;'u'
  4067  00F932  73                 	db	115	;'s'
  4068  00F933  65                 	db	101	;'e'
  4069  00F934  64                 	db	100	;'d'
  4070  00F935  20                 	db	32
  4071  00F936  61                 	db	97	;'a'
  4072  00F937  6E                 	db	110	;'n'
  4073  00F938  20                 	db	32
  4074  00F939  41                 	db	65	;'A'
  4075  00F93A  44                 	db	68	;'D'
  4076  00F93B  43                 	db	67	;'C'
  4077  00F93C  20                 	db	32
  4078  00F93D  65                 	db	101	;'e'
  4079  00F93E  72                 	db	114	;'r'
  4080  00F93F  72                 	db	114	;'r'
  4081  00F940  6F                 	db	111	;'o'
  4082  00F941  72                 	db	114	;'r'
  4083  00F942  3A                 	db	58	;':'
  4084  00F943  20                 	db	32
  4085  00F944  25                 	db	37
  4086  00F945  73                 	db	115	;'s'
  4087  00F946  0A                 	db	10
  4088  00F947  0D                 	db	13
  4089  00F948  00                 	db	0
  4090  00F949                     STR_52:
  4091  00F949  4D                 	db	77	;'M'
  4092  00F94A  61                 	db	97	;'a'
  4093  00F94B  72                 	db	114	;'r'
  4094  00F94C  71                 	db	113	;'q'
  4095  00F94D  75                 	db	117	;'u'
  4096  00F94E  65                 	db	101	;'e'
  4097  00F94F  74                 	db	116	;'t'
  4098  00F950  74                 	db	116	;'t'
  4099  00F951  65                 	db	101	;'e'
  4100  00F952  20                 	db	32
  4101  00F953  55                 	db	85	;'U'
  4102  00F954  6E                 	db	110	;'n'
  4103  00F955  69                 	db	105	;'i'
  4104  00F956  76                 	db	118	;'v'
  4105  00F957  65                 	db	101	;'e'
  4106  00F958  72                 	db	114	;'r'
  4107  00F959  73                 	db	115	;'s'
  4108  00F95A  69                 	db	105	;'i'
  4109  00F95B  74                 	db	116	;'t'
  4110  00F95C  79                 	db	121	;'y'
  4111  00F95D  20                 	db	32
  4112  00F95E  45                 	db	69	;'E'
  4113  00F95F  4C                 	db	76	;'L'
  4114  00F960  45                 	db	69	;'E'
  4115  00F961  4E                 	db	78	;'N'
  4116  00F962  20                 	db	32
  4117  00F963  33                 	db	51	;'3'
  4118  00F964  30                 	db	48	;'0'
  4119  00F965  33                 	db	51	;'3'
  4120  00F966  35                 	db	53	;'5'
  4121  00F967  20                 	db	32
  4122  00F968  46                 	db	70	;'F'
  4123  00F969  69                 	db	105	;'i'
  4124  00F96A  6E                 	db	110	;'n'
  4125  00F96B  61                 	db	97	;'a'
  4126  00F96C  6C                 	db	108	;'l'
  4127  00F96D  20                 	db	32
  4128  00F96E  50                 	db	80	;'P'
  4129  00F96F  72                 	db	114	;'r'
  4130  00F970  6F                 	db	111	;'o'
  4131  00F971  6A                 	db	106	;'j'
  4132  00F972  65                 	db	101	;'e'
  4133  00F973  63                 	db	99	;'c'
  4134  00F974  74                 	db	116	;'t'
  4135  00F975  0A                 	db	10
  4136  00F976  0D                 	db	13
  4137  00F977  00                 	db	0
  4138  00F978                     STR_125:
  4139  00F978  45                 	db	69	;'E'
  4140  00F979  72                 	db	114	;'r'
  4141  00F97A  72                 	db	114	;'r'
  4142  00F97B  6F                 	db	111	;'o'
  4143  00F97C  72                 	db	114	;'r'
  4144  00F97D  73                 	db	115	;'s'
  4145  00F97E  20                 	db	32
  4146  00F97F  61                 	db	97	;'a'
  4147  00F980  6E                 	db	110	;'n'
  4148  00F981  64                 	db	100	;'d'
  4149  00F982  20                 	db	32
  4150  00F983  6E                 	db	110	;'n'
  4151  00F984  65                 	db	101	;'e'
  4152  00F985  67                 	db	103	;'g'
  4153  00F986  61                 	db	97	;'a'
  4154  00F987  74                 	db	116	;'t'
  4155  00F988  69                 	db	105	;'i'
  4156  00F989  76                 	db	118	;'v'
  4157  00F98A  65                 	db	101	;'e'
  4158  00F98B  20                 	db	32
  4159  00F98C  72                 	db	114	;'r'
  4160  00F98D  65                 	db	101	;'e'
  4161  00F98E  73                 	db	115	;'s'
  4162  00F98F  70                 	db	112	;'p'
  4163  00F990  6F                 	db	111	;'o'
  4164  00F991  6E                 	db	110	;'n'
  4165  00F992  73                 	db	115	;'s'
  4166  00F993  65                 	db	101	;'e'
  4167  00F994  73                 	db	115	;'s'
  4168  00F995  20                 	db	32
  4169  00F996  61                 	db	97	;'a'
  4170  00F997  70                 	db	112	;'p'
  4171  00F998  70                 	db	112	;'p'
  4172  00F999  65                 	db	101	;'e'
  4173  00F99A  61                 	db	97	;'a'
  4174  00F99B  72                 	db	114	;'r'
  4175  00F99C  20                 	db	32
  4176  00F99D  69                 	db	105	;'i'
  4177  00F99E  6E                 	db	110	;'n'
  4178  00F99F  20                 	db	32
  4179  00F9A0  72                 	db	114	;'r'
  4180  00F9A1  65                 	db	101	;'e'
  4181  00F9A2  64                 	db	100	;'d'
  4182  00F9A3  0A                 	db	10
  4183  00F9A4  0D                 	db	13
  4184  00F9A5  00                 	db	0
  4185  00F9A6                     STR_112:
  4186  00F9A6  45                 	db	69	;'E'
  4187  00F9A7  6E                 	db	110	;'n'
  4188  00F9A8  74                 	db	116	;'t'
  4189  00F9A9  65                 	db	101	;'e'
  4190  00F9AA  72                 	db	114	;'r'
  4191  00F9AB  20                 	db	32
  4192  00F9AC  27                 	db	39
  4193  00F9AD  48                 	db	72	;'H'
  4194  00F9AE  65                 	db	101	;'e'
  4195  00F9AF  6C                 	db	108	;'l'
  4196  00F9B0  70                 	db	112	;'p'
  4197  00F9B1  27                 	db	39
  4198  00F9B2  20                 	db	32
  4199  00F9B3  66                 	db	102	;'f'
  4200  00F9B4  6F                 	db	111	;'o'
  4201  00F9B5  72                 	db	114	;'r'
  4202  00F9B6  20                 	db	32
  4203  00F9B7  6C                 	db	108	;'l'
  4204  00F9B8  69                 	db	105	;'i'
  4205  00F9B9  73                 	db	115	;'s'
  4206  00F9BA  74                 	db	116	;'t'
  4207  00F9BB  20                 	db	32
  4208  00F9BC  6F                 	db	111	;'o'
  4209  00F9BD  66                 	db	102	;'f'
  4210  00F9BE  20                 	db	32
  4211  00F9BF  61                 	db	97	;'a'
  4212  00F9C0  76                 	db	118	;'v'
  4213  00F9C1  61                 	db	97	;'a'
  4214  00F9C2  69                 	db	105	;'i'
  4215  00F9C3  6C                 	db	108	;'l'
  4216  00F9C4  61                 	db	97	;'a'
  4217  00F9C5  62                 	db	98	;'b'
  4218  00F9C6  6C                 	db	108	;'l'
  4219  00F9C7  65                 	db	101	;'e'
  4220  00F9C8  20                 	db	32
  4221  00F9C9  63                 	db	99	;'c'
  4222  00F9CA  6F                 	db	111	;'o'
  4223  00F9CB  6D                 	db	109	;'m'
  4224  00F9CC  6D                 	db	109	;'m'
  4225  00F9CD  61                 	db	97	;'a'
  4226  00F9CE  6E                 	db	110	;'n'
  4227  00F9CF  64                 	db	100	;'d'
  4228  00F9D0  73                 	db	115	;'s'
  4229  00F9D1  0A                 	db	10
  4230  00F9D2  0D                 	db	13
  4231  00F9D3  00                 	db	0
  4232  00F9D4                     STR_75:
  4233  00F9D4  56                 	db	86	;'V'
  4234  00F9D5  43                 	db	67	;'C'
  4235  00F9D6  43                 	db	67	;'C'
  4236  00F9D7  20                 	db	32
  4237  00F9D8  4F                 	db	79	;'O'
  4238  00F9D9  76                 	db	118	;'v'
  4239  00F9DA  65                 	db	101	;'e'
  4240  00F9DB  72                 	db	114	;'r'
  4241  00F9DC  76                 	db	118	;'v'
  4242  00F9DD  6F                 	db	111	;'o'
  4243  00F9DE  6C                 	db	108	;'l'
  4244  00F9DF  74                 	db	116	;'t'
  4245  00F9E0  61                 	db	97	;'a'
  4246  00F9E1  67                 	db	103	;'g'
  4247  00F9E2  65                 	db	101	;'e'
  4248  00F9E3  20                 	db	32
  4249  00F9E4  63                 	db	99	;'c'
  4250  00F9E5  6F                 	db	111	;'o'
  4251  00F9E6  6E                 	db	110	;'n'
  4252  00F9E7  64                 	db	100	;'d'
  4253  00F9E8  69                 	db	105	;'i'
  4254  00F9E9  74                 	db	116	;'t'
  4255  00F9EA  69                 	db	105	;'i'
  4256  00F9EB  6F                 	db	111	;'o'
  4257  00F9EC  6E                 	db	110	;'n'
  4258  00F9ED  20                 	db	32
  4259  00F9EE  68                 	db	104	;'h'
  4260  00F9EF  61                 	db	97	;'a'
  4261  00F9F0  73                 	db	115	;'s'
  4262  00F9F1  20                 	db	32
  4263  00F9F2  6E                 	db	110	;'n'
  4264  00F9F3  6F                 	db	111	;'o'
  4265  00F9F4  74                 	db	116	;'t'
  4266  00F9F5  20                 	db	32
  4267  00F9F6  6F                 	db	111	;'o'
  4268  00F9F7  63                 	db	99	;'c'
  4269  00F9F8  63                 	db	99	;'c'
  4270  00F9F9  75                 	db	117	;'u'
  4271  00F9FA  72                 	db	114	;'r'
  4272  00F9FB  72                 	db	114	;'r'
  4273  00F9FC  65                 	db	101	;'e'
  4274  00F9FD  64                 	db	100	;'d'
  4275  00F9FE  0A                 	db	10
  4276  00F9FF  0D                 	db	13
  4277  00FA00  00                 	db	0
  4278  00FA01                     STR_99:
  4279  00FA01  4C                 	db	76	;'L'
  4280  00FA02  6F                 	db	111	;'o'
  4281  00FA03  61                 	db	97	;'a'
  4282  00FA04  64                 	db	100	;'d'
  4283  00FA05  20                 	db	32
  4284  00FA06  68                 	db	104	;'h'
  4285  00FA07  61                 	db	97	;'a'
  4286  00FA08  73                 	db	115	;'s'
  4287  00FA09  20                 	db	32
  4288  00FA0A  62                 	db	98	;'b'
  4289  00FA0B  65                 	db	101	;'e'
  4290  00FA0C  65                 	db	101	;'e'
  4291  00FA0D  6E                 	db	110	;'n'
  4292  00FA0E  20                 	db	32
  4293  00FA0F  65                 	db	101	;'e'
  4294  00FA10  6E                 	db	110	;'n'
  4295  00FA11  61                 	db	97	;'a'
  4296  00FA12  62                 	db	98	;'b'
  4297  00FA13  6C                 	db	108	;'l'
  4298  00FA14  65                 	db	101	;'e'
  4299  00FA15  64                 	db	100	;'d'
  4300  00FA16  2C                 	db	44
  4301  00FA17  20                 	db	32
  4302  00FA18  64                 	db	100	;'d'
  4303  00FA19  69                 	db	105	;'i'
  4304  00FA1A  6D                 	db	109	;'m'
  4305  00FA1B  6D                 	db	109	;'m'
  4306  00FA1C  69                 	db	105	;'i'
  4307  00FA1D  6E                 	db	110	;'n'
  4308  00FA1E  67                 	db	103	;'g'
  4309  00FA1F  20                 	db	32
  4310  00FA20  64                 	db	100	;'d'
  4311  00FA21  69                 	db	105	;'i'
  4312  00FA22  73                 	db	115	;'s'
  4313  00FA23  61                 	db	97	;'a'
  4314  00FA24  62                 	db	98	;'b'
  4315  00FA25  6C                 	db	108	;'l'
  4316  00FA26  65                 	db	101	;'e'
  4317  00FA27  64                 	db	100	;'d'
  4318  00FA28  0A                 	db	10
  4319  00FA29  0D                 	db	13
  4320  00FA2A  00                 	db	0
  4321  00FA2B                     STR_106:
  4322  00FA2B  4C                 	db	76	;'L'
  4323  00FA2C  6F                 	db	111	;'o'
  4324  00FA2D  61                 	db	97	;'a'
  4325  00FA2E  64                 	db	100	;'d'
  4326  00FA2F  20                 	db	32
  4327  00FA30  61                 	db	97	;'a'
  4328  00FA31  6E                 	db	110	;'n'
  4329  00FA32  64                 	db	100	;'d'
  4330  00FA33  20                 	db	32
  4331  00FA34  64                 	db	100	;'d'
  4332  00FA35  69                 	db	105	;'i'
  4333  00FA36  6D                 	db	109	;'m'
  4334  00FA37  6D                 	db	109	;'m'
  4335  00FA38  69                 	db	105	;'i'
  4336  00FA39  6E                 	db	110	;'n'
  4337  00FA3A  67                 	db	103	;'g'
  4338  00FA3B  20                 	db	32
  4339  00FA3C  61                 	db	97	;'a'
  4340  00FA3D  72                 	db	114	;'r'
  4341  00FA3E  65                 	db	101	;'e'
  4342  00FA3F  20                 	db	32
  4343  00FA40  63                 	db	99	;'c'
  4344  00FA41  75                 	db	117	;'u'
  4345  00FA42  72                 	db	114	;'r'
  4346  00FA43  72                 	db	114	;'r'
  4347  00FA44  65                 	db	101	;'e'
  4348  00FA45  6E                 	db	110	;'n'
  4349  00FA46  74                 	db	116	;'t'
  4350  00FA47  6C                 	db	108	;'l'
  4351  00FA48  79                 	db	121	;'y'
  4352  00FA49  20                 	db	32
  4353  00FA4A  64                 	db	100	;'d'
  4354  00FA4B  69                 	db	105	;'i'
  4355  00FA4C  73                 	db	115	;'s'
  4356  00FA4D  61                 	db	97	;'a'
  4357  00FA4E  62                 	db	98	;'b'
  4358  00FA4F  6C                 	db	108	;'l'
  4359  00FA50  65                 	db	101	;'e'
  4360  00FA51  64                 	db	100	;'d'
  4361  00FA52  0A                 	db	10
  4362  00FA53  0D                 	db	13
  4363  00FA54  00                 	db	0
  4364  00FA55                     STR_135:
  4365  00FA55  57                 	db	87	;'W'
  4366  00FA56  69                 	db	105	;'i'
  4367  00FA57  6E                 	db	110	;'n'
  4368  00FA58  64                 	db	100	;'d'
  4369  00FA59  6F                 	db	111	;'o'
  4370  00FA5A  77                 	db	119	;'w'
  4371  00FA5B  65                 	db	101	;'e'
  4372  00FA5C  64                 	db	100	;'d'
  4373  00FA5D  20                 	db	32
  4374  00FA5E  57                 	db	87	;'W'
  4375  00FA5F  61                 	db	97	;'a'
  4376  00FA60  74                 	db	116	;'t'
  4377  00FA61  63                 	db	99	;'c'
  4378  00FA62  68                 	db	104	;'h'
  4379  00FA63  20                 	db	32
  4380  00FA64  44                 	db	68	;'D'
  4381  00FA65  6F                 	db	111	;'o'
  4382  00FA66  67                 	db	103	;'g'
  4383  00FA67  20                 	db	32
  4384  00FA68  54                 	db	84	;'T'
  4385  00FA69  69                 	db	105	;'i'
  4386  00FA6A  6D                 	db	109	;'m'
  4387  00FA6B  65                 	db	101	;'e'
  4388  00FA6C  72                 	db	114	;'r'
  4389  00FA6D  20                 	db	32
  4390  00FA6E  56                 	db	86	;'V'
  4391  00FA6F  69                 	db	105	;'i'
  4392  00FA70  6F                 	db	111	;'o'
  4393  00FA71  6C                 	db	108	;'l'
  4394  00FA72  61                 	db	97	;'a'
  4395  00FA73  74                 	db	116	;'t'
  4396  00FA74  69                 	db	105	;'i'
  4397  00FA75  6F                 	db	111	;'o'
  4398  00FA76  6E                 	db	110	;'n'
  4399  00FA77  20                 	db	32
  4400  00FA78  52                 	db	82	;'R'
  4401  00FA79  65                 	db	101	;'e'
  4402  00FA7A  73                 	db	115	;'s'
  4403  00FA7B  65                 	db	101	;'e'
  4404  00FA7C  74                 	db	116	;'t'
  4405  00FA7D  00                 	db	0
  4406  00FA7E                     STR_97:
  4407  00FA7E  54                 	db	84	;'T'
  4408  00FA7F  52                 	db	82	;'R'
  4409  00FA80  49                 	db	73	;'I'
  4410  00FA81  41                 	db	65	;'A'
  4411  00FA82  43                 	db	67	;'C'
  4412  00FA83  20                 	db	32
  4413  00FA84  6F                 	db	111	;'o'
  4414  00FA85  75                 	db	117	;'u'
  4415  00FA86  74                 	db	116	;'t'
  4416  00FA87  70                 	db	112	;'p'
  4417  00FA88  75                 	db	117	;'u'
  4418  00FA89  74                 	db	116	;'t'
  4419  00FA8A  20                 	db	32
  4420  00FA8B  64                 	db	100	;'d'
  4421  00FA8C  69                 	db	105	;'i'
  4422  00FA8D  6D                 	db	109	;'m'
  4423  00FA8E  6D                 	db	109	;'m'
  4424  00FA8F  69                 	db	105	;'i'
  4425  00FA90  6E                 	db	110	;'n'
  4426  00FA91  67                 	db	103	;'g'
  4427  00FA92  20                 	db	32
  4428  00FA93  68                 	db	104	;'h'
  4429  00FA94  61                 	db	97	;'a'
  4430  00FA95  73                 	db	115	;'s'
  4431  00FA96  20                 	db	32
  4432  00FA97  62                 	db	98	;'b'
  4433  00FA98  65                 	db	101	;'e'
  4434  00FA99  65                 	db	101	;'e'
  4435  00FA9A  6E                 	db	110	;'n'
  4436  00FA9B  20                 	db	32
  4437  00FA9C  64                 	db	100	;'d'
  4438  00FA9D  69                 	db	105	;'i'
  4439  00FA9E  73                 	db	115	;'s'
  4440  00FA9F  61                 	db	97	;'a'
  4441  00FAA0  62                 	db	98	;'b'
  4442  00FAA1  6C                 	db	108	;'l'
  4443  00FAA2  65                 	db	101	;'e'
  4444  00FAA3  64                 	db	100	;'d'
  4445  00FAA4  0A                 	db	10
  4446  00FAA5  0D                 	db	13
  4447  00FAA6  00                 	db	0
  4448  00FAA7                     STR_95:
  4449  00FAA7  54                 	db	84	;'T'
  4450  00FAA8  52                 	db	82	;'R'
  4451  00FAA9  49                 	db	73	;'I'
  4452  00FAAA  41                 	db	65	;'A'
  4453  00FAAB  43                 	db	67	;'C'
  4454  00FAAC  20                 	db	32
  4455  00FAAD  6F                 	db	111	;'o'
  4456  00FAAE  75                 	db	117	;'u'
  4457  00FAAF  74                 	db	116	;'t'
  4458  00FAB0  70                 	db	112	;'p'
  4459  00FAB1  75                 	db	117	;'u'
  4460  00FAB2  74                 	db	116	;'t'
  4461  00FAB3  20                 	db	32
  4462  00FAB4  64                 	db	100	;'d'
  4463  00FAB5  69                 	db	105	;'i'
  4464  00FAB6  6D                 	db	109	;'m'
  4465  00FAB7  6D                 	db	109	;'m'
  4466  00FAB8  69                 	db	105	;'i'
  4467  00FAB9  6E                 	db	110	;'n'
  4468  00FABA  67                 	db	103	;'g'
  4469  00FABB  20                 	db	32
  4470  00FABC  68                 	db	104	;'h'
  4471  00FABD  61                 	db	97	;'a'
  4472  00FABE  73                 	db	115	;'s'
  4473  00FABF  20                 	db	32
  4474  00FAC0  62                 	db	98	;'b'
  4475  00FAC1  65                 	db	101	;'e'
  4476  00FAC2  65                 	db	101	;'e'
  4477  00FAC3  6E                 	db	110	;'n'
  4478  00FAC4  20                 	db	32
  4479  00FAC5  65                 	db	101	;'e'
  4480  00FAC6  6E                 	db	110	;'n'
  4481  00FAC7  61                 	db	97	;'a'
  4482  00FAC8  62                 	db	98	;'b'
  4483  00FAC9  6C                 	db	108	;'l'
  4484  00FACA  65                 	db	101	;'e'
  4485  00FACB  64                 	db	100	;'d'
  4486  00FACC  0A                 	db	10
  4487  00FACD  0D                 	db	13
  4488  00FACE  00                 	db	0
  4489  00FACF                     STR_124:
  4490  00FACF  4D                 	db	77	;'M'
  4491  00FAD0  65                 	db	101	;'e'
  4492  00FAD1  61                 	db	97	;'a'
  4493  00FAD2  73                 	db	115	;'s'
  4494  00FAD3  75                 	db	117	;'u'
  4495  00FAD4  72                 	db	114	;'r'
  4496  00FAD5  65                 	db	101	;'e'
  4497  00FAD6  6D                 	db	109	;'m'
  4498  00FAD7  65                 	db	101	;'e'
  4499  00FAD8  6E                 	db	110	;'n'
  4500  00FAD9  74                 	db	116	;'t'
  4501  00FADA  20                 	db	32
  4502  00FADB  72                 	db	114	;'r'
  4503  00FADC  65                 	db	101	;'e'
  4504  00FADD  73                 	db	115	;'s'
  4505  00FADE  70                 	db	112	;'p'
  4506  00FADF  6F                 	db	111	;'o'
  4507  00FAE0  6E                 	db	110	;'n'
  4508  00FAE1  73                 	db	115	;'s'
  4509  00FAE2  65                 	db	101	;'e'
  4510  00FAE3  73                 	db	115	;'s'
  4511  00FAE4  20                 	db	32
  4512  00FAE5  61                 	db	97	;'a'
  4513  00FAE6  70                 	db	112	;'p'
  4514  00FAE7  70                 	db	112	;'p'
  4515  00FAE8  65                 	db	101	;'e'
  4516  00FAE9  61                 	db	97	;'a'
  4517  00FAEA  72                 	db	114	;'r'
  4518  00FAEB  20                 	db	32
  4519  00FAEC  69                 	db	105	;'i'
  4520  00FAED  6E                 	db	110	;'n'
  4521  00FAEE  20                 	db	32
  4522  00FAEF  63                 	db	99	;'c'
  4523  00FAF0  79                 	db	121	;'y'
  4524  00FAF1  61                 	db	97	;'a'
  4525  00FAF2  6E                 	db	110	;'n'
  4526  00FAF3  0A                 	db	10
  4527  00FAF4  0D                 	db	13
  4528  00FAF5  00                 	db	0
  4529  00FAF6                     STR_85:
  4530  00FAF6  41                 	db	65	;'A'
  4531  00FAF7  56                 	db	86	;'V'
  4532  00FAF8  53                 	db	83	;'S'
  4533  00FAF9  53                 	db	83	;'S'
  4534  00FAFA  20                 	db	32
  4535  00FAFB  6D                 	db	109	;'m'
  4536  00FAFC  65                 	db	101	;'e'
  4537  00FAFD  61                 	db	97	;'a'
  4538  00FAFE  73                 	db	115	;'s'
  4539  00FAFF  75                 	db	117	;'u'
  4540  00FB00  72                 	db	114	;'r'
  4541  00FB01  65                 	db	101	;'e'
  4542  00FB02  64                 	db	100	;'d'
  4543  00FB03  20                 	db	32
  4544  00FB04  61                 	db	97	;'a'
  4545  00FB05  73                 	db	115	;'s'
  4546  00FB06  20                 	db	32
  4547  00FB07  25                 	db	37
  4548  00FB08  2E                 	db	46
  4549  00FB09  33                 	db	51	;'3'
  4550  00FB0A  66                 	db	102	;'f'
  4551  00FB0B  20                 	db	32
  4552  00FB0C  56                 	db	86	;'V'
  4553  00FB0D  6F                 	db	111	;'o'
  4554  00FB0E  6C                 	db	108	;'l'
  4555  00FB0F  74                 	db	116	;'t'
  4556  00FB10  73                 	db	115	;'s'
  4557  00FB11  20                 	db	32
  4558  00FB12  62                 	db	98	;'b'
  4559  00FB13  79                 	db	121	;'y'
  4560  00FB14  20                 	db	32
  4561  00FB15  41                 	db	65	;'A'
  4562  00FB16  44                 	db	68	;'D'
  4563  00FB17  43                 	db	67	;'C'
  4564  00FB18  0A                 	db	10
  4565  00FB19  0D                 	db	13
  4566  00FB1A  00                 	db	0
  4567  00FB1B                     STR_77:
  4568  00FB1B  2B                 	db	43
  4569  00FB1C  33                 	db	51	;'3'
  4570  00FB1D  2E                 	db	46
  4571  00FB1E  33                 	db	51	;'3'
  4572  00FB1F  56                 	db	86	;'V'
  4573  00FB20  20                 	db	32
  4574  00FB21  72                 	db	114	;'r'
  4575  00FB22  61                 	db	97	;'a'
  4576  00FB23  69                 	db	105	;'i'
  4577  00FB24  6C                 	db	108	;'l'
  4578  00FB25  20                 	db	32
  4579  00FB26  6D                 	db	109	;'m'
  4580  00FB27  65                 	db	101	;'e'
  4581  00FB28  61                 	db	97	;'a'
  4582  00FB29  73                 	db	115	;'s'
  4583  00FB2A  75                 	db	117	;'u'
  4584  00FB2B  72                 	db	114	;'r'
  4585  00FB2C  65                 	db	101	;'e'
  4586  00FB2D  64                 	db	100	;'d'
  4587  00FB2E  20                 	db	32
  4588  00FB2F  61                 	db	97	;'a'
  4589  00FB30  73                 	db	115	;'s'
  4590  00FB31  20                 	db	32
  4591  00FB32  2B                 	db	43
  4592  00FB33  25                 	db	37
  4593  00FB34  2E                 	db	46
  4594  00FB35  33                 	db	51	;'3'
  4595  00FB36  66                 	db	102	;'f'
  4596  00FB37  20                 	db	32
  4597  00FB38  56                 	db	86	;'V'
  4598  00FB39  6F                 	db	111	;'o'
  4599  00FB3A  6C                 	db	108	;'l'
  4600  00FB3B  74                 	db	116	;'t'
  4601  00FB3C  73                 	db	115	;'s'
  4602  00FB3D  0A                 	db	10
  4603  00FB3E  0D                 	db	13
  4604  00FB3F  00                 	db	0
  4605  00FB40                     STR_113:
  4606  00FB40  44                 	db	68	;'D'
  4607  00FB41  69                 	db	105	;'i'
  4608  00FB42  6D                 	db	109	;'m'
  4609  00FB43  6D                 	db	109	;'m'
  4610  00FB44  69                 	db	105	;'i'
  4611  00FB45  6E                 	db	110	;'n'
  4612  00FB46  67                 	db	103	;'g'
  4613  00FB47  20                 	db	32
  4614  00FB48  68                 	db	104	;'h'
  4615  00FB49  61                 	db	97	;'a'
  4616  00FB4A  73                 	db	115	;'s'
  4617  00FB4B  20                 	db	32
  4618  00FB4C  62                 	db	98	;'b'
  4619  00FB4D  65                 	db	101	;'e'
  4620  00FB4E  65                 	db	101	;'e'
  4621  00FB4F  6E                 	db	110	;'n'
  4622  00FB50  20                 	db	32
  4623  00FB51  73                 	db	115	;'s'
  4624  00FB52  65                 	db	101	;'e'
  4625  00FB53  74                 	db	116	;'t'
  4626  00FB54  20                 	db	32
  4627  00FB55  74                 	db	116	;'t'
  4628  00FB56  6F                 	db	111	;'o'
  4629  00FB57  20                 	db	32
  4630  00FB58  25                 	db	37
  4631  00FB59  64                 	db	100	;'d'
  4632  00FB5A  20                 	db	32
  4633  00FB5B  70                 	db	112	;'p'
  4634  00FB5C  65                 	db	101	;'e'
  4635  00FB5D  72                 	db	114	;'r'
  4636  00FB5E  63                 	db	99	;'c'
  4637  00FB5F  65                 	db	101	;'e'
  4638  00FB60  6E                 	db	110	;'n'
  4639  00FB61  74                 	db	116	;'t'
  4640  00FB62  0A                 	db	10
  4641  00FB63  0D                 	db	13
  4642  00FB64  00                 	db	0
  4643  00FB65                     STR_81:
  4644  00FB65  44                 	db	68	;'D'
  4645  00FB66  69                 	db	105	;'i'
  4646  00FB67  65                 	db	101	;'e'
  4647  00FB68  20                 	db	32
  4648  00FB69  54                 	db	84	;'T'
  4649  00FB6A  65                 	db	101	;'e'
  4650  00FB6B  6D                 	db	109	;'m'
  4651  00FB6C  70                 	db	112	;'p'
  4652  00FB6D  65                 	db	101	;'e'
  4653  00FB6E  72                 	db	114	;'r'
  4654  00FB6F  61                 	db	97	;'a'
  4655  00FB70  74                 	db	116	;'t'
  4656  00FB71  75                 	db	117	;'u'
  4657  00FB72  72                 	db	114	;'r'
  4658  00FB73  65                 	db	101	;'e'
  4659  00FB74  20                 	db	32
  4660  00FB75  6D                 	db	109	;'m'
  4661  00FB76  65                 	db	101	;'e'
  4662  00FB77  61                 	db	97	;'a'
  4663  00FB78  73                 	db	115	;'s'
  4664  00FB79  75                 	db	117	;'u'
  4665  00FB7A  72                 	db	114	;'r'
  4666  00FB7B  65                 	db	101	;'e'
  4667  00FB7C  64                 	db	100	;'d'
  4668  00FB7D  20                 	db	32
  4669  00FB7E  61                 	db	97	;'a'
  4670  00FB7F  73                 	db	115	;'s'
  4671  00FB80  20                 	db	32
  4672  00FB81  25                 	db	37
  4673  00FB82  2E                 	db	46
  4674  00FB83  33                 	db	51	;'3'
  4675  00FB84  66                 	db	102	;'f'
  4676  00FB85  43                 	db	67	;'C'
  4677  00FB86  0A                 	db	10
  4678  00FB87  0D                 	db	13
  4679  00FB88  00                 	db	0
  4680  00FB89                     STR_79:
  4681  00FB89  2B                 	db	43
  4682  00FB8A  31                 	db	49	;'1'
  4683  00FB8B  32                 	db	50	;'2'
  4684  00FB8C  56                 	db	86	;'V'
  4685  00FB8D  20                 	db	32
  4686  00FB8E  72                 	db	114	;'r'
  4687  00FB8F  61                 	db	97	;'a'
  4688  00FB90  69                 	db	105	;'i'
  4689  00FB91  6C                 	db	108	;'l'
  4690  00FB92  20                 	db	32
  4691  00FB93  6D                 	db	109	;'m'
  4692  00FB94  65                 	db	101	;'e'
  4693  00FB95  61                 	db	97	;'a'
  4694  00FB96  73                 	db	115	;'s'
  4695  00FB97  75                 	db	117	;'u'
  4696  00FB98  72                 	db	114	;'r'
  4697  00FB99  65                 	db	101	;'e'
  4698  00FB9A  64                 	db	100	;'d'
  4699  00FB9B  20                 	db	32
  4700  00FB9C  61                 	db	97	;'a'
  4701  00FB9D  73                 	db	115	;'s'
  4702  00FB9E  20                 	db	32
  4703  00FB9F  2B                 	db	43
  4704  00FBA0  25                 	db	37
  4705  00FBA1  2E                 	db	46
  4706  00FBA2  33                 	db	51	;'3'
  4707  00FBA3  66                 	db	102	;'f'
  4708  00FBA4  20                 	db	32
  4709  00FBA5  56                 	db	86	;'V'
  4710  00FBA6  6F                 	db	111	;'o'
  4711  00FBA7  6C                 	db	108	;'l'
  4712  00FBA8  74                 	db	116	;'t'
  4713  00FBA9  73                 	db	115	;'s'
  4714  00FBAA  0A                 	db	10
  4715  00FBAB  0D                 	db	13
  4716  00FBAC  00                 	db	0
  4717  00FBAD                     STR_89:
  4718  00FBAD  52                 	db	82	;'R'
  4719  00FBAE  4D                 	db	77	;'M'
  4720  00FBAF  53                 	db	83	;'S'
  4721  00FBB0  20                 	db	32
  4722  00FBB1  4F                 	db	79	;'O'
  4723  00FBB2  75                 	db	117	;'u'
  4724  00FBB3  74                 	db	116	;'t'
  4725  00FBB4  70                 	db	112	;'p'
  4726  00FBB5  75                 	db	117	;'u'
  4727  00FBB6  74                 	db	116	;'t'
  4728  00FBB7  20                 	db	32
  4729  00FBB8  43                 	db	67	;'C'
  4730  00FBB9  75                 	db	117	;'u'
  4731  00FBBA  72                 	db	114	;'r'
  4732  00FBBB  72                 	db	114	;'r'
  4733  00FBBC  65                 	db	101	;'e'
  4734  00FBBD  6E                 	db	110	;'n'
  4735  00FBBE  74                 	db	116	;'t'
  4736  00FBBF  20                 	db	32
  4737  00FBC0  69                 	db	105	;'i'
  4738  00FBC1  73                 	db	115	;'s'
  4739  00FBC2  20                 	db	32
  4740  00FBC3  25                 	db	37
  4741  00FBC4  2E                 	db	46
  4742  00FBC5  33                 	db	51	;'3'
  4743  00FBC6  66                 	db	102	;'f'
  4744  00FBC7  20                 	db	32
  4745  00FBC8  41                 	db	65	;'A'
  4746  00FBC9  72                 	db	114	;'r'
  4747  00FBCA  6D                 	db	109	;'m'
  4748  00FBCB  73                 	db	115	;'s'
  4749  00FBCC  0A                 	db	10
  4750  00FBCD  0D                 	db	13
  4751  00FBCE  00                 	db	0
  4752  00FBCF                     STR_91:
  4753  00FBCF  52                 	db	82	;'R'
  4754  00FBD0  4D                 	db	77	;'M'
  4755  00FBD1  53                 	db	83	;'S'
  4756  00FBD2  20                 	db	32
  4757  00FBD3  4F                 	db	79	;'O'
  4758  00FBD4  75                 	db	117	;'u'
  4759  00FBD5  74                 	db	116	;'t'
  4760  00FBD6  70                 	db	112	;'p'
  4761  00FBD7  75                 	db	117	;'u'
  4762  00FBD8  74                 	db	116	;'t'
  4763  00FBD9  20                 	db	32
  4764  00FBDA  56                 	db	86	;'V'
  4765  00FBDB  6F                 	db	111	;'o'
  4766  00FBDC  6C                 	db	108	;'l'
  4767  00FBDD  74                 	db	116	;'t'
  4768  00FBDE  61                 	db	97	;'a'
  4769  00FBDF  67                 	db	103	;'g'
  4770  00FBE0  65                 	db	101	;'e'
  4771  00FBE1  20                 	db	32
  4772  00FBE2  69                 	db	105	;'i'
  4773  00FBE3  73                 	db	115	;'s'
  4774  00FBE4  20                 	db	32
  4775  00FBE5  25                 	db	37
  4776  00FBE6  2E                 	db	46
  4777  00FBE7  33                 	db	51	;'3'
  4778  00FBE8  66                 	db	102	;'f'
  4779  00FBE9  20                 	db	32
  4780  00FBEA  56                 	db	86	;'V'
  4781  00FBEB  72                 	db	114	;'r'
  4782  00FBEC  6D                 	db	109	;'m'
  4783  00FBED  73                 	db	115	;'s'
  4784  00FBEE  0A                 	db	10
  4785  00FBEF  0D                 	db	13
  4786  00FBF0  00                 	db	0
  4787  00FBF1                     STR_122:
  4788  00FBF1  48                 	db	72	;'H'
  4789  00FBF2  65                 	db	101	;'e'
  4790  00FBF3  6C                 	db	108	;'l'
  4791  00FBF4  70                 	db	112	;'p'
  4792  00FBF5  20                 	db	32
  4793  00FBF6  6D                 	db	109	;'m'
  4794  00FBF7  65                 	db	101	;'e'
  4795  00FBF8  73                 	db	115	;'s'
  4796  00FBF9  73                 	db	115	;'s'
  4797  00FBFA  61                 	db	97	;'a'
  4798  00FBFB  67                 	db	103	;'g'
  4799  00FBFC  65                 	db	101	;'e'
  4800  00FBFD  73                 	db	115	;'s'
  4801  00FBFE  20                 	db	32
  4802  00FBFF  61                 	db	97	;'a'
  4803  00FC00  70                 	db	112	;'p'
  4804  00FC01  70                 	db	112	;'p'
  4805  00FC02  65                 	db	101	;'e'
  4806  00FC03  61                 	db	97	;'a'
  4807  00FC04  72                 	db	114	;'r'
  4808  00FC05  20                 	db	32
  4809  00FC06  69                 	db	105	;'i'
  4810  00FC07  6E                 	db	110	;'n'
  4811  00FC08  20                 	db	32
  4812  00FC09  79                 	db	121	;'y'
  4813  00FC0A  65                 	db	101	;'e'
  4814  00FC0B  6C                 	db	108	;'l'
  4815  00FC0C  6C                 	db	108	;'l'
  4816  00FC0D  6F                 	db	111	;'o'
  4817  00FC0E  77                 	db	119	;'w'
  4818  00FC0F  0A                 	db	10
  4819  00FC10  0D                 	db	13
  4820  00FC11  00                 	db	0
  4821  00FC12                     STR_87:
  4822  00FC12  4D                 	db	77	;'M'
  4823  00FC13  65                 	db	101	;'e'
  4824  00FC14  61                 	db	97	;'a'
  4825  00FC15  73                 	db	115	;'s'
  4826  00FC16  75                 	db	117	;'u'
  4827  00FC17  72                 	db	114	;'r'
  4828  00FC18  65                 	db	101	;'e'
  4829  00FC19  64                 	db	100	;'d'
  4830  00FC1A  20                 	db	32
  4831  00FC1B  43                 	db	67	;'C'
  4832  00FC1C  75                 	db	117	;'u'
  4833  00FC1D  72                 	db	114	;'r'
  4834  00FC1E  72                 	db	114	;'r'
  4835  00FC1F  65                 	db	101	;'e'
  4836  00FC20  6E                 	db	110	;'n'
  4837  00FC21  74                 	db	116	;'t'
  4838  00FC22  20                 	db	32
  4839  00FC23  69                 	db	105	;'i'
  4840  00FC24  73                 	db	115	;'s'
  4841  00FC25  20                 	db	32
  4842  00FC26  25                 	db	37
  4843  00FC27  2E                 	db	46
  4844  00FC28  33                 	db	51	;'3'
  4845  00FC29  66                 	db	102	;'f'
  4846  00FC2A  20                 	db	32
  4847  00FC2B  41                 	db	65	;'A'
  4848  00FC2C  6D                 	db	109	;'m'
  4849  00FC2D  70                 	db	112	;'p'
  4850  00FC2E  73                 	db	115	;'s'
  4851  00FC2F  0A                 	db	10
  4852  00FC30  0D                 	db	13
  4853  00FC31  00                 	db	0
  4854  00FC32                     STR_104:
  4855  00FC32  44                 	db	68	;'D'
  4856  00FC33  69                 	db	105	;'i'
  4857  00FC34  6D                 	db	109	;'m'
  4858  00FC35  6D                 	db	109	;'m'
  4859  00FC36  69                 	db	105	;'i'
  4860  00FC37  6E                 	db	110	;'n'
  4861  00FC38  67                 	db	103	;'g'
  4862  00FC39  20                 	db	32
  4863  00FC3A  69                 	db	105	;'i'
  4864  00FC3B  73                 	db	115	;'s'
  4865  00FC3C  20                 	db	32
  4866  00FC3D  63                 	db	99	;'c'
  4867  00FC3E  75                 	db	117	;'u'
  4868  00FC3F  72                 	db	114	;'r'
  4869  00FC40  72                 	db	114	;'r'
  4870  00FC41  65                 	db	101	;'e'
  4871  00FC42  6E                 	db	110	;'n'
  4872  00FC43  74                 	db	116	;'t'
  4873  00FC44  6C                 	db	108	;'l'
  4874  00FC45  79                 	db	121	;'y'
  4875  00FC46  20                 	db	32
  4876  00FC47  65                 	db	101	;'e'
  4877  00FC48  6E                 	db	110	;'n'
  4878  00FC49  61                 	db	97	;'a'
  4879  00FC4A  62                 	db	98	;'b'
  4880  00FC4B  6C                 	db	108	;'l'
  4881  00FC4C  65                 	db	101	;'e'
  4882  00FC4D  64                 	db	100	;'d'
  4883  00FC4E  0A                 	db	10
  4884  00FC4F  0D                 	db	13
  4885  00FC50  00                 	db	0
  4886  00FC51                     STR_126:
  4887  00FC51  55                 	db	85	;'U'
  4888  00FC52  73                 	db	115	;'s'
  4889  00FC53  65                 	db	101	;'e'
  4890  00FC54  72                 	db	114	;'r'
  4891  00FC55  20                 	db	32
  4892  00FC56  69                 	db	105	;'i'
  4893  00FC57  6E                 	db	110	;'n'
  4894  00FC58  70                 	db	112	;'p'
  4895  00FC59  75                 	db	117	;'u'
  4896  00FC5A  74                 	db	116	;'t'
  4897  00FC5B  20                 	db	32
  4898  00FC5C  61                 	db	97	;'a'
  4899  00FC5D  70                 	db	112	;'p'
  4900  00FC5E  70                 	db	112	;'p'
  4901  00FC5F  65                 	db	101	;'e'
  4902  00FC60  61                 	db	97	;'a'
  4903  00FC61  72                 	db	114	;'r'
  4904  00FC62  73                 	db	115	;'s'
  4905  00FC63  20                 	db	32
  4906  00FC64  69                 	db	105	;'i'
  4907  00FC65  6E                 	db	110	;'n'
  4908  00FC66  20                 	db	32
  4909  00FC67  77                 	db	119	;'w'
  4910  00FC68  68                 	db	104	;'h'
  4911  00FC69  69                 	db	105	;'i'
  4912  00FC6A  74                 	db	116	;'t'
  4913  00FC6B  65                 	db	101	;'e'
  4914  00FC6C  0A                 	db	10
  4915  00FC6D  0D                 	db	13
  4916  00FC6E  00                 	db	0
  4917  00FC6F                     STR_102:
  4918  00FC6F  4C                 	db	76	;'L'
  4919  00FC70  6F                 	db	111	;'o'
  4920  00FC71  61                 	db	97	;'a'
  4921  00FC72  64                 	db	100	;'d'
  4922  00FC73  20                 	db	32
  4923  00FC74  69                 	db	105	;'i'
  4924  00FC75  73                 	db	115	;'s'
  4925  00FC76  20                 	db	32
  4926  00FC77  63                 	db	99	;'c'
  4927  00FC78  75                 	db	117	;'u'
  4928  00FC79  72                 	db	114	;'r'
  4929  00FC7A  72                 	db	114	;'r'
  4930  00FC7B  65                 	db	101	;'e'
  4931  00FC7C  6E                 	db	110	;'n'
  4932  00FC7D  74                 	db	116	;'t'
  4933  00FC7E  6C                 	db	108	;'l'
  4934  00FC7F  79                 	db	121	;'y'
  4935  00FC80  20                 	db	32
  4936  00FC81  64                 	db	100	;'d'
  4937  00FC82  69                 	db	105	;'i'
  4938  00FC83  73                 	db	115	;'s'
  4939  00FC84  61                 	db	97	;'a'
  4940  00FC85  62                 	db	98	;'b'
  4941  00FC86  6C                 	db	108	;'l'
  4942  00FC87  65                 	db	101	;'e'
  4943  00FC88  64                 	db	100	;'d'
  4944  00FC89  0A                 	db	10
  4945  00FC8A  0D                 	db	13
  4946  00FC8B  00                 	db	0
  4947  00FC8C                     STR_101:
  4948  00FC8C  4C                 	db	76	;'L'
  4949  00FC8D  6F                 	db	111	;'o'
  4950  00FC8E  61                 	db	97	;'a'
  4951  00FC8F  64                 	db	100	;'d'
  4952  00FC90  20                 	db	32
  4953  00FC91  69                 	db	105	;'i'
  4954  00FC92  73                 	db	115	;'s'
  4955  00FC93  20                 	db	32
  4956  00FC94  63                 	db	99	;'c'
  4957  00FC95  75                 	db	117	;'u'
  4958  00FC96  72                 	db	114	;'r'
  4959  00FC97  72                 	db	114	;'r'
  4960  00FC98  65                 	db	101	;'e'
  4961  00FC99  6E                 	db	110	;'n'
  4962  00FC9A  74                 	db	116	;'t'
  4963  00FC9B  6C                 	db	108	;'l'
  4964  00FC9C  79                 	db	121	;'y'
  4965  00FC9D  20                 	db	32
  4966  00FC9E  65                 	db	101	;'e'
  4967  00FC9F  6E                 	db	110	;'n'
  4968  00FCA0  61                 	db	97	;'a'
  4969  00FCA1  62                 	db	98	;'b'
  4970  00FCA2  6C                 	db	108	;'l'
  4971  00FCA3  65                 	db	101	;'e'
  4972  00FCA4  64                 	db	100	;'d'
  4973  00FCA5  0A                 	db	10
  4974  00FCA6  0D                 	db	13
  4975  00FCA7  00                 	db	0
  4976  00FCA8                     STR_136:
  4977  00FCA8  52                 	db	82	;'R'
  4978  00FCA9  45                 	db	69	;'E'
  4979  00FCAA  53                 	db	83	;'S'
  4980  00FCAB  45                 	db	69	;'E'
  4981  00FCAC  54                 	db	84	;'T'
  4982  00FCAD  20                 	db	32
  4983  00FCAE  49                 	db	73	;'I'
  4984  00FCAF  6E                 	db	110	;'n'
  4985  00FCB0  73                 	db	115	;'s'
  4986  00FCB1  74                 	db	116	;'t'
  4987  00FCB2  72                 	db	114	;'r'
  4988  00FCB3  75                 	db	117	;'u'
  4989  00FCB4  63                 	db	99	;'c'
  4990  00FCB5  74                 	db	116	;'t'
  4991  00FCB6  69                 	db	105	;'i'
  4992  00FCB7  6F                 	db	111	;'o'
  4993  00FCB8  6E                 	db	110	;'n'
  4994  00FCB9  20                 	db	32
  4995  00FCBA  45                 	db	69	;'E'
  4996  00FCBB  78                 	db	120	;'x'
  4997  00FCBC  65                 	db	101	;'e'
  4998  00FCBD  63                 	db	99	;'c'
  4999  00FCBE  75                 	db	117	;'u'
  5000  00FCBF  74                 	db	116	;'t'
  5001  00FCC0  65                 	db	101	;'e'
  5002  00FCC1  64                 	db	100	;'d'
  5003  00FCC2  00                 	db	0
  5004  00FCC3                     STR_86:
  5005  00FCC3  4D                 	db	77	;'M'
  5006  00FCC4  65                 	db	101	;'e'
  5007  00FCC5  61                 	db	97	;'a'
  5008  00FCC6  73                 	db	115	;'s'
  5009  00FCC7  75                 	db	117	;'u'
  5010  00FCC8  72                 	db	114	;'r'
  5011  00FCC9  65                 	db	101	;'e'
  5012  00FCCA  20                 	db	32
  5013  00FCCB  44                 	db	68	;'D'
  5014  00FCCC  65                 	db	101	;'e'
  5015  00FCCD  74                 	db	116	;'t'
  5016  00FCCE  65                 	db	101	;'e'
  5017  00FCCF  63                 	db	99	;'c'
  5018  00FCD0  74                 	db	116	;'t'
  5019  00FCD1  65                 	db	101	;'e'
  5020  00FCD2  64                 	db	100	;'d'
  5021  00FCD3  20                 	db	32
  5022  00FCD4  43                 	db	67	;'C'
  5023  00FCD5  75                 	db	117	;'u'
  5024  00FCD6  72                 	db	114	;'r'
  5025  00FCD7  72                 	db	114	;'r'
  5026  00FCD8  65                 	db	101	;'e'
  5027  00FCD9  6E                 	db	110	;'n'
  5028  00FCDA  74                 	db	116	;'t'
  5029  00FCDB  3F                 	db	63	;'?'
  5030  00FCDC  00                 	db	0
  5031  00FCDD                     STR_108:
  5032  00FCDD  4C                 	db	76	;'L'
  5033  00FCDE  6F                 	db	111	;'o'
  5034  00FCDF  61                 	db	97	;'a'
  5035  00FCE0  64                 	db	100	;'d'
  5036  00FCE1  20                 	db	32
  5037  00FCE2  68                 	db	104	;'h'
  5038  00FCE3  61                 	db	97	;'a'
  5039  00FCE4  73                 	db	115	;'s'
  5040  00FCE5  20                 	db	32
  5041  00FCE6  62                 	db	98	;'b'
  5042  00FCE7  65                 	db	101	;'e'
  5043  00FCE8  65                 	db	101	;'e'
  5044  00FCE9  6E                 	db	110	;'n'
  5045  00FCEA  20                 	db	32
  5046  00FCEB  64                 	db	100	;'d'
  5047  00FCEC  69                 	db	105	;'i'
  5048  00FCED  73                 	db	115	;'s'
  5049  00FCEE  61                 	db	97	;'a'
  5050  00FCEF  62                 	db	98	;'b'
  5051  00FCF0  6C                 	db	108	;'l'
  5052  00FCF1  65                 	db	101	;'e'
  5053  00FCF2  64                 	db	100	;'d'
  5054  00FCF3  0A                 	db	10
  5055  00FCF4  0D                 	db	13
  5056  00FCF5  00                 	db	0
  5057  00FCF6                     STR_109:
  5058  00FCF6  53                 	db	83	;'S'
  5059  00FCF7  65                 	db	101	;'e'
  5060  00FCF8  74                 	db	116	;'t'
  5061  00FCF9  20                 	db	32
  5062  00FCFA  44                 	db	68	;'D'
  5063  00FCFB  69                 	db	105	;'i'
  5064  00FCFC  6D                 	db	109	;'m'
  5065  00FCFD  6D                 	db	109	;'m'
  5066  00FCFE  69                 	db	105	;'i'
  5067  00FCFF  6E                 	db	110	;'n'
  5068  00FD00  67                 	db	103	;'g'
  5069  00FD01  20                 	db	32
  5070  00FD02  50                 	db	80	;'P'
  5071  00FD03  65                 	db	101	;'e'
  5072  00FD04  72                 	db	114	;'r'
  5073  00FD05  63                 	db	99	;'c'
  5074  00FD06  65                 	db	101	;'e'
  5075  00FD07  6E                 	db	110	;'n'
  5076  00FD08  74                 	db	116	;'t'
  5077  00FD09  61                 	db	97	;'a'
  5078  00FD0A  67                 	db	103	;'g'
  5079  00FD0B  65                 	db	101	;'e'
  5080  00FD0C  3A                 	db	58	;':'
  5081  00FD0D  20                 	db	32
  5082  00FD0E  00                 	db	0
  5083  00FD0F                     STR_70:
  5084  00FD0F  4E                 	db	78	;'N'
  5085  00FD10  6F                 	db	111	;'o'
  5086  00FD11  20                 	db	32
  5087  00FD12  41                 	db	65	;'A'
  5088  00FD13  44                 	db	68	;'D'
  5089  00FD14  43                 	db	67	;'C'
  5090  00FD15  20                 	db	32
  5091  00FD16  45                 	db	69	;'E'
  5092  00FD17  72                 	db	114	;'r'
  5093  00FD18  72                 	db	114	;'r'
  5094  00FD19  6F                 	db	111	;'o'
  5095  00FD1A  72                 	db	114	;'r'
  5096  00FD1B  20                 	db	32
  5097  00FD1C  64                 	db	100	;'d'
  5098  00FD1D  65                 	db	101	;'e'
  5099  00FD1E  74                 	db	116	;'t'
  5100  00FD1F  65                 	db	101	;'e'
  5101  00FD20  63                 	db	99	;'c'
  5102  00FD21  74                 	db	116	;'t'
  5103  00FD22  65                 	db	101	;'e'
  5104  00FD23  64                 	db	100	;'d'
  5105  00FD24  0A                 	db	10
  5106  00FD25  0D                 	db	13
  5107  00FD26  00                 	db	0
  5108  00FD27                     STR_138:
  5109  00FD27  53                 	db	83	;'S'
  5110  00FD28  74                 	db	116	;'t'
  5111  00FD29  61                 	db	97	;'a'
  5112  00FD2A  63                 	db	99	;'c'
  5113  00FD2B  6B                 	db	107	;'k'
  5114  00FD2C  20                 	db	32
  5115  00FD2D  55                 	db	85	;'U'
  5116  00FD2E  6E                 	db	110	;'n'
  5117  00FD2F  64                 	db	100	;'d'
  5118  00FD30  65                 	db	101	;'e'
  5119  00FD31  72                 	db	114	;'r'
  5120  00FD32  66                 	db	102	;'f'
  5121  00FD33  6C                 	db	108	;'l'
  5122  00FD34  6F                 	db	111	;'o'
  5123  00FD35  77                 	db	119	;'w'
  5124  00FD36  20                 	db	32
  5125  00FD37  52                 	db	82	;'R'
  5126  00FD38  65                 	db	101	;'e'
  5127  00FD39  73                 	db	115	;'s'
  5128  00FD3A  65                 	db	101	;'e'
  5129  00FD3B  74                 	db	116	;'t'
  5130  00FD3C  00                 	db	0
  5131  00FD3D                     STR_67:
  5132  00FD3D  49                 	db	73	;'I'
  5133  00FD3E  6E                 	db	110	;'n'
  5134  00FD3F  74                 	db	116	;'t'
  5135  00FD40  65                 	db	101	;'e'
  5136  00FD41  72                 	db	114	;'r'
  5137  00FD42  6E                 	db	110	;'n'
  5138  00FD43  61                 	db	97	;'a'
  5139  00FD44  6C                 	db	108	;'l'
  5140  00FD45  20                 	db	32
  5141  00FD46  46                 	db	70	;'F'
  5142  00FD47  56                 	db	86	;'V'
  5143  00FD48  52                 	db	82	;'R'
  5144  00FD49  20                 	db	32
  5145  00FD4A  42                 	db	66	;'B'
  5146  00FD4B  75                 	db	117	;'u'
  5147  00FD4C  66                 	db	102	;'f'
  5148  00FD4D  66                 	db	102	;'f'
  5149  00FD4E  65                 	db	101	;'e'
  5150  00FD4F  72                 	db	114	;'r'
  5151  00FD50  20                 	db	32
  5152  00FD51  31                 	db	49	;'1'
  5153  00FD52  00                 	db	0
  5154  00FD53                     STR_137:
  5155  00FD53  53                 	db	83	;'S'
  5156  00FD54  74                 	db	116	;'t'
  5157  00FD55  61                 	db	97	;'a'
  5158  00FD56  63                 	db	99	;'c'
  5159  00FD57  6B                 	db	107	;'k'
  5160  00FD58  20                 	db	32
  5161  00FD59  4F                 	db	79	;'O'
  5162  00FD5A  76                 	db	118	;'v'
  5163  00FD5B  65                 	db	101	;'e'
  5164  00FD5C  72                 	db	114	;'r'
  5165  00FD5D  66                 	db	102	;'f'
  5166  00FD5E  6C                 	db	108	;'l'
  5167  00FD5F  6F                 	db	111	;'o'
  5168  00FD60  77                 	db	119	;'w'
  5169  00FD61  20                 	db	32
  5170  00FD62  52                 	db	82	;'R'
  5171  00FD63  65                 	db	101	;'e'
  5172  00FD64  73                 	db	115	;'s'
  5173  00FD65  65                 	db	101	;'e'
  5174  00FD66  74                 	db	116	;'t'
  5175  00FD67  00                 	db	0
  5176  00FD68                     STR_72:
  5177  00FD68  43                 	db	67	;'C'
  5178  00FD69  6C                 	db	108	;'l'
  5179  00FD6A  65                 	db	101	;'e'
  5180  00FD6B  61                 	db	97	;'a'
  5181  00FD6C  72                 	db	114	;'r'
  5182  00FD6D  69                 	db	105	;'i'
  5183  00FD6E  6E                 	db	110	;'n'
  5184  00FD6F  67                 	db	103	;'g'
  5185  00FD70  20                 	db	32
  5186  00FD71  41                 	db	65	;'A'
  5187  00FD72  44                 	db	68	;'D'
  5188  00FD73  43                 	db	67	;'C'
  5189  00FD74  20                 	db	32
  5190  00FD75  45                 	db	69	;'E'
  5191  00FD76  72                 	db	114	;'r'
  5192  00FD77  72                 	db	114	;'r'
  5193  00FD78  6F                 	db	111	;'o'
  5194  00FD79  72                 	db	114	;'r'
  5195  00FD7A  0A                 	db	10
  5196  00FD7B  0D                 	db	13
  5197  00FD7C  00                 	db	0
  5198  00FD7D                     STR_90:
  5199  00FD7D  4D                 	db	77	;'M'
  5200  00FD7E  65                 	db	101	;'e'
  5201  00FD7F  61                 	db	97	;'a'
  5202  00FD80  73                 	db	115	;'s'
  5203  00FD81  75                 	db	117	;'u'
  5204  00FD82  72                 	db	114	;'r'
  5205  00FD83  65                 	db	101	;'e'
  5206  00FD84  20                 	db	32
  5207  00FD85  52                 	db	82	;'R'
  5208  00FD86  4D                 	db	77	;'M'
  5209  00FD87  53                 	db	83	;'S'
  5210  00FD88  20                 	db	32
  5211  00FD89  56                 	db	86	;'V'
  5212  00FD8A  6F                 	db	111	;'o'
  5213  00FD8B  6C                 	db	108	;'l'
  5214  00FD8C  74                 	db	116	;'t'
  5215  00FD8D  61                 	db	97	;'a'
  5216  00FD8E  67                 	db	103	;'g'
  5217  00FD8F  65                 	db	101	;'e'
  5218  00FD90  3F                 	db	63	;'?'
  5219  00FD91  00                 	db	0
  5220  00FD92                     STR_88:
  5221  00FD92  4D                 	db	77	;'M'
  5222  00FD93  65                 	db	101	;'e'
  5223  00FD94  61                 	db	97	;'a'
  5224  00FD95  73                 	db	115	;'s'
  5225  00FD96  75                 	db	117	;'u'
  5226  00FD97  72                 	db	114	;'r'
  5227  00FD98  65                 	db	101	;'e'
  5228  00FD99  20                 	db	32
  5229  00FD9A  52                 	db	82	;'R'
  5230  00FD9B  4D                 	db	77	;'M'
  5231  00FD9C  53                 	db	83	;'S'
  5232  00FD9D  20                 	db	32
  5233  00FD9E  43                 	db	67	;'C'
  5234  00FD9F  75                 	db	117	;'u'
  5235  00FDA0  72                 	db	114	;'r'
  5236  00FDA1  72                 	db	114	;'r'
  5237  00FDA2  65                 	db	101	;'e'
  5238  00FDA3  6E                 	db	110	;'n'
  5239  00FDA4  74                 	db	116	;'t'
  5240  00FDA5  3F                 	db	63	;'?'
  5241  00FDA6  00                 	db	0
  5242  00FDA7                     STR_133:
  5243  00FDA7  4D                 	db	77	;'M'
  5244  00FDA8  61                 	db	97	;'a'
  5245  00FDA9  73                 	db	115	;'s'
  5246  00FDAA  74                 	db	116	;'t'
  5247  00FDAB  65                 	db	101	;'e'
  5248  00FDAC  72                 	db	114	;'r'
  5249  00FDAD  20                 	db	32
  5250  00FDAE  43                 	db	67	;'C'
  5251  00FDAF  6C                 	db	108	;'l'
  5252  00FDB0  65                 	db	101	;'e'
  5253  00FDB1  61                 	db	97	;'a'
  5254  00FDB2  72                 	db	114	;'r'
  5255  00FDB3  20                 	db	32
  5256  00FDB4  52                 	db	82	;'R'
  5257  00FDB5  65                 	db	101	;'e'
  5258  00FDB6  73                 	db	115	;'s'
  5259  00FDB7  65                 	db	101	;'e'
  5260  00FDB8  74                 	db	116	;'t'
  5261  00FDB9  00                 	db	0
  5262  00FDBA                     STR_80:
  5263  00FDBA  4D                 	db	77	;'M'
  5264  00FDBB  65                 	db	101	;'e'
  5265  00FDBC  61                 	db	97	;'a'
  5266  00FDBD  73                 	db	115	;'s'
  5267  00FDBE  75                 	db	117	;'u'
  5268  00FDBF  72                 	db	114	;'r'
  5269  00FDC0  65                 	db	101	;'e'
  5270  00FDC1  20                 	db	32
  5271  00FDC2  44                 	db	68	;'D'
  5272  00FDC3  69                 	db	105	;'i'
  5273  00FDC4  65                 	db	101	;'e'
  5274  00FDC5  20                 	db	32
  5275  00FDC6  54                 	db	84	;'T'
  5276  00FDC7  65                 	db	101	;'e'
  5277  00FDC8  6D                 	db	109	;'m'
  5278  00FDC9  70                 	db	112	;'p'
  5279  00FDCA  3F                 	db	63	;'?'
  5280  00FDCB  00                 	db	0
  5281  00FDCC                     STR_141:
  5282  00FDCC  30                 	db	48	;'0'
  5283  00FDCD  31                 	db	49	;'1'
  5284  00FDCE  32                 	db	50	;'2'
  5285  00FDCF  33                 	db	51	;'3'
  5286  00FDD0  34                 	db	52	;'4'
  5287  00FDD1  35                 	db	53	;'5'
  5288  00FDD2  36                 	db	54	;'6'
  5289  00FDD3  37                 	db	55	;'7'
  5290  00FDD4  38                 	db	56	;'8'
  5291  00FDD5  39                 	db	57	;'9'
  5292  00FDD6  41                 	db	65	;'A'
  5293  00FDD7  42                 	db	66	;'B'
  5294  00FDD8  43                 	db	67	;'C'
  5295  00FDD9  44                 	db	68	;'D'
  5296  00FDDA  45                 	db	69	;'E'
  5297  00FDDB  46                 	db	70	;'F'
  5298  00FDDC  00                 	db	0
  5299  00FDDD                     STR_51:
  5300  00FDDD  41                 	db	65	;'A'
  5301  00FDDE  43                 	db	67	;'C'
  5302  00FDDF  20                 	db	32
  5303  00FDE0  50                 	db	80	;'P'
  5304  00FDE1  6F                 	db	111	;'o'
  5305  00FDE2  77                 	db	119	;'w'
  5306  00FDE3  65                 	db	101	;'e'
  5307  00FDE4  72                 	db	114	;'r'
  5308  00FDE5  20                 	db	32
  5309  00FDE6  4D                 	db	77	;'M'
  5310  00FDE7  65                 	db	101	;'e'
  5311  00FDE8  74                 	db	116	;'t'
  5312  00FDE9  65                 	db	101	;'e'
  5313  00FDEA  72                 	db	114	;'r'
  5314  00FDEB  0A                 	db	10
  5315  00FDEC  0D                 	db	13
  5316  00FDED  00                 	db	0
  5317  00FDEE                     STR_103:
  5318  00FDEE  44                 	db	68	;'D'
  5319  00FDEF  69                 	db	105	;'i'
  5320  00FDF0  6D                 	db	109	;'m'
  5321  00FDF1  6D                 	db	109	;'m'
  5322  00FDF2  69                 	db	105	;'i'
  5323  00FDF3  6E                 	db	110	;'n'
  5324  00FDF4  67                 	db	103	;'g'
  5325  00FDF5  20                 	db	32
  5326  00FDF6  45                 	db	69	;'E'
  5327  00FDF7  6E                 	db	110	;'n'
  5328  00FDF8  61                 	db	97	;'a'
  5329  00FDF9  62                 	db	98	;'b'
  5330  00FDFA  6C                 	db	108	;'l'
  5331  00FDFB  65                 	db	101	;'e'
  5332  00FDFC  64                 	db	100	;'d'
  5333  00FDFD  3F                 	db	63	;'?'
  5334  00FDFE  00                 	db	0
  5335  00FDFF                     STR_73:
  5336  00FDFF  56                 	db	86	;'V'
  5337  00FE00  43                 	db	67	;'C'
  5338  00FE01  43                 	db	67	;'C'
  5339  00FE02  20                 	db	32
  5340  00FE03  4F                 	db	79	;'O'
  5341  00FE04  76                 	db	118	;'v'
  5342  00FE05  65                 	db	101	;'e'
  5343  00FE06  72                 	db	114	;'r'
  5344  00FE07  76                 	db	118	;'v'
  5345  00FE08  6F                 	db	111	;'o'
  5346  00FE09  6C                 	db	108	;'l'
  5347  00FE0A  74                 	db	116	;'t'
  5348  00FE0B  61                 	db	97	;'a'
  5349  00FE0C  67                 	db	103	;'g'
  5350  00FE0D  65                 	db	101	;'e'
  5351  00FE0E  3F                 	db	63	;'?'
  5352  00FE0F  00                 	db	0
  5353  00FE10                     STR_130:
  5354  00FE10  55                 	db	85	;'U'
  5355  00FE11  6E                 	db	110	;'n'
  5356  00FE12  64                 	db	100	;'d'
  5357  00FE13  65                 	db	101	;'e'
  5358  00FE14  66                 	db	102	;'f'
  5359  00FE15  69                 	db	105	;'i'
  5360  00FE16  6E                 	db	110	;'n'
  5361  00FE17  65                 	db	101	;'e'
  5362  00FE18  64                 	db	100	;'d'
  5363  00FE19  20                 	db	32
  5364  00FE1A  52                 	db	82	;'R'
  5365  00FE1B  65                 	db	101	;'e'
  5366  00FE1C  73                 	db	115	;'s'
  5367  00FE1D  65                 	db	101	;'e'
  5368  00FE1E  74                 	db	116	;'t'
  5369  00FE1F  00                 	db	0
  5370  00FE20                     STR_132:
  5371  00FE20  42                 	db	66	;'B'
  5372  00FE21  72                 	db	114	;'r'
  5373  00FE22  6F                 	db	111	;'o'
  5374  00FE23  77                 	db	119	;'w'
  5375  00FE24  6E                 	db	110	;'n'
  5376  00FE25  20                 	db	32
  5377  00FE26  4F                 	db	79	;'O'
  5378  00FE27  75                 	db	117	;'u'
  5379  00FE28  74                 	db	116	;'t'
  5380  00FE29  20                 	db	32
  5381  00FE2A  52                 	db	82	;'R'
  5382  00FE2B  65                 	db	101	;'e'
  5383  00FE2C  73                 	db	115	;'s'
  5384  00FE2D  65                 	db	101	;'e'
  5385  00FE2E  74                 	db	116	;'t'
  5386  00FE2F  00                 	db	0
  5387  00FE30                     STR_76:
  5388  00FE30  4D                 	db	77	;'M'
  5389  00FE31  65                 	db	101	;'e'
  5390  00FE32  61                 	db	97	;'a'
  5391  00FE33  73                 	db	115	;'s'
  5392  00FE34  75                 	db	117	;'u'
  5393  00FE35  72                 	db	114	;'r'
  5394  00FE36  65                 	db	101	;'e'
  5395  00FE37  20                 	db	32
  5396  00FE38  50                 	db	80	;'P'
  5397  00FE39  4F                 	db	79	;'O'
  5398  00FE3A  53                 	db	83	;'S'
  5399  00FE3B  33                 	db	51	;'3'
  5400  00FE3C  50                 	db	80	;'P'
  5401  00FE3D  33                 	db	51	;'3'
  5402  00FE3E  3F                 	db	63	;'?'
  5403  00FE3F  00                 	db	0
  5404  00FE40                     STR_116:
  5405  00FE40  44                 	db	68	;'D'
  5406  00FE41  65                 	db	101	;'e'
  5407  00FE42  76                 	db	118	;'v'
  5408  00FE43  69                 	db	105	;'i'
  5409  00FE44  63                 	db	99	;'c'
  5410  00FE45  65                 	db	101	;'e'
  5411  00FE46  20                 	db	32
  5412  00FE47  4F                 	db	79	;'O'
  5413  00FE48  6E                 	db	110	;'n'
  5414  00FE49  20                 	db	32
  5415  00FE4A  54                 	db	84	;'T'
  5416  00FE4B  69                 	db	105	;'i'
  5417  00FE4C  6D                 	db	109	;'m'
  5418  00FE4D  65                 	db	101	;'e'
  5419  00FE4E  3F                 	db	63	;'?'
  5420  00FE4F  00                 	db	0
  5421  00FE50                     STR_47:
  5422  00FE50  43                 	db	67	;'C'
  5423  00FE51  61                 	db	97	;'a'
  5424  00FE52  75                 	db	117	;'u'
  5425  00FE53  73                 	db	115	;'s'
  5426  00FE54  65                 	db	101	;'e'
  5427  00FE55  20                 	db	32
  5428  00FE56  6F                 	db	111	;'o'
  5429  00FE57  66                 	db	102	;'f'
  5430  00FE58  20                 	db	32
  5431  00FE59  52                 	db	82	;'R'
  5432  00FE5A  65                 	db	101	;'e'
  5433  00FE5B  73                 	db	115	;'s'
  5434  00FE5C  65                 	db	101	;'e'
  5435  00FE5D  74                 	db	116	;'t'
  5436  00FE5E  3F                 	db	63	;'?'
  5437  00FE5F  00                 	db	0
  5438  00FE60                     STR_96:
  5439  00FE60  44                 	db	68	;'D'
  5440  00FE61  69                 	db	105	;'i'
  5441  00FE62  73                 	db	115	;'s'
  5442  00FE63  61                 	db	97	;'a'
  5443  00FE64  62                 	db	98	;'b'
  5444  00FE65  6C                 	db	108	;'l'
  5445  00FE66  65                 	db	101	;'e'
  5446  00FE67  20                 	db	32
  5447  00FE68  44                 	db	68	;'D'
  5448  00FE69  69                 	db	105	;'i'
  5449  00FE6A  6D                 	db	109	;'m'
  5450  00FE6B  6D                 	db	109	;'m'
  5451  00FE6C  69                 	db	105	;'i'
  5452  00FE6D  6E                 	db	110	;'n'
  5453  00FE6E  67                 	db	103	;'g'
  5454  00FE6F  00                 	db	0
  5455  00FE70                     STR_71:
  5456  00FE70  43                 	db	67	;'C'
  5457  00FE71  6C                 	db	108	;'l'
  5458  00FE72  65                 	db	101	;'e'
  5459  00FE73  61                 	db	97	;'a'
  5460  00FE74  72                 	db	114	;'r'
  5461  00FE75  20                 	db	32
  5462  00FE76  41                 	db	65	;'A'
  5463  00FE77  44                 	db	68	;'D'
  5464  00FE78  43                 	db	67	;'C'
  5465  00FE79  20                 	db	32
  5466  00FE7A  45                 	db	69	;'E'
  5467  00FE7B  72                 	db	114	;'r'
  5468  00FE7C  72                 	db	114	;'r'
  5469  00FE7D  6F                 	db	111	;'o'
  5470  00FE7E  72                 	db	114	;'r'
  5471  00FE7F  00                 	db	0
  5472  00FE80                     STR_131:
  5473  00FE80  50                 	db	80	;'P'
  5474  00FE81  6F                 	db	111	;'o'
  5475  00FE82  77                 	db	119	;'w'
  5476  00FE83  65                 	db	101	;'e'
  5477  00FE84  72                 	db	114	;'r'
  5478  00FE85  20                 	db	32
  5479  00FE86  4F                 	db	79	;'O'
  5480  00FE87  6E                 	db	110	;'n'
  5481  00FE88  20                 	db	32
  5482  00FE89  52                 	db	82	;'R'
  5483  00FE8A  65                 	db	101	;'e'
  5484  00FE8B  73                 	db	115	;'s'
  5485  00FE8C  65                 	db	101	;'e'
  5486  00FE8D  74                 	db	116	;'t'
  5487  00FE8E  00                 	db	0
  5488  00FE8F                     STR_78:
  5489  00FE8F  4D                 	db	77	;'M'
  5490  00FE90  65                 	db	101	;'e'
  5491  00FE91  61                 	db	97	;'a'
  5492  00FE92  73                 	db	115	;'s'
  5493  00FE93  75                 	db	117	;'u'
  5494  00FE94  72                 	db	114	;'r'
  5495  00FE95  65                 	db	101	;'e'
  5496  00FE96  20                 	db	32
  5497  00FE97  50                 	db	80	;'P'
  5498  00FE98  4F                 	db	79	;'O'
  5499  00FE99  53                 	db	83	;'S'
  5500  00FE9A  31                 	db	49	;'1'
  5501  00FE9B  32                 	db	50	;'2'
  5502  00FE9C  3F                 	db	63	;'?'
  5503  00FE9D  00                 	db	0
  5504  00FE9E                     STR_92:
  5505  00FE9E  4D                 	db	77	;'M'
  5506  00FE9F  65                 	db	101	;'e'
  5507  00FEA0  61                 	db	97	;'a'
  5508  00FEA1  73                 	db	115	;'s'
  5509  00FEA2  75                 	db	117	;'u'
  5510  00FEA3  72                 	db	114	;'r'
  5511  00FEA4  65                 	db	101	;'e'
  5512  00FEA5  20                 	db	32
  5513  00FEA6  50                 	db	80	;'P'
  5514  00FEA7  6F                 	db	111	;'o'
  5515  00FEA8  77                 	db	119	;'w'
  5516  00FEA9  65                 	db	101	;'e'
  5517  00FEAA  72                 	db	114	;'r'
  5518  00FEAB  3F                 	db	63	;'?'
  5519  00FEAC  00                 	db	0
  5520  00FEAD                     STR_94:
  5521  00FEAD  45                 	db	69	;'E'
  5522  00FEAE  6E                 	db	110	;'n'
  5523  00FEAF  61                 	db	97	;'a'
  5524  00FEB0  62                 	db	98	;'b'
  5525  00FEB1  6C                 	db	108	;'l'
  5526  00FEB2  65                 	db	101	;'e'
  5527  00FEB3  20                 	db	32
  5528  00FEB4  44                 	db	68	;'D'
  5529  00FEB5  69                 	db	105	;'i'
  5530  00FEB6  6D                 	db	109	;'m'
  5531  00FEB7  6D                 	db	109	;'m'
  5532  00FEB8  69                 	db	105	;'i'
  5533  00FEB9  6E                 	db	110	;'n'
  5534  00FEBA  67                 	db	103	;'g'
  5535  00FEBB  00                 	db	0
  5536  00FEBC                     STR_66:
  5537  00FEBC  49                 	db	73	;'I'
  5538  00FEBD  6E                 	db	110	;'n'
  5539  00FEBE  74                 	db	116	;'t'
  5540  00FEBF  65                 	db	101	;'e'
  5541  00FEC0  72                 	db	114	;'r'
  5542  00FEC1  6E                 	db	110	;'n'
  5543  00FEC2  61                 	db	97	;'a'
  5544  00FEC3  6C                 	db	108	;'l'
  5545  00FEC4  20                 	db	32
  5546  00FEC5  44                 	db	68	;'D'
  5547  00FEC6  41                 	db	65	;'A'
  5548  00FEC7  43                 	db	67	;'C'
  5549  00FEC8  31                 	db	49	;'1'
  5550  00FEC9  00                 	db	0
  5551  00FECA                     STR_84:
  5552  00FECA  4D                 	db	77	;'M'
  5553  00FECB  65                 	db	101	;'e'
  5554  00FECC  61                 	db	97	;'a'
  5555  00FECD  73                 	db	115	;'s'
  5556  00FECE  75                 	db	117	;'u'
  5557  00FECF  72                 	db	114	;'r'
  5558  00FED0  65                 	db	101	;'e'
  5559  00FED1  20                 	db	32
  5560  00FED2  41                 	db	65	;'A'
  5561  00FED3  56                 	db	86	;'V'
  5562  00FED4  53                 	db	83	;'S'
  5563  00FED5  53                 	db	83	;'S'
  5564  00FED6  3F                 	db	63	;'?'
  5565  00FED7  00                 	db	0
  5566  00FED8                     STR_100:
  5567  00FED8  4C                 	db	76	;'L'
  5568  00FED9  6F                 	db	111	;'o'
  5569  00FEDA  61                 	db	97	;'a'
  5570  00FEDB  64                 	db	100	;'d'
  5571  00FEDC  20                 	db	32
  5572  00FEDD  45                 	db	69	;'E'
  5573  00FEDE  6E                 	db	110	;'n'
  5574  00FEDF  61                 	db	97	;'a'
  5575  00FEE0  62                 	db	98	;'b'
  5576  00FEE1  6C                 	db	108	;'l'
  5577  00FEE2  65                 	db	101	;'e'
  5578  00FEE3  64                 	db	100	;'d'
  5579  00FEE4  3F                 	db	63	;'?'
  5580  00FEE5  00                 	db	0
  5581  00FEE6                     STR_118:
  5582  00FEE6  4C                 	db	76	;'L'
  5583  00FEE7  6F                 	db	111	;'o'
  5584  00FEE8  61                 	db	97	;'a'
  5585  00FEE9  64                 	db	100	;'d'
  5586  00FEEA  20                 	db	32
  5587  00FEEB  4F                 	db	79	;'O'
  5588  00FEEC  6E                 	db	110	;'n'
  5589  00FEED  20                 	db	32
  5590  00FEEE  54                 	db	84	;'T'
  5591  00FEEF  69                 	db	105	;'i'
  5592  00FEF0  6D                 	db	109	;'m'
  5593  00FEF1  65                 	db	101	;'e'
  5594  00FEF2  3F                 	db	63	;'?'
  5595  00FEF3  00                 	db	0
  5596  00FEF4                     STR_64:
  5597  00FEF4  49                 	db	73	;'I'
  5598  00FEF5  6E                 	db	110	;'n'
  5599  00FEF6  74                 	db	116	;'t'
  5600  00FEF7  65                 	db	101	;'e'
  5601  00FEF8  72                 	db	114	;'r'
  5602  00FEF9  6E                 	db	110	;'n'
  5603  00FEFA  61                 	db	97	;'a'
  5604  00FEFB  6C                 	db	108	;'l'
  5605  00FEFC  20                 	db	32
  5606  00FEFD  41                 	db	65	;'A'
  5607  00FEFE  56                 	db	86	;'V'
  5608  00FEFF  53                 	db	83	;'S'
  5609  00FF00  53                 	db	83	;'S'
  5610  00FF01  00                 	db	0
  5611  00FF02                     STR_65:
  5612  00FF02  49                 	db	73	;'I'
  5613  00FF03  6E                 	db	110	;'n'
  5614  00FF04  74                 	db	116	;'t'
  5615  00FF05  65                 	db	101	;'e'
  5616  00FF06  72                 	db	114	;'r'
  5617  00FF07  6E                 	db	110	;'n'
  5618  00FF08  61                 	db	97	;'a'
  5619  00FF09  6C                 	db	108	;'l'
  5620  00FF0A  20                 	db	32
  5621  00FF0B  54                 	db	84	;'T'
  5622  00FF0C  65                 	db	101	;'e'
  5623  00FF0D  6D                 	db	109	;'m'
  5624  00FF0E  70                 	db	112	;'p'
  5625  00FF0F  00                 	db	0
  5626  00FF10                     STR_128:
  5627  00FF10  50                 	db	80	;'P'
  5628  00FF11  49                 	db	73	;'I'
  5629  00FF12  43                 	db	67	;'C'
  5630  00FF13  31                 	db	49	;'1'
  5631  00FF14  38                 	db	56	;'8'
  5632  00FF15  4C                 	db	76	;'L'
  5633  00FF16  46                 	db	70	;'F'
  5634  00FF17  36                 	db	54	;'6'
  5635  00FF18  37                 	db	55	;'7'
  5636  00FF19  4B                 	db	75	;'K'
  5637  00FF1A  34                 	db	52	;'4'
  5638  00FF1B  30                 	db	48	;'0'
  5639  00FF1C  00                 	db	0
  5640  00FF1D                     STR_55:
  5641  00FF1D  52                 	db	82	;'R'
  5642  00FF1E  65                 	db	101	;'e'
  5643  00FF1F  76                 	db	118	;'v'
  5644  00FF20  69                 	db	105	;'i'
  5645  00FF21  73                 	db	115	;'s'
  5646  00FF22  69                 	db	105	;'i'
  5647  00FF23  6F                 	db	111	;'o'
  5648  00FF24  6E                 	db	110	;'n'
  5649  00FF25  20                 	db	32
  5650  00FF26  49                 	db	73	;'I'
  5651  00FF27  44                 	db	68	;'D'
  5652  00FF28  3F                 	db	63	;'?'
  5653  00FF29  00                 	db	0
  5654  00FF2A                     STR_82:
  5655  00FF2A  4D                 	db	77	;'M'
  5656  00FF2B  65                 	db	101	;'e'
  5657  00FF2C  61                 	db	97	;'a'
  5658  00FF2D  73                 	db	115	;'s'
  5659  00FF2E  75                 	db	117	;'u'
  5660  00FF2F  72                 	db	114	;'r'
  5661  00FF30  65                 	db	101	;'e'
  5662  00FF31  20                 	db	32
  5663  00FF32  46                 	db	70	;'F'
  5664  00FF33  56                 	db	86	;'V'
  5665  00FF34  52                 	db	82	;'R'
  5666  00FF35  3F                 	db	63	;'?'
  5667  00FF36  00                 	db	0
  5668  00FF37                     STR_107:
  5669  00FF37  44                 	db	68	;'D'
  5670  00FF38  69                 	db	105	;'i'
  5671  00FF39  73                 	db	115	;'s'
  5672  00FF3A  61                 	db	97	;'a'
  5673  00FF3B  62                 	db	98	;'b'
  5674  00FF3C  6C                 	db	108	;'l'
  5675  00FF3D  65                 	db	101	;'e'
  5676  00FF3E  20                 	db	32
  5677  00FF3F  4C                 	db	76	;'L'
  5678  00FF40  6F                 	db	111	;'o'
  5679  00FF41  61                 	db	97	;'a'
  5680  00FF42  64                 	db	100	;'d'
  5681  00FF43  00                 	db	0
  5682  00FF44                     STR_127:
  5683  00FF44  50                 	db	80	;'P'
  5684  00FF45  49                 	db	73	;'I'
  5685  00FF46  43                 	db	67	;'C'
  5686  00FF47  31                 	db	49	;'1'
  5687  00FF48  38                 	db	56	;'8'
  5688  00FF49  46                 	db	70	;'F'
  5689  00FF4A  36                 	db	54	;'6'
  5690  00FF4B  37                 	db	55	;'7'
  5691  00FF4C  4B                 	db	75	;'K'
  5692  00FF4D  34                 	db	52	;'4'
  5693  00FF4E  30                 	db	48	;'0'
  5694  00FF4F  00                 	db	0
  5695  00FF50                     STR_98:
  5696  00FF50  45                 	db	69	;'E'
  5697  00FF51  6E                 	db	110	;'n'
  5698  00FF52  61                 	db	97	;'a'
  5699  00FF53  62                 	db	98	;'b'
  5700  00FF54  6C                 	db	108	;'l'
  5701  00FF55  65                 	db	101	;'e'
  5702  00FF56  20                 	db	32
  5703  00FF57  4C                 	db	76	;'L'
  5704  00FF58  6F                 	db	111	;'o'
  5705  00FF59  61                 	db	97	;'a'
  5706  00FF5A  64                 	db	100	;'d'
  5707  00FF5B  00                 	db	0
  5708  00FF5C                     STR_53:
  5709  00FF5C  44                 	db	68	;'D'
  5710  00FF5D  65                 	db	101	;'e'
  5711  00FF5E  76                 	db	118	;'v'
  5712  00FF5F  69                 	db	105	;'i'
  5713  00FF60  63                 	db	99	;'c'
  5714  00FF61  65                 	db	101	;'e'
  5715  00FF62  20                 	db	32
  5716  00FF63  49                 	db	73	;'I'
  5717  00FF64  44                 	db	68	;'D'
  5718  00FF65  3F                 	db	63	;'?'
  5719  00FF66  00                 	db	0
  5720  00FF67                     STR_60:
  5721  00FF67  41                 	db	65	;'A'
  5722  00FF68  44                 	db	68	;'D'
  5723  00FF69  43                 	db	67	;'C'
  5724  00FF6A  20                 	db	32
  5725  00FF6B  45                 	db	69	;'E'
  5726  00FF6C  72                 	db	114	;'r'
  5727  00FF6D  72                 	db	114	;'r'
  5728  00FF6E  6F                 	db	111	;'o'
  5729  00FF6F  72                 	db	114	;'r'
  5730  00FF70  3F                 	db	63	;'?'
  5731  00FF71  00                 	db	0
  5732  00FF72                     STR_57:
  5733  00FF72  55                 	db	85	;'U'
  5734  00FF73  73                 	db	115	;'s'
  5735  00FF74  65                 	db	101	;'e'
  5736  00FF75  72                 	db	114	;'r'
  5737  00FF76  20                 	db	32
  5738  00FF77  49                 	db	73	;'I'
  5739  00FF78  44                 	db	68	;'D'
  5740  00FF79  73                 	db	115	;'s'
  5741  00FF7A  3F                 	db	63	;'?'
  5742  00FF7B  00                 	db	0
  5743  00FF7C                     STR_68:
  5744  00FF7C  55                 	db	85	;'U'
  5745  00FF7D  6E                 	db	110	;'n'
  5746  00FF7E  64                 	db	100	;'d'
  5747  00FF7F  65                 	db	101	;'e'
  5748  00FF80  66                 	db	102	;'f'
  5749  00FF81  69                 	db	105	;'i'
  5750  00FF82  6E                 	db	110	;'n'
  5751  00FF83  65                 	db	101	;'e'
  5752  00FF84  64                 	db	100	;'d'
  5753  00FF85  00                 	db	0
  5754  00FF86                     STR_140:
  5755  00FF86  28                 	db	40
  5756  00FF87  6E                 	db	110	;'n'
  5757  00FF88  75                 	db	117	;'u'
  5758  00FF89  6C                 	db	108	;'l'
  5759  00FF8A  6C                 	db	108	;'l'
  5760  00FF8B  29                 	db	41
  5761  00FF8C  00                 	db	0
  5762  00FF8D                     STR_63:
  5763  00FF8D  50                 	db	80	;'P'
  5764  00FF8E  4F                 	db	79	;'O'
  5765  00FF8F  53                 	db	83	;'S'
  5766  00FF90  33                 	db	51	;'3'
  5767  00FF91  50                 	db	80	;'P'
  5768  00FF92  33                 	db	51	;'3'
  5769  00FF93  00                 	db	0
  5770  00FF94                     STR_62:
  5771  00FF94  50                 	db	80	;'P'
  5772  00FF95  4F                 	db	79	;'O'
  5773  00FF96  53                 	db	83	;'S'
  5774  00FF97  31                 	db	49	;'1'
  5775  00FF98  32                 	db	50	;'2'
  5776  00FF99  00                 	db	0
  5777  00FF9A                     STR_49:
  5778  00FF9A  2A                 	db	42
  5779  00FF9B  49                 	db	73	;'I'
  5780  00FF9C  44                 	db	68	;'D'
  5781  00FF9D  4E                 	db	78	;'N'
  5782  00FF9E  3F                 	db	63	;'?'
  5783  00FF9F  00                 	db	0
  5784  00FFA0                     STR_44:
  5785  00FFA0  43                 	db	67	;'C'
  5786  00FFA1  6C                 	db	108	;'l'
  5787  00FFA2  65                 	db	101	;'e'
  5788  00FFA3  61                 	db	97	;'a'
  5789  00FFA4  72                 	db	114	;'r'
  5790  00FFA5  00                 	db	0
  5791  00FFA6                     STR_61:
  5792  00FFA6  49                 	db	73	;'I'
  5793  00FFA7  53                 	db	83	;'S'
  5794  00FFA8  4E                 	db	78	;'N'
  5795  00FFA9  53                 	db	83	;'S'
  5796  00FFAA  00                 	db	0
  5797  00FFAB                     STR_120:
  5798  00FFAB  48                 	db	72	;'H'
  5799  00FFAC  65                 	db	101	;'e'
  5800  00FFAD  6C                 	db	108	;'l'
  5801  00FFAE  70                 	db	112	;'p'
  5802  00FFAF  00                 	db	0
  5803  00FFB0                     STR_2:
  5804  00FFB0  1B                 	db	27
  5805  00FFB1  5B                 	db	91	;'['
  5806  00FFB2  32                 	db	50	;'2'
  5807  00FFB3  4A                 	db	74	;'J'
  5808  00FFB4  00                 	db	0
  5809  00FFB5                     STR_50:
  5810  00FFB5  49                 	db	73	;'I'
  5811  00FFB6  44                 	db	68	;'D'
  5812  00FFB7  4E                 	db	78	;'N'
  5813  00FFB8  00                 	db	0
  5814  00FFB9                     STR_3:
  5815  00FFB9  1B                 	db	27
  5816  00FFBA  5B                 	db	91	;'['
  5817  00FFBB  48                 	db	72	;'H'
  5818  00FFBC  00                 	db	0
  5819  00FFBD  1B                 	db	27
  5820  00FFBE  5B                 	db	91	;'['
  5821  00FFBF  73                 	db	115	;'s'
  5822  00FFC0  00                 	db	0
  5823  00FFC1  1B                 	db	27
  5824  00FFC2  5B                 	db	91	;'['
  5825  00FFC3  75                 	db	117	;'u'
  5826  00FFC4  00                 	db	0
  5827  00FFC5                     STR_1:
  5828  00FFC5  1B                 	db	27
  5829  00FFC6  5B                 	db	91	;'['
  5830  00FFC7  4B                 	db	75	;'K'
  5831  00FFC8  00                 	db	0
  5832  00FFC9                     STR_20:
  5833  00FFC9  33                 	db	51	;'3'
  5834  00FFCA  30                 	db	48	;'0'
  5835  00FFCB  00                 	db	0
  5836  00FFCC                     STR_21:
  5837  00FFCC  33                 	db	51	;'3'
  5838  00FFCD  31                 	db	49	;'1'
  5839  00FFCE  00                 	db	0
  5840  00FFCF                     STR_31:
  5841  00FFCF  34                 	db	52	;'4'
  5842  00FFD0  31                 	db	49	;'1'
  5843  00FFD1  00                 	db	0
  5844  00FFD2                     STR_22:
  5845  00FFD2  33                 	db	51	;'3'
  5846  00FFD3  32                 	db	50	;'2'
  5847  00FFD4  00                 	db	0
  5848  00FFD5                     STR_32:
  5849  00FFD5  34                 	db	52	;'4'
  5850  00FFD6  32                 	db	50	;'2'
  5851  00FFD7  00                 	db	0
  5852  00FFD8                     STR_23:
  5853  00FFD8  33                 	db	51	;'3'
  5854  00FFD9  33                 	db	51	;'3'
  5855  00FFDA  00                 	db	0
  5856  00FFDB                     STR_33:
  5857  00FFDB  34                 	db	52	;'4'
  5858  00FFDC  33                 	db	51	;'3'
  5859  00FFDD  00                 	db	0
  5860  00FFDE                     STR_24:
  5861  00FFDE  33                 	db	51	;'3'
  5862  00FFDF  34                 	db	52	;'4'
  5863  00FFE0  00                 	db	0
  5864  00FFE1                     STR_34:
  5865  00FFE1  34                 	db	52	;'4'
  5866  00FFE2  34                 	db	52	;'4'
  5867  00FFE3  00                 	db	0
  5868  00FFE4                     STR_25:
  5869  00FFE4  33                 	db	51	;'3'
  5870  00FFE5  35                 	db	53	;'5'
  5871  00FFE6  00                 	db	0
  5872  00FFE7                     STR_35:
  5873  00FFE7  34                 	db	52	;'4'
  5874  00FFE8  35                 	db	53	;'5'
  5875  00FFE9  00                 	db	0
  5876  00FFEA                     STR_26:
  5877  00FFEA  33                 	db	51	;'3'
  5878  00FFEB  36                 	db	54	;'6'
  5879  00FFEC  00                 	db	0
  5880  00FFED                     STR_36:
  5881  00FFED  34                 	db	52	;'4'
  5882  00FFEE  36                 	db	54	;'6'
  5883  00FFEF  00                 	db	0
  5884  00FFF0                     STR_27:
  5885  00FFF0  33                 	db	51	;'3'
  5886  00FFF1  37                 	db	55	;'7'
  5887  00FFF2  00                 	db	0
  5888  00FFF3                     STR_37:
  5889  00FFF3  34                 	db	52	;'4'
  5890  00FFF4  37                 	db	55	;'7'
  5891  00FFF5  00                 	db	0
  5892  00FFF6                     STR_11:
  5893  00FFF6  1B                 	db	27
  5894  00FFF7  5B                 	db	91	;'['
  5895  00FFF8  00                 	db	0
  5896  00FFF9                     STR_17:
  5897  00FFF9  38                 	db	56	;'8'
  5898  00FFFA  00                 	db	0
  5899  00FFFB                     STR_19:
  5900  00FFFB  3B                 	db	59	;';'
  5901  00FFFC  00                 	db	0
  5902  00FFFD                     STR_39:
  5903  00FFFD  6D                 	db	109	;'m'
  5904  00FFFE  00                 	db	0
  5905  0000                     
  5906                           ; #config settings
  5907  00FFFF  00                 	db	0	; dummy byte at the end
  5908  0000                     
  5909                           	psect	nvBANK2
  5910  0002E2                     __pnvBANK2:
  5911                           	opt stack 0
  5912  0002E2                     _reset_cause:
  5913                           	opt stack 0
  5914  0002E2                     	ds	1
  5915  0000                     _HLVDCON0bits	set	3778
  5916  0000                     _HLVDCON0	set	3778
  5917  0000                     _HLVDCON1	set	3779
  5918  0000                     _PIR8bits	set	3643
  5919  0000                     _FVRCONbits	set	3780
  5920  0000                     _FVRCON	set	3780
  5921  0000                     _RC2REG	set	3825
  5922  0000                     _RC2STAbits	set	3829
  5923  0000                     _TX2REG	set	3826
  5924  0000                     _TX2STAbits	set	3830
  5925  0000                     _SP2BRGH	set	3828
  5926  0000                     _SP2BRGL	set	3827
  5927  0000                     _TX2STA	set	3830
  5928  0000                     _RC2STA	set	3829
  5929  0000                     _BAUD2CON	set	3831
  5930  0000                     _PIR2bits	set	3637
  5931  0000                     _PIE2bits	set	3627
  5932  0000                     _PIR1bits	set	3636
  5933  0000                     _PIE1bits	set	3626
  5934  0000                     _PIR5bits	set	3640
  5935  0000                     _PIE5bits	set	3630
  5936  0000                     _PIR3bits	set	3638
  5937  0000                     _PIE3bits	set	3628
  5938  0000                     _IPR2bits	set	3617
  5939  0000                     _IPR1bits	set	3616
  5940  0000                     _IPR5bits	set	3620
  5941  0000                     _IPR3bits	set	3618
  5942  0000                     _RX2PPS	set	3601
  5943  0000                     _RG7PPS	set	3721
  5944  0000                     _SLRCONH	set	3774
  5945  0000                     _SLRCONG	set	3769
  5946  0000                     _SLRCONF	set	3761
  5947  0000                     _SLRCONE	set	3756
  5948  0000                     _SLRCOND	set	3748
  5949  0000                     _SLRCONC	set	3743
  5950  0000                     _SLRCONB	set	3735
  5951  0000                     _SLRCONA	set	3727
  5952  0000                     _ODCOND	set	3749
  5953  0000                     _ODCONC	set	3744
  5954  0000                     _ODCONH	set	3775
  5955  0000                     _ODCONB	set	3736
  5956  0000                     _ODCONG	set	3770
  5957  0000                     _ODCONA	set	3728
  5958  0000                     _ODCONF	set	3762
  5959  0000                     _ODCONE	set	3757
  5960  0000                     _WPUH	set	3776
  5961  0000                     _WPUC	set	3745
  5962  0000                     _WPUA	set	3729
  5963  0000                     _WPUG	set	3771
  5964  0000                     _WPUB	set	3737
  5965  0000                     _WPUE	set	3758
  5966  0000                     _WPUF	set	3763
  5967  0000                     _WPUD	set	3750
  5968  0000                     _ANSELA	set	3730
  5969  0000                     _ANSELF	set	3764
  5970  0000                     _ANSELG	set	3772
  5971  0000                     _ANSELE	set	3759
  5972  0000                     _ANSELB	set	3738
  5973  0000                     _ANSELD	set	3751
  5974  0000                     _PMD5	set	3665
  5975  0000                     _PMD4	set	3664
  5976  0000                     _PMD3	set	3663
  5977  0000                     _PMD2	set	3662
  5978  0000                     _PMD1	set	3661
  5979  0000                     _PMD0	set	3660
  5980  0000                     _OSCTUNE	set	3656
  5981  0000                     _OSCFRQ	set	3657
  5982  0000                     _OSCEN	set	3655
  5983  0000                     _OSCCON3	set	3653
  5984  0000                     _OSCCON1	set	3651
  5985  0000                     _PLLR	set	29232
  5986  0000                     _T7GCONbits	set	3889
  5987  0000                     _T7CONbits	set	3888
  5988  0000                     _T7CON	set	3888
  5989  0000                     _TMR7L	set	3886
  5990  0000                     _TMR7H	set	3887
  5991  0000                     _T7CLK	set	3891
  5992  0000                     _T7GATE	set	3890
  5993  0000                     _T7GCON	set	3889
  5994  0000                     _ADCON1bits	set	3929
  5995  0000                     _ADCON2bits	set	3930
  5996  0000                     _ADPRE	set	3934
  5997  0000                     _ADCON3bits	set	3931
  5998  0000                     _ADACQ	set	3932
  5999  0000                     _ADCLK	set	3927
  6000  0000                     _ADACT	set	3926
  6001  0000                     _ADREF	set	3928
  6002  0000                     _ADCON3	set	3931
  6003  0000                     _ADCON2	set	3930
  6004  0000                     _ADCON1	set	3929
  6005  0000                     _ADCAP	set	3933
  6006  0000                     _ADPCH	set	3935
  6007  0000                     _PCON0bits	set	4055
  6008  0000                     _LATGbits	set	3967
  6009  0000                     _NVMDAT	set	3958
  6010  0000                     _NVMADRL	set	3956
  6011  0000                     _NVMADRH	set	3957
  6012  0000                     _NVMCON2	set	3960
  6013  0000                     _TABLAT	set	4085
  6014  0000                     _TBLPTRL	set	4086
  6015  0000                     _TBLPTRH	set	4087
  6016  0000                     _TBLPTRU	set	4088
  6017  0000                     _NVMCON1bits	set	3959
  6018  0000                     _T5GCONbits	set	4036
  6019  0000                     _T5CONbits	set	4035
  6020  0000                     _T5CON	set	4035
  6021  0000                     _TMR5L	set	4033
  6022  0000                     _TMR5H	set	4034
  6023  0000                     _T5CLK	set	4038
  6024  0000                     _T5GATE	set	4037
  6025  0000                     _T5GCON	set	4036
  6026  0000                     _ADERRL	set	3950
  6027  0000                     _ADERRH	set	3951
  6028  0000                     _ADPREVL	set	3937
  6029  0000                     _ADPREVH	set	3938
  6030  0000                     _ADFLTRL	set	3954
  6031  0000                     _ADFLTRH	set	3955
  6032  0000                     _ADSTATbits	set	3941
  6033  0000                     _ADACCL	set	3952
  6034  0000                     _ADACCH	set	3953
  6035  0000                     _ADCNT	set	3943
  6036  0000                     _ADRESL	set	3939
  6037  0000                     _ADRESH	set	3940
  6038  0000                     _ADCON0bits	set	3936
  6039  0000                     _ADCON0	set	3936
  6040  0000                     _ADSTAT	set	3941
  6041  0000                     _ADRPT	set	3942
  6042  0000                     _ADSTPTH	set	3945
  6043  0000                     _ADSTPTL	set	3944
  6044  0000                     _ADUTHH	set	3949
  6045  0000                     _ADUTHL	set	3948
  6046  0000                     _ADLTHH	set	3947
  6047  0000                     _ADLTHL	set	3946
  6048  0000                     _LATFbits	set	3966
  6049  0000                     _PR6	set	4016
  6050  0000                     _TMR6	set	4015
  6051  0000                     _T6CONbits	set	4017
  6052  0000                     _T6RSTbits	set	4020
  6053  0000                     _T6HLTbits	set	4018
  6054  0000                     _T6CON	set	4017
  6055  0000                     _T6TMR	set	4015
  6056  0000                     _T6PR	set	4016
  6057  0000                     _T6RST	set	4020
  6058  0000                     _T6HLT	set	4018
  6059  0000                     _T6CLKCON	set	4019
  6060  0000                     _INTCONbits	set	4082
  6061  0000                     _TRISD	set	3972
  6062  0000                     _TRISC	set	3971
  6063  0000                     _TRISH	set	3976
  6064  0000                     _TRISB	set	3970
  6065  0000                     _TRISG	set	3975
  6066  0000                     _TRISA	set	3969
  6067  0000                     _TRISF	set	3974
  6068  0000                     _TRISE	set	3973
  6069  0000                     _LATH	set	3968
  6070  0000                     _LATC	set	3963
  6071  0000                     _LATG	set	3967
  6072  0000                     _LATB	set	3962
  6073  0000                     _LATF	set	3966
  6074  0000                     _LATA	set	3961
  6075  0000                     _LATD	set	3964
  6076  0000                     _LATE	set	3965
  6077                           
  6078                           	psect	cinit
  6079  01710E                     __pcinit:
  6080                           	opt stack 0
  6081  01710E                     start_initialization:
  6082                           	opt stack 0
  6083  01710E                     __initialization:
  6084                           	opt stack 0
  6085                           
  6086                           ; Initialize objects allocated to BANK2 (36 bytes)
  6087                           ; load TBLPTR registers with __pidataBANK2
  6088  01710E  0E9C               	movlw	low __pidataBANK2
  6089  017110  6EF6               	movwf	tblptrl,c
  6090  017112  0E81               	movlw	high __pidataBANK2
  6091  017114  6EF7               	movwf	tblptrh,c
  6092  017116  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  6093  017118  6EF8               	movwf	tblptru,c
  6094  01711A  EE02  F0BE         	lfsr	0,__pdataBANK2
  6095  01711E  EE10 F024          	lfsr	1,36
  6096  017122                     copy_data0:
  6097  017122  0009               	tblrd		*+
  6098  017124  CFF5 FFEE          	movff	tablat,postinc0
  6099  017128  50E5               	movf	postdec1,w,c
  6100  01712A  50E1               	movf	fsr1l,w,c
  6101  01712C  E1FA               	bnz	copy_data0
  6102                           
  6103                           ; Initialize objects allocated to BANK1 (1 bytes)
  6104                           ; load TBLPTR registers with __pidataBANK1
  6105  01712E  0EF0               	movlw	low __pidataBANK1
  6106  017130  6EF6               	movwf	tblptrl,c
  6107  017132  0E83               	movlw	high __pidataBANK1
  6108  017134  6EF7               	movwf	tblptrh,c
  6109  017136  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  6110  017138  6EF8               	movwf	tblptru,c
  6111  01713A  0009               	tblrd		*+	;fetch initializer
  6112  01713C  CFF5 F1E2          	movff	tablat,__pdataBANK1
  6113                           
  6114                           ; Initialize objects allocated to BANK0 (6 bytes)
  6115                           ; load TBLPTR registers with __pidataBANK0
  6116  017140  0ECC               	movlw	low __pidataBANK0
  6117  017142  6EF6               	movwf	tblptrl,c
  6118  017144  0E83               	movlw	high __pidataBANK0
  6119  017146  6EF7               	movwf	tblptrh,c
  6120  017148  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  6121  01714A  6EF8               	movwf	tblptru,c
  6122  01714C  EE00  F0F0         	lfsr	0,__pdataBANK0
  6123  017150  EE10 F006          	lfsr	1,6
  6124  017154                     copy_data1:
  6125  017154  0009               	tblrd		*+
  6126  017156  CFF5 FFEE          	movff	tablat,postinc0
  6127  01715A  50E5               	movf	postdec1,w,c
  6128  01715C  50E1               	movf	fsr1l,w,c
  6129  01715E  E1FA               	bnz	copy_data1
  6130                           
  6131                           ; Clear objects allocated to BANK3 (128 bytes)
  6132  017160  EE03  F000         	lfsr	0,__pbssBANK3
  6133  017164  0E80               	movlw	128
  6134  017166                     clear_0:
  6135  017166  6AEE               	clrf	postinc0,c
  6136  017168  06E8               	decf	wreg,f,c
  6137  01716A  E1FD               	bnz	clear_0
  6138                           
  6139                           ; Clear objects allocated to BANK2 (190 bytes)
  6140  01716C  EE02  F000         	lfsr	0,__pbssBANK2
  6141  017170  0EBE               	movlw	190
  6142  017172                     clear_1:
  6143  017172  6AEE               	clrf	postinc0,c
  6144  017174  06E8               	decf	wreg,f,c
  6145  017176  E1FD               	bnz	clear_1
  6146                           
  6147                           ; Clear objects allocated to BANK1 (23 bytes)
  6148  017178  EE01  F0CB         	lfsr	0,__pbssBANK1
  6149  01717C  0E17               	movlw	23
  6150  01717E                     clear_2:
  6151  01717E  6AEE               	clrf	postinc0,c
  6152  017180  06E8               	decf	wreg,f,c
  6153  017182  E1FD               	bnz	clear_2
  6154                           
  6155                           ; Clear objects allocated to BITBANK0 (1 bytes)
  6156  017184  0100               	movlb	0
  6157  017186  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  6158                           
  6159                           ; Clear objects allocated to BANK0 (5 bytes)
  6160  017188  0100               	movlb	0
  6161  01718A  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
  6162  01718C  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
  6163  01718E  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
  6164  017190  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
  6165  017192  6BF6               	clrf	__pbssBANK0& (0+255),b
  6166                           
  6167                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  6168  017194  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  6169  017196                     end_of_initialization:
  6170                           	opt stack 0
  6171  017196                     __end_of__initialization:
  6172                           	opt stack 0
  6173  017196  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6174  017198  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6175  01719A  0100               	movlb	0
  6176  01719C  EF18  F0B9         	goto	_main	;jump to C main() function
  6177                           tblptru	equ	0xFF8
  6178                           tblptrh	equ	0xFF7
  6179                           tblptrl	equ	0xFF6
  6180                           tablat	equ	0xFF5
  6181                           postinc0	equ	0xFEE
  6182                           wreg	equ	0xFE8
  6183                           postdec1	equ	0xFE5
  6184                           fsr1l	equ	0xFE1
  6185                           
  6186                           	psect	bitbssCOMRAM
  6187  0002F0                     __pbitbssCOMRAM:
  6188                           	opt stack 0
  6189  0002F0                     _adc_error_flag:
  6190                           	opt stack 0
  6191  0002F0                     	ds	1
  6192  0002F1                     _load_enable:
  6193                           	opt stack 0
  6194  0002F1                     	ds	1
  6195  0002F2                     _VCC_overvoltage_flag:
  6196                           	opt stack 0
  6197  0002F2                     	ds	1
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           postinc0	equ	0xFEE
  6203                           wreg	equ	0xFE8
  6204                           postdec1	equ	0xFE5
  6205                           fsr1l	equ	0xFE1
  6206                           
  6207                           	psect	bitbssBANK0
  6208  0007D8                     __pbitbssBANK0:
  6209                           	opt stack 0
  6210  0007D8                     _eusart2RxStringReady:
  6211                           	opt stack 0
  6212  0007D8                     	ds	1
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           postinc0	equ	0xFEE
  6218                           wreg	equ	0xFE8
  6219                           postdec1	equ	0xFE5
  6220                           fsr1l	equ	0xFE1
  6221                           
  6222                           	psect	bssBANK0
  6223  0000F6                     __pbssBANK0:
  6224                           	opt stack 0
  6225  0000F6                     _POS3P3_ADC_Result:
  6226                           	opt stack 0
  6227  0000F6                     	ds	4
  6228  0000FA                     _eusart2RxHead:
  6229                           	opt stack 0
  6230  0000FA                     	ds	1
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           postinc0	equ	0xFEE
  6236                           wreg	equ	0xFE8
  6237                           postdec1	equ	0xFE5
  6238                           fsr1l	equ	0xFE1
  6239                           
  6240                           	psect	dataBANK0
  6241  0000F0                     __pdataBANK0:
  6242                           	opt stack 0
  6243  0000F0                     _dimming_period:
  6244                           	opt stack 0
  6245  0000F0                     	ds	2
  6246  0000F2                     _TRIAC_Firing_Angle:
  6247                           	opt stack 0
  6248  0000F2                     	ds	4
  6249                           tblptru	equ	0xFF8
  6250                           tblptrh	equ	0xFF7
  6251                           tblptrl	equ	0xFF6
  6252                           tablat	equ	0xFF5
  6253                           postinc0	equ	0xFEE
  6254                           wreg	equ	0xFE8
  6255                           postdec1	equ	0xFE5
  6256                           fsr1l	equ	0xFE1
  6257                           
  6258                           	psect	bssBANK1
  6259  0001CB                     __pbssBANK1:
  6260                           	opt stack 0
  6261  0001CB                     _Irms:
  6262                           	opt stack 0
  6263  0001CB                     	ds	4
  6264  0001CF                     _Imeas:
  6265                           	opt stack 0
  6266  0001CF                     	ds	4
  6267  0001D3                     _Ipk:
  6268                           	opt stack 0
  6269  0001D3                     	ds	4
  6270  0001D7                     _timer7ReloadVal:
  6271                           	opt stack 0
  6272  0001D7                     	ds	2
  6273  0001D9                     _eusart2RxCount:
  6274                           	opt stack 0
  6275  0001D9                     	ds	1
  6276  0001DA                     _eusart2RxTail:
  6277                           	opt stack 0
  6278  0001DA                     	ds	1
  6279  0001DB                     _eusart2TxBufferRemaining:
  6280                           	opt stack 0
  6281  0001DB                     	ds	1
  6282  0001DC                     _eusart2TxTail:
  6283                           	opt stack 0
  6284  0001DC                     	ds	1
  6285  0001DD                     _eusart2TxHead:
  6286                           	opt stack 0
  6287  0001DD                     	ds	1
  6288  0001DE                     _FVR_ADC_Result:
  6289                           	opt stack 0
  6290  0001DE                     	ds	4
  6291                           tblptru	equ	0xFF8
  6292                           tblptrh	equ	0xFF7
  6293                           tblptrl	equ	0xFF6
  6294                           tablat	equ	0xFF5
  6295                           postinc0	equ	0xFEE
  6296                           wreg	equ	0xFE8
  6297                           postdec1	equ	0xFE5
  6298                           fsr1l	equ	0xFE1
  6299                           
  6300                           	psect	dataBANK1
  6301  0001E2                     __pdataBANK1:
  6302                           	opt stack 0
  6303  0001E2                     _next_channel:
  6304                           	opt stack 0
  6305  0001E2                     	ds	1
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           postdec1	equ	0xFE5
  6313                           fsr1l	equ	0xFE1
  6314                           
  6315                           	psect	bssBANK2
  6316  000200                     __pbssBANK2:
  6317                           	opt stack 0
  6318  000200                     _eusart2RxBuffer:
  6319                           	opt stack 0
  6320  000200                     	ds	64
  6321  000240                     _load_on_time:
  6322                           	opt stack 0
  6323  000240                     	ds	4
  6324  000244                     _dev_on_time:
  6325                           	opt stack 0
  6326  000244                     	ds	4
  6327  000248                     _Avg_Power:
  6328                           	opt stack 0
  6329  000248                     	ds	4
  6330  00024C                     _Vrms:
  6331                           	opt stack 0
  6332  00024C                     	ds	4
  6333  000250                     _Vpk:
  6334                           	opt stack 0
  6335  000250                     	ds	4
  6336  000254                     _Temp_ADC_Result:
  6337                           	opt stack 0
  6338  000254                     	ds	4
  6339  000258                     _POS12_ADC_Result:
  6340                           	opt stack 0
  6341  000258                     	ds	4
  6342  00025C                     _ADC_Result_Scaling:
  6343                           	opt stack 0
  6344  00025C                     	ds	4
  6345  000260                     _AVSS_ADC_Result:
  6346                           	opt stack 0
  6347  000260                     	ds	4
  6348  000264                     _TMR5_InterruptHandler:
  6349                           	opt stack 0
  6350  000264                     	ds	3
  6351  000267                     _TMR7_InterruptHandler:
  6352                           	opt stack 0
  6353  000267                     	ds	3
  6354  00026A                     _ADCC_ADTI_InterruptHandler:
  6355                           	opt stack 0
  6356  00026A                     	ds	3
  6357  00026D                     _TMR6_InterruptHandler:
  6358                           	opt stack 0
  6359  00026D                     	ds	3
  6360  000270                     _EUSART2_RxDefaultInterruptHandler:
  6361                           	opt stack 0
  6362  000270                     	ds	3
  6363  000273                     _EUSART2_TxDefaultInterruptHandler:
  6364                           	opt stack 0
  6365  000273                     	ds	3
  6366  000276                     _errno:
  6367                           	opt stack 0
  6368  000276                     	ds	2
  6369  000278                     _timer5ReloadVal:
  6370                           	opt stack 0
  6371  000278                     	ds	2
  6372  00027A                     _current_adc_channel:
  6373                           	opt stack 0
  6374  00027A                     	ds	1
  6375  00027B                     _background_color:
  6376                           	opt stack 0
  6377  00027B                     	ds	1
  6378  00027C                     _foreground_color:
  6379                           	opt stack 0
  6380  00027C                     	ds	1
  6381  00027D                     _attribute:
  6382                           	opt stack 0
  6383  00027D                     	ds	1
  6384  00027E                     _line:
  6385                           	opt stack 0
  6386  00027E                     	ds	64
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           postinc0	equ	0xFEE
  6392                           wreg	equ	0xFE8
  6393                           postdec1	equ	0xFE5
  6394                           fsr1l	equ	0xFE1
  6395                           
  6396                           	psect	dataBANK2
  6397  0002BE                     __pdataBANK2:
  6398                           	opt stack 0
  6399  0002BE                     getCauseOfResetString@strings:
  6400                           	opt stack 0
  6401  0002BE                     	ds	18
  6402  0002D0                     getDeviceIDString@F17550:
  6403                           	opt stack 0
  6404  0002D0                     	ds	6
  6405  0002D6                     _Irms_offset:
  6406                           	opt stack 0
  6407  0002D6                     	ds	4
  6408  0002DA                     _Vpk_const:
  6409                           	opt stack 0
  6410  0002DA                     	ds	4
  6411  0002DE                     _Temp_ADC_Offset:
  6412                           	opt stack 0
  6413  0002DE                     	ds	4
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           postinc0	equ	0xFEE
  6419                           wreg	equ	0xFE8
  6420                           postdec1	equ	0xFE5
  6421                           fsr1l	equ	0xFE1
  6422                           
  6423                           	psect	bssBANK3
  6424  000300                     __pbssBANK3:
  6425                           	opt stack 0
  6426  000300                     _eusart2TxBuffer:
  6427                           	opt stack 0
  6428  000300                     	ds	128
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           postinc0	equ	0xFEE
  6434                           wreg	equ	0xFE8
  6435                           postdec1	equ	0xFE5
  6436                           fsr1l	equ	0xFE1
  6437                           
  6438                           	psect	cstackBANK3
  6439  000380                     __pcstackBANK3:
  6440                           	opt stack 0
  6441  000380                     ringBufferLUT@channel_name:
  6442                           	opt stack 0
  6443                           
  6444                           ; 22 bytes @ 0x0
  6445  000380                     	ds	22
  6446  000396                     ringBufferLUT@angle_degrees:
  6447                           	opt stack 0
  6448                           
  6449                           ; 4 bytes @ 0x16
  6450  000396                     	ds	4
  6451  00039A                     ringBufferLUT@arg_buff:
  6452                           	opt stack 0
  6453                           
  6454                           ; 3 bytes @ 0x1A
  6455  00039A                     	ds	3
  6456  00039D                     ringBufferLUT@index:
  6457                           	opt stack 0
  6458                           
  6459                           ; 2 bytes @ 0x1D
  6460  00039D                     	ds	2
  6461  00039F                     ringBufferLUT@percentage:
  6462                           	opt stack 0
  6463                           
  6464                           ; 2 bytes @ 0x1F
  6465  00039F                     	ds	2
  6466  0003A1                     ringBufferLUT@userID:
  6467                           	opt stack 0
  6468                           
  6469                           ; 2 bytes @ 0x21
  6470  0003A1                     	ds	2
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           postdec1	equ	0xFE5
  6478                           fsr1l	equ	0xFE1
  6479                           
  6480                           	psect	cstackBANK1
  6481  000100                     __pcstackBANK1:
  6482                           	opt stack 0
  6483  000100                     ??_heartbeatTimerCallback:
  6484  000100                     ADCC_StartConversion@channel:
  6485                           	opt stack 0
  6486  000100                     TMR7_WriteTimer@timerVal:
  6487                           	opt stack 0
  6488                           
  6489                           ; 2 bytes @ 0x0
  6490  000100                     	ds	1
  6491  000101                     
  6492                           ; 1 bytes @ 0x1
  6493  000101                     	ds	1
  6494  000102                     ??_INTERRUPT_InterruptManagerLow:
  6495  000102                     
  6496                           ; 1 bytes @ 0x2
  6497  000102                     	ds	21
  6498  000117                     ??_isdigit:
  6499  000117                     ?_strlen:
  6500                           	opt stack 0
  6501  000117                     ?_strcmp:
  6502                           	opt stack 0
  6503  000117                     ?_getCauseOfResetString:
  6504                           	opt stack 0
  6505  000117                     ?_strchr:
  6506                           	opt stack 0
  6507  000117                     ?___wmul:
  6508                           	opt stack 0
  6509  000117                     ?___awmod:
  6510                           	opt stack 0
  6511  000117                     ?__tdiv_to_l_:
  6512                           	opt stack 0
  6513  000117                     ?__div_to_l_:
  6514                           	opt stack 0
  6515  000117                     ?___lldiv:
  6516                           	opt stack 0
  6517  000117                     ?___xxtofl:
  6518                           	opt stack 0
  6519  000117                     EUSART2_Read@readValue:
  6520                           	opt stack 0
  6521  000117                     EUSART2_Write@txData:
  6522                           	opt stack 0
  6523  000117                     getCauseOfReset@return_reset_cause:
  6524                           	opt stack 0
  6525  000117                     ___wmul@multiplier:
  6526                           	opt stack 0
  6527  000117                     ___awmod@dividend:
  6528                           	opt stack 0
  6529  000117                     strcat@to:
  6530                           	opt stack 0
  6531  000117                     strcmp@s1:
  6532                           	opt stack 0
  6533  000117                     strcpy@to:
  6534                           	opt stack 0
  6535  000117                     strlen@s:
  6536                           	opt stack 0
  6537  000117                     strncpy@to:
  6538                           	opt stack 0
  6539  000117                     strchr@ptr:
  6540                           	opt stack 0
  6541  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  6542                           	opt stack 0
  6543  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  6544                           	opt stack 0
  6545  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6546                           	opt stack 0
  6547  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  6548                           	opt stack 0
  6549  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6550                           	opt stack 0
  6551  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6552                           	opt stack 0
  6553  000117                     __tdiv_to_l_@f1:
  6554                           	opt stack 0
  6555  000117                     FLASH_ReadByte@flashAddr:
  6556                           	opt stack 0
  6557  000117                     __div_to_l_@f1:
  6558                           	opt stack 0
  6559  000117                     ___flge@ff1:
  6560                           	opt stack 0
  6561  000117                     ___lldiv@dividend:
  6562                           	opt stack 0
  6563  000117                     ___xxtofl@val:
  6564                           	opt stack 0
  6565                           
  6566                           ; 4 bytes @ 0x17
  6567  000117                     	ds	1
  6568  000118                     putch@txData:
  6569                           	opt stack 0
  6570  000118                     _isdigit$3181:
  6571                           	opt stack 0
  6572                           
  6573                           ; 1 bytes @ 0x18
  6574  000118                     	ds	1
  6575  000119                     ??_strlen:
  6576  000119                     getCauseOfResetString@r:
  6577                           	opt stack 0
  6578  000119                     isdigit@c:
  6579                           	opt stack 0
  6580  000119                     ___wmul@multiplicand:
  6581                           	opt stack 0
  6582  000119                     ___awmod@divisor:
  6583                           	opt stack 0
  6584  000119                     strcat@from:
  6585                           	opt stack 0
  6586  000119                     strcmp@s2:
  6587                           	opt stack 0
  6588  000119                     strcpy@from:
  6589                           	opt stack 0
  6590  000119                     strncpy@from:
  6591                           	opt stack 0
  6592  000119                     strchr@chr:
  6593                           	opt stack 0
  6594                           
  6595                           ; 2 bytes @ 0x19
  6596  000119                     	ds	1
  6597  00011A                     ??_TMR7_Initialize:
  6598  00011A                     ??_TMR5_Initialize:
  6599  00011A                     __tdiv_to_l_@f2:
  6600                           	opt stack 0
  6601                           
  6602                           ; 3 bytes @ 0x1A
  6603  00011A                     	ds	1
  6604  00011B                     ??_strcmp:
  6605  00011B                     ??___xxtofl:
  6606  00011B                     ?_FLASH_ReadWord:
  6607                           	opt stack 0
  6608  00011B                     ___awmod@counter:
  6609                           	opt stack 0
  6610  00011B                     ___wmul@product:
  6611                           	opt stack 0
  6612  00011B                     strcat@cp:
  6613                           	opt stack 0
  6614  00011B                     strcpy@cp:
  6615                           	opt stack 0
  6616  00011B                     strlen@cp:
  6617                           	opt stack 0
  6618  00011B                     strncpy@size:
  6619                           	opt stack 0
  6620  00011B                     FLASH_ReadWord@flashAddr:
  6621                           	opt stack 0
  6622  00011B                     __div_to_l_@f2:
  6623                           	opt stack 0
  6624  00011B                     ___flge@ff2:
  6625                           	opt stack 0
  6626  00011B                     ___lldiv@divisor:
  6627                           	opt stack 0
  6628                           
  6629                           ; 4 bytes @ 0x1B
  6630  00011B                     	ds	1
  6631  00011C                     ___awmod@sign:
  6632                           	opt stack 0
  6633  00011C                     strcmp@r:
  6634                           	opt stack 0
  6635                           
  6636                           ; 1 bytes @ 0x1C
  6637  00011C                     	ds	1
  6638  00011D                     ??__tdiv_to_l_:
  6639  00011D                     ?_atoi:
  6640                           	opt stack 0
  6641  00011D                     ?_strncmp:
  6642                           	opt stack 0
  6643  00011D                     ?___awdiv:
  6644                           	opt stack 0
  6645  00011D                     atoi@s:
  6646                           	opt stack 0
  6647  00011D                     ___awdiv@dividend:
  6648                           	opt stack 0
  6649  00011D                     strncpy@cp:
  6650                           	opt stack 0
  6651  00011D                     strncmp@s1:
  6652                           	opt stack 0
  6653                           
  6654                           ; 2 bytes @ 0x1D
  6655  00011D                     	ds	2
  6656  00011F                     ??_atoi:
  6657  00011F                     ??_FLASH_ReadWord:
  6658  00011F                     ??___flge:
  6659  00011F                     ___xxtofl@sign:
  6660                           	opt stack 0
  6661  00011F                     ___awdiv@divisor:
  6662                           	opt stack 0
  6663  00011F                     strncmp@s2:
  6664                           	opt stack 0
  6665  00011F                     __div_to_l_@quot:
  6666                           	opt stack 0
  6667  00011F                     ___lldiv@quotient:
  6668                           	opt stack 0
  6669                           
  6670                           ; 4 bytes @ 0x1F
  6671  00011F                     	ds	1
  6672  000120                     ___xxtofl@exp:
  6673                           	opt stack 0
  6674  000120                     __tdiv_to_l_@quot:
  6675                           	opt stack 0
  6676                           
  6677                           ; 4 bytes @ 0x20
  6678  000120                     	ds	1
  6679  000121                     atoi@sign:
  6680                           	opt stack 0
  6681  000121                     ___awdiv@counter:
  6682                           	opt stack 0
  6683  000121                     strncmp@len:
  6684                           	opt stack 0
  6685  000121                     ___xxtofl@arg:
  6686                           	opt stack 0
  6687                           
  6688                           ; 4 bytes @ 0x21
  6689  000121                     	ds	1
  6690  000122                     ??_getMajorRevisionID:
  6691  000122                     ?_getDeviceID:
  6692                           	opt stack 0
  6693  000122                     ?_getUserID:
  6694                           	opt stack 0
  6695  000122                     ___awdiv@sign:
  6696                           	opt stack 0
  6697  000122                     getMinorRevisionID@REVID_RAW:
  6698                           	opt stack 0
  6699  000122                     atoi@a:
  6700                           	opt stack 0
  6701                           
  6702                           ; 2 bytes @ 0x22
  6703  000122                     	ds	1
  6704  000123                     ??_strncmp:
  6705  000123                     __div_to_l_@cntr:
  6706                           	opt stack 0
  6707  000123                     ___lldiv@counter:
  6708                           	opt stack 0
  6709  000123                     ___awdiv@quotient:
  6710                           	opt stack 0
  6711                           
  6712                           ; 2 bytes @ 0x23
  6713  000123                     	ds	1
  6714  000124                     ?_getDeviceIDString:
  6715                           	opt stack 0
  6716  000124                     ?___llmod:
  6717                           	opt stack 0
  6718  000124                     __div_to_l_@exp1:
  6719                           	opt stack 0
  6720  000124                     __tdiv_to_l_@cntr:
  6721                           	opt stack 0
  6722  000124                     getDeviceIDString@inputDevID:
  6723                           	opt stack 0
  6724  000124                     getUserID@initialOffset:
  6725                           	opt stack 0
  6726  000124                     ___llmod@dividend:
  6727                           	opt stack 0
  6728                           
  6729                           ; 4 bytes @ 0x24
  6730  000124                     	ds	1
  6731  000125                     ?___flneg:
  6732                           	opt stack 0
  6733  000125                     __tdiv_to_l_@exp1:
  6734                           	opt stack 0
  6735  000125                     getMajorRevisionID@REVID_RAW:
  6736                           	opt stack 0
  6737  000125                     ___flneg@f1:
  6738                           	opt stack 0
  6739                           
  6740                           ; 4 bytes @ 0x25
  6741  000125                     	ds	1
  6742  000126                     ??_getDeviceIDString:
  6743  000126                     ?_strstr:
  6744                           	opt stack 0
  6745  000126                     strstr@s1:
  6746                           	opt stack 0
  6747                           
  6748                           ; 2 bytes @ 0x26
  6749  000126                     	ds	2
  6750  000128                     getUserID@inputUserID:
  6751                           	opt stack 0
  6752  000128                     strstr@s2:
  6753                           	opt stack 0
  6754  000128                     ___llmod@divisor:
  6755                           	opt stack 0
  6756  000128                     getDeviceIDString@strings:
  6757                           	opt stack 0
  6758                           
  6759                           ; 6 bytes @ 0x28
  6760  000128                     	ds	1
  6761  000129                     ?___fladd:
  6762                           	opt stack 0
  6763  000129                     getUserID@IDOffset:
  6764                           	opt stack 0
  6765  000129                     ___fladd@b:
  6766                           	opt stack 0
  6767                           
  6768                           ; 4 bytes @ 0x29
  6769  000129                     	ds	1
  6770  00012A                     
  6771                           ; 1 bytes @ 0x2A
  6772  00012A                     	ds	2
  6773  00012C                     ___llmod@counter:
  6774                           	opt stack 0
  6775                           
  6776                           ; 1 bytes @ 0x2C
  6777  00012C                     	ds	1
  6778  00012D                     ___fladd@a:
  6779                           	opt stack 0
  6780                           
  6781                           ; 4 bytes @ 0x2D
  6782  00012D                     	ds	4
  6783  000131                     ??___fladd:
  6784                           
  6785                           ; 1 bytes @ 0x31
  6786  000131                     	ds	8
  6787  000139                     ___fladd@signs:
  6788                           	opt stack 0
  6789                           
  6790                           ; 1 bytes @ 0x39
  6791  000139                     	ds	1
  6792  00013A                     ___fladd@aexp:
  6793                           	opt stack 0
  6794                           
  6795                           ; 1 bytes @ 0x3A
  6796  00013A                     	ds	1
  6797  00013B                     ___fladd@bexp:
  6798                           	opt stack 0
  6799                           
  6800                           ; 1 bytes @ 0x3B
  6801  00013B                     	ds	1
  6802  00013C                     ___fladd@grs:
  6803                           	opt stack 0
  6804                           
  6805                           ; 1 bytes @ 0x3C
  6806  00013C                     	ds	1
  6807  00013D                     ?___fldiv:
  6808                           	opt stack 0
  6809  00013D                     ?___flsub:
  6810                           	opt stack 0
  6811  00013D                     ___flsub@b:
  6812                           	opt stack 0
  6813  00013D                     ___fldiv@b:
  6814                           	opt stack 0
  6815                           
  6816                           ; 4 bytes @ 0x3D
  6817  00013D                     	ds	4
  6818  000141                     ___flsub@a:
  6819                           	opt stack 0
  6820  000141                     ___fldiv@a:
  6821                           	opt stack 0
  6822                           
  6823                           ; 4 bytes @ 0x41
  6824  000141                     	ds	4
  6825  000145                     ??___fldiv:
  6826  000145                     
  6827                           ; 1 bytes @ 0x45
  6828  000145                     	ds	4
  6829  000149                     ___fldiv@sign:
  6830                           	opt stack 0
  6831                           
  6832                           ; 1 bytes @ 0x49
  6833  000149                     	ds	1
  6834  00014A                     ___fldiv@rem:
  6835                           	opt stack 0
  6836                           
  6837                           ; 4 bytes @ 0x4A
  6838  00014A                     	ds	4
  6839  00014E                     ___fldiv@new_exp:
  6840                           	opt stack 0
  6841                           
  6842                           ; 2 bytes @ 0x4E
  6843  00014E                     	ds	2
  6844  000150                     ___fldiv@grs:
  6845                           	opt stack 0
  6846                           
  6847                           ; 4 bytes @ 0x50
  6848  000150                     	ds	4
  6849  000154                     ___fldiv@bexp:
  6850                           	opt stack 0
  6851                           
  6852                           ; 1 bytes @ 0x54
  6853  000154                     	ds	1
  6854  000155                     ___fldiv@aexp:
  6855                           	opt stack 0
  6856                           
  6857                           ; 1 bytes @ 0x55
  6858  000155                     	ds	1
  6859  000156                     ?___flmul:
  6860                           	opt stack 0
  6861  000156                     ___flmul@b:
  6862                           	opt stack 0
  6863                           
  6864                           ; 4 bytes @ 0x56
  6865  000156                     	ds	4
  6866  00015A                     ___flmul@a:
  6867                           	opt stack 0
  6868                           
  6869                           ; 4 bytes @ 0x5A
  6870  00015A                     	ds	4
  6871  00015E                     ??___flmul:
  6872                           
  6873                           ; 1 bytes @ 0x5E
  6874  00015E                     	ds	4
  6875  000162                     ___flmul@sign:
  6876                           	opt stack 0
  6877                           
  6878                           ; 1 bytes @ 0x62
  6879  000162                     	ds	1
  6880  000163                     ___flmul@aexp:
  6881                           	opt stack 0
  6882                           
  6883                           ; 1 bytes @ 0x63
  6884  000163                     	ds	1
  6885  000164                     ___flmul@grs:
  6886                           	opt stack 0
  6887                           
  6888                           ; 4 bytes @ 0x64
  6889  000164                     	ds	4
  6890  000168                     ___flmul@bexp:
  6891                           	opt stack 0
  6892                           
  6893                           ; 1 bytes @ 0x68
  6894  000168                     	ds	1
  6895  000169                     ___flmul@prod:
  6896                           	opt stack 0
  6897                           
  6898                           ; 4 bytes @ 0x69
  6899  000169                     	ds	4
  6900  00016D                     ___flmul@temp:
  6901                           	opt stack 0
  6902                           
  6903                           ; 2 bytes @ 0x6D
  6904  00016D                     	ds	2
  6905  00016F                     ?_fround:
  6906                           	opt stack 0
  6907  00016F                     ?_scale:
  6908                           	opt stack 0
  6909  00016F                     ?___fltol:
  6910                           	opt stack 0
  6911  00016F                     ___fltol@f1:
  6912                           	opt stack 0
  6913                           
  6914                           ; 4 bytes @ 0x6F
  6915  00016F                     	ds	4
  6916  000173                     ??___fltol:
  6917  000173                     _fround$3896:
  6918                           	opt stack 0
  6919  000173                     _scale$3897:
  6920                           	opt stack 0
  6921                           
  6922                           ; 4 bytes @ 0x73
  6923  000173                     	ds	4
  6924  000177                     scale@scl:
  6925                           	opt stack 0
  6926  000177                     ___fltol@sign1:
  6927                           	opt stack 0
  6928  000177                     _fround$3895:
  6929                           	opt stack 0
  6930                           
  6931                           ; 4 bytes @ 0x77
  6932  000177                     	ds	1
  6933  000178                     ___fltol@exp1:
  6934                           	opt stack 0
  6935                           
  6936                           ; 1 bytes @ 0x78
  6937  000178                     	ds	3
  6938  00017B                     fround@prec:
  6939                           	opt stack 0
  6940                           
  6941                           ; 1 bytes @ 0x7B
  6942  00017B                     	ds	1
  6943  00017C                     ?_printf:
  6944                           	opt stack 0
  6945  00017C                     printf@f:
  6946                           	opt stack 0
  6947                           
  6948                           ; 2 bytes @ 0x7C
  6949  00017C                     	ds	10
  6950  000186                     ??_printf:
  6951                           
  6952                           ; 1 bytes @ 0x86
  6953  000186                     	ds	6
  6954  00018C                     _printf$3898:
  6955                           	opt stack 0
  6956                           
  6957                           ; 4 bytes @ 0x8C
  6958  00018C                     	ds	4
  6959  000190                     printf@idx:
  6960                           	opt stack 0
  6961                           
  6962                           ; 1 bytes @ 0x90
  6963  000190                     	ds	1
  6964  000191                     printf@len:
  6965                           	opt stack 0
  6966                           
  6967                           ; 2 bytes @ 0x91
  6968  000191                     	ds	2
  6969  000193                     printf@cp:
  6970                           	opt stack 0
  6971                           
  6972                           ; 2 bytes @ 0x93
  6973  000193                     	ds	2
  6974  000195                     printf@ap:
  6975                           	opt stack 0
  6976                           
  6977                           ; 2 bytes @ 0x95
  6978  000195                     	ds	2
  6979  000197                     printf@flag:
  6980                           	opt stack 0
  6981                           
  6982                           ; 2 bytes @ 0x97
  6983  000197                     	ds	2
  6984  000199                     printf@exp:
  6985                           	opt stack 0
  6986                           
  6987                           ; 2 bytes @ 0x99
  6988  000199                     	ds	2
  6989  00019B                     printf@tmpval:
  6990                           	opt stack 0
  6991                           
  6992                           ; 4 bytes @ 0x9B
  6993  00019B                     	ds	4
  6994  00019F                     printf@val:
  6995                           	opt stack 0
  6996                           
  6997                           ; 4 bytes @ 0x9F
  6998  00019F                     	ds	4
  6999  0001A3                     printf@fval:
  7000                           	opt stack 0
  7001                           
  7002                           ; 4 bytes @ 0xA3
  7003  0001A3                     	ds	4
  7004  0001A7                     printf@prec:
  7005                           	opt stack 0
  7006                           
  7007                           ; 2 bytes @ 0xA7
  7008  0001A7                     	ds	2
  7009  0001A9                     printf@c:
  7010                           	opt stack 0
  7011                           
  7012                           ; 1 bytes @ 0xA9
  7013  0001A9                     	ds	1
  7014  0001AA                     terminal_textAttributes@background_color:
  7015                           	opt stack 0
  7016                           
  7017                           ; 1 bytes @ 0xAA
  7018  0001AA                     	ds	1
  7019  0001AB                     terminal_textAttributes@input_attribute:
  7020                           	opt stack 0
  7021                           
  7022                           ; 1 bytes @ 0xAB
  7023  0001AB                     	ds	1
  7024  0001AC                     terminal_textAttributes@foreground_color:
  7025                           	opt stack 0
  7026                           
  7027                           ; 1 bytes @ 0xAC
  7028  0001AC                     	ds	1
  7029  0001AD                     terminal_textAttributes@output_buff:
  7030                           	opt stack 0
  7031                           
  7032                           ; 15 bytes @ 0xAD
  7033  0001AD                     	ds	15
  7034  0001BC                     ringBufferLUT@line:
  7035                           	opt stack 0
  7036                           
  7037                           ; 2 bytes @ 0xBC
  7038  0001BC                     	ds	2
  7039  0001BE                     ??_ringBufferLUT:
  7040                           
  7041                           ; 1 bytes @ 0xBE
  7042  0001BE                     	ds	2
  7043  0001C0                     ??_terminal_ringBufferPull:
  7044                           
  7045                           ; 1 bytes @ 0xC0
  7046  0001C0                     	ds	3
  7047  0001C3                     terminal_ringBufferPull@charNumber:
  7048                           	opt stack 0
  7049                           
  7050                           ; 2 bytes @ 0xC3
  7051  0001C3                     	ds	2
  7052  0001C5                     terminal_ringBufferPull@index_2397:
  7053                           	opt stack 0
  7054                           
  7055                           ; 2 bytes @ 0xC5
  7056  0001C5                     	ds	2
  7057  0001C7                     terminal_ringBufferPull@index:
  7058                           	opt stack 0
  7059                           
  7060                           ; 2 bytes @ 0xC7
  7061  0001C7                     	ds	2
  7062  0001C9                     ??_main:
  7063                           
  7064                           ; 1 bytes @ 0xC9
  7065  0001C9                     	ds	2
  7066                           tblptru	equ	0xFF8
  7067                           tblptrh	equ	0xFF7
  7068                           tblptrl	equ	0xFF6
  7069                           tablat	equ	0xFF5
  7070                           postinc0	equ	0xFEE
  7071                           wreg	equ	0xFE8
  7072                           postdec1	equ	0xFE5
  7073                           fsr1l	equ	0xFE1
  7074                           
  7075                           	psect	cstackBANK0
  7076  000060                     __pcstackBANK0:
  7077                           	opt stack 0
  7078  000060                     ??i2___fladd:
  7079                           
  7080                           ; 1 bytes @ 0x0
  7081  000060                     	ds	8
  7082  000068                     i2___fladd@signs:
  7083                           	opt stack 0
  7084                           
  7085                           ; 1 bytes @ 0x8
  7086  000068                     	ds	1
  7087  000069                     i2___fladd@aexp:
  7088                           	opt stack 0
  7089                           
  7090                           ; 1 bytes @ 0x9
  7091  000069                     	ds	1
  7092  00006A                     i2___fladd@bexp:
  7093                           	opt stack 0
  7094                           
  7095                           ; 1 bytes @ 0xA
  7096  00006A                     	ds	1
  7097  00006B                     i2___fladd@grs:
  7098                           	opt stack 0
  7099                           
  7100                           ; 1 bytes @ 0xB
  7101  00006B                     	ds	1
  7102  00006C                     ?_sqrt:
  7103                           	opt stack 0
  7104  00006C                     ?_eval_poly:
  7105                           	opt stack 0
  7106  00006C                     ?i2___fltol:
  7107                           	opt stack 0
  7108  00006C                     eval_poly@x:
  7109                           	opt stack 0
  7110  00006C                     sqrt@a:
  7111                           	opt stack 0
  7112  00006C                     i2___fltol@f1:
  7113                           	opt stack 0
  7114                           
  7115                           ; 4 bytes @ 0xC
  7116  00006C                     	ds	4
  7117  000070                     ??_sqrt:
  7118  000070                     ??i2___fltol:
  7119  000070                     eval_poly@d:
  7120                           	opt stack 0
  7121                           
  7122                           ; 2 bytes @ 0x10
  7123  000070                     	ds	2
  7124  000072                     eval_poly@n:
  7125                           	opt stack 0
  7126                           
  7127                           ; 2 bytes @ 0x12
  7128  000072                     	ds	2
  7129  000074                     ??_eval_poly:
  7130  000074                     sqrt@sign:
  7131                           	opt stack 0
  7132  000074                     i2___fltol@sign1:
  7133                           	opt stack 0
  7134                           
  7135                           ; 1 bytes @ 0x14
  7136  000074                     	ds	1
  7137  000075                     sqrt@i:
  7138                           	opt stack 0
  7139  000075                     i2___fltol@exp1:
  7140                           	opt stack 0
  7141                           
  7142                           ; 1 bytes @ 0x15
  7143  000075                     	ds	1
  7144  000076                     ?_abs:
  7145                           	opt stack 0
  7146  000076                     ?_floor:
  7147                           	opt stack 0
  7148  000076                     abs@a:
  7149                           	opt stack 0
  7150  000076                     sqrt@tfrac:
  7151                           	opt stack 0
  7152  000076                     floor@x:
  7153                           	opt stack 0
  7154                           
  7155                           ; 4 bytes @ 0x16
  7156  000076                     	ds	2
  7157  000078                     ??_abs:
  7158  000078                     eval_poly@res:
  7159                           	opt stack 0
  7160                           
  7161                           ; 4 bytes @ 0x18
  7162  000078                     	ds	2
  7163  00007A                     sqrt@p:
  7164                           	opt stack 0
  7165  00007A                     floor@i:
  7166                           	opt stack 0
  7167                           
  7168                           ; 4 bytes @ 0x1A
  7169  00007A                     	ds	1
  7170  00007B                     sqrt@grs:
  7171                           	opt stack 0
  7172                           
  7173                           ; 4 bytes @ 0x1B
  7174  00007B                     	ds	1
  7175  00007C                     ?_atan:
  7176                           	opt stack 0
  7177  00007C                     atan@f:
  7178                           	opt stack 0
  7179                           
  7180                           ; 4 bytes @ 0x1C
  7181  00007C                     	ds	2
  7182  00007E                     floor@expon:
  7183                           	opt stack 0
  7184                           
  7185                           ; 2 bytes @ 0x1E
  7186  00007E                     	ds	1
  7187  00007F                     sqrt@exp:
  7188                           	opt stack 0
  7189                           
  7190                           ; 2 bytes @ 0x1F
  7191  00007F                     	ds	1
  7192  000080                     ?i2___flsub:
  7193                           	opt stack 0
  7194  000080                     atan@y:
  7195                           	opt stack 0
  7196  000080                     i2___flsub@b:
  7197                           	opt stack 0
  7198                           
  7199                           ; 4 bytes @ 0x20
  7200  000080                     	ds	1
  7201  000081                     sqrt@root:
  7202                           	opt stack 0
  7203                           
  7204                           ; 4 bytes @ 0x21
  7205  000081                     	ds	3
  7206  000084                     atan@x:
  7207                           	opt stack 0
  7208  000084                     i2___flsub@a:
  7209                           	opt stack 0
  7210                           
  7211                           ; 4 bytes @ 0x24
  7212  000084                     	ds	1
  7213  000085                     sqrt@frac:
  7214                           	opt stack 0
  7215                           
  7216                           ; 4 bytes @ 0x25
  7217  000085                     	ds	3
  7218  000088                     ?i2_printf:
  7219                           	opt stack 0
  7220  000088                     ?_sin:
  7221                           	opt stack 0
  7222  000088                     atan@recip:
  7223                           	opt stack 0
  7224  000088                     i2printf@f:
  7225                           	opt stack 0
  7226  000088                     sin@f:
  7227                           	opt stack 0
  7228                           
  7229                           ; 4 bytes @ 0x28
  7230  000088                     	ds	1
  7231  000089                     atan@val_squared:
  7232                           	opt stack 0
  7233                           
  7234                           ; 4 bytes @ 0x29
  7235  000089                     	ds	1
  7236  00008A                     ??i2_printf:
  7237                           
  7238                           ; 1 bytes @ 0x2A
  7239  00008A                     	ds	2
  7240  00008C                     sin@y:
  7241                           	opt stack 0
  7242                           
  7243                           ; 4 bytes @ 0x2C
  7244  00008C                     	ds	1
  7245  00008D                     atan@val:
  7246                           	opt stack 0
  7247                           
  7248                           ; 4 bytes @ 0x2D
  7249  00008D                     	ds	3
  7250  000090                     _sin$4097:
  7251                           	opt stack 0
  7252  000090                     i2_printf$4101:
  7253                           	opt stack 0
  7254                           
  7255                           ; 4 bytes @ 0x30
  7256  000090                     	ds	1
  7257  000091                     ?_asin:
  7258                           	opt stack 0
  7259  000091                     asin@x:
  7260                           	opt stack 0
  7261                           
  7262                           ; 4 bytes @ 0x31
  7263  000091                     	ds	3
  7264  000094                     i2printf@idx:
  7265                           	opt stack 0
  7266  000094                     sin@x2:
  7267                           	opt stack 0
  7268                           
  7269                           ; 4 bytes @ 0x34
  7270  000094                     	ds	1
  7271  000095                     i2printf@len:
  7272                           	opt stack 0
  7273  000095                     asin@sgn:
  7274                           	opt stack 0
  7275                           
  7276                           ; 4 bytes @ 0x35
  7277  000095                     	ds	2
  7278  000097                     i2printf@cp:
  7279                           	opt stack 0
  7280                           
  7281                           ; 2 bytes @ 0x37
  7282  000097                     	ds	1
  7283  000098                     sin@sgn:
  7284                           	opt stack 0
  7285                           
  7286                           ; 1 bytes @ 0x38
  7287  000098                     	ds	1
  7288  000099                     ?_currentMeasuredToPeak:
  7289                           	opt stack 0
  7290  000099                     i2printf@ap:
  7291                           	opt stack 0
  7292  000099                     currentMeasuredToPeak@Measured:
  7293                           	opt stack 0
  7294  000099                     _asin$4096:
  7295                           	opt stack 0
  7296                           
  7297                           ; 4 bytes @ 0x39
  7298  000099                     	ds	2
  7299  00009B                     i2printf@flag:
  7300                           	opt stack 0
  7301                           
  7302                           ; 2 bytes @ 0x3B
  7303  00009B                     	ds	2
  7304  00009D                     i2printf@exp:
  7305                           	opt stack 0
  7306  00009D                     currentMeasuredToPeak@Angle:
  7307                           	opt stack 0
  7308  00009D                     _asin$4095:
  7309                           	opt stack 0
  7310                           
  7311                           ; 4 bytes @ 0x3D
  7312  00009D                     	ds	2
  7313  00009F                     i2printf@tmpval:
  7314                           	opt stack 0
  7315                           
  7316                           ; 4 bytes @ 0x3F
  7317  00009F                     	ds	2
  7318  0000A1                     currentMeasuredToPeak@Peak:
  7319                           	opt stack 0
  7320  0000A1                     asin@y:
  7321                           	opt stack 0
  7322                           
  7323                           ; 4 bytes @ 0x41
  7324  0000A1                     	ds	2
  7325  0000A3                     i2printf@val:
  7326                           	opt stack 0
  7327                           
  7328                           ; 4 bytes @ 0x43
  7329  0000A3                     	ds	2
  7330  0000A5                     _asin$4094:
  7331                           	opt stack 0
  7332                           
  7333                           ; 4 bytes @ 0x45
  7334  0000A5                     	ds	2
  7335  0000A7                     i2printf@fval:
  7336                           	opt stack 0
  7337                           
  7338                           ; 4 bytes @ 0x47
  7339  0000A7                     	ds	2
  7340  0000A9                     ?_acos:
  7341                           	opt stack 0
  7342  0000A9                     acos@x:
  7343                           	opt stack 0
  7344                           
  7345                           ; 4 bytes @ 0x49
  7346  0000A9                     	ds	2
  7347  0000AB                     i2printf@prec:
  7348                           	opt stack 0
  7349                           
  7350                           ; 2 bytes @ 0x4B
  7351  0000AB                     	ds	2
  7352  0000AD                     i2printf@c:
  7353                           	opt stack 0
  7354  0000AD                     _acos$4093:
  7355                           	opt stack 0
  7356                           
  7357                           ; 4 bytes @ 0x4D
  7358  0000AD                     	ds	4
  7359  0000B1                     ?_peakToRMS:
  7360                           	opt stack 0
  7361  0000B1                     peakToRMS@Peak:
  7362                           	opt stack 0
  7363                           
  7364                           ; 4 bytes @ 0x51
  7365  0000B1                     	ds	4
  7366  0000B5                     peakToRMS@Angle:
  7367                           	opt stack 0
  7368                           
  7369                           ; 4 bytes @ 0x55
  7370  0000B5                     	ds	4
  7371  0000B9                     _peakToRMS$4086:
  7372                           	opt stack 0
  7373                           
  7374                           ; 4 bytes @ 0x59
  7375  0000B9                     	ds	4
  7376  0000BD                     _peakToRMS$4087:
  7377                           	opt stack 0
  7378                           
  7379                           ; 4 bytes @ 0x5D
  7380  0000BD                     	ds	4
  7381  0000C1                     _peakToRMS$4085:
  7382                           	opt stack 0
  7383                           
  7384                           ; 4 bytes @ 0x61
  7385  0000C1                     	ds	4
  7386  0000C5                     peakToRMS@RMS:
  7387                           	opt stack 0
  7388                           
  7389                           ; 4 bytes @ 0x65
  7390  0000C5                     	ds	4
  7391  0000C9                     _ADCPostProcessingCallback$4090:
  7392                           	opt stack 0
  7393                           
  7394                           ; 4 bytes @ 0x69
  7395  0000C9                     	ds	4
  7396  0000CD                     _ADCPostProcessingCallback$4091:
  7397                           	opt stack 0
  7398                           
  7399                           ; 4 bytes @ 0x6D
  7400  0000CD                     	ds	4
  7401  0000D1                     _ADCPostProcessingCallback$4092:
  7402                           	opt stack 0
  7403                           
  7404                           ; 4 bytes @ 0x71
  7405  0000D1                     	ds	4
  7406  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  7407                           	opt stack 0
  7408                           
  7409                           ; 1 bytes @ 0x75
  7410  0000D5                     	ds	1
  7411  0000D6                     _ADCPostProcessingCallback$4088:
  7412                           	opt stack 0
  7413                           
  7414                           ; 4 bytes @ 0x76
  7415  0000D6                     	ds	4
  7416  0000DA                     _ADCPostProcessingCallback$4089:
  7417                           	opt stack 0
  7418                           
  7419                           ; 4 bytes @ 0x7A
  7420  0000DA                     	ds	4
  7421  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  7422                           
  7423                           ; 1 bytes @ 0x7E
  7424  0000DE                     	ds	18
  7425                           tblptru	equ	0xFF8
  7426                           tblptrh	equ	0xFF7
  7427                           tblptrl	equ	0xFF6
  7428                           tablat	equ	0xFF5
  7429                           postinc0	equ	0xFEE
  7430                           wreg	equ	0xFE8
  7431                           postdec1	equ	0xFE5
  7432                           fsr1l	equ	0xFE1
  7433                           
  7434                           	psect	cstackCOMRAM
  7435  000001                     __pcstackCOMRAM:
  7436                           	opt stack 0
  7437  000001                     ??i2_isdigit:
  7438  000001                     ?_ADCC_GetConversionResult:
  7439                           	opt stack 0
  7440  000001                     ?_ADCC_GetFilterValue:
  7441                           	opt stack 0
  7442  000001                     ?i2___wmul:
  7443                           	opt stack 0
  7444  000001                     ?i2___awmod:
  7445                           	opt stack 0
  7446  000001                     ?i2__div_to_l_:
  7447                           	opt stack 0
  7448  000001                     ?i2__tdiv_to_l_:
  7449                           	opt stack 0
  7450  000001                     ?i2___lldiv:
  7451                           	opt stack 0
  7452  000001                     i2EUSART2_Write@txData:
  7453                           	opt stack 0
  7454  000001                     TMR5_WriteTimer@timerVal:
  7455                           	opt stack 0
  7456  000001                     i2___wmul@multiplier:
  7457                           	opt stack 0
  7458  000001                     i2___awmod@dividend:
  7459                           	opt stack 0
  7460  000001                     i2__tdiv_to_l_@f1:
  7461                           	opt stack 0
  7462  000001                     frexp@value:
  7463                           	opt stack 0
  7464  000001                     i2__div_to_l_@f1:
  7465                           	opt stack 0
  7466  000001                     i2___lldiv@dividend:
  7467                           	opt stack 0
  7468                           
  7469                           ; 4 bytes @ 0x0
  7470  000001                     	ds	1
  7471  000002                     i2putch@txData:
  7472                           	opt stack 0
  7473  000002                     i2_isdigit$3181:
  7474                           	opt stack 0
  7475                           
  7476                           ; 1 bytes @ 0x1
  7477  000002                     	ds	1
  7478  000003                     ??_ADCC_GetConversionResult:
  7479  000003                     ??_ADCC_GetFilterValue:
  7480  000003                     i2isdigit@c:
  7481                           	opt stack 0
  7482  000003                     i2___wmul@multiplicand:
  7483                           	opt stack 0
  7484  000003                     i2___awmod@divisor:
  7485                           	opt stack 0
  7486                           
  7487                           ; 2 bytes @ 0x2
  7488  000003                     	ds	1
  7489  000004                     i2__tdiv_to_l_@f2:
  7490                           	opt stack 0
  7491                           
  7492                           ; 3 bytes @ 0x3
  7493  000004                     	ds	1
  7494  000005                     ?i2___xxtofl:
  7495                           	opt stack 0
  7496  000005                     i2___awmod@counter:
  7497                           	opt stack 0
  7498  000005                     frexp@eptr:
  7499                           	opt stack 0
  7500  000005                     i2___wmul@product:
  7501                           	opt stack 0
  7502  000005                     i2__div_to_l_@f2:
  7503                           	opt stack 0
  7504  000005                     i2___lldiv@divisor:
  7505                           	opt stack 0
  7506  000005                     i2___xxtofl@val:
  7507                           	opt stack 0
  7508                           
  7509                           ; 4 bytes @ 0x4
  7510  000005                     	ds	1
  7511  000006                     i2___awmod@sign:
  7512                           	opt stack 0
  7513                           
  7514                           ; 1 bytes @ 0x5
  7515  000006                     	ds	1
  7516  000007                     ??_frexp:
  7517  000007                     ??i2__tdiv_to_l_:
  7518  000007                     ?i2___awdiv:
  7519                           	opt stack 0
  7520  000007                     i2___awdiv@dividend:
  7521                           	opt stack 0
  7522                           
  7523                           ; 2 bytes @ 0x6
  7524  000007                     	ds	2
  7525  000009                     ??i2___xxtofl:
  7526  000009                     i2___awdiv@divisor:
  7527                           	opt stack 0
  7528  000009                     i2__div_to_l_@quot:
  7529                           	opt stack 0
  7530  000009                     i2___lldiv@quotient:
  7531                           	opt stack 0
  7532                           
  7533                           ; 4 bytes @ 0x8
  7534  000009                     	ds	1
  7535  00000A                     i2__tdiv_to_l_@quot:
  7536                           	opt stack 0
  7537                           
  7538                           ; 4 bytes @ 0x9
  7539  00000A                     	ds	1
  7540  00000B                     i2___awdiv@counter:
  7541                           	opt stack 0
  7542                           
  7543                           ; 1 bytes @ 0xA
  7544  00000B                     	ds	1
  7545  00000C                     i2___awdiv@sign:
  7546                           	opt stack 0
  7547                           
  7548                           ; 1 bytes @ 0xB
  7549  00000C                     	ds	1
  7550  00000D                     i2__div_to_l_@cntr:
  7551                           	opt stack 0
  7552  00000D                     i2___lldiv@counter:
  7553                           	opt stack 0
  7554  00000D                     i2___xxtofl@sign:
  7555                           	opt stack 0
  7556  00000D                     i2___awdiv@quotient:
  7557                           	opt stack 0
  7558                           
  7559                           ; 2 bytes @ 0xC
  7560  00000D                     	ds	1
  7561  00000E                     ?i2___llmod:
  7562                           	opt stack 0
  7563  00000E                     i2__div_to_l_@exp1:
  7564                           	opt stack 0
  7565  00000E                     i2__tdiv_to_l_@cntr:
  7566                           	opt stack 0
  7567  00000E                     i2___xxtofl@exp:
  7568                           	opt stack 0
  7569  00000E                     i2___llmod@dividend:
  7570                           	opt stack 0
  7571                           
  7572                           ; 4 bytes @ 0xD
  7573  00000E                     	ds	1
  7574  00000F                     i2__tdiv_to_l_@exp1:
  7575                           	opt stack 0
  7576  00000F                     i2___xxtofl@arg:
  7577                           	opt stack 0
  7578                           
  7579                           ; 4 bytes @ 0xE
  7580  00000F                     	ds	3
  7581  000012                     i2___llmod@divisor:
  7582                           	opt stack 0
  7583                           
  7584                           ; 4 bytes @ 0x11
  7585  000012                     	ds	1
  7586  000013                     ?i2___fldiv:
  7587                           	opt stack 0
  7588  000013                     i2___fldiv@b:
  7589                           	opt stack 0
  7590                           
  7591                           ; 4 bytes @ 0x12
  7592  000013                     	ds	3
  7593  000016                     i2___llmod@counter:
  7594                           	opt stack 0
  7595                           
  7596                           ; 1 bytes @ 0x15
  7597  000016                     	ds	1
  7598  000017                     i2___fldiv@a:
  7599                           	opt stack 0
  7600                           
  7601                           ; 4 bytes @ 0x16
  7602  000017                     	ds	4
  7603  00001B                     ??i2___fldiv:
  7604                           
  7605                           ; 1 bytes @ 0x1A
  7606  00001B                     	ds	4
  7607  00001F                     i2___fldiv@sign:
  7608                           	opt stack 0
  7609                           
  7610                           ; 1 bytes @ 0x1E
  7611  00001F                     	ds	1
  7612  000020                     i2___fldiv@rem:
  7613                           	opt stack 0
  7614                           
  7615                           ; 4 bytes @ 0x1F
  7616  000020                     	ds	4
  7617  000024                     i2___fldiv@new_exp:
  7618                           	opt stack 0
  7619                           
  7620                           ; 2 bytes @ 0x23
  7621  000024                     	ds	2
  7622  000026                     i2___fldiv@grs:
  7623                           	opt stack 0
  7624                           
  7625                           ; 4 bytes @ 0x25
  7626  000026                     	ds	4
  7627  00002A                     i2___fldiv@bexp:
  7628                           	opt stack 0
  7629                           
  7630                           ; 1 bytes @ 0x29
  7631  00002A                     	ds	1
  7632  00002B                     i2___fldiv@aexp:
  7633                           	opt stack 0
  7634                           
  7635                           ; 1 bytes @ 0x2A
  7636  00002B                     	ds	1
  7637  00002C                     ?i2___flneg:
  7638                           	opt stack 0
  7639  00002C                     i2___flneg@f1:
  7640                           	opt stack 0
  7641                           
  7642                           ; 4 bytes @ 0x2B
  7643  00002C                     	ds	4
  7644  000030                     ?_fabs:
  7645                           	opt stack 0
  7646  000030                     ?i2___flmul:
  7647                           	opt stack 0
  7648  000030                     fabs@d:
  7649                           	opt stack 0
  7650  000030                     i2___flmul@b:
  7651                           	opt stack 0
  7652                           
  7653                           ; 4 bytes @ 0x2F
  7654  000030                     	ds	4
  7655  000034                     i2___flge@ff1:
  7656                           	opt stack 0
  7657  000034                     i2___flmul@a:
  7658                           	opt stack 0
  7659                           
  7660                           ; 4 bytes @ 0x33
  7661  000034                     	ds	4
  7662  000038                     ??i2___flmul:
  7663  000038                     i2___flge@ff2:
  7664                           	opt stack 0
  7665                           
  7666                           ; 4 bytes @ 0x37
  7667  000038                     	ds	4
  7668  00003C                     ??i2___flge:
  7669  00003C                     i2___flmul@sign:
  7670                           	opt stack 0
  7671                           
  7672                           ; 1 bytes @ 0x3B
  7673  00003C                     	ds	1
  7674  00003D                     i2___flmul@aexp:
  7675                           	opt stack 0
  7676                           
  7677                           ; 1 bytes @ 0x3C
  7678  00003D                     	ds	1
  7679  00003E                     i2___flmul@grs:
  7680                           	opt stack 0
  7681                           
  7682                           ; 4 bytes @ 0x3D
  7683  00003E                     	ds	4
  7684  000042                     i2___flmul@bexp:
  7685                           	opt stack 0
  7686                           
  7687                           ; 1 bytes @ 0x41
  7688  000042                     	ds	1
  7689  000043                     i2___flmul@prod:
  7690                           	opt stack 0
  7691                           
  7692                           ; 4 bytes @ 0x42
  7693  000043                     	ds	4
  7694  000047                     i2___flmul@temp:
  7695                           	opt stack 0
  7696                           
  7697                           ; 2 bytes @ 0x46
  7698  000047                     	ds	2
  7699  000049                     ?i2_fround:
  7700                           	opt stack 0
  7701  000049                     ?i2_scale:
  7702                           	opt stack 0
  7703                           
  7704                           ; 4 bytes @ 0x48
  7705  000049                     	ds	4
  7706  00004D                     i2_fround$4099:
  7707                           	opt stack 0
  7708  00004D                     i2_scale$4100:
  7709                           	opt stack 0
  7710                           
  7711                           ; 4 bytes @ 0x4C
  7712  00004D                     	ds	4
  7713  000051                     i2scale@scl:
  7714                           	opt stack 0
  7715  000051                     i2_fround$4098:
  7716                           	opt stack 0
  7717                           
  7718                           ; 4 bytes @ 0x50
  7719  000051                     	ds	4
  7720  000055                     i2fround@prec:
  7721                           	opt stack 0
  7722                           
  7723                           ; 1 bytes @ 0x54
  7724  000055                     	ds	1
  7725  000056                     ?i2___fladd:
  7726                           	opt stack 0
  7727  000056                     i2___fladd@b:
  7728                           	opt stack 0
  7729                           
  7730                           ; 4 bytes @ 0x55
  7731  000056                     	ds	4
  7732  00005A                     i2___fladd@a:
  7733                           	opt stack 0
  7734                           
  7735                           ; 4 bytes @ 0x59
  7736  00005A                     	ds	4
  7737  00005E                     tblptru	equ	0xFF8
  7738                           tblptrh	equ	0xFF7
  7739                           tblptrl	equ	0xFF6
  7740                           tablat	equ	0xFF5
  7741                           postinc0	equ	0xFEE
  7742                           wreg	equ	0xFE8
  7743                           postdec1	equ	0xFE5
  7744                           fsr1l	equ	0xFE1
  7745                           
  7746                           ; 1 bytes @ 0x5D
  7747 ;;
  7748 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7749 ;;
  7750 ;; *************** function _main *****************
  7751 ;; Defined at:
  7752 ;;		line 377 in file "main.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;		None
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      void 
  7759 ;; Registers used:
  7760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;Total ram usage:        2 bytes
  7771 ;; Hardware stack levels required when called:   20
  7772 ;; This function calls:
  7773 ;;		_ADCC_SetADTIInterruptHandler
  7774 ;;		_SYSTEM_Initialize
  7775 ;;		_TMR6_SetInterruptHandler
  7776 ;;		_TMR7_SetInterruptHandler
  7777 ;;		_getCauseOfReset
  7778 ;;		_terminal_clearTerminal
  7779 ;;		_terminal_ringBufferPull
  7780 ;;		_terminal_setCursorHome
  7781 ;;		_terminal_textAttributesReset
  7782 ;; This function is called by:
  7783 ;;		Startup code after reset
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text0
  7788  017230                     __ptext0:
  7789                           	opt stack 0
  7790  017230                     _main:
  7791                           	opt stack 11
  7792                           
  7793                           ;main.c: 381: reset_cause = getCauseOfReset();
  7794                           
  7795                           ;incstack = 0
  7796  017230  EC2B  F0BD         	call	_getCauseOfReset	;wreg free
  7797  017234  0102               	movlb	2	; () banked
  7798  017236  6FE2               	movwf	_reset_cause& (0+255),b
  7799                           
  7800                           ; BSR set to: 2
  7801                           ;main.c: 385: _delay((unsigned long)((250)*(64000000/4000.0)));
  7802  017238  0E15               	movlw	21
  7803  01723A  0101               	movlb	1	; () banked
  7804  01723C  6FCA               	movwf	(??_main+1)& (0+255),b
  7805  01723E  0E4B               	movlw	75
  7806  017240  6FC9               	movwf	??_main& (0+255),b
  7807  017242  0EBE               	movlw	190
  7808  017244                     u18237:
  7809  017244  2EE8               	decfsz	wreg,f,c
  7810  017246  D7FE               	bra	u18237
  7811  017248  2FC9               	decfsz	??_main& (0+255),f,b
  7812  01724A  D7FC               	bra	u18237
  7813  01724C  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  7814  01724E  D7FA               	bra	u18237
  7815  017250  F000               	nop	
  7816                           
  7817                           ;main.c: 388: SYSTEM_Initialize();
  7818  017252  EC16  F0C0         	call	_SYSTEM_Initialize	;wreg free
  7819                           
  7820                           ;main.c: 391: LATGbits.LATG0 = 0;
  7821  017256  907F               	bcf	3967,0,c	;volatile
  7822                           
  7823                           ;main.c: 392: LATGbits.LATG1 = 0;
  7824  017258  927F               	bcf	3967,1,c	;volatile
  7825                           
  7826                           ;main.c: 393: load_enable = 0;
  7827  01725A  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7828                           
  7829                           ;main.c: 396: ADCON2bits.ADCRS = 7;
  7830  01725C  010F               	movlb	15	; () banked
  7831  01725E  895A               	bsf	90,4,b	;volatile
  7832  017260  8B5A               	bsf	90,5,b	;volatile
  7833  017262  8D5A               	bsf	90,6,b	;volatile
  7834                           
  7835                           ; BSR set to: 15
  7836                           ;main.c: 397: ADCAP = 20;
  7837  017264  0E14               	movlw	20
  7838  017266  6F5D               	movwf	93,b	;volatile
  7839                           
  7840                           ; BSR set to: 15
  7841                           ;main.c: 400: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7842  017268  0ED6               	movlw	low _heartbeatTimerCallback
  7843  01726A  0101               	movlb	1	; () banked
  7844  01726C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7845  01726E  0E7D               	movlw	high _heartbeatTimerCallback
  7846  017270  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7847  017272  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7848  017274  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7849  017276  ECA5  F0C1         	call	_TMR6_SetInterruptHandler	;wreg free
  7850                           
  7851                           ;main.c: 403: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
  7852  01727A  0EE4               	movlw	low _ADCPostProcessingCallback
  7853  01727C  0101               	movlb	1	; () banked
  7854  01727E  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  7855  017280  0E23               	movlw	high _ADCPostProcessingCallback
  7856  017282  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  7857  017284  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7858  017286  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  7859  017288  ECC1  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7860                           
  7861                           ;main.c: 406: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7862  01728C  0EDC               	movlw	low _acquisitionTimerCallback
  7863  01728E  0101               	movlb	1	; () banked
  7864  017290  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7865  017292  0E82               	movlw	high _acquisitionTimerCallback
  7866  017294  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7867  017296  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7868  017298  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7869  01729A  EC9E  F0C1         	call	_TMR7_SetInterruptHandler	;wreg free
  7870                           
  7871                           ;main.c: 409: (INTCONbits.GIEH = 1);
  7872  01729E  8EF2               	bsf	intcon,7,c	;volatile
  7873                           
  7874                           ;main.c: 412: (INTCONbits.GIEL = 1);
  7875  0172A0  8CF2               	bsf	intcon,6,c	;volatile
  7876                           
  7877                           ;main.c: 415: VCC_overvoltage_flag = 0;
  7878  0172A2  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  7879                           
  7880                           ;main.c: 418: terminal_clearTerminal();
  7881  0172A4  EC87  F0C1         	call	_terminal_clearTerminal	;wreg free
  7882                           
  7883                           ;main.c: 419: terminal_setCursorHome();
  7884  0172A8  EC77  F0C1         	call	_terminal_setCursorHome	;wreg free
  7885                           
  7886                           ;main.c: 420: terminal_textAttributesReset();
  7887  0172AC  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  7888  0172B0                     
  7889                           ;main.c: 424: {
  7890                           ;main.c: 427: if (eusart2RxStringReady) {
  7891  0172B0  0100               	movlb	0	; () banked
  7892  0172B2  A1FB               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7893  0172B4  D7FD               	goto	l998
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;main.c: 429: terminal_ringBufferPull();
  7897  0172B6  EC98  F0B4         	call	_terminal_ringBufferPull	;wreg free
  7898  0172BA  D7FA               	goto	l998
  7899  0172BC                     __end_of_main:
  7900                           	opt stack 0
  7901                           tblptru	equ	0xFF8
  7902                           tblptrh	equ	0xFF7
  7903                           tblptrl	equ	0xFF6
  7904                           tablat	equ	0xFF5
  7905                           intcon	equ	0xFF2
  7906                           postinc0	equ	0xFEE
  7907                           wreg	equ	0xFE8
  7908                           postdec1	equ	0xFE5
  7909                           fsr1l	equ	0xFE1
  7910                           
  7911 ;; *************** function _terminal_setCursorHome *****************
  7912 ;; Defined at:
  7913 ;;		line 85 in file "ring_buffer_interface.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:   16
  7934 ;; This function calls:
  7935 ;;		_printf
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text1
  7942  0182EE                     __ptext1:
  7943                           	opt stack 0
  7944  0182EE                     _terminal_setCursorHome:
  7945                           	opt stack 14
  7946                           
  7947                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7948                           
  7949                           ;incstack = 0
  7950  0182EE  0EB9               	movlw	low STR_3
  7951  0182F0  0101               	movlb	1	; () banked
  7952  0182F2  6F7C               	movwf	printf@f& (0+255),b
  7953  0182F4  0EFF               	movlw	high STR_3
  7954  0182F6  6F7D               	movwf	(printf@f+1)& (0+255),b
  7955  0182F8  ECD0  F086         	call	_printf	;wreg free
  7956  0182FC  0012               	return		;funcret
  7957  0182FE                     __end_of_terminal_setCursorHome:
  7958                           	opt stack 0
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           intcon	equ	0xFF2
  7964                           postinc0	equ	0xFEE
  7965                           wreg	equ	0xFE8
  7966                           postdec1	equ	0xFE5
  7967                           fsr1l	equ	0xFE1
  7968                           
  7969 ;; *************** function _terminal_ringBufferPull *****************
  7970 ;; Defined at:
  7971 ;;		line 12 in file "ring_buffer_interface.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;		None
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  index           2  197[BANK1 ] int 
  7976 ;;  index           2  199[BANK1 ] int 
  7977 ;;  charNumber      2  195[BANK1 ] int 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7988 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;Total ram usage:        9 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:   19
  7994 ;; This function calls:
  7995 ;;		_EUSART2_Read
  7996 ;;		_ringBufferLUT
  7997 ;;		_strlen
  7998 ;; This function is called by:
  7999 ;;		_main
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text2
  8004  016930                     __ptext2:
  8005                           	opt stack 0
  8006  016930                     _terminal_ringBufferPull:
  8007                           	opt stack 11
  8008                           
  8009                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  8010                           
  8011                           ;incstack = 0
  8012  016930  C1D9  F1C3         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  8013  016934  0101               	movlb	1	; () banked
  8014  016936  6BC4               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  8015                           
  8016                           ; BSR set to: 1
  8017                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  8018  016938  0E00               	movlw	0
  8019  01693A  6FC8               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  8020  01693C  0E00               	movlw	0
  8021  01693E  6FC7               	movwf	terminal_ringBufferPull@index& (0+255),b
  8022  016940                     l14126:
  8023                           
  8024                           ; BSR set to: 1
  8025  016940  BFC8               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  8026  016942  D006               	goto	l1037
  8027  016944  51C8               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8028  016946  E10F               	bnz	l14136
  8029  016948  0E40               	movlw	64
  8030  01694A  5DC7               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  8031  01694C  B0D8               	btfsc	status,0,c
  8032  01694E  D00B               	goto	u17280
  8033  016950                     l1037:
  8034                           
  8035                           ; BSR set to: 1
  8036                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  8037                           
  8038                           ; BSR set to: 1
  8039  016950  0E7E               	movlw	low _line
  8040  016952  25C7               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  8041  016954  6ED9               	movwf	fsr2l,c
  8042  016956  0E02               	movlw	high _line
  8043  016958  21C8               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  8044  01695A  6EDA               	movwf	fsr2h,c
  8045  01695C  0E00               	movlw	0
  8046  01695E  6EDF               	movwf	indf2,c
  8047                           
  8048                           ; BSR set to: 1
  8049  016960  4BC7               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  8050  016962  2BC8               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  8051  016964  D7ED               	goto	l14126
  8052  016966                     u17280:
  8053  016966                     l14136:
  8054                           
  8055                           ; BSR set to: 1
  8056                           ;ring_buffer_interface.c: 21: }
  8057                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  8058  016966  0E00               	movlw	0
  8059  016968  6FC6               	movwf	(terminal_ringBufferPull@index_2397+1)& (0+255),b
  8060  01696A  0E00               	movlw	0
  8061  01696C  6FC5               	movwf	terminal_ringBufferPull@index_2397& (0+255),b
  8062  01696E  D00E               	goto	l1039
  8063  016970                     
  8064                           ; BSR set to: 1
  8065                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  8066                           
  8067                           ; BSR set to: 1
  8068  016970  EC3C  F0BE         	call	_EUSART2_Read	;wreg free
  8069  016974  0101               	movlb	1	; () banked
  8070  016976  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  8071  016978  0E7E               	movlw	low _line
  8072  01697A  25C5               	addwf	terminal_ringBufferPull@index_2397& (0+255),w,b
  8073  01697C  6ED9               	movwf	fsr2l,c
  8074  01697E  0E02               	movlw	high _line
  8075  016980  21C6               	addwfc	(terminal_ringBufferPull@index_2397+1)& (0+255),w,b
  8076  016982  6EDA               	movwf	fsr2h,c
  8077  016984  C1C0  FFDF         	movff	??_terminal_ringBufferPull,indf2
  8078                           
  8079                           ; BSR set to: 1
  8080  016988  4BC5               	infsnz	terminal_ringBufferPull@index_2397& (0+255),f,b
  8081  01698A  2BC6               	incf	(terminal_ringBufferPull@index_2397+1)& (0+255),f,b
  8082  01698C                     l1039:
  8083                           
  8084                           ; BSR set to: 1
  8085                           
  8086                           ; BSR set to: 1
  8087  01698C  51C3               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  8088  01698E  5DC5               	subwf	terminal_ringBufferPull@index_2397& (0+255),w,b
  8089  016990  51C6               	movf	(terminal_ringBufferPull@index_2397+1)& (0+255),w,b
  8090  016992  0A80               	xorlw	128
  8091  016994  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  8092  016996  51C4               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  8093  016998  0A80               	xorlw	128
  8094  01699A  59C0               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  8095  01699C  A0D8               	btfss	status,0,c
  8096  01699E  D7E8               	goto	l1040
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;ring_buffer_interface.c: 28: }
  8100                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  8101  0169A0  C0FA  F1DA         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  8102                           
  8103                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  8104                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  8105  0169A4  D017               	goto	l1042
  8106  0169A6                     
  8107                           ; BSR set to: 1
  8108                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  8109                           
  8110                           ; BSR set to: 1
  8111  0169A6  0EFF               	movlw	255
  8112  0169A8  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  8113  0169AA  0EFF               	movlw	255
  8114  0169AC  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8115  0169AE  0E7E               	movlw	low _line
  8116  0169B0  6F17               	movwf	strlen@s& (0+255),b
  8117  0169B2  0E02               	movlw	high _line
  8118  0169B4  6F18               	movwf	(strlen@s+1)& (0+255),b
  8119  0169B6  ECFF  F0BC         	call	_strlen	;wreg free
  8120  0169BA  0101               	movlb	1	; () banked
  8121  0169BC  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8122  0169BE  2717               	addwf	?_strlen& (0+255),f,b
  8123  0169C0  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8124  0169C2  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8125  0169C4  0E7E               	movlw	low _line
  8126  0169C6  2517               	addwf	?_strlen& (0+255),w,b
  8127  0169C8  6ED9               	movwf	fsr2l,c
  8128  0169CA  0E02               	movlw	high _line
  8129  0169CC  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8130  0169CE  6EDA               	movwf	fsr2h,c
  8131  0169D0  0E00               	movlw	0
  8132  0169D2  6EDF               	movwf	indf2,c
  8133  0169D4                     l1042:
  8134                           
  8135                           ; BSR set to: 1
  8136  0169D4  0EFF               	movlw	255
  8137  0169D6  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  8138  0169D8  0EFF               	movlw	255
  8139  0169DA  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8140  0169DC  0E7E               	movlw	low _line
  8141  0169DE  6F17               	movwf	strlen@s& (0+255),b
  8142  0169E0  0E02               	movlw	high _line
  8143  0169E2  6F18               	movwf	(strlen@s+1)& (0+255),b
  8144  0169E4  ECFF  F0BC         	call	_strlen	;wreg free
  8145  0169E8  0101               	movlb	1	; () banked
  8146  0169EA  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8147  0169EC  2717               	addwf	?_strlen& (0+255),f,b
  8148  0169EE  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8149  0169F0  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8150  0169F2  0E7E               	movlw	low _line
  8151  0169F4  2517               	addwf	?_strlen& (0+255),w,b
  8152  0169F6  6ED9               	movwf	fsr2l,c
  8153  0169F8  0E02               	movlw	high _line
  8154  0169FA  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8155  0169FC  6EDA               	movwf	fsr2h,c
  8156  0169FE  0E0A               	movlw	10
  8157  016A00  18DE               	xorwf	postinc2,w,c
  8158  016A02  B4D8               	btfsc	status,2,c
  8159  016A04  D7D0               	goto	l1043
  8160                           
  8161                           ; BSR set to: 1
  8162  016A06  0EFF               	movlw	255
  8163  016A08  6FC0               	movwf	??_terminal_ringBufferPull& (0+255),b
  8164  016A0A  0EFF               	movlw	255
  8165  016A0C  6FC1               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  8166  016A0E  0E7E               	movlw	low _line
  8167  016A10  6F17               	movwf	strlen@s& (0+255),b
  8168  016A12  0E02               	movlw	high _line
  8169  016A14  6F18               	movwf	(strlen@s+1)& (0+255),b
  8170  016A16  ECFF  F0BC         	call	_strlen	;wreg free
  8171  016A1A  0101               	movlb	1	; () banked
  8172  016A1C  51C0               	movf	??_terminal_ringBufferPull& (0+255),w,b
  8173  016A1E  2717               	addwf	?_strlen& (0+255),f,b
  8174  016A20  51C1               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  8175  016A22  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  8176  016A24  0E7E               	movlw	low _line
  8177  016A26  2517               	addwf	?_strlen& (0+255),w,b
  8178  016A28  6ED9               	movwf	fsr2l,c
  8179  016A2A  0E02               	movlw	high _line
  8180  016A2C  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  8181  016A2E  6EDA               	movwf	fsr2h,c
  8182  016A30  0E0D               	movlw	13
  8183  016A32  18DE               	xorwf	postinc2,w,c
  8184  016A34  B4D8               	btfsc	status,2,c
  8185  016A36  D7B7               	goto	l1043
  8186                           
  8187                           ; BSR set to: 1
  8188                           ;ring_buffer_interface.c: 40: }
  8189                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  8190  016A38  0100               	movlb	0	; () banked
  8191  016A3A  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  8195  016A3C  0E7E               	movlw	low _line
  8196  016A3E  0101               	movlb	1	; () banked
  8197  016A40  6FBC               	movwf	ringBufferLUT@line& (0+255),b
  8198  016A42  0E02               	movlw	high _line
  8199  016A44  6FBD               	movwf	(ringBufferLUT@line+1)& (0+255),b
  8200  016A46  EC00  F080         	call	_ringBufferLUT	;wreg free
  8201  016A4A  0012               	return		;funcret
  8202  016A4C                     __end_of_terminal_ringBufferPull:
  8203                           	opt stack 0
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           intcon	equ	0xFF2
  8209                           postinc0	equ	0xFEE
  8210                           wreg	equ	0xFE8
  8211                           postdec1	equ	0xFE5
  8212                           fsr1l	equ	0xFE1
  8213                           indf2	equ	0xFDF
  8214                           postinc2	equ	0xFDE
  8215                           fsr2h	equ	0xFDA
  8216                           fsr2l	equ	0xFD9
  8217                           status	equ	0xFD8
  8218                           
  8219 ;; *************** function _ringBufferLUT *****************
  8220 ;; Defined at:
  8221 ;;		line 43 in file "ring_buffer_LUT.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  line            2  188[BANK1 ] PTR unsigned char 
  8224 ;;		 -> line(64), 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  angle_degree    4   22[BANK3 ] PTR unsigned char 
  8227 ;;  index           2   29[BANK3 ] int 
  8228 ;;  channel_name   22    0[BANK3 ] unsigned char [22]
  8229 ;;  userID          2   33[BANK3 ] int 
  8230 ;;  arg_buff        3   26[BANK3 ] unsigned char [3]
  8231 ;;  percentage      2   31[BANK3 ] int 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8241 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;      Locals:         0       0       0       0      35       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Totals:         0       0       4       0      35       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;Total ram usage:       39 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:   18
  8248 ;; This function calls:
  8249 ;;		_TMR7_StopTimer
  8250 ;;		___fladd
  8251 ;;		___fldiv
  8252 ;;		___flmul
  8253 ;;		___flneg
  8254 ;;		___wmul
  8255 ;;		___xxtofl
  8256 ;;		_atoi
  8257 ;;		_getCauseOfResetString
  8258 ;;		_getDeviceID
  8259 ;;		_getDeviceIDString
  8260 ;;		_getMajorRevisionID
  8261 ;;		_getMinorRevisionID
  8262 ;;		_getUserID
  8263 ;;		_printf
  8264 ;;		_strcmp
  8265 ;;		_strcpy
  8266 ;;		_strstr
  8267 ;;		_terminal_printNewline
  8268 ;;		_terminal_textAttributes
  8269 ;;		_terminal_textAttributesReset
  8270 ;; This function is called by:
  8271 ;;		_terminal_ringBufferPull
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text3
  8276  010000                     __ptext3:
  8277                           	opt stack 0
  8278  010000                     _ringBufferLUT:
  8279                           	opt stack 11
  8280                           
  8281                           ;ring_buffer_LUT.c: 49: if((0 == strcmp(line, "Reset"))) {
  8282                           
  8283                           ;incstack = 0
  8284  010000  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8285  010004  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8286  010008  0E1A               	movlw	low (STR_130+10)
  8287  01000A  0101               	movlb	1	; () banked
  8288  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  8289  01000E  0EFE               	movlw	high (STR_130+10)
  8290  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8291  010012  EC54  F0BD         	call	_strcmp	;wreg free
  8292  010016  0101               	movlb	1	; () banked
  8293  010018  5117               	movf	?_strcmp& (0+255),w,b
  8294  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8295  01001C  A4D8               	btfss	status,2,c
  8296  01001E  D00F               	goto	l1186
  8297                           
  8298                           ; BSR set to: 1
  8299                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  8300  010020  0EB0               	movlw	low STR_2
  8301  010022  6F7C               	movwf	printf@f& (0+255),b
  8302  010024  0EFF               	movlw	high STR_2
  8303  010026  6F7D               	movwf	(printf@f+1)& (0+255),b
  8304  010028  ECD0  F086         	call	_printf	;wreg free
  8305                           
  8306                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  8307  01002C  0EB9               	movlw	low STR_3
  8308  01002E  0101               	movlb	1	; () banked
  8309  010030  6F7C               	movwf	printf@f& (0+255),b
  8310  010032  0EFF               	movlw	high STR_3
  8311  010034  6F7D               	movwf	(printf@f+1)& (0+255),b
  8312  010036  ECD0  F086         	call	_printf	;wreg free
  8313  01003A  00FF               	reset		;# 
  8314                           
  8315                           ;ring_buffer_LUT.c: 60: }
  8316  01003C  0012               	return	
  8317  01003E                     l1186:
  8318                           
  8319                           ;ring_buffer_LUT.c: 63: else if((0 == strcmp(line, "Clear"))) {
  8320  01003E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8321  010042  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8322  010046  0EA0               	movlw	low STR_44
  8323  010048  0101               	movlb	1	; () banked
  8324  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  8325  01004C  0EFF               	movlw	high STR_44
  8326  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8327  010050  EC54  F0BD         	call	_strcmp	;wreg free
  8328  010054  0101               	movlb	1	; () banked
  8329  010056  5117               	movf	?_strcmp& (0+255),w,b
  8330  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8331  01005A  A4D8               	btfss	status,2,c
  8332  01005C  D00E               	goto	l1188
  8333                           
  8334                           ; BSR set to: 1
  8335                           ;ring_buffer_LUT.c: 66: printf("\033[2J");
  8336  01005E  0EB0               	movlw	low STR_2
  8337  010060  6F7C               	movwf	printf@f& (0+255),b
  8338  010062  0EFF               	movlw	high STR_2
  8339  010064  6F7D               	movwf	(printf@f+1)& (0+255),b
  8340  010066  ECD0  F086         	call	_printf	;wreg free
  8341                           
  8342                           ;ring_buffer_LUT.c: 69: printf("\033[H");
  8343  01006A  0EB9               	movlw	low STR_3
  8344  01006C  0101               	movlb	1	; () banked
  8345  01006E  6F7C               	movwf	printf@f& (0+255),b
  8346  010070  0EFF               	movlw	high STR_3
  8347  010072  6F7D               	movwf	(printf@f+1)& (0+255),b
  8348  010074  ECD0  F086         	call	_printf	;wreg free
  8349                           
  8350                           ;ring_buffer_LUT.c: 71: }
  8351  010078  0012               	return	
  8352  01007A                     l1188:
  8353                           
  8354                           ;ring_buffer_LUT.c: 74: else if((0 == strcmp(line, "Cause of Reset?"))) {
  8355  01007A  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8356  01007E  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8357  010082  0E50               	movlw	low STR_47
  8358  010084  0101               	movlb	1	; () banked
  8359  010086  6F19               	movwf	strcmp@s2& (0+255),b
  8360  010088  0EFE               	movlw	high STR_47
  8361  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8362  01008C  EC54  F0BD         	call	_strcmp	;wreg free
  8363  010090  0101               	movlb	1	; () banked
  8364  010092  5117               	movf	?_strcmp& (0+255),w,b
  8365  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8366  010096  A4D8               	btfss	status,2,c
  8367  010098  D019               	goto	l1190
  8368                           
  8369                           ; BSR set to: 1
  8370                           ;ring_buffer_LUT.c: 76: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8371  01009A  0E00               	movlw	0
  8372  01009C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8373  01009E  0E00               	movlw	0
  8374  0100A0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8375  0100A2  0E02               	movlw	2
  8376  0100A4  EC74  F09B         	call	_terminal_textAttributes
  8377                           
  8378                           ;ring_buffer_LUT.c: 79: printf("The cause of the most recent device reset was: %s\n\r",
  8379                           ;ring_buffer_LUT.c: 80: getCauseOfResetString(reset_cause));
  8380  0100A8  0EE5               	movlw	low STR_48
  8381  0100AA  0101               	movlb	1	; () banked
  8382  0100AC  6F7C               	movwf	printf@f& (0+255),b
  8383  0100AE  0EF8               	movlw	high STR_48
  8384  0100B0  6F7D               	movwf	(printf@f+1)& (0+255),b
  8385  0100B2  0102               	movlb	2	; () banked
  8386  0100B4  51E2               	movf	_reset_cause& (0+255),w,b
  8387  0100B6  ECE6  F0BF         	call	_getCauseOfResetString
  8388  0100BA  C117  F17E         	movff	?_getCauseOfResetString,?_printf+2
  8389  0100BE  C118  F17F         	movff	?_getCauseOfResetString+1,?_printf+3
  8390  0100C2  ECD0  F086         	call	_printf	;wreg free
  8391                           
  8392                           ;ring_buffer_LUT.c: 82: terminal_textAttributesReset();
  8393  0100C6  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8394                           
  8395                           ;ring_buffer_LUT.c: 84: }
  8396  0100CA  0012               	return	
  8397  0100CC                     l1190:
  8398                           
  8399                           ;ring_buffer_LUT.c: 87: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  8400  0100CC  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8401  0100D0  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8402  0100D4  0E9A               	movlw	low STR_49
  8403  0100D6  0101               	movlb	1	; () banked
  8404  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
  8405  0100DA  0EFF               	movlw	high STR_49
  8406  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8407  0100DE  EC54  F0BD         	call	_strcmp	;wreg free
  8408  0100E2  0101               	movlb	1	; () banked
  8409  0100E4  5117               	movf	?_strcmp& (0+255),w,b
  8410  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8411  0100E8  B4D8               	btfsc	status,2,c
  8412  0100EA  D00F               	goto	u16150
  8413                           
  8414                           ; BSR set to: 1
  8415  0100EC  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8416  0100F0  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8417  0100F4  0EB5               	movlw	low STR_50
  8418  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
  8419  0100F8  0EFF               	movlw	high STR_50
  8420  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8421  0100FC  EC54  F0BD         	call	_strcmp	;wreg free
  8422  010100  0101               	movlb	1	; () banked
  8423  010102  5117               	movf	?_strcmp& (0+255),w,b
  8424  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8425  010106  A4D8               	btfss	status,2,c
  8426  010108  D018               	goto	l1192
  8427  01010A                     u16150:
  8428                           
  8429                           ; BSR set to: 1
  8430                           ;ring_buffer_LUT.c: 89: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8431                           
  8432                           ; BSR set to: 1
  8433  01010A  0E00               	movlw	0
  8434  01010C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8435  01010E  0E00               	movlw	0
  8436  010110  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8437  010112  0E02               	movlw	2
  8438  010114  EC74  F09B         	call	_terminal_textAttributes
  8439                           
  8440                           ;ring_buffer_LUT.c: 90: printf("AC Power Meter\n\r");
  8441  010118  0EDD               	movlw	low STR_51
  8442  01011A  0101               	movlb	1	; () banked
  8443  01011C  6F7C               	movwf	printf@f& (0+255),b
  8444  01011E  0EFD               	movlw	high STR_51
  8445  010120  6F7D               	movwf	(printf@f+1)& (0+255),b
  8446  010122  ECD0  F086         	call	_printf	;wreg free
  8447                           
  8448                           ;ring_buffer_LUT.c: 91: printf("Marquette University ELEN 3035 Final Project\n\r");
  8449  010126  0E49               	movlw	low STR_52
  8450  010128  0101               	movlb	1	; () banked
  8451  01012A  6F7C               	movwf	printf@f& (0+255),b
  8452  01012C  0EF9               	movlw	high STR_52
  8453  01012E  6F7D               	movwf	(printf@f+1)& (0+255),b
  8454  010130  ECD0  F086         	call	_printf	;wreg free
  8455                           
  8456                           ;ring_buffer_LUT.c: 92: terminal_textAttributesReset();
  8457  010134  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8458                           
  8459                           ;ring_buffer_LUT.c: 94: }
  8460  010138  0012               	return	
  8461  01013A                     l1192:
  8462                           
  8463                           ;ring_buffer_LUT.c: 97: else if((0 == strcmp(line, "Device ID?"))) {
  8464  01013A  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8465  01013E  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8466  010142  0E5C               	movlw	low STR_53
  8467  010144  0101               	movlb	1	; () banked
  8468  010146  6F19               	movwf	strcmp@s2& (0+255),b
  8469  010148  0EFF               	movlw	high STR_53
  8470  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8471  01014C  EC54  F0BD         	call	_strcmp	;wreg free
  8472  010150  0101               	movlb	1	; () banked
  8473  010152  5117               	movf	?_strcmp& (0+255),w,b
  8474  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8475  010156  A4D8               	btfss	status,2,c
  8476  010158  D023               	goto	l1196
  8477                           
  8478                           ; BSR set to: 1
  8479                           ;ring_buffer_LUT.c: 99: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8480  01015A  0E00               	movlw	0
  8481  01015C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8482  01015E  0E00               	movlw	0
  8483  010160  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8484  010162  0E02               	movlw	2
  8485  010164  EC74  F09B         	call	_terminal_textAttributes
  8486                           
  8487                           ;ring_buffer_LUT.c: 102: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
  8488                           ;ring_buffer_LUT.c: 103: "part number of %s\n\r",
  8489                           ;ring_buffer_LUT.c: 104: getDeviceID(),
  8490                           ;ring_buffer_LUT.c: 105: getDeviceIDString(getDeviceID()));
  8491  010168  0EC5               	movlw	low STR_54
  8492  01016A  0101               	movlb	1	; () banked
  8493  01016C  6F7C               	movwf	printf@f& (0+255),b
  8494  01016E  0EF5               	movlw	high STR_54
  8495  010170  6F7D               	movwf	(printf@f+1)& (0+255),b
  8496  010172  ECF1  F0C0         	call	_getDeviceID	;wreg free
  8497  010176  C122  F17E         	movff	?_getDeviceID,?_printf+2
  8498  01017A  C123  F17F         	movff	?_getDeviceID+1,?_printf+3
  8499  01017E  ECF1  F0C0         	call	_getDeviceID	;wreg free
  8500  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
  8501  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
  8502  01018A  EC9F  F0BC         	call	_getDeviceIDString	;wreg free
  8503  01018E  C124  F180         	movff	?_getDeviceIDString,?_printf+4
  8504  010192  C125  F181         	movff	?_getDeviceIDString+1,?_printf+5
  8505  010196  ECD0  F086         	call	_printf	;wreg free
  8506                           
  8507                           ;ring_buffer_LUT.c: 107: terminal_textAttributesReset();
  8508  01019A  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8509                           
  8510                           ;ring_buffer_LUT.c: 109: }
  8511  01019E  0012               	return	
  8512  0101A0                     l1196:
  8513                           
  8514                           ;ring_buffer_LUT.c: 112: else if((0 == strcmp(line, "Revision ID?"))) {
  8515  0101A0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8516  0101A4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8517  0101A8  0E1D               	movlw	low STR_55
  8518  0101AA  0101               	movlb	1	; () banked
  8519  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
  8520  0101AE  0EFF               	movlw	high STR_55
  8521  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8522  0101B2  EC54  F0BD         	call	_strcmp	;wreg free
  8523  0101B6  0101               	movlb	1	; () banked
  8524  0101B8  5117               	movf	?_strcmp& (0+255),w,b
  8525  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8526  0101BC  A4D8               	btfss	status,2,c
  8527  0101BE  D022               	goto	l1198
  8528                           
  8529                           ; BSR set to: 1
  8530                           ;ring_buffer_LUT.c: 114: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8531  0101C0  0E00               	movlw	0
  8532  0101C2  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8533  0101C4  0E00               	movlw	0
  8534  0101C6  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8535  0101C8  0E02               	movlw	2
  8536  0101CA  EC74  F09B         	call	_terminal_textAttributes
  8537                           
  8538                           ;ring_buffer_LUT.c: 117: printf("Device silicon revision ID as stored in Flash is: %c%d\
      +                          n\r",
  8539                           ;ring_buffer_LUT.c: 118: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
  8540  0101CE  0ED4               	movlw	low STR_56
  8541  0101D0  0101               	movlb	1	; () banked
  8542  0101D2  6F7C               	movwf	printf@f& (0+255),b
  8543  0101D4  0EF7               	movlw	high STR_56
  8544  0101D6  6F7D               	movwf	(printf@f+1)& (0+255),b
  8545  0101D8  EC0B  F0BF         	call	_getMajorRevisionID	;wreg free
  8546  0101DC  0101               	movlb	1	; () banked
  8547  0101DE  6FBE               	movwf	??_ringBufferLUT& (0+255),b
  8548  0101E0  0E41               	movlw	65
  8549  0101E2  25BE               	addwf	??_ringBufferLUT& (0+255),w,b
  8550  0101E4  6F7E               	movwf	(?_printf+2)& (0+255),b
  8551  0101E6  6B7F               	clrf	(?_printf+3)& (0+255),b
  8552  0101E8  0E00               	movlw	0
  8553  0101EA  237F               	addwfc	(?_printf+3)& (0+255),f,b
  8554  0101EC  EC95  F0C0         	call	_getMinorRevisionID	;wreg free
  8555  0101F0  0101               	movlb	1	; () banked
  8556  0101F2  6FBF               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8557  0101F4  51BF               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  8558  0101F6  6F80               	movwf	(?_printf+4)& (0+255),b
  8559  0101F8  6B81               	clrf	(?_printf+5)& (0+255),b
  8560  0101FA  ECD0  F086         	call	_printf	;wreg free
  8561                           
  8562                           ;ring_buffer_LUT.c: 120: terminal_textAttributesReset();
  8563  0101FE  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8564                           
  8565                           ;ring_buffer_LUT.c: 122: }
  8566  010202  0012               	return	
  8567  010204                     l1198:
  8568                           
  8569                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "User IDs?"))) {
  8570  010204  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8571  010208  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8572  01020C  0E72               	movlw	low STR_57
  8573  01020E  0101               	movlb	1	; () banked
  8574  010210  6F19               	movwf	strcmp@s2& (0+255),b
  8575  010212  0EFF               	movlw	high STR_57
  8576  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8577  010216  EC54  F0BD         	call	_strcmp	;wreg free
  8578  01021A  0101               	movlb	1	; () banked
  8579  01021C  5117               	movf	?_strcmp& (0+255),w,b
  8580  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8581  010220  A4D8               	btfss	status,2,c
  8582  010222  D03E               	goto	l1200
  8583                           
  8584                           ; BSR set to: 1
  8585                           ;ring_buffer_LUT.c: 127: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8586  010224  0E00               	movlw	0
  8587  010226  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8588  010228  0E00               	movlw	0
  8589  01022A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8590  01022C  0E02               	movlw	2
  8591  01022E  EC74  F09B         	call	_terminal_textAttributes
  8592                           
  8593                           ;ring_buffer_LUT.c: 129: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8594  010232  0EA3               	movlw	low STR_58
  8595  010234  0101               	movlb	1	; () banked
  8596  010236  6F7C               	movwf	printf@f& (0+255),b
  8597  010238  0EF6               	movlw	high STR_58
  8598  01023A  6F7D               	movwf	(printf@f+1)& (0+255),b
  8599  01023C  ECD0  F086         	call	_printf	;wreg free
  8600                           
  8601                           ;ring_buffer_LUT.c: 132: for (int userID = 0; userID <= 7; userID++) {
  8602  010240  0E00               	movlw	0
  8603  010242  0103               	movlb	3	; () banked
  8604  010244  6FA2               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8605  010246  0E00               	movlw	0
  8606  010248  6FA1               	movwf	ringBufferLUT@userID& (0+255),b
  8607  01024A                     l13518:
  8608                           
  8609                           ; BSR set to: 3
  8610  01024A  BFA2               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8611  01024C  D006               	goto	l1201
  8612  01024E  51A2               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8613  010250  E124               	bnz	l13528
  8614  010252  0E08               	movlw	8
  8615  010254  5DA1               	subwf	ringBufferLUT@userID& (0+255),w,b
  8616  010256  B0D8               	btfsc	status,0,c
  8617  010258  D020               	goto	u16200
  8618  01025A                     l1201:
  8619                           
  8620                           ; BSR set to: 3
  8621                           ;ring_buffer_LUT.c: 134: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
  8622                           ;ring_buffer_LUT.c: 135: userID,
  8623                           ;ring_buffer_LUT.c: 136: (2 * userID),
  8624                           ;ring_buffer_LUT.c: 137: getUserID(userID));
  8625                           
  8626                           ; BSR set to: 3
  8627  01025A  0E45               	movlw	low STR_59
  8628  01025C  0101               	movlb	1	; () banked
  8629  01025E  6F7C               	movwf	printf@f& (0+255),b
  8630  010260  0EF8               	movlw	high STR_59
  8631  010262  6F7D               	movwf	(printf@f+1)& (0+255),b
  8632  010264  C3A1  F17E         	movff	ringBufferLUT@userID,?_printf+2
  8633  010268  C3A2  F17F         	movff	ringBufferLUT@userID+1,?_printf+3
  8634  01026C  90D8               	bcf	status,0,c
  8635  01026E  0103               	movlb	3	; () banked
  8636  010270  35A1               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8637  010272  0101               	movlb	1	; () banked
  8638  010274  6F80               	movwf	(?_printf+4)& (0+255),b
  8639  010276  0103               	movlb	3	; () banked
  8640  010278  35A2               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8641  01027A  0101               	movlb	1	; () banked
  8642  01027C  6F81               	movwf	(?_printf+5)& (0+255),b
  8643  01027E  0103               	movlb	3	; () banked
  8644  010280  51A1               	movf	ringBufferLUT@userID& (0+255),w,b
  8645  010282  ECA8  F0BE         	call	_getUserID
  8646  010286  C122  F182         	movff	?_getUserID,?_printf+6
  8647  01028A  C123  F183         	movff	?_getUserID+1,?_printf+7
  8648  01028E  ECD0  F086         	call	_printf	;wreg free
  8649  010292  0103               	movlb	3	; () banked
  8650  010294  4BA1               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8651  010296  2BA2               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8652  010298  D7D8               	goto	l13518
  8653  01029A                     u16200:
  8654  01029A                     l13528:
  8655                           
  8656                           ; BSR set to: 3
  8657                           ;ring_buffer_LUT.c: 139: }
  8658                           ;ring_buffer_LUT.c: 141: terminal_textAttributesReset();
  8659  01029A  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8660                           
  8661                           ;ring_buffer_LUT.c: 143: }
  8662  01029E  0012               	return	
  8663  0102A0                     l1200:
  8664                           
  8665                           ;ring_buffer_LUT.c: 146: else if((0 == strcmp(line, "ADC Error?"))) {
  8666  0102A0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8667  0102A4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8668  0102A8  0E67               	movlw	low STR_60
  8669  0102AA  0101               	movlb	1	; () banked
  8670  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
  8671  0102AE  0EFF               	movlw	high STR_60
  8672  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8673  0102B2  EC54  F0BD         	call	_strcmp	;wreg free
  8674  0102B6  0101               	movlb	1	; () banked
  8675  0102B8  5117               	movf	?_strcmp& (0+255),w,b
  8676  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8677  0102BC  A4D8               	btfss	status,2,c
  8678  0102BE  D0A4               	goto	l1204
  8679                           
  8680                           ; BSR set to: 1
  8681                           ;ring_buffer_LUT.c: 148: if (adc_error_flag) {
  8682  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8683  0102C2  D090               	goto	l1205
  8684                           
  8685                           ; BSR set to: 1
  8686                           ;ring_buffer_LUT.c: 150: terminal_textAttributes(RED, BLACK, NORMAL);
  8687  0102C4  0E00               	movlw	0
  8688  0102C6  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8689  0102C8  0E00               	movlw	0
  8690  0102CA  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8691  0102CC  0E01               	movlw	1
  8692  0102CE  EC74  F09B         	call	_terminal_textAttributes
  8693                           
  8694                           ;ring_buffer_LUT.c: 153: current_adc_channel = ADPCH;
  8695  0102D2  CF5F F27A          	movff	3935,_current_adc_channel	;volatile
  8696                           
  8697                           ;ring_buffer_LUT.c: 156: char channel_name[22];
  8698                           ;ring_buffer_LUT.c: 158: switch (current_adc_channel) {
  8699  0102D6  D060               	goto	l1206
  8700  0102D8                     
  8701                           ;ring_buffer_LUT.c: 161: strcpy(channel_name, "ISNS");
  8702  0102D8  0E80               	movlw	low ringBufferLUT@channel_name
  8703  0102DA  0101               	movlb	1	; () banked
  8704  0102DC  6F17               	movwf	strcpy@to& (0+255),b
  8705  0102DE  0E03               	movlw	high ringBufferLUT@channel_name
  8706  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8707  0102E2  0EA6               	movlw	low STR_61
  8708  0102E4  6F19               	movwf	strcpy@from& (0+255),b
  8709  0102E6  0EFF               	movlw	high STR_61
  8710  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8711  0102EA  EC63  F0BF         	call	_strcpy	;wreg free
  8712                           
  8713                           ;ring_buffer_LUT.c: 162: break;
  8714  0102EE  D06C               	goto	l1208
  8715  0102F0                     
  8716                           ;ring_buffer_LUT.c: 165: strcpy(channel_name, "POS12");
  8717  0102F0  0E80               	movlw	low ringBufferLUT@channel_name
  8718  0102F2  0101               	movlb	1	; () banked
  8719  0102F4  6F17               	movwf	strcpy@to& (0+255),b
  8720  0102F6  0E03               	movlw	high ringBufferLUT@channel_name
  8721  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8722  0102FA  0E94               	movlw	low STR_62
  8723  0102FC  6F19               	movwf	strcpy@from& (0+255),b
  8724  0102FE  0EFF               	movlw	high STR_62
  8725  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8726  010302  EC63  F0BF         	call	_strcpy	;wreg free
  8727                           
  8728                           ;ring_buffer_LUT.c: 166: break;
  8729  010306  D060               	goto	l1208
  8730  010308                     
  8731                           ;ring_buffer_LUT.c: 169: strcpy(channel_name, "POS3P3");
  8732  010308  0E80               	movlw	low ringBufferLUT@channel_name
  8733  01030A  0101               	movlb	1	; () banked
  8734  01030C  6F17               	movwf	strcpy@to& (0+255),b
  8735  01030E  0E03               	movlw	high ringBufferLUT@channel_name
  8736  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8737  010312  0E8D               	movlw	low STR_63
  8738  010314  6F19               	movwf	strcpy@from& (0+255),b
  8739  010316  0EFF               	movlw	high STR_63
  8740  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8741  01031A  EC63  F0BF         	call	_strcpy	;wreg free
  8742                           
  8743                           ;ring_buffer_LUT.c: 170: break;
  8744  01031E  D054               	goto	l1208
  8745  010320                     
  8746                           ;ring_buffer_LUT.c: 173: strcpy(channel_name, "Internal AVSS");
  8747  010320  0E80               	movlw	low ringBufferLUT@channel_name
  8748  010322  0101               	movlb	1	; () banked
  8749  010324  6F17               	movwf	strcpy@to& (0+255),b
  8750  010326  0E03               	movlw	high ringBufferLUT@channel_name
  8751  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8752  01032A  0EF4               	movlw	low STR_64
  8753  01032C  6F19               	movwf	strcpy@from& (0+255),b
  8754  01032E  0EFE               	movlw	high STR_64
  8755  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8756  010332  EC63  F0BF         	call	_strcpy	;wreg free
  8757                           
  8758                           ;ring_buffer_LUT.c: 174: break;
  8759  010336  D048               	goto	l1208
  8760  010338                     
  8761                           ;ring_buffer_LUT.c: 177: strcpy(channel_name, "Internal Temp");
  8762  010338  0E80               	movlw	low ringBufferLUT@channel_name
  8763  01033A  0101               	movlb	1	; () banked
  8764  01033C  6F17               	movwf	strcpy@to& (0+255),b
  8765  01033E  0E03               	movlw	high ringBufferLUT@channel_name
  8766  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8767  010342  0E02               	movlw	low STR_65
  8768  010344  6F19               	movwf	strcpy@from& (0+255),b
  8769  010346  0EFF               	movlw	high STR_65
  8770  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8771  01034A  EC63  F0BF         	call	_strcpy	;wreg free
  8772                           
  8773                           ;ring_buffer_LUT.c: 178: break;
  8774  01034E  D03C               	goto	l1208
  8775  010350                     
  8776                           ;ring_buffer_LUT.c: 181: strcpy(channel_name, "Internal DAC1");
  8777  010350  0E80               	movlw	low ringBufferLUT@channel_name
  8778  010352  0101               	movlb	1	; () banked
  8779  010354  6F17               	movwf	strcpy@to& (0+255),b
  8780  010356  0E03               	movlw	high ringBufferLUT@channel_name
  8781  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8782  01035A  0EBC               	movlw	low STR_66
  8783  01035C  6F19               	movwf	strcpy@from& (0+255),b
  8784  01035E  0EFE               	movlw	high STR_66
  8785  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8786  010362  EC63  F0BF         	call	_strcpy	;wreg free
  8787                           
  8788                           ;ring_buffer_LUT.c: 182: break;
  8789  010366  D030               	goto	l1208
  8790  010368                     
  8791                           ;ring_buffer_LUT.c: 185: strcpy(channel_name, "Internal FVR Buffer 1");
  8792  010368  0E80               	movlw	low ringBufferLUT@channel_name
  8793  01036A  0101               	movlb	1	; () banked
  8794  01036C  6F17               	movwf	strcpy@to& (0+255),b
  8795  01036E  0E03               	movlw	high ringBufferLUT@channel_name
  8796  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8797  010372  0E3D               	movlw	low STR_67
  8798  010374  6F19               	movwf	strcpy@from& (0+255),b
  8799  010376  0EFD               	movlw	high STR_67
  8800  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8801  01037A  EC63  F0BF         	call	_strcpy	;wreg free
  8802                           
  8803                           ;ring_buffer_LUT.c: 186: break;
  8804  01037E  D024               	goto	l1208
  8805  010380                     
  8806                           ;ring_buffer_LUT.c: 189: strcpy(channel_name, "Undefined");
  8807  010380  0E80               	movlw	low ringBufferLUT@channel_name
  8808  010382  0101               	movlb	1	; () banked
  8809  010384  6F17               	movwf	strcpy@to& (0+255),b
  8810  010386  0E03               	movlw	high ringBufferLUT@channel_name
  8811  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8812  01038A  0E7C               	movlw	low STR_68
  8813  01038C  6F19               	movwf	strcpy@from& (0+255),b
  8814  01038E  0EFF               	movlw	high STR_68
  8815  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8816  010392  EC63  F0BF         	call	_strcpy	;wreg free
  8817                           
  8818                           ;ring_buffer_LUT.c: 192: }
  8819                           
  8820                           ;ring_buffer_LUT.c: 190: break;
  8821  010396  D018               	goto	l1208
  8822  010398                     l1206:
  8823  010398  0102               	movlb	2	; () banked
  8824  01039A  517A               	movf	_current_adc_channel& (0+255),w,b
  8825                           
  8826                           ; Switch size 1, requested type "space"
  8827                           ; Number of cases is 7, Range of values is 0 to 63
  8828                           ; switch strategies available:
  8829                           ; Name         Instructions Cycles
  8830                           ; simple_byte           22    12 (average)
  8831                           ;	Chosen strategy is simple_byte
  8832  01039C  0A00               	xorlw	0	; case 0
  8833  01039E  B4D8               	btfsc	status,2,c
  8834  0103A0  D79B               	goto	l1207
  8835  0103A2  0A04               	xorlw	4	; case 4
  8836  0103A4  B4D8               	btfsc	status,2,c
  8837  0103A6  D7A4               	goto	l1209
  8838  0103A8  0A26               	xorlw	38	; case 34
  8839  0103AA  B4D8               	btfsc	status,2,c
  8840  0103AC  D7AD               	goto	l1210
  8841  0103AE  0A1E               	xorlw	30	; case 60
  8842  0103B0  B4D8               	btfsc	status,2,c
  8843  0103B2  D7B6               	goto	l1211
  8844  0103B4  0A01               	xorlw	1	; case 61
  8845  0103B6  B4D8               	btfsc	status,2,c
  8846  0103B8  D7BF               	goto	l1212
  8847  0103BA  0A03               	xorlw	3	; case 62
  8848  0103BC  B4D8               	btfsc	status,2,c
  8849  0103BE  D7C8               	goto	l1213
  8850  0103C0  0A01               	xorlw	1	; case 63
  8851  0103C2  B4D8               	btfsc	status,2,c
  8852  0103C4  D7D1               	goto	l1214
  8853  0103C6  D7DC               	goto	l1215
  8854  0103C8                     l1208:
  8855                           
  8856                           ;ring_buffer_LUT.c: 195: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8857                           
  8858                           ; BSR set to: 2
  8859  0103C8  0E19               	movlw	low STR_69
  8860  0103CA  0101               	movlb	1	; () banked
  8861  0103CC  6F7C               	movwf	printf@f& (0+255),b
  8862  0103CE  0EF9               	movlw	high STR_69
  8863  0103D0  6F7D               	movwf	(printf@f+1)& (0+255),b
  8864  0103D2  0E80               	movlw	low ringBufferLUT@channel_name
  8865  0103D4  6F7E               	movwf	(?_printf+2)& (0+255),b
  8866  0103D6  0E03               	movlw	high ringBufferLUT@channel_name
  8867  0103D8  6F7F               	movwf	(?_printf+3)& (0+255),b
  8868  0103DA  ECD0  F086         	call	_printf	;wreg free
  8869                           
  8870                           ;ring_buffer_LUT.c: 196: terminal_textAttributesReset();
  8871  0103DE  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8872                           
  8873                           ;ring_buffer_LUT.c: 198: }
  8874  0103E2  0012               	return	
  8875  0103E4                     l1205:
  8876                           
  8877                           ;ring_buffer_LUT.c: 200: else {
  8878                           ;ring_buffer_LUT.c: 202: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8879  0103E4  0E00               	movlw	0
  8880  0103E6  0101               	movlb	1	; () banked
  8881  0103E8  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8882  0103EA  0E00               	movlw	0
  8883  0103EC  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8884  0103EE  0E02               	movlw	2
  8885  0103F0  EC74  F09B         	call	_terminal_textAttributes
  8886                           
  8887                           ;ring_buffer_LUT.c: 203: printf("No ADC Error detected\n\r");
  8888  0103F4  0E0F               	movlw	low STR_70
  8889  0103F6  0101               	movlb	1	; () banked
  8890  0103F8  6F7C               	movwf	printf@f& (0+255),b
  8891  0103FA  0EFD               	movlw	high STR_70
  8892  0103FC  6F7D               	movwf	(printf@f+1)& (0+255),b
  8893  0103FE  ECD0  F086         	call	_printf	;wreg free
  8894                           
  8895                           ;ring_buffer_LUT.c: 204: terminal_textAttributesReset();
  8896  010402  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8897                           
  8898                           ;ring_buffer_LUT.c: 206: }
  8899                           ;ring_buffer_LUT.c: 208: }
  8900  010406  0012               	return	
  8901  010408                     l1204:
  8902                           
  8903                           ;ring_buffer_LUT.c: 211: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8904  010408  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8905  01040C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8906  010410  0E70               	movlw	low STR_71
  8907  010412  0101               	movlb	1	; () banked
  8908  010414  6F19               	movwf	strcmp@s2& (0+255),b
  8909  010416  0EFE               	movlw	high STR_71
  8910  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8911  01041A  EC54  F0BD         	call	_strcmp	;wreg free
  8912  01041E  0101               	movlb	1	; () banked
  8913  010420  5117               	movf	?_strcmp& (0+255),w,b
  8914  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8915  010424  A4D8               	btfss	status,2,c
  8916  010426  D018               	goto	l1218
  8917                           
  8918                           ; BSR set to: 1
  8919                           ;ring_buffer_LUT.c: 213: LATFbits.LATF3 = 0;
  8920  010428  967E               	bcf	3966,3,c	;volatile
  8921                           
  8922                           ;ring_buffer_LUT.c: 214: adc_error_flag = 0;
  8923  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8924                           
  8925                           ;ring_buffer_LUT.c: 216: PIE5bits.TMR7IE = 1;
  8926  01042C  010E               	movlb	14	; () banked
  8927  01042E  8D2E               	bsf	46,6,b	;volatile
  8928                           
  8929                           ; BSR set to: 14
  8930                           ;ring_buffer_LUT.c: 217: TMR7_StopTimer();
  8931  010430  ECE9  F0C1         	call	_TMR7_StopTimer	;wreg free
  8932                           
  8933                           ;ring_buffer_LUT.c: 219: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8934  010434  0E00               	movlw	0
  8935  010436  0101               	movlb	1	; () banked
  8936  010438  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8937  01043A  0E00               	movlw	0
  8938  01043C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8939  01043E  0E02               	movlw	2
  8940  010440  EC74  F09B         	call	_terminal_textAttributes
  8941                           
  8942                           ;ring_buffer_LUT.c: 220: printf("Clearing ADC Error\n\r");
  8943  010444  0E68               	movlw	low STR_72
  8944  010446  0101               	movlb	1	; () banked
  8945  010448  6F7C               	movwf	printf@f& (0+255),b
  8946  01044A  0EFD               	movlw	high STR_72
  8947  01044C  6F7D               	movwf	(printf@f+1)& (0+255),b
  8948  01044E  ECD0  F086         	call	_printf	;wreg free
  8949                           
  8950                           ;ring_buffer_LUT.c: 221: terminal_textAttributesReset();
  8951  010452  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8952                           
  8953                           ;ring_buffer_LUT.c: 223: }
  8954  010456  0012               	return	
  8955  010458                     l1218:
  8956                           
  8957                           ;ring_buffer_LUT.c: 226: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
  8958  010458  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  8959  01045C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8960  010460  0EFF               	movlw	low STR_73
  8961  010462  0101               	movlb	1	; () banked
  8962  010464  6F19               	movwf	strcmp@s2& (0+255),b
  8963  010466  0EFD               	movlw	high STR_73
  8964  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8965  01046A  EC54  F0BD         	call	_strcmp	;wreg free
  8966  01046E  0101               	movlb	1	; () banked
  8967  010470  5117               	movf	?_strcmp& (0+255),w,b
  8968  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8969  010474  A4D8               	btfss	status,2,c
  8970  010476  D026               	goto	l1220
  8971                           
  8972                           ; BSR set to: 1
  8973                           ;ring_buffer_LUT.c: 229: if (VCC_overvoltage_flag == 1) {
  8974  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8975  01047A  D012               	goto	l1221
  8976                           
  8977                           ; BSR set to: 1
  8978                           ;ring_buffer_LUT.c: 231: terminal_textAttributes(RED, BLACK, NORMAL);
  8979  01047C  0E00               	movlw	0
  8980  01047E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  8981  010480  0E00               	movlw	0
  8982  010482  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8983  010484  0E01               	movlw	1
  8984  010486  EC74  F09B         	call	_terminal_textAttributes
  8985                           
  8986                           ;ring_buffer_LUT.c: 232: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
  8987  01048A  0E61               	movlw	low STR_74
  8988  01048C  0101               	movlb	1	; () banked
  8989  01048E  6F7C               	movwf	printf@f& (0+255),b
  8990  010490  0EF6               	movlw	high STR_74
  8991  010492  6F7D               	movwf	(printf@f+1)& (0+255),b
  8992  010494  ECD0  F086         	call	_printf	;wreg free
  8993                           
  8994                           ;ring_buffer_LUT.c: 233: terminal_textAttributesReset();
  8995  010498  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  8996                           
  8997                           ;ring_buffer_LUT.c: 236: VCC_overvoltage_flag = 0;
  8998  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
  8999                           
  9000                           ;ring_buffer_LUT.c: 238: }
  9001  01049E  0012               	return	
  9002  0104A0                     l1221:
  9003                           
  9004                           ;ring_buffer_LUT.c: 240: else {
  9005                           ;ring_buffer_LUT.c: 242: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9006  0104A0  0E00               	movlw	0
  9007  0104A2  0101               	movlb	1	; () banked
  9008  0104A4  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9009  0104A6  0E00               	movlw	0
  9010  0104A8  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9011  0104AA  0E02               	movlw	2
  9012  0104AC  EC74  F09B         	call	_terminal_textAttributes
  9013                           
  9014                           ;ring_buffer_LUT.c: 243: printf("VCC Overvoltage condition has not occurred\n\r");
  9015  0104B0  0ED4               	movlw	low STR_75
  9016  0104B2  0101               	movlb	1	; () banked
  9017  0104B4  6F7C               	movwf	printf@f& (0+255),b
  9018  0104B6  0EF9               	movlw	high STR_75
  9019  0104B8  6F7D               	movwf	(printf@f+1)& (0+255),b
  9020  0104BA  ECD0  F086         	call	_printf	;wreg free
  9021                           
  9022                           ;ring_buffer_LUT.c: 244: terminal_textAttributesReset();
  9023  0104BE  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9024                           
  9025                           ;ring_buffer_LUT.c: 246: }
  9026                           ;ring_buffer_LUT.c: 248: }
  9027  0104C2  0012               	return	
  9028  0104C4                     l1220:
  9029                           
  9030                           ;ring_buffer_LUT.c: 251: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  9031  0104C4  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9032  0104C8  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9033  0104CC  0E30               	movlw	low STR_76
  9034  0104CE  0101               	movlb	1	; () banked
  9035  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
  9036  0104D2  0EFE               	movlw	high STR_76
  9037  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9038  0104D6  EC54  F0BD         	call	_strcmp	;wreg free
  9039  0104DA  0101               	movlb	1	; () banked
  9040  0104DC  5117               	movf	?_strcmp& (0+255),w,b
  9041  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9042  0104E0  A4D8               	btfss	status,2,c
  9043  0104E2  D019               	goto	l1224
  9044                           
  9045                           ; BSR set to: 1
  9046                           ;ring_buffer_LUT.c: 253: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9047  0104E4  0E00               	movlw	0
  9048  0104E6  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9049  0104E8  0E00               	movlw	0
  9050  0104EA  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9051  0104EC  0E06               	movlw	6
  9052  0104EE  EC74  F09B         	call	_terminal_textAttributes
  9053                           
  9054                           ;ring_buffer_LUT.c: 254: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
  9055  0104F2  0E1B               	movlw	low STR_77
  9056  0104F4  0101               	movlb	1	; () banked
  9057  0104F6  6F7C               	movwf	printf@f& (0+255),b
  9058  0104F8  0EFB               	movlw	high STR_77
  9059  0104FA  6F7D               	movwf	(printf@f+1)& (0+255),b
  9060  0104FC  C0F6  F17E         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  9061  010500  C0F7  F17F         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  9062  010504  C0F8  F180         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  9063  010508  C0F9  F181         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
  9064  01050C  ECD0  F086         	call	_printf	;wreg free
  9065                           
  9066                           ;ring_buffer_LUT.c: 255: terminal_textAttributesReset();
  9067  010510  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9068                           
  9069                           ;ring_buffer_LUT.c: 257: }
  9070  010514  0012               	return	
  9071  010516                     l1224:
  9072                           
  9073                           ;ring_buffer_LUT.c: 260: else if((0 == strcmp(line, "Measure POS12?"))) {
  9074  010516  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9075  01051A  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9076  01051E  0E8F               	movlw	low STR_78
  9077  010520  0101               	movlb	1	; () banked
  9078  010522  6F19               	movwf	strcmp@s2& (0+255),b
  9079  010524  0EFE               	movlw	high STR_78
  9080  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9081  010528  EC54  F0BD         	call	_strcmp	;wreg free
  9082  01052C  0101               	movlb	1	; () banked
  9083  01052E  5117               	movf	?_strcmp& (0+255),w,b
  9084  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9085  010532  A4D8               	btfss	status,2,c
  9086  010534  D019               	goto	l1226
  9087                           
  9088                           ; BSR set to: 1
  9089                           ;ring_buffer_LUT.c: 262: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9090  010536  0E00               	movlw	0
  9091  010538  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9092  01053A  0E00               	movlw	0
  9093  01053C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9094  01053E  0E06               	movlw	6
  9095  010540  EC74  F09B         	call	_terminal_textAttributes
  9096                           
  9097                           ;ring_buffer_LUT.c: 263: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
  9098  010544  0E89               	movlw	low STR_79
  9099  010546  0101               	movlb	1	; () banked
  9100  010548  6F7C               	movwf	printf@f& (0+255),b
  9101  01054A  0EFB               	movlw	high STR_79
  9102  01054C  6F7D               	movwf	(printf@f+1)& (0+255),b
  9103  01054E  C258  F17E         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  9104  010552  C259  F17F         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  9105  010556  C25A  F180         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  9106  01055A  C25B  F181         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
  9107  01055E  ECD0  F086         	call	_printf	;wreg free
  9108                           
  9109                           ;ring_buffer_LUT.c: 264: terminal_textAttributesReset();
  9110  010562  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9111                           
  9112                           ;ring_buffer_LUT.c: 266: }
  9113  010566  0012               	return	
  9114  010568                     l1226:
  9115                           
  9116                           ;ring_buffer_LUT.c: 269: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  9117  010568  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9118  01056C  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9119  010570  0EBA               	movlw	low STR_80
  9120  010572  0101               	movlb	1	; () banked
  9121  010574  6F19               	movwf	strcmp@s2& (0+255),b
  9122  010576  0EFD               	movlw	high STR_80
  9123  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9124  01057A  EC54  F0BD         	call	_strcmp	;wreg free
  9125  01057E  0101               	movlb	1	; () banked
  9126  010580  5117               	movf	?_strcmp& (0+255),w,b
  9127  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9128  010584  A4D8               	btfss	status,2,c
  9129  010586  D019               	goto	l1228
  9130                           
  9131                           ; BSR set to: 1
  9132                           ;ring_buffer_LUT.c: 271: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9133  010588  0E00               	movlw	0
  9134  01058A  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9135  01058C  0E00               	movlw	0
  9136  01058E  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9137  010590  0E06               	movlw	6
  9138  010592  EC74  F09B         	call	_terminal_textAttributes
  9139                           
  9140                           ;ring_buffer_LUT.c: 272: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
  9141  010596  0E65               	movlw	low STR_81
  9142  010598  0101               	movlb	1	; () banked
  9143  01059A  6F7C               	movwf	printf@f& (0+255),b
  9144  01059C  0EFB               	movlw	high STR_81
  9145  01059E  6F7D               	movwf	(printf@f+1)& (0+255),b
  9146  0105A0  C254  F17E         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  9147  0105A4  C255  F17F         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  9148  0105A8  C256  F180         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  9149  0105AC  C257  F181         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
  9150  0105B0  ECD0  F086         	call	_printf	;wreg free
  9151                           
  9152                           ;ring_buffer_LUT.c: 273: terminal_textAttributesReset();
  9153  0105B4  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9154                           
  9155                           ;ring_buffer_LUT.c: 277: }
  9156  0105B8  0012               	return	
  9157  0105BA                     l1228:
  9158                           
  9159                           ;ring_buffer_LUT.c: 280: else if((0 == strcmp(line, "Measure FVR?"))) {
  9160  0105BA  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9161  0105BE  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9162  0105C2  0E2A               	movlw	low STR_82
  9163  0105C4  0101               	movlb	1	; () banked
  9164  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
  9165  0105C8  0EFF               	movlw	high STR_82
  9166  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9167  0105CC  EC54  F0BD         	call	_strcmp	;wreg free
  9168  0105D0  0101               	movlb	1	; () banked
  9169  0105D2  5117               	movf	?_strcmp& (0+255),w,b
  9170  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9171  0105D6  A4D8               	btfss	status,2,c
  9172  0105D8  D019               	goto	l1230
  9173                           
  9174                           ; BSR set to: 1
  9175                           ;ring_buffer_LUT.c: 282: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9176  0105DA  0E00               	movlw	0
  9177  0105DC  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9178  0105DE  0E00               	movlw	0
  9179  0105E0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9180  0105E2  0E06               	movlw	6
  9181  0105E4  EC74  F09B         	call	_terminal_textAttributes
  9182                           
  9183                           ;ring_buffer_LUT.c: 283: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
  9184  0105E8  0E9A               	movlw	low STR_83
  9185  0105EA  0101               	movlb	1	; () banked
  9186  0105EC  6F7C               	movwf	printf@f& (0+255),b
  9187  0105EE  0EF7               	movlw	high STR_83
  9188  0105F0  6F7D               	movwf	(printf@f+1)& (0+255),b
  9189  0105F2  C1DE  F17E         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  9190  0105F6  C1DF  F17F         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  9191  0105FA  C1E0  F180         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  9192  0105FE  C1E1  F181         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
  9193  010602  ECD0  F086         	call	_printf	;wreg free
  9194                           
  9195                           ;ring_buffer_LUT.c: 284: terminal_textAttributesReset();
  9196  010606  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9197                           
  9198                           ;ring_buffer_LUT.c: 286: }
  9199  01060A  0012               	return	
  9200  01060C                     l1230:
  9201                           
  9202                           ;ring_buffer_LUT.c: 289: else if((0 == strcmp(line, "Measure AVSS?"))) {
  9203  01060C  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9204  010610  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9205  010614  0ECA               	movlw	low STR_84
  9206  010616  0101               	movlb	1	; () banked
  9207  010618  6F19               	movwf	strcmp@s2& (0+255),b
  9208  01061A  0EFE               	movlw	high STR_84
  9209  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9210  01061E  EC54  F0BD         	call	_strcmp	;wreg free
  9211  010622  0101               	movlb	1	; () banked
  9212  010624  5117               	movf	?_strcmp& (0+255),w,b
  9213  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9214  010628  A4D8               	btfss	status,2,c
  9215  01062A  D019               	goto	l1232
  9216                           
  9217                           ; BSR set to: 1
  9218                           ;ring_buffer_LUT.c: 291: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9219  01062C  0E00               	movlw	0
  9220  01062E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9221  010630  0E00               	movlw	0
  9222  010632  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9223  010634  0E06               	movlw	6
  9224  010636  EC74  F09B         	call	_terminal_textAttributes
  9225                           
  9226                           ;ring_buffer_LUT.c: 292: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  9227  01063A  0EF6               	movlw	low STR_85
  9228  01063C  0101               	movlb	1	; () banked
  9229  01063E  6F7C               	movwf	printf@f& (0+255),b
  9230  010640  0EFA               	movlw	high STR_85
  9231  010642  6F7D               	movwf	(printf@f+1)& (0+255),b
  9232  010644  C260  F17E         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  9233  010648  C261  F17F         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  9234  01064C  C262  F180         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  9235  010650  C263  F181         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
  9236  010654  ECD0  F086         	call	_printf	;wreg free
  9237                           
  9238                           ;ring_buffer_LUT.c: 293: terminal_textAttributesReset();
  9239  010658  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9240                           
  9241                           ;ring_buffer_LUT.c: 295: }
  9242  01065C  0012               	return	
  9243  01065E                     l1232:
  9244                           
  9245                           ;ring_buffer_LUT.c: 298: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  9246  01065E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9247  010662  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9248  010666  0EC3               	movlw	low STR_86
  9249  010668  0101               	movlb	1	; () banked
  9250  01066A  6F19               	movwf	strcmp@s2& (0+255),b
  9251  01066C  0EFC               	movlw	high STR_86
  9252  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9253  010670  EC54  F0BD         	call	_strcmp	;wreg free
  9254  010674  0101               	movlb	1	; () banked
  9255  010676  5117               	movf	?_strcmp& (0+255),w,b
  9256  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9257  01067A  A4D8               	btfss	status,2,c
  9258  01067C  D019               	goto	l1234
  9259                           
  9260                           ; BSR set to: 1
  9261                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9262  01067E  0E00               	movlw	0
  9263  010680  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9264  010682  0E00               	movlw	0
  9265  010684  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9266  010686  0E06               	movlw	6
  9267  010688  EC74  F09B         	call	_terminal_textAttributes
  9268                           
  9269                           ;ring_buffer_LUT.c: 301: printf("Measured Current is %.3f Amps\n\r", Imeas);
  9270  01068C  0E12               	movlw	low STR_87
  9271  01068E  0101               	movlb	1	; () banked
  9272  010690  6F7C               	movwf	printf@f& (0+255),b
  9273  010692  0EFC               	movlw	high STR_87
  9274  010694  6F7D               	movwf	(printf@f+1)& (0+255),b
  9275  010696  C1CF  F17E         	movff	_Imeas,?_printf+2	;volatile
  9276  01069A  C1D0  F17F         	movff	_Imeas+1,?_printf+3	;volatile
  9277  01069E  C1D1  F180         	movff	_Imeas+2,?_printf+4	;volatile
  9278  0106A2  C1D2  F181         	movff	_Imeas+3,?_printf+5	;volatile
  9279  0106A6  ECD0  F086         	call	_printf	;wreg free
  9280                           
  9281                           ;ring_buffer_LUT.c: 302: terminal_textAttributesReset();
  9282  0106AA  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9283                           
  9284                           ;ring_buffer_LUT.c: 304: }
  9285  0106AE  0012               	return	
  9286  0106B0                     l1234:
  9287                           
  9288                           ;ring_buffer_LUT.c: 307: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  9289  0106B0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9290  0106B4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9291  0106B8  0E92               	movlw	low STR_88
  9292  0106BA  0101               	movlb	1	; () banked
  9293  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
  9294  0106BE  0EFD               	movlw	high STR_88
  9295  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9296  0106C2  EC54  F0BD         	call	_strcmp	;wreg free
  9297  0106C6  0101               	movlb	1	; () banked
  9298  0106C8  5117               	movf	?_strcmp& (0+255),w,b
  9299  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9300  0106CC  A4D8               	btfss	status,2,c
  9301  0106CE  D019               	goto	l1236
  9302                           
  9303                           ; BSR set to: 1
  9304                           ;ring_buffer_LUT.c: 309: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9305  0106D0  0E00               	movlw	0
  9306  0106D2  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9307  0106D4  0E00               	movlw	0
  9308  0106D6  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9309  0106D8  0E06               	movlw	6
  9310  0106DA  EC74  F09B         	call	_terminal_textAttributes
  9311                           
  9312                           ;ring_buffer_LUT.c: 310: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  9313  0106DE  0EAD               	movlw	low STR_89
  9314  0106E0  0101               	movlb	1	; () banked
  9315  0106E2  6F7C               	movwf	printf@f& (0+255),b
  9316  0106E4  0EFB               	movlw	high STR_89
  9317  0106E6  6F7D               	movwf	(printf@f+1)& (0+255),b
  9318  0106E8  C1CB  F17E         	movff	_Irms,?_printf+2	;volatile
  9319  0106EC  C1CC  F17F         	movff	_Irms+1,?_printf+3	;volatile
  9320  0106F0  C1CD  F180         	movff	_Irms+2,?_printf+4	;volatile
  9321  0106F4  C1CE  F181         	movff	_Irms+3,?_printf+5	;volatile
  9322  0106F8  ECD0  F086         	call	_printf	;wreg free
  9323                           
  9324                           ;ring_buffer_LUT.c: 311: terminal_textAttributesReset();
  9325  0106FC  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9326                           
  9327                           ;ring_buffer_LUT.c: 313: }
  9328  010700  0012               	return	
  9329  010702                     l1236:
  9330                           
  9331                           ;ring_buffer_LUT.c: 316: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  9332  010702  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9333  010706  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9334  01070A  0E7D               	movlw	low STR_90
  9335  01070C  0101               	movlb	1	; () banked
  9336  01070E  6F19               	movwf	strcmp@s2& (0+255),b
  9337  010710  0EFD               	movlw	high STR_90
  9338  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9339  010714  EC54  F0BD         	call	_strcmp	;wreg free
  9340  010718  0101               	movlb	1	; () banked
  9341  01071A  5117               	movf	?_strcmp& (0+255),w,b
  9342  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9343  01071E  A4D8               	btfss	status,2,c
  9344  010720  D019               	goto	l1238
  9345                           
  9346                           ; BSR set to: 1
  9347                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9348  010722  0E00               	movlw	0
  9349  010724  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9350  010726  0E00               	movlw	0
  9351  010728  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9352  01072A  0E06               	movlw	6
  9353  01072C  EC74  F09B         	call	_terminal_textAttributes
  9354                           
  9355                           ;ring_buffer_LUT.c: 319: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  9356  010730  0ECF               	movlw	low STR_91
  9357  010732  0101               	movlb	1	; () banked
  9358  010734  6F7C               	movwf	printf@f& (0+255),b
  9359  010736  0EFB               	movlw	high STR_91
  9360  010738  6F7D               	movwf	(printf@f+1)& (0+255),b
  9361  01073A  C24C  F17E         	movff	_Vrms,?_printf+2	;volatile
  9362  01073E  C24D  F17F         	movff	_Vrms+1,?_printf+3	;volatile
  9363  010742  C24E  F180         	movff	_Vrms+2,?_printf+4	;volatile
  9364  010746  C24F  F181         	movff	_Vrms+3,?_printf+5	;volatile
  9365  01074A  ECD0  F086         	call	_printf	;wreg free
  9366                           
  9367                           ;ring_buffer_LUT.c: 320: terminal_textAttributesReset();
  9368  01074E  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9369                           
  9370                           ;ring_buffer_LUT.c: 322: }
  9371  010752  0012               	return	
  9372  010754                     l1238:
  9373                           
  9374                           ;ring_buffer_LUT.c: 325: else if ((0 == strcmp(line, "Measure Power?"))) {
  9375  010754  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9376  010758  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9377  01075C  0E9E               	movlw	low STR_92
  9378  01075E  0101               	movlb	1	; () banked
  9379  010760  6F19               	movwf	strcmp@s2& (0+255),b
  9380  010762  0EFE               	movlw	high STR_92
  9381  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9382  010766  EC54  F0BD         	call	_strcmp	;wreg free
  9383  01076A  0101               	movlb	1	; () banked
  9384  01076C  5117               	movf	?_strcmp& (0+255),w,b
  9385  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9386  010770  A4D8               	btfss	status,2,c
  9387  010772  D019               	goto	l1240
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;ring_buffer_LUT.c: 327: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9391  010774  0E00               	movlw	0
  9392  010776  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9393  010778  0E00               	movlw	0
  9394  01077A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9395  01077C  0E06               	movlw	6
  9396  01077E  EC74  F09B         	call	_terminal_textAttributes
  9397                           
  9398                           ;ring_buffer_LUT.c: 328: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  9399  010782  0E0D               	movlw	low STR_93
  9400  010784  0101               	movlb	1	; () banked
  9401  010786  6F7C               	movwf	printf@f& (0+255),b
  9402  010788  0EF8               	movlw	high STR_93
  9403  01078A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9404  01078C  C248  F17E         	movff	_Avg_Power,?_printf+2	;volatile
  9405  010790  C249  F17F         	movff	_Avg_Power+1,?_printf+3	;volatile
  9406  010794  C24A  F180         	movff	_Avg_Power+2,?_printf+4	;volatile
  9407  010798  C24B  F181         	movff	_Avg_Power+3,?_printf+5	;volatile
  9408  01079C  ECD0  F086         	call	_printf	;wreg free
  9409                           
  9410                           ;ring_buffer_LUT.c: 329: terminal_textAttributesReset();
  9411  0107A0  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9412                           
  9413                           ;ring_buffer_LUT.c: 331: }
  9414  0107A4  0012               	return	
  9415  0107A6                     l1240:
  9416                           
  9417                           ;ring_buffer_LUT.c: 334: else if ((0 == strcmp(line, "Enable Dimming"))) {
  9418  0107A6  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9419  0107AA  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9420  0107AE  0EAD               	movlw	low STR_94
  9421  0107B0  0101               	movlb	1	; () banked
  9422  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
  9423  0107B4  0EFE               	movlw	high STR_94
  9424  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9425  0107B8  EC54  F0BD         	call	_strcmp	;wreg free
  9426  0107BC  0101               	movlb	1	; () banked
  9427  0107BE  5117               	movf	?_strcmp& (0+255),w,b
  9428  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9429  0107C2  A4D8               	btfss	status,2,c
  9430  0107C4  D012               	goto	l1242
  9431                           
  9432                           ; BSR set to: 1
  9433                           ;ring_buffer_LUT.c: 337: LATGbits.LATG0 = 0;
  9434  0107C6  907F               	bcf	3967,0,c	;volatile
  9435                           
  9436                           ; BSR set to: 1
  9437                           ;ring_buffer_LUT.c: 339: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9438  0107C8  0E00               	movlw	0
  9439  0107CA  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9440  0107CC  0E00               	movlw	0
  9441  0107CE  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9442  0107D0  0E02               	movlw	2
  9443  0107D2  EC74  F09B         	call	_terminal_textAttributes
  9444                           
  9445                           ;ring_buffer_LUT.c: 340: printf("TRIAC output dimming has been enabled\n\r");
  9446  0107D6  0EA7               	movlw	low STR_95
  9447  0107D8  0101               	movlb	1	; () banked
  9448  0107DA  6F7C               	movwf	printf@f& (0+255),b
  9449  0107DC  0EFA               	movlw	high STR_95
  9450  0107DE  6F7D               	movwf	(printf@f+1)& (0+255),b
  9451  0107E0  ECD0  F086         	call	_printf	;wreg free
  9452                           
  9453                           ;ring_buffer_LUT.c: 341: terminal_textAttributesReset();
  9454  0107E4  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9455                           
  9456                           ;ring_buffer_LUT.c: 343: }
  9457  0107E8  0012               	return	
  9458  0107EA                     l1242:
  9459                           
  9460                           ;ring_buffer_LUT.c: 346: else if ((0 == strcmp(line, "Disable Dimming"))) {
  9461  0107EA  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9462  0107EE  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9463  0107F2  0E60               	movlw	low STR_96
  9464  0107F4  0101               	movlb	1	; () banked
  9465  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
  9466  0107F8  0EFE               	movlw	high STR_96
  9467  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9468  0107FC  EC54  F0BD         	call	_strcmp	;wreg free
  9469  010800  0101               	movlb	1	; () banked
  9470  010802  5117               	movf	?_strcmp& (0+255),w,b
  9471  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9472  010806  A4D8               	btfss	status,2,c
  9473  010808  D012               	goto	l1244
  9474                           
  9475                           ; BSR set to: 1
  9476                           ;ring_buffer_LUT.c: 349: LATGbits.LATG0 = 1;
  9477  01080A  807F               	bsf	3967,0,c	;volatile
  9478                           
  9479                           ; BSR set to: 1
  9480                           ;ring_buffer_LUT.c: 351: terminal_textAttributes(RED, BLACK, NORMAL);
  9481  01080C  0E00               	movlw	0
  9482  01080E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9483  010810  0E00               	movlw	0
  9484  010812  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9485  010814  0E01               	movlw	1
  9486  010816  EC74  F09B         	call	_terminal_textAttributes
  9487                           
  9488                           ;ring_buffer_LUT.c: 352: printf("TRIAC output dimming has been disabled\n\r");
  9489  01081A  0E7E               	movlw	low STR_97
  9490  01081C  0101               	movlb	1	; () banked
  9491  01081E  6F7C               	movwf	printf@f& (0+255),b
  9492  010820  0EFA               	movlw	high STR_97
  9493  010822  6F7D               	movwf	(printf@f+1)& (0+255),b
  9494  010824  ECD0  F086         	call	_printf	;wreg free
  9495                           
  9496                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
  9497  010828  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9498                           
  9499                           ;ring_buffer_LUT.c: 355: }
  9500  01082C  0012               	return	
  9501  01082E                     l1244:
  9502                           
  9503                           ;ring_buffer_LUT.c: 358: else if ((0 == strcmp(line, "Enable Load"))) {
  9504  01082E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9505  010832  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9506  010836  0E50               	movlw	low STR_98
  9507  010838  0101               	movlb	1	; () banked
  9508  01083A  6F19               	movwf	strcmp@s2& (0+255),b
  9509  01083C  0EFF               	movlw	high STR_98
  9510  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9511  010840  EC54  F0BD         	call	_strcmp	;wreg free
  9512  010844  0101               	movlb	1	; () banked
  9513  010846  5117               	movf	?_strcmp& (0+255),w,b
  9514  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9515  01084A  A4D8               	btfss	status,2,c
  9516  01084C  D014               	goto	l1246
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;ring_buffer_LUT.c: 360: LATGbits.LATG0 = 1;
  9520  01084E  807F               	bsf	3967,0,c	;volatile
  9521                           
  9522                           ;ring_buffer_LUT.c: 361: LATGbits.LATG1 = 0;
  9523  010850  927F               	bcf	3967,1,c	;volatile
  9524                           
  9525                           ;ring_buffer_LUT.c: 362: load_enable = 1;
  9526  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9527                           
  9528                           ; BSR set to: 1
  9529                           ;ring_buffer_LUT.c: 364: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9530  010854  0E00               	movlw	0
  9531  010856  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9532  010858  0E00               	movlw	0
  9533  01085A  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9534  01085C  0E02               	movlw	2
  9535  01085E  EC74  F09B         	call	_terminal_textAttributes
  9536                           
  9537                           ;ring_buffer_LUT.c: 365: printf("Load has been enabled, dimming disabled\n\r");
  9538  010862  0E01               	movlw	low STR_99
  9539  010864  0101               	movlb	1	; () banked
  9540  010866  6F7C               	movwf	printf@f& (0+255),b
  9541  010868  0EFA               	movlw	high STR_99
  9542  01086A  6F7D               	movwf	(printf@f+1)& (0+255),b
  9543  01086C  ECD0  F086         	call	_printf	;wreg free
  9544                           
  9545                           ;ring_buffer_LUT.c: 366: terminal_textAttributesReset();
  9546  010870  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9547                           
  9548                           ;ring_buffer_LUT.c: 368: }
  9549  010874  0012               	return	
  9550  010876                     l1246:
  9551                           
  9552                           ;ring_buffer_LUT.c: 371: else if ((0 == strcmp(line, "Load Enabled?"))) {
  9553  010876  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9554  01087A  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9555  01087E  0ED8               	movlw	low STR_100
  9556  010880  0101               	movlb	1	; () banked
  9557  010882  6F19               	movwf	strcmp@s2& (0+255),b
  9558  010884  0EFE               	movlw	high STR_100
  9559  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9560  010888  EC54  F0BD         	call	_strcmp	;wreg free
  9561  01088C  0101               	movlb	1	; () banked
  9562  01088E  5117               	movf	?_strcmp& (0+255),w,b
  9563  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9564  010892  A4D8               	btfss	status,2,c
  9565  010894  D025               	goto	l1248
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;ring_buffer_LUT.c: 373: if (load_enable == 1) {
  9569  010896  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9570  010898  D011               	goto	l1249
  9571                           
  9572                           ; BSR set to: 1
  9573                           ;ring_buffer_LUT.c: 375: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9574  01089A  0E00               	movlw	0
  9575  01089C  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9576  01089E  0E00               	movlw	0
  9577  0108A0  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9578  0108A2  0E02               	movlw	2
  9579  0108A4  EC74  F09B         	call	_terminal_textAttributes
  9580                           
  9581                           ;ring_buffer_LUT.c: 376: printf("Load is currently enabled\n\r");
  9582  0108A8  0E8C               	movlw	low STR_101
  9583  0108AA  0101               	movlb	1	; () banked
  9584  0108AC  6F7C               	movwf	printf@f& (0+255),b
  9585  0108AE  0EFC               	movlw	high STR_101
  9586  0108B0  6F7D               	movwf	(printf@f+1)& (0+255),b
  9587  0108B2  ECD0  F086         	call	_printf	;wreg free
  9588                           
  9589                           ;ring_buffer_LUT.c: 377: terminal_textAttributesReset();
  9590  0108B6  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9591                           
  9592                           ;ring_buffer_LUT.c: 379: }
  9593  0108BA  0012               	return	
  9594  0108BC                     l1249:
  9595                           
  9596                           ;ring_buffer_LUT.c: 381: else {
  9597                           ;ring_buffer_LUT.c: 383: terminal_textAttributes(RED, BLACK, NORMAL);
  9598  0108BC  0E00               	movlw	0
  9599  0108BE  0101               	movlb	1	; () banked
  9600  0108C0  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9601  0108C2  0E00               	movlw	0
  9602  0108C4  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9603  0108C6  0E01               	movlw	1
  9604  0108C8  EC74  F09B         	call	_terminal_textAttributes
  9605                           
  9606                           ;ring_buffer_LUT.c: 384: printf("Load is currently disabled\n\r");
  9607  0108CC  0E6F               	movlw	low STR_102
  9608  0108CE  0101               	movlb	1	; () banked
  9609  0108D0  6F7C               	movwf	printf@f& (0+255),b
  9610  0108D2  0EFC               	movlw	high STR_102
  9611  0108D4  6F7D               	movwf	(printf@f+1)& (0+255),b
  9612  0108D6  ECD0  F086         	call	_printf	;wreg free
  9613                           
  9614                           ;ring_buffer_LUT.c: 385: terminal_textAttributesReset();
  9615  0108DA  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9616                           
  9617                           ;ring_buffer_LUT.c: 388: }
  9618                           ;ring_buffer_LUT.c: 390: }
  9619  0108DE  0012               	return	
  9620  0108E0                     l1248:
  9621                           
  9622                           ;ring_buffer_LUT.c: 393: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
  9623  0108E0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9624  0108E4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9625  0108E8  0EEE               	movlw	low STR_103
  9626  0108EA  0101               	movlb	1	; () banked
  9627  0108EC  6F19               	movwf	strcmp@s2& (0+255),b
  9628  0108EE  0EFD               	movlw	high STR_103
  9629  0108F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9630  0108F2  EC54  F0BD         	call	_strcmp	;wreg free
  9631  0108F6  0101               	movlb	1	; () banked
  9632  0108F8  5117               	movf	?_strcmp& (0+255),w,b
  9633  0108FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9634  0108FC  A4D8               	btfss	status,2,c
  9635  0108FE  D039               	goto	l1252
  9636                           
  9637                           ; BSR set to: 1
  9638                           ;ring_buffer_LUT.c: 395: if (load_enable == 1 && LATGbits.LATG0 != 1) {
  9639  010900  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9640                           
  9641                           ; BSR set to: 1
  9642  010902  B07F               	btfsc	3967,0,c	;volatile
  9643  010904  D011               	goto	l1253
  9644                           
  9645                           ; BSR set to: 1
  9646                           ;ring_buffer_LUT.c: 397: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9647  010906  0E00               	movlw	0
  9648  010908  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9649  01090A  0E00               	movlw	0
  9650  01090C  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9651  01090E  0E02               	movlw	2
  9652  010910  EC74  F09B         	call	_terminal_textAttributes
  9653                           
  9654                           ;ring_buffer_LUT.c: 398: printf("Dimming is currently enabled\n\r");
  9655  010914  0E32               	movlw	low STR_104
  9656  010916  0101               	movlb	1	; () banked
  9657  010918  6F7C               	movwf	printf@f& (0+255),b
  9658  01091A  0EFC               	movlw	high STR_104
  9659  01091C  6F7D               	movwf	(printf@f+1)& (0+255),b
  9660  01091E  ECD0  F086         	call	_printf	;wreg free
  9661                           
  9662                           ;ring_buffer_LUT.c: 399: terminal_textAttributesReset();
  9663  010922  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9664                           
  9665                           ;ring_buffer_LUT.c: 401: }
  9666  010926  0012               	return	
  9667  010928                     l1253:
  9668                           
  9669                           ; BSR set to: 1
  9670                           ;ring_buffer_LUT.c: 403: else if (load_enable == 1){
  9671  010928  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9672  01092A  D011               	goto	l1255
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;ring_buffer_LUT.c: 405: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9676  01092C  0E00               	movlw	0
  9677  01092E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9678  010930  0E00               	movlw	0
  9679  010932  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9680  010934  0E03               	movlw	3
  9681  010936  EC74  F09B         	call	_terminal_textAttributes
  9682                           
  9683                           ;ring_buffer_LUT.c: 406: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
  9684  01093A  0E7B               	movlw	low STR_105
  9685  01093C  0101               	movlb	1	; () banked
  9686  01093E  6F7C               	movwf	printf@f& (0+255),b
  9687  010940  0EF8               	movlw	high STR_105
  9688  010942  6F7D               	movwf	(printf@f+1)& (0+255),b
  9689  010944  ECD0  F086         	call	_printf	;wreg free
  9690                           
  9691                           ;ring_buffer_LUT.c: 407: terminal_textAttributesReset();
  9692  010948  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9693                           
  9694                           ;ring_buffer_LUT.c: 409: }
  9695  01094C  0012               	return	
  9696  01094E                     l1255:
  9697                           
  9698                           ;ring_buffer_LUT.c: 411: else {
  9699                           ;ring_buffer_LUT.c: 413: terminal_textAttributes(RED, BLACK, NORMAL);
  9700  01094E  0E00               	movlw	0
  9701  010950  0101               	movlb	1	; () banked
  9702  010952  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9703  010954  0E00               	movlw	0
  9704  010956  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9705  010958  0E01               	movlw	1
  9706  01095A  EC74  F09B         	call	_terminal_textAttributes
  9707                           
  9708                           ;ring_buffer_LUT.c: 414: printf("Load and dimming are currently disabled\n\r");
  9709  01095E  0E2B               	movlw	low STR_106
  9710  010960  0101               	movlb	1	; () banked
  9711  010962  6F7C               	movwf	printf@f& (0+255),b
  9712  010964  0EFA               	movlw	high STR_106
  9713  010966  6F7D               	movwf	(printf@f+1)& (0+255),b
  9714  010968  ECD0  F086         	call	_printf	;wreg free
  9715                           
  9716                           ;ring_buffer_LUT.c: 415: terminal_textAttributesReset();
  9717  01096C  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9718                           
  9719                           ;ring_buffer_LUT.c: 417: }
  9720                           ;ring_buffer_LUT.c: 421: }
  9721  010970  0012               	return	
  9722  010972                     l1252:
  9723                           
  9724                           ;ring_buffer_LUT.c: 426: else if ((0 == strcmp(line, "Disable Load"))) {
  9725  010972  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
  9726  010976  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9727  01097A  0E37               	movlw	low STR_107
  9728  01097C  0101               	movlb	1	; () banked
  9729  01097E  6F19               	movwf	strcmp@s2& (0+255),b
  9730  010980  0EFF               	movlw	high STR_107
  9731  010982  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9732  010984  EC54  F0BD         	call	_strcmp	;wreg free
  9733  010988  0101               	movlb	1	; () banked
  9734  01098A  5117               	movf	?_strcmp& (0+255),w,b
  9735  01098C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9736  01098E  A4D8               	btfss	status,2,c
  9737  010990  D014               	goto	l1258
  9738                           
  9739                           ; BSR set to: 1
  9740                           ;ring_buffer_LUT.c: 428: LATGbits.LATG1 = 0;
  9741  010992  927F               	bcf	3967,1,c	;volatile
  9742                           
  9743                           ;ring_buffer_LUT.c: 429: LATGbits.LATG0 = 0;
  9744  010994  907F               	bcf	3967,0,c	;volatile
  9745                           
  9746                           ;ring_buffer_LUT.c: 430: load_enable = 0;
  9747  010996  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9748                           
  9749                           ; BSR set to: 1
  9750                           ;ring_buffer_LUT.c: 432: terminal_textAttributes(RED, BLACK, NORMAL);
  9751  010998  0E00               	movlw	0
  9752  01099A  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9753  01099C  0E00               	movlw	0
  9754  01099E  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9755  0109A0  0E01               	movlw	1
  9756  0109A2  EC74  F09B         	call	_terminal_textAttributes
  9757                           
  9758                           ;ring_buffer_LUT.c: 433: printf("Load has been disabled\n\r");
  9759  0109A6  0EDD               	movlw	low STR_108
  9760  0109A8  0101               	movlb	1	; () banked
  9761  0109AA  6F7C               	movwf	printf@f& (0+255),b
  9762  0109AC  0EFC               	movlw	high STR_108
  9763  0109AE  6F7D               	movwf	(printf@f+1)& (0+255),b
  9764  0109B0  ECD0  F086         	call	_printf	;wreg free
  9765                           
  9766                           ;ring_buffer_LUT.c: 434: terminal_textAttributesReset();
  9767  0109B4  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9768                           
  9769                           ;ring_buffer_LUT.c: 436: }
  9770  0109B8  0012               	return	
  9771  0109BA                     l1258:
  9772                           
  9773                           ;ring_buffer_LUT.c: 439: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9774  0109BA  C1BC  F126         	movff	ringBufferLUT@line,strstr@s1
  9775  0109BE  C1BD  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9776  0109C2  0EF6               	movlw	low STR_109
  9777  0109C4  0101               	movlb	1	; () banked
  9778  0109C6  6F28               	movwf	strstr@s2& (0+255),b
  9779  0109C8  0EFC               	movlw	high STR_109
  9780  0109CA  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9781  0109CC  EC5E  F0B9         	call	_strstr	;wreg free
  9782  0109D0  0101               	movlb	1	; () banked
  9783  0109D2  5126               	movf	?_strstr& (0+255),w,b
  9784  0109D4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9785  0109D6  B4D8               	btfsc	status,2,c
  9786  0109D8  D131               	goto	l1260
  9787                           
  9788                           ; BSR set to: 1
  9789                           ;ring_buffer_LUT.c: 442: char arg_buff[3];
  9790                           ;ring_buffer_LUT.c: 445: for (int index = 0; index < 3; index++) {
  9791  0109DA  0E00               	movlw	0
  9792  0109DC  0103               	movlb	3	; () banked
  9793  0109DE  6F9E               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9794  0109E0  0E00               	movlw	0
  9795  0109E2  6F9D               	movwf	ringBufferLUT@index& (0+255),b
  9796  0109E4                     l13668:
  9797                           
  9798                           ; BSR set to: 3
  9799  0109E4  BF9E               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9800  0109E6  D006               	goto	l1261
  9801  0109E8  519E               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9802  0109EA  E11F               	bnz	l13678
  9803  0109EC  0E03               	movlw	3
  9804  0109EE  5D9D               	subwf	ringBufferLUT@index& (0+255),w,b
  9805  0109F0  B0D8               	btfsc	status,0,c
  9806  0109F2  D01B               	goto	u16470
  9807  0109F4                     l1261:
  9808                           
  9809                           ; BSR set to: 3
  9810                           ;ring_buffer_LUT.c: 447: arg_buff[index] = line[index + 24];
  9811                           
  9812                           ; BSR set to: 3
  9813  0109F4  0E18               	movlw	24
  9814  0109F6  259D               	addwf	ringBufferLUT@index& (0+255),w,b
  9815  0109F8  0101               	movlb	1	; () banked
  9816  0109FA  6FBE               	movwf	??_ringBufferLUT& (0+255),b
  9817  0109FC  0E00               	movlw	0
  9818  0109FE  0103               	movlb	3	; () banked
  9819  010A00  219E               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9820  010A02  0101               	movlb	1	; () banked
  9821  010A04  6FBF               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9822  010A06  51BE               	movf	??_ringBufferLUT& (0+255),w,b
  9823  010A08  25BC               	addwf	ringBufferLUT@line& (0+255),w,b
  9824  010A0A  6ED9               	movwf	fsr2l,c
  9825  010A0C  51BF               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9826  010A0E  21BD               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9827  010A10  6EDA               	movwf	fsr2h,c
  9828  010A12  0E9A               	movlw	low ringBufferLUT@arg_buff
  9829  010A14  0103               	movlb	3	; () banked
  9830  010A16  259D               	addwf	ringBufferLUT@index& (0+255),w,b
  9831  010A18  6EE1               	movwf	fsr1l,c
  9832  010A1A  0E03               	movlw	high ringBufferLUT@arg_buff
  9833  010A1C  219E               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9834  010A1E  6EE2               	movwf	fsr1h,c
  9835  010A20  CFDF FFE7          	movff	indf2,indf1
  9836                           
  9837                           ; BSR set to: 3
  9838  010A24  4B9D               	infsnz	ringBufferLUT@index& (0+255),f,b
  9839  010A26  2B9E               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9840  010A28  D7DD               	goto	l13668
  9841  010A2A                     u16470:
  9842  010A2A                     l13678:
  9843                           
  9844                           ; BSR set to: 3
  9845                           ;ring_buffer_LUT.c: 449: }
  9846                           ;ring_buffer_LUT.c: 451: int percentage = atoi(arg_buff);
  9847  010A2A  0E9A               	movlw	low ringBufferLUT@arg_buff
  9848  010A2C  0101               	movlb	1	; () banked
  9849  010A2E  6F1D               	movwf	atoi@s& (0+255),b
  9850  010A30  0E03               	movlw	high ringBufferLUT@arg_buff
  9851  010A32  6F1E               	movwf	(atoi@s+1)& (0+255),b
  9852  010A34  EC0D  F0B7         	call	_atoi	;wreg free
  9853  010A38  C11D  F39F         	movff	?_atoi,ringBufferLUT@percentage
  9854  010A3C  C11E  F3A0         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9855                           
  9856                           ;ring_buffer_LUT.c: 454: if ( (percentage >= 100) ||
  9857                           ;ring_buffer_LUT.c: 455: (percentage <= 0)) {
  9858  010A40  0103               	movlb	3	; () banked
  9859  010A42  BFA0               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9860  010A44  D006               	goto	u16480
  9861  010A46  51A0               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9862  010A48  E10B               	bnz	l13684
  9863  010A4A  0E64               	movlw	100
  9864  010A4C  5D9F               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9865  010A4E  B0D8               	btfsc	status,0,c
  9866  010A50  D007               	goto	u16490
  9867  010A52                     u16480:
  9868                           
  9869                           ; BSR set to: 3
  9870  010A52  BFA0               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9871  010A54  D005               	goto	u16490
  9872  010A56  51A0               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9873  010A58  E12B               	bnz	l13686
  9874  010A5A  059F               	decf	ringBufferLUT@percentage& (0+255),w,b
  9875  010A5C  B0D8               	btfsc	status,0,c
  9876  010A5E  D028               	goto	l1263
  9877  010A60                     u16490:
  9878  010A60                     l13684:
  9879                           
  9880                           ; BSR set to: 3
  9881                           ;ring_buffer_LUT.c: 457: terminal_textAttributes(RED, BLACK, NORMAL);
  9882  010A60  0E00               	movlw	0
  9883  010A62  0101               	movlb	1	; () banked
  9884  010A64  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9885  010A66  0E00               	movlw	0
  9886  010A68  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9887  010A6A  0E01               	movlw	1
  9888  010A6C  EC74  F09B         	call	_terminal_textAttributes
  9889                           
  9890                           ;ring_buffer_LUT.c: 458: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9891  010A70  0E6F               	movlw	low STR_110
  9892  010A72  0101               	movlb	1	; () banked
  9893  010A74  6F7C               	movwf	printf@f& (0+255),b
  9894  010A76  0EF5               	movlw	high STR_110
  9895  010A78  6F7D               	movwf	(printf@f+1)& (0+255),b
  9896  010A7A  ECD0  F086         	call	_printf	;wreg free
  9897                           
  9898                           ;ring_buffer_LUT.c: 459: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9899  010A7E  0E00               	movlw	0
  9900  010A80  0101               	movlb	1	; () banked
  9901  010A82  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
  9902  010A84  0E00               	movlw	0
  9903  010A86  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9904  010A88  0E03               	movlw	3
  9905  010A8A  EC74  F09B         	call	_terminal_textAttributes
  9906                           
  9907                           ;ring_buffer_LUT.c: 460: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9908  010A8E  0E09               	movlw	low STR_111
  9909  010A90  0101               	movlb	1	; () banked
  9910  010A92  6F7C               	movwf	printf@f& (0+255),b
  9911  010A94  0EF5               	movlw	high STR_111
  9912  010A96  6F7D               	movwf	(printf@f+1)& (0+255),b
  9913  010A98  ECD0  F086         	call	_printf	;wreg free
  9914                           
  9915                           ;ring_buffer_LUT.c: 461: printf("Enter 'Help' for list of available commands\n\r");
  9916  010A9C  0EA6               	movlw	low STR_112
  9917  010A9E  0101               	movlb	1	; () banked
  9918  010AA0  6F7C               	movwf	printf@f& (0+255),b
  9919  010AA2  0EF9               	movlw	high STR_112
  9920  010AA4  6F7D               	movwf	(printf@f+1)& (0+255),b
  9921  010AA6  ECD0  F086         	call	_printf	;wreg free
  9922                           
  9923                           ;ring_buffer_LUT.c: 462: terminal_textAttributesReset();
  9924  010AAA  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
  9925                           
  9926                           ;ring_buffer_LUT.c: 464: }
  9927  010AAE  0012               	return	
  9928  010AB0                     l1263:
  9929  010AB0                     l13686:
  9930                           
  9931                           ;ring_buffer_LUT.c: 467: else {
  9932                           ;ring_buffer_LUT.c: 470: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9933  010AB0  0E00               	movlw	0
  9934  010AB2  0101               	movlb	1	; () banked
  9935  010AB4  6F41               	movwf	___fldiv@a& (0+255),b
  9936  010AB6  0E00               	movlw	0
  9937  010AB8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
  9938  010ABA  0EC8               	movlw	200
  9939  010ABC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
  9940  010ABE  0E42               	movlw	66
  9941  010AC0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
  9942  010AC2  0E00               	movlw	0
  9943  010AC4  6F2D               	movwf	___fladd@a& (0+255),b
  9944  010AC6  0E00               	movlw	0
  9945  010AC8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
  9946  010ACA  0EC8               	movlw	200
  9947  010ACC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
  9948  010ACE  0E42               	movlw	66
  9949  010AD0  6F30               	movwf	(___fladd@a+3)& (0+255),b
  9950  010AD2  C39F  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
  9951  010AD6  C3A0  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
  9952  010ADA  0E00               	movlw	0
  9953  010ADC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9954  010ADE  0EFF               	movlw	-1
  9955  010AE0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
  9956  010AE2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
  9957  010AE4  0E01               	movlw	1
  9958  010AE6  ECC9  F0AF         	call	___xxtofl
  9959  010AEA  C117  F125         	movff	?___xxtofl,___flneg@f1
  9960  010AEE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
  9961  010AF2  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
  9962  010AF6  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
  9963  010AFA  ECFE  F0BF         	call	___flneg	;wreg free
  9964  010AFE  C125  F129         	movff	?___flneg,___fladd@b
  9965  010B02  C126  F12A         	movff	?___flneg+1,___fladd@b+1
  9966  010B06  C127  F12B         	movff	?___flneg+2,___fladd@b+2
  9967  010B0A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
  9968  010B0E  EC79  F0A0         	call	___fladd	;wreg free
  9969  010B12  C129  F13D         	movff	?___fladd,___fldiv@b
  9970  010B16  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
  9971  010B1A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
  9972  010B1E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
  9973  010B22  EC7D  F0A9         	call	___fldiv	;wreg free
  9974  010B26  C13D  F156         	movff	?___fldiv,___flmul@b
  9975  010B2A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
  9976  010B2E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
  9977  010B32  C140  F159         	movff	?___fldiv+3,___flmul@b+3
  9978  010B36  0EDB               	movlw	219
  9979  010B38  0101               	movlb	1	; () banked
  9980  010B3A  6F5A               	movwf	___flmul@a& (0+255),b
  9981  010B3C  0E0F               	movlw	15
  9982  010B3E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
  9983  010B40  0E49               	movlw	73
  9984  010B42  6F5C               	movwf	(___flmul@a+2)& (0+255),b
  9985  010B44  0E40               	movlw	64
  9986  010B46  6F5D               	movwf	(___flmul@a+3)& (0+255),b
  9987  010B48  EC28  F09D         	call	___flmul	;wreg free
  9988  010B4C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
  9989  010B50  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
  9990  010B54  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
  9991  010B58  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
  9992                           
  9993                           ;ring_buffer_LUT.c: 471: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  9994  010B5C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
  9995  010B60  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
  9996  010B64  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
  9997  010B68  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
  9998  010B6C  0EE1               	movlw	225
  9999  010B6E  0101               	movlb	1	; () banked
 10000  010B70  6F5A               	movwf	___flmul@a& (0+255),b
 10001  010B72  0E2E               	movlw	46
 10002  010B74  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 10003  010B76  0E65               	movlw	101
 10004  010B78  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 10005  010B7A  0E42               	movlw	66
 10006  010B7C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 10007  010B7E  EC28  F09D         	call	___flmul	;wreg free
 10008  010B82  C156  F396         	movff	?___flmul,ringBufferLUT@angle_degrees
 10009  010B86  C157  F397         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 10010  010B8A  C158  F398         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 10011  010B8E  C159  F399         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 10012                           
 10013                           ;ring_buffer_LUT.c: 472: dimming_period = (100 - percentage) * (0xFFFF / 100);
 10014  010B92  C39F  F1BE         	movff	ringBufferLUT@percentage,??_ringBufferLUT
 10015  010B96  C3A0  F1BF         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
 10016  010B9A  0101               	movlb	1	; () banked
 10017  010B9C  1FBE               	comf	??_ringBufferLUT& (0+255),f,b
 10018  010B9E  1FBF               	comf	(??_ringBufferLUT+1)& (0+255),f,b
 10019  010BA0  4BBE               	infsnz	??_ringBufferLUT& (0+255),f,b
 10020  010BA2  2BBF               	incf	(??_ringBufferLUT+1)& (0+255),f,b
 10021  010BA4  0E64               	movlw	100
 10022  010BA6  25BE               	addwf	??_ringBufferLUT& (0+255),w,b
 10023  010BA8  6F17               	movwf	___wmul@multiplier& (0+255),b
 10024  010BAA  0E00               	movlw	0
 10025  010BAC  21BF               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
 10026  010BAE  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
 10027  010BB0  0E02               	movlw	2
 10028  010BB2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10029  010BB4  0E8F               	movlw	143
 10030  010BB6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 10031  010BB8  EC59  F0C0         	call	___wmul	;wreg free
 10032  010BBC  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 10033  010BC0  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 10034                           
 10035                           ;ring_buffer_LUT.c: 474: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10036  010BC4  0E00               	movlw	0
 10037  010BC6  0101               	movlb	1	; () banked
 10038  010BC8  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10039  010BCA  0E00               	movlw	0
 10040  010BCC  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10041  010BCE  0E02               	movlw	2
 10042  010BD0  EC74  F09B         	call	_terminal_textAttributes
 10043                           
 10044                           ;ring_buffer_LUT.c: 475: printf("Dimming has been set to %d percent\n\r", percentage);
 10045  010BD4  0E40               	movlw	low STR_113
 10046  010BD6  0101               	movlb	1	; () banked
 10047  010BD8  6F7C               	movwf	printf@f& (0+255),b
 10048  010BDA  0EFB               	movlw	high STR_113
 10049  010BDC  6F7D               	movwf	(printf@f+1)& (0+255),b
 10050  010BDE  C39F  F17E         	movff	ringBufferLUT@percentage,?_printf+2
 10051  010BE2  C3A0  F17F         	movff	ringBufferLUT@percentage+1,?_printf+3
 10052  010BE6  ECD0  F086         	call	_printf	;wreg free
 10053                           
 10054                           ;ring_buffer_LUT.c: 476: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 10055  010BEA  0EE3               	movlw	low STR_114
 10056  010BEC  0101               	movlb	1	; () banked
 10057  010BEE  6F7C               	movwf	printf@f& (0+255),b
 10058  010BF0  0EF6               	movlw	high STR_114
 10059  010BF2  6F7D               	movwf	(printf@f+1)& (0+255),b
 10060  010BF4  C0F2  F17E         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 10061  010BF8  C0F3  F17F         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 10062  010BFC  C0F4  F180         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 10063  010C00  C0F5  F181         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 10064  010C04  C396  F182         	movff	ringBufferLUT@angle_degrees,?_printf+6
 10065  010C08  C397  F183         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 10066  010C0C  C398  F184         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 10067  010C10  C399  F185         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 10068  010C14  ECD0  F086         	call	_printf	;wreg free
 10069                           
 10070                           ;ring_buffer_LUT.c: 477: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 10071  010C18  0E1A               	movlw	low STR_115
 10072  010C1A  0101               	movlb	1	; () banked
 10073  010C1C  6F7C               	movwf	printf@f& (0+255),b
 10074  010C1E  0EF6               	movlw	high STR_115
 10075  010C20  6F7D               	movwf	(printf@f+1)& (0+255),b
 10076  010C22  C0F0  F17E         	movff	_dimming_period,?_printf+2	;volatile
 10077  010C26  C0F1  F17F         	movff	_dimming_period+1,?_printf+3	;volatile
 10078  010C2A  C0F0  F180         	movff	_dimming_period,?_printf+4	;volatile
 10079  010C2E  C0F1  F181         	movff	_dimming_period+1,?_printf+5	;volatile
 10080  010C32  ECD0  F086         	call	_printf	;wreg free
 10081                           
 10082                           ;ring_buffer_LUT.c: 478: terminal_textAttributesReset();
 10083  010C36  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
 10084                           
 10085                           ;ring_buffer_LUT.c: 480: }
 10086                           ;ring_buffer_LUT.c: 482: }
 10087  010C3A  0012               	return	
 10088  010C3C                     l1260:
 10089                           
 10090                           ;ring_buffer_LUT.c: 485: else if((0 == strcmp(line, "Device On Time?"))) {
 10091  010C3C  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
 10092  010C40  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10093  010C44  0E40               	movlw	low STR_116
 10094  010C46  0101               	movlb	1	; () banked
 10095  010C48  6F19               	movwf	strcmp@s2& (0+255),b
 10096  010C4A  0EFE               	movlw	high STR_116
 10097  010C4C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10098  010C4E  EC54  F0BD         	call	_strcmp	;wreg free
 10099  010C52  0101               	movlb	1	; () banked
 10100  010C54  5117               	movf	?_strcmp& (0+255),w,b
 10101  010C56  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10102  010C58  A4D8               	btfss	status,2,c
 10103  010C5A  D019               	goto	l1268
 10104                           
 10105                           ; BSR set to: 1
 10106                           ;ring_buffer_LUT.c: 487: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10107  010C5C  0E00               	movlw	0
 10108  010C5E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10109  010C60  0E00               	movlw	0
 10110  010C62  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10111  010C64  0E02               	movlw	2
 10112  010C66  EC74  F09B         	call	_terminal_textAttributes
 10113                           
 10114                           ;ring_buffer_LUT.c: 488: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 10115  010C6A  0E60               	movlw	low STR_117
 10116  010C6C  0101               	movlb	1	; () banked
 10117  010C6E  6F7C               	movwf	printf@f& (0+255),b
 10118  010C70  0EF7               	movlw	high STR_117
 10119  010C72  6F7D               	movwf	(printf@f+1)& (0+255),b
 10120  010C74  C244  F17E         	movff	_dev_on_time,?_printf+2	;volatile
 10121  010C78  C245  F17F         	movff	_dev_on_time+1,?_printf+3	;volatile
 10122  010C7C  C246  F180         	movff	_dev_on_time+2,?_printf+4	;volatile
 10123  010C80  C247  F181         	movff	_dev_on_time+3,?_printf+5	;volatile
 10124  010C84  ECD0  F086         	call	_printf	;wreg free
 10125                           
 10126                           ;ring_buffer_LUT.c: 489: terminal_textAttributesReset();
 10127  010C88  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
 10128                           
 10129                           ;ring_buffer_LUT.c: 491: }
 10130  010C8C  0012               	return	
 10131  010C8E                     l1268:
 10132                           
 10133                           ;ring_buffer_LUT.c: 494: else if((0 == strcmp(line, "Load On Time?"))) {
 10134  010C8E  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
 10135  010C92  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10136  010C96  0EE6               	movlw	low STR_118
 10137  010C98  0101               	movlb	1	; () banked
 10138  010C9A  6F19               	movwf	strcmp@s2& (0+255),b
 10139  010C9C  0EFE               	movlw	high STR_118
 10140  010C9E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10141  010CA0  EC54  F0BD         	call	_strcmp	;wreg free
 10142  010CA4  0101               	movlb	1	; () banked
 10143  010CA6  5117               	movf	?_strcmp& (0+255),w,b
 10144  010CA8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10145  010CAA  A4D8               	btfss	status,2,c
 10146  010CAC  D019               	goto	l1270
 10147                           
 10148                           ; BSR set to: 1
 10149                           ;ring_buffer_LUT.c: 496: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10150  010CAE  0E00               	movlw	0
 10151  010CB0  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10152  010CB2  0E00               	movlw	0
 10153  010CB4  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10154  010CB6  0E02               	movlw	2
 10155  010CB8  EC74  F09B         	call	_terminal_textAttributes
 10156                           
 10157                           ;ring_buffer_LUT.c: 497: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 10158  010CBC  0EB0               	movlw	low STR_119
 10159  010CBE  0101               	movlb	1	; () banked
 10160  010CC0  6F7C               	movwf	printf@f& (0+255),b
 10161  010CC2  0EF8               	movlw	high STR_119
 10162  010CC4  6F7D               	movwf	(printf@f+1)& (0+255),b
 10163  010CC6  C240  F17E         	movff	_load_on_time,?_printf+2	;volatile
 10164  010CCA  C241  F17F         	movff	_load_on_time+1,?_printf+3	;volatile
 10165  010CCE  C242  F180         	movff	_load_on_time+2,?_printf+4	;volatile
 10166  010CD2  C243  F181         	movff	_load_on_time+3,?_printf+5	;volatile
 10167  010CD6  ECD0  F086         	call	_printf	;wreg free
 10168                           
 10169                           ;ring_buffer_LUT.c: 498: terminal_textAttributesReset();
 10170  010CDA  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
 10171                           
 10172                           ;ring_buffer_LUT.c: 500: }
 10173  010CDE  0012               	return	
 10174  010CE0                     l1270:
 10175                           
 10176                           ;ring_buffer_LUT.c: 505: else if((0 == strcmp(line, "Help"))) {
 10177  010CE0  C1BC  F117         	movff	ringBufferLUT@line,strcmp@s1
 10178  010CE4  C1BD  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10179  010CE8  0EAB               	movlw	low STR_120
 10180  010CEA  0101               	movlb	1	; () banked
 10181  010CEC  6F19               	movwf	strcmp@s2& (0+255),b
 10182  010CEE  0EFF               	movlw	high STR_120
 10183  010CF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10184  010CF2  EC54  F0BD         	call	_strcmp	;wreg free
 10185  010CF6  0101               	movlb	1	; () banked
 10186  010CF8  5117               	movf	?_strcmp& (0+255),w,b
 10187  010CFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10188  010CFC  A4D8               	btfss	status,2,c
 10189  010CFE  0012               	return	
 10190                           
 10191                           ; BSR set to: 1
 10192                           ;ring_buffer_LUT.c: 507: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 10193  010D00  0E00               	movlw	0
 10194  010D02  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10195  010D04  0E00               	movlw	0
 10196  010D06  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10197  010D08  0E03               	movlw	3
 10198  010D0A  EC74  F09B         	call	_terminal_textAttributes
 10199                           
 10200                           ;ring_buffer_LUT.c: 508: printf("List of supported commands:\n\r"
 10201                           ;ring_buffer_LUT.c: 510: "Device Commands:\n\r"
 10202                           ;ring_buffer_LUT.c: 511: "   Reset: Clears the terminal and resets the micro\n\r"
 10203                           ;ring_buffer_LUT.c: 512: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 10204                           ;ring_buffer_LUT.c: 513: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 10205                           ;ring_buffer_LUT.c: 514: "   *IDN?: Returns device identification string\n\r"
 10206                           ;ring_buffer_LUT.c: 515: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 10207  010D0E  0E1B               	movlw	low STR_121
 10208  010D10  0101               	movlb	1	; () banked
 10209  010D12  6F7C               	movwf	printf@f& (0+255),b
 10210  010D14  0EEB               	movlw	high STR_121
 10211  010D16  6F7D               	movwf	(printf@f+1)& (0+255),b
 10212  010D18  ECD0  F086         	call	_printf	;wreg free
 10213                           
 10214                           ;ring_buffer_LUT.c: 549: terminal_printNewline();
 10215  010D1C  EC7F  F0C1         	call	_terminal_printNewline	;wreg free
 10216                           
 10217                           ;ring_buffer_LUT.c: 550: printf("Help messages appear in yellow\n\r");
 10218  010D20  0EF1               	movlw	low STR_122
 10219  010D22  0101               	movlb	1	; () banked
 10220  010D24  6F7C               	movwf	printf@f& (0+255),b
 10221  010D26  0EFB               	movlw	high STR_122
 10222  010D28  6F7D               	movwf	(printf@f+1)& (0+255),b
 10223  010D2A  ECD0  F086         	call	_printf	;wreg free
 10224                           
 10225                           ;ring_buffer_LUT.c: 552: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10226  010D2E  0E00               	movlw	0
 10227  010D30  0101               	movlb	1	; () banked
 10228  010D32  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10229  010D34  0E00               	movlw	0
 10230  010D36  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10231  010D38  0E02               	movlw	2
 10232  010D3A  EC74  F09B         	call	_terminal_textAttributes
 10233                           
 10234                           ;ring_buffer_LUT.c: 553: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 10235  010D3E  0E22               	movlw	low STR_123
 10236  010D40  0101               	movlb	1	; () banked
 10237  010D42  6F7C               	movwf	printf@f& (0+255),b
 10238  010D44  0EF7               	movlw	high STR_123
 10239  010D46  6F7D               	movwf	(printf@f+1)& (0+255),b
 10240  010D48  ECD0  F086         	call	_printf	;wreg free
 10241                           
 10242                           ;ring_buffer_LUT.c: 554: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10243  010D4C  0E00               	movlw	0
 10244  010D4E  0101               	movlb	1	; () banked
 10245  010D50  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10246  010D52  0E00               	movlw	0
 10247  010D54  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10248  010D56  0E06               	movlw	6
 10249  010D58  EC74  F09B         	call	_terminal_textAttributes
 10250                           
 10251                           ;ring_buffer_LUT.c: 555: printf("Measurement responses appear in cyan\n\r");
 10252  010D5C  0ECF               	movlw	low STR_124
 10253  010D5E  0101               	movlb	1	; () banked
 10254  010D60  6F7C               	movwf	printf@f& (0+255),b
 10255  010D62  0EFA               	movlw	high STR_124
 10256  010D64  6F7D               	movwf	(printf@f+1)& (0+255),b
 10257  010D66  ECD0  F086         	call	_printf	;wreg free
 10258                           
 10259                           ;ring_buffer_LUT.c: 556: terminal_textAttributes(RED, BLACK, NORMAL);
 10260  010D6A  0E00               	movlw	0
 10261  010D6C  0101               	movlb	1	; () banked
 10262  010D6E  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10263  010D70  0E00               	movlw	0
 10264  010D72  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10265  010D74  0E01               	movlw	1
 10266  010D76  EC74  F09B         	call	_terminal_textAttributes
 10267                           
 10268                           ;ring_buffer_LUT.c: 557: printf("Errors and negative responses appear in red\n\r");
 10269  010D7A  0E78               	movlw	low STR_125
 10270  010D7C  0101               	movlb	1	; () banked
 10271  010D7E  6F7C               	movwf	printf@f& (0+255),b
 10272  010D80  0EF9               	movlw	high STR_125
 10273  010D82  6F7D               	movwf	(printf@f+1)& (0+255),b
 10274  010D84  ECD0  F086         	call	_printf	;wreg free
 10275                           
 10276                           ;ring_buffer_LUT.c: 558: terminal_textAttributesReset();
 10277  010D88  EC65  F0C1         	call	_terminal_textAttributesReset	;wreg free
 10278                           
 10279                           ;ring_buffer_LUT.c: 559: printf("User input appears in white\n\r");
 10280  010D8C  0E51               	movlw	low STR_126
 10281  010D8E  0101               	movlb	1	; () banked
 10282  010D90  6F7C               	movwf	printf@f& (0+255),b
 10283  010D92  0EFC               	movlw	high STR_126
 10284  010D94  6F7D               	movwf	(printf@f+1)& (0+255),b
 10285  010D96  ECD0  F086         	call	_printf	;wreg free
 10286                           
 10287                           ;ring_buffer_LUT.c: 562: terminal_printNewline();
 10288  010D9A  EC7F  F0C1         	call	_terminal_printNewline	;wreg free
 10289  010D9E  0012               	return	
 10290  010DA0                     __end_of_ringBufferLUT:
 10291                           	opt stack 0
 10292                           tblptru	equ	0xFF8
 10293                           tblptrh	equ	0xFF7
 10294                           tblptrl	equ	0xFF6
 10295                           tablat	equ	0xFF5
 10296                           intcon	equ	0xFF2
 10297                           postinc0	equ	0xFEE
 10298                           wreg	equ	0xFE8
 10299                           indf1	equ	0xFE7
 10300                           postdec1	equ	0xFE5
 10301                           fsr1h	equ	0xFE2
 10302                           fsr1l	equ	0xFE1
 10303                           indf2	equ	0xFDF
 10304                           postinc2	equ	0xFDE
 10305                           fsr2h	equ	0xFDA
 10306                           fsr2l	equ	0xFD9
 10307                           status	equ	0xFD8
 10308                           
 10309 ;; *************** function _terminal_textAttributesReset *****************
 10310 ;; Defined at:
 10311 ;;		line 223 in file "ring_buffer_interface.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;Total ram usage:        0 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:   17
 10332 ;; This function calls:
 10333 ;;		_terminal_textAttributes
 10334 ;; This function is called by:
 10335 ;;		_main
 10336 ;;		_ringBufferLUT
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text4
 10341  0182CA                     __ptext4:
 10342                           	opt stack 0
 10343  0182CA                     _terminal_textAttributesReset:
 10344                           	opt stack 13
 10345                           
 10346                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 10347                           
 10348                           ;incstack = 0
 10349  0182CA  0E00               	movlw	0
 10350  0182CC  0101               	movlb	1	; () banked
 10351  0182CE  6FAA               	movwf	terminal_textAttributes@background_color& (0+255),b
 10352  0182D0  0E00               	movlw	0
 10353  0182D2  6FAB               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10354  0182D4  0E07               	movlw	7
 10355  0182D6  EC74  F09B         	call	_terminal_textAttributes
 10356  0182DA  0012               	return		;funcret
 10357  0182DC                     __end_of_terminal_textAttributesReset:
 10358                           	opt stack 0
 10359                           tblptru	equ	0xFF8
 10360                           tblptrh	equ	0xFF7
 10361                           tblptrl	equ	0xFF6
 10362                           tablat	equ	0xFF5
 10363                           intcon	equ	0xFF2
 10364                           postinc0	equ	0xFEE
 10365                           wreg	equ	0xFE8
 10366                           indf1	equ	0xFE7
 10367                           postdec1	equ	0xFE5
 10368                           fsr1h	equ	0xFE2
 10369                           fsr1l	equ	0xFE1
 10370                           indf2	equ	0xFDF
 10371                           postinc2	equ	0xFDE
 10372                           fsr2h	equ	0xFDA
 10373                           fsr2l	equ	0xFD9
 10374                           status	equ	0xFD8
 10375                           
 10376 ;; *************** function _terminal_textAttributes *****************
 10377 ;; Defined at:
 10378 ;;		line 115 in file "ring_buffer_interface.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  foreground_c    1    wreg     enum E17893
 10381 ;;  background_c    1  170[BANK1 ] enum E17893
 10382 ;;  input_attrib    1  171[BANK1 ] enum E17885
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;  foreground_c    1  172[BANK1 ] enum E17893
 10385 ;;  output_buff    15  173[BANK1 ] unsigned char [15]
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10395 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;Total ram usage:       18 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:   16
 10402 ;; This function calls:
 10403 ;;		_printf
 10404 ;;		_strcat
 10405 ;;		_strncpy
 10406 ;; This function is called by:
 10407 ;;		_terminal_textAttributesReset
 10408 ;;		_ringBufferLUT
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text5
 10413  0136E8                     __ptext5:
 10414                           	opt stack 0
 10415  0136E8                     _terminal_textAttributes:
 10416                           	opt stack 13
 10417                           
 10418                           ;incstack = 0
 10419                           ;terminal_textAttributes@foreground_color stored from wreg
 10420  0136E8  0101               	movlb	1	; () banked
 10421  0136EA  6FAC               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 10422                           
 10423                           ;ring_buffer_interface.c: 119: char output_buff[15];
 10424                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 10425  0136EC  0EAD               	movlw	low terminal_textAttributes@output_buff
 10426  0136EE  0101               	movlb	1	; () banked
 10427  0136F0  6F17               	movwf	strncpy@to& (0+255),b
 10428  0136F2  0E01               	movlw	high terminal_textAttributes@output_buff
 10429  0136F4  6F18               	movwf	(strncpy@to+1)& (0+255),b
 10430  0136F6  0EF6               	movlw	low STR_11
 10431  0136F8  6F19               	movwf	strncpy@from& (0+255),b
 10432  0136FA  0EFF               	movlw	high STR_11
 10433  0136FC  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 10434  0136FE  0E00               	movlw	0
 10435  013700  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 10436  013702  0E0F               	movlw	15
 10437  013704  6F1B               	movwf	strncpy@size& (0+255),b
 10438  013706  EC04  F0BC         	call	_strncpy	;wreg free
 10439                           
 10440                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 10441  01370A  D054               	goto	l1066
 10442  01370C                     
 10443                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 10444  01370C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10445  01370E  0101               	movlb	1	; () banked
 10446  013710  6F17               	movwf	strcat@to& (0+255),b
 10447  013712  0E01               	movlw	high terminal_textAttributes@output_buff
 10448  013714  6F18               	movwf	(strcat@to+1)& (0+255),b
 10449  013716  0ECA               	movlw	low (STR_20+1)
 10450  013718  6F19               	movwf	strcat@from& (0+255),b
 10451  01371A  0EFF               	movlw	high (STR_20+1)
 10452  01371C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10453  01371E  ECCB  F0BD         	call	_strcat	;wreg free
 10454                           
 10455                           ;ring_buffer_interface.c: 127: break;
 10456  013722  D05D               	goto	l1068
 10457  013724                     
 10458                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 10459  013724  0EAD               	movlw	low terminal_textAttributes@output_buff
 10460  013726  0101               	movlb	1	; () banked
 10461  013728  6F17               	movwf	strcat@to& (0+255),b
 10462  01372A  0E01               	movlw	high terminal_textAttributes@output_buff
 10463  01372C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10464  01372E  0E51               	movlw	low (STR_67+20)
 10465  013730  6F19               	movwf	strcat@from& (0+255),b
 10466  013732  0EFD               	movlw	high (STR_67+20)
 10467  013734  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10468  013736  ECCB  F0BD         	call	_strcat	;wreg free
 10469                           
 10470                           ;ring_buffer_interface.c: 130: break;
 10471  01373A  D051               	goto	l1068
 10472  01373C                     
 10473                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 10474  01373C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10475  01373E  0101               	movlb	1	; () banked
 10476  013740  6F17               	movwf	strcat@to& (0+255),b
 10477  013742  0E01               	movlw	high terminal_textAttributes@output_buff
 10478  013744  6F18               	movwf	(strcat@to+1)& (0+255),b
 10479  013746  0EDF               	movlw	low (STR_24+1)
 10480  013748  6F19               	movwf	strcat@from& (0+255),b
 10481  01374A  0EFF               	movlw	high (STR_24+1)
 10482  01374C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10483  01374E  ECCB  F0BD         	call	_strcat	;wreg free
 10484                           
 10485                           ;ring_buffer_interface.c: 133: break;
 10486  013752  D045               	goto	l1068
 10487  013754                     
 10488                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 10489  013754  0EAD               	movlw	low terminal_textAttributes@output_buff
 10490  013756  0101               	movlb	1	; () banked
 10491  013758  6F17               	movwf	strcat@to& (0+255),b
 10492  01375A  0E01               	movlw	high terminal_textAttributes@output_buff
 10493  01375C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10494  01375E  0EE5               	movlw	low (STR_25+1)
 10495  013760  6F19               	movwf	strcat@from& (0+255),b
 10496  013762  0EFF               	movlw	high (STR_25+1)
 10497  013764  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10498  013766  ECCB  F0BD         	call	_strcat	;wreg free
 10499                           
 10500                           ;ring_buffer_interface.c: 136: break;
 10501  01376A  D039               	goto	l1068
 10502  01376C                     
 10503                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 10504  01376C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10505  01376E  0101               	movlb	1	; () banked
 10506  013770  6F17               	movwf	strcat@to& (0+255),b
 10507  013772  0E01               	movlw	high terminal_textAttributes@output_buff
 10508  013774  6F18               	movwf	(strcat@to+1)& (0+255),b
 10509  013776  0EF1               	movlw	low (STR_27+1)
 10510  013778  6F19               	movwf	strcat@from& (0+255),b
 10511  01377A  0EFF               	movlw	high (STR_27+1)
 10512  01377C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10513  01377E  ECCB  F0BD         	call	_strcat	;wreg free
 10514                           
 10515                           ;ring_buffer_interface.c: 139: break;
 10516  013782  D02D               	goto	l1068
 10517  013784                     
 10518                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 10519  013784  0EAD               	movlw	low terminal_textAttributes@output_buff
 10520  013786  0101               	movlb	1	; () banked
 10521  013788  6F17               	movwf	strcat@to& (0+255),b
 10522  01378A  0E01               	movlw	high terminal_textAttributes@output_buff
 10523  01378C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10524  01378E  0EF9               	movlw	low STR_17
 10525  013790  6F19               	movwf	strcat@from& (0+255),b
 10526  013792  0EFF               	movlw	high STR_17
 10527  013794  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10528  013796  ECCB  F0BD         	call	_strcat	;wreg free
 10529                           
 10530                           ;ring_buffer_interface.c: 142: break;
 10531  01379A  D021               	goto	l1068
 10532  01379C                     
 10533                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 10534  01379C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10535  01379E  0101               	movlb	1	; () banked
 10536  0137A0  6F17               	movwf	strcat@to& (0+255),b
 10537  0137A2  0E01               	movlw	high terminal_textAttributes@output_buff
 10538  0137A4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10539  0137A6  0ECA               	movlw	low (STR_20+1)
 10540  0137A8  6F19               	movwf	strcat@from& (0+255),b
 10541  0137AA  0EFF               	movlw	high (STR_20+1)
 10542  0137AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10543  0137AE  ECCB  F0BD         	call	_strcat	;wreg free
 10544                           
 10545                           ;ring_buffer_interface.c: 147: }
 10546                           
 10547                           ;ring_buffer_interface.c: 146: break;
 10548  0137B2  D015               	goto	l1068
 10549  0137B4                     l1066:
 10550  0137B4  0101               	movlb	1	; () banked
 10551  0137B6  51AB               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 10552                           
 10553                           ; Switch size 1, requested type "space"
 10554                           ; Number of cases is 6, Range of values is 0 to 5
 10555                           ; switch strategies available:
 10556                           ; Name         Instructions Cycles
 10557                           ; simple_byte           19    10 (average)
 10558                           ;	Chosen strategy is simple_byte
 10559  0137B8  0A00               	xorlw	0	; case 0
 10560  0137BA  B4D8               	btfsc	status,2,c
 10561  0137BC  D7A7               	goto	l1067
 10562  0137BE  0A01               	xorlw	1	; case 1
 10563  0137C0  B4D8               	btfsc	status,2,c
 10564  0137C2  D7B0               	goto	l1069
 10565  0137C4  0A03               	xorlw	3	; case 2
 10566  0137C6  B4D8               	btfsc	status,2,c
 10567  0137C8  D7B9               	goto	l1070
 10568  0137CA  0A01               	xorlw	1	; case 3
 10569  0137CC  B4D8               	btfsc	status,2,c
 10570  0137CE  D7C2               	goto	l1071
 10571  0137D0  0A07               	xorlw	7	; case 4
 10572  0137D2  B4D8               	btfsc	status,2,c
 10573  0137D4  D7CB               	goto	l1072
 10574  0137D6  0A01               	xorlw	1	; case 5
 10575  0137D8  B4D8               	btfsc	status,2,c
 10576  0137DA  D7D4               	goto	l1073
 10577  0137DC  D7DF               	goto	l1074
 10578  0137DE                     l1068:
 10579                           
 10580                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 10581                           
 10582                           ; BSR set to: 1
 10583  0137DE  0EAD               	movlw	low terminal_textAttributes@output_buff
 10584  0137E0  0101               	movlb	1	; () banked
 10585  0137E2  6F17               	movwf	strcat@to& (0+255),b
 10586  0137E4  0E01               	movlw	high terminal_textAttributes@output_buff
 10587  0137E6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10588  0137E8  0EFB               	movlw	low STR_19
 10589  0137EA  6F19               	movwf	strcat@from& (0+255),b
 10590  0137EC  0EFF               	movlw	high STR_19
 10591  0137EE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10592  0137F0  ECCB  F0BD         	call	_strcat	;wreg free
 10593                           
 10594                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 10595  0137F4  D06C               	goto	l1075
 10596  0137F6                     
 10597                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 10598  0137F6  0EAD               	movlw	low terminal_textAttributes@output_buff
 10599  0137F8  0101               	movlb	1	; () banked
 10600  0137FA  6F17               	movwf	strcat@to& (0+255),b
 10601  0137FC  0E01               	movlw	high terminal_textAttributes@output_buff
 10602  0137FE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10603  013800  0EC9               	movlw	low STR_20
 10604  013802  6F19               	movwf	strcat@from& (0+255),b
 10605  013804  0EFF               	movlw	high STR_20
 10606  013806  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10607  013808  ECCB  F0BD         	call	_strcat	;wreg free
 10608                           
 10609                           ;ring_buffer_interface.c: 155: break;
 10610  01380C  D07B               	goto	l1077
 10611  01380E                     
 10612                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 10613  01380E  0EAD               	movlw	low terminal_textAttributes@output_buff
 10614  013810  0101               	movlb	1	; () banked
 10615  013812  6F17               	movwf	strcat@to& (0+255),b
 10616  013814  0E01               	movlw	high terminal_textAttributes@output_buff
 10617  013816  6F18               	movwf	(strcat@to+1)& (0+255),b
 10618  013818  0ECC               	movlw	low STR_21
 10619  01381A  6F19               	movwf	strcat@from& (0+255),b
 10620  01381C  0EFF               	movlw	high STR_21
 10621  01381E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10622  013820  ECCB  F0BD         	call	_strcat	;wreg free
 10623                           
 10624                           ;ring_buffer_interface.c: 158: break;
 10625  013824  D06F               	goto	l1077
 10626  013826                     
 10627                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 10628  013826  0EAD               	movlw	low terminal_textAttributes@output_buff
 10629  013828  0101               	movlb	1	; () banked
 10630  01382A  6F17               	movwf	strcat@to& (0+255),b
 10631  01382C  0E01               	movlw	high terminal_textAttributes@output_buff
 10632  01382E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10633  013830  0ED2               	movlw	low STR_22
 10634  013832  6F19               	movwf	strcat@from& (0+255),b
 10635  013834  0EFF               	movlw	high STR_22
 10636  013836  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10637  013838  ECCB  F0BD         	call	_strcat	;wreg free
 10638                           
 10639                           ;ring_buffer_interface.c: 161: break;
 10640  01383C  D063               	goto	l1077
 10641  01383E                     
 10642                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 10643  01383E  0EAD               	movlw	low terminal_textAttributes@output_buff
 10644  013840  0101               	movlb	1	; () banked
 10645  013842  6F17               	movwf	strcat@to& (0+255),b
 10646  013844  0E01               	movlw	high terminal_textAttributes@output_buff
 10647  013846  6F18               	movwf	(strcat@to+1)& (0+255),b
 10648  013848  0ED8               	movlw	low STR_23
 10649  01384A  6F19               	movwf	strcat@from& (0+255),b
 10650  01384C  0EFF               	movlw	high STR_23
 10651  01384E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10652  013850  ECCB  F0BD         	call	_strcat	;wreg free
 10653                           
 10654                           ;ring_buffer_interface.c: 164: break;
 10655  013854  D057               	goto	l1077
 10656  013856                     
 10657                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 10658  013856  0EAD               	movlw	low terminal_textAttributes@output_buff
 10659  013858  0101               	movlb	1	; () banked
 10660  01385A  6F17               	movwf	strcat@to& (0+255),b
 10661  01385C  0E01               	movlw	high terminal_textAttributes@output_buff
 10662  01385E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10663  013860  0EDE               	movlw	low STR_24
 10664  013862  6F19               	movwf	strcat@from& (0+255),b
 10665  013864  0EFF               	movlw	high STR_24
 10666  013866  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10667  013868  ECCB  F0BD         	call	_strcat	;wreg free
 10668                           
 10669                           ;ring_buffer_interface.c: 167: break;
 10670  01386C  D04B               	goto	l1077
 10671  01386E                     
 10672                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10673  01386E  0EAD               	movlw	low terminal_textAttributes@output_buff
 10674  013870  0101               	movlb	1	; () banked
 10675  013872  6F17               	movwf	strcat@to& (0+255),b
 10676  013874  0E01               	movlw	high terminal_textAttributes@output_buff
 10677  013876  6F18               	movwf	(strcat@to+1)& (0+255),b
 10678  013878  0EE4               	movlw	low STR_25
 10679  01387A  6F19               	movwf	strcat@from& (0+255),b
 10680  01387C  0EFF               	movlw	high STR_25
 10681  01387E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10682  013880  ECCB  F0BD         	call	_strcat	;wreg free
 10683                           
 10684                           ;ring_buffer_interface.c: 170: break;
 10685  013884  D03F               	goto	l1077
 10686  013886                     
 10687                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10688  013886  0EAD               	movlw	low terminal_textAttributes@output_buff
 10689  013888  0101               	movlb	1	; () banked
 10690  01388A  6F17               	movwf	strcat@to& (0+255),b
 10691  01388C  0E01               	movlw	high terminal_textAttributes@output_buff
 10692  01388E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10693  013890  0EEA               	movlw	low STR_26
 10694  013892  6F19               	movwf	strcat@from& (0+255),b
 10695  013894  0EFF               	movlw	high STR_26
 10696  013896  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10697  013898  ECCB  F0BD         	call	_strcat	;wreg free
 10698                           
 10699                           ;ring_buffer_interface.c: 173: break;
 10700  01389C  D033               	goto	l1077
 10701  01389E                     
 10702                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10703  01389E  0EAD               	movlw	low terminal_textAttributes@output_buff
 10704  0138A0  0101               	movlb	1	; () banked
 10705  0138A2  6F17               	movwf	strcat@to& (0+255),b
 10706  0138A4  0E01               	movlw	high terminal_textAttributes@output_buff
 10707  0138A6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10708  0138A8  0EF0               	movlw	low STR_27
 10709  0138AA  6F19               	movwf	strcat@from& (0+255),b
 10710  0138AC  0EFF               	movlw	high STR_27
 10711  0138AE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10712  0138B0  ECCB  F0BD         	call	_strcat	;wreg free
 10713                           
 10714                           ;ring_buffer_interface.c: 176: break;
 10715  0138B4  D027               	goto	l1077
 10716  0138B6                     
 10717                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10718  0138B6  0EAD               	movlw	low terminal_textAttributes@output_buff
 10719  0138B8  0101               	movlb	1	; () banked
 10720  0138BA  6F17               	movwf	strcat@to& (0+255),b
 10721  0138BC  0E01               	movlw	high terminal_textAttributes@output_buff
 10722  0138BE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10723  0138C0  0EF0               	movlw	low STR_27
 10724  0138C2  6F19               	movwf	strcat@from& (0+255),b
 10725  0138C4  0EFF               	movlw	high STR_27
 10726  0138C6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10727  0138C8  ECCB  F0BD         	call	_strcat	;wreg free
 10728                           
 10729                           ;ring_buffer_interface.c: 181: }
 10730                           
 10731                           ;ring_buffer_interface.c: 180: break;
 10732  0138CC  D01B               	goto	l1077
 10733  0138CE                     l1075:
 10734  0138CE  0101               	movlb	1	; () banked
 10735  0138D0  51AC               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10736                           
 10737                           ; Switch size 1, requested type "space"
 10738                           ; Number of cases is 8, Range of values is 0 to 7
 10739                           ; switch strategies available:
 10740                           ; Name         Instructions Cycles
 10741                           ; simple_byte           25    13 (average)
 10742                           ;	Chosen strategy is simple_byte
 10743  0138D2  0A00               	xorlw	0	; case 0
 10744  0138D4  B4D8               	btfsc	status,2,c
 10745  0138D6  D78F               	goto	l1076
 10746  0138D8  0A01               	xorlw	1	; case 1
 10747  0138DA  B4D8               	btfsc	status,2,c
 10748  0138DC  D798               	goto	l1078
 10749  0138DE  0A03               	xorlw	3	; case 2
 10750  0138E0  B4D8               	btfsc	status,2,c
 10751  0138E2  D7A1               	goto	l1079
 10752  0138E4  0A01               	xorlw	1	; case 3
 10753  0138E6  B4D8               	btfsc	status,2,c
 10754  0138E8  D7AA               	goto	l1080
 10755  0138EA  0A07               	xorlw	7	; case 4
 10756  0138EC  B4D8               	btfsc	status,2,c
 10757  0138EE  D7B3               	goto	l1081
 10758  0138F0  0A01               	xorlw	1	; case 5
 10759  0138F2  B4D8               	btfsc	status,2,c
 10760  0138F4  D7BC               	goto	l1082
 10761  0138F6  0A03               	xorlw	3	; case 6
 10762  0138F8  B4D8               	btfsc	status,2,c
 10763  0138FA  D7C5               	goto	l1083
 10764  0138FC  0A01               	xorlw	1	; case 7
 10765  0138FE  B4D8               	btfsc	status,2,c
 10766  013900  D7CE               	goto	l1084
 10767  013902  D7D9               	goto	l1085
 10768  013904                     l1077:
 10769                           
 10770                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10771                           
 10772                           ; BSR set to: 1
 10773  013904  0EAD               	movlw	low terminal_textAttributes@output_buff
 10774  013906  0101               	movlb	1	; () banked
 10775  013908  6F17               	movwf	strcat@to& (0+255),b
 10776  01390A  0E01               	movlw	high terminal_textAttributes@output_buff
 10777  01390C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10778  01390E  0EFB               	movlw	low STR_19
 10779  013910  6F19               	movwf	strcat@from& (0+255),b
 10780  013912  0EFF               	movlw	high STR_19
 10781  013914  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10782  013916  ECCB  F0BD         	call	_strcat	;wreg free
 10783                           
 10784                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10785  01391A  D06C               	goto	l1086
 10786  01391C                     
 10787                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10788  01391C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10789  01391E  0101               	movlb	1	; () banked
 10790  013920  6F17               	movwf	strcat@to& (0+255),b
 10791  013922  0E01               	movlw	high terminal_textAttributes@output_buff
 10792  013924  6F18               	movwf	(strcat@to+1)& (0+255),b
 10793  013926  0E4D               	movlw	low (STR_127+9)
 10794  013928  6F19               	movwf	strcat@from& (0+255),b
 10795  01392A  0EFF               	movlw	high (STR_127+9)
 10796  01392C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10797  01392E  ECCB  F0BD         	call	_strcat	;wreg free
 10798                           
 10799                           ;ring_buffer_interface.c: 189: break;
 10800  013932  D07B               	goto	l1088
 10801  013934                     
 10802                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10803  013934  0EAD               	movlw	low terminal_textAttributes@output_buff
 10804  013936  0101               	movlb	1	; () banked
 10805  013938  6F17               	movwf	strcat@to& (0+255),b
 10806  01393A  0E01               	movlw	high terminal_textAttributes@output_buff
 10807  01393C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10808  01393E  0ECF               	movlw	low STR_31
 10809  013940  6F19               	movwf	strcat@from& (0+255),b
 10810  013942  0EFF               	movlw	high STR_31
 10811  013944  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10812  013946  ECCB  F0BD         	call	_strcat	;wreg free
 10813                           
 10814                           ;ring_buffer_interface.c: 192: break;
 10815  01394A  D06F               	goto	l1088
 10816  01394C                     
 10817                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10818  01394C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10819  01394E  0101               	movlb	1	; () banked
 10820  013950  6F17               	movwf	strcat@to& (0+255),b
 10821  013952  0E01               	movlw	high terminal_textAttributes@output_buff
 10822  013954  6F18               	movwf	(strcat@to+1)& (0+255),b
 10823  013956  0ED5               	movlw	low STR_32
 10824  013958  6F19               	movwf	strcat@from& (0+255),b
 10825  01395A  0EFF               	movlw	high STR_32
 10826  01395C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10827  01395E  ECCB  F0BD         	call	_strcat	;wreg free
 10828                           
 10829                           ;ring_buffer_interface.c: 195: break;
 10830  013962  D063               	goto	l1088
 10831  013964                     
 10832                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10833  013964  0EAD               	movlw	low terminal_textAttributes@output_buff
 10834  013966  0101               	movlb	1	; () banked
 10835  013968  6F17               	movwf	strcat@to& (0+255),b
 10836  01396A  0E01               	movlw	high terminal_textAttributes@output_buff
 10837  01396C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10838  01396E  0EDB               	movlw	low STR_33
 10839  013970  6F19               	movwf	strcat@from& (0+255),b
 10840  013972  0EFF               	movlw	high STR_33
 10841  013974  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10842  013976  ECCB  F0BD         	call	_strcat	;wreg free
 10843                           
 10844                           ;ring_buffer_interface.c: 198: break;
 10845  01397A  D057               	goto	l1088
 10846  01397C                     
 10847                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10848  01397C  0EAD               	movlw	low terminal_textAttributes@output_buff
 10849  01397E  0101               	movlb	1	; () banked
 10850  013980  6F17               	movwf	strcat@to& (0+255),b
 10851  013982  0E01               	movlw	high terminal_textAttributes@output_buff
 10852  013984  6F18               	movwf	(strcat@to+1)& (0+255),b
 10853  013986  0EE1               	movlw	low STR_34
 10854  013988  6F19               	movwf	strcat@from& (0+255),b
 10855  01398A  0EFF               	movlw	high STR_34
 10856  01398C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10857  01398E  ECCB  F0BD         	call	_strcat	;wreg free
 10858                           
 10859                           ;ring_buffer_interface.c: 201: break;
 10860  013992  D04B               	goto	l1088
 10861  013994                     
 10862                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10863  013994  0EAD               	movlw	low terminal_textAttributes@output_buff
 10864  013996  0101               	movlb	1	; () banked
 10865  013998  6F17               	movwf	strcat@to& (0+255),b
 10866  01399A  0E01               	movlw	high terminal_textAttributes@output_buff
 10867  01399C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10868  01399E  0EE7               	movlw	low STR_35
 10869  0139A0  6F19               	movwf	strcat@from& (0+255),b
 10870  0139A2  0EFF               	movlw	high STR_35
 10871  0139A4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10872  0139A6  ECCB  F0BD         	call	_strcat	;wreg free
 10873                           
 10874                           ;ring_buffer_interface.c: 204: break;
 10875  0139AA  D03F               	goto	l1088
 10876  0139AC                     
 10877                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10878  0139AC  0EAD               	movlw	low terminal_textAttributes@output_buff
 10879  0139AE  0101               	movlb	1	; () banked
 10880  0139B0  6F17               	movwf	strcat@to& (0+255),b
 10881  0139B2  0E01               	movlw	high terminal_textAttributes@output_buff
 10882  0139B4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10883  0139B6  0EED               	movlw	low STR_36
 10884  0139B8  6F19               	movwf	strcat@from& (0+255),b
 10885  0139BA  0EFF               	movlw	high STR_36
 10886  0139BC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10887  0139BE  ECCB  F0BD         	call	_strcat	;wreg free
 10888                           
 10889                           ;ring_buffer_interface.c: 207: break;
 10890  0139C2  D033               	goto	l1088
 10891  0139C4                     
 10892                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10893  0139C4  0EAD               	movlw	low terminal_textAttributes@output_buff
 10894  0139C6  0101               	movlb	1	; () banked
 10895  0139C8  6F17               	movwf	strcat@to& (0+255),b
 10896  0139CA  0E01               	movlw	high terminal_textAttributes@output_buff
 10897  0139CC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10898  0139CE  0EF3               	movlw	low STR_37
 10899  0139D0  6F19               	movwf	strcat@from& (0+255),b
 10900  0139D2  0EFF               	movlw	high STR_37
 10901  0139D4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10902  0139D6  ECCB  F0BD         	call	_strcat	;wreg free
 10903                           
 10904                           ;ring_buffer_interface.c: 210: break;
 10905  0139DA  D027               	goto	l1088
 10906  0139DC                     
 10907                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10908  0139DC  0EAD               	movlw	low terminal_textAttributes@output_buff
 10909  0139DE  0101               	movlb	1	; () banked
 10910  0139E0  6F17               	movwf	strcat@to& (0+255),b
 10911  0139E2  0E01               	movlw	high terminal_textAttributes@output_buff
 10912  0139E4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10913  0139E6  0EF3               	movlw	low STR_37
 10914  0139E8  6F19               	movwf	strcat@from& (0+255),b
 10915  0139EA  0EFF               	movlw	high STR_37
 10916  0139EC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10917  0139EE  ECCB  F0BD         	call	_strcat	;wreg free
 10918                           
 10919                           ;ring_buffer_interface.c: 215: }
 10920                           
 10921                           ;ring_buffer_interface.c: 214: break;
 10922  0139F2  D01B               	goto	l1088
 10923  0139F4                     l1086:
 10924  0139F4  0101               	movlb	1	; () banked
 10925  0139F6  51AA               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10926                           
 10927                           ; Switch size 1, requested type "space"
 10928                           ; Number of cases is 8, Range of values is 0 to 7
 10929                           ; switch strategies available:
 10930                           ; Name         Instructions Cycles
 10931                           ; simple_byte           25    13 (average)
 10932                           ;	Chosen strategy is simple_byte
 10933  0139F8  0A00               	xorlw	0	; case 0
 10934  0139FA  B4D8               	btfsc	status,2,c
 10935  0139FC  D78F               	goto	l1087
 10936  0139FE  0A01               	xorlw	1	; case 1
 10937  013A00  B4D8               	btfsc	status,2,c
 10938  013A02  D798               	goto	l1089
 10939  013A04  0A03               	xorlw	3	; case 2
 10940  013A06  B4D8               	btfsc	status,2,c
 10941  013A08  D7A1               	goto	l1090
 10942  013A0A  0A01               	xorlw	1	; case 3
 10943  013A0C  B4D8               	btfsc	status,2,c
 10944  013A0E  D7AA               	goto	l1091
 10945  013A10  0A07               	xorlw	7	; case 4
 10946  013A12  B4D8               	btfsc	status,2,c
 10947  013A14  D7B3               	goto	l1092
 10948  013A16  0A01               	xorlw	1	; case 5
 10949  013A18  B4D8               	btfsc	status,2,c
 10950  013A1A  D7BC               	goto	l1093
 10951  013A1C  0A03               	xorlw	3	; case 6
 10952  013A1E  B4D8               	btfsc	status,2,c
 10953  013A20  D7C5               	goto	l1094
 10954  013A22  0A01               	xorlw	1	; case 7
 10955  013A24  B4D8               	btfsc	status,2,c
 10956  013A26  D7CE               	goto	l1095
 10957  013A28  D7D9               	goto	l1096
 10958  013A2A                     l1088:
 10959                           
 10960                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 10961                           
 10962                           ; BSR set to: 1
 10963  013A2A  0EAD               	movlw	low terminal_textAttributes@output_buff
 10964  013A2C  0101               	movlb	1	; () banked
 10965  013A2E  6F17               	movwf	strcat@to& (0+255),b
 10966  013A30  0E01               	movlw	high terminal_textAttributes@output_buff
 10967  013A32  6F18               	movwf	(strcat@to+1)& (0+255),b
 10968  013A34  0EFD               	movlw	low STR_39
 10969  013A36  6F19               	movwf	strcat@from& (0+255),b
 10970  013A38  0EFF               	movlw	high STR_39
 10971  013A3A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10972  013A3C  ECCB  F0BD         	call	_strcat	;wreg free
 10973                           
 10974                           ;ring_buffer_interface.c: 219: printf(output_buff);
 10975  013A40  0EAD               	movlw	low terminal_textAttributes@output_buff
 10976  013A42  0101               	movlb	1	; () banked
 10977  013A44  6F7C               	movwf	printf@f& (0+255),b
 10978  013A46  0E01               	movlw	high terminal_textAttributes@output_buff
 10979  013A48  6F7D               	movwf	(printf@f+1)& (0+255),b
 10980  013A4A  ECD0  F086         	call	_printf	;wreg free
 10981  013A4E  0012               	return		;funcret
 10982  013A50                     __end_of_terminal_textAttributes:
 10983                           	opt stack 0
 10984                           tblptru	equ	0xFF8
 10985                           tblptrh	equ	0xFF7
 10986                           tblptrl	equ	0xFF6
 10987                           tablat	equ	0xFF5
 10988                           intcon	equ	0xFF2
 10989                           postinc0	equ	0xFEE
 10990                           wreg	equ	0xFE8
 10991                           indf1	equ	0xFE7
 10992                           postdec1	equ	0xFE5
 10993                           fsr1h	equ	0xFE2
 10994                           fsr1l	equ	0xFE1
 10995                           indf2	equ	0xFDF
 10996                           postinc2	equ	0xFDE
 10997                           fsr2h	equ	0xFDA
 10998                           fsr2l	equ	0xFD9
 10999                           status	equ	0xFD8
 11000                           
 11001 ;; *************** function _strncpy *****************
 11002 ;; Defined at:
 11003 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11006 ;;		 -> terminal_textAttributes@output_buff(15), 
 11007 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11008 ;;		 -> STR_11(3), 
 11009 ;;  size            2   27[BANK1 ] unsigned int 
 11010 ;; Auto vars:     Size  Location     Type
 11011 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 11012 ;;		 -> terminal_textAttributes@output_buff(15), 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  2   23[BANK1 ] PTR unsigned char 
 11015 ;; Registers used:
 11016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11022 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11023 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;Total ram usage:        8 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:   13
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_terminal_textAttributes
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           	psect	text6
 11037  017808                     __ptext6:
 11038                           	opt stack 0
 11039  017808                     _strncpy:
 11040                           	opt stack 15
 11041                           
 11042                           ;incstack = 0
 11043  017808  C117  F11D         	movff	strncpy@to,strncpy@cp
 11044  01780C  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 11045  017810  D018               	goto	l2183
 11046  017812  0101               	movlb	1	; () banked
 11047  017814  071B               	decf	strncpy@size& (0+255),f,b
 11048  017816  A0D8               	btfss	status,0,c
 11049  017818  071C               	decf	(strncpy@size+1)& (0+255),f,b
 11050                           
 11051                           ; BSR set to: 1
 11052  01781A  C119  FFF6         	movff	strncpy@from,tblptrl
 11053  01781E  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 11054  017822  4B19               	infsnz	strncpy@from& (0+255),f,b
 11055  017824  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 11056  017826                     	if	0	;tblptru may be non-zero
 11057  017826                     	endif
 11058  017826                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11059  017826  0E00               	movlw	low (__mediumconst shr (0+16))
 11060  017828  6EF8               	movwf	tblptru,c
 11061  01782A                     	endif
 11062  01782A  C11D  FFD9         	movff	strncpy@cp,fsr2l
 11063  01782E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 11064  017832  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 11065  017834  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 11066  017836  0008               	tblrd		*
 11067  017838  CFF5 FFDF          	movff	tablat,indf2
 11068  01783C  50DF               	movf	indf2,w,c
 11069  01783E  B4D8               	btfsc	status,2,c
 11070  017840  D00E               	goto	l2185
 11071  017842                     l2183:
 11072                           
 11073                           ; BSR set to: 1
 11074                           
 11075                           ; BSR set to: 1
 11076  017842  0101               	movlb	1	; () banked
 11077  017844  511B               	movf	strncpy@size& (0+255),w,b
 11078  017846  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 11079  017848  B4D8               	btfsc	status,2,c
 11080  01784A  D009               	goto	l2185
 11081  01784C  D7E2               	goto	l2182
 11082  01784E                     l12270:
 11083                           
 11084                           ; BSR set to: 1
 11085  01784E  C11D  FFD9         	movff	strncpy@cp,fsr2l
 11086  017852  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 11087  017856  0E00               	movlw	0
 11088  017858  6EDF               	movwf	indf2,c
 11089                           
 11090                           ; BSR set to: 1
 11091  01785A  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 11092  01785C  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 11093  01785E                     l2185:
 11094                           
 11095                           ; BSR set to: 1
 11096                           
 11097                           ; BSR set to: 1
 11098  01785E  071B               	decf	strncpy@size& (0+255),f,b
 11099  017860  A0D8               	btfss	status,0,c
 11100  017862  071C               	decf	(strncpy@size+1)& (0+255),f,b
 11101  017864  291B               	incf	strncpy@size& (0+255),w,b
 11102  017866  E1F3               	bnz	l12270
 11103  017868  291C               	incf	(strncpy@size+1)& (0+255),w,b
 11104  01786A  B4D8               	btfsc	status,2,c
 11105  01786C  0012               	return	
 11106  01786E  D7EF               	goto	l2186
 11107  017870                     __end_of_strncpy:
 11108                           	opt stack 0
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           intcon	equ	0xFF2
 11114                           postinc0	equ	0xFEE
 11115                           wreg	equ	0xFE8
 11116                           indf1	equ	0xFE7
 11117                           postdec1	equ	0xFE5
 11118                           fsr1h	equ	0xFE2
 11119                           fsr1l	equ	0xFE1
 11120                           indf2	equ	0xFDF
 11121                           postinc2	equ	0xFDE
 11122                           fsr2h	equ	0xFDA
 11123                           fsr2l	equ	0xFD9
 11124                           status	equ	0xFD8
 11125                           
 11126 ;; *************** function _strcat *****************
 11127 ;; Defined at:
 11128 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11131 ;;		 -> terminal_textAttributes@output_buff(15), 
 11132 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11133 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 11134 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 11135 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 11136 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 11137 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 11138 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 11139 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11142 ;;		 -> terminal_textAttributes@output_buff(15), 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  2   23[BANK1 ] PTR unsigned char 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11152 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11153 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11155 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11156 ;;Total ram usage:        6 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:   13
 11159 ;; This function calls:
 11160 ;;		Nothing
 11161 ;; This function is called by:
 11162 ;;		_terminal_textAttributes
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text7
 11167  017B96                     __ptext7:
 11168                           	opt stack 0
 11169  017B96                     _strcat:
 11170                           	opt stack 15
 11171                           
 11172                           ; BSR set to: 1
 11173                           ;incstack = 0
 11174  017B96  C117  F11B         	movff	strcat@to,strcat@cp
 11175  017B9A  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 11176  017B9E  D003               	goto	l2152
 11177  017BA0  0101               	movlb	1	; () banked
 11178  017BA2  4B1B               	infsnz	strcat@cp& (0+255),f,b
 11179  017BA4  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 11180  017BA6                     l2152:
 11181                           
 11182                           ; BSR set to: 1
 11183  017BA6  C11B  FFD9         	movff	strcat@cp,fsr2l
 11184  017BAA  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 11185  017BAE  50DF               	movf	indf2,w,c
 11186  017BB0  B4D8               	btfsc	status,2,c
 11187  017BB2  D006               	goto	l2155
 11188  017BB4  D7F5               	goto	l2153
 11189  017BB6  0101               	movlb	1	; () banked
 11190  017BB8  4B1B               	infsnz	strcat@cp& (0+255),f,b
 11191  017BBA  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 11192  017BBC  4B19               	infsnz	strcat@from& (0+255),f,b
 11193  017BBE  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 11194  017BC0                     l2155:
 11195                           
 11196                           ; BSR set to: 1
 11197  017BC0  C119  FFF6         	movff	strcat@from,tblptrl
 11198  017BC4  C11A  FFF7         	movff	strcat@from+1,tblptrh
 11199  017BC8                     	if	0	;tblptru may be non-zero
 11200  017BC8                     	endif
 11201  017BC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11202  017BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 11203  017BCA  6EF8               	movwf	tblptru,c
 11204  017BCC                     	endif
 11205  017BCC  C11B  FFD9         	movff	strcat@cp,fsr2l
 11206  017BD0  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 11207  017BD4  0008               	tblrd		*
 11208  017BD6  CFF5 FFDF          	movff	tablat,indf2
 11209  017BDA  50DF               	movf	indf2,w,c
 11210  017BDC  B4D8               	btfsc	status,2,c
 11211  017BDE  0012               	return	
 11212  017BE0  D7EA               	goto	l2156
 11213  017BE2                     __end_of_strcat:
 11214                           	opt stack 0
 11215                           tblptru	equ	0xFF8
 11216                           tblptrh	equ	0xFF7
 11217                           tblptrl	equ	0xFF6
 11218                           tablat	equ	0xFF5
 11219                           intcon	equ	0xFF2
 11220                           postinc0	equ	0xFEE
 11221                           wreg	equ	0xFE8
 11222                           indf1	equ	0xFE7
 11223                           postdec1	equ	0xFE5
 11224                           fsr1h	equ	0xFE2
 11225                           fsr1l	equ	0xFE1
 11226                           indf2	equ	0xFDF
 11227                           postinc2	equ	0xFDE
 11228                           fsr2h	equ	0xFDA
 11229                           fsr2l	equ	0xFD9
 11230                           status	equ	0xFD8
 11231                           
 11232 ;; *************** function _terminal_printNewline *****************
 11233 ;; Defined at:
 11234 ;;		line 230 in file "ring_buffer_interface.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      void 
 11241 ;; Registers used:
 11242 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:   16
 11255 ;; This function calls:
 11256 ;;		_printf
 11257 ;; This function is called by:
 11258 ;;		_ringBufferLUT
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text8
 11263  0182FE                     __ptext8:
 11264                           	opt stack 0
 11265  0182FE                     _terminal_printNewline:
 11266                           	opt stack 12
 11267                           
 11268                           ;ring_buffer_interface.c: 232: printf("\n\r");
 11269                           
 11270                           ;incstack = 0
 11271  0182FE  0E5E               	movlw	low (STR_115+68)
 11272  018300  0101               	movlb	1	; () banked
 11273  018302  6F7C               	movwf	printf@f& (0+255),b
 11274  018304  0EF6               	movlw	high (STR_115+68)
 11275  018306  6F7D               	movwf	(printf@f+1)& (0+255),b
 11276  018308  ECD0  F086         	call	_printf	;wreg free
 11277  01830C  0012               	return		;funcret
 11278  01830E                     __end_of_terminal_printNewline:
 11279                           	opt stack 0
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           intcon	equ	0xFF2
 11285                           postinc0	equ	0xFEE
 11286                           wreg	equ	0xFE8
 11287                           indf1	equ	0xFE7
 11288                           postdec1	equ	0xFE5
 11289                           fsr1h	equ	0xFE2
 11290                           fsr1l	equ	0xFE1
 11291                           indf2	equ	0xFDF
 11292                           postinc2	equ	0xFDE
 11293                           fsr2h	equ	0xFDA
 11294                           fsr2l	equ	0xFD9
 11295                           status	equ	0xFD8
 11296                           
 11297 ;; *************** function _strstr *****************
 11298 ;; Defined at:
 11299 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 11302 ;;		 -> NULL(0), line(64), 
 11303 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 11304 ;;		 -> STR_109(25), 
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;		None
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  2   38[BANK1 ] PTR unsigned char 
 11309 ;; Registers used:
 11310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11316 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;Total ram usage:        4 bytes
 11321 ;; Hardware stack levels used:    1
 11322 ;; Hardware stack levels required when called:   14
 11323 ;; This function calls:
 11324 ;;		_strchr
 11325 ;;		_strlen
 11326 ;;		_strncmp
 11327 ;; This function is called by:
 11328 ;;		_ringBufferLUT
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text9
 11333  0172BC                     __ptext9:
 11334                           	opt stack 0
 11335  0172BC                     _strstr:
 11336                           	opt stack 14
 11337                           
 11338                           ;incstack = 0
 11339  0172BC  D034               	goto	l2197
 11340  0172BE  C126  F11D         	movff	strstr@s1,strncmp@s1
 11341  0172C2  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 11342  0172C6  C128  F11F         	movff	strstr@s2,strncmp@s2
 11343  0172CA  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 11344  0172CE  C128  F117         	movff	strstr@s2,strlen@s
 11345  0172D2  C129  F118         	movff	strstr@s2+1,strlen@s+1
 11346  0172D6  ECFF  F0BC         	call	_strlen	;wreg free
 11347  0172DA  C117  F121         	movff	?_strlen,strncmp@len
 11348  0172DE  C118  F122         	movff	?_strlen+1,strncmp@len+1
 11349  0172E2  ECD0  F0B8         	call	_strncmp	;wreg free
 11350  0172E6  0101               	movlb	1	; () banked
 11351  0172E8  511D               	movf	?_strncmp& (0+255),w,b
 11352  0172EA  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 11353  0172EC  A4D8               	btfss	status,2,c
 11354  0172EE  D005               	goto	l2199
 11355                           
 11356                           ; BSR set to: 1
 11357  0172F0  C126  F126         	movff	strstr@s1,?_strstr
 11358  0172F4  C127  F127         	movff	strstr@s1+1,?_strstr+1
 11359                           
 11360                           ; BSR set to: 1
 11361  0172F8  0012               	return	
 11362  0172FA                     l2199:
 11363                           
 11364                           ; BSR set to: 1
 11365                           
 11366                           ; BSR set to: 1
 11367  0172FA  0E01               	movlw	1
 11368  0172FC  2526               	addwf	strstr@s1& (0+255),w,b
 11369  0172FE  6F17               	movwf	strchr@ptr& (0+255),b
 11370  017300  0E00               	movlw	0
 11371  017302  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 11372  017304  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 11373  017306  C128  FFF6         	movff	strstr@s2,tblptrl
 11374  01730A  C129  FFF7         	movff	strstr@s2+1,tblptrh
 11375  01730E                     	if	0	;tblptru may be non-zero
 11376  01730E                     	endif
 11377  01730E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11378  01730E  0E00               	movlw	low (__mediumconst shr (0+16))
 11379  017310  6EF8               	movwf	tblptru,c
 11380  017312                     	endif
 11381  017312  0008               	tblrd		*
 11382  017314  50F5               	movf	tablat,w,c
 11383  017316  6F19               	movwf	strchr@chr& (0+255),b
 11384  017318  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 11385  01731A  EC47  F0BF         	call	_strchr	;wreg free
 11386  01731E  C117  F126         	movff	?_strchr,strstr@s1
 11387  017322  C118  F127         	movff	?_strchr+1,strstr@s1+1
 11388  017326                     l2197:
 11389  017326  0101               	movlb	1	; () banked
 11390  017328  5126               	movf	strstr@s1& (0+255),w,b
 11391  01732A  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 11392  01732C  B4D8               	btfsc	status,2,c
 11393  01732E  D007               	goto	u15310
 11394                           
 11395                           ; BSR set to: 1
 11396  017330  C126  FFD9         	movff	strstr@s1,fsr2l
 11397  017334  C127  FFDA         	movff	strstr@s1+1,fsr2h
 11398  017338  50DF               	movf	indf2,w,c
 11399  01733A  A4D8               	btfss	status,2,c
 11400  01733C  D7C0               	goto	l2198
 11401  01733E                     u15310:
 11402                           
 11403                           ; BSR set to: 1
 11404                           
 11405                           ; BSR set to: 1
 11406                           
 11407                           ; BSR set to: 1
 11408  01733E  0E00               	movlw	0
 11409  017340  6F26               	movwf	?_strstr& (0+255),b
 11410  017342  0E00               	movlw	0
 11411  017344  6F27               	movwf	(?_strstr+1)& (0+255),b
 11412  017346  0012               	return	
 11413  017348                     __end_of_strstr:
 11414                           	opt stack 0
 11415                           tblptru	equ	0xFF8
 11416                           tblptrh	equ	0xFF7
 11417                           tblptrl	equ	0xFF6
 11418                           tablat	equ	0xFF5
 11419                           intcon	equ	0xFF2
 11420                           postinc0	equ	0xFEE
 11421                           wreg	equ	0xFE8
 11422                           indf1	equ	0xFE7
 11423                           postdec1	equ	0xFE5
 11424                           fsr1h	equ	0xFE2
 11425                           fsr1l	equ	0xFE1
 11426                           indf2	equ	0xFDF
 11427                           postinc2	equ	0xFDE
 11428                           fsr2h	equ	0xFDA
 11429                           fsr2l	equ	0xFD9
 11430                           status	equ	0xFD8
 11431                           
 11432 ;; *************** function _strncmp *****************
 11433 ;; Defined at:
 11434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 11437 ;;		 -> NULL(0), line(64), 
 11438 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 11439 ;;		 -> STR_109(25), 
 11440 ;;  len             2   33[BANK1 ] unsigned int 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  2   29[BANK1 ] int 
 11445 ;; Registers used:
 11446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11452 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11454 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11455 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11456 ;;Total ram usage:        9 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:   13
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_strstr
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text10
 11467  0171A0                     __ptext10:
 11468                           	opt stack 0
 11469  0171A0                     _strncmp:
 11470                           	opt stack 14
 11471                           
 11472                           ; BSR set to: 1
 11473                           ;incstack = 0
 11474  0171A0  D039               	goto	l2256
 11475  0171A2                     l12486:
 11476  0171A2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11477  0171A6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11478  0171AA  50DF               	movf	indf2,w,c
 11479  0171AC  B4D8               	btfsc	status,2,c
 11480  0171AE  D012               	goto	u15020
 11481  0171B0  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11482  0171B4  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11483  0171B8  50DF               	movf	indf2,w,c
 11484  0171BA  0101               	movlb	1	; () banked
 11485  0171BC  6F23               	movwf	??_strncmp& (0+255),b
 11486  0171BE  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11487  0171C2  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11488  0171C6                     	if	0	;tblptru may be non-zero
 11489  0171C6                     	endif
 11490  0171C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11491  0171C6  0E00               	movlw	low (__mediumconst shr (0+16))
 11492  0171C8  6EF8               	movwf	tblptru,c
 11493  0171CA                     	endif
 11494  0171CA  0008               	tblrd		*
 11495  0171CC  50F5               	movf	tablat,w,c
 11496  0171CE  1923               	xorwf	??_strncmp& (0+255),w,b
 11497  0171D0  B4D8               	btfsc	status,2,c
 11498  0171D2  D01C               	goto	l2258
 11499  0171D4                     u15020:
 11500                           
 11501                           ; BSR set to: 1
 11502  0171D4  C11F  FFF6         	movff	strncmp@s2,tblptrl
 11503  0171D8  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 11504  0171DC                     	if	0	;tblptru may be non-zero
 11505  0171DC                     	endif
 11506  0171DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11507  0171DC  0E00               	movlw	low (__mediumconst shr (0+16))
 11508  0171DE  6EF8               	movwf	tblptru,c
 11509  0171E0                     	endif
 11510  0171E0  0008               	tblrd		*
 11511  0171E2  50F5               	movf	tablat,w,c
 11512  0171E4  0101               	movlb	1	; () banked
 11513  0171E6  6F23               	movwf	??_strncmp& (0+255),b
 11514  0171E8  6B24               	clrf	(??_strncmp+1)& (0+255),b
 11515  0171EA  1F23               	comf	??_strncmp& (0+255),f,b
 11516  0171EC  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 11517  0171EE  4B23               	infsnz	??_strncmp& (0+255),f,b
 11518  0171F0  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 11519  0171F2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 11520  0171F6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 11521  0171FA  50DF               	movf	indf2,w,c
 11522  0171FC  6F25               	movwf	(??_strncmp+2)& (0+255),b
 11523  0171FE  5125               	movf	(??_strncmp+2)& (0+255),w,b
 11524  017200  2523               	addwf	??_strncmp& (0+255),w,b
 11525  017202  6F1D               	movwf	?_strncmp& (0+255),b
 11526  017204  0E00               	movlw	0
 11527  017206  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 11528  017208  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11529                           
 11530                           ; BSR set to: 1
 11531  01720A  0012               	return	
 11532  01720C                     l2258:
 11533                           
 11534                           ; BSR set to: 1
 11535                           
 11536                           ; BSR set to: 1
 11537  01720C  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 11538  01720E  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 11539  017210  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 11540  017212  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 11541  017214                     l2256:
 11542                           
 11543                           ; BSR set to: 1
 11544  017214  0101               	movlb	1	; () banked
 11545  017216  0721               	decf	strncmp@len& (0+255),f,b
 11546  017218  A0D8               	btfss	status,0,c
 11547  01721A  0722               	decf	(strncmp@len+1)& (0+255),f,b
 11548  01721C  2921               	incf	strncmp@len& (0+255),w,b
 11549  01721E  E1C1               	bnz	l12486
 11550  017220  2922               	incf	(strncmp@len+1)& (0+255),w,b
 11551  017222  A4D8               	btfss	status,2,c
 11552  017224  D7BE               	goto	l2257
 11553                           
 11554                           ; BSR set to: 1
 11555                           
 11556                           ; BSR set to: 1
 11557  017226  0E00               	movlw	0
 11558  017228  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 11559  01722A  0E00               	movlw	0
 11560  01722C  6F1D               	movwf	?_strncmp& (0+255),b
 11561  01722E  0012               	return	
 11562  017230                     __end_of_strncmp:
 11563                           	opt stack 0
 11564                           tblptru	equ	0xFF8
 11565                           tblptrh	equ	0xFF7
 11566                           tblptrl	equ	0xFF6
 11567                           tablat	equ	0xFF5
 11568                           intcon	equ	0xFF2
 11569                           postinc0	equ	0xFEE
 11570                           wreg	equ	0xFE8
 11571                           indf1	equ	0xFE7
 11572                           postdec1	equ	0xFE5
 11573                           fsr1h	equ	0xFE2
 11574                           fsr1l	equ	0xFE1
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           fsr2h	equ	0xFDA
 11578                           fsr2l	equ	0xFD9
 11579                           status	equ	0xFD8
 11580                           
 11581 ;; *************** function _strlen *****************
 11582 ;; Defined at:
 11583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 11586 ;;		 -> STR_109(25), line(64), 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 11589 ;;		 -> STR_109(25), line(64), 
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  2   23[BANK1 ] unsigned int 
 11592 ;; Registers used:
 11593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11599 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11600 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11601 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11602 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;Total ram usage:        6 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:   13
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_terminal_ringBufferPull
 11610 ;;		_strstr
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text11
 11615  0179FE                     __ptext11:
 11616                           	opt stack 0
 11617  0179FE                     _strlen:
 11618                           	opt stack 16
 11619                           
 11620                           ; BSR set to: 1
 11621                           ;incstack = 0
 11622  0179FE  C117  F11B         	movff	strlen@s,strlen@cp
 11623  017A02  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 11624  017A06  D003               	goto	l2175
 11625  017A08  0101               	movlb	1	; () banked
 11626  017A0A  4B1B               	infsnz	strlen@cp& (0+255),f,b
 11627  017A0C  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 11628  017A0E                     l2175:
 11629                           
 11630                           ; BSR set to: 1
 11631  017A0E  C11B  FFF6         	movff	strlen@cp,tblptrl
 11632  017A12  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 11633  017A16  0E00               	movlw	low (__mediumconst shr (0+16))
 11634  017A18  6EF8               	movwf	tblptru,c
 11635  017A1A  0E0D               	movlw	(high __ramtop+-1)
 11636  017A1C  64F7               	cpfsgt	tblptrh,c
 11637  017A1E  D003               	bra	u14997
 11638  017A20  0008               	tblrd		*
 11639  017A22  50F5               	movf	tablat,w,c
 11640  017A24  D005               	bra	u14990
 11641  017A26                     u14997:
 11642  017A26  CFF6 FFE9          	movff	tblptrl,fsr0l
 11643  017A2A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11644  017A2E  50EF               	movf	indf0,w,c
 11645  017A30                     u14990:
 11646  017A30  0900               	iorlw	0
 11647  017A32  A4D8               	btfss	status,2,c
 11648  017A34  D7E9               	goto	l2176
 11649  017A36  C117  F119         	movff	strlen@s,??_strlen
 11650  017A3A  C118  F11A         	movff	strlen@s+1,??_strlen+1
 11651  017A3E  0101               	movlb	1	; () banked
 11652  017A40  1F19               	comf	??_strlen& (0+255),f,b
 11653  017A42  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 11654  017A44  4B19               	infsnz	??_strlen& (0+255),f,b
 11655  017A46  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 11656  017A48  511B               	movf	strlen@cp& (0+255),w,b
 11657  017A4A  2519               	addwf	??_strlen& (0+255),w,b
 11658  017A4C  6F17               	movwf	?_strlen& (0+255),b
 11659  017A4E  511C               	movf	(strlen@cp+1)& (0+255),w,b
 11660  017A50  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 11661  017A52  6F18               	movwf	(?_strlen+1)& (0+255),b
 11662  017A54  0012               	return	
 11663  017A56                     __end_of_strlen:
 11664                           	opt stack 0
 11665                           tblptru	equ	0xFF8
 11666                           tblptrh	equ	0xFF7
 11667                           tblptrl	equ	0xFF6
 11668                           tablat	equ	0xFF5
 11669                           intcon	equ	0xFF2
 11670                           indf0	equ	0xFEF
 11671                           postinc0	equ	0xFEE
 11672                           fsr0h	equ	0xFEA
 11673                           fsr0l	equ	0xFE9
 11674                           wreg	equ	0xFE8
 11675                           indf1	equ	0xFE7
 11676                           postdec1	equ	0xFE5
 11677                           fsr1h	equ	0xFE2
 11678                           fsr1l	equ	0xFE1
 11679                           indf2	equ	0xFDF
 11680                           postinc2	equ	0xFDE
 11681                           fsr2h	equ	0xFDA
 11682                           fsr2l	equ	0xFD9
 11683                           status	equ	0xFD8
 11684                           
 11685 ;; *************** function _strchr *****************
 11686 ;; Defined at:
 11687 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 11690 ;;		 -> NULL(0), line(64), 
 11691 ;;  chr             2   25[BANK1 ] int 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;		None
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  2   23[BANK1 ] PTR unsigned char 
 11696 ;; Registers used:
 11697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11703 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11706 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11707 ;;Total ram usage:        5 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:   13
 11710 ;; This function calls:
 11711 ;;		Nothing
 11712 ;; This function is called by:
 11713 ;;		_strstr
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text12
 11718  017E8E                     __ptext12:
 11719                           	opt stack 0
 11720  017E8E                     _strchr:
 11721                           	opt stack 14
 11722                           
 11723                           ; BSR set to: 1
 11724                           ;incstack = 0
 11725  017E8E  C117  FFD9         	movff	strchr@ptr,fsr2l
 11726  017E92  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11727  017E96  0101               	movlb	1	; () banked
 11728  017E98  5119               	movf	strchr@chr& (0+255),w,b
 11729  017E9A  18DE               	xorwf	postinc2,w,c
 11730  017E9C  A4D8               	btfss	status,2,c
 11731  017E9E  D005               	goto	l2251
 11732                           
 11733                           ; BSR set to: 1
 11734  017EA0  C117  F117         	movff	strchr@ptr,?_strchr
 11735  017EA4  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11736                           
 11737                           ; BSR set to: 1
 11738  017EA8  0012               	return	
 11739  017EAA                     l2251:
 11740                           
 11741                           ; BSR set to: 1
 11742                           
 11743                           ; BSR set to: 1
 11744  017EAA  C117  FFD9         	movff	strchr@ptr,fsr2l
 11745  017EAE  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11746  017EB2  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11747  017EB4  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11748  017EB6  50DF               	movf	indf2,w,c
 11749  017EB8  A4D8               	btfss	status,2,c
 11750  017EBA  D7E9               	goto	_strchr
 11751                           
 11752                           ; BSR set to: 1
 11753                           
 11754                           ; BSR set to: 1
 11755  017EBC  0E00               	movlw	0
 11756  017EBE  6F17               	movwf	?_strchr& (0+255),b
 11757  017EC0  0E00               	movlw	0
 11758  017EC2  6F18               	movwf	(?_strchr+1)& (0+255),b
 11759  017EC4  0012               	return	
 11760  017EC6                     __end_of_strchr:
 11761                           	opt stack 0
 11762                           tblptru	equ	0xFF8
 11763                           tblptrh	equ	0xFF7
 11764                           tblptrl	equ	0xFF6
 11765                           tablat	equ	0xFF5
 11766                           intcon	equ	0xFF2
 11767                           indf0	equ	0xFEF
 11768                           postinc0	equ	0xFEE
 11769                           fsr0h	equ	0xFEA
 11770                           fsr0l	equ	0xFE9
 11771                           wreg	equ	0xFE8
 11772                           indf1	equ	0xFE7
 11773                           postdec1	equ	0xFE5
 11774                           fsr1h	equ	0xFE2
 11775                           fsr1l	equ	0xFE1
 11776                           indf2	equ	0xFDF
 11777                           postinc2	equ	0xFDE
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function _strcpy *****************
 11783 ;; Defined at:
 11784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11787 ;;		 -> ringBufferLUT@channel_name(22), 
 11788 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11789 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 11790 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11793 ;;		 -> ringBufferLUT@channel_name(22), 
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  2   23[BANK1 ] PTR unsigned char 
 11796 ;; Registers used:
 11797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11803 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11804 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11806 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;Total ram usage:        6 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:   13
 11810 ;; This function calls:
 11811 ;;		Nothing
 11812 ;; This function is called by:
 11813 ;;		_ringBufferLUT
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text13
 11818  017EC6                     __ptext13:
 11819                           	opt stack 0
 11820  017EC6                     _strcpy:
 11821                           	opt stack 15
 11822                           
 11823                           ; BSR set to: 1
 11824                           ;incstack = 0
 11825  017EC6  C117  F11B         	movff	strcpy@to,strcpy@cp
 11826  017ECA  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 11827  017ECE  D005               	goto	l2169
 11828  017ED0  0101               	movlb	1	; () banked
 11829  017ED2  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 11830  017ED4  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 11831  017ED6  4B19               	infsnz	strcpy@from& (0+255),f,b
 11832  017ED8  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 11833  017EDA                     l2169:
 11834                           
 11835                           ; BSR set to: 1
 11836  017EDA  C119  FFF6         	movff	strcpy@from,tblptrl
 11837  017EDE  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 11838  017EE2                     	if	0	;tblptru may be non-zero
 11839  017EE2                     	endif
 11840  017EE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11841  017EE2  0E00               	movlw	low (__mediumconst shr (0+16))
 11842  017EE4  6EF8               	movwf	tblptru,c
 11843  017EE6                     	endif
 11844  017EE6  C11B  FFD9         	movff	strcpy@cp,fsr2l
 11845  017EEA  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 11846  017EEE  0008               	tblrd		*
 11847  017EF0  CFF5 FFDF          	movff	tablat,indf2
 11848  017EF4  50DF               	movf	indf2,w,c
 11849  017EF6  B4D8               	btfsc	status,2,c
 11850  017EF8  0012               	return	
 11851  017EFA  D7EA               	goto	l2170
 11852  017EFC                     __end_of_strcpy:
 11853                           	opt stack 0
 11854                           tblptru	equ	0xFF8
 11855                           tblptrh	equ	0xFF7
 11856                           tblptrl	equ	0xFF6
 11857                           tablat	equ	0xFF5
 11858                           intcon	equ	0xFF2
 11859                           indf0	equ	0xFEF
 11860                           postinc0	equ	0xFEE
 11861                           fsr0h	equ	0xFEA
 11862                           fsr0l	equ	0xFE9
 11863                           wreg	equ	0xFE8
 11864                           indf1	equ	0xFE7
 11865                           postdec1	equ	0xFE5
 11866                           fsr1h	equ	0xFE2
 11867                           fsr1l	equ	0xFE1
 11868                           indf2	equ	0xFDF
 11869                           postinc2	equ	0xFDE
 11870                           fsr2h	equ	0xFDA
 11871                           fsr2l	equ	0xFD9
 11872                           status	equ	0xFD8
 11873                           
 11874 ;; *************** function _strcmp *****************
 11875 ;; Defined at:
 11876 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11879 ;;		 -> line(64), 
 11880 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11881 ;;		 -> STR_120(5), STR_118(14), STR_116(16), STR_107(13), 
 11882 ;;		 -> STR_103(17), STR_100(14), STR_98(12), STR_96(16), 
 11883 ;;		 -> STR_94(15), STR_92(15), STR_90(21), STR_88(21), 
 11884 ;;		 -> STR_86(26), STR_84(14), STR_82(13), STR_80(18), 
 11885 ;;		 -> STR_78(15), STR_76(16), STR_73(17), STR_71(16), 
 11886 ;;		 -> STR_60(11), STR_57(10), STR_55(13), STR_53(11), 
 11887 ;;		 -> STR_50(4), STR_49(6), STR_47(16), STR_44(6), 
 11888 ;;		 -> STR_41(6), 
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;  r               1   28[BANK1 ] char 
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  2   23[BANK1 ] int 
 11893 ;; Registers used:
 11894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11900 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11901 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11902 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11903 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11904 ;;Total ram usage:        6 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:   13
 11907 ;; This function calls:
 11908 ;;		Nothing
 11909 ;; This function is called by:
 11910 ;;		_ringBufferLUT
 11911 ;; This function uses a non-reentrant model
 11912 ;;
 11913                           
 11914                           	psect	text14
 11915  017AA8                     __ptext14:
 11916                           	opt stack 0
 11917  017AA8                     _strcmp:
 11918                           	opt stack 15
 11919                           
 11920                           ;incstack = 0
 11921  017AA8  D005               	goto	l2161
 11922  017AAA  0101               	movlb	1	; () banked
 11923  017AAC  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11924  017AAE  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11925  017AB0  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11926  017AB2  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11927  017AB4                     l2161:
 11928                           
 11929                           ; BSR set to: 1
 11930  017AB4  C117  FFD9         	movff	strcmp@s1,fsr2l
 11931  017AB8  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11932  017ABC  50DF               	movf	indf2,w,c
 11933  017ABE  0101               	movlb	1	; () banked
 11934  017AC0  6F1B               	movwf	??_strcmp& (0+255),b
 11935  017AC2  C119  FFF6         	movff	strcmp@s2,tblptrl
 11936  017AC6  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11937  017ACA                     	if	0	;tblptru may be non-zero
 11938  017ACA                     	endif
 11939  017ACA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11940  017ACA  0E00               	movlw	low (__mediumconst shr (0+16))
 11941  017ACC  6EF8               	movwf	tblptru,c
 11942  017ACE                     	endif
 11943  017ACE  0008               	tblrd		*
 11944  017AD0  50F5               	movf	tablat,w,c
 11945  017AD2  0800               	sublw	0
 11946  017AD4  251B               	addwf	??_strcmp& (0+255),w,b
 11947  017AD6  6F1C               	movwf	strcmp@r& (0+255),b
 11948  017AD8  511C               	movf	strcmp@r& (0+255),w,b
 11949  017ADA  A4D8               	btfss	status,2,c
 11950  017ADC  D007               	goto	u15240
 11951                           
 11952                           ; BSR set to: 1
 11953  017ADE  C117  FFD9         	movff	strcmp@s1,fsr2l
 11954  017AE2  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11955  017AE6  50DF               	movf	indf2,w,c
 11956  017AE8  A4D8               	btfss	status,2,c
 11957  017AEA  D7DF               	goto	l2162
 11958  017AEC                     u15240:
 11959                           
 11960                           ; BSR set to: 1
 11961                           
 11962                           ; BSR set to: 1
 11963                           
 11964                           ; BSR set to: 1
 11965  017AEC  511C               	movf	strcmp@r& (0+255),w,b
 11966  017AEE  6F17               	movwf	?_strcmp& (0+255),b
 11967  017AF0  6B18               	clrf	(?_strcmp+1)& (0+255),b
 11968  017AF2  BF17               	btfsc	?_strcmp& (0+255),7,b
 11969  017AF4  0718               	decf	(?_strcmp+1)& (0+255),f,b
 11970  017AF6  0012               	return	
 11971  017AF8                     __end_of_strcmp:
 11972                           	opt stack 0
 11973                           tblptru	equ	0xFF8
 11974                           tblptrh	equ	0xFF7
 11975                           tblptrl	equ	0xFF6
 11976                           tablat	equ	0xFF5
 11977                           intcon	equ	0xFF2
 11978                           indf0	equ	0xFEF
 11979                           postinc0	equ	0xFEE
 11980                           fsr0h	equ	0xFEA
 11981                           fsr0l	equ	0xFE9
 11982                           wreg	equ	0xFE8
 11983                           indf1	equ	0xFE7
 11984                           postdec1	equ	0xFE5
 11985                           fsr1h	equ	0xFE2
 11986                           fsr1l	equ	0xFE1
 11987                           indf2	equ	0xFDF
 11988                           postinc2	equ	0xFDE
 11989                           fsr2h	equ	0xFDA
 11990                           fsr2l	equ	0xFD9
 11991                           status	equ	0xFD8
 11992                           
 11993 ;; *************** function _getUserID *****************
 11994 ;; Defined at:
 11995 ;;		line 65 in file "device_IDs.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;  inputUserID     1    wreg     unsigned char 
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 12000 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 12001 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  2   34[BANK1 ] unsigned int 
 12004 ;; Registers used:
 12005 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12011 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12015 ;;Total ram usage:        8 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:   15
 12018 ;; This function calls:
 12019 ;;		_FLASH_ReadWord
 12020 ;; This function is called by:
 12021 ;;		_ringBufferLUT
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text15
 12026  017D50                     __ptext15:
 12027                           	opt stack 0
 12028  017D50                     _getUserID:
 12029                           	opt stack 13
 12030                           
 12031                           ; BSR set to: 1
 12032                           ;incstack = 0
 12033                           ;getUserID@inputUserID stored from wreg
 12034  017D50  0101               	movlb	1	; () banked
 12035  017D52  6F28               	movwf	getUserID@inputUserID& (0+255),b
 12036                           
 12037                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 12038  017D54  0E00               	movlw	0
 12039  017D56  0101               	movlb	1	; () banked
 12040  017D58  6F24               	movwf	getUserID@initialOffset& (0+255),b
 12041  017D5A  0E00               	movlw	0
 12042  017D5C  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 12043  017D5E  0E20               	movlw	32
 12044  017D60  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 12045  017D62  0E00               	movlw	0
 12046  017D64  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 12047                           
 12048                           ; BSR set to: 1
 12049                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 12050  017D66  5128               	movf	getUserID@inputUserID& (0+255),w,b
 12051  017D68  0D02               	mullw	2
 12052  017D6A  CFF3 F129          	movff	prodl,getUserID@IDOffset
 12053                           
 12054                           ; BSR set to: 1
 12055                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 12056  017D6E  5129               	movf	getUserID@IDOffset& (0+255),w,b
 12057  017D70  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 12058  017D72  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12059  017D74  0E00               	movlw	0
 12060  017D76  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 12061  017D78  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12062  017D7A  0E00               	movlw	0
 12063  017D7C  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 12064  017D7E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12065  017D80  0E00               	movlw	0
 12066  017D82  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 12067  017D84  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12068  017D86  ECCA  F0BE         	call	_FLASH_ReadWord	;wreg free
 12069  017D8A  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 12070  017D8E  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 12071  017D92  0012               	return	
 12072  017D94                     __end_of_getUserID:
 12073                           	opt stack 0
 12074                           tblptru	equ	0xFF8
 12075                           tblptrh	equ	0xFF7
 12076                           tblptrl	equ	0xFF6
 12077                           tablat	equ	0xFF5
 12078                           prodl	equ	0xFF3
 12079                           intcon	equ	0xFF2
 12080                           indf0	equ	0xFEF
 12081                           postinc0	equ	0xFEE
 12082                           fsr0h	equ	0xFEA
 12083                           fsr0l	equ	0xFE9
 12084                           wreg	equ	0xFE8
 12085                           indf1	equ	0xFE7
 12086                           postdec1	equ	0xFE5
 12087                           fsr1h	equ	0xFE2
 12088                           fsr1l	equ	0xFE1
 12089                           indf2	equ	0xFDF
 12090                           postinc2	equ	0xFDE
 12091                           fsr2h	equ	0xFDA
 12092                           fsr2l	equ	0xFD9
 12093                           status	equ	0xFD8
 12094                           
 12095 ;; *************** function _getMinorRevisionID *****************
 12096 ;; Defined at:
 12097 ;;		line 23 in file "device_IDs.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      unsigned char 
 12104 ;; Registers used:
 12105 ;;		wreg, status,2, status,0, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12112 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12114 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12115 ;;Total ram usage:        2 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:   15
 12118 ;; This function calls:
 12119 ;;		_FLASH_ReadWord
 12120 ;; This function is called by:
 12121 ;;		_ringBufferLUT
 12122 ;; This function uses a non-reentrant model
 12123 ;;
 12124                           
 12125                           	psect	text16
 12126  01812A                     __ptext16:
 12127                           	opt stack 0
 12128  01812A                     _getMinorRevisionID:
 12129                           	opt stack 13
 12130                           
 12131                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12132                           
 12133                           ;incstack = 0
 12134  01812A  0EFC               	movlw	252
 12135  01812C  0101               	movlb	1	; () banked
 12136  01812E  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12137  018130  0EFF               	movlw	255
 12138  018132  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12139  018134  0E3F               	movlw	63
 12140  018136  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12141  018138  0E00               	movlw	0
 12142  01813A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12143  01813C  ECCA  F0BE         	call	_FLASH_ReadWord	;wreg free
 12144  018140  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 12145  018144  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 12146                           
 12147                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 12148  018148  0101               	movlb	1	; () banked
 12149  01814A  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 12150  01814C  0B1F               	andlw	31
 12151  01814E  0012               	return	
 12152  018150                     __end_of_getMinorRevisionID:
 12153                           	opt stack 0
 12154                           tblptru	equ	0xFF8
 12155                           tblptrh	equ	0xFF7
 12156                           tblptrl	equ	0xFF6
 12157                           tablat	equ	0xFF5
 12158                           prodl	equ	0xFF3
 12159                           intcon	equ	0xFF2
 12160                           indf0	equ	0xFEF
 12161                           postinc0	equ	0xFEE
 12162                           fsr0h	equ	0xFEA
 12163                           fsr0l	equ	0xFE9
 12164                           wreg	equ	0xFE8
 12165                           indf1	equ	0xFE7
 12166                           postdec1	equ	0xFE5
 12167                           fsr1h	equ	0xFE2
 12168                           fsr1l	equ	0xFE1
 12169                           indf2	equ	0xFDF
 12170                           postinc2	equ	0xFDE
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function _getMajorRevisionID *****************
 12176 ;; Defined at:
 12177 ;;		line 12 in file "device_IDs.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      unsigned char 
 12184 ;; Registers used:
 12185 ;;		wreg, status,2, status,0, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12192 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12193 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;Total ram usage:        5 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:   15
 12198 ;; This function calls:
 12199 ;;		_FLASH_ReadWord
 12200 ;; This function is called by:
 12201 ;;		_ringBufferLUT
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text17
 12206  017E16                     __ptext17:
 12207                           	opt stack 0
 12208  017E16                     _getMajorRevisionID:
 12209                           	opt stack 13
 12210                           
 12211                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12212                           
 12213                           ; BSR set to: 1
 12214                           ;incstack = 0
 12215  017E16  0EFC               	movlw	252
 12216  017E18  0101               	movlb	1	; () banked
 12217  017E1A  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12218  017E1C  0EFF               	movlw	255
 12219  017E1E  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12220  017E20  0E3F               	movlw	63
 12221  017E22  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12222  017E24  0E00               	movlw	0
 12223  017E26  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12224  017E28  ECCA  F0BE         	call	_FLASH_ReadWord	;wreg free
 12225  017E2C  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 12226  017E30  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 12227                           
 12228                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 12229  017E34  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 12230  017E38  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 12231  017E3C  0E06               	movlw	6
 12232  017E3E  0101               	movlb	1	; () banked
 12233  017E40  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 12234  017E42                     u15275:
 12235  017E42  90D8               	bcf	status,0,c
 12236  017E44  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 12237  017E46  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 12238  017E48  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 12239  017E4A  D7FB               	goto	u15275
 12240  017E4C  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 12241  017E4E  0B1F               	andlw	31
 12242  017E50  0012               	return	
 12243  017E52                     __end_of_getMajorRevisionID:
 12244                           	opt stack 0
 12245                           tblptru	equ	0xFF8
 12246                           tblptrh	equ	0xFF7
 12247                           tblptrl	equ	0xFF6
 12248                           tablat	equ	0xFF5
 12249                           prodl	equ	0xFF3
 12250                           intcon	equ	0xFF2
 12251                           indf0	equ	0xFEF
 12252                           postinc0	equ	0xFEE
 12253                           fsr0h	equ	0xFEA
 12254                           fsr0l	equ	0xFE9
 12255                           wreg	equ	0xFE8
 12256                           indf1	equ	0xFE7
 12257                           postdec1	equ	0xFE5
 12258                           fsr1h	equ	0xFE2
 12259                           fsr1l	equ	0xFE1
 12260                           indf2	equ	0xFDF
 12261                           postinc2	equ	0xFDE
 12262                           fsr2h	equ	0xFDA
 12263                           fsr2l	equ	0xFD9
 12264                           status	equ	0xFD8
 12265                           
 12266 ;; *************** function _getDeviceIDString *****************
 12267 ;; Defined at:
 12268 ;;		line 34 in file "device_IDs.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 12273 ;;		 -> STR_129(10), STR_128(13), STR_127(12), 
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  2   36[BANK1 ] PTR inline unsigned char
 12276 ;; Registers used:
 12277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12283 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12284 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;Total ram usage:       10 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:   13
 12290 ;; This function calls:
 12291 ;;		Nothing
 12292 ;; This function is called by:
 12293 ;;		_ringBufferLUT
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text18
 12298  01793E                     __ptext18:
 12299                           	opt stack 0
 12300  01793E                     _getDeviceIDString:
 12301                           	opt stack 15
 12302                           
 12303                           ;device_IDs.c: 37: const char *strings[] = {
 12304                           ;device_IDs.c: 39: "PIC18F67K40",
 12305                           ;device_IDs.c: 40: "PIC18LF67K40",
 12306                           ;device_IDs.c: 41: "Undefined"
 12307                           ;device_IDs.c: 43: };
 12308                           
 12309                           ; BSR set to: 1
 12310                           ;incstack = 0
 12311  01793E  EE22  F0D0         	lfsr	2,getDeviceIDString@F17550
 12312  017942  EE11  F028         	lfsr	1,getDeviceIDString@strings
 12313  017946  0E05               	movlw	5
 12314  017948                     u15261:
 12315  017948  CFDB FFE3          	movff	plusw2,plusw1
 12316  01794C  06E8               	decf	wreg,f,c
 12317  01794E  E2FC               	bc	u15261
 12318                           
 12319                           ;device_IDs.c: 47: switch (inputDevID) {
 12320  017950  D00F               	goto	l1289
 12321  017952                     
 12322                           ;device_IDs.c: 50: return strings[0];
 12323  017952  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 12324  017956  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 12325                           
 12326                           ;device_IDs.c: 51: break;
 12327  01795A  0012               	return	
 12328  01795C                     
 12329                           ;device_IDs.c: 54: return strings[1];
 12330  01795C  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 12331  017960  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 12332                           
 12333                           ;device_IDs.c: 55: break;
 12334  017964  0012               	return	
 12335  017966                     
 12336                           ;device_IDs.c: 58: return strings[2];
 12337  017966  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 12338  01796A  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 12339                           
 12340                           ;device_IDs.c: 61: }
 12341                           
 12342                           ;device_IDs.c: 59: break;
 12343  01796E  0012               	return	
 12344  017970                     l1289:
 12345  017970  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 12346  017974  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 12347                           
 12348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12349                           ; Switch size 1, requested type "space"
 12350                           ; Number of cases is 2, Range of values is 106 to 107
 12351                           ; switch strategies available:
 12352                           ; Name         Instructions Cycles
 12353                           ; simple_byte            7     4 (average)
 12354                           ;	Chosen strategy is simple_byte
 12355  017978  0101               	movlb	1	; () banked
 12356  01797A  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 12357  01797C  0A6A               	xorlw	106	; case 106
 12358  01797E  B4D8               	btfsc	status,2,c
 12359  017980  D004               	goto	l14588
 12360  017982  0A01               	xorlw	1	; case 107
 12361  017984  B4D8               	btfsc	status,2,c
 12362  017986  D006               	goto	l14590
 12363  017988  D7EE               	goto	l1294
 12364  01798A                     l14588:
 12365                           
 12366                           ; BSR set to: 1
 12367                           ; Switch size 1, requested type "space"
 12368                           ; Number of cases is 1, Range of values is 192 to 192
 12369                           ; switch strategies available:
 12370                           ; Name         Instructions Cycles
 12371                           ; simple_byte            4     3 (average)
 12372                           ;	Chosen strategy is simple_byte
 12373  01798A  5126               	movf	??_getDeviceIDString& (0+255),w,b
 12374  01798C  0AC0               	xorlw	192	; case 192
 12375  01798E  B4D8               	btfsc	status,2,c
 12376  017990  D7E0               	goto	l1290
 12377  017992  D7E9               	goto	l1294
 12378  017994                     l14590:
 12379                           
 12380                           ; BSR set to: 1
 12381                           ; Switch size 1, requested type "space"
 12382                           ; Number of cases is 1, Range of values is 32 to 32
 12383                           ; switch strategies available:
 12384                           ; Name         Instructions Cycles
 12385                           ; simple_byte            4     3 (average)
 12386                           ;	Chosen strategy is simple_byte
 12387  017994  5126               	movf	??_getDeviceIDString& (0+255),w,b
 12388  017996  0A20               	xorlw	32	; case 32
 12389  017998  B4D8               	btfsc	status,2,c
 12390  01799A  D7E0               	goto	l1293
 12391  01799C  D7E4               	goto	l1294
 12392  01799E                     __end_of_getDeviceIDString:
 12393                           	opt stack 0
 12394                           tblptru	equ	0xFF8
 12395                           tblptrh	equ	0xFF7
 12396                           tblptrl	equ	0xFF6
 12397                           tablat	equ	0xFF5
 12398                           prodl	equ	0xFF3
 12399                           intcon	equ	0xFF2
 12400                           indf0	equ	0xFEF
 12401                           postinc0	equ	0xFEE
 12402                           fsr0h	equ	0xFEA
 12403                           fsr0l	equ	0xFE9
 12404                           wreg	equ	0xFE8
 12405                           indf1	equ	0xFE7
 12406                           postdec1	equ	0xFE5
 12407                           plusw1	equ	0xFE3
 12408                           fsr1h	equ	0xFE2
 12409                           fsr1l	equ	0xFE1
 12410                           indf2	equ	0xFDF
 12411                           postinc2	equ	0xFDE
 12412                           plusw2	equ	0xFDB
 12413                           fsr2h	equ	0xFDA
 12414                           fsr2l	equ	0xFD9
 12415                           status	equ	0xFD8
 12416                           
 12417 ;; *************** function _getDeviceID *****************
 12418 ;; Defined at:
 12419 ;;		line 4 in file "device_IDs.c"
 12420 ;; Parameters:    Size  Location     Type
 12421 ;;		None
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;		None
 12424 ;; Return value:  Size  Location     Type
 12425 ;;                  2   34[BANK1 ] unsigned int 
 12426 ;; Registers used:
 12427 ;;		wreg, status,2, status,0, cstack
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12433 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12436 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12437 ;;Total ram usage:        2 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:   15
 12440 ;; This function calls:
 12441 ;;		_FLASH_ReadWord
 12442 ;; This function is called by:
 12443 ;;		_ringBufferLUT
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text19
 12448  0181E2                     __ptext19:
 12449                           	opt stack 0
 12450  0181E2                     _getDeviceID:
 12451                           	opt stack 13
 12452                           
 12453                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 12454                           
 12455                           ;incstack = 0
 12456  0181E2  0EFE               	movlw	254
 12457  0181E4  0101               	movlb	1	; () banked
 12458  0181E6  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12459  0181E8  0EFF               	movlw	255
 12460  0181EA  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12461  0181EC  0E3F               	movlw	63
 12462  0181EE  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12463  0181F0  0E00               	movlw	0
 12464  0181F2  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12465  0181F4  ECCA  F0BE         	call	_FLASH_ReadWord	;wreg free
 12466  0181F8  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 12467  0181FC  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 12468  018200  0012               	return	
 12469  018202                     __end_of_getDeviceID:
 12470                           	opt stack 0
 12471                           tblptru	equ	0xFF8
 12472                           tblptrh	equ	0xFF7
 12473                           tblptrl	equ	0xFF6
 12474                           tablat	equ	0xFF5
 12475                           prodl	equ	0xFF3
 12476                           intcon	equ	0xFF2
 12477                           indf0	equ	0xFEF
 12478                           postinc0	equ	0xFEE
 12479                           fsr0h	equ	0xFEA
 12480                           fsr0l	equ	0xFE9
 12481                           wreg	equ	0xFE8
 12482                           indf1	equ	0xFE7
 12483                           postdec1	equ	0xFE5
 12484                           plusw1	equ	0xFE3
 12485                           fsr1h	equ	0xFE2
 12486                           fsr1l	equ	0xFE1
 12487                           indf2	equ	0xFDF
 12488                           postinc2	equ	0xFDE
 12489                           plusw2	equ	0xFDB
 12490                           fsr2h	equ	0xFDA
 12491                           fsr2l	equ	0xFD9
 12492                           status	equ	0xFD8
 12493                           
 12494 ;; *************** function _FLASH_ReadWord *****************
 12495 ;; Defined at:
 12496 ;;		line 71 in file "mcc_generated_files/memory.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  2   27[BANK1 ] unsigned int 
 12503 ;; Registers used:
 12504 ;;		wreg, status,2, status,0, cstack
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12510 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12512 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12513 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12514 ;;Total ram usage:        7 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:   14
 12517 ;; This function calls:
 12518 ;;		_FLASH_ReadByte
 12519 ;; This function is called by:
 12520 ;;		_getDeviceID
 12521 ;;		_getMajorRevisionID
 12522 ;;		_getMinorRevisionID
 12523 ;;		_getUserID
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text20
 12528  017D94                     __ptext20:
 12529                           	opt stack 0
 12530  017D94                     _FLASH_ReadWord:
 12531                           	opt stack 13
 12532                           
 12533                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 12534                           
 12535                           ;incstack = 0
 12536  017D94  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 12537  017D98  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 12538  017D9C  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 12539  017DA0  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 12540  017DA4  EC3A  F0C1         	call	_FLASH_ReadByte	;wreg free
 12541  017DA8  0101               	movlb	1	; () banked
 12542  017DAA  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 12543  017DAC  0E01               	movlw	1
 12544  017DAE  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 12545  017DB0  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 12546  017DB2  0E00               	movlw	0
 12547  017DB4  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 12548  017DB6  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 12549  017DB8  0E00               	movlw	0
 12550  017DBA  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 12551  017DBC  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 12552  017DBE  0E00               	movlw	0
 12553  017DC0  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 12554  017DC2  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 12555  017DC4  EC3A  F0C1         	call	_FLASH_ReadByte	;wreg free
 12556  017DC8  0101               	movlb	1	; () banked
 12557  017DCA  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 12558  017DCC  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 12559  017DCE  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 12560  017DD0  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 12561  017DD4  0012               	return	
 12562  017DD6                     __end_of_FLASH_ReadWord:
 12563                           	opt stack 0
 12564                           tblptru	equ	0xFF8
 12565                           tblptrh	equ	0xFF7
 12566                           tblptrl	equ	0xFF6
 12567                           tablat	equ	0xFF5
 12568                           prodl	equ	0xFF3
 12569                           intcon	equ	0xFF2
 12570                           indf0	equ	0xFEF
 12571                           postinc0	equ	0xFEE
 12572                           fsr0h	equ	0xFEA
 12573                           fsr0l	equ	0xFE9
 12574                           wreg	equ	0xFE8
 12575                           indf1	equ	0xFE7
 12576                           postdec1	equ	0xFE5
 12577                           plusw1	equ	0xFE3
 12578                           fsr1h	equ	0xFE2
 12579                           fsr1l	equ	0xFE1
 12580                           indf2	equ	0xFDF
 12581                           postinc2	equ	0xFDE
 12582                           plusw2	equ	0xFDB
 12583                           fsr2h	equ	0xFDA
 12584                           fsr2l	equ	0xFD9
 12585                           status	equ	0xFD8
 12586                           
 12587 ;; *************** function _FLASH_ReadByte *****************
 12588 ;; Defined at:
 12589 ;;		line 59 in file "mcc_generated_files/memory.c"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;		None
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  1    wreg      unsigned char 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12603 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12606 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12607 ;;Total ram usage:        4 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:   13
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_FLASH_ReadWord
 12614 ;;		_FLASH_WriteByte
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           	psect	text21
 12619  018274                     __ptext21:
 12620                           	opt stack 0
 12621  018274                     _FLASH_ReadByte:
 12622                           	opt stack 13
 12623                           
 12624                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 12625                           
 12626                           ; BSR set to: 1
 12627                           ;incstack = 0
 12628  018274  5077               	movf	3959,w,c	;volsfr
 12629  018276  0B3F               	andlw	-193
 12630  018278  0980               	iorlw	128
 12631  01827A  6E77               	movwf	3959,c	;volsfr
 12632                           
 12633                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 12634  01827C  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 12635                           
 12636                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 12637  018280  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 12638                           
 12639                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 12640  018284  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 12641  018288  0008               	tblrd		*	;# 
 12642                           
 12643                           ;memory.c: 68: return (TABLAT);
 12644  01828A  50F5               	movf	tablat,w,c	;volatile
 12645  01828C  0012               	return	
 12646  01828E                     __end_of_FLASH_ReadByte:
 12647                           	opt stack 0
 12648                           tblptru	equ	0xFF8
 12649                           tblptrh	equ	0xFF7
 12650                           tblptrl	equ	0xFF6
 12651                           tablat	equ	0xFF5
 12652                           prodl	equ	0xFF3
 12653                           intcon	equ	0xFF2
 12654                           indf0	equ	0xFEF
 12655                           postinc0	equ	0xFEE
 12656                           fsr0h	equ	0xFEA
 12657                           fsr0l	equ	0xFE9
 12658                           wreg	equ	0xFE8
 12659                           indf1	equ	0xFE7
 12660                           postdec1	equ	0xFE5
 12661                           plusw1	equ	0xFE3
 12662                           fsr1h	equ	0xFE2
 12663                           fsr1l	equ	0xFE1
 12664                           indf2	equ	0xFDF
 12665                           postinc2	equ	0xFDE
 12666                           plusw2	equ	0xFDB
 12667                           fsr2h	equ	0xFDA
 12668                           fsr2l	equ	0xFD9
 12669                           status	equ	0xFD8
 12670                           
 12671 ;; *************** function _getCauseOfResetString *****************
 12672 ;; Defined at:
 12673 ;;		line 81 in file "cause_of_reset.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  r               1    wreg     enum E17455
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;  r               1   25[BANK1 ] enum E17455
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  2   23[BANK1 ] PTR inline unsigned char
 12680 ;; Registers used:
 12681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12687 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12688 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12690 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12691 ;;Total ram usage:        3 bytes
 12692 ;; Hardware stack levels used:    1
 12693 ;; Hardware stack levels required when called:   13
 12694 ;; This function calls:
 12695 ;;		Nothing
 12696 ;; This function is called by:
 12697 ;;		_ringBufferLUT
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text22
 12702  017FCC                     __ptext22:
 12703                           	opt stack 0
 12704  017FCC                     _getCauseOfResetString:
 12705                           	opt stack 15
 12706                           
 12707                           ;incstack = 0
 12708                           ;getCauseOfResetString@r stored from wreg
 12709  017FCC  0101               	movlb	1	; () banked
 12710  017FCE  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 12711                           
 12712                           ;cause_of_reset.c: 84: static char *strings[] = {
 12713                           ;cause_of_reset.c: 85: "Undefined Reset",
 12714                           ;cause_of_reset.c: 86: "Power On Reset",
 12715                           ;cause_of_reset.c: 87: "Brown Out Reset",
 12716                           ;cause_of_reset.c: 88: "Master Clear Reset",
 12717                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 12718                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 12719                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 12720                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 12721                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 12722                           ;cause_of_reset.c: 94: };
 12723  017FD0  0E09               	movlw	9
 12724  017FD2  0101               	movlb	1	; () banked
 12725  017FD4  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 12726  017FD6  D00D               	goto	l1321
 12727                           
 12728                           ; BSR set to: 1
 12729                           ;cause_of_reset.c: 99: return strings[r];
 12730  017FD8  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 12731  017FDA  0D02               	mullw	2
 12732  017FDC  0EBE               	movlw	low getCauseOfResetString@strings
 12733  017FDE  24F3               	addwf	prodl,w,c
 12734  017FE0  6ED9               	movwf	fsr2l,c
 12735  017FE2  0E02               	movlw	high getCauseOfResetString@strings
 12736  017FE4  20F4               	addwfc	prodh,w,c
 12737  017FE6  6EDA               	movwf	fsr2h,c
 12738  017FE8  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 12739  017FEC  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 12740                           
 12741                           ; BSR set to: 1
 12742                           ;cause_of_reset.c: 101: }
 12743                           
 12744                           ; BSR set to: 1
 12745  017FF0  0012               	return	
 12746  017FF2                     l1321:
 12747                           
 12748                           ; BSR set to: 1
 12749                           ;cause_of_reset.c: 103: else {
 12750                           ;cause_of_reset.c: 105: return "Undefined Reset";
 12751                           
 12752                           ; BSR set to: 1
 12753  017FF2  0E10               	movlw	low STR_130
 12754  017FF4  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 12755  017FF6  0EFE               	movlw	high STR_130
 12756  017FF8  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 12757                           
 12758                           ; BSR set to: 1
 12759  017FFA  0012               	return	
 12760  017FFC                     __end_of_getCauseOfResetString:
 12761                           	opt stack 0
 12762                           tblptru	equ	0xFF8
 12763                           tblptrh	equ	0xFF7
 12764                           tblptrl	equ	0xFF6
 12765                           tablat	equ	0xFF5
 12766                           prodh	equ	0xFF4
 12767                           prodl	equ	0xFF3
 12768                           intcon	equ	0xFF2
 12769                           indf0	equ	0xFEF
 12770                           postinc0	equ	0xFEE
 12771                           fsr0h	equ	0xFEA
 12772                           fsr0l	equ	0xFE9
 12773                           wreg	equ	0xFE8
 12774                           indf1	equ	0xFE7
 12775                           postdec1	equ	0xFE5
 12776                           plusw1	equ	0xFE3
 12777                           fsr1h	equ	0xFE2
 12778                           fsr1l	equ	0xFE1
 12779                           indf2	equ	0xFDF
 12780                           postinc2	equ	0xFDE
 12781                           postdec2	equ	0xFDD
 12782                           plusw2	equ	0xFDB
 12783                           fsr2h	equ	0xFDA
 12784                           fsr2l	equ	0xFD9
 12785                           status	equ	0xFD8
 12786                           
 12787 ;; *************** function _atoi *****************
 12788 ;; Defined at:
 12789 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 12792 ;;		 -> ringBufferLUT@arg_buff(3), 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  a               2   34[BANK1 ] int 
 12795 ;;  sign            1   33[BANK1 ] unsigned char 
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  2   29[BANK1 ] int 
 12798 ;; Registers used:
 12799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12805 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12806 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12807 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;Total ram usage:        7 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:   14
 12812 ;; This function calls:
 12813 ;;		___wmul
 12814 ;;		_isdigit
 12815 ;; This function is called by:
 12816 ;;		_ringBufferLUT
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           	psect	text23
 12821  016E1A                     __ptext23:
 12822                           	opt stack 0
 12823  016E1A                     _atoi:
 12824                           	opt stack 14
 12825                           
 12826                           ; BSR set to: 1
 12827                           ;incstack = 0
 12828  016E1A  D003               	goto	l1663
 12829  016E1C  0101               	movlb	1	; () banked
 12830  016E1E  4B1D               	infsnz	atoi@s& (0+255),f,b
 12831  016E20  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12832  016E22                     l1663:
 12833                           
 12834                           ; BSR set to: 1
 12835  016E22  C11D  FFD9         	movff	atoi@s,fsr2l
 12836  016E26  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12837  016E2A  0E20               	movlw	32
 12838  016E2C  18DE               	xorwf	postinc2,w,c
 12839  016E2E  B4D8               	btfsc	status,2,c
 12840  016E30  D7F5               	goto	l1664
 12841  016E32  C11D  FFD9         	movff	atoi@s,fsr2l
 12842  016E36  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12843  016E3A  0E09               	movlw	9
 12844  016E3C  18DE               	xorwf	postinc2,w,c
 12845  016E3E  B4D8               	btfsc	status,2,c
 12846  016E40  D7ED               	goto	l1664
 12847  016E42  0E00               	movlw	0
 12848  016E44  0101               	movlb	1	; () banked
 12849  016E46  6F23               	movwf	(atoi@a+1)& (0+255),b
 12850  016E48  0E00               	movlw	0
 12851  016E4A  6F22               	movwf	atoi@a& (0+255),b
 12852  016E4C  0E00               	movlw	0
 12853  016E4E  6F21               	movwf	atoi@sign& (0+255),b
 12854                           
 12855                           ; BSR set to: 1
 12856  016E50  C11D  FFD9         	movff	atoi@s,fsr2l
 12857  016E54  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12858  016E58  0E2D               	movlw	45
 12859  016E5A  18DE               	xorwf	postinc2,w,c
 12860  016E5C  A4D8               	btfss	status,2,c
 12861  016E5E  D002               	goto	l1666
 12862                           
 12863                           ; BSR set to: 1
 12864  016E60  2B21               	incf	atoi@sign& (0+255),f,b
 12865  016E62  D026               	goto	l12818
 12866  016E64                     l1666:
 12867                           
 12868                           ; BSR set to: 1
 12869                           
 12870                           ; BSR set to: 1
 12871  016E64  C11D  FFD9         	movff	atoi@s,fsr2l
 12872  016E68  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12873  016E6C  0E2B               	movlw	43
 12874  016E6E  18DE               	xorwf	postinc2,w,c
 12875  016E70  A4D8               	btfss	status,2,c
 12876  016E72  D020               	goto	l1669
 12877  016E74  D01D               	goto	l12818
 12878  016E76                     
 12879                           ; BSR set to: 1
 12880  016E76  C122  F117         	movff	atoi@a,___wmul@multiplier
 12881  016E7A  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 12882  016E7E  0E00               	movlw	0
 12883  016E80  0101               	movlb	1	; () banked
 12884  016E82  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12885  016E84  0E0A               	movlw	10
 12886  016E86  6F19               	movwf	___wmul@multiplicand& (0+255),b
 12887  016E88  EC59  F0C0         	call	___wmul	;wreg free
 12888  016E8C  C11D  FFD9         	movff	atoi@s,fsr2l
 12889  016E90  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12890  016E94  50DF               	movf	indf2,w,c
 12891  016E96  0101               	movlb	1	; () banked
 12892  016E98  6F1F               	movwf	??_atoi& (0+255),b
 12893  016E9A  6B20               	clrf	(??_atoi+1)& (0+255),b
 12894  016E9C  5117               	movf	?___wmul& (0+255),w,b
 12895  016E9E  271F               	addwf	??_atoi& (0+255),f,b
 12896  016EA0  5118               	movf	(?___wmul+1)& (0+255),w,b
 12897  016EA2  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 12898  016EA4  0ED0               	movlw	208
 12899  016EA6  251F               	addwf	??_atoi& (0+255),w,b
 12900  016EA8  6F22               	movwf	atoi@a& (0+255),b
 12901  016EAA  0EFF               	movlw	255
 12902  016EAC  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 12903  016EAE  6F23               	movwf	(atoi@a+1)& (0+255),b
 12904  016EB0                     l12818:
 12905                           
 12906                           ; BSR set to: 1
 12907  016EB0  4B1D               	infsnz	atoi@s& (0+255),f,b
 12908  016EB2  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 12909  016EB4                     l1669:
 12910                           
 12911                           ; BSR set to: 1
 12912                           
 12913                           ; BSR set to: 1
 12914  016EB4  C11D  FFD9         	movff	atoi@s,fsr2l
 12915  016EB8  C11E  FFDA         	movff	atoi@s+1,fsr2h
 12916  016EBC  50DF               	movf	indf2,w,c
 12917  016EBE  ECE0  F0C0         	call	_isdigit
 12918  016EC2  B0D8               	btfsc	status,0,c
 12919  016EC4  D7D8               	goto	l1670
 12920  016EC6  0101               	movlb	1	; () banked
 12921  016EC8  5121               	movf	atoi@sign& (0+255),w,b
 12922  016ECA  B4D8               	btfsc	status,2,c
 12923  016ECC  D00D               	goto	l1672
 12924                           
 12925                           ; BSR set to: 1
 12926  016ECE  C122  F11F         	movff	atoi@a,??_atoi
 12927  016ED2  C123  F120         	movff	atoi@a+1,??_atoi+1
 12928  016ED6  1F1F               	comf	??_atoi& (0+255),f,b
 12929  016ED8  1F20               	comf	(??_atoi+1)& (0+255),f,b
 12930  016EDA  4B1F               	infsnz	??_atoi& (0+255),f,b
 12931  016EDC  2B20               	incf	(??_atoi+1)& (0+255),f,b
 12932  016EDE  C11F  F11D         	movff	??_atoi,?_atoi
 12933  016EE2  C120  F11E         	movff	??_atoi+1,?_atoi+1
 12934  016EE6  0012               	return	
 12935  016EE8                     l1672:
 12936                           
 12937                           ; BSR set to: 1
 12938  016EE8  C122  F11D         	movff	atoi@a,?_atoi
 12939  016EEC  C123  F11E         	movff	atoi@a+1,?_atoi+1
 12940                           
 12941                           ; BSR set to: 1
 12942  016EF0  0012               	return		;funcret
 12943  016EF2                     __end_of_atoi:
 12944                           	opt stack 0
 12945                           tblptru	equ	0xFF8
 12946                           tblptrh	equ	0xFF7
 12947                           tblptrl	equ	0xFF6
 12948                           tablat	equ	0xFF5
 12949                           prodh	equ	0xFF4
 12950                           prodl	equ	0xFF3
 12951                           intcon	equ	0xFF2
 12952                           indf0	equ	0xFEF
 12953                           postinc0	equ	0xFEE
 12954                           fsr0h	equ	0xFEA
 12955                           fsr0l	equ	0xFE9
 12956                           wreg	equ	0xFE8
 12957                           indf1	equ	0xFE7
 12958                           postdec1	equ	0xFE5
 12959                           plusw1	equ	0xFE3
 12960                           fsr1h	equ	0xFE2
 12961                           fsr1l	equ	0xFE1
 12962                           indf2	equ	0xFDF
 12963                           postinc2	equ	0xFDE
 12964                           postdec2	equ	0xFDD
 12965                           plusw2	equ	0xFDB
 12966                           fsr2h	equ	0xFDA
 12967                           fsr2l	equ	0xFD9
 12968                           status	equ	0xFD8
 12969                           
 12970 ;; *************** function ___fldiv *****************
 12971 ;; Defined at:
 12972 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 12973 ;; Parameters:    Size  Location     Type
 12974 ;;  b               4   61[BANK1 ] int 
 12975 ;;  a               4   65[BANK1 ] int 
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  grs             4   80[BANK1 ] unsigned long 
 12978 ;;  rem             4   74[BANK1 ] unsigned long 
 12979 ;;  new_exp         2   78[BANK1 ] int 
 12980 ;;  aexp            1   85[BANK1 ] unsigned char 
 12981 ;;  bexp            1   84[BANK1 ] unsigned char 
 12982 ;;  sign            1   73[BANK1 ] unsigned char 
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  4   61[BANK1 ] unsigned char 
 12985 ;; Registers used:
 12986 ;;		wreg, status,2, status,0
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12992 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12993 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12994 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12995 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12996 ;;Total ram usage:       25 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:   13
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_ringBufferLUT
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text24
 13007  0152FA                     __ptext24:
 13008                           	opt stack 0
 13009  0152FA                     ___fldiv:
 13010                           	opt stack 15
 13011                           
 13012                           ; BSR set to: 1
 13013                           ;incstack = 0
 13014  0152FA  0101               	movlb	1	; () banked
 13015  0152FC  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 13016  0152FE  0B80               	andlw	128
 13017  015300  6F49               	movwf	___fldiv@sign& (0+255),b
 13018  015302  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 13019  015304  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 13020  015306  6F54               	movwf	___fldiv@bexp& (0+255),b
 13021                           
 13022                           ; BSR set to: 1
 13023  015308  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 13024                           
 13025                           ; BSR set to: 1
 13026  01530A  8154               	bsf	___fldiv@bexp& (0+255),0,b
 13027                           
 13028                           ; BSR set to: 1
 13029                           
 13030                           ; BSR set to: 1
 13031  01530C  5154               	movf	___fldiv@bexp& (0+255),w,b
 13032  01530E  B4D8               	btfsc	status,2,c
 13033  015310  D00D               	goto	l2070
 13034                           
 13035                           ; BSR set to: 1
 13036  015312  2954               	incf	___fldiv@bexp& (0+255),w,b
 13037  015314  A4D8               	btfss	status,2,c
 13038  015316  D008               	goto	l2071
 13039                           
 13040                           ; BSR set to: 1
 13041  015318  0E00               	movlw	0
 13042  01531A  6F3D               	movwf	___fldiv@b& (0+255),b
 13043  01531C  0E00               	movlw	0
 13044  01531E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13045  015320  0E00               	movlw	0
 13046  015322  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13047  015324  0E00               	movlw	0
 13048  015326  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13049  015328                     l2071:
 13050                           
 13051                           ; BSR set to: 1
 13052                           
 13053                           ; BSR set to: 1
 13054  015328  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 13055  01532A  D006               	goto	L1
 13056  01532C                     l2070:
 13057                           
 13058                           ; BSR set to: 1
 13059                           
 13060                           ; BSR set to: 1
 13061  01532C  0E00               	movlw	0
 13062  01532E  6F3D               	movwf	___fldiv@b& (0+255),b
 13063  015330  0E00               	movlw	0
 13064  015332  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13065  015334  0E00               	movlw	0
 13066  015336  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13067  015338                     L1:
 13068  015338  0E00               	movlw	0
 13069  01533A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13070                           
 13071                           ; BSR set to: 1
 13072                           
 13073                           ; BSR set to: 1
 13074  01533C  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13075  01533E  0B80               	andlw	128
 13076  015340  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 13077                           
 13078                           ; BSR set to: 1
 13079  015342  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13080  015344  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 13081  015346  6F55               	movwf	___fldiv@aexp& (0+255),b
 13082                           
 13083                           ; BSR set to: 1
 13084  015348  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 13085                           
 13086                           ; BSR set to: 1
 13087  01534A  8155               	bsf	___fldiv@aexp& (0+255),0,b
 13088                           
 13089                           ; BSR set to: 1
 13090                           
 13091                           ; BSR set to: 1
 13092  01534C  5155               	movf	___fldiv@aexp& (0+255),w,b
 13093  01534E  B4D8               	btfsc	status,2,c
 13094  015350  D00D               	goto	l2074
 13095                           
 13096                           ; BSR set to: 1
 13097  015352  2955               	incf	___fldiv@aexp& (0+255),w,b
 13098  015354  A4D8               	btfss	status,2,c
 13099  015356  D008               	goto	l2075
 13100                           
 13101                           ; BSR set to: 1
 13102  015358  0E00               	movlw	0
 13103  01535A  6F41               	movwf	___fldiv@a& (0+255),b
 13104  01535C  0E00               	movlw	0
 13105  01535E  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 13106  015360  0E00               	movlw	0
 13107  015362  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 13108  015364  0E00               	movlw	0
 13109  015366  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 13110  015368                     l2075:
 13111                           
 13112                           ; BSR set to: 1
 13113                           
 13114                           ; BSR set to: 1
 13115  015368  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 13116  01536A  D006               	goto	L2
 13117  01536C                     l2074:
 13118                           
 13119                           ; BSR set to: 1
 13120                           
 13121                           ; BSR set to: 1
 13122  01536C  0E00               	movlw	0
 13123  01536E  6F41               	movwf	___fldiv@a& (0+255),b
 13124  015370  0E00               	movlw	0
 13125  015372  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 13126  015374  0E00               	movlw	0
 13127  015376  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 13128  015378                     L2:
 13129  015378  0E00               	movlw	0
 13130  01537A  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 13131                           
 13132                           ; BSR set to: 1
 13133                           
 13134                           ; BSR set to: 1
 13135  01537C  5141               	movf	___fldiv@a& (0+255),w,b
 13136  01537E  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13137  015380  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13138  015382  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13139  015384  A4D8               	btfss	status,2,c
 13140  015386  D015               	goto	l2077
 13141                           
 13142                           ; BSR set to: 1
 13143  015388  0E00               	movlw	0
 13144  01538A  6F3D               	movwf	___fldiv@b& (0+255),b
 13145  01538C  0E00               	movlw	0
 13146  01538E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13147  015390  0E00               	movlw	0
 13148  015392  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13149  015394  0E00               	movlw	0
 13150  015396  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13151                           
 13152                           ; BSR set to: 1
 13153  015398  0E80               	movlw	128
 13154  01539A  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13155  01539C  0E7F               	movlw	127
 13156  01539E  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13157                           
 13158                           ; BSR set to: 1
 13159  0153A0  C13D  F13D         	movff	___fldiv@b,?___fldiv
 13160  0153A4  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 13161  0153A8  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 13162  0153AC  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 13163                           
 13164                           ; BSR set to: 1
 13165  0153B0  0012               	return	
 13166  0153B2                     l2077:
 13167                           
 13168                           ; BSR set to: 1
 13169                           
 13170                           ; BSR set to: 1
 13171  0153B2  5154               	movf	___fldiv@bexp& (0+255),w,b
 13172  0153B4  A4D8               	btfss	status,2,c
 13173  0153B6  D011               	goto	l2079
 13174                           
 13175                           ; BSR set to: 1
 13176  0153B8  0E00               	movlw	0
 13177  0153BA  6F3D               	movwf	___fldiv@b& (0+255),b
 13178  0153BC  0E00               	movlw	0
 13179  0153BE  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13180  0153C0  0E00               	movlw	0
 13181  0153C2  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13182  0153C4  0E00               	movlw	0
 13183  0153C6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13184                           
 13185                           ; BSR set to: 1
 13186  0153C8  C13D  F13D         	movff	___fldiv@b,?___fldiv
 13187  0153CC  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 13188  0153D0  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 13189  0153D4  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 13190                           
 13191                           ; BSR set to: 1
 13192  0153D8  0012               	return	
 13193  0153DA                     l2079:
 13194                           
 13195                           ; BSR set to: 1
 13196                           
 13197                           ; BSR set to: 1
 13198  0153DA  5155               	movf	___fldiv@aexp& (0+255),w,b
 13199  0153DC  6F45               	movwf	??___fldiv& (0+255),b
 13200  0153DE  6B46               	clrf	(??___fldiv+1)& (0+255),b
 13201  0153E0  1F45               	comf	??___fldiv& (0+255),f,b
 13202  0153E2  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 13203  0153E4  4B45               	infsnz	??___fldiv& (0+255),f,b
 13204  0153E6  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 13205  0153E8  5154               	movf	___fldiv@bexp& (0+255),w,b
 13206  0153EA  6F47               	movwf	(??___fldiv+2)& (0+255),b
 13207  0153EC  6B48               	clrf	(??___fldiv+3)& (0+255),b
 13208  0153EE  5145               	movf	??___fldiv& (0+255),w,b
 13209  0153F0  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 13210  0153F2  5146               	movf	(??___fldiv+1)& (0+255),w,b
 13211  0153F4  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 13212  0153F6  0E7F               	movlw	127
 13213  0153F8  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 13214  0153FA  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 13215  0153FC  0E00               	movlw	0
 13216  0153FE  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 13217  015400  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13218                           
 13219                           ; BSR set to: 1
 13220  015402  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 13221  015406  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 13222  01540A  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 13223  01540E  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 13224                           
 13225                           ; BSR set to: 1
 13226  015412  0E00               	movlw	0
 13227  015414  6F3D               	movwf	___fldiv@b& (0+255),b
 13228  015416  0E00               	movlw	0
 13229  015418  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13230  01541A  0E00               	movlw	0
 13231  01541C  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13232  01541E  0E00               	movlw	0
 13233  015420  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13234                           
 13235                           ; BSR set to: 1
 13236  015422  0E00               	movlw	0
 13237  015424  6F50               	movwf	___fldiv@grs& (0+255),b
 13238  015426  0E00               	movlw	0
 13239  015428  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 13240  01542A  0E00               	movlw	0
 13241  01542C  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 13242  01542E  0E00               	movlw	0
 13243  015430  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 13244                           
 13245                           ; BSR set to: 1
 13246  015432  0E00               	movlw	0
 13247  015434  6F55               	movwf	___fldiv@aexp& (0+255),b
 13248  015436  D028               	goto	l2080
 13249  015438                     
 13250                           ; BSR set to: 1
 13251                           
 13252                           ; BSR set to: 1
 13253  015438  5155               	movf	___fldiv@aexp& (0+255),w,b
 13254  01543A  B4D8               	btfsc	status,2,c
 13255  01543C  D011               	goto	l2082
 13256                           
 13257                           ; BSR set to: 1
 13258  01543E  90D8               	bcf	status,0,c
 13259  015440  374A               	rlcf	___fldiv@rem& (0+255),f,b
 13260  015442  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13261  015444  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13262  015446  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13263  015448  90D8               	bcf	status,0,c
 13264  01544A  373D               	rlcf	___fldiv@b& (0+255),f,b
 13265  01544C  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13266  01544E  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13267  015450  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13268                           
 13269                           ; BSR set to: 1
 13270  015452  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 13271                           
 13272                           ; BSR set to: 1
 13273  015454  813D               	bsf	___fldiv@b& (0+255),0,b
 13274                           
 13275                           ; BSR set to: 1
 13276  015456  90D8               	bcf	status,0,c
 13277  015458  3750               	rlcf	___fldiv@grs& (0+255),f,b
 13278  01545A  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13279  01545C  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13280  01545E  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13281  015460                     l2082:
 13282                           
 13283                           ; BSR set to: 1
 13284                           
 13285                           ; BSR set to: 1
 13286  015460  5141               	movf	___fldiv@a& (0+255),w,b
 13287  015462  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 13288  015464  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 13289  015466  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13290  015468  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 13291  01546A  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13292  01546C  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13293  01546E  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13294  015470  A0D8               	btfss	status,0,c
 13295  015472  D009               	goto	l2084
 13296                           
 13297                           ; BSR set to: 1
 13298  015474  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13299                           
 13300                           ; BSR set to: 1
 13301  015476  5141               	movf	___fldiv@a& (0+255),w,b
 13302  015478  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 13303  01547A  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 13304  01547C  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13305  01547E  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 13306  015480  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13307  015482  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 13308  015484  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13309  015486                     l2084:
 13310                           
 13311                           ; BSR set to: 1
 13312                           
 13313                           ; BSR set to: 1
 13314  015486  2B55               	incf	___fldiv@aexp& (0+255),f,b
 13315  015488                     l2080:
 13316                           
 13317                           ; BSR set to: 1
 13318  015488  0E19               	movlw	25
 13319  01548A  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 13320  01548C  D7D5               	goto	l2081
 13321                           
 13322                           ; BSR set to: 1
 13323                           
 13324                           ; BSR set to: 1
 13325  01548E  514A               	movf	___fldiv@rem& (0+255),w,b
 13326  015490  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13327  015492  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13328  015494  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13329  015496  B4D8               	btfsc	status,2,c
 13330  015498  D011               	goto	l2087
 13331                           
 13332                           ; BSR set to: 1
 13333  01549A  8150               	bsf	___fldiv@grs& (0+255),0,b
 13334                           
 13335                           ; BSR set to: 1
 13336  01549C  D00F               	goto	l2087
 13337  01549E                     
 13338                           ; BSR set to: 1
 13339                           
 13340                           ; BSR set to: 1
 13341  01549E  90D8               	bcf	status,0,c
 13342  0154A0  373D               	rlcf	___fldiv@b& (0+255),f,b
 13343  0154A2  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13344  0154A4  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13345  0154A6  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13346                           
 13347                           ; BSR set to: 1
 13348  0154A8  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 13349                           
 13350                           ; BSR set to: 1
 13351  0154AA  813D               	bsf	___fldiv@b& (0+255),0,b
 13352                           
 13353                           ; BSR set to: 1
 13354  0154AC  90D8               	bcf	status,0,c
 13355  0154AE  3750               	rlcf	___fldiv@grs& (0+255),f,b
 13356  0154B0  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13357  0154B2  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13358  0154B4  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13359  0154B6  074E               	decf	___fldiv@new_exp& (0+255),f,b
 13360  0154B8  A0D8               	btfss	status,0,c
 13361  0154BA  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13362  0154BC                     l2087:
 13363                           
 13364                           ; BSR set to: 1
 13365                           
 13366                           ; BSR set to: 1
 13367  0154BC  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 13368  0154BE  D7EF               	goto	l2088
 13369                           
 13370                           ; BSR set to: 1
 13371                           
 13372                           ; BSR set to: 1
 13373  0154C0  0E00               	movlw	0
 13374  0154C2  6F55               	movwf	___fldiv@aexp& (0+255),b
 13375                           
 13376                           ; BSR set to: 1
 13377  0154C4  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13378  0154C6  D016               	goto	l2094
 13379                           
 13380                           ; BSR set to: 1
 13381  0154C8  0EFF               	movlw	255
 13382  0154CA  1550               	andwf	___fldiv@grs& (0+255),w,b
 13383  0154CC  6F45               	movwf	??___fldiv& (0+255),b
 13384  0154CE  0EFF               	movlw	255
 13385  0154D0  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13386  0154D2  6F46               	movwf	(??___fldiv+1)& (0+255),b
 13387  0154D4  0EFF               	movlw	255
 13388  0154D6  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13389  0154D8  6F47               	movwf	(??___fldiv+2)& (0+255),b
 13390  0154DA  0E7F               	movlw	127
 13391  0154DC  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13392  0154DE  6F48               	movwf	(??___fldiv+3)& (0+255),b
 13393  0154E0  5145               	movf	??___fldiv& (0+255),w,b
 13394  0154E2  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 13395  0154E4  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 13396  0154E6  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 13397  0154E8  A4D8               	btfss	status,2,c
 13398  0154EA  D002               	goto	u15550
 13399                           
 13400                           ; BSR set to: 1
 13401                           
 13402                           ; BSR set to: 1
 13403  0154EC  A13D               	btfss	___fldiv@b& (0+255),0,b
 13404  0154EE  D002               	goto	l2094
 13405  0154F0                     u15550:
 13406                           
 13407                           ; BSR set to: 1
 13408  0154F0  0E01               	movlw	1
 13409  0154F2  6F55               	movwf	___fldiv@aexp& (0+255),b
 13410  0154F4                     l2094:
 13411                           
 13412                           ; BSR set to: 1
 13413                           
 13414                           ; BSR set to: 1
 13415                           
 13416                           ; BSR set to: 1
 13417  0154F4  5155               	movf	___fldiv@aexp& (0+255),w,b
 13418  0154F6  B4D8               	btfsc	status,2,c
 13419  0154F8  D01F               	goto	l2096
 13420                           
 13421                           ; BSR set to: 1
 13422  0154FA  0E01               	movlw	1
 13423  0154FC  273D               	addwf	___fldiv@b& (0+255),f,b
 13424  0154FE  0E00               	movlw	0
 13425  015500  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13426  015502  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13427  015504  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13428                           
 13429                           ; BSR set to: 1
 13430  015506  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 13431  015508  D017               	goto	l2096
 13432                           
 13433                           ; BSR set to: 1
 13434  01550A  C13D  F145         	movff	___fldiv@b,??___fldiv
 13435  01550E  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 13436  015512  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 13437  015516  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 13438  01551A  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 13439  01551C  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 13440  01551E  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 13441  015520  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 13442  015522  3345               	rrcf	??___fldiv& (0+255),f,b
 13443  015524  C145  F13D         	movff	??___fldiv,___fldiv@b
 13444  015528  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 13445  01552C  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 13446  015530  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 13447                           
 13448                           ; BSR set to: 1
 13449  015534  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 13450  015536  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13451  015538                     l2096:
 13452                           
 13453                           ; BSR set to: 1
 13454                           
 13455                           ; BSR set to: 1
 13456                           
 13457                           ; BSR set to: 1
 13458  015538  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13459  01553A  D010               	goto	l2097
 13460  01553C  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13461  01553E  E103               	bnz	u15580
 13462  015540  294E               	incf	___fldiv@new_exp& (0+255),w,b
 13463  015542  A0D8               	btfss	status,0,c
 13464  015544  D00B               	goto	l2097
 13465  015546                     u15580:
 13466                           
 13467                           ; BSR set to: 1
 13468  015546  0E00               	movlw	0
 13469  015548  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13470  01554A  694E               	setf	___fldiv@new_exp& (0+255),b
 13471  01554C  0E00               	movlw	0
 13472  01554E  6F3D               	movwf	___fldiv@b& (0+255),b
 13473  015550  0E00               	movlw	0
 13474  015552  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13475  015554  0E00               	movlw	0
 13476  015556  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13477  015558  0E00               	movlw	0
 13478  01555A  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13479  01555C                     l2097:
 13480                           
 13481                           ; BSR set to: 1
 13482                           
 13483                           ; BSR set to: 1
 13484  01555C  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13485  01555E  D005               	goto	u15590
 13486  015560  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13487  015562  E111               	bnz	l12946
 13488  015564  054E               	decf	___fldiv@new_exp& (0+255),w,b
 13489  015566  B0D8               	btfsc	status,0,c
 13490  015568  D00E               	goto	l2098
 13491  01556A                     u15590:
 13492                           
 13493                           ; BSR set to: 1
 13494  01556A  0E00               	movlw	0
 13495  01556C  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13496  01556E  0E00               	movlw	0
 13497  015570  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 13498  015572  0E00               	movlw	0
 13499  015574  6F3D               	movwf	___fldiv@b& (0+255),b
 13500  015576  0E00               	movlw	0
 13501  015578  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 13502  01557A  0E00               	movlw	0
 13503  01557C  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 13504  01557E  0E00               	movlw	0
 13505  015580  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13506  015582  0E00               	movlw	0
 13507  015584  6F49               	movwf	___fldiv@sign& (0+255),b
 13508  015586                     l2098:
 13509  015586                     l12946:
 13510                           
 13511                           ; BSR set to: 1
 13512  015586  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 13513                           
 13514                           ; BSR set to: 1
 13515  01558A  A154               	btfss	___fldiv@bexp& (0+255),0,b
 13516  01558C  D002               	goto	l2099
 13517                           
 13518                           ; BSR set to: 1
 13519  01558E  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 13520  015590  D001               	goto	l2100
 13521  015592                     l2099:
 13522                           
 13523                           ; BSR set to: 1
 13524                           
 13525                           ; BSR set to: 1
 13526  015592  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 13527  015594                     l2100:
 13528                           
 13529                           ; BSR set to: 1
 13530                           
 13531                           ; BSR set to: 1
 13532  015594  90D8               	bcf	status,0,c
 13533  015596  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 13534  015598  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 13535                           
 13536                           ; BSR set to: 1
 13537  01559A  5149               	movf	___fldiv@sign& (0+255),w,b
 13538  01559C  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13539                           
 13540                           ; BSR set to: 1
 13541  01559E  C13D  F13D         	movff	___fldiv@b,?___fldiv
 13542  0155A2  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 13543  0155A6  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 13544  0155AA  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 13545  0155AE  0012               	return	
 13546  0155B0                     __end_of___fldiv:
 13547                           	opt stack 0
 13548                           tblptru	equ	0xFF8
 13549                           tblptrh	equ	0xFF7
 13550                           tblptrl	equ	0xFF6
 13551                           tablat	equ	0xFF5
 13552                           prodh	equ	0xFF4
 13553                           prodl	equ	0xFF3
 13554                           intcon	equ	0xFF2
 13555                           indf0	equ	0xFEF
 13556                           postinc0	equ	0xFEE
 13557                           fsr0h	equ	0xFEA
 13558                           fsr0l	equ	0xFE9
 13559                           wreg	equ	0xFE8
 13560                           indf1	equ	0xFE7
 13561                           postdec1	equ	0xFE5
 13562                           plusw1	equ	0xFE3
 13563                           fsr1h	equ	0xFE2
 13564                           fsr1l	equ	0xFE1
 13565                           indf2	equ	0xFDF
 13566                           postinc2	equ	0xFDE
 13567                           postdec2	equ	0xFDD
 13568                           plusw2	equ	0xFDB
 13569                           fsr2h	equ	0xFDA
 13570                           fsr2l	equ	0xFD9
 13571                           status	equ	0xFD8
 13572                           
 13573 ;; *************** function _TMR7_StopTimer *****************
 13574 ;; Defined at:
 13575 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;		None
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;		None
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  1    wreg      void 
 13582 ;; Registers used:
 13583 ;;		None
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13593 ;;Total ram usage:        0 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; Hardware stack levels required when called:   13
 13596 ;; This function calls:
 13597 ;;		Nothing
 13598 ;; This function is called by:
 13599 ;;		_ringBufferLUT
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text25
 13604  0183D2                     __ptext25:
 13605                           	opt stack 0
 13606  0183D2                     _TMR7_StopTimer:
 13607                           	opt stack 15
 13608                           
 13609                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 13610                           
 13611                           ; BSR set to: 1
 13612                           ;incstack = 0
 13613  0183D2  010F               	movlb	15	; () banked
 13614  0183D4  9130               	bcf	48,0,b	;volatile
 13615                           
 13616                           ; BSR set to: 15
 13617  0183D6  0012               	return		;funcret
 13618  0183D8                     __end_of_TMR7_StopTimer:
 13619                           	opt stack 0
 13620                           tblptru	equ	0xFF8
 13621                           tblptrh	equ	0xFF7
 13622                           tblptrl	equ	0xFF6
 13623                           tablat	equ	0xFF5
 13624                           prodh	equ	0xFF4
 13625                           prodl	equ	0xFF3
 13626                           intcon	equ	0xFF2
 13627                           indf0	equ	0xFEF
 13628                           postinc0	equ	0xFEE
 13629                           fsr0h	equ	0xFEA
 13630                           fsr0l	equ	0xFE9
 13631                           wreg	equ	0xFE8
 13632                           indf1	equ	0xFE7
 13633                           postdec1	equ	0xFE5
 13634                           plusw1	equ	0xFE3
 13635                           fsr1h	equ	0xFE2
 13636                           fsr1l	equ	0xFE1
 13637                           indf2	equ	0xFDF
 13638                           postinc2	equ	0xFDE
 13639                           postdec2	equ	0xFDD
 13640                           plusw2	equ	0xFDB
 13641                           fsr2h	equ	0xFDA
 13642                           fsr2l	equ	0xFD9
 13643                           status	equ	0xFD8
 13644                           
 13645 ;; *************** function _EUSART2_Read *****************
 13646 ;; Defined at:
 13647 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;		None
 13650 ;; Auto vars:     Size  Location     Type
 13651 ;;  readValue       1   23[BANK1 ] unsigned char 
 13652 ;; Return value:  Size  Location     Type
 13653 ;;                  1    wreg      unsigned char 
 13654 ;; Registers used:
 13655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13656 ;; Tracked objects:
 13657 ;;		On entry : 0/0
 13658 ;;		On exit  : 0/0
 13659 ;;		Unchanged: 0/0
 13660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13662 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13664 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13665 ;;Total ram usage:        1 bytes
 13666 ;; Hardware stack levels used:    1
 13667 ;; Hardware stack levels required when called:   13
 13668 ;; This function calls:
 13669 ;;		Nothing
 13670 ;; This function is called by:
 13671 ;;		_terminal_ringBufferPull
 13672 ;;		_getch
 13673 ;; This function uses a non-reentrant model
 13674 ;;
 13675                           
 13676                           	psect	text26
 13677  017C78                     __ptext26:
 13678                           	opt stack 0
 13679  017C78                     _EUSART2_Read:
 13680                           	opt stack 16
 13681                           
 13682                           ;eusart2.c: 139: uint8_t readValue = 0;
 13683                           
 13684                           ; BSR set to: 15
 13685                           ;incstack = 0
 13686  017C78  0E00               	movlw	0
 13687  017C7A  0101               	movlb	1	; () banked
 13688  017C7C  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13689                           
 13690                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 13691  017C7E  D002               	goto	l381
 13692  017C80                     l382:
 13693                           
 13694                           ; BSR set to: 1
 13695  017C80  0004               	clrwdt		;# 
 13696                           
 13697                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 13698  017C82  827E               	bsf	3966,1,c	;volatile
 13699  017C84                     l381:
 13700  017C84  0101               	movlb	1	; () banked
 13701  017C86  51D9               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 13702  017C88  B4D8               	btfsc	status,2,c
 13703  017C8A  D7FA               	goto	l382
 13704                           
 13705                           ; BSR set to: 1
 13706                           ;eusart2.c: 145: }
 13707                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 13708  017C8C  927E               	bcf	3966,1,c	;volatile
 13709                           
 13710                           ; BSR set to: 1
 13711                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 13712  017C8E  51DA               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13713  017C90  0D01               	mullw	1
 13714  017C92  0E00               	movlw	low _eusart2RxBuffer
 13715  017C94  24F3               	addwf	prodl,w,c
 13716  017C96  6ED9               	movwf	fsr2l,c
 13717  017C98  0E02               	movlw	high _eusart2RxBuffer
 13718  017C9A  20F4               	addwfc	prodh,w,c
 13719  017C9C  6EDA               	movwf	fsr2h,c
 13720  017C9E  50DF               	movf	indf2,w,c
 13721  017CA0  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13722                           
 13723                           ; BSR set to: 1
 13724  017CA2  2BDA               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 13725                           
 13726                           ; BSR set to: 1
 13727                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 13728  017CA4  0E3F               	movlw	63
 13729  017CA6  65DA               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 13730  017CA8  D002               	goto	l384
 13731                           
 13732                           ; BSR set to: 1
 13733                           ;eusart2.c: 151: {
 13734                           ;eusart2.c: 152: eusart2RxTail = 0;
 13735  017CAA  0E00               	movlw	0
 13736  017CAC  6FDA               	movwf	_eusart2RxTail& (0+255),b	;volatile
 13737  017CAE                     l384:
 13738                           
 13739                           ; BSR set to: 1
 13740                           ;eusart2.c: 153: }
 13741                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 13742                           
 13743                           ; BSR set to: 1
 13744  017CAE  010E               	movlb	14	; () banked
 13745  017CB0  9F2C               	bcf	44,7,b	;volatile
 13746                           
 13747                           ; BSR set to: 14
 13748                           ;eusart2.c: 155: eusart2RxCount--;
 13749  017CB2  0101               	movlb	1	; () banked
 13750  017CB4  07D9               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 13751                           
 13752                           ; BSR set to: 1
 13753                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 13754  017CB6  010E               	movlb	14	; () banked
 13755  017CB8  8F2C               	bsf	44,7,b	;volatile
 13756                           
 13757                           ; BSR set to: 14
 13758                           ;eusart2.c: 158: return readValue;
 13759  017CBA  0101               	movlb	1	; () banked
 13760  017CBC  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 13761  017CBE  0012               	return	
 13762  017CC0                     __end_of_EUSART2_Read:
 13763                           	opt stack 0
 13764                           tblptru	equ	0xFF8
 13765                           tblptrh	equ	0xFF7
 13766                           tblptrl	equ	0xFF6
 13767                           tablat	equ	0xFF5
 13768                           prodh	equ	0xFF4
 13769                           prodl	equ	0xFF3
 13770                           intcon	equ	0xFF2
 13771                           indf0	equ	0xFEF
 13772                           postinc0	equ	0xFEE
 13773                           fsr0h	equ	0xFEA
 13774                           fsr0l	equ	0xFE9
 13775                           wreg	equ	0xFE8
 13776                           indf1	equ	0xFE7
 13777                           postdec1	equ	0xFE5
 13778                           plusw1	equ	0xFE3
 13779                           fsr1h	equ	0xFE2
 13780                           fsr1l	equ	0xFE1
 13781                           indf2	equ	0xFDF
 13782                           postinc2	equ	0xFDE
 13783                           postdec2	equ	0xFDD
 13784                           plusw2	equ	0xFDB
 13785                           fsr2h	equ	0xFDA
 13786                           fsr2l	equ	0xFD9
 13787                           status	equ	0xFD8
 13788                           
 13789 ;; *************** function _terminal_clearTerminal *****************
 13790 ;; Defined at:
 13791 ;;		line 80 in file "ring_buffer_interface.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;		None
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;		None
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  1    wreg      void 
 13798 ;; Registers used:
 13799 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/0
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13809 ;;Total ram usage:        0 bytes
 13810 ;; Hardware stack levels used:    1
 13811 ;; Hardware stack levels required when called:   16
 13812 ;; This function calls:
 13813 ;;		_printf
 13814 ;; This function is called by:
 13815 ;;		_main
 13816 ;; This function uses a non-reentrant model
 13817 ;;
 13818                           
 13819                           	psect	text27
 13820  01830E                     __ptext27:
 13821                           	opt stack 0
 13822  01830E                     _terminal_clearTerminal:
 13823                           	opt stack 14
 13824                           
 13825                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 13826                           
 13827                           ; BSR set to: 1
 13828                           ;incstack = 0
 13829  01830E  0EB0               	movlw	low STR_2
 13830  018310  0101               	movlb	1	; () banked
 13831  018312  6F7C               	movwf	printf@f& (0+255),b
 13832  018314  0EFF               	movlw	high STR_2
 13833  018316  6F7D               	movwf	(printf@f+1)& (0+255),b
 13834  018318  ECD0  F086         	call	_printf	;wreg free
 13835  01831C  0012               	return		;funcret
 13836  01831E                     __end_of_terminal_clearTerminal:
 13837                           	opt stack 0
 13838                           tblptru	equ	0xFF8
 13839                           tblptrh	equ	0xFF7
 13840                           tblptrl	equ	0xFF6
 13841                           tablat	equ	0xFF5
 13842                           prodh	equ	0xFF4
 13843                           prodl	equ	0xFF3
 13844                           intcon	equ	0xFF2
 13845                           indf0	equ	0xFEF
 13846                           postinc0	equ	0xFEE
 13847                           fsr0h	equ	0xFEA
 13848                           fsr0l	equ	0xFE9
 13849                           wreg	equ	0xFE8
 13850                           indf1	equ	0xFE7
 13851                           postdec1	equ	0xFE5
 13852                           plusw1	equ	0xFE3
 13853                           fsr1h	equ	0xFE2
 13854                           fsr1l	equ	0xFE1
 13855                           indf2	equ	0xFDF
 13856                           postinc2	equ	0xFDE
 13857                           postdec2	equ	0xFDD
 13858                           plusw2	equ	0xFDB
 13859                           fsr2h	equ	0xFDA
 13860                           fsr2l	equ	0xFD9
 13861                           status	equ	0xFD8
 13862                           
 13863 ;; *************** function _printf *****************
 13864 ;; Defined at:
 13865 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;  f               2  124[BANK1 ] PTR const unsigned char 
 13868 ;;		 -> STR_126(30), STR_125(46), STR_124(39), STR_123(62), 
 13869 ;;		 -> STR_122(33), STR_121(2170), STR_119(53), STR_117(58), 
 13870 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 13871 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 13872 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 13873 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 13874 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 13875 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 13876 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 13877 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(57), 
 13878 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 13879 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 13880 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 13881 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 13882 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;  idx             1  144[BANK1 ] unsigned char 
 13885 ;;  fval            4  163[BANK1 ] unsigned char 
 13886 ;;  val             4  159[BANK1 ] unsigned long 
 13887 ;;  tmpval          4  155[BANK1 ] struct .
 13888 ;;  prec            2  167[BANK1 ] int 
 13889 ;;  exp             2  153[BANK1 ] int 
 13890 ;;  flag            2  151[BANK1 ] unsigned short 
 13891 ;;  ap              2  149[BANK1 ] PTR void [1]
 13892 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13893 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 13894 ;;		 -> STR_140(7), printf@c(1), STR_139(16), STR_138(22), 
 13895 ;;		 -> STR_137(21), STR_136(27), STR_135(41), STR_134(32), 
 13896 ;;		 -> STR_133(19), STR_132(16), STR_131(15), STR_130(16), 
 13897 ;;		 -> STR_129(10), STR_128(13), STR_127(12), ringBufferLUT@channel_name(22), 
 13898 ;;		 -> TRIAC_Firing_Angle(4), 
 13899 ;;  len             2  145[BANK1 ] unsigned int 
 13900 ;;  width           2    0        int 
 13901 ;;  c               1  169[BANK1 ] char 
 13902 ;;  d               1    0        unsigned char 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  2  124[BANK1 ] int 
 13905 ;; Registers used:
 13906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13912 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13913 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13914 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13915 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13916 ;;Total ram usage:       46 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:   15
 13919 ;; This function calls:
 13920 ;;		___awdiv
 13921 ;;		___fladd
 13922 ;;		___flge
 13923 ;;		___flmul
 13924 ;;		___flneg
 13925 ;;		___flsub
 13926 ;;		___fltol
 13927 ;;		___lldiv
 13928 ;;		___llmod
 13929 ;;		___wmul
 13930 ;;		___xxtofl
 13931 ;;		__div_to_l_
 13932 ;;		__tdiv_to_l_
 13933 ;;		_fround
 13934 ;;		_isdigit
 13935 ;;		_putch
 13936 ;;		_scale
 13937 ;; This function is called by:
 13938 ;;		_terminal_clearTerminal
 13939 ;;		_terminal_setCursorHome
 13940 ;;		_terminal_textAttributes
 13941 ;;		_terminal_printNewline
 13942 ;;		_ringBufferLUT
 13943 ;;		_terminal_printResetMessage
 13944 ;;		_terminal_clearLine
 13945 ;;		_terminal_saveCursor
 13946 ;;		_terminal_returnCursor
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950                           	psect	text28
 13951  010DA0                     __ptext28:
 13952                           	opt stack 0
 13953  010DA0                     _printf:
 13954                           	opt stack 13
 13955                           
 13956                           ;doprnt.c: 466: va_list ap;
 13957                           ;doprnt.c: 499: signed char c;
 13958                           ;doprnt.c: 501: int width;
 13959                           ;doprnt.c: 504: int prec;
 13960                           ;doprnt.c: 508: unsigned short flag;
 13961                           ;doprnt.c: 515: char d;
 13962                           ;doprnt.c: 516: double fval;
 13963                           ;doprnt.c: 517: int exp;
 13964                           ;doprnt.c: 523: union {
 13965                           ;doprnt.c: 524: unsigned long vd;
 13966                           ;doprnt.c: 525: double integ;
 13967                           ;doprnt.c: 526: } tmpval;
 13968                           ;doprnt.c: 528: unsigned long val;
 13969                           ;doprnt.c: 529: unsigned len;
 13970                           ;doprnt.c: 530: const char * cp;
 13971                           ;doprnt.c: 533: *ap = __va_start();
 13972                           
 13973                           ;incstack = 0
 13974  010DA0  0E7E               	movlw	low (?_printf+2)
 13975  010DA2  0101               	movlb	1	; () banked
 13976  010DA4  6F95               	movwf	printf@ap& (0+255),b
 13977  010DA6  0E01               	movlw	high (?_printf+2)
 13978  010DA8  6F96               	movwf	(printf@ap+1)& (0+255),b
 13979                           
 13980                           ;doprnt.c: 536: while(c = *f++) {
 13981  010DAA  EF44  F08C         	goto	u14780
 13982  010DAE                     
 13983                           ; BSR set to: 1
 13984                           ;doprnt.c: 538: if(c != '%')
 13985                           
 13986                           ; BSR set to: 1
 13987  010DAE  0E25               	movlw	37
 13988  010DB0  19A9               	xorwf	printf@c& (0+255),w,b
 13989  010DB2  B4D8               	btfsc	status,2,c
 13990  010DB4  D005               	goto	l1364
 13991                           
 13992                           ; BSR set to: 1
 13993                           ;doprnt.c: 540: {
 13994                           ;doprnt.c: 541: (putch(c) );
 13995  010DB6  51A9               	movf	printf@c& (0+255),w,b
 13996  010DB8  EC97  F0C1         	call	_putch
 13997                           
 13998                           ;doprnt.c: 542: continue;
 13999  010DBC  EF44  F08C         	goto	u14780
 14000  010DC0                     l1364:
 14001                           
 14002                           ;doprnt.c: 543: }
 14003                           ;doprnt.c: 548: flag = 0;
 14004  010DC0  0E00               	movlw	0
 14005  010DC2  0101               	movlb	1	; () banked
 14006  010DC4  6F98               	movwf	(printf@flag+1)& (0+255),b
 14007  010DC6  0E00               	movlw	0
 14008  010DC8  6F97               	movwf	printf@flag& (0+255),b
 14009                           
 14010                           ; BSR set to: 1
 14011                           ;doprnt.c: 611: if(*f == '.') {
 14012  010DCA  C17C  FFF6         	movff	printf@f,tblptrl
 14013  010DCE  C17D  FFF7         	movff	printf@f+1,tblptrh
 14014  010DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 14015  010DD4  6EF8               	movwf	tblptru,c
 14016  010DD6  0E0D               	movlw	(high __ramtop+-1)
 14017  010DD8  64F7               	cpfsgt	tblptrh,c
 14018  010DDA  D003               	bra	u14297
 14019  010DDC  0008               	tblrd		*
 14020  010DDE  50F5               	movf	tablat,w,c
 14021  010DE0  D005               	bra	u14290
 14022  010DE2                     u14297:
 14023  010DE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14024  010DE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14025  010DEA  50EF               	movf	indf0,w,c
 14026  010DEC                     u14290:
 14027  010DEC  0A2E               	xorlw	46
 14028  010DEE  A4D8               	btfss	status,2,c
 14029  010DF0  D049               	goto	l1365
 14030                           
 14031                           ;doprnt.c: 612: flag |= 0x4000;
 14032  010DF2  0101               	movlb	1	; () banked
 14033  010DF4  8D98               	bsf	(printf@flag+1)& (0+255),6,b
 14034                           
 14035                           ;doprnt.c: 613: f++;
 14036  010DF6  4B7C               	infsnz	printf@f& (0+255),f,b
 14037  010DF8  2B7D               	incf	(printf@f+1)& (0+255),f,b
 14038                           
 14039                           ; BSR set to: 1
 14040                           ;doprnt.c: 620: {
 14041                           ;doprnt.c: 621: prec = 0;
 14042  010DFA  0E00               	movlw	0
 14043  010DFC  6FA8               	movwf	(printf@prec+1)& (0+255),b
 14044  010DFE  0E00               	movlw	0
 14045  010E00  6FA7               	movwf	printf@prec& (0+255),b
 14046                           
 14047                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14048  010E02  D02A               	goto	l1366
 14049  010E04                     
 14050                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14051                           
 14052                           ; BSR set to: 1
 14053  010E04  C1A7  F117         	movff	printf@prec,___wmul@multiplier
 14054  010E08  C1A8  F118         	movff	printf@prec+1,___wmul@multiplier+1
 14055  010E0C  0E00               	movlw	0
 14056  010E0E  0101               	movlb	1	; () banked
 14057  010E10  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14058  010E12  0E0A               	movlw	10
 14059  010E14  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14060  010E16  EC59  F0C0         	call	___wmul	;wreg free
 14061  010E1A  C17C  FFF6         	movff	printf@f,tblptrl
 14062  010E1E  C17D  FFF7         	movff	printf@f+1,tblptrh
 14063  010E22  0E00               	movlw	low (__mediumconst shr (0+16))
 14064  010E24  6EF8               	movwf	tblptru,c
 14065  010E26  0E0D               	movlw	(high __ramtop+-1)
 14066  010E28  64F7               	cpfsgt	tblptrh,c
 14067  010E2A  D003               	bra	u14317
 14068  010E2C  0008               	tblrd		*
 14069  010E2E  50F5               	movf	tablat,w,c
 14070  010E30  D005               	bra	u14310
 14071  010E32                     u14317:
 14072  010E32  CFF6 FFE9          	movff	tblptrl,fsr0l
 14073  010E36  CFF7 FFEA          	movff	tblptrh,fsr0h
 14074  010E3A  50EF               	movf	indf0,w,c
 14075  010E3C                     u14310:
 14076  010E3C  0101               	movlb	1	; () banked
 14077  010E3E  6F86               	movwf	??_printf& (0+255),b
 14078  010E40  5186               	movf	??_printf& (0+255),w,b
 14079  010E42  2717               	addwf	?___wmul& (0+255),f,b
 14080  010E44  0E00               	movlw	0
 14081  010E46  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 14082  010E48  0ED0               	movlw	208
 14083  010E4A  2517               	addwf	?___wmul& (0+255),w,b
 14084  010E4C  6FA7               	movwf	printf@prec& (0+255),b
 14085  010E4E  0EFF               	movlw	255
 14086  010E50  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 14087  010E52  6FA8               	movwf	(printf@prec+1)& (0+255),b
 14088                           
 14089                           ; BSR set to: 1
 14090  010E54  4B7C               	infsnz	printf@f& (0+255),f,b
 14091  010E56  2B7D               	incf	(printf@f+1)& (0+255),f,b
 14092  010E58                     l1366:
 14093                           
 14094                           ; BSR set to: 1
 14095                           
 14096                           ; BSR set to: 1
 14097  010E58  C17C  FFF6         	movff	printf@f,tblptrl
 14098  010E5C  C17D  FFF7         	movff	printf@f+1,tblptrh
 14099  010E60  0E00               	movlw	low (__mediumconst shr (0+16))
 14100  010E62  6EF8               	movwf	tblptru,c
 14101  010E64  0E0D               	movlw	(high __ramtop+-1)
 14102  010E66  64F7               	cpfsgt	tblptrh,c
 14103  010E68  D003               	bra	u14327
 14104  010E6A  0008               	tblrd		*
 14105  010E6C  50F5               	movf	tablat,w,c
 14106  010E6E  D005               	bra	u14320
 14107  010E70                     u14327:
 14108  010E70  CFF6 FFE9          	movff	tblptrl,fsr0l
 14109  010E74  CFF7 FFEA          	movff	tblptrh,fsr0h
 14110  010E78  50EF               	movf	indf0,w,c
 14111  010E7A                     u14320:
 14112  010E7A  ECE0  F0C0         	call	_isdigit
 14113  010E7E  A0D8               	btfss	status,0,c
 14114  010E80  D088               	goto	l1370
 14115  010E82  D7C0               	goto	l1367
 14116  010E84                     l1365:
 14117                           
 14118                           ;doprnt.c: 626: prec = 0;
 14119  010E84  0E00               	movlw	0
 14120  010E86  0101               	movlb	1	; () banked
 14121  010E88  6FA8               	movwf	(printf@prec+1)& (0+255),b
 14122  010E8A  0E00               	movlw	0
 14123  010E8C  6FA7               	movwf	printf@prec& (0+255),b
 14124                           
 14125                           ; BSR set to: 1
 14126                           ;doprnt.c: 628: flag |= 0x1000;
 14127  010E8E  8998               	bsf	(printf@flag+1)& (0+255),4,b
 14128                           
 14129                           ; BSR set to: 1
 14130                           ;doprnt.c: 630: }
 14131                           ;doprnt.c: 635: switch(c = *f++) {
 14132  010E90  D080               	goto	l1370
 14133  010E92                     
 14134                           ; BSR set to: 1
 14135                           ;doprnt.c: 663: flag |= 0x400;
 14136                           
 14137                           ; BSR set to: 1
 14138  010E92  8598               	bsf	(printf@flag+1)& (0+255),2,b
 14139                           
 14140                           ; BSR set to: 1
 14141                           ;doprnt.c: 698: case 'i':
 14142                           ;doprnt.c: 699: break;
 14143                           
 14144                           ; BSR set to: 1
 14145                           
 14146                           ;doprnt.c: 697: case 'd':
 14147                           
 14148                           ;doprnt.c: 664: break;
 14149  010E94  D0B5               	goto	l1374
 14150  010E96                     
 14151                           ; BSR set to: 1
 14152                           ;doprnt.c: 718: case 'x':
 14153                           ;doprnt.c: 721: flag |= 0x80;
 14154                           
 14155                           ; BSR set to: 1
 14156                           
 14157                           ; BSR set to: 1
 14158  010E96  8F97               	bsf	printf@flag& (0+255),7,b
 14159                           
 14160                           ;doprnt.c: 723: break;
 14161  010E98  D0B3               	goto	l1374
 14162  010E9A                     
 14163                           ; BSR set to: 1
 14164                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14165                           
 14166                           ; BSR set to: 1
 14167  010E9A  C195  FFD9         	movff	printf@ap,fsr2l
 14168  010E9E  C196  FFDA         	movff	printf@ap+1,fsr2h
 14169  010EA2  CFDE F193          	movff	postinc2,printf@cp
 14170  010EA6  CFDD F194          	movff	postdec2,printf@cp+1
 14171                           
 14172                           ; BSR set to: 1
 14173  010EAA  0E02               	movlw	2
 14174  010EAC  2795               	addwf	printf@ap& (0+255),f,b
 14175  010EAE  0E00               	movlw	0
 14176  010EB0  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14177                           
 14178                           ; BSR set to: 1
 14179                           ;doprnt.c: 740: if(!cp)
 14180  010EB2  5193               	movf	printf@cp& (0+255),w,b
 14181  010EB4  1194               	iorwf	(printf@cp+1)& (0+255),w,b
 14182  010EB6  A4D8               	btfss	status,2,c
 14183  010EB8  D004               	goto	l1380
 14184                           
 14185                           ; BSR set to: 1
 14186                           ;doprnt.c: 741: cp = "(null)";
 14187  010EBA  0E86               	movlw	low STR_140
 14188  010EBC  6F93               	movwf	printf@cp& (0+255),b
 14189  010EBE  0EFF               	movlw	high STR_140
 14190  010EC0  6F94               	movwf	(printf@cp+1)& (0+255),b
 14191  010EC2                     l1380:
 14192                           
 14193                           ; BSR set to: 1
 14194                           ;doprnt.c: 745: len = 0;
 14195                           
 14196                           ; BSR set to: 1
 14197  010EC2  0E00               	movlw	0
 14198  010EC4  6F92               	movwf	(printf@len+1)& (0+255),b
 14199  010EC6  0E00               	movlw	0
 14200  010EC8  6F91               	movwf	printf@len& (0+255),b
 14201                           
 14202                           ;doprnt.c: 746: while(cp[len])
 14203  010ECA  D003               	goto	l1381
 14204  010ECC                     
 14205                           ;doprnt.c: 747: len++;
 14206                           
 14207                           ; BSR set to: 1
 14208  010ECC  0101               	movlb	1	; () banked
 14209  010ECE  4B91               	infsnz	printf@len& (0+255),f,b
 14210  010ED0  2B92               	incf	(printf@len+1)& (0+255),f,b
 14211  010ED2                     l1381:
 14212                           
 14213                           ; BSR set to: 1
 14214                           
 14215                           ; BSR set to: 1
 14216  010ED2  5191               	movf	printf@len& (0+255),w,b
 14217  010ED4  2593               	addwf	printf@cp& (0+255),w,b
 14218  010ED6  6F86               	movwf	??_printf& (0+255),b
 14219  010ED8  5192               	movf	(printf@len+1)& (0+255),w,b
 14220  010EDA  2194               	addwfc	(printf@cp+1)& (0+255),w,b
 14221  010EDC  6F87               	movwf	(??_printf+1)& (0+255),b
 14222  010EDE  C186  FFF6         	movff	??_printf,tblptrl
 14223  010EE2  C187  FFF7         	movff	??_printf+1,tblptrh
 14224  010EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 14225  010EE8  6EF8               	movwf	tblptru,c
 14226  010EEA  0E0D               	movlw	(high __ramtop+-1)
 14227  010EEC  64F7               	cpfsgt	tblptrh,c
 14228  010EEE  D003               	bra	u14357
 14229  010EF0  0008               	tblrd		*
 14230  010EF2  50F5               	movf	tablat,w,c
 14231  010EF4  D005               	bra	u14350
 14232  010EF6                     u14357:
 14233  010EF6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14234  010EFA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14235  010EFE  50EF               	movf	indf0,w,c
 14236  010F00                     u14350:
 14237  010F00  0900               	iorlw	0
 14238  010F02  A4D8               	btfss	status,2,c
 14239  010F04  D7E3               	goto	l1382
 14240  010F06                     u14360:
 14241                           
 14242                           ;doprnt.c: 753: if(prec && prec < len)
 14243                           
 14244                           ;doprnt.c: 750: dostring:
 14245  010F06  0101               	movlb	1	; () banked
 14246  010F08  51A7               	movf	printf@prec& (0+255),w,b
 14247  010F0A  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 14248  010F0C  B4D8               	btfsc	status,2,c
 14249  010F0E  D021               	goto	l1386
 14250                           
 14251                           ; BSR set to: 1
 14252  010F10  5191               	movf	printf@len& (0+255),w,b
 14253  010F12  5DA7               	subwf	printf@prec& (0+255),w,b
 14254  010F14  5192               	movf	(printf@len+1)& (0+255),w,b
 14255  010F16  59A8               	subwfb	(printf@prec+1)& (0+255),w,b
 14256  010F18  B0D8               	btfsc	status,0,c
 14257  010F1A  D01B               	goto	l1386
 14258                           
 14259                           ; BSR set to: 1
 14260                           ;doprnt.c: 754: len = prec;
 14261  010F1C  C1A7  F191         	movff	printf@prec,printf@len
 14262  010F20  C1A8  F192         	movff	printf@prec+1,printf@len+1
 14263                           
 14264                           ; BSR set to: 1
 14265                           ;doprnt.c: 767: while(len--)
 14266  010F24  D016               	goto	l1386
 14267  010F26                     l12012:
 14268                           
 14269                           ; BSR set to: 1
 14270                           ;doprnt.c: 768: (putch(*cp++) );
 14271  010F26  C193  FFF6         	movff	printf@cp,tblptrl
 14272  010F2A  C194  FFF7         	movff	printf@cp+1,tblptrh
 14273  010F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 14274  010F30  6EF8               	movwf	tblptru,c
 14275  010F32  0E0D               	movlw	(high __ramtop+-1)
 14276  010F34  64F7               	cpfsgt	tblptrh,c
 14277  010F36  D003               	bra	u14397
 14278  010F38  0008               	tblrd		*
 14279  010F3A  50F5               	movf	tablat,w,c
 14280  010F3C  D005               	bra	u14390
 14281  010F3E                     u14397:
 14282  010F3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14283  010F42  CFF7 FFEA          	movff	tblptrh,fsr0h
 14284  010F46  50EF               	movf	indf0,w,c
 14285  010F48                     u14390:
 14286  010F48  EC97  F0C1         	call	_putch
 14287  010F4C  0101               	movlb	1	; () banked
 14288  010F4E  4B93               	infsnz	printf@cp& (0+255),f,b
 14289  010F50  2B94               	incf	(printf@cp+1)& (0+255),f,b
 14290  010F52                     l1386:
 14291                           
 14292                           ; BSR set to: 1
 14293                           
 14294                           ; BSR set to: 1
 14295  010F52  0791               	decf	printf@len& (0+255),f,b
 14296  010F54  A0D8               	btfss	status,0,c
 14297  010F56  0792               	decf	(printf@len+1)& (0+255),f,b
 14298  010F58  2991               	incf	printf@len& (0+255),w,b
 14299  010F5A  E1E5               	bnz	l12012
 14300  010F5C  2992               	incf	(printf@len+1)& (0+255),w,b
 14301  010F5E  B4D8               	btfsc	status,2,c
 14302  010F60  EF44  F08C         	goto	u14780
 14303  010F64  D7E0               	goto	l1387
 14304  010F66                     
 14305                           ; BSR set to: 1
 14306                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 14307                           
 14308                           ; BSR set to: 1
 14309  010F66  C195  FFD9         	movff	printf@ap,fsr2l
 14310  010F6A  C196  FFDA         	movff	printf@ap+1,fsr2h
 14311  010F6E  50DF               	movf	indf2,w,c
 14312  010F70  6FA9               	movwf	printf@c& (0+255),b
 14313                           
 14314                           ; BSR set to: 1
 14315  010F72  0E02               	movlw	2
 14316  010F74  2795               	addwf	printf@ap& (0+255),f,b
 14317  010F76  0E00               	movlw	0
 14318  010F78  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14319  010F7A                     
 14320                           ; BSR set to: 1
 14321                           ;doprnt.c: 805: cp = (char *)&c;
 14322                           
 14323                           ; BSR set to: 1
 14324  010F7A  0EA9               	movlw	low printf@c
 14325  010F7C  6F93               	movwf	printf@cp& (0+255),b
 14326  010F7E  0E01               	movlw	high printf@c
 14327  010F80  6F94               	movwf	(printf@cp+1)& (0+255),b
 14328                           
 14329                           ; BSR set to: 1
 14330                           ;doprnt.c: 806: len = 1;
 14331  010F82  0E00               	movlw	0
 14332  010F84  6F92               	movwf	(printf@len+1)& (0+255),b
 14333  010F86  0E01               	movlw	1
 14334  010F88  6F91               	movwf	printf@len& (0+255),b
 14335                           
 14336                           ;doprnt.c: 807: goto dostring;
 14337  010F8A  D7BD               	goto	u14360
 14338  010F8C                     
 14339                           ; BSR set to: 1
 14340                           ;doprnt.c: 818: flag |= 0xC0;
 14341                           
 14342                           ; BSR set to: 1
 14343  010F8C  0EC0               	movlw	192
 14344  010F8E  1397               	iorwf	printf@flag& (0+255),f,b
 14345                           
 14346                           ; BSR set to: 1
 14347                           ;doprnt.c: 822: }
 14348                           
 14349                           ;doprnt.c: 819: break;
 14350  010F90  D037               	goto	l1374
 14351  010F92                     l1370:
 14352                           
 14353                           ; BSR set to: 1
 14354  010F92  0101               	movlb	1	; () banked
 14355  010F94  517C               	movf	printf@f& (0+255),w,b
 14356  010F96  6F86               	movwf	??_printf& (0+255),b
 14357  010F98  517D               	movf	(printf@f+1)& (0+255),w,b
 14358  010F9A  6F87               	movwf	(??_printf+1)& (0+255),b
 14359  010F9C  4B7C               	infsnz	printf@f& (0+255),f,b
 14360  010F9E  2B7D               	incf	(printf@f+1)& (0+255),f,b
 14361  010FA0  C186  FFF6         	movff	??_printf,tblptrl
 14362  010FA4  C187  FFF7         	movff	??_printf+1,tblptrh
 14363  010FA8  0E00               	movlw	low (__mediumconst shr (0+16))
 14364  010FAA  6EF8               	movwf	tblptru,c
 14365  010FAC  0E0D               	movlw	(high __ramtop+-1)
 14366  010FAE  64F7               	cpfsgt	tblptrh,c
 14367  010FB0  D003               	bra	u14417
 14368  010FB2  0008               	tblrd		*
 14369  010FB4  50F5               	movf	tablat,w,c
 14370  010FB6  D005               	bra	u14410
 14371  010FB8                     u14417:
 14372  010FB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14373  010FBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14374  010FC0  50EF               	movf	indf0,w,c
 14375  010FC2                     u14410:
 14376  010FC2  0101               	movlb	1	; () banked
 14377  010FC4  6FA9               	movwf	printf@c& (0+255),b
 14378  010FC6  51A9               	movf	printf@c& (0+255),w,b
 14379                           
 14380                           ; Switch size 1, requested type "space"
 14381                           ; Number of cases is 9, Range of values is 0 to 120
 14382                           ; switch strategies available:
 14383                           ; Name         Instructions Cycles
 14384                           ; simple_byte           28    15 (average)
 14385                           ;	Chosen strategy is simple_byte
 14386  010FC8  0A00               	xorlw	0	; case 0
 14387  010FCA  B4D8               	btfsc	status,2,c
 14388  010FCC  0012               	return	
 14389  010FCE  0A58               	xorlw	88	; case 88
 14390  010FD0  B4D8               	btfsc	status,2,c
 14391  010FD2  D761               	goto	l1377
 14392  010FD4  0A3B               	xorlw	59	; case 99
 14393  010FD6  B4D8               	btfsc	status,2,c
 14394  010FD8  D7C6               	goto	l1389
 14395  010FDA  0A07               	xorlw	7	; case 100
 14396  010FDC  B4D8               	btfsc	status,2,c
 14397  010FDE  D010               	goto	l1374
 14398  010FE0  0A02               	xorlw	2	; case 102
 14399  010FE2  B4D8               	btfsc	status,2,c
 14400  010FE4  D756               	goto	l1373
 14401  010FE6  0A0F               	xorlw	15	; case 105
 14402  010FE8  B4D8               	btfsc	status,2,c
 14403  010FEA  D00A               	goto	l1374
 14404  010FEC  0A1A               	xorlw	26	; case 115
 14405  010FEE  B4D8               	btfsc	status,2,c
 14406  010FF0  D754               	goto	l1379
 14407  010FF2  0A06               	xorlw	6	; case 117
 14408  010FF4  B4D8               	btfsc	status,2,c
 14409  010FF6  D7CA               	goto	l1391
 14410  010FF8  0A0D               	xorlw	13	; case 120
 14411  010FFA  B4D8               	btfsc	status,2,c
 14412  010FFC  D74C               	goto	l1377
 14413  010FFE  D7BD               	goto	l1390
 14414  011000                     l1374:
 14415                           
 14416                           ; BSR set to: 1
 14417                           ;doprnt.c: 825: if(flag & (0x700)) {
 14418                           
 14419                           ; BSR set to: 1
 14420  011000  0E07               	movlw	7
 14421  011002  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14422  011004  B4D8               	btfsc	status,2,c
 14423  011006  D2EA               	goto	l1392
 14424                           
 14425                           ; BSR set to: 1
 14426                           ;doprnt.c: 827: if(flag & 0x1000)
 14427  011008  A998               	btfss	(printf@flag+1)& (0+255),4,b
 14428  01100A  D004               	goto	l1393
 14429                           
 14430                           ; BSR set to: 1
 14431                           ;doprnt.c: 829: prec = 6;
 14432  01100C  0E00               	movlw	0
 14433  01100E  6FA8               	movwf	(printf@prec+1)& (0+255),b
 14434  011010  0E06               	movlw	6
 14435  011012  6FA7               	movwf	printf@prec& (0+255),b
 14436  011014                     l1393:
 14437                           
 14438                           ; BSR set to: 1
 14439                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 14440                           
 14441                           ; BSR set to: 1
 14442  011014  C195  FFD9         	movff	printf@ap,fsr2l
 14443  011018  C196  FFDA         	movff	printf@ap+1,fsr2h
 14444  01101C  CFDE F1A3          	movff	postinc2,printf@fval
 14445  011020  CFDE F1A4          	movff	postinc2,printf@fval+1
 14446  011024  CFDE F1A5          	movff	postinc2,printf@fval+2
 14447  011028  CFDE F1A6          	movff	postinc2,printf@fval+3
 14448                           
 14449                           ; BSR set to: 1
 14450  01102C  0E04               	movlw	4
 14451  01102E  2795               	addwf	printf@ap& (0+255),f,b
 14452  011030  0E00               	movlw	0
 14453  011032  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 14454                           
 14455                           ; BSR set to: 1
 14456                           ;doprnt.c: 831: if(fval < 0.0) {
 14457  011034  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 14458  011036  D015               	goto	l1394
 14459                           
 14460                           ; BSR set to: 1
 14461                           ;doprnt.c: 832: fval = -fval;
 14462  011038  C1A3  F125         	movff	printf@fval,___flneg@f1
 14463  01103C  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 14464  011040  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 14465  011044  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 14466  011048  ECFE  F0BF         	call	___flneg	;wreg free
 14467  01104C  C125  F1A3         	movff	?___flneg,printf@fval
 14468  011050  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 14469  011054  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 14470  011058  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 14471                           
 14472                           ;doprnt.c: 833: flag |= 0x03;
 14473  01105C  0E03               	movlw	3
 14474  01105E  0101               	movlb	1	; () banked
 14475  011060  1397               	iorwf	printf@flag& (0+255),f,b
 14476  011062                     l1394:
 14477                           
 14478                           ; BSR set to: 1
 14479                           ;doprnt.c: 834: }
 14480                           ;doprnt.c: 835: exp = 0;
 14481                           
 14482                           ; BSR set to: 1
 14483  011062  0E00               	movlw	0
 14484  011064  6F9A               	movwf	(printf@exp+1)& (0+255),b
 14485  011066  0E00               	movlw	0
 14486  011068  6F99               	movwf	printf@exp& (0+255),b
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;doprnt.c: 836: if( fval!=0) {
 14490  01106A  51A3               	movf	printf@fval& (0+255),w,b
 14491  01106C  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 14492  01106E  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 14493  011070  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 14494  011072  B4D8               	btfsc	status,2,c
 14495  011074  D084               	goto	l1399
 14496                           
 14497                           ; BSR set to: 1
 14498                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 14499  011076  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 14500  011078  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 14501  01107A  0F82               	addlw	130
 14502  01107C  6F99               	movwf	printf@exp& (0+255),b
 14503  01107E  6B9A               	clrf	(printf@exp+1)& (0+255),b
 14504  011080  0EFF               	movlw	255
 14505  011082  239A               	addwfc	(printf@exp+1)& (0+255),f,b
 14506                           
 14507                           ; BSR set to: 1
 14508                           ;doprnt.c: 838: exp--;
 14509  011084  0799               	decf	printf@exp& (0+255),f,b
 14510  011086  A0D8               	btfss	status,0,c
 14511  011088  079A               	decf	(printf@exp+1)& (0+255),f,b
 14512                           
 14513                           ; BSR set to: 1
 14514                           ;doprnt.c: 839: exp *= 3;
 14515  01108A  C199  F117         	movff	printf@exp,___wmul@multiplier
 14516  01108E  C19A  F118         	movff	printf@exp+1,___wmul@multiplier+1
 14517  011092  0E00               	movlw	0
 14518  011094  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14519  011096  0E03               	movlw	3
 14520  011098  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14521  01109A  EC59  F0C0         	call	___wmul	;wreg free
 14522  01109E  C117  F199         	movff	?___wmul,printf@exp
 14523  0110A2  C118  F19A         	movff	?___wmul+1,printf@exp+1
 14524                           
 14525                           ;doprnt.c: 840: exp /= 10;
 14526  0110A6  C199  F11D         	movff	printf@exp,___awdiv@dividend
 14527  0110AA  C19A  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 14528  0110AE  0E00               	movlw	0
 14529  0110B0  0101               	movlb	1	; () banked
 14530  0110B2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 14531  0110B4  0E0A               	movlw	10
 14532  0110B6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 14533  0110B8  ECA4  F0B9         	call	___awdiv	;wreg free
 14534  0110BC  C11D  F199         	movff	?___awdiv,printf@exp
 14535  0110C0  C11E  F19A         	movff	?___awdiv+1,printf@exp+1
 14536                           
 14537                           ;doprnt.c: 841: if(exp < 0)
 14538  0110C4  0101               	movlb	1	; () banked
 14539  0110C6  AF9A               	btfss	(printf@exp+1)& (0+255),7,b
 14540  0110C8  D003               	goto	l1396
 14541                           
 14542                           ; BSR set to: 1
 14543                           ;doprnt.c: 842: exp--;
 14544  0110CA  0799               	decf	printf@exp& (0+255),f,b
 14545  0110CC  A0D8               	btfss	status,0,c
 14546  0110CE  079A               	decf	(printf@exp+1)& (0+255),f,b
 14547  0110D0                     l1396:
 14548                           
 14549                           ; BSR set to: 1
 14550                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 14551                           
 14552                           ; BSR set to: 1
 14553  0110D0  5199               	movf	printf@exp& (0+255),w,b
 14554  0110D2  0800               	sublw	0
 14555  0110D4  ECE2  F096         	call	_scale
 14556  0110D8  C16F  F19B         	movff	?_scale,printf@tmpval
 14557  0110DC  C170  F19C         	movff	?_scale+1,printf@tmpval+1
 14558  0110E0  C171  F19D         	movff	?_scale+2,printf@tmpval+2
 14559  0110E4  C172  F19E         	movff	?_scale+3,printf@tmpval+3
 14560                           
 14561                           ;doprnt.c: 847: tmpval.integ *= fval;
 14562  0110E8  C19B  F156         	movff	printf@tmpval,___flmul@b
 14563  0110EC  C19C  F157         	movff	printf@tmpval+1,___flmul@b+1
 14564  0110F0  C19D  F158         	movff	printf@tmpval+2,___flmul@b+2
 14565  0110F4  C19E  F159         	movff	printf@tmpval+3,___flmul@b+3
 14566  0110F8  C1A3  F15A         	movff	printf@fval,___flmul@a
 14567  0110FC  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 14568  011100  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 14569  011104  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 14570  011108  EC28  F09D         	call	___flmul	;wreg free
 14571  01110C  C156  F19B         	movff	?___flmul,printf@tmpval
 14572  011110  C157  F19C         	movff	?___flmul+1,printf@tmpval+1
 14573  011114  C158  F19D         	movff	?___flmul+2,printf@tmpval+2
 14574  011118  C159  F19E         	movff	?___flmul+3,printf@tmpval+3
 14575                           
 14576                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 14577  01111C  C19B  F117         	movff	printf@tmpval,___flge@ff1
 14578  011120  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14579  011124  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14580  011128  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14581  01112C  0E00               	movlw	0
 14582  01112E  0101               	movlb	1	; () banked
 14583  011130  6F1B               	movwf	___flge@ff2& (0+255),b
 14584  011132  0E00               	movlw	0
 14585  011134  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14586  011136  0E80               	movlw	128
 14587  011138  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14588  01113A  0E3F               	movlw	63
 14589  01113C  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14590  01113E  EC77  F0B3         	call	___flge	;wreg free
 14591  011142  0101               	movlb	1	; () banked
 14592  011144  B0D8               	btfsc	status,0,c
 14593  011146  D004               	goto	l1397
 14594                           
 14595                           ; BSR set to: 1
 14596                           ;doprnt.c: 849: exp--;
 14597  011148  0799               	decf	printf@exp& (0+255),f,b
 14598  01114A  A0D8               	btfss	status,0,c
 14599  01114C  079A               	decf	(printf@exp+1)& (0+255),f,b
 14600  01114E  D017               	goto	l1399
 14601  011150                     l1397:
 14602                           
 14603                           ; BSR set to: 1
 14604                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 14605                           
 14606                           ; BSR set to: 1
 14607  011150  C19B  F117         	movff	printf@tmpval,___flge@ff1
 14608  011154  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14609  011158  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14610  01115C  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14611  011160  0E00               	movlw	0
 14612  011162  6F1B               	movwf	___flge@ff2& (0+255),b
 14613  011164  0E00               	movlw	0
 14614  011166  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14615  011168  0E20               	movlw	32
 14616  01116A  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14617  01116C  0E41               	movlw	65
 14618  01116E  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14619  011170  EC77  F0B3         	call	___flge	;wreg free
 14620  011174  0101               	movlb	1	; () banked
 14621  011176  A0D8               	btfss	status,0,c
 14622  011178  D002               	goto	l1399
 14623                           
 14624                           ; BSR set to: 1
 14625                           ;doprnt.c: 851: exp++;
 14626  01117A  4B99               	infsnz	printf@exp& (0+255),f,b
 14627  01117C  2B9A               	incf	(printf@exp+1)& (0+255),f,b
 14628  01117E                     l1399:
 14629                           
 14630                           ; BSR set to: 1
 14631                           ;doprnt.c: 852: }
 14632                           ;doprnt.c: 1112: if(prec <= 12)
 14633                           
 14634                           ; BSR set to: 1
 14635                           
 14636                           ; BSR set to: 1
 14637                           
 14638                           ; BSR set to: 1
 14639  01117E  BFA8               	btfsc	(printf@prec+1)& (0+255),7,b
 14640  011180  D006               	goto	u14490
 14641  011182  51A8               	movf	(printf@prec+1)& (0+255),w,b
 14642  011184  E121               	bnz	l12080
 14643  011186  0E0D               	movlw	13
 14644  011188  5DA7               	subwf	printf@prec& (0+255),w,b
 14645  01118A  B0D8               	btfsc	status,0,c
 14646  01118C  D01D               	goto	l1400
 14647  01118E                     u14490:
 14648                           
 14649                           ; BSR set to: 1
 14650                           ;doprnt.c: 1113: fval += fround(prec);
 14651  01118E  C1A3  F129         	movff	printf@fval,___fladd@b
 14652  011192  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 14653  011196  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 14654  01119A  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 14655  01119E  51A7               	movf	printf@prec& (0+255),w,b
 14656  0111A0  EC1A  F0A8         	call	_fround
 14657  0111A4  C16F  F12D         	movff	?_fround,___fladd@a
 14658  0111A8  C170  F12E         	movff	?_fround+1,___fladd@a+1
 14659  0111AC  C171  F12F         	movff	?_fround+2,___fladd@a+2
 14660  0111B0  C172  F130         	movff	?_fround+3,___fladd@a+3
 14661  0111B4  EC79  F0A0         	call	___fladd	;wreg free
 14662  0111B8  C129  F1A3         	movff	?___fladd,printf@fval
 14663  0111BC  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 14664  0111C0  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 14665  0111C4  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 14666  0111C8                     l1400:
 14667  0111C8                     l12080:
 14668                           
 14669                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14670  0111C8  0101               	movlb	1	; () banked
 14671  0111CA  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14672  0111CC  D006               	goto	u14500
 14673  0111CE  519A               	movf	(printf@exp+1)& (0+255),w,b
 14674  0111D0  E122               	bnz	l12088
 14675  0111D2  0E0A               	movlw	10
 14676  0111D4  5D99               	subwf	printf@exp& (0+255),w,b
 14677  0111D6  B0D8               	btfsc	status,0,c
 14678  0111D8  D01E               	goto	u14530
 14679  0111DA                     u14500:
 14680                           
 14681                           ; BSR set to: 1
 14682  0111DA  51A3               	movf	printf@fval& (0+255),w,b
 14683  0111DC  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 14684  0111DE  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 14685  0111E0  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 14686  0111E2  B4D8               	btfsc	status,2,c
 14687  0111E4  D062               	goto	l1401
 14688                           
 14689                           ; BSR set to: 1
 14690  0111E6  C1A3  F16F         	movff	printf@fval,___fltol@f1
 14691  0111EA  C1A4  F170         	movff	printf@fval+1,___fltol@f1+1
 14692  0111EE  C1A5  F171         	movff	printf@fval+2,___fltol@f1+2
 14693  0111F2  C1A6  F172         	movff	printf@fval+3,___fltol@f1+3
 14694  0111F6  EC2F  F0B6         	call	___fltol	;wreg free
 14695  0111FA  0101               	movlb	1	; () banked
 14696  0111FC  516F               	movf	?___fltol& (0+255),w,b
 14697  0111FE  1170               	iorwf	(?___fltol+1)& (0+255),w,b
 14698  011200  1171               	iorwf	(?___fltol+2)& (0+255),w,b
 14699  011202  1172               	iorwf	(?___fltol+3)& (0+255),w,b
 14700  011204  B4D8               	btfsc	status,2,c
 14701                           
 14702                           ; BSR set to: 1
 14703  011206  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14704  011208  D050               	goto	l1401
 14705  01120A  519A               	movf	(printf@exp+1)& (0+255),w,b
 14706  01120C  E104               	bnz	l12088
 14707  01120E  0E02               	movlw	2
 14708  011210  5D99               	subwf	printf@exp& (0+255),w,b
 14709  011212  A0D8               	btfss	status,0,c
 14710  011214  D04A               	goto	l1401
 14711  011216                     u14530:
 14712  011216                     l12088:
 14713                           
 14714                           ; BSR set to: 1
 14715                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14716  011216  C19B  F117         	movff	printf@tmpval,___flge@ff1
 14717  01121A  C19C  F118         	movff	printf@tmpval+1,___flge@ff1+1
 14718  01121E  C19D  F119         	movff	printf@tmpval+2,___flge@ff1+2
 14719  011222  C19E  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 14720  011226  0E5F               	movlw	95
 14721  011228  6F1B               	movwf	___flge@ff2& (0+255),b
 14722  01122A  0E70               	movlw	112
 14723  01122C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 14724  01122E  0E89               	movlw	137
 14725  011230  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 14726  011232  0E40               	movlw	64
 14727  011234  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 14728  011236  EC77  F0B3         	call	___flge	;wreg free
 14729  01123A  0101               	movlb	1	; () banked
 14730  01123C  B0D8               	btfsc	status,0,c
 14731  01123E  D002               	goto	l1404
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14735  011240  0EF7               	movlw	247
 14736  011242  D001               	goto	L3
 14737  011244                     l1404:
 14738                           
 14739                           ; BSR set to: 1
 14740                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14741                           
 14742                           ; BSR set to: 1
 14743  011244  0EF8               	movlw	248
 14744  011246                     L3:
 14745  011246  2799               	addwf	printf@exp& (0+255),f,b
 14746  011248  0EFF               	movlw	255
 14747  01124A  239A               	addwfc	(printf@exp+1)& (0+255),f,b
 14748                           
 14749                           ; BSR set to: 1
 14750                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14751                           
 14752                           ; BSR set to: 1
 14753  01124C  5199               	movf	printf@exp& (0+255),w,b
 14754  01124E  ECE2  F096         	call	_scale
 14755  011252  C16F  F19B         	movff	?_scale,printf@tmpval
 14756  011256  C170  F19C         	movff	?_scale+1,printf@tmpval+1
 14757  01125A  C171  F19D         	movff	?_scale+2,printf@tmpval+2
 14758  01125E  C172  F19E         	movff	?_scale+3,printf@tmpval+3
 14759  011262  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 14760  011266  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 14761  01126A  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 14762  01126E  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 14763  011272  C19B  F11B         	movff	printf@tmpval,__div_to_l_@f2
 14764  011276  C19C  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 14765  01127A  C19D  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 14766  01127E  C19E  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 14767  011282  EC4E  F0B2         	call	__div_to_l_	;wreg free
 14768  011286  C117  F19F         	movff	?__div_to_l_,printf@val
 14769  01128A  C118  F1A0         	movff	?__div_to_l_+1,printf@val+1
 14770  01128E  C119  F1A1         	movff	?__div_to_l_+2,printf@val+2
 14771  011292  C11A  F1A2         	movff	?__div_to_l_+3,printf@val+3
 14772                           
 14773                           ;doprnt.c: 1129: fval = 0.0;
 14774  011296  0E00               	movlw	0
 14775  011298  0101               	movlb	1	; () banked
 14776  01129A  6FA3               	movwf	printf@fval& (0+255),b
 14777  01129C  0E00               	movlw	0
 14778  01129E  6FA4               	movwf	(printf@fval+1)& (0+255),b
 14779  0112A0  0E00               	movlw	0
 14780  0112A2  6FA5               	movwf	(printf@fval+2)& (0+255),b
 14781  0112A4  0E00               	movlw	0
 14782  0112A6  6FA6               	movwf	(printf@fval+3)& (0+255),b
 14783                           
 14784                           ;doprnt.c: 1130: } else {
 14785  0112A8  D03C               	goto	l1410
 14786  0112AA                     l1401:
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14790                           
 14791                           ; BSR set to: 1
 14792  0112AA  C1A3  F16F         	movff	printf@fval,___fltol@f1
 14793  0112AE  C1A4  F170         	movff	printf@fval+1,___fltol@f1+1
 14794  0112B2  C1A5  F171         	movff	printf@fval+2,___fltol@f1+2
 14795  0112B6  C1A6  F172         	movff	printf@fval+3,___fltol@f1+3
 14796  0112BA  EC2F  F0B6         	call	___fltol	;wreg free
 14797  0112BE  C16F  F19F         	movff	?___fltol,printf@val
 14798  0112C2  C170  F1A0         	movff	?___fltol+1,printf@val+1
 14799  0112C6  C171  F1A1         	movff	?___fltol+2,printf@val+2
 14800  0112CA  C172  F1A2         	movff	?___fltol+3,printf@val+3
 14801                           
 14802                           ;doprnt.c: 1132: fval -= (double)val;
 14803  0112CE  C1A3  F13D         	movff	printf@fval,___flsub@b
 14804  0112D2  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 14805  0112D6  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 14806  0112DA  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 14807  0112DE  C19F  F117         	movff	printf@val,___xxtofl@val
 14808  0112E2  C1A0  F118         	movff	printf@val+1,___xxtofl@val+1
 14809  0112E6  C1A1  F119         	movff	printf@val+2,___xxtofl@val+2
 14810  0112EA  C1A2  F11A         	movff	printf@val+3,___xxtofl@val+3
 14811  0112EE  0E00               	movlw	0
 14812  0112F0  ECC9  F0AF         	call	___xxtofl
 14813  0112F4  C117  F141         	movff	?___xxtofl,___flsub@a
 14814  0112F8  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 14815  0112FC  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 14816  011300  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 14817  011304  EC60  F0BE         	call	___flsub	;wreg free
 14818  011308  C13D  F1A3         	movff	?___flsub,printf@fval
 14819  01130C  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 14820  011310  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 14821  011314  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 14822                           
 14823                           ;doprnt.c: 1133: exp = 0;
 14824  011318  0E00               	movlw	0
 14825  01131A  0101               	movlb	1	; () banked
 14826  01131C  6F9A               	movwf	(printf@exp+1)& (0+255),b
 14827  01131E  0E00               	movlw	0
 14828  011320  6F99               	movwf	printf@exp& (0+255),b
 14829  011322                     l1410:
 14830                           
 14831                           ; BSR set to: 1
 14832                           ;doprnt.c: 1134: }
 14833                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14834                           
 14835                           ; BSR set to: 1
 14836  011322  0E01               	movlw	1
 14837  011324  6FA9               	movwf	printf@c& (0+255),b
 14838  011326                     l12108:
 14839                           
 14840                           ; BSR set to: 1
 14841  011326  0E0A               	movlw	10
 14842  011328  19A9               	xorwf	printf@c& (0+255),w,b
 14843  01132A  B4D8               	btfsc	status,2,c
 14844  01132C  D01B               	goto	u14570
 14845                           
 14846                           ; BSR set to: 1
 14847                           ;doprnt.c: 1137: if(val < dpowers[c])
 14848                           
 14849                           ; BSR set to: 1
 14850                           
 14851                           ; BSR set to: 1
 14852  01132E  51A9               	movf	printf@c& (0+255),w,b
 14853  011330  0D04               	mullw	4
 14854  011332  0E83               	movlw	low _dpowers
 14855  011334  24F3               	addwf	prodl,w,c
 14856  011336  6EF6               	movwf	tblptrl,c
 14857  011338  0EEA               	movlw	high _dpowers
 14858  01133A  20F4               	addwfc	prodh,w,c
 14859  01133C  6EF7               	movwf	tblptrh,c
 14860  01133E                     	if	1	;There are 3 active tblptr bytes
 14861  01133E  6AF8               	clrf	tblptru,c
 14862  011340  0E00               	movlw	low (__mediumconst shr (0+16))
 14863  011342  22F8               	addwfc	tblptru,f,c
 14864  011344                     	endif
 14865  011344  0009               	tblrd		*+
 14866  011346  50F5               	movf	tablat,w,c
 14867  011348  5D9F               	subwf	printf@val& (0+255),w,b
 14868  01134A  0009               	tblrd		*+
 14869  01134C  50F5               	movf	tablat,w,c
 14870  01134E  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 14871  011350  0009               	tblrd		*+
 14872  011352  50F5               	movf	tablat,w,c
 14873  011354  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 14874  011356  0009               	tblrd		*+
 14875  011358  50F5               	movf	tablat,w,c
 14876  01135A  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 14877  01135C  A0D8               	btfss	status,0,c
 14878  01135E  D002               	goto	u14570
 14879                           
 14880                           ; BSR set to: 1
 14881                           
 14882                           ; BSR set to: 1
 14883                           
 14884                           ; BSR set to: 1
 14885                           ;doprnt.c: 1138: break;
 14886  011360  2BA9               	incf	printf@c& (0+255),f,b
 14887  011362  D7E1               	goto	l12108
 14888  011364                     u14570:
 14889                           
 14890                           ; BSR set to: 1
 14891                           ;doprnt.c: 1175: {
 14892                           ;doprnt.c: 1188: if(flag & 0x03)
 14893                           
 14894                           ; BSR set to: 1
 14895  011364  0E03               	movlw	3
 14896  011366  1597               	andwf	printf@flag& (0+255),w,b
 14897  011368  6F86               	movwf	??_printf& (0+255),b
 14898  01136A  0E00               	movlw	0
 14899  01136C  1598               	andwf	(printf@flag+1)& (0+255),w,b
 14900  01136E  6F87               	movwf	(??_printf+1)& (0+255),b
 14901  011370  5186               	movf	??_printf& (0+255),w,b
 14902  011372  1187               	iorwf	(??_printf+1)& (0+255),w,b
 14903  011374  B4D8               	btfsc	status,2,c
 14904  011376  D04E               	goto	l1415
 14905                           
 14906                           ; BSR set to: 1
 14907                           ;doprnt.c: 1190: (putch('-') );
 14908  011378  0E2D               	movlw	45
 14909  01137A  EC97  F0C1         	call	_putch
 14910                           
 14911                           ;doprnt.c: 1195: }
 14912                           ;doprnt.c: 1196: while(c--) {
 14913  01137E  D04A               	goto	l1415
 14914  011380                     
 14915                           ;doprnt.c: 1200: {
 14916                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14917  011380  C19F  F117         	movff	printf@val,___lldiv@dividend
 14918  011384  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 14919  011388  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 14920  01138C  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14921  011390  0101               	movlb	1	; () banked
 14922  011392  51A9               	movf	printf@c& (0+255),w,b
 14923  011394  0D04               	mullw	4
 14924  011396  0E83               	movlw	low _dpowers
 14925  011398  24F3               	addwf	prodl,w,c
 14926  01139A  6EF6               	movwf	tblptrl,c
 14927  01139C  0EEA               	movlw	high _dpowers
 14928  01139E  20F4               	addwfc	prodh,w,c
 14929  0113A0  6EF7               	movwf	tblptrh,c
 14930  0113A2                     	if	1	;There are 3 active tblptr bytes
 14931  0113A2  6AF8               	clrf	tblptru,c
 14932  0113A4  0E00               	movlw	low (__mediumconst shr (0+16))
 14933  0113A6  22F8               	addwfc	tblptru,f,c
 14934  0113A8                     	endif
 14935  0113A8  0009               	tblrd		*+
 14936  0113AA  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14937  0113AE  0009               	tblrd		*+
 14938  0113B0  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14939  0113B4  0009               	tblrd		*+
 14940  0113B6  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14941  0113BA  000A               	tblrd		*-
 14942  0113BC  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14943  0113C0  ECE7  F0B9         	call	___lldiv	;wreg free
 14944  0113C4  C117  F19B         	movff	?___lldiv,printf@tmpval
 14945  0113C8  C118  F19C         	movff	?___lldiv+1,printf@tmpval+1
 14946  0113CC  C119  F19D         	movff	?___lldiv+2,printf@tmpval+2
 14947  0113D0  C11A  F19E         	movff	?___lldiv+3,printf@tmpval+3
 14948                           
 14949                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14950  0113D4  C19B  F124         	movff	printf@tmpval,___llmod@dividend
 14951  0113D8  C19C  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14952  0113DC  C19D  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14953  0113E0  C19E  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14954  0113E4  0E0A               	movlw	10
 14955  0113E6  0101               	movlb	1	; () banked
 14956  0113E8  6F28               	movwf	___llmod@divisor& (0+255),b
 14957  0113EA  0E00               	movlw	0
 14958  0113EC  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14959  0113EE  0E00               	movlw	0
 14960  0113F0  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14961  0113F2  0E00               	movlw	0
 14962  0113F4  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14963  0113F6  EC38  F0BC         	call	___llmod	;wreg free
 14964  0113FA  C124  F19B         	movff	?___llmod,printf@tmpval
 14965  0113FE  C125  F19C         	movff	?___llmod+1,printf@tmpval+1
 14966  011402  C126  F19D         	movff	?___llmod+2,printf@tmpval+2
 14967  011406  C127  F19E         	movff	?___llmod+3,printf@tmpval+3
 14968                           
 14969                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14970  01140A  0101               	movlb	1	; () banked
 14971  01140C  519B               	movf	printf@tmpval& (0+255),w,b
 14972  01140E  0F30               	addlw	48
 14973  011410  EC97  F0C1         	call	_putch
 14974  011414                     l1415:
 14975  011414  0101               	movlb	1	; () banked
 14976  011416  07A9               	decf	printf@c& (0+255),f,b
 14977  011418  29A9               	incf	printf@c& (0+255),w,b
 14978  01141A  B4D8               	btfsc	status,2,c
 14979  01141C  D008               	goto	l1418
 14980  01141E  D7B0               	goto	l1416
 14981  011420                     l12132:
 14982                           
 14983                           ; BSR set to: 1
 14984                           ;doprnt.c: 1208: (putch('0') );
 14985  011420  0E30               	movlw	48
 14986  011422  EC97  F0C1         	call	_putch
 14987                           
 14988                           ;doprnt.c: 1209: exp--;
 14989  011426  0101               	movlb	1	; () banked
 14990  011428  0799               	decf	printf@exp& (0+255),f,b
 14991  01142A  A0D8               	btfss	status,0,c
 14992  01142C  079A               	decf	(printf@exp+1)& (0+255),f,b
 14993  01142E                     l1418:
 14994                           
 14995                           ; BSR set to: 1
 14996                           
 14997                           ; BSR set to: 1
 14998  01142E  BF9A               	btfsc	(printf@exp+1)& (0+255),7,b
 14999  011430  D005               	goto	u14600
 15000  011432  519A               	movf	(printf@exp+1)& (0+255),w,b
 15001  011434  E1F5               	bnz	l12132
 15002  011436  0599               	decf	printf@exp& (0+255),w,b
 15003  011438  B0D8               	btfsc	status,0,c
 15004  01143A  D7F2               	goto	l1419
 15005  01143C                     u14600:
 15006                           
 15007                           ; BSR set to: 1
 15008                           ;doprnt.c: 1210: }
 15009                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 15010                           
 15011                           ; BSR set to: 1
 15012  01143C  BFA8               	btfsc	(printf@prec+1)& (0+255),7,b
 15013  01143E  D009               	goto	l1421
 15014  011440  51A8               	movf	(printf@prec+1)& (0+255),w,b
 15015  011442  E104               	bnz	u14610
 15016  011444  0E09               	movlw	9
 15017  011446  5DA7               	subwf	printf@prec& (0+255),w,b
 15018  011448  A0D8               	btfss	status,0,c
 15019  01144A  D003               	goto	l1421
 15020  01144C                     u14610:
 15021                           
 15022                           ; BSR set to: 1
 15023                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 15024  01144C  0E08               	movlw	8
 15025  01144E  6FA9               	movwf	printf@c& (0+255),b
 15026  011450  D002               	goto	l1422
 15027  011452                     l1421:
 15028                           
 15029                           ; BSR set to: 1
 15030                           ;doprnt.c: 1213: else
 15031                           ;doprnt.c: 1214: c = prec;
 15032  011452  C1A7  F1A9         	movff	printf@prec,printf@c
 15033  011456                     l1422:
 15034                           
 15035                           ; BSR set to: 1
 15036                           ;doprnt.c: 1215: prec -= c;
 15037                           
 15038                           ; BSR set to: 1
 15039  011456  51A9               	movf	printf@c& (0+255),w,b
 15040  011458  5FA7               	subwf	printf@prec& (0+255),f,b
 15041  01145A  0E00               	movlw	0
 15042  01145C  BFA9               	btfsc	printf@c& (0+255),7,b
 15043  01145E  0EFF               	movlw	255
 15044  011460  5BA8               	subwfb	(printf@prec+1)& (0+255),f,b
 15045                           
 15046                           ; BSR set to: 1
 15047                           ;doprnt.c: 1219: if(c)
 15048  011462  51A9               	movf	printf@c& (0+255),w,b
 15049  011464  B4D8               	btfsc	status,2,c
 15050  011466  D003               	goto	l1423
 15051                           
 15052                           ; BSR set to: 1
 15053                           ;doprnt.c: 1221: (putch('.') );
 15054  011468  0E2E               	movlw	46
 15055  01146A  EC97  F0C1         	call	_putch
 15056  01146E                     l1423:
 15057                           
 15058                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15059  01146E  0101               	movlb	1	; () banked
 15060  011470  51A9               	movf	printf@c& (0+255),w,b
 15061  011472  ECE2  F096         	call	_scale
 15062  011476  C16F  F18C         	movff	?_scale,_printf$3898
 15063  01147A  C170  F18D         	movff	?_scale+1,_printf$3898+1
 15064  01147E  C171  F18E         	movff	?_scale+2,_printf$3898+2
 15065  011482  C172  F18F         	movff	?_scale+3,_printf$3898+3
 15066                           
 15067                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15068  011486  C1A3  F15A         	movff	printf@fval,___flmul@a
 15069  01148A  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 15070  01148E  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 15071  011492  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 15072  011496  C18C  F156         	movff	_printf$3898,___flmul@b
 15073  01149A  C18D  F157         	movff	_printf$3898+1,___flmul@b+1
 15074  01149E  C18E  F158         	movff	_printf$3898+2,___flmul@b+2
 15075  0114A2  C18F  F159         	movff	_printf$3898+3,___flmul@b+3
 15076  0114A6  EC28  F09D         	call	___flmul	;wreg free
 15077  0114AA  C156  F16F         	movff	?___flmul,___fltol@f1
 15078  0114AE  C157  F170         	movff	?___flmul+1,___fltol@f1+1
 15079  0114B2  C158  F171         	movff	?___flmul+2,___fltol@f1+2
 15080  0114B6  C159  F172         	movff	?___flmul+3,___fltol@f1+3
 15081  0114BA  EC2F  F0B6         	call	___fltol	;wreg free
 15082  0114BE  C16F  F19F         	movff	?___fltol,printf@val
 15083  0114C2  C170  F1A0         	movff	?___fltol+1,printf@val+1
 15084  0114C6  C171  F1A1         	movff	?___fltol+2,printf@val+2
 15085  0114CA  C172  F1A2         	movff	?___fltol+3,printf@val+3
 15086                           
 15087                           ;doprnt.c: 1228: while(c--) {
 15088  0114CE  D074               	goto	l1424
 15089  0114D0                     
 15090                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 15091  0114D0  C19F  F117         	movff	printf@val,___lldiv@dividend
 15092  0114D4  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 15093  0114D8  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 15094  0114DC  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15095  0114E0  0101               	movlb	1	; () banked
 15096  0114E2  51A9               	movf	printf@c& (0+255),w,b
 15097  0114E4  0D04               	mullw	4
 15098  0114E6  0E83               	movlw	low _dpowers
 15099  0114E8  24F3               	addwf	prodl,w,c
 15100  0114EA  6EF6               	movwf	tblptrl,c
 15101  0114EC  0EEA               	movlw	high _dpowers
 15102  0114EE  20F4               	addwfc	prodh,w,c
 15103  0114F0  6EF7               	movwf	tblptrh,c
 15104  0114F2                     	if	1	;There are 3 active tblptr bytes
 15105  0114F2  6AF8               	clrf	tblptru,c
 15106  0114F4  0E00               	movlw	low (__mediumconst shr (0+16))
 15107  0114F6  22F8               	addwfc	tblptru,f,c
 15108  0114F8                     	endif
 15109  0114F8  0009               	tblrd		*+
 15110  0114FA  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15111  0114FE  0009               	tblrd		*+
 15112  011500  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15113  011504  0009               	tblrd		*+
 15114  011506  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15115  01150A  000A               	tblrd		*-
 15116  01150C  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15117  011510  ECE7  F0B9         	call	___lldiv	;wreg free
 15118  011514  C117  F19B         	movff	?___lldiv,printf@tmpval
 15119  011518  C118  F19C         	movff	?___lldiv+1,printf@tmpval+1
 15120  01151C  C119  F19D         	movff	?___lldiv+2,printf@tmpval+2
 15121  011520  C11A  F19E         	movff	?___lldiv+3,printf@tmpval+3
 15122                           
 15123                           ;doprnt.c: 1230: tmpval.vd %= 10;
 15124  011524  C19B  F124         	movff	printf@tmpval,___llmod@dividend
 15125  011528  C19C  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 15126  01152C  C19D  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 15127  011530  C19E  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 15128  011534  0E0A               	movlw	10
 15129  011536  0101               	movlb	1	; () banked
 15130  011538  6F28               	movwf	___llmod@divisor& (0+255),b
 15131  01153A  0E00               	movlw	0
 15132  01153C  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15133  01153E  0E00               	movlw	0
 15134  011540  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15135  011542  0E00               	movlw	0
 15136  011544  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15137  011546  EC38  F0BC         	call	___llmod	;wreg free
 15138  01154A  C124  F19B         	movff	?___llmod,printf@tmpval
 15139  01154E  C125  F19C         	movff	?___llmod+1,printf@tmpval+1
 15140  011552  C126  F19D         	movff	?___llmod+2,printf@tmpval+2
 15141  011556  C127  F19E         	movff	?___llmod+3,printf@tmpval+3
 15142                           
 15143                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 15144  01155A  0101               	movlb	1	; () banked
 15145  01155C  519B               	movf	printf@tmpval& (0+255),w,b
 15146  01155E  0F30               	addlw	48
 15147  011560  EC97  F0C1         	call	_putch
 15148                           
 15149                           ;doprnt.c: 1232: val %= dpowers[c];
 15150  011564  C19F  F124         	movff	printf@val,___llmod@dividend
 15151  011568  C1A0  F125         	movff	printf@val+1,___llmod@dividend+1
 15152  01156C  C1A1  F126         	movff	printf@val+2,___llmod@dividend+2
 15153  011570  C1A2  F127         	movff	printf@val+3,___llmod@dividend+3
 15154  011574  0101               	movlb	1	; () banked
 15155  011576  51A9               	movf	printf@c& (0+255),w,b
 15156  011578  0D04               	mullw	4
 15157  01157A  0E83               	movlw	low _dpowers
 15158  01157C  24F3               	addwf	prodl,w,c
 15159  01157E  6EF6               	movwf	tblptrl,c
 15160  011580  0EEA               	movlw	high _dpowers
 15161  011582  20F4               	addwfc	prodh,w,c
 15162  011584  6EF7               	movwf	tblptrh,c
 15163  011586                     	if	1	;There are 3 active tblptr bytes
 15164  011586  6AF8               	clrf	tblptru,c
 15165  011588  0E00               	movlw	low (__mediumconst shr (0+16))
 15166  01158A  22F8               	addwfc	tblptru,f,c
 15167  01158C                     	endif
 15168  01158C  0009               	tblrd		*+
 15169  01158E  CFF5 F128          	movff	tablat,___llmod@divisor
 15170  011592  0009               	tblrd		*+
 15171  011594  CFF5 F129          	movff	tablat,___llmod@divisor+1
 15172  011598  0009               	tblrd		*+
 15173  01159A  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 15174  01159E  000A               	tblrd		*-
 15175  0115A0  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 15176  0115A4  EC38  F0BC         	call	___llmod	;wreg free
 15177  0115A8  C124  F19F         	movff	?___llmod,printf@val
 15178  0115AC  C125  F1A0         	movff	?___llmod+1,printf@val+1
 15179  0115B0  C126  F1A1         	movff	?___llmod+2,printf@val+2
 15180  0115B4  C127  F1A2         	movff	?___llmod+3,printf@val+3
 15181  0115B8                     l1424:
 15182  0115B8  0101               	movlb	1	; () banked
 15183  0115BA  07A9               	decf	printf@c& (0+255),f,b
 15184  0115BC  29A9               	incf	printf@c& (0+255),w,b
 15185  0115BE  B4D8               	btfsc	status,2,c
 15186  0115C0  D008               	goto	l1427
 15187  0115C2  D786               	goto	l1425
 15188  0115C4                     
 15189                           ; BSR set to: 1
 15190                           ;doprnt.c: 1236: (putch('0') );
 15191                           
 15192                           ; BSR set to: 1
 15193  0115C4  0E30               	movlw	48
 15194  0115C6  EC97  F0C1         	call	_putch
 15195                           
 15196                           ;doprnt.c: 1237: prec--;
 15197  0115CA  0101               	movlb	1	; () banked
 15198  0115CC  07A7               	decf	printf@prec& (0+255),f,b
 15199  0115CE  A0D8               	btfss	status,0,c
 15200  0115D0  07A8               	decf	(printf@prec+1)& (0+255),f,b
 15201  0115D2                     l1427:
 15202                           
 15203                           ; BSR set to: 1
 15204                           
 15205                           ; BSR set to: 1
 15206  0115D2  51A7               	movf	printf@prec& (0+255),w,b
 15207  0115D4  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 15208  0115D6  B4D8               	btfsc	status,2,c
 15209  0115D8  D157               	goto	u14780
 15210  0115DA  D7F4               	goto	l1428
 15211  0115DC                     l1392:
 15212                           
 15213                           ; BSR set to: 1
 15214                           ;doprnt.c: 1246: }
 15215                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15216                           
 15217                           ; BSR set to: 1
 15218  0115DC  0EC0               	movlw	192
 15219  0115DE  1597               	andwf	printf@flag& (0+255),w,b
 15220  0115E0  6F86               	movwf	??_printf& (0+255),b
 15221  0115E2  0E00               	movlw	0
 15222  0115E4  1598               	andwf	(printf@flag+1)& (0+255),w,b
 15223  0115E6  6F87               	movwf	(??_printf+1)& (0+255),b
 15224  0115E8  5186               	movf	??_printf& (0+255),w,b
 15225  0115EA  1187               	iorwf	(??_printf+1)& (0+255),w,b
 15226  0115EC  A4D8               	btfss	status,2,c
 15227  0115EE  D01E               	goto	l1430
 15228                           
 15229                           ; BSR set to: 1
 15230                           ;doprnt.c: 1253: {
 15231                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 15232  0115F0  C195  FFD9         	movff	printf@ap,fsr2l
 15233  0115F4  C196  FFDA         	movff	printf@ap+1,fsr2h
 15234  0115F8  CFDE F19F          	movff	postinc2,printf@val
 15235  0115FC  CFDD F1A0          	movff	postdec2,printf@val+1
 15236  011600  0E00               	movlw	0
 15237  011602  BFA0               	btfsc	(printf@val+1)& (0+255),7,b
 15238  011604  0EFF               	movlw	-1
 15239  011606  6FA1               	movwf	(printf@val+2)& (0+255),b
 15240  011608  6FA2               	movwf	(printf@val+3)& (0+255),b
 15241                           
 15242                           ; BSR set to: 1
 15243  01160A  0E02               	movlw	2
 15244  01160C  2795               	addwf	printf@ap& (0+255),f,b
 15245  01160E  0E00               	movlw	0
 15246  011610  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 15247                           
 15248                           ; BSR set to: 1
 15249                           ;doprnt.c: 1261: if((long)val < 0) {
 15250  011612  AFA2               	btfss	(printf@val+3)& (0+255),7,b
 15251  011614  D01D               	goto	l1432
 15252                           
 15253                           ; BSR set to: 1
 15254                           ;doprnt.c: 1262: flag |= 0x03;
 15255  011616  0E03               	movlw	3
 15256  011618  1397               	iorwf	printf@flag& (0+255),f,b
 15257                           
 15258                           ; BSR set to: 1
 15259                           ;doprnt.c: 1263: val = -val;
 15260  01161A  1FA2               	comf	(printf@val+3)& (0+255),f,b
 15261  01161C  1FA1               	comf	(printf@val+2)& (0+255),f,b
 15262  01161E  1FA0               	comf	(printf@val+1)& (0+255),f,b
 15263  011620  6D9F               	negf	printf@val& (0+255),b
 15264  011622  0E00               	movlw	0
 15265  011624  23A0               	addwfc	(printf@val+1)& (0+255),f,b
 15266  011626  23A1               	addwfc	(printf@val+2)& (0+255),f,b
 15267  011628  23A2               	addwfc	(printf@val+3)& (0+255),f,b
 15268                           
 15269                           ; BSR set to: 1
 15270                           ;doprnt.c: 1264: }
 15271                           ;doprnt.c: 1266: }
 15272  01162A  D012               	goto	l1432
 15273  01162C                     l1430:
 15274                           
 15275                           ; BSR set to: 1
 15276                           ;doprnt.c: 1268: else
 15277                           ;doprnt.c: 1273: {
 15278                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15279                           
 15280                           ; BSR set to: 1
 15281  01162C  C195  FFD9         	movff	printf@ap,fsr2l
 15282  011630  C196  FFDA         	movff	printf@ap+1,fsr2h
 15283  011634  CFDE F186          	movff	postinc2,??_printf
 15284  011638  CFDD F187          	movff	postdec2,??_printf+1
 15285  01163C  C186  F19F         	movff	??_printf,printf@val
 15286  011640  C187  F1A0         	movff	??_printf+1,printf@val+1
 15287  011644  6BA1               	clrf	(printf@val+2)& (0+255),b
 15288  011646  6BA2               	clrf	(printf@val+3)& (0+255),b
 15289                           
 15290                           ; BSR set to: 1
 15291  011648  0E02               	movlw	2
 15292  01164A  2795               	addwf	printf@ap& (0+255),f,b
 15293  01164C  0E00               	movlw	0
 15294  01164E  2396               	addwfc	(printf@ap+1)& (0+255),f,b
 15295  011650                     l1432:
 15296                           
 15297                           ; BSR set to: 1
 15298                           ;doprnt.c: 1287: }
 15299                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15300                           
 15301                           ; BSR set to: 1
 15302  011650  51A7               	movf	printf@prec& (0+255),w,b
 15303  011652  11A8               	iorwf	(printf@prec+1)& (0+255),w,b
 15304  011654  A4D8               	btfss	status,2,c
 15305  011656  D04B               	goto	l1434
 15306                           
 15307                           ; BSR set to: 1
 15308  011658  519F               	movf	printf@val& (0+255),w,b
 15309  01165A  11A0               	iorwf	(printf@val+1)& (0+255),w,b
 15310  01165C  11A1               	iorwf	(printf@val+2)& (0+255),w,b
 15311  01165E  11A2               	iorwf	(printf@val+3)& (0+255),w,b
 15312  011660  A4D8               	btfss	status,2,c
 15313  011662  D045               	goto	l1434
 15314                           
 15315                           ; BSR set to: 1
 15316                           ;doprnt.c: 1291: prec++;
 15317  011664  4BA7               	infsnz	printf@prec& (0+255),f,b
 15318  011666  2BA8               	incf	(printf@prec+1)& (0+255),f,b
 15319                           
 15320                           ; BSR set to: 1
 15321                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 15322  011668  D042               	goto	l1434
 15323  01166A                     
 15324                           ; BSR set to: 1
 15325                           ;doprnt.c: 1302: case 0xC0:
 15326                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15327                           
 15328                           ; BSR set to: 1
 15329                           
 15330                           ; BSR set to: 1
 15331  01166A  0E01               	movlw	1
 15332  01166C  6FA9               	movwf	printf@c& (0+255),b
 15333  01166E                     l12192:
 15334                           
 15335                           ; BSR set to: 1
 15336  01166E  0E0A               	movlw	10
 15337  011670  19A9               	xorwf	printf@c& (0+255),w,b
 15338  011672  B4D8               	btfsc	status,2,c
 15339  011674  D047               	goto	l1440
 15340                           
 15341                           ; BSR set to: 1
 15342                           ;doprnt.c: 1306: if(val < dpowers[c])
 15343                           
 15344                           ; BSR set to: 1
 15345                           
 15346                           ; BSR set to: 1
 15347  011676  51A9               	movf	printf@c& (0+255),w,b
 15348  011678  0D04               	mullw	4
 15349  01167A  0E83               	movlw	low _dpowers
 15350  01167C  24F3               	addwf	prodl,w,c
 15351  01167E  6EF6               	movwf	tblptrl,c
 15352  011680  0EEA               	movlw	high _dpowers
 15353  011682  20F4               	addwfc	prodh,w,c
 15354  011684  6EF7               	movwf	tblptrh,c
 15355  011686                     	if	1	;There are 3 active tblptr bytes
 15356  011686  6AF8               	clrf	tblptru,c
 15357  011688  0E00               	movlw	low (__mediumconst shr (0+16))
 15358  01168A  22F8               	addwfc	tblptru,f,c
 15359  01168C                     	endif
 15360  01168C  0009               	tblrd		*+
 15361  01168E  50F5               	movf	tablat,w,c
 15362  011690  5D9F               	subwf	printf@val& (0+255),w,b
 15363  011692  0009               	tblrd		*+
 15364  011694  50F5               	movf	tablat,w,c
 15365  011696  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 15366  011698  0009               	tblrd		*+
 15367  01169A  50F5               	movf	tablat,w,c
 15368  01169C  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 15369  01169E  0009               	tblrd		*+
 15370  0116A0  50F5               	movf	tablat,w,c
 15371  0116A2  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 15372  0116A4  A0D8               	btfss	status,0,c
 15373  0116A6  D02E               	goto	l1440
 15374                           
 15375                           ; BSR set to: 1
 15376                           
 15377                           ; BSR set to: 1
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;doprnt.c: 1307: break;
 15381  0116A8  2BA9               	incf	printf@c& (0+255),f,b
 15382  0116AA  D7E1               	goto	l12192
 15383  0116AC                     
 15384                           ; BSR set to: 1
 15385                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15386                           
 15387                           ; BSR set to: 1
 15388  0116AC  0E01               	movlw	1
 15389  0116AE  6FA9               	movwf	printf@c& (0+255),b
 15390  0116B0                     l12206:
 15391                           
 15392                           ; BSR set to: 1
 15393  0116B0  0E08               	movlw	8
 15394  0116B2  19A9               	xorwf	printf@c& (0+255),w,b
 15395  0116B4  B4D8               	btfsc	status,2,c
 15396  0116B6  D026               	goto	l1440
 15397                           
 15398                           ; BSR set to: 1
 15399                           ;doprnt.c: 1317: if(val < hexpowers[c])
 15400                           
 15401                           ; BSR set to: 1
 15402                           
 15403                           ; BSR set to: 1
 15404  0116B8  51A9               	movf	printf@c& (0+255),w,b
 15405  0116BA  0D04               	mullw	4
 15406  0116BC  0EAB               	movlw	low _hexpowers
 15407  0116BE  24F3               	addwf	prodl,w,c
 15408  0116C0  6EF6               	movwf	tblptrl,c
 15409  0116C2  0EEA               	movlw	high _hexpowers
 15410  0116C4  20F4               	addwfc	prodh,w,c
 15411  0116C6  6EF7               	movwf	tblptrh,c
 15412  0116C8                     	if	1	;There are 3 active tblptr bytes
 15413  0116C8  6AF8               	clrf	tblptru,c
 15414  0116CA  0E00               	movlw	low (__mediumconst shr (0+16))
 15415  0116CC  22F8               	addwfc	tblptru,f,c
 15416  0116CE                     	endif
 15417  0116CE  0009               	tblrd		*+
 15418  0116D0  50F5               	movf	tablat,w,c
 15419  0116D2  5D9F               	subwf	printf@val& (0+255),w,b
 15420  0116D4  0009               	tblrd		*+
 15421  0116D6  50F5               	movf	tablat,w,c
 15422  0116D8  59A0               	subwfb	(printf@val+1)& (0+255),w,b
 15423  0116DA  0009               	tblrd		*+
 15424  0116DC  50F5               	movf	tablat,w,c
 15425  0116DE  59A1               	subwfb	(printf@val+2)& (0+255),w,b
 15426  0116E0  0009               	tblrd		*+
 15427  0116E2  50F5               	movf	tablat,w,c
 15428  0116E4  59A2               	subwfb	(printf@val+3)& (0+255),w,b
 15429  0116E6  A0D8               	btfss	status,0,c
 15430  0116E8  D00D               	goto	l1440
 15431                           
 15432                           ; BSR set to: 1
 15433                           
 15434                           ; BSR set to: 1
 15435                           
 15436                           ; BSR set to: 1
 15437                           ;doprnt.c: 1318: break;
 15438  0116EA  2BA9               	incf	printf@c& (0+255),f,b
 15439  0116EC  D7E1               	goto	l12206
 15440  0116EE                     l1434:
 15441                           
 15442                           ; BSR set to: 1
 15443                           
 15444                           ; BSR set to: 1
 15445  0116EE  5197               	movf	printf@flag& (0+255),w,b
 15446  0116F0  0BC0               	andlw	192
 15447                           
 15448                           ; Switch size 1, requested type "space"
 15449                           ; Number of cases is 3, Range of values is 0 to 192
 15450                           ; switch strategies available:
 15451                           ; Name         Instructions Cycles
 15452                           ; simple_byte           10     6 (average)
 15453                           ;	Chosen strategy is simple_byte
 15454  0116F2  0A00               	xorlw	0	; case 0
 15455  0116F4  B4D8               	btfsc	status,2,c
 15456  0116F6  D7B9               	goto	l1435
 15457  0116F8  0A80               	xorlw	128	; case 128
 15458  0116FA  B4D8               	btfsc	status,2,c
 15459  0116FC  D7D7               	goto	l1441
 15460  0116FE  0A40               	xorlw	64	; case 192
 15461  011700  B4D8               	btfsc	status,2,c
 15462  011702  D7B3               	goto	l1435
 15463  011704                     l1440:
 15464                           
 15465                           ; BSR set to: 1
 15466                           ;doprnt.c: 1339: if(c < prec)
 15467                           
 15468                           ; BSR set to: 1
 15469  011704  0E80               	movlw	128
 15470  011706  BFA9               	btfsc	printf@c& (0+255),7,b
 15471  011708  0E7F               	movlw	127
 15472  01170A  6F86               	movwf	??_printf& (0+255),b
 15473  01170C  51A7               	movf	printf@prec& (0+255),w,b
 15474  01170E  5DA9               	subwf	printf@c& (0+255),w,b
 15475  011710  51A8               	movf	(printf@prec+1)& (0+255),w,b
 15476  011712  0A80               	xorlw	128
 15477  011714  5986               	subwfb	??_printf& (0+255),w,b
 15478  011716  B0D8               	btfsc	status,0,c
 15479  011718  D003               	goto	l1445
 15480                           
 15481                           ; BSR set to: 1
 15482                           ;doprnt.c: 1340: c = prec;
 15483  01171A  C1A7  F1A9         	movff	printf@prec,printf@c
 15484  01171E  D010               	goto	l1447
 15485  011720                     l1445:
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;doprnt.c: 1341: else if(prec < c)
 15489                           
 15490                           ; BSR set to: 1
 15491  011720  51A8               	movf	(printf@prec+1)& (0+255),w,b
 15492  011722  0A80               	xorlw	128
 15493  011724  6F86               	movwf	??_printf& (0+255),b
 15494  011726  51A9               	movf	printf@c& (0+255),w,b
 15495  011728  5DA7               	subwf	printf@prec& (0+255),w,b
 15496  01172A  0E80               	movlw	128
 15497  01172C  BFA9               	btfsc	printf@c& (0+255),7,b
 15498  01172E  0E7F               	movlw	127
 15499  011730  5986               	subwfb	??_printf& (0+255),w,b
 15500  011732  B0D8               	btfsc	status,0,c
 15501  011734  D005               	goto	l1447
 15502                           
 15503                           ; BSR set to: 1
 15504                           ;doprnt.c: 1342: prec = c;
 15505  011736  51A9               	movf	printf@c& (0+255),w,b
 15506  011738  6FA7               	movwf	printf@prec& (0+255),b
 15507  01173A  6BA8               	clrf	(printf@prec+1)& (0+255),b
 15508  01173C  BFA7               	btfsc	printf@prec& (0+255),7,b
 15509  01173E  07A8               	decf	(printf@prec+1)& (0+255),f,b
 15510  011740                     l1447:
 15511                           
 15512                           ; BSR set to: 1
 15513                           ;doprnt.c: 1422: {
 15514                           ;doprnt.c: 1438: if(flag & 0x03)
 15515                           
 15516                           ; BSR set to: 1
 15517                           
 15518                           ; BSR set to: 1
 15519  011740  0E03               	movlw	3
 15520  011742  1597               	andwf	printf@flag& (0+255),w,b
 15521  011744  6F86               	movwf	??_printf& (0+255),b
 15522  011746  0E00               	movlw	0
 15523  011748  1598               	andwf	(printf@flag+1)& (0+255),w,b
 15524  01174A  6F87               	movwf	(??_printf+1)& (0+255),b
 15525  01174C  5186               	movf	??_printf& (0+255),w,b
 15526  01174E  1187               	iorwf	(??_printf+1)& (0+255),w,b
 15527  011750  B4D8               	btfsc	status,2,c
 15528  011752  D091               	goto	l1449
 15529                           
 15530                           ; BSR set to: 1
 15531                           ;doprnt.c: 1439: (putch('-') );
 15532  011754  0E2D               	movlw	45
 15533  011756  EC97  F0C1         	call	_putch
 15534                           
 15535                           ;doprnt.c: 1469: }
 15536                           ;doprnt.c: 1474: while(prec--) {
 15537  01175A  D08D               	goto	l1449
 15538  01175C                     
 15539                           ;doprnt.c: 1486: case 0xC0:
 15540                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15541  01175C  C1A7  F186         	movff	printf@prec,??_printf
 15542  011760  C1A8  F187         	movff	printf@prec+1,??_printf+1
 15543  011764  0101               	movlb	1	; () banked
 15544  011766  90D8               	bcf	status,0,c
 15545  011768  3786               	rlcf	??_printf& (0+255),f,b
 15546  01176A  3787               	rlcf	(??_printf+1)& (0+255),f,b
 15547  01176C  90D8               	bcf	status,0,c
 15548  01176E  3786               	rlcf	??_printf& (0+255),f,b
 15549  011770  3787               	rlcf	(??_printf+1)& (0+255),f,b
 15550  011772  0E83               	movlw	low _dpowers
 15551  011774  2586               	addwf	??_printf& (0+255),w,b
 15552  011776  6EF6               	movwf	tblptrl,c
 15553  011778  0EEA               	movlw	high _dpowers
 15554  01177A  2187               	addwfc	(??_printf+1)& (0+255),w,b
 15555  01177C  6EF7               	movwf	tblptrh,c
 15556  01177E                     	if	1	;There are 3 active tblptr bytes
 15557  01177E  6AF8               	clrf	tblptru,c
 15558  011780  0E00               	movlw	low (__mediumconst shr (0+16))
 15559  011782  22F8               	addwfc	tblptru,f,c
 15560  011784                     	endif
 15561  011784  0009               	tblrd		*+
 15562  011786  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15563  01178A  0009               	tblrd		*+
 15564  01178C  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15565  011790  0009               	tblrd		*+
 15566  011792  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15567  011796  000A               	tblrd		*-
 15568  011798  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15569  01179C  C19F  F117         	movff	printf@val,___lldiv@dividend
 15570  0117A0  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 15571  0117A4  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 15572  0117A8  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15573  0117AC  ECE7  F0B9         	call	___lldiv	;wreg free
 15574  0117B0  C117  F124         	movff	?___lldiv,___llmod@dividend
 15575  0117B4  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 15576  0117B8  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 15577  0117BC  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 15578  0117C0  0E0A               	movlw	10
 15579  0117C2  0101               	movlb	1	; () banked
 15580  0117C4  6F28               	movwf	___llmod@divisor& (0+255),b
 15581  0117C6  0E00               	movlw	0
 15582  0117C8  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15583  0117CA  0E00               	movlw	0
 15584  0117CC  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15585  0117CE  0E00               	movlw	0
 15586  0117D0  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15587  0117D2  EC38  F0BC         	call	___llmod	;wreg free
 15588  0117D6  0101               	movlb	1	; () banked
 15589  0117D8  5124               	movf	?___llmod& (0+255),w,b
 15590  0117DA  0F30               	addlw	48
 15591  0117DC  6FA9               	movwf	printf@c& (0+255),b
 15592                           
 15593                           ;doprnt.c: 1491: break;
 15594  0117DE  D048               	goto	l1454
 15595  0117E0                     
 15596                           ; BSR set to: 1
 15597                           ;doprnt.c: 1499: {
 15598                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15599                           
 15600                           ; BSR set to: 1
 15601  0117E0  C19F  F117         	movff	printf@val,___lldiv@dividend
 15602  0117E4  C1A0  F118         	movff	printf@val+1,___lldiv@dividend+1
 15603  0117E8  C1A1  F119         	movff	printf@val+2,___lldiv@dividend+2
 15604  0117EC  C1A2  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15605  0117F0  C1A7  F186         	movff	printf@prec,??_printf
 15606  0117F4  C1A8  F187         	movff	printf@prec+1,??_printf+1
 15607  0117F8  90D8               	bcf	status,0,c
 15608  0117FA  3786               	rlcf	??_printf& (0+255),f,b
 15609  0117FC  3787               	rlcf	(??_printf+1)& (0+255),f,b
 15610  0117FE  90D8               	bcf	status,0,c
 15611  011800  3786               	rlcf	??_printf& (0+255),f,b
 15612  011802  3787               	rlcf	(??_printf+1)& (0+255),f,b
 15613  011804  0EAB               	movlw	low _hexpowers
 15614  011806  2586               	addwf	??_printf& (0+255),w,b
 15615  011808  6EF6               	movwf	tblptrl,c
 15616  01180A  0EEA               	movlw	high _hexpowers
 15617  01180C  2187               	addwfc	(??_printf+1)& (0+255),w,b
 15618  01180E  6EF7               	movwf	tblptrh,c
 15619  011810                     	if	1	;There are 3 active tblptr bytes
 15620  011810  6AF8               	clrf	tblptru,c
 15621  011812  0E00               	movlw	low (__mediumconst shr (0+16))
 15622  011814  22F8               	addwfc	tblptru,f,c
 15623  011816                     	endif
 15624  011816  0009               	tblrd		*+
 15625  011818  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15626  01181C  0009               	tblrd		*+
 15627  01181E  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15628  011822  0009               	tblrd		*+
 15629  011824  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15630  011828  000A               	tblrd		*-
 15631  01182A  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15632  01182E  ECE7  F0B9         	call	___lldiv	;wreg free
 15633  011832  0101               	movlb	1	; () banked
 15634  011834  5117               	movf	?___lldiv& (0+255),w,b
 15635  011836  0B0F               	andlw	15
 15636  011838  6F90               	movwf	printf@idx& (0+255),b
 15637                           
 15638                           ; BSR set to: 1
 15639                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 15640  01183A  5190               	movf	printf@idx& (0+255),w,b
 15641  01183C  0D01               	mullw	1
 15642  01183E  0ECC               	movlw	low STR_141
 15643  011840  24F3               	addwf	prodl,w,c
 15644  011842  6EF6               	movwf	tblptrl,c
 15645  011844  0EFD               	movlw	high STR_141
 15646  011846  20F4               	addwfc	prodh,w,c
 15647  011848  6EF7               	movwf	tblptrh,c
 15648  01184A                     	if	1	;There are 3 active tblptr bytes
 15649  01184A  6AF8               	clrf	tblptru,c
 15650  01184C  0E00               	movlw	low (__mediumconst shr (0+16))
 15651  01184E  22F8               	addwfc	tblptru,f,c
 15652  011850                     	endif
 15653  011850  0008               	tblrd		*
 15654  011852  CFF5 F1A9          	movff	tablat,printf@c
 15655                           
 15656                           ; BSR set to: 1
 15657                           ;doprnt.c: 1523: }
 15658                           
 15659                           ;doprnt.c: 1508: }
 15660                           ;doprnt.c: 1510: break;
 15661  011856  D00C               	goto	l1454
 15662  011858                     l12242:
 15663  011858  0101               	movlb	1	; () banked
 15664  01185A  5197               	movf	printf@flag& (0+255),w,b
 15665  01185C  0BC0               	andlw	192
 15666                           
 15667                           ; Switch size 1, requested type "space"
 15668                           ; Number of cases is 3, Range of values is 0 to 192
 15669                           ; switch strategies available:
 15670                           ; Name         Instructions Cycles
 15671                           ; simple_byte           10     6 (average)
 15672                           ;	Chosen strategy is simple_byte
 15673  01185E  0A00               	xorlw	0	; case 0
 15674  011860  B4D8               	btfsc	status,2,c
 15675  011862  D77C               	goto	l1452
 15676  011864  0A80               	xorlw	128	; case 128
 15677  011866  B4D8               	btfsc	status,2,c
 15678  011868  D7BB               	goto	l1455
 15679  01186A  0A40               	xorlw	64	; case 192
 15680  01186C  B4D8               	btfsc	status,2,c
 15681  01186E  D776               	goto	l1452
 15682  011870                     l1454:
 15683                           
 15684                           ; BSR set to: 1
 15685                           ;doprnt.c: 1524: (putch(c) );
 15686                           
 15687                           ; BSR set to: 1
 15688  011870  51A9               	movf	printf@c& (0+255),w,b
 15689  011872  EC97  F0C1         	call	_putch
 15690  011876                     l1449:
 15691  011876  0101               	movlb	1	; () banked
 15692  011878  07A7               	decf	printf@prec& (0+255),f,b
 15693  01187A  A0D8               	btfss	status,0,c
 15694  01187C  07A8               	decf	(printf@prec+1)& (0+255),f,b
 15695  01187E  29A7               	incf	printf@prec& (0+255),w,b
 15696  011880  E1EB               	bnz	l12242
 15697  011882  29A8               	incf	(printf@prec+1)& (0+255),w,b
 15698  011884  A4D8               	btfss	status,2,c
 15699  011886  D7E8               	goto	l1451
 15700  011888                     u14780:
 15701                           
 15702                           ; BSR set to: 1
 15703                           
 15704                           ; BSR set to: 1
 15705  011888  0101               	movlb	1	; () banked
 15706  01188A  517C               	movf	printf@f& (0+255),w,b
 15707  01188C  6F86               	movwf	??_printf& (0+255),b
 15708  01188E  517D               	movf	(printf@f+1)& (0+255),w,b
 15709  011890  6F87               	movwf	(??_printf+1)& (0+255),b
 15710  011892  4B7C               	infsnz	printf@f& (0+255),f,b
 15711  011894  2B7D               	incf	(printf@f+1)& (0+255),f,b
 15712  011896  C186  FFF6         	movff	??_printf,tblptrl
 15713  01189A  C187  FFF7         	movff	??_printf+1,tblptrh
 15714  01189E  0E00               	movlw	low (__mediumconst shr (0+16))
 15715  0118A0  6EF8               	movwf	tblptru,c
 15716  0118A2  0E0D               	movlw	(high __ramtop+-1)
 15717  0118A4  64F7               	cpfsgt	tblptrh,c
 15718  0118A6  D003               	bra	u14797
 15719  0118A8  0008               	tblrd		*
 15720  0118AA  50F5               	movf	tablat,w,c
 15721  0118AC  D005               	bra	u14790
 15722  0118AE                     u14797:
 15723  0118AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15724  0118B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15725  0118B6  50EF               	movf	indf0,w,c
 15726  0118B8                     u14790:
 15727  0118B8  0101               	movlb	1	; () banked
 15728  0118BA  6FA9               	movwf	printf@c& (0+255),b
 15729  0118BC  51A9               	movf	printf@c& (0+255),w,b
 15730  0118BE  B4D8               	btfsc	status,2,c
 15731  0118C0  0012               	return	
 15732  0118C2  EFD7  F086         	goto	l1363
 15733  0118C6                     __end_of_printf:
 15734                           	opt stack 0
 15735                           tblptru	equ	0xFF8
 15736                           tblptrh	equ	0xFF7
 15737                           tblptrl	equ	0xFF6
 15738                           tablat	equ	0xFF5
 15739                           prodh	equ	0xFF4
 15740                           prodl	equ	0xFF3
 15741                           intcon	equ	0xFF2
 15742                           indf0	equ	0xFEF
 15743                           postinc0	equ	0xFEE
 15744                           fsr0h	equ	0xFEA
 15745                           fsr0l	equ	0xFE9
 15746                           wreg	equ	0xFE8
 15747                           indf1	equ	0xFE7
 15748                           postdec1	equ	0xFE5
 15749                           plusw1	equ	0xFE3
 15750                           fsr1h	equ	0xFE2
 15751                           fsr1l	equ	0xFE1
 15752                           indf2	equ	0xFDF
 15753                           postinc2	equ	0xFDE
 15754                           postdec2	equ	0xFDD
 15755                           plusw2	equ	0xFDB
 15756                           fsr2h	equ	0xFDA
 15757                           fsr2l	equ	0xFD9
 15758                           status	equ	0xFD8
 15759                           
 15760 ;; *************** function _scale *****************
 15761 ;; Defined at:
 15762 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15763 ;; Parameters:    Size  Location     Type
 15764 ;;  scl             1    wreg     char 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;  scl             1  119[BANK1 ] char 
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  4  111[BANK1 ] char 
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15776 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15777 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15779 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15780 ;;Total ram usage:        9 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:   14
 15783 ;; This function calls:
 15784 ;;		___awdiv
 15785 ;;		___awmod
 15786 ;;		___flmul
 15787 ;; This function is called by:
 15788 ;;		_printf
 15789 ;; This function uses a non-reentrant model
 15790 ;;
 15791                           
 15792                           	psect	text29
 15793  012DC4                     __ptext29:
 15794                           	opt stack 0
 15795  012DC4                     _scale:
 15796                           	opt stack 13
 15797                           
 15798                           ; BSR set to: 1
 15799                           ;incstack = 0
 15800                           ;scale@scl stored from wreg
 15801  012DC4  0101               	movlb	1	; () banked
 15802  012DC6  6F77               	movwf	scale@scl& (0+255),b
 15803                           
 15804                           ;doprnt.c: 428: if(scl < 0) {
 15805  012DC8  0101               	movlb	1	; () banked
 15806  012DCA  AF77               	btfss	scale@scl& (0+255),7,b
 15807  012DCC  D127               	goto	l1352
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;doprnt.c: 429: scl = -scl;
 15811  012DCE  6D77               	negf	scale@scl& (0+255),b
 15812                           
 15813                           ;doprnt.c: 430: if(scl>=110)
 15814  012DD0  5177               	movf	scale@scl& (0+255),w,b
 15815  012DD2  0A80               	xorlw	128
 15816  012DD4  0F12               	addlw	-238
 15817  012DD6  A0D8               	btfss	status,0,c
 15818  012DD8  D0A5               	goto	l1353
 15819                           
 15820                           ; BSR set to: 1
 15821                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15822  012DDA  0E00               	movlw	0
 15823  012DDC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15824  012DDE  0E0A               	movlw	10
 15825  012DE0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15826  012DE2  0E00               	movlw	0
 15827  012DE4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15828  012DE6  0E64               	movlw	100
 15829  012DE8  6F19               	movwf	___awmod@divisor& (0+255),b
 15830  012DEA  5177               	movf	scale@scl& (0+255),w,b
 15831  012DEC  6F17               	movwf	___awmod@dividend& (0+255),b
 15832  012DEE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15833  012DF0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15834  012DF2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15835  012DF4  EC27  F0BB         	call	___awmod	;wreg free
 15836  012DF8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15837  012DFC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15838  012E00  ECA4  F0B9         	call	___awdiv	;wreg free
 15839  012E04  0101               	movlb	1	; () banked
 15840  012E06  90D8               	bcf	status,0,c
 15841  012E08  371D               	rlcf	?___awdiv& (0+255),f,b
 15842  012E0A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15843  012E0C  90D8               	bcf	status,0,c
 15844  012E0E  371D               	rlcf	?___awdiv& (0+255),f,b
 15845  012E10  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15846  012E12  0E24               	movlw	36
 15847  012E14  271D               	addwf	?___awdiv& (0+255),f,b
 15848  012E16  0E00               	movlw	0
 15849  012E18  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15850  012E1A  0E4F               	movlw	low __npowers_
 15851  012E1C  251D               	addwf	?___awdiv& (0+255),w,b
 15852  012E1E  6EF6               	movwf	tblptrl,c
 15853  012E20  0EEA               	movlw	high __npowers_
 15854  012E22  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15855  012E24  6EF7               	movwf	tblptrh,c
 15856  012E26                     	if	1	;There are 3 active tblptr bytes
 15857  012E26  6AF8               	clrf	tblptru,c
 15858  012E28  0E00               	movlw	low (__mediumconst shr (0+16))
 15859  012E2A  22F8               	addwfc	tblptru,f,c
 15860  012E2C                     	endif
 15861  012E2C  0009               	tblrd		*+
 15862  012E2E  CFF5 F15A          	movff	tablat,___flmul@a
 15863  012E32  0009               	tblrd		*+
 15864  012E34  CFF5 F15B          	movff	tablat,___flmul@a+1
 15865  012E38  0009               	tblrd		*+
 15866  012E3A  CFF5 F15C          	movff	tablat,___flmul@a+2
 15867  012E3E  000A               	tblrd		*-
 15868  012E40  CFF5 F15D          	movff	tablat,___flmul@a+3
 15869  012E44  0E00               	movlw	0
 15870  012E46  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15871  012E48  0E64               	movlw	100
 15872  012E4A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15873  012E4C  5177               	movf	scale@scl& (0+255),w,b
 15874  012E4E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15875  012E50  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15876  012E52  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15877  012E54  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15878  012E56  ECA4  F0B9         	call	___awdiv	;wreg free
 15879  012E5A  0101               	movlb	1	; () banked
 15880  012E5C  90D8               	bcf	status,0,c
 15881  012E5E  371D               	rlcf	?___awdiv& (0+255),f,b
 15882  012E60  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15883  012E62  90D8               	bcf	status,0,c
 15884  012E64  371D               	rlcf	?___awdiv& (0+255),f,b
 15885  012E66  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15886  012E68  0E48               	movlw	72
 15887  012E6A  271D               	addwf	?___awdiv& (0+255),f,b
 15888  012E6C  0E00               	movlw	0
 15889  012E6E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15890  012E70  0E4F               	movlw	low __npowers_
 15891  012E72  251D               	addwf	?___awdiv& (0+255),w,b
 15892  012E74  6EF6               	movwf	tblptrl,c
 15893  012E76  0EEA               	movlw	high __npowers_
 15894  012E78  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15895  012E7A  6EF7               	movwf	tblptrh,c
 15896  012E7C                     	if	1	;There are 3 active tblptr bytes
 15897  012E7C  6AF8               	clrf	tblptru,c
 15898  012E7E  0E00               	movlw	low (__mediumconst shr (0+16))
 15899  012E80  22F8               	addwfc	tblptru,f,c
 15900  012E82                     	endif
 15901  012E82  0009               	tblrd		*+
 15902  012E84  CFF5 F156          	movff	tablat,___flmul@b
 15903  012E88  0009               	tblrd		*+
 15904  012E8A  CFF5 F157          	movff	tablat,___flmul@b+1
 15905  012E8E  0009               	tblrd		*+
 15906  012E90  CFF5 F158          	movff	tablat,___flmul@b+2
 15907  012E94  000A               	tblrd		*-
 15908  012E96  CFF5 F159          	movff	tablat,___flmul@b+3
 15909  012E9A  EC28  F09D         	call	___flmul	;wreg free
 15910  012E9E  C156  F173         	movff	?___flmul,_scale$3897
 15911  012EA2  C157  F174         	movff	?___flmul+1,_scale$3897+1
 15912  012EA6  C158  F175         	movff	?___flmul+2,_scale$3897+2
 15913  012EAA  C159  F176         	movff	?___flmul+3,_scale$3897+3
 15914                           
 15915                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15916  012EAE  C173  F156         	movff	_scale$3897,___flmul@b
 15917  012EB2  C174  F157         	movff	_scale$3897+1,___flmul@b+1
 15918  012EB6  C175  F158         	movff	_scale$3897+2,___flmul@b+2
 15919  012EBA  C176  F159         	movff	_scale$3897+3,___flmul@b+3
 15920  012EBE  0E00               	movlw	0
 15921  012EC0  0101               	movlb	1	; () banked
 15922  012EC2  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15923  012EC4  0E0A               	movlw	10
 15924  012EC6  6F19               	movwf	___awmod@divisor& (0+255),b
 15925  012EC8  5177               	movf	scale@scl& (0+255),w,b
 15926  012ECA  6F17               	movwf	___awmod@dividend& (0+255),b
 15927  012ECC  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15928  012ECE  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15929  012ED0  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15930  012ED2  EC27  F0BB         	call	___awmod	;wreg free
 15931  012ED6  0101               	movlb	1	; () banked
 15932  012ED8  90D8               	bcf	status,0,c
 15933  012EDA  3717               	rlcf	?___awmod& (0+255),f,b
 15934  012EDC  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15935  012EDE  90D8               	bcf	status,0,c
 15936  012EE0  3717               	rlcf	?___awmod& (0+255),f,b
 15937  012EE2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 15938  012EE4  0E4F               	movlw	low __npowers_
 15939  012EE6  2517               	addwf	?___awmod& (0+255),w,b
 15940  012EE8  6EF6               	movwf	tblptrl,c
 15941  012EEA  0EEA               	movlw	high __npowers_
 15942  012EEC  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 15943  012EEE  6EF7               	movwf	tblptrh,c
 15944  012EF0                     	if	1	;There are 3 active tblptr bytes
 15945  012EF0  6AF8               	clrf	tblptru,c
 15946  012EF2  0E00               	movlw	low (__mediumconst shr (0+16))
 15947  012EF4  22F8               	addwfc	tblptru,f,c
 15948  012EF6                     	endif
 15949  012EF6  0009               	tblrd		*+
 15950  012EF8  CFF5 F15A          	movff	tablat,___flmul@a
 15951  012EFC  0009               	tblrd		*+
 15952  012EFE  CFF5 F15B          	movff	tablat,___flmul@a+1
 15953  012F02  0009               	tblrd		*+
 15954  012F04  CFF5 F15C          	movff	tablat,___flmul@a+2
 15955  012F08  000A               	tblrd		*-
 15956  012F0A  CFF5 F15D          	movff	tablat,___flmul@a+3
 15957  012F0E  EC28  F09D         	call	___flmul	;wreg free
 15958  012F12  C156  F16F         	movff	?___flmul,?_scale
 15959  012F16  C157  F170         	movff	?___flmul+1,?_scale+1
 15960  012F1A  C158  F171         	movff	?___flmul+2,?_scale+2
 15961  012F1E  C159  F172         	movff	?___flmul+3,?_scale+3
 15962  012F22  0012               	return	
 15963  012F24                     l1353:
 15964                           
 15965                           ;doprnt.c: 432: else if(scl > 10)
 15966  012F24  0101               	movlb	1	; () banked
 15967  012F26  5177               	movf	scale@scl& (0+255),w,b
 15968  012F28  0A80               	xorlw	128
 15969  012F2A  0F75               	addlw	-139
 15970  012F2C  A0D8               	btfss	status,0,c
 15971  012F2E  D05D               	goto	l1356
 15972                           
 15973                           ; BSR set to: 1
 15974                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15975  012F30  0E00               	movlw	0
 15976  012F32  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15977  012F34  0E0A               	movlw	10
 15978  012F36  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15979  012F38  5177               	movf	scale@scl& (0+255),w,b
 15980  012F3A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15981  012F3C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15982  012F3E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15983  012F40  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15984  012F42  ECA4  F0B9         	call	___awdiv	;wreg free
 15985  012F46  0101               	movlb	1	; () banked
 15986  012F48  90D8               	bcf	status,0,c
 15987  012F4A  371D               	rlcf	?___awdiv& (0+255),f,b
 15988  012F4C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15989  012F4E  90D8               	bcf	status,0,c
 15990  012F50  371D               	rlcf	?___awdiv& (0+255),f,b
 15991  012F52  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 15992  012F54  0E24               	movlw	36
 15993  012F56  271D               	addwf	?___awdiv& (0+255),f,b
 15994  012F58  0E00               	movlw	0
 15995  012F5A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 15996  012F5C  0E4F               	movlw	low __npowers_
 15997  012F5E  251D               	addwf	?___awdiv& (0+255),w,b
 15998  012F60  6EF6               	movwf	tblptrl,c
 15999  012F62  0EEA               	movlw	high __npowers_
 16000  012F64  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16001  012F66  6EF7               	movwf	tblptrh,c
 16002  012F68                     	if	1	;There are 3 active tblptr bytes
 16003  012F68  6AF8               	clrf	tblptru,c
 16004  012F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 16005  012F6C  22F8               	addwfc	tblptru,f,c
 16006  012F6E                     	endif
 16007  012F6E  0009               	tblrd		*+
 16008  012F70  CFF5 F156          	movff	tablat,___flmul@b
 16009  012F74  0009               	tblrd		*+
 16010  012F76  CFF5 F157          	movff	tablat,___flmul@b+1
 16011  012F7A  0009               	tblrd		*+
 16012  012F7C  CFF5 F158          	movff	tablat,___flmul@b+2
 16013  012F80  000A               	tblrd		*-
 16014  012F82  CFF5 F159          	movff	tablat,___flmul@b+3
 16015  012F86  0E00               	movlw	0
 16016  012F88  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16017  012F8A  0E0A               	movlw	10
 16018  012F8C  6F19               	movwf	___awmod@divisor& (0+255),b
 16019  012F8E  5177               	movf	scale@scl& (0+255),w,b
 16020  012F90  6F17               	movwf	___awmod@dividend& (0+255),b
 16021  012F92  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16022  012F94  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16023  012F96  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16024  012F98  EC27  F0BB         	call	___awmod	;wreg free
 16025  012F9C  0101               	movlb	1	; () banked
 16026  012F9E  90D8               	bcf	status,0,c
 16027  012FA0  3717               	rlcf	?___awmod& (0+255),f,b
 16028  012FA2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16029  012FA4  90D8               	bcf	status,0,c
 16030  012FA6  3717               	rlcf	?___awmod& (0+255),f,b
 16031  012FA8  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16032  012FAA  0E4F               	movlw	low __npowers_
 16033  012FAC  2517               	addwf	?___awmod& (0+255),w,b
 16034  012FAE  6EF6               	movwf	tblptrl,c
 16035  012FB0  0EEA               	movlw	high __npowers_
 16036  012FB2  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16037  012FB4  6EF7               	movwf	tblptrh,c
 16038  012FB6                     	if	1	;There are 3 active tblptr bytes
 16039  012FB6  6AF8               	clrf	tblptru,c
 16040  012FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 16041  012FBA  22F8               	addwfc	tblptru,f,c
 16042  012FBC                     	endif
 16043  012FBC  0009               	tblrd		*+
 16044  012FBE  CFF5 F15A          	movff	tablat,___flmul@a
 16045  012FC2  0009               	tblrd		*+
 16046  012FC4  CFF5 F15B          	movff	tablat,___flmul@a+1
 16047  012FC8  0009               	tblrd		*+
 16048  012FCA  CFF5 F15C          	movff	tablat,___flmul@a+2
 16049  012FCE  000A               	tblrd		*-
 16050  012FD0  CFF5 F15D          	movff	tablat,___flmul@a+3
 16051  012FD4  EC28  F09D         	call	___flmul	;wreg free
 16052  012FD8  C156  F16F         	movff	?___flmul,?_scale
 16053  012FDC  C157  F170         	movff	?___flmul+1,?_scale+1
 16054  012FE0  C158  F171         	movff	?___flmul+2,?_scale+2
 16055  012FE4  C159  F172         	movff	?___flmul+3,?_scale+3
 16056  012FE8  0012               	return	
 16057  012FEA                     l1356:
 16058                           
 16059                           ;doprnt.c: 434: return _npowers_[scl];
 16060  012FEA  0101               	movlb	1	; () banked
 16061  012FEC  5177               	movf	scale@scl& (0+255),w,b
 16062  012FEE  0D04               	mullw	4
 16063  012FF0  0E4F               	movlw	low __npowers_
 16064  012FF2  24F3               	addwf	prodl,w,c
 16065  012FF4  6EF6               	movwf	tblptrl,c
 16066  012FF6  0EEA               	movlw	high __npowers_
 16067  012FF8  20F4               	addwfc	prodh,w,c
 16068  012FFA  6EF7               	movwf	tblptrh,c
 16069  012FFC                     	if	1	;There are 3 active tblptr bytes
 16070  012FFC  6AF8               	clrf	tblptru,c
 16071  012FFE  0E00               	movlw	low (__mediumconst shr (0+16))
 16072  013000  22F8               	addwfc	tblptru,f,c
 16073  013002                     	endif
 16074  013002  0009               	tblrd		*+
 16075  013004  CFF5 F16F          	movff	tablat,?_scale
 16076  013008  0009               	tblrd		*+
 16077  01300A  CFF5 F170          	movff	tablat,?_scale+1
 16078  01300E  0009               	tblrd		*+
 16079  013010  CFF5 F171          	movff	tablat,?_scale+2
 16080  013014  000A               	tblrd		*-
 16081  013016  CFF5 F172          	movff	tablat,?_scale+3
 16082                           
 16083                           ; BSR set to: 1
 16084  01301A  0012               	return	
 16085  01301C                     l1352:
 16086                           
 16087                           ; BSR set to: 1
 16088                           ;doprnt.c: 435: }
 16089                           ;doprnt.c: 436: if(scl>=110)
 16090                           
 16091                           ; BSR set to: 1
 16092  01301C  5177               	movf	scale@scl& (0+255),w,b
 16093  01301E  0A80               	xorlw	128
 16094  013020  0F12               	addlw	-238
 16095  013022  A0D8               	btfss	status,0,c
 16096  013024  D0A5               	goto	l1357
 16097                           
 16098                           ; BSR set to: 1
 16099                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16100  013026  0E00               	movlw	0
 16101  013028  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16102  01302A  0E0A               	movlw	10
 16103  01302C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16104  01302E  0E00               	movlw	0
 16105  013030  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16106  013032  0E64               	movlw	100
 16107  013034  6F19               	movwf	___awmod@divisor& (0+255),b
 16108  013036  5177               	movf	scale@scl& (0+255),w,b
 16109  013038  6F17               	movwf	___awmod@dividend& (0+255),b
 16110  01303A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16111  01303C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16112  01303E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16113  013040  EC27  F0BB         	call	___awmod	;wreg free
 16114  013044  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16115  013048  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16116  01304C  ECA4  F0B9         	call	___awdiv	;wreg free
 16117  013050  0101               	movlb	1	; () banked
 16118  013052  90D8               	bcf	status,0,c
 16119  013054  371D               	rlcf	?___awdiv& (0+255),f,b
 16120  013056  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16121  013058  90D8               	bcf	status,0,c
 16122  01305A  371D               	rlcf	?___awdiv& (0+255),f,b
 16123  01305C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16124  01305E  0E24               	movlw	36
 16125  013060  271D               	addwf	?___awdiv& (0+255),f,b
 16126  013062  0E00               	movlw	0
 16127  013064  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16128  013066  0E1B               	movlw	low __powers_
 16129  013068  251D               	addwf	?___awdiv& (0+255),w,b
 16130  01306A  6EF6               	movwf	tblptrl,c
 16131  01306C  0EEA               	movlw	high __powers_
 16132  01306E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16133  013070  6EF7               	movwf	tblptrh,c
 16134  013072                     	if	1	;There are 3 active tblptr bytes
 16135  013072  6AF8               	clrf	tblptru,c
 16136  013074  0E00               	movlw	low (__mediumconst shr (0+16))
 16137  013076  22F8               	addwfc	tblptru,f,c
 16138  013078                     	endif
 16139  013078  0009               	tblrd		*+
 16140  01307A  CFF5 F15A          	movff	tablat,___flmul@a
 16141  01307E  0009               	tblrd		*+
 16142  013080  CFF5 F15B          	movff	tablat,___flmul@a+1
 16143  013084  0009               	tblrd		*+
 16144  013086  CFF5 F15C          	movff	tablat,___flmul@a+2
 16145  01308A  000A               	tblrd		*-
 16146  01308C  CFF5 F15D          	movff	tablat,___flmul@a+3
 16147  013090  0E00               	movlw	0
 16148  013092  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16149  013094  0E64               	movlw	100
 16150  013096  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16151  013098  5177               	movf	scale@scl& (0+255),w,b
 16152  01309A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16153  01309C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16154  01309E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16155  0130A0  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16156  0130A2  ECA4  F0B9         	call	___awdiv	;wreg free
 16157  0130A6  0101               	movlb	1	; () banked
 16158  0130A8  90D8               	bcf	status,0,c
 16159  0130AA  371D               	rlcf	?___awdiv& (0+255),f,b
 16160  0130AC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16161  0130AE  90D8               	bcf	status,0,c
 16162  0130B0  371D               	rlcf	?___awdiv& (0+255),f,b
 16163  0130B2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16164  0130B4  0E48               	movlw	72
 16165  0130B6  271D               	addwf	?___awdiv& (0+255),f,b
 16166  0130B8  0E00               	movlw	0
 16167  0130BA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16168  0130BC  0E1B               	movlw	low __powers_
 16169  0130BE  251D               	addwf	?___awdiv& (0+255),w,b
 16170  0130C0  6EF6               	movwf	tblptrl,c
 16171  0130C2  0EEA               	movlw	high __powers_
 16172  0130C4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16173  0130C6  6EF7               	movwf	tblptrh,c
 16174  0130C8                     	if	1	;There are 3 active tblptr bytes
 16175  0130C8  6AF8               	clrf	tblptru,c
 16176  0130CA  0E00               	movlw	low (__mediumconst shr (0+16))
 16177  0130CC  22F8               	addwfc	tblptru,f,c
 16178  0130CE                     	endif
 16179  0130CE  0009               	tblrd		*+
 16180  0130D0  CFF5 F156          	movff	tablat,___flmul@b
 16181  0130D4  0009               	tblrd		*+
 16182  0130D6  CFF5 F157          	movff	tablat,___flmul@b+1
 16183  0130DA  0009               	tblrd		*+
 16184  0130DC  CFF5 F158          	movff	tablat,___flmul@b+2
 16185  0130E0  000A               	tblrd		*-
 16186  0130E2  CFF5 F159          	movff	tablat,___flmul@b+3
 16187  0130E6  EC28  F09D         	call	___flmul	;wreg free
 16188  0130EA  C156  F173         	movff	?___flmul,_scale$3897
 16189  0130EE  C157  F174         	movff	?___flmul+1,_scale$3897+1
 16190  0130F2  C158  F175         	movff	?___flmul+2,_scale$3897+2
 16191  0130F6  C159  F176         	movff	?___flmul+3,_scale$3897+3
 16192                           
 16193                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16194  0130FA  C173  F156         	movff	_scale$3897,___flmul@b
 16195  0130FE  C174  F157         	movff	_scale$3897+1,___flmul@b+1
 16196  013102  C175  F158         	movff	_scale$3897+2,___flmul@b+2
 16197  013106  C176  F159         	movff	_scale$3897+3,___flmul@b+3
 16198  01310A  0E00               	movlw	0
 16199  01310C  0101               	movlb	1	; () banked
 16200  01310E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16201  013110  0E0A               	movlw	10
 16202  013112  6F19               	movwf	___awmod@divisor& (0+255),b
 16203  013114  5177               	movf	scale@scl& (0+255),w,b
 16204  013116  6F17               	movwf	___awmod@dividend& (0+255),b
 16205  013118  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16206  01311A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16207  01311C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16208  01311E  EC27  F0BB         	call	___awmod	;wreg free
 16209  013122  0101               	movlb	1	; () banked
 16210  013124  90D8               	bcf	status,0,c
 16211  013126  3717               	rlcf	?___awmod& (0+255),f,b
 16212  013128  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16213  01312A  90D8               	bcf	status,0,c
 16214  01312C  3717               	rlcf	?___awmod& (0+255),f,b
 16215  01312E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16216  013130  0E1B               	movlw	low __powers_
 16217  013132  2517               	addwf	?___awmod& (0+255),w,b
 16218  013134  6EF6               	movwf	tblptrl,c
 16219  013136  0EEA               	movlw	high __powers_
 16220  013138  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16221  01313A  6EF7               	movwf	tblptrh,c
 16222  01313C                     	if	1	;There are 3 active tblptr bytes
 16223  01313C  6AF8               	clrf	tblptru,c
 16224  01313E  0E00               	movlw	low (__mediumconst shr (0+16))
 16225  013140  22F8               	addwfc	tblptru,f,c
 16226  013142                     	endif
 16227  013142  0009               	tblrd		*+
 16228  013144  CFF5 F15A          	movff	tablat,___flmul@a
 16229  013148  0009               	tblrd		*+
 16230  01314A  CFF5 F15B          	movff	tablat,___flmul@a+1
 16231  01314E  0009               	tblrd		*+
 16232  013150  CFF5 F15C          	movff	tablat,___flmul@a+2
 16233  013154  000A               	tblrd		*-
 16234  013156  CFF5 F15D          	movff	tablat,___flmul@a+3
 16235  01315A  EC28  F09D         	call	___flmul	;wreg free
 16236  01315E  C156  F16F         	movff	?___flmul,?_scale
 16237  013162  C157  F170         	movff	?___flmul+1,?_scale+1
 16238  013166  C158  F171         	movff	?___flmul+2,?_scale+2
 16239  01316A  C159  F172         	movff	?___flmul+3,?_scale+3
 16240  01316E  0012               	return	
 16241  013170                     l1357:
 16242                           
 16243                           ;doprnt.c: 438: else if(scl > 10)
 16244  013170  0101               	movlb	1	; () banked
 16245  013172  5177               	movf	scale@scl& (0+255),w,b
 16246  013174  0A80               	xorlw	128
 16247  013176  0F75               	addlw	-139
 16248  013178  A0D8               	btfss	status,0,c
 16249  01317A  D05D               	goto	l1359
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16253  01317C  0E00               	movlw	0
 16254  01317E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16255  013180  0E0A               	movlw	10
 16256  013182  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16257  013184  5177               	movf	scale@scl& (0+255),w,b
 16258  013186  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16259  013188  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16260  01318A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16261  01318C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16262  01318E  ECA4  F0B9         	call	___awdiv	;wreg free
 16263  013192  0101               	movlb	1	; () banked
 16264  013194  90D8               	bcf	status,0,c
 16265  013196  371D               	rlcf	?___awdiv& (0+255),f,b
 16266  013198  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16267  01319A  90D8               	bcf	status,0,c
 16268  01319C  371D               	rlcf	?___awdiv& (0+255),f,b
 16269  01319E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16270  0131A0  0E24               	movlw	36
 16271  0131A2  271D               	addwf	?___awdiv& (0+255),f,b
 16272  0131A4  0E00               	movlw	0
 16273  0131A6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16274  0131A8  0E1B               	movlw	low __powers_
 16275  0131AA  251D               	addwf	?___awdiv& (0+255),w,b
 16276  0131AC  6EF6               	movwf	tblptrl,c
 16277  0131AE  0EEA               	movlw	high __powers_
 16278  0131B0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16279  0131B2  6EF7               	movwf	tblptrh,c
 16280  0131B4                     	if	1	;There are 3 active tblptr bytes
 16281  0131B4  6AF8               	clrf	tblptru,c
 16282  0131B6  0E00               	movlw	low (__mediumconst shr (0+16))
 16283  0131B8  22F8               	addwfc	tblptru,f,c
 16284  0131BA                     	endif
 16285  0131BA  0009               	tblrd		*+
 16286  0131BC  CFF5 F156          	movff	tablat,___flmul@b
 16287  0131C0  0009               	tblrd		*+
 16288  0131C2  CFF5 F157          	movff	tablat,___flmul@b+1
 16289  0131C6  0009               	tblrd		*+
 16290  0131C8  CFF5 F158          	movff	tablat,___flmul@b+2
 16291  0131CC  000A               	tblrd		*-
 16292  0131CE  CFF5 F159          	movff	tablat,___flmul@b+3
 16293  0131D2  0E00               	movlw	0
 16294  0131D4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16295  0131D6  0E0A               	movlw	10
 16296  0131D8  6F19               	movwf	___awmod@divisor& (0+255),b
 16297  0131DA  5177               	movf	scale@scl& (0+255),w,b
 16298  0131DC  6F17               	movwf	___awmod@dividend& (0+255),b
 16299  0131DE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16300  0131E0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16301  0131E2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16302  0131E4  EC27  F0BB         	call	___awmod	;wreg free
 16303  0131E8  0101               	movlb	1	; () banked
 16304  0131EA  90D8               	bcf	status,0,c
 16305  0131EC  3717               	rlcf	?___awmod& (0+255),f,b
 16306  0131EE  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16307  0131F0  90D8               	bcf	status,0,c
 16308  0131F2  3717               	rlcf	?___awmod& (0+255),f,b
 16309  0131F4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16310  0131F6  0E1B               	movlw	low __powers_
 16311  0131F8  2517               	addwf	?___awmod& (0+255),w,b
 16312  0131FA  6EF6               	movwf	tblptrl,c
 16313  0131FC  0EEA               	movlw	high __powers_
 16314  0131FE  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16315  013200  6EF7               	movwf	tblptrh,c
 16316  013202                     	if	1	;There are 3 active tblptr bytes
 16317  013202  6AF8               	clrf	tblptru,c
 16318  013204  0E00               	movlw	low (__mediumconst shr (0+16))
 16319  013206  22F8               	addwfc	tblptru,f,c
 16320  013208                     	endif
 16321  013208  0009               	tblrd		*+
 16322  01320A  CFF5 F15A          	movff	tablat,___flmul@a
 16323  01320E  0009               	tblrd		*+
 16324  013210  CFF5 F15B          	movff	tablat,___flmul@a+1
 16325  013214  0009               	tblrd		*+
 16326  013216  CFF5 F15C          	movff	tablat,___flmul@a+2
 16327  01321A  000A               	tblrd		*-
 16328  01321C  CFF5 F15D          	movff	tablat,___flmul@a+3
 16329  013220  EC28  F09D         	call	___flmul	;wreg free
 16330  013224  C156  F16F         	movff	?___flmul,?_scale
 16331  013228  C157  F170         	movff	?___flmul+1,?_scale+1
 16332  01322C  C158  F171         	movff	?___flmul+2,?_scale+2
 16333  013230  C159  F172         	movff	?___flmul+3,?_scale+3
 16334  013234  0012               	return	
 16335  013236                     l1359:
 16336                           
 16337                           ;doprnt.c: 440: return _powers_[scl];
 16338  013236  0101               	movlb	1	; () banked
 16339  013238  5177               	movf	scale@scl& (0+255),w,b
 16340  01323A  0D04               	mullw	4
 16341  01323C  0E1B               	movlw	low __powers_
 16342  01323E  24F3               	addwf	prodl,w,c
 16343  013240  6EF6               	movwf	tblptrl,c
 16344  013242  0EEA               	movlw	high __powers_
 16345  013244  20F4               	addwfc	prodh,w,c
 16346  013246  6EF7               	movwf	tblptrh,c
 16347  013248                     	if	1	;There are 3 active tblptr bytes
 16348  013248  6AF8               	clrf	tblptru,c
 16349  01324A  0E00               	movlw	low (__mediumconst shr (0+16))
 16350  01324C  22F8               	addwfc	tblptru,f,c
 16351  01324E                     	endif
 16352  01324E  0009               	tblrd		*+
 16353  013250  CFF5 F16F          	movff	tablat,?_scale
 16354  013254  0009               	tblrd		*+
 16355  013256  CFF5 F170          	movff	tablat,?_scale+1
 16356  01325A  0009               	tblrd		*+
 16357  01325C  CFF5 F171          	movff	tablat,?_scale+2
 16358  013260  000A               	tblrd		*-
 16359  013262  CFF5 F172          	movff	tablat,?_scale+3
 16360  013266  0012               	return	
 16361  013268                     __end_of_scale:
 16362                           	opt stack 0
 16363                           tblptru	equ	0xFF8
 16364                           tblptrh	equ	0xFF7
 16365                           tblptrl	equ	0xFF6
 16366                           tablat	equ	0xFF5
 16367                           prodh	equ	0xFF4
 16368                           prodl	equ	0xFF3
 16369                           intcon	equ	0xFF2
 16370                           indf0	equ	0xFEF
 16371                           postinc0	equ	0xFEE
 16372                           fsr0h	equ	0xFEA
 16373                           fsr0l	equ	0xFE9
 16374                           wreg	equ	0xFE8
 16375                           indf1	equ	0xFE7
 16376                           postdec1	equ	0xFE5
 16377                           plusw1	equ	0xFE3
 16378                           fsr1h	equ	0xFE2
 16379                           fsr1l	equ	0xFE1
 16380                           indf2	equ	0xFDF
 16381                           postinc2	equ	0xFDE
 16382                           postdec2	equ	0xFDD
 16383                           plusw2	equ	0xFDB
 16384                           fsr2h	equ	0xFDA
 16385                           fsr2l	equ	0xFD9
 16386                           status	equ	0xFD8
 16387                           
 16388 ;; *************** function _putch *****************
 16389 ;; Defined at:
 16390 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;  txData          1    wreg     unsigned char 
 16393 ;; Auto vars:     Size  Location     Type
 16394 ;;  txData          1   24[BANK1 ] unsigned char 
 16395 ;; Return value:  Size  Location     Type
 16396 ;;                  1    wreg      void 
 16397 ;; Registers used:
 16398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16399 ;; Tracked objects:
 16400 ;;		On entry : 0/0
 16401 ;;		On exit  : 0/0
 16402 ;;		Unchanged: 0/0
 16403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16405 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16407 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16408 ;;Total ram usage:        1 bytes
 16409 ;; Hardware stack levels used:    1
 16410 ;; Hardware stack levels required when called:   14
 16411 ;; This function calls:
 16412 ;;		_EUSART2_Write
 16413 ;; This function is called by:
 16414 ;;		_printf
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           	psect	text30
 16419  01832E                     __ptext30:
 16420                           	opt stack 0
 16421  01832E                     _putch:
 16422                           	opt stack 13
 16423                           
 16424                           ;incstack = 0
 16425                           ;putch@txData stored from wreg
 16426  01832E  0101               	movlb	1	; () banked
 16427  018330  6F18               	movwf	putch@txData& (0+255),b
 16428                           
 16429                           ;eusart2.c: 195: EUSART2_Write(txData);
 16430  018332  0101               	movlb	1	; () banked
 16431  018334  5118               	movf	putch@txData& (0+255),w,b
 16432  018336  ECF1  F0BD         	call	_EUSART2_Write
 16433  01833A  0012               	return		;funcret
 16434  01833C                     __end_of_putch:
 16435                           	opt stack 0
 16436                           tblptru	equ	0xFF8
 16437                           tblptrh	equ	0xFF7
 16438                           tblptrl	equ	0xFF6
 16439                           tablat	equ	0xFF5
 16440                           prodh	equ	0xFF4
 16441                           prodl	equ	0xFF3
 16442                           intcon	equ	0xFF2
 16443                           indf0	equ	0xFEF
 16444                           postinc0	equ	0xFEE
 16445                           fsr0h	equ	0xFEA
 16446                           fsr0l	equ	0xFE9
 16447                           wreg	equ	0xFE8
 16448                           indf1	equ	0xFE7
 16449                           postdec1	equ	0xFE5
 16450                           plusw1	equ	0xFE3
 16451                           fsr1h	equ	0xFE2
 16452                           fsr1l	equ	0xFE1
 16453                           indf2	equ	0xFDF
 16454                           postinc2	equ	0xFDE
 16455                           postdec2	equ	0xFDD
 16456                           plusw2	equ	0xFDB
 16457                           fsr2h	equ	0xFDA
 16458                           fsr2l	equ	0xFD9
 16459                           status	equ	0xFD8
 16460                           
 16461 ;; *************** function _EUSART2_Write *****************
 16462 ;; Defined at:
 16463 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  txData          1    wreg     unsigned char 
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;  txData          1   23[BANK1 ] unsigned char 
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      void 
 16470 ;; Registers used:
 16471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/0
 16474 ;;		On exit  : 0/0
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16478 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16480 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16481 ;;Total ram usage:        1 bytes
 16482 ;; Hardware stack levels used:    1
 16483 ;; Hardware stack levels required when called:   13
 16484 ;; This function calls:
 16485 ;;		Nothing
 16486 ;; This function is called by:
 16487 ;;		_putch
 16488 ;; This function uses a non-reentrant model
 16489 ;;
 16490                           
 16491                           	psect	text31
 16492  017BE2                     __ptext31:
 16493                           	opt stack 0
 16494  017BE2                     _EUSART2_Write:
 16495                           	opt stack 13
 16496                           
 16497                           ;incstack = 0
 16498                           ;EUSART2_Write@txData stored from wreg
 16499  017BE2  0101               	movlb	1	; () banked
 16500  017BE4  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 16501                           
 16502                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 16503  017BE6  D002               	goto	l388
 16504  017BE8                     l389:
 16505                           
 16506                           ; BSR set to: 1
 16507  017BE8  0004               	clrwdt		;# 
 16508                           
 16509                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 16510  017BEA  827E               	bsf	3966,1,c	;volatile
 16511  017BEC                     l388:
 16512  017BEC  0101               	movlb	1	; () banked
 16513  017BEE  51DB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 16514  017BF0  B4D8               	btfsc	status,2,c
 16515  017BF2  D7FA               	goto	l389
 16516                           
 16517                           ; BSR set to: 1
 16518                           ;eusart2.c: 167: }
 16519                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 16520  017BF4  927E               	bcf	3966,1,c	;volatile
 16521                           
 16522                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 16523  017BF6  010E               	movlb	14	; () banked
 16524  017BF8  BD2C               	btfsc	44,6,b	;volatile
 16525  017BFA  D003               	goto	l391
 16526                           
 16527                           ; BSR set to: 14
 16528                           ;eusart2.c: 172: {
 16529                           ;eusart2.c: 173: TX2REG = txData;
 16530  017BFC  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 16531                           
 16532                           ;eusart2.c: 174: }
 16533  017C00  D013               	goto	l392
 16534  017C02                     l391:
 16535                           
 16536                           ; BSR set to: 14
 16537                           ;eusart2.c: 175: else
 16538                           ;eusart2.c: 176: {
 16539                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 16540  017C02  9D2C               	bcf	44,6,b	;volatile
 16541                           
 16542                           ; BSR set to: 14
 16543                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 16544  017C04  0101               	movlb	1	; () banked
 16545  017C06  51DD               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 16546  017C08  0D01               	mullw	1
 16547  017C0A  0E00               	movlw	low _eusart2TxBuffer
 16548  017C0C  24F3               	addwf	prodl,w,c
 16549  017C0E  6ED9               	movwf	fsr2l,c
 16550  017C10  0E03               	movlw	high _eusart2TxBuffer
 16551  017C12  20F4               	addwfc	prodh,w,c
 16552  017C14  6EDA               	movwf	fsr2h,c
 16553  017C16  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 16554                           
 16555                           ; BSR set to: 1
 16556  017C1A  2BDD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 16557                           
 16558                           ; BSR set to: 1
 16559                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 16560  017C1C  0E7F               	movlw	127
 16561  017C1E  65DD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 16562  017C20  D002               	goto	l393
 16563                           
 16564                           ; BSR set to: 1
 16565                           ;eusart2.c: 180: {
 16566                           ;eusart2.c: 181: eusart2TxHead = 0;
 16567  017C22  0E00               	movlw	0
 16568  017C24  6FDD               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16569  017C26                     l393:
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;eusart2.c: 182: }
 16573                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 16574                           
 16575                           ; BSR set to: 1
 16576  017C26  07DB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 16577  017C28                     l392:
 16578                           
 16579                           ;eusart2.c: 184: }
 16580                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 16581                           
 16582                           ; BSR set to: 1
 16583  017C28  010E               	movlb	14	; () banked
 16584  017C2A  8D2C               	bsf	44,6,b	;volatile
 16585                           
 16586                           ; BSR set to: 14
 16587  017C2C  0012               	return		;funcret
 16588  017C2E                     __end_of_EUSART2_Write:
 16589                           	opt stack 0
 16590                           tblptru	equ	0xFF8
 16591                           tblptrh	equ	0xFF7
 16592                           tblptrl	equ	0xFF6
 16593                           tablat	equ	0xFF5
 16594                           prodh	equ	0xFF4
 16595                           prodl	equ	0xFF3
 16596                           intcon	equ	0xFF2
 16597                           indf0	equ	0xFEF
 16598                           postinc0	equ	0xFEE
 16599                           fsr0h	equ	0xFEA
 16600                           fsr0l	equ	0xFE9
 16601                           wreg	equ	0xFE8
 16602                           indf1	equ	0xFE7
 16603                           postdec1	equ	0xFE5
 16604                           plusw1	equ	0xFE3
 16605                           fsr1h	equ	0xFE2
 16606                           fsr1l	equ	0xFE1
 16607                           indf2	equ	0xFDF
 16608                           postinc2	equ	0xFDE
 16609                           postdec2	equ	0xFDD
 16610                           plusw2	equ	0xFDB
 16611                           fsr2h	equ	0xFDA
 16612                           fsr2l	equ	0xFD9
 16613                           status	equ	0xFD8
 16614                           
 16615 ;; *************** function _isdigit *****************
 16616 ;; Defined at:
 16617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;  c               1    wreg     unsigned char 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;  c               1   25[BANK1 ] unsigned char 
 16622 ;; Return value:  Size  Location     Type
 16623 ;;		None               void
 16624 ;; Registers used:
 16625 ;;		wreg, status,2, status,0
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16632 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16633 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16634 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16635 ;;Total ram usage:        3 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:   13
 16638 ;; This function calls:
 16639 ;;		Nothing
 16640 ;; This function is called by:
 16641 ;;		_printf
 16642 ;;		_atoi
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text32
 16647  0181C0                     __ptext32:
 16648                           	opt stack 0
 16649  0181C0                     _isdigit:
 16650                           	opt stack 14
 16651                           
 16652                           ; BSR set to: 14
 16653                           ;incstack = 0
 16654                           ;isdigit@c stored from wreg
 16655  0181C0  0101               	movlb	1	; () banked
 16656  0181C2  6F19               	movwf	isdigit@c& (0+255),b
 16657  0181C4  0E00               	movlw	0
 16658  0181C6  0101               	movlb	1	; () banked
 16659  0181C8  6F18               	movwf	_isdigit$3181& (0+255),b
 16660                           
 16661                           ; BSR set to: 1
 16662  0181CA  0E3A               	movlw	58
 16663  0181CC  6119               	cpfslt	isdigit@c& (0+255),b
 16664  0181CE  D005               	goto	l1890
 16665                           
 16666                           ; BSR set to: 1
 16667  0181D0  0E2F               	movlw	47
 16668  0181D2  6519               	cpfsgt	isdigit@c& (0+255),b
 16669  0181D4  D002               	goto	l1890
 16670                           
 16671                           ; BSR set to: 1
 16672  0181D6  0E01               	movlw	1
 16673  0181D8  6F18               	movwf	_isdigit$3181& (0+255),b
 16674  0181DA                     l1890:
 16675                           
 16676                           ; BSR set to: 1
 16677                           
 16678                           ; BSR set to: 1
 16679  0181DA  C118  F117         	movff	_isdigit$3181,??_isdigit
 16680  0181DE  3117               	rrcf	??_isdigit& (0+255),w,b
 16681  0181E0  0012               	return	
 16682  0181E2                     __end_of_isdigit:
 16683                           	opt stack 0
 16684                           tblptru	equ	0xFF8
 16685                           tblptrh	equ	0xFF7
 16686                           tblptrl	equ	0xFF6
 16687                           tablat	equ	0xFF5
 16688                           prodh	equ	0xFF4
 16689                           prodl	equ	0xFF3
 16690                           intcon	equ	0xFF2
 16691                           indf0	equ	0xFEF
 16692                           postinc0	equ	0xFEE
 16693                           fsr0h	equ	0xFEA
 16694                           fsr0l	equ	0xFE9
 16695                           wreg	equ	0xFE8
 16696                           indf1	equ	0xFE7
 16697                           postdec1	equ	0xFE5
 16698                           plusw1	equ	0xFE3
 16699                           fsr1h	equ	0xFE2
 16700                           fsr1l	equ	0xFE1
 16701                           indf2	equ	0xFDF
 16702                           postinc2	equ	0xFDE
 16703                           postdec2	equ	0xFDD
 16704                           plusw2	equ	0xFDB
 16705                           fsr2h	equ	0xFDA
 16706                           fsr2l	equ	0xFD9
 16707                           status	equ	0xFD8
 16708                           
 16709 ;; *************** function _fround *****************
 16710 ;; Defined at:
 16711 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16712 ;; Parameters:    Size  Location     Type
 16713 ;;  prec            1    wreg     unsigned char 
 16714 ;; Auto vars:     Size  Location     Type
 16715 ;;  prec            1  123[BANK1 ] unsigned char 
 16716 ;; Return value:  Size  Location     Type
 16717 ;;                  4  111[BANK1 ] unsigned char 
 16718 ;; Registers used:
 16719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16720 ;; Tracked objects:
 16721 ;;		On entry : 0/0
 16722 ;;		On exit  : 0/0
 16723 ;;		Unchanged: 0/0
 16724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16725 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16726 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16728 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16729 ;;Total ram usage:       13 bytes
 16730 ;; Hardware stack levels used:    1
 16731 ;; Hardware stack levels required when called:   14
 16732 ;; This function calls:
 16733 ;;		___awdiv
 16734 ;;		___awmod
 16735 ;;		___flmul
 16736 ;; This function is called by:
 16737 ;;		_printf
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text33
 16742  015034                     __ptext33:
 16743                           	opt stack 0
 16744  015034                     _fround:
 16745                           	opt stack 13
 16746                           
 16747                           ; BSR set to: 1
 16748                           ;incstack = 0
 16749                           ;fround@prec stored from wreg
 16750  015034  0101               	movlb	1	; () banked
 16751  015036  6F7B               	movwf	fround@prec& (0+255),b
 16752                           
 16753                           ;doprnt.c: 413: if(prec>=110)
 16754  015038  0E6D               	movlw	109
 16755  01503A  0101               	movlb	1	; () banked
 16756  01503C  657B               	cpfsgt	fround@prec& (0+255),b
 16757  01503E  D0BA               	goto	l1346
 16758                           
 16759                           ; BSR set to: 1
 16760                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16761  015040  0E00               	movlw	0
 16762  015042  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16763  015044  0E0A               	movlw	10
 16764  015046  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16765  015048  0E00               	movlw	0
 16766  01504A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16767  01504C  0E64               	movlw	100
 16768  01504E  6F19               	movwf	___awmod@divisor& (0+255),b
 16769  015050  C17B  F117         	movff	fround@prec,___awmod@dividend
 16770  015054  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16771  015056  EC27  F0BB         	call	___awmod	;wreg free
 16772  01505A  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16773  01505E  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16774  015062  ECA4  F0B9         	call	___awdiv	;wreg free
 16775  015066  0101               	movlb	1	; () banked
 16776  015068  90D8               	bcf	status,0,c
 16777  01506A  371D               	rlcf	?___awdiv& (0+255),f,b
 16778  01506C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16779  01506E  90D8               	bcf	status,0,c
 16780  015070  371D               	rlcf	?___awdiv& (0+255),f,b
 16781  015072  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16782  015074  0E24               	movlw	36
 16783  015076  271D               	addwf	?___awdiv& (0+255),f,b
 16784  015078  0E00               	movlw	0
 16785  01507A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16786  01507C  0E4F               	movlw	low __npowers_
 16787  01507E  251D               	addwf	?___awdiv& (0+255),w,b
 16788  015080  6EF6               	movwf	tblptrl,c
 16789  015082  0EEA               	movlw	high __npowers_
 16790  015084  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16791  015086  6EF7               	movwf	tblptrh,c
 16792  015088                     	if	1	;There are 3 active tblptr bytes
 16793  015088  6AF8               	clrf	tblptru,c
 16794  01508A  0E00               	movlw	low (__mediumconst shr (0+16))
 16795  01508C  22F8               	addwfc	tblptru,f,c
 16796  01508E                     	endif
 16797  01508E  0009               	tblrd		*+
 16798  015090  CFF5 F15A          	movff	tablat,___flmul@a
 16799  015094  0009               	tblrd		*+
 16800  015096  CFF5 F15B          	movff	tablat,___flmul@a+1
 16801  01509A  0009               	tblrd		*+
 16802  01509C  CFF5 F15C          	movff	tablat,___flmul@a+2
 16803  0150A0  000A               	tblrd		*-
 16804  0150A2  CFF5 F15D          	movff	tablat,___flmul@a+3
 16805  0150A6  0E00               	movlw	0
 16806  0150A8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16807  0150AA  0E64               	movlw	100
 16808  0150AC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16809  0150AE  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 16810  0150B2  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16811  0150B4  ECA4  F0B9         	call	___awdiv	;wreg free
 16812  0150B8  0101               	movlb	1	; () banked
 16813  0150BA  90D8               	bcf	status,0,c
 16814  0150BC  371D               	rlcf	?___awdiv& (0+255),f,b
 16815  0150BE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16816  0150C0  90D8               	bcf	status,0,c
 16817  0150C2  371D               	rlcf	?___awdiv& (0+255),f,b
 16818  0150C4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16819  0150C6  0E48               	movlw	72
 16820  0150C8  271D               	addwf	?___awdiv& (0+255),f,b
 16821  0150CA  0E00               	movlw	0
 16822  0150CC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16823  0150CE  0E4F               	movlw	low __npowers_
 16824  0150D0  251D               	addwf	?___awdiv& (0+255),w,b
 16825  0150D2  6EF6               	movwf	tblptrl,c
 16826  0150D4  0EEA               	movlw	high __npowers_
 16827  0150D6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16828  0150D8  6EF7               	movwf	tblptrh,c
 16829  0150DA                     	if	1	;There are 3 active tblptr bytes
 16830  0150DA  6AF8               	clrf	tblptru,c
 16831  0150DC  0E00               	movlw	low (__mediumconst shr (0+16))
 16832  0150DE  22F8               	addwfc	tblptru,f,c
 16833  0150E0                     	endif
 16834  0150E0  0009               	tblrd		*+
 16835  0150E2  CFF5 F156          	movff	tablat,___flmul@b
 16836  0150E6  0009               	tblrd		*+
 16837  0150E8  CFF5 F157          	movff	tablat,___flmul@b+1
 16838  0150EC  0009               	tblrd		*+
 16839  0150EE  CFF5 F158          	movff	tablat,___flmul@b+2
 16840  0150F2  000A               	tblrd		*-
 16841  0150F4  CFF5 F159          	movff	tablat,___flmul@b+3
 16842  0150F8  EC28  F09D         	call	___flmul	;wreg free
 16843  0150FC  C156  F177         	movff	?___flmul,_fround$3895
 16844  015100  C157  F178         	movff	?___flmul+1,_fround$3895+1
 16845  015104  C158  F179         	movff	?___flmul+2,_fround$3895+2
 16846  015108  C159  F17A         	movff	?___flmul+3,_fround$3895+3
 16847                           
 16848                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16849  01510C  0E00               	movlw	0
 16850  01510E  0101               	movlb	1	; () banked
 16851  015110  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16852  015112  0E0A               	movlw	10
 16853  015114  6F19               	movwf	___awmod@divisor& (0+255),b
 16854  015116  C17B  F117         	movff	fround@prec,___awmod@dividend
 16855  01511A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16856  01511C  EC27  F0BB         	call	___awmod	;wreg free
 16857  015120  0101               	movlb	1	; () banked
 16858  015122  90D8               	bcf	status,0,c
 16859  015124  3717               	rlcf	?___awmod& (0+255),f,b
 16860  015126  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16861  015128  90D8               	bcf	status,0,c
 16862  01512A  3717               	rlcf	?___awmod& (0+255),f,b
 16863  01512C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16864  01512E  0E4F               	movlw	low __npowers_
 16865  015130  2517               	addwf	?___awmod& (0+255),w,b
 16866  015132  6EF6               	movwf	tblptrl,c
 16867  015134  0EEA               	movlw	high __npowers_
 16868  015136  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16869  015138  6EF7               	movwf	tblptrh,c
 16870  01513A                     	if	1	;There are 3 active tblptr bytes
 16871  01513A  6AF8               	clrf	tblptru,c
 16872  01513C  0E00               	movlw	low (__mediumconst shr (0+16))
 16873  01513E  22F8               	addwfc	tblptru,f,c
 16874  015140                     	endif
 16875  015140  0009               	tblrd		*+
 16876  015142  CFF5 F15A          	movff	tablat,___flmul@a
 16877  015146  0009               	tblrd		*+
 16878  015148  CFF5 F15B          	movff	tablat,___flmul@a+1
 16879  01514C  0009               	tblrd		*+
 16880  01514E  CFF5 F15C          	movff	tablat,___flmul@a+2
 16881  015152  000A               	tblrd		*-
 16882  015154  CFF5 F15D          	movff	tablat,___flmul@a+3
 16883  015158  C177  F156         	movff	_fround$3895,___flmul@b
 16884  01515C  C178  F157         	movff	_fround$3895+1,___flmul@b+1
 16885  015160  C179  F158         	movff	_fround$3895+2,___flmul@b+2
 16886  015164  C17A  F159         	movff	_fround$3895+3,___flmul@b+3
 16887  015168  EC28  F09D         	call	___flmul	;wreg free
 16888  01516C  C156  F173         	movff	?___flmul,_fround$3896
 16889  015170  C157  F174         	movff	?___flmul+1,_fround$3896+1
 16890  015174  C158  F175         	movff	?___flmul+2,_fround$3896+2
 16891  015178  C159  F176         	movff	?___flmul+3,_fround$3896+3
 16892                           
 16893                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16894  01517C  C173  F156         	movff	_fround$3896,___flmul@b
 16895  015180  C174  F157         	movff	_fround$3896+1,___flmul@b+1
 16896  015184  C175  F158         	movff	_fround$3896+2,___flmul@b+2
 16897  015188  C176  F159         	movff	_fround$3896+3,___flmul@b+3
 16898  01518C  0E00               	movlw	0
 16899  01518E  0101               	movlb	1	; () banked
 16900  015190  6F5A               	movwf	___flmul@a& (0+255),b
 16901  015192  0E00               	movlw	0
 16902  015194  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 16903  015196  0E00               	movlw	0
 16904  015198  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 16905  01519A  0E3F               	movlw	63
 16906  01519C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 16907  01519E  EC28  F09D         	call	___flmul	;wreg free
 16908  0151A2  C156  F16F         	movff	?___flmul,?_fround
 16909  0151A6  C157  F170         	movff	?___flmul+1,?_fround+1
 16910  0151AA  C158  F171         	movff	?___flmul+2,?_fround+2
 16911  0151AE  C159  F172         	movff	?___flmul+3,?_fround+3
 16912  0151B2  0012               	return	
 16913  0151B4                     l1346:
 16914                           
 16915                           ;doprnt.c: 415: else if(prec > 10)
 16916  0151B4  0E0A               	movlw	10
 16917  0151B6  0101               	movlb	1	; () banked
 16918  0151B8  657B               	cpfsgt	fround@prec& (0+255),b
 16919  0151BA  D074               	goto	l1349
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16923  0151BC  0E00               	movlw	0
 16924  0151BE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16925  0151C0  0E0A               	movlw	10
 16926  0151C2  6F19               	movwf	___awmod@divisor& (0+255),b
 16927  0151C4  C17B  F117         	movff	fround@prec,___awmod@dividend
 16928  0151C8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16929  0151CA  EC27  F0BB         	call	___awmod	;wreg free
 16930  0151CE  0101               	movlb	1	; () banked
 16931  0151D0  90D8               	bcf	status,0,c
 16932  0151D2  3717               	rlcf	?___awmod& (0+255),f,b
 16933  0151D4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16934  0151D6  90D8               	bcf	status,0,c
 16935  0151D8  3717               	rlcf	?___awmod& (0+255),f,b
 16936  0151DA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 16937  0151DC  0E4F               	movlw	low __npowers_
 16938  0151DE  2517               	addwf	?___awmod& (0+255),w,b
 16939  0151E0  6EF6               	movwf	tblptrl,c
 16940  0151E2  0EEA               	movlw	high __npowers_
 16941  0151E4  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 16942  0151E6  6EF7               	movwf	tblptrh,c
 16943  0151E8                     	if	1	;There are 3 active tblptr bytes
 16944  0151E8  6AF8               	clrf	tblptru,c
 16945  0151EA  0E00               	movlw	low (__mediumconst shr (0+16))
 16946  0151EC  22F8               	addwfc	tblptru,f,c
 16947  0151EE                     	endif
 16948  0151EE  0009               	tblrd		*+
 16949  0151F0  CFF5 F15A          	movff	tablat,___flmul@a
 16950  0151F4  0009               	tblrd		*+
 16951  0151F6  CFF5 F15B          	movff	tablat,___flmul@a+1
 16952  0151FA  0009               	tblrd		*+
 16953  0151FC  CFF5 F15C          	movff	tablat,___flmul@a+2
 16954  015200  000A               	tblrd		*-
 16955  015202  CFF5 F15D          	movff	tablat,___flmul@a+3
 16956  015206  0E00               	movlw	0
 16957  015208  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16958  01520A  0E0A               	movlw	10
 16959  01520C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16960  01520E  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 16961  015212  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16962  015214  ECA4  F0B9         	call	___awdiv	;wreg free
 16963  015218  0101               	movlb	1	; () banked
 16964  01521A  90D8               	bcf	status,0,c
 16965  01521C  371D               	rlcf	?___awdiv& (0+255),f,b
 16966  01521E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16967  015220  90D8               	bcf	status,0,c
 16968  015222  371D               	rlcf	?___awdiv& (0+255),f,b
 16969  015224  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16970  015226  0E24               	movlw	36
 16971  015228  271D               	addwf	?___awdiv& (0+255),f,b
 16972  01522A  0E00               	movlw	0
 16973  01522C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16974  01522E  0E4F               	movlw	low __npowers_
 16975  015230  251D               	addwf	?___awdiv& (0+255),w,b
 16976  015232  6EF6               	movwf	tblptrl,c
 16977  015234  0EEA               	movlw	high __npowers_
 16978  015236  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16979  015238  6EF7               	movwf	tblptrh,c
 16980  01523A                     	if	1	;There are 3 active tblptr bytes
 16981  01523A  6AF8               	clrf	tblptru,c
 16982  01523C  0E00               	movlw	low (__mediumconst shr (0+16))
 16983  01523E  22F8               	addwfc	tblptru,f,c
 16984  015240                     	endif
 16985  015240  0009               	tblrd		*+
 16986  015242  CFF5 F156          	movff	tablat,___flmul@b
 16987  015246  0009               	tblrd		*+
 16988  015248  CFF5 F157          	movff	tablat,___flmul@b+1
 16989  01524C  0009               	tblrd		*+
 16990  01524E  CFF5 F158          	movff	tablat,___flmul@b+2
 16991  015252  000A               	tblrd		*-
 16992  015254  CFF5 F159          	movff	tablat,___flmul@b+3
 16993  015258  EC28  F09D         	call	___flmul	;wreg free
 16994  01525C  C156  F177         	movff	?___flmul,_fround$3895
 16995  015260  C157  F178         	movff	?___flmul+1,_fround$3895+1
 16996  015264  C158  F179         	movff	?___flmul+2,_fround$3895+2
 16997  015268  C159  F17A         	movff	?___flmul+3,_fround$3895+3
 16998                           
 16999                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17000  01526C  C177  F156         	movff	_fround$3895,___flmul@b
 17001  015270  C178  F157         	movff	_fround$3895+1,___flmul@b+1
 17002  015274  C179  F158         	movff	_fround$3895+2,___flmul@b+2
 17003  015278  C17A  F159         	movff	_fround$3895+3,___flmul@b+3
 17004  01527C  0E00               	movlw	0
 17005  01527E  0101               	movlb	1	; () banked
 17006  015280  6F5A               	movwf	___flmul@a& (0+255),b
 17007  015282  0E00               	movlw	0
 17008  015284  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17009  015286  0E00               	movlw	0
 17010  015288  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17011  01528A  0E3F               	movlw	63
 17012  01528C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17013  01528E  EC28  F09D         	call	___flmul	;wreg free
 17014  015292  C156  F16F         	movff	?___flmul,?_fround
 17015  015296  C157  F170         	movff	?___flmul+1,?_fround+1
 17016  01529A  C158  F171         	movff	?___flmul+2,?_fround+2
 17017  01529E  C159  F172         	movff	?___flmul+3,?_fround+3
 17018  0152A2  0012               	return	
 17019  0152A4                     l1349:
 17020                           
 17021                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17022  0152A4  0101               	movlb	1	; () banked
 17023  0152A6  517B               	movf	fround@prec& (0+255),w,b
 17024  0152A8  0D04               	mullw	4
 17025  0152AA  0E4F               	movlw	low __npowers_
 17026  0152AC  24F3               	addwf	prodl,w,c
 17027  0152AE  6EF6               	movwf	tblptrl,c
 17028  0152B0  0EEA               	movlw	high __npowers_
 17029  0152B2  20F4               	addwfc	prodh,w,c
 17030  0152B4  6EF7               	movwf	tblptrh,c
 17031  0152B6                     	if	1	;There are 3 active tblptr bytes
 17032  0152B6  6AF8               	clrf	tblptru,c
 17033  0152B8  0E00               	movlw	low (__mediumconst shr (0+16))
 17034  0152BA  22F8               	addwfc	tblptru,f,c
 17035  0152BC                     	endif
 17036  0152BC  0009               	tblrd		*+
 17037  0152BE  CFF5 F156          	movff	tablat,___flmul@b
 17038  0152C2  0009               	tblrd		*+
 17039  0152C4  CFF5 F157          	movff	tablat,___flmul@b+1
 17040  0152C8  0009               	tblrd		*+
 17041  0152CA  CFF5 F158          	movff	tablat,___flmul@b+2
 17042  0152CE  000A               	tblrd		*-
 17043  0152D0  CFF5 F159          	movff	tablat,___flmul@b+3
 17044  0152D4  0E00               	movlw	0
 17045  0152D6  6F5A               	movwf	___flmul@a& (0+255),b
 17046  0152D8  0E00               	movlw	0
 17047  0152DA  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17048  0152DC  0E00               	movlw	0
 17049  0152DE  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17050  0152E0  0E3F               	movlw	63
 17051  0152E2  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17052  0152E4  EC28  F09D         	call	___flmul	;wreg free
 17053  0152E8  C156  F16F         	movff	?___flmul,?_fround
 17054  0152EC  C157  F170         	movff	?___flmul+1,?_fround+1
 17055  0152F0  C158  F171         	movff	?___flmul+2,?_fround+2
 17056  0152F4  C159  F172         	movff	?___flmul+3,?_fround+3
 17057  0152F8  0012               	return	
 17058  0152FA                     __end_of_fround:
 17059                           	opt stack 0
 17060                           tblptru	equ	0xFF8
 17061                           tblptrh	equ	0xFF7
 17062                           tblptrl	equ	0xFF6
 17063                           tablat	equ	0xFF5
 17064                           prodh	equ	0xFF4
 17065                           prodl	equ	0xFF3
 17066                           intcon	equ	0xFF2
 17067                           indf0	equ	0xFEF
 17068                           postinc0	equ	0xFEE
 17069                           fsr0h	equ	0xFEA
 17070                           fsr0l	equ	0xFE9
 17071                           wreg	equ	0xFE8
 17072                           indf1	equ	0xFE7
 17073                           postdec1	equ	0xFE5
 17074                           plusw1	equ	0xFE3
 17075                           fsr1h	equ	0xFE2
 17076                           fsr1l	equ	0xFE1
 17077                           indf2	equ	0xFDF
 17078                           postinc2	equ	0xFDE
 17079                           postdec2	equ	0xFDD
 17080                           plusw2	equ	0xFDB
 17081                           fsr2h	equ	0xFDA
 17082                           fsr2l	equ	0xFD9
 17083                           status	equ	0xFD8
 17084                           
 17085 ;; *************** function ___flmul *****************
 17086 ;; Defined at:
 17087 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 17088 ;; Parameters:    Size  Location     Type
 17089 ;;  b               4   86[BANK1 ] unsigned char 
 17090 ;;  a               4   90[BANK1 ] unsigned char 
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;  prod            4  105[BANK1 ] struct .
 17093 ;;  grs             4  100[BANK1 ] unsigned long 
 17094 ;;  temp            2  109[BANK1 ] struct .
 17095 ;;  bexp            1  104[BANK1 ] unsigned char 
 17096 ;;  aexp            1   99[BANK1 ] unsigned char 
 17097 ;;  sign            1   98[BANK1 ] unsigned char 
 17098 ;; Return value:  Size  Location     Type
 17099 ;;                  4   86[BANK1 ] unsigned char 
 17100 ;; Registers used:
 17101 ;;		wreg, status,2, status,0, prodl, prodh
 17102 ;; Tracked objects:
 17103 ;;		On entry : 0/0
 17104 ;;		On exit  : 0/0
 17105 ;;		Unchanged: 0/0
 17106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17107 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17108 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17109 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17110 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17111 ;;Total ram usage:       25 bytes
 17112 ;; Hardware stack levels used:    1
 17113 ;; Hardware stack levels required when called:   13
 17114 ;; This function calls:
 17115 ;;		Nothing
 17116 ;; This function is called by:
 17117 ;;		_ringBufferLUT
 17118 ;;		_fround
 17119 ;;		_scale
 17120 ;;		_printf
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text34
 17125  013A50                     __ptext34:
 17126                           	opt stack 0
 17127  013A50                     ___flmul:
 17128                           	opt stack 13
 17129                           
 17130                           ;incstack = 0
 17131  013A50  0101               	movlb	1	; () banked
 17132  013A52  5159               	movf	(___flmul@b+3)& (0+255),w,b
 17133  013A54  0B80               	andlw	128
 17134  013A56  6F62               	movwf	___flmul@sign& (0+255),b
 17135  013A58  5159               	movf	(___flmul@b+3)& (0+255),w,b
 17136  013A5A  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 17137  013A5C  6F68               	movwf	___flmul@bexp& (0+255),b
 17138                           
 17139                           ; BSR set to: 1
 17140  013A5E  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 17141                           
 17142                           ; BSR set to: 1
 17143  013A60  8168               	bsf	___flmul@bexp& (0+255),0,b
 17144                           
 17145                           ; BSR set to: 1
 17146                           
 17147                           ; BSR set to: 1
 17148  013A62  5168               	movf	___flmul@bexp& (0+255),w,b
 17149  013A64  B4D8               	btfsc	status,2,c
 17150  013A66  D00D               	goto	l2104
 17151                           
 17152                           ; BSR set to: 1
 17153  013A68  2968               	incf	___flmul@bexp& (0+255),w,b
 17154  013A6A  A4D8               	btfss	status,2,c
 17155  013A6C  D008               	goto	l2105
 17156                           
 17157                           ; BSR set to: 1
 17158  013A6E  0E00               	movlw	0
 17159  013A70  6F56               	movwf	___flmul@b& (0+255),b
 17160  013A72  0E00               	movlw	0
 17161  013A74  6F57               	movwf	(___flmul@b+1)& (0+255),b
 17162  013A76  0E00               	movlw	0
 17163  013A78  6F58               	movwf	(___flmul@b+2)& (0+255),b
 17164  013A7A  0E00               	movlw	0
 17165  013A7C  6F59               	movwf	(___flmul@b+3)& (0+255),b
 17166  013A7E                     l2105:
 17167                           
 17168                           ; BSR set to: 1
 17169                           
 17170                           ; BSR set to: 1
 17171  013A7E  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 17172  013A80  D008               	goto	l2106
 17173  013A82                     l2104:
 17174                           
 17175                           ; BSR set to: 1
 17176                           
 17177                           ; BSR set to: 1
 17178  013A82  0E00               	movlw	0
 17179  013A84  6F56               	movwf	___flmul@b& (0+255),b
 17180  013A86  0E00               	movlw	0
 17181  013A88  6F57               	movwf	(___flmul@b+1)& (0+255),b
 17182  013A8A  0E00               	movlw	0
 17183  013A8C  6F58               	movwf	(___flmul@b+2)& (0+255),b
 17184  013A8E  0E00               	movlw	0
 17185  013A90  6F59               	movwf	(___flmul@b+3)& (0+255),b
 17186  013A92                     l2106:
 17187                           
 17188                           ; BSR set to: 1
 17189                           
 17190                           ; BSR set to: 1
 17191  013A92  515D               	movf	(___flmul@a+3)& (0+255),w,b
 17192  013A94  0B80               	andlw	128
 17193  013A96  1B62               	xorwf	___flmul@sign& (0+255),f,b
 17194                           
 17195                           ; BSR set to: 1
 17196  013A98  515D               	movf	(___flmul@a+3)& (0+255),w,b
 17197  013A9A  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 17198  013A9C  6F63               	movwf	___flmul@aexp& (0+255),b
 17199                           
 17200                           ; BSR set to: 1
 17201  013A9E  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 17202                           
 17203                           ; BSR set to: 1
 17204  013AA0  8163               	bsf	___flmul@aexp& (0+255),0,b
 17205                           
 17206                           ; BSR set to: 1
 17207                           
 17208                           ; BSR set to: 1
 17209  013AA2  5163               	movf	___flmul@aexp& (0+255),w,b
 17210  013AA4  B4D8               	btfsc	status,2,c
 17211  013AA6  D00D               	goto	l2108
 17212                           
 17213                           ; BSR set to: 1
 17214  013AA8  2963               	incf	___flmul@aexp& (0+255),w,b
 17215  013AAA  A4D8               	btfss	status,2,c
 17216  013AAC  D008               	goto	l2109
 17217                           
 17218                           ; BSR set to: 1
 17219  013AAE  0E00               	movlw	0
 17220  013AB0  6F5A               	movwf	___flmul@a& (0+255),b
 17221  013AB2  0E00               	movlw	0
 17222  013AB4  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17223  013AB6  0E00               	movlw	0
 17224  013AB8  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17225  013ABA  0E00               	movlw	0
 17226  013ABC  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17227  013ABE                     l2109:
 17228                           
 17229                           ; BSR set to: 1
 17230                           
 17231                           ; BSR set to: 1
 17232  013ABE  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 17233  013AC0  D008               	goto	l2110
 17234  013AC2                     l2108:
 17235                           
 17236                           ; BSR set to: 1
 17237                           
 17238                           ; BSR set to: 1
 17239  013AC2  0E00               	movlw	0
 17240  013AC4  6F5A               	movwf	___flmul@a& (0+255),b
 17241  013AC6  0E00               	movlw	0
 17242  013AC8  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17243  013ACA  0E00               	movlw	0
 17244  013ACC  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17245  013ACE  0E00               	movlw	0
 17246  013AD0  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17247  013AD2                     l2110:
 17248                           
 17249                           ; BSR set to: 1
 17250  013AD2  5163               	movf	___flmul@aexp& (0+255),w,b
 17251  013AD4  B4D8               	btfsc	status,2,c
 17252  013AD6  D003               	goto	u12840
 17253                           
 17254                           ; BSR set to: 1
 17255  013AD8  5168               	movf	___flmul@bexp& (0+255),w,b
 17256  013ADA  A4D8               	btfss	status,2,c
 17257  013ADC  D009               	goto	l2111
 17258  013ADE                     u12840:
 17259                           
 17260                           ; BSR set to: 1
 17261                           
 17262                           ; BSR set to: 1
 17263  013ADE  0E00               	movlw	0
 17264  013AE0  6F56               	movwf	?___flmul& (0+255),b
 17265  013AE2  0E00               	movlw	0
 17266  013AE4  6F57               	movwf	(?___flmul+1)& (0+255),b
 17267  013AE6  0E00               	movlw	0
 17268  013AE8  6F58               	movwf	(?___flmul+2)& (0+255),b
 17269  013AEA  0E00               	movlw	0
 17270  013AEC  6F59               	movwf	(?___flmul+3)& (0+255),b
 17271                           
 17272                           ; BSR set to: 1
 17273  013AEE  0012               	return	
 17274  013AF0                     l2111:
 17275                           
 17276                           ; BSR set to: 1
 17277                           
 17278                           ; BSR set to: 1
 17279  013AF0  515C               	movf	(___flmul@a+2)& (0+255),w,b
 17280  013AF2  0356               	mulwf	___flmul@b& (0+255),b
 17281  013AF4  CFF3 F16D          	movff	prodl,___flmul@temp
 17282  013AF8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17283                           
 17284                           ; BSR set to: 1
 17285  013AFC  516D               	movf	___flmul@temp& (0+255),w,b
 17286  013AFE  6F64               	movwf	___flmul@grs& (0+255),b
 17287  013B00  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 17288  013B02  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 17289  013B04  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 17290                           
 17291                           ; BSR set to: 1
 17292  013B06  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17293  013B08  6F69               	movwf	___flmul@prod& (0+255),b
 17294  013B0A  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 17295  013B0C  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 17296  013B0E  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 17297  013B10  515B               	movf	(___flmul@a+1)& (0+255),w,b
 17298  013B12  0357               	mulwf	(___flmul@b+1)& (0+255),b
 17299  013B14  CFF3 F16D          	movff	prodl,___flmul@temp
 17300  013B18  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17301                           
 17302                           ; BSR set to: 1
 17303  013B1C  516D               	movf	___flmul@temp& (0+255),w,b
 17304  013B1E  2764               	addwf	___flmul@grs& (0+255),f,b
 17305  013B20  0E00               	movlw	0
 17306  013B22  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17307  013B24  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17308  013B26  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17309                           
 17310                           ; BSR set to: 1
 17311  013B28  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17312  013B2A  2769               	addwf	___flmul@prod& (0+255),f,b
 17313  013B2C  0E00               	movlw	0
 17314  013B2E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17315  013B30  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17316  013B32  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17317  013B34  515A               	movf	___flmul@a& (0+255),w,b
 17318  013B36  0358               	mulwf	(___flmul@b+2)& (0+255),b
 17319  013B38  CFF3 F16D          	movff	prodl,___flmul@temp
 17320  013B3C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17321                           
 17322                           ; BSR set to: 1
 17323  013B40  516D               	movf	___flmul@temp& (0+255),w,b
 17324  013B42  2764               	addwf	___flmul@grs& (0+255),f,b
 17325  013B44  0E00               	movlw	0
 17326  013B46  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17327  013B48  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17328  013B4A  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17329                           
 17330                           ; BSR set to: 1
 17331  013B4C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17332  013B4E  2769               	addwf	___flmul@prod& (0+255),f,b
 17333  013B50  0E00               	movlw	0
 17334  013B52  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17335  013B54  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17336  013B56  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17337                           
 17338                           ; BSR set to: 1
 17339  013B58  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 17340  013B5C  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 17341  013B60  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 17342  013B64  6B64               	clrf	___flmul@grs& (0+255),b
 17343                           
 17344                           ; BSR set to: 1
 17345  013B66  515A               	movf	___flmul@a& (0+255),w,b
 17346  013B68  0357               	mulwf	(___flmul@b+1)& (0+255),b
 17347  013B6A  CFF3 F16D          	movff	prodl,___flmul@temp
 17348  013B6E  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17349                           
 17350                           ; BSR set to: 1
 17351  013B72  516D               	movf	___flmul@temp& (0+255),w,b
 17352  013B74  2764               	addwf	___flmul@grs& (0+255),f,b
 17353  013B76  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17354  013B78  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17355  013B7A  0E00               	movlw	0
 17356  013B7C  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17357  013B7E  0E00               	movlw	0
 17358  013B80  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17359                           
 17360                           ; BSR set to: 1
 17361  013B82  515B               	movf	(___flmul@a+1)& (0+255),w,b
 17362  013B84  0356               	mulwf	___flmul@b& (0+255),b
 17363  013B86  CFF3 F16D          	movff	prodl,___flmul@temp
 17364  013B8A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17365                           
 17366                           ; BSR set to: 1
 17367  013B8E  516D               	movf	___flmul@temp& (0+255),w,b
 17368  013B90  2764               	addwf	___flmul@grs& (0+255),f,b
 17369  013B92  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17370  013B94  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17371  013B96  0E00               	movlw	0
 17372  013B98  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17373  013B9A  0E00               	movlw	0
 17374  013B9C  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17375                           
 17376                           ; BSR set to: 1
 17377  013B9E  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 17378  013BA2  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 17379  013BA6  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 17380  013BAA  6B64               	clrf	___flmul@grs& (0+255),b
 17381  013BAC  515A               	movf	___flmul@a& (0+255),w,b
 17382  013BAE  0356               	mulwf	___flmul@b& (0+255),b
 17383  013BB0  CFF3 F16D          	movff	prodl,___flmul@temp
 17384  013BB4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17385                           
 17386                           ; BSR set to: 1
 17387  013BB8  516D               	movf	___flmul@temp& (0+255),w,b
 17388  013BBA  2764               	addwf	___flmul@grs& (0+255),f,b
 17389  013BBC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17390  013BBE  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17391  013BC0  0E00               	movlw	0
 17392  013BC2  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17393  013BC4  0E00               	movlw	0
 17394  013BC6  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17395                           
 17396                           ; BSR set to: 1
 17397  013BC8  515C               	movf	(___flmul@a+2)& (0+255),w,b
 17398  013BCA  0357               	mulwf	(___flmul@b+1)& (0+255),b
 17399  013BCC  CFF3 F16D          	movff	prodl,___flmul@temp
 17400  013BD0  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17401  013BD4  516D               	movf	___flmul@temp& (0+255),w,b
 17402  013BD6  2769               	addwf	___flmul@prod& (0+255),f,b
 17403  013BD8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17404  013BDA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17405  013BDC  0E00               	movlw	0
 17406  013BDE  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17407  013BE0  0E00               	movlw	0
 17408  013BE2  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17409                           
 17410                           ; BSR set to: 1
 17411  013BE4  515B               	movf	(___flmul@a+1)& (0+255),w,b
 17412  013BE6  0358               	mulwf	(___flmul@b+2)& (0+255),b
 17413  013BE8  CFF3 F16D          	movff	prodl,___flmul@temp
 17414  013BEC  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17415                           
 17416                           ; BSR set to: 1
 17417  013BF0  516D               	movf	___flmul@temp& (0+255),w,b
 17418  013BF2  2769               	addwf	___flmul@prod& (0+255),f,b
 17419  013BF4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17420  013BF6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17421  013BF8  0E00               	movlw	0
 17422  013BFA  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17423  013BFC  0E00               	movlw	0
 17424  013BFE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17425  013C00  515C               	movf	(___flmul@a+2)& (0+255),w,b
 17426  013C02  0358               	mulwf	(___flmul@b+2)& (0+255),b
 17427  013C04  CFF3 F16D          	movff	prodl,___flmul@temp
 17428  013C08  CFF4 F16E          	movff	prodh,___flmul@temp+1
 17429                           
 17430                           ; BSR set to: 1
 17431  013C0C  516D               	movf	___flmul@temp& (0+255),w,b
 17432  013C0E  6F5E               	movwf	??___flmul& (0+255),b
 17433  013C10  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17434  013C12  6F5F               	movwf	(??___flmul+1)& (0+255),b
 17435  013C14  6B60               	clrf	(??___flmul+2)& (0+255),b
 17436  013C16  6B61               	clrf	(??___flmul+3)& (0+255),b
 17437  013C18  C160  F161         	movff	??___flmul+2,??___flmul+3
 17438  013C1C  C15F  F160         	movff	??___flmul+1,??___flmul+2
 17439  013C20  C15E  F15F         	movff	??___flmul,??___flmul+1
 17440  013C24  6B5E               	clrf	??___flmul& (0+255),b
 17441  013C26  515E               	movf	??___flmul& (0+255),w,b
 17442  013C28  2769               	addwf	___flmul@prod& (0+255),f,b
 17443  013C2A  515F               	movf	(??___flmul+1)& (0+255),w,b
 17444  013C2C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17445  013C2E  5160               	movf	(??___flmul+2)& (0+255),w,b
 17446  013C30  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17447  013C32  5161               	movf	(??___flmul+3)& (0+255),w,b
 17448  013C34  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17449                           
 17450                           ; BSR set to: 1
 17451  013C36  C164  F15E         	movff	___flmul@grs,??___flmul
 17452  013C3A  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 17453  013C3E  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 17454  013C42  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 17455  013C46  0E19               	movlw	25
 17456  013C48  D005               	goto	u12850
 17457  013C4A                     u12855:
 17458  013C4A  90D8               	bcf	status,0,c
 17459  013C4C  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 17460  013C4E  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 17461  013C50  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 17462  013C52  335E               	rrcf	??___flmul& (0+255),f,b
 17463  013C54                     u12850:
 17464  013C54  2EE8               	decfsz	wreg,f,c
 17465  013C56  D7F9               	goto	u12855
 17466  013C58  515E               	movf	??___flmul& (0+255),w,b
 17467  013C5A  2769               	addwf	___flmul@prod& (0+255),f,b
 17468  013C5C  515F               	movf	(??___flmul+1)& (0+255),w,b
 17469  013C5E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17470  013C60  5160               	movf	(??___flmul+2)& (0+255),w,b
 17471  013C62  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17472  013C64  5161               	movf	(??___flmul+3)& (0+255),w,b
 17473  013C66  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17474                           
 17475                           ; BSR set to: 1
 17476  013C68  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 17477  013C6C  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 17478  013C70  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 17479  013C74  6B64               	clrf	___flmul@grs& (0+255),b
 17480                           
 17481                           ; BSR set to: 1
 17482  013C76  5163               	movf	___flmul@aexp& (0+255),w,b
 17483  013C78  C168  F15E         	movff	___flmul@bexp,??___flmul
 17484  013C7C  6B5F               	clrf	(??___flmul+1)& (0+255),b
 17485  013C7E  275E               	addwf	??___flmul& (0+255),f,b
 17486  013C80  0E00               	movlw	0
 17487  013C82  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 17488  013C84  0E82               	movlw	130
 17489  013C86  255E               	addwf	??___flmul& (0+255),w,b
 17490  013C88  6F6D               	movwf	___flmul@temp& (0+255),b
 17491  013C8A  0EFF               	movlw	255
 17492  013C8C  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 17493  013C8E  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 17494  013C90  D00F               	goto	l2115
 17495  013C92                     
 17496                           ; BSR set to: 1
 17497                           
 17498                           ; BSR set to: 1
 17499  013C92  90D8               	bcf	status,0,c
 17500  013C94  3769               	rlcf	___flmul@prod& (0+255),f,b
 17501  013C96  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 17502  013C98  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 17503  013C9A  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 17504                           
 17505                           ; BSR set to: 1
 17506  013C9C  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 17507                           
 17508                           ; BSR set to: 1
 17509  013C9E  8169               	bsf	___flmul@prod& (0+255),0,b
 17510                           
 17511                           ; BSR set to: 1
 17512  013CA0  90D8               	bcf	status,0,c
 17513  013CA2  3764               	rlcf	___flmul@grs& (0+255),f,b
 17514  013CA4  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 17515  013CA6  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 17516  013CA8  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 17517  013CAA  076D               	decf	___flmul@temp& (0+255),f,b
 17518  013CAC  A0D8               	btfss	status,0,c
 17519  013CAE  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 17520  013CB0                     l2115:
 17521                           
 17522                           ; BSR set to: 1
 17523                           
 17524                           ; BSR set to: 1
 17525  013CB0  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 17526  013CB2  D7EF               	goto	l2116
 17527                           
 17528                           ; BSR set to: 1
 17529                           
 17530                           ; BSR set to: 1
 17531  013CB4  0E00               	movlw	0
 17532  013CB6  6F63               	movwf	___flmul@aexp& (0+255),b
 17533                           
 17534                           ; BSR set to: 1
 17535  013CB8  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 17536  013CBA  D016               	goto	l2122
 17537                           
 17538                           ; BSR set to: 1
 17539  013CBC  0EFF               	movlw	255
 17540  013CBE  1564               	andwf	___flmul@grs& (0+255),w,b
 17541  013CC0  6F5E               	movwf	??___flmul& (0+255),b
 17542  013CC2  0EFF               	movlw	255
 17543  013CC4  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 17544  013CC6  6F5F               	movwf	(??___flmul+1)& (0+255),b
 17545  013CC8  0EFF               	movlw	255
 17546  013CCA  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 17547  013CCC  6F60               	movwf	(??___flmul+2)& (0+255),b
 17548  013CCE  0E7F               	movlw	127
 17549  013CD0  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 17550  013CD2  6F61               	movwf	(??___flmul+3)& (0+255),b
 17551  013CD4  515E               	movf	??___flmul& (0+255),w,b
 17552  013CD6  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 17553  013CD8  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 17554  013CDA  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 17555  013CDC  A4D8               	btfss	status,2,c
 17556  013CDE  D002               	goto	u12900
 17557                           
 17558                           ; BSR set to: 1
 17559                           
 17560                           ; BSR set to: 1
 17561  013CE0  A169               	btfss	___flmul@prod& (0+255),0,b
 17562  013CE2  D002               	goto	l2122
 17563  013CE4                     u12900:
 17564                           
 17565                           ; BSR set to: 1
 17566  013CE4  0E01               	movlw	1
 17567  013CE6  6F63               	movwf	___flmul@aexp& (0+255),b
 17568  013CE8                     l2122:
 17569                           
 17570                           ; BSR set to: 1
 17571                           
 17572                           ; BSR set to: 1
 17573                           
 17574                           ; BSR set to: 1
 17575  013CE8  5163               	movf	___flmul@aexp& (0+255),w,b
 17576  013CEA  B4D8               	btfsc	status,2,c
 17577  013CEC  D01F               	goto	l2124
 17578                           
 17579                           ; BSR set to: 1
 17580  013CEE  0E01               	movlw	1
 17581  013CF0  2769               	addwf	___flmul@prod& (0+255),f,b
 17582  013CF2  0E00               	movlw	0
 17583  013CF4  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17584  013CF6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17585  013CF8  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17586                           
 17587                           ; BSR set to: 1
 17588  013CFA  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 17589  013CFC  D017               	goto	l2124
 17590                           
 17591                           ; BSR set to: 1
 17592  013CFE  C169  F15E         	movff	___flmul@prod,??___flmul
 17593  013D02  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 17594  013D06  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 17595  013D0A  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 17596  013D0E  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 17597  013D10  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 17598  013D12  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 17599  013D14  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 17600  013D16  335E               	rrcf	??___flmul& (0+255),f,b
 17601  013D18  C15E  F169         	movff	??___flmul,___flmul@prod
 17602  013D1C  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 17603  013D20  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 17604  013D24  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 17605                           
 17606                           ; BSR set to: 1
 17607  013D28  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 17608  013D2A  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 17609  013D2C                     l2124:
 17610                           
 17611                           ; BSR set to: 1
 17612                           
 17613                           ; BSR set to: 1
 17614                           
 17615                           ; BSR set to: 1
 17616  013D2C  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 17617  013D2E  D00D               	goto	l2125
 17618  013D30  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17619  013D32  E103               	bnz	u12930
 17620  013D34  296D               	incf	___flmul@temp& (0+255),w,b
 17621  013D36  A0D8               	btfss	status,0,c
 17622  013D38  D008               	goto	l2125
 17623  013D3A                     u12930:
 17624                           
 17625                           ; BSR set to: 1
 17626  013D3A  0E00               	movlw	0
 17627  013D3C  6F69               	movwf	___flmul@prod& (0+255),b
 17628  013D3E  0E00               	movlw	0
 17629  013D40  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 17630  013D42  0E80               	movlw	128
 17631  013D44  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 17632  013D46  0E7F               	movlw	127
 17633  013D48  D020               	goto	L4
 17634  013D4A                     l2125:
 17635                           
 17636                           ; BSR set to: 1
 17637                           
 17638                           ; BSR set to: 1
 17639  013D4A  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 17640  013D4C  D005               	goto	u12940
 17641  013D4E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 17642  013D50  E10E               	bnz	l2127
 17643  013D52  056D               	decf	___flmul@temp& (0+255),w,b
 17644  013D54  B0D8               	btfsc	status,0,c
 17645  013D56  D00B               	goto	l2127
 17646  013D58                     u12940:
 17647                           
 17648                           ; BSR set to: 1
 17649  013D58  0E00               	movlw	0
 17650  013D5A  6F69               	movwf	___flmul@prod& (0+255),b
 17651  013D5C  0E00               	movlw	0
 17652  013D5E  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 17653  013D60  0E00               	movlw	0
 17654  013D62  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 17655  013D64  0E00               	movlw	0
 17656  013D66  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 17657  013D68  0E00               	movlw	0
 17658  013D6A  6F62               	movwf	___flmul@sign& (0+255),b
 17659  013D6C  D00F               	goto	l2128
 17660  013D6E                     l2127:
 17661                           
 17662                           ; BSR set to: 1
 17663  013D6E  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 17664                           
 17665                           ; BSR set to: 1
 17666  013D72  0EFF               	movlw	255
 17667  013D74  1769               	andwf	___flmul@prod& (0+255),f,b
 17668  013D76  0EFF               	movlw	255
 17669  013D78  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 17670  013D7A  0E7F               	movlw	127
 17671  013D7C  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 17672  013D7E  0E00               	movlw	0
 17673  013D80  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 17674                           
 17675                           ; BSR set to: 1
 17676  013D82  B168               	btfsc	___flmul@bexp& (0+255),0,b
 17677                           
 17678                           ; BSR set to: 1
 17679  013D84  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 17680                           
 17681                           ; BSR set to: 1
 17682                           
 17683                           ; BSR set to: 1
 17684  013D86  90D8               	bcf	status,0,c
 17685  013D88  3168               	rrcf	___flmul@bexp& (0+255),w,b
 17686  013D8A                     L4:
 17687  013D8A  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 17688  013D8C                     l2128:
 17689                           
 17690                           ; BSR set to: 1
 17691                           
 17692                           ; BSR set to: 1
 17693                           
 17694                           ; BSR set to: 1
 17695  013D8C  5162               	movf	___flmul@sign& (0+255),w,b
 17696  013D8E  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 17697                           
 17698                           ; BSR set to: 1
 17699  013D90  C169  F156         	movff	___flmul@prod,?___flmul
 17700  013D94  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 17701  013D98  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 17702  013D9C  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 17703  013DA0  0012               	return	
 17704  013DA2                     __end_of___flmul:
 17705                           	opt stack 0
 17706                           tblptru	equ	0xFF8
 17707                           tblptrh	equ	0xFF7
 17708                           tblptrl	equ	0xFF6
 17709                           tablat	equ	0xFF5
 17710                           prodh	equ	0xFF4
 17711                           prodl	equ	0xFF3
 17712                           intcon	equ	0xFF2
 17713                           indf0	equ	0xFEF
 17714                           postinc0	equ	0xFEE
 17715                           fsr0h	equ	0xFEA
 17716                           fsr0l	equ	0xFE9
 17717                           wreg	equ	0xFE8
 17718                           indf1	equ	0xFE7
 17719                           postdec1	equ	0xFE5
 17720                           plusw1	equ	0xFE3
 17721                           fsr1h	equ	0xFE2
 17722                           fsr1l	equ	0xFE1
 17723                           indf2	equ	0xFDF
 17724                           postinc2	equ	0xFDE
 17725                           postdec2	equ	0xFDD
 17726                           plusw2	equ	0xFDB
 17727                           fsr2h	equ	0xFDA
 17728                           fsr2l	equ	0xFD9
 17729                           status	equ	0xFD8
 17730                           
 17731 ;; *************** function ___awmod *****************
 17732 ;; Defined at:
 17733 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17734 ;; Parameters:    Size  Location     Type
 17735 ;;  dividend        2   23[BANK1 ] int 
 17736 ;;  divisor         2   25[BANK1 ] int 
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;  sign            1   28[BANK1 ] unsigned char 
 17739 ;;  counter         1   27[BANK1 ] unsigned char 
 17740 ;; Return value:  Size  Location     Type
 17741 ;;                  2   23[BANK1 ] int 
 17742 ;; Registers used:
 17743 ;;		wreg, status,2, status,0
 17744 ;; Tracked objects:
 17745 ;;		On entry : 0/0
 17746 ;;		On exit  : 0/0
 17747 ;;		Unchanged: 0/0
 17748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17749 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17750 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17752 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17753 ;;Total ram usage:        6 bytes
 17754 ;; Hardware stack levels used:    1
 17755 ;; Hardware stack levels required when called:   13
 17756 ;; This function calls:
 17757 ;;		Nothing
 17758 ;; This function is called by:
 17759 ;;		_fround
 17760 ;;		_scale
 17761 ;; This function uses a non-reentrant model
 17762 ;;
 17763                           
 17764                           	psect	text35
 17765  01764E                     __ptext35:
 17766                           	opt stack 0
 17767  01764E                     ___awmod:
 17768                           	opt stack 13
 17769                           
 17770                           ; BSR set to: 1
 17771                           ;incstack = 0
 17772  01764E  0E00               	movlw	0
 17773  017650  0101               	movlb	1	; () banked
 17774  017652  6F1C               	movwf	___awmod@sign& (0+255),b
 17775                           
 17776                           ; BSR set to: 1
 17777  017654  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17778  017656  D006               	goto	l1695
 17779                           
 17780                           ; BSR set to: 1
 17781  017658  6D17               	negf	___awmod@dividend& (0+255),b
 17782  01765A  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17783  01765C  B0D8               	btfsc	status,0,c
 17784  01765E  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17785                           
 17786                           ; BSR set to: 1
 17787  017660  0E01               	movlw	1
 17788  017662  6F1C               	movwf	___awmod@sign& (0+255),b
 17789  017664                     l1695:
 17790                           
 17791                           ; BSR set to: 1
 17792                           
 17793                           ; BSR set to: 1
 17794  017664  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17795  017666  D004               	goto	l1696
 17796                           
 17797                           ; BSR set to: 1
 17798  017668  6D19               	negf	___awmod@divisor& (0+255),b
 17799  01766A  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 17800  01766C  B0D8               	btfsc	status,0,c
 17801  01766E  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 17802  017670                     l1696:
 17803                           
 17804                           ; BSR set to: 1
 17805                           
 17806                           ; BSR set to: 1
 17807  017670  5119               	movf	___awmod@divisor& (0+255),w,b
 17808  017672  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17809  017674  B4D8               	btfsc	status,2,c
 17810  017676  D018               	goto	l1703
 17811                           
 17812                           ; BSR set to: 1
 17813  017678  0E01               	movlw	1
 17814  01767A  6F1B               	movwf	___awmod@counter& (0+255),b
 17815  01767C  D004               	goto	l1698
 17816  01767E                     
 17817                           ; BSR set to: 1
 17818                           
 17819                           ; BSR set to: 1
 17820  01767E  90D8               	bcf	status,0,c
 17821  017680  3719               	rlcf	___awmod@divisor& (0+255),f,b
 17822  017682  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17823  017684  2B1B               	incf	___awmod@counter& (0+255),f,b
 17824  017686                     l1698:
 17825                           
 17826                           ; BSR set to: 1
 17827                           
 17828                           ; BSR set to: 1
 17829  017686  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17830  017688  D7FA               	goto	l1699
 17831  01768A                     u13070:
 17832                           
 17833                           ; BSR set to: 1
 17834                           
 17835                           ; BSR set to: 1
 17836                           
 17837                           ; BSR set to: 1
 17838  01768A  5119               	movf	___awmod@divisor& (0+255),w,b
 17839  01768C  5D17               	subwf	___awmod@dividend& (0+255),w,b
 17840  01768E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17841  017690  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17842  017692  A0D8               	btfss	status,0,c
 17843  017694  D004               	goto	l1702
 17844                           
 17845                           ; BSR set to: 1
 17846  017696  5119               	movf	___awmod@divisor& (0+255),w,b
 17847  017698  5F17               	subwf	___awmod@dividend& (0+255),f,b
 17848  01769A  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17849  01769C  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17850  01769E                     l1702:
 17851                           
 17852                           ; BSR set to: 1
 17853                           
 17854                           ; BSR set to: 1
 17855  01769E  90D8               	bcf	status,0,c
 17856  0176A0  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17857  0176A2  3319               	rrcf	___awmod@divisor& (0+255),f,b
 17858                           
 17859                           ; BSR set to: 1
 17860  0176A4  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 17861  0176A6  D7F1               	goto	u13070
 17862  0176A8                     l1703:
 17863                           
 17864                           ; BSR set to: 1
 17865                           
 17866                           ; BSR set to: 1
 17867                           
 17868                           ; BSR set to: 1
 17869  0176A8  511C               	movf	___awmod@sign& (0+255),w,b
 17870  0176AA  B4D8               	btfsc	status,2,c
 17871  0176AC  D004               	goto	l1704
 17872                           
 17873                           ; BSR set to: 1
 17874  0176AE  6D17               	negf	___awmod@dividend& (0+255),b
 17875  0176B0  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17876  0176B2  B0D8               	btfsc	status,0,c
 17877  0176B4  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17878  0176B6                     l1704:
 17879                           
 17880                           ; BSR set to: 1
 17881                           
 17882                           ; BSR set to: 1
 17883  0176B6  C117  F117         	movff	___awmod@dividend,?___awmod
 17884  0176BA  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 17885  0176BE  0012               	return	
 17886  0176C0                     __end_of___awmod:
 17887                           	opt stack 0
 17888                           tblptru	equ	0xFF8
 17889                           tblptrh	equ	0xFF7
 17890                           tblptrl	equ	0xFF6
 17891                           tablat	equ	0xFF5
 17892                           prodh	equ	0xFF4
 17893                           prodl	equ	0xFF3
 17894                           intcon	equ	0xFF2
 17895                           indf0	equ	0xFEF
 17896                           postinc0	equ	0xFEE
 17897                           fsr0h	equ	0xFEA
 17898                           fsr0l	equ	0xFE9
 17899                           wreg	equ	0xFE8
 17900                           indf1	equ	0xFE7
 17901                           postdec1	equ	0xFE5
 17902                           plusw1	equ	0xFE3
 17903                           fsr1h	equ	0xFE2
 17904                           fsr1l	equ	0xFE1
 17905                           indf2	equ	0xFDF
 17906                           postinc2	equ	0xFDE
 17907                           postdec2	equ	0xFDD
 17908                           plusw2	equ	0xFDB
 17909                           fsr2h	equ	0xFDA
 17910                           fsr2l	equ	0xFD9
 17911                           status	equ	0xFD8
 17912                           
 17913 ;; *************** function ___awdiv *****************
 17914 ;; Defined at:
 17915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 17916 ;; Parameters:    Size  Location     Type
 17917 ;;  dividend        2   29[BANK1 ] int 
 17918 ;;  divisor         2   31[BANK1 ] int 
 17919 ;; Auto vars:     Size  Location     Type
 17920 ;;  quotient        2   35[BANK1 ] int 
 17921 ;;  sign            1   34[BANK1 ] unsigned char 
 17922 ;;  counter         1   33[BANK1 ] unsigned char 
 17923 ;; Return value:  Size  Location     Type
 17924 ;;                  2   29[BANK1 ] int 
 17925 ;; Registers used:
 17926 ;;		wreg, status,2, status,0
 17927 ;; Tracked objects:
 17928 ;;		On entry : 0/0
 17929 ;;		On exit  : 0/0
 17930 ;;		Unchanged: 0/0
 17931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17932 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17933 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17935 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17936 ;;Total ram usage:        8 bytes
 17937 ;; Hardware stack levels used:    1
 17938 ;; Hardware stack levels required when called:   13
 17939 ;; This function calls:
 17940 ;;		Nothing
 17941 ;; This function is called by:
 17942 ;;		_fround
 17943 ;;		_scale
 17944 ;;		_printf
 17945 ;; This function uses a non-reentrant model
 17946 ;;
 17947                           
 17948                           	psect	text36
 17949  017348                     __ptext36:
 17950                           	opt stack 0
 17951  017348                     ___awdiv:
 17952                           	opt stack 13
 17953                           
 17954                           ; BSR set to: 1
 17955                           ;incstack = 0
 17956  017348  0E00               	movlw	0
 17957  01734A  0101               	movlb	1	; () banked
 17958  01734C  6F22               	movwf	___awdiv@sign& (0+255),b
 17959                           
 17960                           ; BSR set to: 1
 17961  01734E  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17962  017350  D006               	goto	l1682
 17963                           
 17964                           ; BSR set to: 1
 17965  017352  6D1F               	negf	___awdiv@divisor& (0+255),b
 17966  017354  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17967  017356  B0D8               	btfsc	status,0,c
 17968  017358  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17969                           
 17970                           ; BSR set to: 1
 17971  01735A  0E01               	movlw	1
 17972  01735C  6F22               	movwf	___awdiv@sign& (0+255),b
 17973  01735E                     l1682:
 17974                           
 17975                           ; BSR set to: 1
 17976                           
 17977                           ; BSR set to: 1
 17978  01735E  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17979  017360  D006               	goto	l1683
 17980                           
 17981                           ; BSR set to: 1
 17982  017362  6D1D               	negf	___awdiv@dividend& (0+255),b
 17983  017364  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17984  017366  B0D8               	btfsc	status,0,c
 17985  017368  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17986                           
 17987                           ; BSR set to: 1
 17988  01736A  0E01               	movlw	1
 17989  01736C  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 17990  01736E                     l1683:
 17991                           
 17992                           ; BSR set to: 1
 17993                           
 17994                           ; BSR set to: 1
 17995  01736E  0E00               	movlw	0
 17996  017370  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 17997  017372  0E00               	movlw	0
 17998  017374  6F23               	movwf	___awdiv@quotient& (0+255),b
 17999                           
 18000                           ; BSR set to: 1
 18001  017376  511F               	movf	___awdiv@divisor& (0+255),w,b
 18002  017378  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18003  01737A  B4D8               	btfsc	status,2,c
 18004  01737C  D01C               	goto	l1690
 18005                           
 18006                           ; BSR set to: 1
 18007  01737E  0E01               	movlw	1
 18008  017380  6F21               	movwf	___awdiv@counter& (0+255),b
 18009  017382  D004               	goto	l1685
 18010  017384                     
 18011                           ; BSR set to: 1
 18012                           
 18013                           ; BSR set to: 1
 18014  017384  90D8               	bcf	status,0,c
 18015  017386  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 18016  017388  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18017  01738A  2B21               	incf	___awdiv@counter& (0+255),f,b
 18018  01738C                     l1685:
 18019                           
 18020                           ; BSR set to: 1
 18021                           
 18022                           ; BSR set to: 1
 18023  01738C  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18024  01738E  D7FA               	goto	l1686
 18025  017390                     u13010:
 18026                           
 18027                           ; BSR set to: 1
 18028                           
 18029                           ; BSR set to: 1
 18030                           
 18031                           ; BSR set to: 1
 18032  017390  90D8               	bcf	status,0,c
 18033  017392  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 18034  017394  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18035                           
 18036                           ; BSR set to: 1
 18037  017396  511F               	movf	___awdiv@divisor& (0+255),w,b
 18038  017398  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 18039  01739A  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18040  01739C  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18041  01739E  A0D8               	btfss	status,0,c
 18042  0173A0  D005               	goto	l1689
 18043                           
 18044                           ; BSR set to: 1
 18045  0173A2  511F               	movf	___awdiv@divisor& (0+255),w,b
 18046  0173A4  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 18047  0173A6  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18048  0173A8  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18049                           
 18050                           ; BSR set to: 1
 18051  0173AA  8123               	bsf	___awdiv@quotient& (0+255),0,b
 18052  0173AC                     l1689:
 18053                           
 18054                           ; BSR set to: 1
 18055                           
 18056                           ; BSR set to: 1
 18057  0173AC  90D8               	bcf	status,0,c
 18058  0173AE  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18059  0173B0  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 18060                           
 18061                           ; BSR set to: 1
 18062  0173B2  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 18063  0173B4  D7ED               	goto	u13010
 18064  0173B6                     l1690:
 18065                           
 18066                           ; BSR set to: 1
 18067                           
 18068                           ; BSR set to: 1
 18069                           
 18070                           ; BSR set to: 1
 18071  0173B6  5122               	movf	___awdiv@sign& (0+255),w,b
 18072  0173B8  B4D8               	btfsc	status,2,c
 18073  0173BA  D004               	goto	l1691
 18074                           
 18075                           ; BSR set to: 1
 18076  0173BC  6D23               	negf	___awdiv@quotient& (0+255),b
 18077  0173BE  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18078  0173C0  B0D8               	btfsc	status,0,c
 18079  0173C2  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18080  0173C4                     l1691:
 18081                           
 18082                           ; BSR set to: 1
 18083                           
 18084                           ; BSR set to: 1
 18085  0173C4  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 18086  0173C8  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 18087  0173CC  0012               	return	
 18088  0173CE                     __end_of___awdiv:
 18089                           	opt stack 0
 18090                           tblptru	equ	0xFF8
 18091                           tblptrh	equ	0xFF7
 18092                           tblptrl	equ	0xFF6
 18093                           tablat	equ	0xFF5
 18094                           prodh	equ	0xFF4
 18095                           prodl	equ	0xFF3
 18096                           intcon	equ	0xFF2
 18097                           indf0	equ	0xFEF
 18098                           postinc0	equ	0xFEE
 18099                           fsr0h	equ	0xFEA
 18100                           fsr0l	equ	0xFE9
 18101                           wreg	equ	0xFE8
 18102                           indf1	equ	0xFE7
 18103                           postdec1	equ	0xFE5
 18104                           plusw1	equ	0xFE3
 18105                           fsr1h	equ	0xFE2
 18106                           fsr1l	equ	0xFE1
 18107                           indf2	equ	0xFDF
 18108                           postinc2	equ	0xFDE
 18109                           postdec2	equ	0xFDD
 18110                           plusw2	equ	0xFDB
 18111                           fsr2h	equ	0xFDA
 18112                           fsr2l	equ	0xFD9
 18113                           status	equ	0xFD8
 18114                           
 18115 ;; *************** function __tdiv_to_l_ *****************
 18116 ;; Defined at:
 18117 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;  f1              3   23[BANK1 ] float 
 18120 ;;  f2              3   26[BANK1 ] float 
 18121 ;; Auto vars:     Size  Location     Type
 18122 ;;  quot            4   32[BANK1 ] unsigned long 
 18123 ;;  exp1            1   37[BANK1 ] unsigned char 
 18124 ;;  cntr            1   36[BANK1 ] unsigned char 
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  4   23[BANK1 ] unsigned long 
 18127 ;; Registers used:
 18128 ;;		wreg, status,2, status,0
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18134 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18135 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18136 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18137 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18138 ;;Total ram usage:       15 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:   13
 18141 ;; This function calls:
 18142 ;;		Nothing
 18143 ;; This function is called by:
 18144 ;;		_printf
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           	psect	text37
 18149  016236                     __ptext37:
 18150                           	opt stack 0
 18151  016236                     __tdiv_to_l_:
 18152                           	opt stack 14
 18153                           
 18154                           ; BSR set to: 1
 18155                           ;incstack = 0
 18156  016236  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 18157  01623A  0101               	movlb	1	; () banked
 18158  01623C  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 18159  01623E  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 18160  016240  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 18161  016242  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 18162  016244  E301               	bnc	u13581
 18163  016246  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 18164  016248                     u13581:
 18165  016248  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 18166  01624A  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 18167  01624C  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18168  01624E  A4D8               	btfss	status,2,c
 18169  016250  D009               	goto	l1830
 18170                           
 18171                           ; BSR set to: 1
 18172  016252  0E00               	movlw	0
 18173  016254  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18174  016256  0E00               	movlw	0
 18175  016258  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18176  01625A  0E00               	movlw	0
 18177  01625C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18178  01625E  0E00               	movlw	0
 18179  016260  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18180                           
 18181                           ; BSR set to: 1
 18182  016262  0012               	return	
 18183  016264                     l1830:
 18184                           
 18185                           ; BSR set to: 1
 18186                           
 18187                           ; BSR set to: 1
 18188  016264  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 18189  016268  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 18190  01626A  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 18191  01626C  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18192  01626E  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 18193  016270  E301               	bnc	u13601
 18194  016272  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 18195  016274                     u13601:
 18196  016274  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 18197  016276  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 18198  016278  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 18199  01627A  A4D8               	btfss	status,2,c
 18200  01627C  D009               	goto	l1832
 18201                           
 18202                           ; BSR set to: 1
 18203  01627E  0E00               	movlw	0
 18204  016280  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18205  016282  0E00               	movlw	0
 18206  016284  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18207  016286  0E00               	movlw	0
 18208  016288  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18209  01628A  0E00               	movlw	0
 18210  01628C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18211                           
 18212                           ; BSR set to: 1
 18213  01628E  0012               	return	
 18214  016290                     l1832:
 18215                           
 18216                           ; BSR set to: 1
 18217                           
 18218                           ; BSR set to: 1
 18219  016290  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 18220                           
 18221                           ; BSR set to: 1
 18222  016292  0EFF               	movlw	255
 18223  016294  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 18224  016296  0EFF               	movlw	255
 18225  016298  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18226  01629A  0E00               	movlw	0
 18227  01629C  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18228  01629E  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 18229                           
 18230                           ; BSR set to: 1
 18231  0162A0  0EFF               	movlw	255
 18232  0162A2  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 18233  0162A4  0EFF               	movlw	255
 18234  0162A6  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 18235  0162A8  0E00               	movlw	0
 18236  0162AA  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 18237                           
 18238                           ; BSR set to: 1
 18239  0162AC  0E00               	movlw	0
 18240  0162AE  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 18241  0162B0  0E00               	movlw	0
 18242  0162B2  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 18243  0162B4  0E00               	movlw	0
 18244  0162B6  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 18245  0162B8  0E00               	movlw	0
 18246  0162BA  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 18247                           
 18248                           ; BSR set to: 1
 18249  0162BC  0E7F               	movlw	127
 18250  0162BE  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 18251                           
 18252                           ; BSR set to: 1
 18253  0162C0  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 18254  0162C2  0F98               	addlw	152
 18255  0162C4  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 18256                           
 18257                           ; BSR set to: 1
 18258  0162C6  0E18               	movlw	24
 18259  0162C8  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 18260  0162CA                     l1833:
 18261                           
 18262                           ; BSR set to: 1
 18263  0162CA  90D8               	bcf	status,0,c
 18264  0162CC  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18265  0162CE  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18266  0162D0  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18267  0162D2  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18268                           
 18269                           ; BSR set to: 1
 18270  0162D4  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 18271  0162D6  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 18272  0162D8  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18273  0162DA  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 18274  0162DC  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 18275  0162DE  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 18276  0162E0  A0D8               	btfss	status,0,c
 18277  0162E2  D007               	goto	l1834
 18278                           
 18279                           ; BSR set to: 1
 18280  0162E4  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 18281  0162E6  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 18282  0162E8  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 18283  0162EA  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18284  0162EC  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 18285  0162EE  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18286                           
 18287                           ; BSR set to: 1
 18288  0162F0  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 18289  0162F2                     l1834:
 18290                           
 18291                           ; BSR set to: 1
 18292  0162F2  90D8               	bcf	status,0,c
 18293  0162F4  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 18294  0162F6  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 18295  0162F8  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 18296                           
 18297                           ; BSR set to: 1
 18298  0162FA  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 18299  0162FC  D7E6               	goto	l1833
 18300                           
 18301                           ; BSR set to: 1
 18302                           
 18303                           ; BSR set to: 1
 18304  0162FE  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 18305  016300  D016               	goto	l1836
 18306                           
 18307                           ; BSR set to: 1
 18308  016302  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18309  016304  0A80               	xorlw	128
 18310  016306  0F97               	addlw	151
 18311  016308  B0D8               	btfsc	status,0,c
 18312  01630A  D009               	goto	l1837
 18313                           
 18314                           ; BSR set to: 1
 18315  01630C  0E00               	movlw	0
 18316  01630E  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18317  016310  0E00               	movlw	0
 18318  016312  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18319  016314  0E00               	movlw	0
 18320  016316  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18321  016318  0E00               	movlw	0
 18322  01631A  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18323                           
 18324                           ; BSR set to: 1
 18325  01631C  0012               	return	
 18326  01631E                     l1837:
 18327                           
 18328                           ; BSR set to: 1
 18329                           
 18330                           ; BSR set to: 1
 18331                           
 18332                           ; BSR set to: 1
 18333  01631E  90D8               	bcf	status,0,c
 18334  016320  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18335  016322  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18336  016324  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18337  016326  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 18338                           
 18339                           ; BSR set to: 1
 18340  016328  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 18341  01632A  D7F9               	goto	l1837
 18342                           
 18343                           ; BSR set to: 1
 18344  01632C  D015               	goto	u13660
 18345  01632E                     l1836:
 18346                           
 18347                           ; BSR set to: 1
 18348                           
 18349                           ; BSR set to: 1
 18350  01632E  0E17               	movlw	23
 18351  016330  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 18352  016332  D00F               	goto	l1842
 18353                           
 18354                           ; BSR set to: 1
 18355  016334  0E00               	movlw	0
 18356  016336  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18357  016338  0E00               	movlw	0
 18358  01633A  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18359  01633C  0E00               	movlw	0
 18360  01633E  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18361  016340  0E00               	movlw	0
 18362  016342  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18363                           
 18364                           ; BSR set to: 1
 18365  016344  0012               	return	
 18366  016346                     
 18367                           ; BSR set to: 1
 18368                           
 18369                           ; BSR set to: 1
 18370  016346  90D8               	bcf	status,0,c
 18371  016348  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18372  01634A  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18373  01634C  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18374  01634E  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18375  016350  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 18376  016352                     l1842:
 18377                           
 18378                           ; BSR set to: 1
 18379                           
 18380                           ; BSR set to: 1
 18381  016352  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18382  016354  A4D8               	btfss	status,2,c
 18383  016356  D7F7               	goto	l1843
 18384  016358                     u13660:
 18385                           
 18386                           ; BSR set to: 1
 18387                           
 18388                           ; BSR set to: 1
 18389  016358  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 18390  01635C  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 18391  016360  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 18392  016364  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 18393                           
 18394                           ; BSR set to: 1
 18395  016368  0012               	return		;funcret
 18396  01636A                     __end_of__tdiv_to_l_:
 18397                           	opt stack 0
 18398                           tblptru	equ	0xFF8
 18399                           tblptrh	equ	0xFF7
 18400                           tblptrl	equ	0xFF6
 18401                           tablat	equ	0xFF5
 18402                           prodh	equ	0xFF4
 18403                           prodl	equ	0xFF3
 18404                           intcon	equ	0xFF2
 18405                           indf0	equ	0xFEF
 18406                           postinc0	equ	0xFEE
 18407                           fsr0h	equ	0xFEA
 18408                           fsr0l	equ	0xFE9
 18409                           wreg	equ	0xFE8
 18410                           indf1	equ	0xFE7
 18411                           postdec1	equ	0xFE5
 18412                           plusw1	equ	0xFE3
 18413                           fsr1h	equ	0xFE2
 18414                           fsr1l	equ	0xFE1
 18415                           indf2	equ	0xFDF
 18416                           postinc2	equ	0xFDE
 18417                           postdec2	equ	0xFDD
 18418                           plusw2	equ	0xFDB
 18419                           fsr2h	equ	0xFDA
 18420                           fsr2l	equ	0xFD9
 18421                           status	equ	0xFD8
 18422                           
 18423 ;; *************** function __div_to_l_ *****************
 18424 ;; Defined at:
 18425 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 18426 ;; Parameters:    Size  Location     Type
 18427 ;;  f1              4   23[BANK1 ] unsigned long 
 18428 ;;  f2              4   27[BANK1 ] unsigned long 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  quot            4   31[BANK1 ] unsigned long 
 18431 ;;  exp1            1   36[BANK1 ] unsigned char 
 18432 ;;  cntr            1   35[BANK1 ] unsigned char 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  4   23[BANK1 ] unsigned long 
 18435 ;; Registers used:
 18436 ;;		wreg, status,2, status,0
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18442 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18443 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18445 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18446 ;;Total ram usage:       14 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:   13
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		_printf
 18453 ;; This function uses a non-reentrant model
 18454 ;;
 18455                           
 18456                           	psect	text38
 18457  01649C                     __ptext38:
 18458                           	opt stack 0
 18459  01649C                     __div_to_l_:
 18460                           	opt stack 14
 18461                           
 18462                           ; BSR set to: 1
 18463                           ;incstack = 0
 18464  01649C  0101               	movlb	1	; () banked
 18465  01649E  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 18466  0164A0  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 18467  0164A2  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 18468  0164A4  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 18469  0164A6  A4D8               	btfss	status,2,c
 18470  0164A8  D009               	goto	l1726
 18471                           
 18472                           ; BSR set to: 1
 18473  0164AA  0E00               	movlw	0
 18474  0164AC  6F17               	movwf	?__div_to_l_& (0+255),b
 18475  0164AE  0E00               	movlw	0
 18476  0164B0  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18477  0164B2  0E00               	movlw	0
 18478  0164B4  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18479  0164B6  0E00               	movlw	0
 18480  0164B8  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18481                           
 18482                           ; BSR set to: 1
 18483  0164BA  0012               	return	
 18484  0164BC                     l1726:
 18485                           
 18486                           ; BSR set to: 1
 18487                           
 18488                           ; BSR set to: 1
 18489  0164BC  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 18490  0164BE  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 18491  0164C0  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 18492  0164C2  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 18493  0164C4  A4D8               	btfss	status,2,c
 18494  0164C6  D009               	goto	l1728
 18495                           
 18496                           ; BSR set to: 1
 18497  0164C8  0E00               	movlw	0
 18498  0164CA  6F17               	movwf	?__div_to_l_& (0+255),b
 18499  0164CC  0E00               	movlw	0
 18500  0164CE  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18501  0164D0  0E00               	movlw	0
 18502  0164D2  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18503  0164D4  0E00               	movlw	0
 18504  0164D6  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18505                           
 18506                           ; BSR set to: 1
 18507  0164D8  0012               	return	
 18508  0164DA                     l1728:
 18509                           
 18510                           ; BSR set to: 1
 18511                           
 18512                           ; BSR set to: 1
 18513  0164DA  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 18514                           
 18515                           ; BSR set to: 1
 18516  0164DC  0EFF               	movlw	255
 18517  0164DE  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 18518  0164E0  0EFF               	movlw	255
 18519  0164E2  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 18520  0164E4  0EFF               	movlw	255
 18521  0164E6  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 18522  0164E8  0E00               	movlw	0
 18523  0164EA  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 18524                           
 18525                           ; BSR set to: 1
 18526  0164EC  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 18527  0164EE  0EFF               	movlw	255
 18528  0164F0  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 18529  0164F2  0EFF               	movlw	255
 18530  0164F4  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 18531  0164F6  0EFF               	movlw	255
 18532  0164F8  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 18533  0164FA  0E00               	movlw	0
 18534  0164FC  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 18535                           
 18536                           ; BSR set to: 1
 18537  0164FE  0E00               	movlw	0
 18538  016500  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 18539  016502  0E00               	movlw	0
 18540  016504  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 18541  016506  0E00               	movlw	0
 18542  016508  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 18543  01650A  0E00               	movlw	0
 18544  01650C  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 18545                           
 18546                           ; BSR set to: 1
 18547  01650E  0E7F               	movlw	127
 18548  016510  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 18549                           
 18550                           ; BSR set to: 1
 18551  016512  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 18552  016514  0FA0               	addlw	160
 18553  016516  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 18554                           
 18555                           ; BSR set to: 1
 18556  016518  0E20               	movlw	32
 18557  01651A  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 18558  01651C                     
 18559                           ; BSR set to: 1
 18560                           
 18561                           ; BSR set to: 1
 18562  01651C  90D8               	bcf	status,0,c
 18563  01651E  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 18564  016520  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18565  016522  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18566  016524  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18567                           
 18568                           ; BSR set to: 1
 18569  016526  511B               	movf	__div_to_l_@f2& (0+255),w,b
 18570  016528  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 18571  01652A  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18572  01652C  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 18573  01652E  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18574  016530  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 18575  016532  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18576  016534  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 18577  016536  A0D8               	btfss	status,0,c
 18578  016538  D009               	goto	l1730
 18579                           
 18580                           ; BSR set to: 1
 18581  01653A  511B               	movf	__div_to_l_@f2& (0+255),w,b
 18582  01653C  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 18583  01653E  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18584  016540  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 18585  016542  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18586  016544  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 18587  016546  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18588  016548  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 18589                           
 18590                           ; BSR set to: 1
 18591  01654A  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 18592  01654C                     l1730:
 18593                           
 18594                           ; BSR set to: 1
 18595                           
 18596                           ; BSR set to: 1
 18597  01654C  90D8               	bcf	status,0,c
 18598  01654E  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 18599  016550  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 18600  016552  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 18601  016554  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 18602                           
 18603                           ; BSR set to: 1
 18604  016556  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 18605  016558  D7E1               	goto	l1729
 18606                           
 18607                           ; BSR set to: 1
 18608                           
 18609                           ; BSR set to: 1
 18610  01655A  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 18611  01655C  D016               	goto	l1732
 18612                           
 18613                           ; BSR set to: 1
 18614  01655E  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 18615  016560  0A80               	xorlw	128
 18616  016562  0F9F               	addlw	159
 18617  016564  B0D8               	btfsc	status,0,c
 18618  016566  D009               	goto	l1733
 18619                           
 18620                           ; BSR set to: 1
 18621  016568  0E00               	movlw	0
 18622  01656A  6F17               	movwf	?__div_to_l_& (0+255),b
 18623  01656C  0E00               	movlw	0
 18624  01656E  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18625  016570  0E00               	movlw	0
 18626  016572  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18627  016574  0E00               	movlw	0
 18628  016576  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18629                           
 18630                           ; BSR set to: 1
 18631  016578  0012               	return	
 18632  01657A                     l1733:
 18633                           
 18634                           ; BSR set to: 1
 18635                           
 18636                           ; BSR set to: 1
 18637                           
 18638                           ; BSR set to: 1
 18639  01657A  90D8               	bcf	status,0,c
 18640  01657C  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 18641  01657E  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 18642  016580  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 18643  016582  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 18644                           
 18645                           ; BSR set to: 1
 18646  016584  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 18647  016586  D7F9               	goto	l1733
 18648                           
 18649                           ; BSR set to: 1
 18650  016588  D015               	goto	u13730
 18651  01658A                     l1732:
 18652                           
 18653                           ; BSR set to: 1
 18654                           
 18655                           ; BSR set to: 1
 18656  01658A  0E1F               	movlw	31
 18657  01658C  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 18658  01658E  D00F               	goto	l1738
 18659                           
 18660                           ; BSR set to: 1
 18661  016590  0E00               	movlw	0
 18662  016592  6F17               	movwf	?__div_to_l_& (0+255),b
 18663  016594  0E00               	movlw	0
 18664  016596  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18665  016598  0E00               	movlw	0
 18666  01659A  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18667  01659C  0E00               	movlw	0
 18668  01659E  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18669                           
 18670                           ; BSR set to: 1
 18671  0165A0  0012               	return	
 18672  0165A2                     
 18673                           ; BSR set to: 1
 18674                           
 18675                           ; BSR set to: 1
 18676  0165A2  90D8               	bcf	status,0,c
 18677  0165A4  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 18678  0165A6  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18679  0165A8  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18680  0165AA  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18681  0165AC  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 18682  0165AE                     l1738:
 18683                           
 18684                           ; BSR set to: 1
 18685                           
 18686                           ; BSR set to: 1
 18687  0165AE  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 18688  0165B0  A4D8               	btfss	status,2,c
 18689  0165B2  D7F7               	goto	l1739
 18690  0165B4                     u13730:
 18691                           
 18692                           ; BSR set to: 1
 18693                           
 18694                           ; BSR set to: 1
 18695  0165B4  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 18696  0165B8  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 18697  0165BC  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 18698  0165C0  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 18699                           
 18700                           ; BSR set to: 1
 18701  0165C4  0012               	return		;funcret
 18702  0165C6                     __end_of__div_to_l_:
 18703                           	opt stack 0
 18704                           tblptru	equ	0xFF8
 18705                           tblptrh	equ	0xFF7
 18706                           tblptrl	equ	0xFF6
 18707                           tablat	equ	0xFF5
 18708                           prodh	equ	0xFF4
 18709                           prodl	equ	0xFF3
 18710                           intcon	equ	0xFF2
 18711                           indf0	equ	0xFEF
 18712                           postinc0	equ	0xFEE
 18713                           fsr0h	equ	0xFEA
 18714                           fsr0l	equ	0xFE9
 18715                           wreg	equ	0xFE8
 18716                           indf1	equ	0xFE7
 18717                           postdec1	equ	0xFE5
 18718                           plusw1	equ	0xFE3
 18719                           fsr1h	equ	0xFE2
 18720                           fsr1l	equ	0xFE1
 18721                           indf2	equ	0xFDF
 18722                           postinc2	equ	0xFDE
 18723                           postdec2	equ	0xFDD
 18724                           plusw2	equ	0xFDB
 18725                           fsr2h	equ	0xFDA
 18726                           fsr2l	equ	0xFD9
 18727                           status	equ	0xFD8
 18728                           
 18729 ;; *************** function ___xxtofl *****************
 18730 ;; Defined at:
 18731 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;  sign            1    wreg     unsigned char 
 18734 ;;  val             4   23[BANK1 ] long 
 18735 ;; Auto vars:     Size  Location     Type
 18736 ;;  sign            1   31[BANK1 ] unsigned char 
 18737 ;;  arg             4   33[BANK1 ] unsigned long 
 18738 ;;  exp             1   32[BANK1 ] unsigned char 
 18739 ;; Return value:  Size  Location     Type
 18740 ;;                  4   23[BANK1 ] unsigned char 
 18741 ;; Registers used:
 18742 ;;		wreg, status,2, status,0
 18743 ;; Tracked objects:
 18744 ;;		On entry : 0/0
 18745 ;;		On exit  : 0/0
 18746 ;;		Unchanged: 0/0
 18747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18748 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18749 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18750 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18751 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18752 ;;Total ram usage:       14 bytes
 18753 ;; Hardware stack levels used:    1
 18754 ;; Hardware stack levels required when called:   13
 18755 ;; This function calls:
 18756 ;;		Nothing
 18757 ;; This function is called by:
 18758 ;;		_ringBufferLUT
 18759 ;;		_printf
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           	psect	text39
 18764  015F92                     __ptext39:
 18765                           	opt stack 0
 18766  015F92                     ___xxtofl:
 18767                           	opt stack 14
 18768                           
 18769                           ; BSR set to: 1
 18770                           ;incstack = 0
 18771                           ;___xxtofl@sign stored from wreg
 18772  015F92  0101               	movlb	1	; () banked
 18773  015F94  6F1F               	movwf	___xxtofl@sign& (0+255),b
 18774  015F96  0101               	movlb	1	; () banked
 18775  015F98  511F               	movf	___xxtofl@sign& (0+255),w,b
 18776  015F9A  A4D8               	btfss	status,2,c
 18777                           
 18778                           ; BSR set to: 1
 18779  015F9C  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18780  015F9E  D01A               	goto	l2206
 18781                           
 18782                           ; BSR set to: 1
 18783  015FA0  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 18784  015FA4  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 18785  015FA8  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 18786  015FAC  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 18787  015FB0  1F1B               	comf	??___xxtofl& (0+255),f,b
 18788  015FB2  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 18789  015FB4  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 18790  015FB6  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 18791  015FB8  2B1B               	incf	??___xxtofl& (0+255),f,b
 18792  015FBA  0E00               	movlw	0
 18793  015FBC  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 18794  015FBE  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 18795  015FC0  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 18796  015FC2  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 18797  015FC6  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 18798  015FCA  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 18799  015FCE  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 18800  015FD2  D008               	goto	l2207
 18801  015FD4                     l2206:
 18802                           
 18803                           ; BSR set to: 1
 18804  015FD4  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 18805  015FD8  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 18806  015FDC  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 18807  015FE0  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 18808  015FE4                     l2207:
 18809                           
 18810                           ; BSR set to: 1
 18811                           
 18812                           ; BSR set to: 1
 18813  015FE4  5117               	movf	___xxtofl@val& (0+255),w,b
 18814  015FE6  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 18815  015FE8  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 18816  015FEA  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 18817  015FEC  A4D8               	btfss	status,2,c
 18818  015FEE  D009               	goto	l2208
 18819                           
 18820                           ; BSR set to: 1
 18821  015FF0  0E00               	movlw	0
 18822  015FF2  6F17               	movwf	?___xxtofl& (0+255),b
 18823  015FF4  0E00               	movlw	0
 18824  015FF6  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 18825  015FF8  0E00               	movlw	0
 18826  015FFA  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 18827  015FFC  0E00               	movlw	0
 18828  015FFE  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 18829                           
 18830                           ; BSR set to: 1
 18831  016000  0012               	return	
 18832  016002                     l2208:
 18833                           
 18834                           ; BSR set to: 1
 18835                           
 18836                           ; BSR set to: 1
 18837  016002  0E96               	movlw	150
 18838  016004  6F20               	movwf	___xxtofl@exp& (0+255),b
 18839  016006  D006               	goto	l2210
 18840  016008                     
 18841                           ; BSR set to: 1
 18842                           
 18843                           ; BSR set to: 1
 18844  016008  2B20               	incf	___xxtofl@exp& (0+255),f,b
 18845  01600A  90D8               	bcf	status,0,c
 18846  01600C  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18847  01600E  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18848  016010  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18849  016012  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 18850  016014                     l2210:
 18851                           
 18852                           ; BSR set to: 1
 18853                           
 18854                           ; BSR set to: 1
 18855  016014  0E00               	movlw	0
 18856  016016  1521               	andwf	___xxtofl@arg& (0+255),w,b
 18857  016018  6F1B               	movwf	??___xxtofl& (0+255),b
 18858  01601A  0E00               	movlw	0
 18859  01601C  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18860  01601E  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 18861  016020  0E00               	movlw	0
 18862  016022  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18863  016024  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 18864  016026  0EFE               	movlw	254
 18865  016028  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18866  01602A  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 18867  01602C  511B               	movf	??___xxtofl& (0+255),w,b
 18868  01602E  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18869  016030  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18870  016032  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18871  016034  B4D8               	btfsc	status,2,c
 18872  016036  D00D               	goto	l2213
 18873  016038  D7E7               	goto	l2211
 18874  01603A                     
 18875                           ; BSR set to: 1
 18876                           
 18877                           ; BSR set to: 1
 18878  01603A  2B20               	incf	___xxtofl@exp& (0+255),f,b
 18879                           
 18880                           ; BSR set to: 1
 18881  01603C  0E01               	movlw	1
 18882  01603E  2721               	addwf	___xxtofl@arg& (0+255),f,b
 18883  016040  0E00               	movlw	0
 18884  016042  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 18885  016044  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 18886  016046  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 18887                           
 18888                           ; BSR set to: 1
 18889  016048  90D8               	bcf	status,0,c
 18890  01604A  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 18891  01604C  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 18892  01604E  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 18893  016050  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 18894  016052                     l2213:
 18895                           
 18896                           ; BSR set to: 1
 18897  016052  0E00               	movlw	0
 18898  016054  1521               	andwf	___xxtofl@arg& (0+255),w,b
 18899  016056  6F1B               	movwf	??___xxtofl& (0+255),b
 18900  016058  0E00               	movlw	0
 18901  01605A  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 18902  01605C  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 18903  01605E  0E00               	movlw	0
 18904  016060  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 18905  016062  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 18906  016064  0EFF               	movlw	255
 18907  016066  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 18908  016068  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 18909  01606A  511B               	movf	??___xxtofl& (0+255),w,b
 18910  01606C  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 18911  01606E  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 18912  016070  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 18913  016072  B4D8               	btfsc	status,2,c
 18914  016074  D007               	goto	l2216
 18915  016076  D7E1               	goto	l2214
 18916  016078                     
 18917                           ; BSR set to: 1
 18918                           
 18919                           ; BSR set to: 1
 18920  016078  0720               	decf	___xxtofl@exp& (0+255),f,b
 18921  01607A  90D8               	bcf	status,0,c
 18922  01607C  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 18923  01607E  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 18924  016080  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 18925  016082  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 18926  016084                     l2216:
 18927                           
 18928                           ; BSR set to: 1
 18929                           
 18930                           ; BSR set to: 1
 18931  016084  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 18932  016086  D003               	goto	u14050
 18933                           
 18934                           ; BSR set to: 1
 18935  016088  0E02               	movlw	2
 18936  01608A  6120               	cpfslt	___xxtofl@exp& (0+255),b
 18937  01608C  D7F5               	goto	l2217
 18938  01608E                     u14050:
 18939                           
 18940                           ; BSR set to: 1
 18941                           
 18942                           ; BSR set to: 1
 18943  01608E  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 18944  016090  D008               	goto	l2221
 18945                           
 18946                           ; BSR set to: 1
 18947  016092  0EFF               	movlw	255
 18948  016094  1721               	andwf	___xxtofl@arg& (0+255),f,b
 18949  016096  0EFF               	movlw	255
 18950  016098  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 18951  01609A  0E7F               	movlw	127
 18952  01609C  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 18953  01609E  0EFF               	movlw	255
 18954  0160A0  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 18955  0160A2                     l2221:
 18956                           
 18957                           ; BSR set to: 1
 18958  0160A2  90D8               	bcf	status,0,c
 18959  0160A4  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 18960  0160A6  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 18961  0160AA  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 18962  0160AC  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 18963  0160AE  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 18964  0160B0  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 18965  0160B4  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 18966  0160B6  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 18967  0160B8  6B1B               	clrf	??___xxtofl& (0+255),b
 18968  0160BA  511B               	movf	??___xxtofl& (0+255),w,b
 18969  0160BC  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 18970  0160BE  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 18971  0160C0  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 18972  0160C2  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 18973  0160C4  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 18974  0160C6  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 18975  0160C8  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 18976                           
 18977                           ; BSR set to: 1
 18978  0160CA  511F               	movf	___xxtofl@sign& (0+255),w,b
 18979  0160CC  A4D8               	btfss	status,2,c
 18980                           
 18981                           ; BSR set to: 1
 18982  0160CE  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 18983  0160D0  D001               	goto	l2222
 18984                           
 18985                           ; BSR set to: 1
 18986  0160D2  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 18987  0160D4                     l2222:
 18988                           
 18989                           ; BSR set to: 1
 18990                           
 18991                           ; BSR set to: 1
 18992  0160D4  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 18993  0160D8  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 18994  0160DC  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 18995  0160E0  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 18996  0160E4  0012               	return	
 18997  0160E6                     __end_of___xxtofl:
 18998                           	opt stack 0
 18999                           tblptru	equ	0xFF8
 19000                           tblptrh	equ	0xFF7
 19001                           tblptrl	equ	0xFF6
 19002                           tablat	equ	0xFF5
 19003                           prodh	equ	0xFF4
 19004                           prodl	equ	0xFF3
 19005                           intcon	equ	0xFF2
 19006                           indf0	equ	0xFEF
 19007                           postinc0	equ	0xFEE
 19008                           fsr0h	equ	0xFEA
 19009                           fsr0l	equ	0xFE9
 19010                           wreg	equ	0xFE8
 19011                           indf1	equ	0xFE7
 19012                           postdec1	equ	0xFE5
 19013                           plusw1	equ	0xFE3
 19014                           fsr1h	equ	0xFE2
 19015                           fsr1l	equ	0xFE1
 19016                           indf2	equ	0xFDF
 19017                           postinc2	equ	0xFDE
 19018                           postdec2	equ	0xFDD
 19019                           plusw2	equ	0xFDB
 19020                           fsr2h	equ	0xFDA
 19021                           fsr2l	equ	0xFD9
 19022                           status	equ	0xFD8
 19023                           
 19024 ;; *************** function ___wmul *****************
 19025 ;; Defined at:
 19026 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 19027 ;; Parameters:    Size  Location     Type
 19028 ;;  multiplier      2   23[BANK1 ] unsigned int 
 19029 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;  product         2   27[BANK1 ] unsigned int 
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  2   23[BANK1 ] unsigned int 
 19034 ;; Registers used:
 19035 ;;		wreg, status,2, status,0, prodl, prodh
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19041 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19042 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19044 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19045 ;;Total ram usage:        6 bytes
 19046 ;; Hardware stack levels used:    1
 19047 ;; Hardware stack levels required when called:   13
 19048 ;; This function calls:
 19049 ;;		Nothing
 19050 ;; This function is called by:
 19051 ;;		_ringBufferLUT
 19052 ;;		_printf
 19053 ;;		_atoi
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text40
 19058  0180B2                     __ptext40:
 19059                           	opt stack 0
 19060  0180B2                     ___wmul:
 19061                           	opt stack 14
 19062                           
 19063                           ; BSR set to: 1
 19064                           ;incstack = 0
 19065  0180B2  0101               	movlb	1	; () banked
 19066  0180B4  5117               	movf	___wmul@multiplier& (0+255),w,b
 19067  0180B6  0319               	mulwf	___wmul@multiplicand& (0+255),b
 19068  0180B8  CFF3 F11B          	movff	prodl,___wmul@product
 19069  0180BC  CFF4 F11C          	movff	prodh,___wmul@product+1
 19070  0180C0  5117               	movf	___wmul@multiplier& (0+255),w,b
 19071  0180C2  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19072  0180C4  50F3               	movf	prodl,w,c
 19073  0180C6  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 19074  0180C8  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19075  0180CA  0319               	mulwf	___wmul@multiplicand& (0+255),b
 19076  0180CC  50F3               	movf	prodl,w,c
 19077  0180CE  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 19078                           
 19079                           ; BSR set to: 1
 19080  0180D0  C11B  F117         	movff	___wmul@product,?___wmul
 19081  0180D4  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 19082  0180D8  0012               	return	
 19083  0180DA                     __end_of___wmul:
 19084                           	opt stack 0
 19085                           tblptru	equ	0xFF8
 19086                           tblptrh	equ	0xFF7
 19087                           tblptrl	equ	0xFF6
 19088                           tablat	equ	0xFF5
 19089                           prodh	equ	0xFF4
 19090                           prodl	equ	0xFF3
 19091                           intcon	equ	0xFF2
 19092                           indf0	equ	0xFEF
 19093                           postinc0	equ	0xFEE
 19094                           fsr0h	equ	0xFEA
 19095                           fsr0l	equ	0xFE9
 19096                           wreg	equ	0xFE8
 19097                           indf1	equ	0xFE7
 19098                           postdec1	equ	0xFE5
 19099                           plusw1	equ	0xFE3
 19100                           fsr1h	equ	0xFE2
 19101                           fsr1l	equ	0xFE1
 19102                           indf2	equ	0xFDF
 19103                           postinc2	equ	0xFDE
 19104                           postdec2	equ	0xFDD
 19105                           plusw2	equ	0xFDB
 19106                           fsr2h	equ	0xFDA
 19107                           fsr2l	equ	0xFD9
 19108                           status	equ	0xFD8
 19109                           
 19110 ;; *************** function ___llmod *****************
 19111 ;; Defined at:
 19112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 19113 ;; Parameters:    Size  Location     Type
 19114 ;;  dividend        4   36[BANK1 ] unsigned long 
 19115 ;;  divisor         4   40[BANK1 ] unsigned long 
 19116 ;; Auto vars:     Size  Location     Type
 19117 ;;  counter         1   44[BANK1 ] unsigned char 
 19118 ;; Return value:  Size  Location     Type
 19119 ;;                  4   36[BANK1 ] unsigned long 
 19120 ;; Registers used:
 19121 ;;		wreg, status,2, status,0
 19122 ;; Tracked objects:
 19123 ;;		On entry : 0/0
 19124 ;;		On exit  : 0/0
 19125 ;;		Unchanged: 0/0
 19126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19127 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19128 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19130 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19131 ;;Total ram usage:        9 bytes
 19132 ;; Hardware stack levels used:    1
 19133 ;; Hardware stack levels required when called:   13
 19134 ;; This function calls:
 19135 ;;		Nothing
 19136 ;; This function is called by:
 19137 ;;		_printf
 19138 ;; This function uses a non-reentrant model
 19139 ;;
 19140                           
 19141                           	psect	text41
 19142  017870                     __ptext41:
 19143                           	opt stack 0
 19144  017870                     ___llmod:
 19145                           	opt stack 14
 19146                           
 19147                           ; BSR set to: 1
 19148                           ;incstack = 0
 19149  017870  0101               	movlb	1	; () banked
 19150  017872  5128               	movf	___llmod@divisor& (0+255),w,b
 19151  017874  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 19152  017876  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 19153  017878  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 19154  01787A  B4D8               	btfsc	status,2,c
 19155  01787C  D024               	goto	l1931
 19156                           
 19157                           ; BSR set to: 1
 19158  01787E  0E01               	movlw	1
 19159  017880  6F2C               	movwf	___llmod@counter& (0+255),b
 19160  017882  D006               	goto	l1926
 19161  017884                     
 19162                           ; BSR set to: 1
 19163                           
 19164                           ; BSR set to: 1
 19165  017884  90D8               	bcf	status,0,c
 19166  017886  3728               	rlcf	___llmod@divisor& (0+255),f,b
 19167  017888  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 19168  01788A  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 19169  01788C  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 19170  01788E  2B2C               	incf	___llmod@counter& (0+255),f,b
 19171  017890                     l1926:
 19172                           
 19173                           ; BSR set to: 1
 19174                           
 19175                           ; BSR set to: 1
 19176  017890  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 19177  017892  D7F8               	goto	l1927
 19178  017894                     u13970:
 19179                           
 19180                           ; BSR set to: 1
 19181                           
 19182                           ; BSR set to: 1
 19183                           
 19184                           ; BSR set to: 1
 19185  017894  5128               	movf	___llmod@divisor& (0+255),w,b
 19186  017896  5D24               	subwf	___llmod@dividend& (0+255),w,b
 19187  017898  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 19188  01789A  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 19189  01789C  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 19190  01789E  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 19191  0178A0  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 19192  0178A2  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 19193  0178A4  A0D8               	btfss	status,0,c
 19194  0178A6  D008               	goto	l1930
 19195                           
 19196                           ; BSR set to: 1
 19197  0178A8  5128               	movf	___llmod@divisor& (0+255),w,b
 19198  0178AA  5F24               	subwf	___llmod@dividend& (0+255),f,b
 19199  0178AC  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 19200  0178AE  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 19201  0178B0  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 19202  0178B2  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 19203  0178B4  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 19204  0178B6  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 19205  0178B8                     l1930:
 19206                           
 19207                           ; BSR set to: 1
 19208                           
 19209                           ; BSR set to: 1
 19210  0178B8  90D8               	bcf	status,0,c
 19211  0178BA  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 19212  0178BC  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 19213  0178BE  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 19214  0178C0  3328               	rrcf	___llmod@divisor& (0+255),f,b
 19215                           
 19216                           ; BSR set to: 1
 19217  0178C2  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 19218  0178C4  D7E7               	goto	u13970
 19219  0178C6                     l1931:
 19220                           
 19221                           ; BSR set to: 1
 19222                           
 19223                           ; BSR set to: 1
 19224  0178C6  C124  F124         	movff	___llmod@dividend,?___llmod
 19225  0178CA  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 19226  0178CE  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 19227  0178D2  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 19228                           
 19229                           ; BSR set to: 1
 19230  0178D6  0012               	return		;funcret
 19231  0178D8                     __end_of___llmod:
 19232                           	opt stack 0
 19233                           tblptru	equ	0xFF8
 19234                           tblptrh	equ	0xFF7
 19235                           tblptrl	equ	0xFF6
 19236                           tablat	equ	0xFF5
 19237                           prodh	equ	0xFF4
 19238                           prodl	equ	0xFF3
 19239                           intcon	equ	0xFF2
 19240                           indf0	equ	0xFEF
 19241                           postinc0	equ	0xFEE
 19242                           fsr0h	equ	0xFEA
 19243                           fsr0l	equ	0xFE9
 19244                           wreg	equ	0xFE8
 19245                           indf1	equ	0xFE7
 19246                           postdec1	equ	0xFE5
 19247                           plusw1	equ	0xFE3
 19248                           fsr1h	equ	0xFE2
 19249                           fsr1l	equ	0xFE1
 19250                           indf2	equ	0xFDF
 19251                           postinc2	equ	0xFDE
 19252                           postdec2	equ	0xFDD
 19253                           plusw2	equ	0xFDB
 19254                           fsr2h	equ	0xFDA
 19255                           fsr2l	equ	0xFD9
 19256                           status	equ	0xFD8
 19257                           
 19258 ;; *************** function ___lldiv *****************
 19259 ;; Defined at:
 19260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 19261 ;; Parameters:    Size  Location     Type
 19262 ;;  dividend        4   23[BANK1 ] unsigned long 
 19263 ;;  divisor         4   27[BANK1 ] unsigned long 
 19264 ;; Auto vars:     Size  Location     Type
 19265 ;;  quotient        4   31[BANK1 ] unsigned long 
 19266 ;;  counter         1   35[BANK1 ] unsigned char 
 19267 ;; Return value:  Size  Location     Type
 19268 ;;                  4   23[BANK1 ] unsigned long 
 19269 ;; Registers used:
 19270 ;;		wreg, status,2, status,0
 19271 ;; Tracked objects:
 19272 ;;		On entry : 0/0
 19273 ;;		On exit  : 0/0
 19274 ;;		Unchanged: 0/0
 19275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19276 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19277 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19279 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19280 ;;Total ram usage:       13 bytes
 19281 ;; Hardware stack levels used:    1
 19282 ;; Hardware stack levels required when called:   13
 19283 ;; This function calls:
 19284 ;;		Nothing
 19285 ;; This function is called by:
 19286 ;;		_printf
 19287 ;; This function uses a non-reentrant model
 19288 ;;
 19289                           
 19290                           	psect	text42
 19291  0173CE                     __ptext42:
 19292                           	opt stack 0
 19293  0173CE                     ___lldiv:
 19294                           	opt stack 14
 19295                           
 19296                           ; BSR set to: 1
 19297                           ;incstack = 0
 19298  0173CE  0E00               	movlw	0
 19299  0173D0  0101               	movlb	1	; () banked
 19300  0173D2  6F1F               	movwf	___lldiv@quotient& (0+255),b
 19301  0173D4  0E00               	movlw	0
 19302  0173D6  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 19303  0173D8  0E00               	movlw	0
 19304  0173DA  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 19305  0173DC  0E00               	movlw	0
 19306  0173DE  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 19307                           
 19308                           ; BSR set to: 1
 19309  0173E0  511B               	movf	___lldiv@divisor& (0+255),w,b
 19310  0173E2  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19311  0173E4  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19312  0173E6  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19313  0173E8  B4D8               	btfsc	status,2,c
 19314  0173EA  D02A               	goto	l1921
 19315                           
 19316                           ; BSR set to: 1
 19317  0173EC  0E01               	movlw	1
 19318  0173EE  6F23               	movwf	___lldiv@counter& (0+255),b
 19319  0173F0  D006               	goto	l1916
 19320  0173F2                     
 19321                           ; BSR set to: 1
 19322                           
 19323                           ; BSR set to: 1
 19324  0173F2  90D8               	bcf	status,0,c
 19325  0173F4  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 19326  0173F6  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19327  0173F8  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19328  0173FA  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19329  0173FC  2B23               	incf	___lldiv@counter& (0+255),f,b
 19330  0173FE                     l1916:
 19331                           
 19332                           ; BSR set to: 1
 19333                           
 19334                           ; BSR set to: 1
 19335  0173FE  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 19336  017400  D7F8               	goto	l1917
 19337  017402                     u13940:
 19338                           
 19339                           ; BSR set to: 1
 19340                           
 19341                           ; BSR set to: 1
 19342                           
 19343                           ; BSR set to: 1
 19344  017402  90D8               	bcf	status,0,c
 19345  017404  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 19346  017406  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19347  017408  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19348  01740A  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19349                           
 19350                           ; BSR set to: 1
 19351  01740C  511B               	movf	___lldiv@divisor& (0+255),w,b
 19352  01740E  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 19353  017410  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19354  017412  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19355  017414  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19356  017416  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19357  017418  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19358  01741A  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19359  01741C  A0D8               	btfss	status,0,c
 19360  01741E  D009               	goto	l1920
 19361                           
 19362                           ; BSR set to: 1
 19363  017420  511B               	movf	___lldiv@divisor& (0+255),w,b
 19364  017422  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 19365  017424  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19366  017426  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19367  017428  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19368  01742A  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19369  01742C  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19370  01742E  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19371                           
 19372                           ; BSR set to: 1
 19373  017430  811F               	bsf	___lldiv@quotient& (0+255),0,b
 19374  017432                     l1920:
 19375                           
 19376                           ; BSR set to: 1
 19377                           
 19378                           ; BSR set to: 1
 19379  017432  90D8               	bcf	status,0,c
 19380  017434  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 19381  017436  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 19382  017438  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 19383  01743A  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 19384                           
 19385                           ; BSR set to: 1
 19386  01743C  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 19387  01743E  D7E1               	goto	u13940
 19388  017440                     l1921:
 19389                           
 19390                           ; BSR set to: 1
 19391                           
 19392                           ; BSR set to: 1
 19393  017440  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 19394  017444  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 19395  017448  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 19396  01744C  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 19397                           
 19398                           ; BSR set to: 1
 19399  017450  0012               	return		;funcret
 19400  017452                     __end_of___lldiv:
 19401                           	opt stack 0
 19402                           tblptru	equ	0xFF8
 19403                           tblptrh	equ	0xFF7
 19404                           tblptrl	equ	0xFF6
 19405                           tablat	equ	0xFF5
 19406                           prodh	equ	0xFF4
 19407                           prodl	equ	0xFF3
 19408                           intcon	equ	0xFF2
 19409                           indf0	equ	0xFEF
 19410                           postinc0	equ	0xFEE
 19411                           fsr0h	equ	0xFEA
 19412                           fsr0l	equ	0xFE9
 19413                           wreg	equ	0xFE8
 19414                           indf1	equ	0xFE7
 19415                           postdec1	equ	0xFE5
 19416                           plusw1	equ	0xFE3
 19417                           fsr1h	equ	0xFE2
 19418                           fsr1l	equ	0xFE1
 19419                           indf2	equ	0xFDF
 19420                           postinc2	equ	0xFDE
 19421                           postdec2	equ	0xFDD
 19422                           plusw2	equ	0xFDB
 19423                           fsr2h	equ	0xFDA
 19424                           fsr2l	equ	0xFD9
 19425                           status	equ	0xFD8
 19426                           
 19427 ;; *************** function ___fltol *****************
 19428 ;; Defined at:
 19429 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;  f1              4  111[BANK1 ] unsigned long 
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;  exp1            1  120[BANK1 ] unsigned char 
 19434 ;;  sign1           1  119[BANK1 ] unsigned char 
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  4  111[BANK1 ] long 
 19437 ;; Registers used:
 19438 ;;		wreg, status,2, status,0
 19439 ;; Tracked objects:
 19440 ;;		On entry : 0/0
 19441 ;;		On exit  : 0/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19444 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19445 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19446 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19447 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19448 ;;Total ram usage:       10 bytes
 19449 ;; Hardware stack levels used:    1
 19450 ;; Hardware stack levels required when called:   13
 19451 ;; This function calls:
 19452 ;;		Nothing
 19453 ;; This function is called by:
 19454 ;;		_printf
 19455 ;; This function uses a non-reentrant model
 19456 ;;
 19457                           
 19458                           	psect	text43
 19459  016C5E                     __ptext43:
 19460                           	opt stack 0
 19461  016C5E                     ___fltol:
 19462                           	opt stack 14
 19463                           
 19464                           ; BSR set to: 1
 19465                           ;incstack = 0
 19466  016C5E  0101               	movlb	1	; () banked
 19467  016C60  3571               	rlcf	(___fltol@f1+2)& (0+255),w,b
 19468  016C62  3572               	rlcf	(___fltol@f1+3)& (0+255),w,b
 19469  016C64  6F78               	movwf	___fltol@exp1& (0+255),b
 19470  016C66  5178               	movf	___fltol@exp1& (0+255),w,b
 19471  016C68  A4D8               	btfss	status,2,c
 19472  016C6A  D009               	goto	l1773
 19473                           
 19474                           ; BSR set to: 1
 19475  016C6C  0E00               	movlw	0
 19476  016C6E  6F6F               	movwf	?___fltol& (0+255),b
 19477  016C70  0E00               	movlw	0
 19478  016C72  6F70               	movwf	(?___fltol+1)& (0+255),b
 19479  016C74  0E00               	movlw	0
 19480  016C76  6F71               	movwf	(?___fltol+2)& (0+255),b
 19481  016C78  0E00               	movlw	0
 19482  016C7A  6F72               	movwf	(?___fltol+3)& (0+255),b
 19483                           
 19484                           ; BSR set to: 1
 19485  016C7C  0012               	return	
 19486  016C7E                     l1773:
 19487                           
 19488                           ; BSR set to: 1
 19489                           
 19490                           ; BSR set to: 1
 19491  016C7E  C16F  F173         	movff	___fltol@f1,??___fltol
 19492  016C82  C170  F174         	movff	___fltol@f1+1,??___fltol+1
 19493  016C86  C171  F175         	movff	___fltol@f1+2,??___fltol+2
 19494  016C8A  C172  F176         	movff	___fltol@f1+3,??___fltol+3
 19495  016C8E  0E20               	movlw	32
 19496  016C90  D005               	goto	u13870
 19497  016C92                     u13875:
 19498  016C92  90D8               	bcf	status,0,c
 19499  016C94  3376               	rrcf	(??___fltol+3)& (0+255),f,b
 19500  016C96  3375               	rrcf	(??___fltol+2)& (0+255),f,b
 19501  016C98  3374               	rrcf	(??___fltol+1)& (0+255),f,b
 19502  016C9A  3373               	rrcf	??___fltol& (0+255),f,b
 19503  016C9C                     u13870:
 19504  016C9C  2EE8               	decfsz	wreg,f,c
 19505  016C9E  D7F9               	goto	u13875
 19506  016CA0  5173               	movf	??___fltol& (0+255),w,b
 19507  016CA2  6F77               	movwf	___fltol@sign1& (0+255),b
 19508                           
 19509                           ; BSR set to: 1
 19510  016CA4  8F71               	bsf	(___fltol@f1+2)& (0+255),7,b
 19511                           
 19512                           ; BSR set to: 1
 19513  016CA6  0EFF               	movlw	255
 19514  016CA8  176F               	andwf	___fltol@f1& (0+255),f,b
 19515  016CAA  0EFF               	movlw	255
 19516  016CAC  1770               	andwf	(___fltol@f1+1)& (0+255),f,b
 19517  016CAE  0EFF               	movlw	255
 19518  016CB0  1771               	andwf	(___fltol@f1+2)& (0+255),f,b
 19519  016CB2  0E00               	movlw	0
 19520  016CB4  1772               	andwf	(___fltol@f1+3)& (0+255),f,b
 19521                           
 19522                           ; BSR set to: 1
 19523  016CB6  0E96               	movlw	150
 19524  016CB8  5F78               	subwf	___fltol@exp1& (0+255),f,b
 19525                           
 19526                           ; BSR set to: 1
 19527  016CBA  AF78               	btfss	___fltol@exp1& (0+255),7,b
 19528  016CBC  D016               	goto	l1775
 19529                           
 19530                           ; BSR set to: 1
 19531  016CBE  5178               	movf	___fltol@exp1& (0+255),w,b
 19532  016CC0  0A80               	xorlw	128
 19533  016CC2  0F97               	addlw	151
 19534  016CC4  B0D8               	btfsc	status,0,c
 19535  016CC6  D009               	goto	l1776
 19536                           
 19537                           ; BSR set to: 1
 19538  016CC8  0E00               	movlw	0
 19539  016CCA  6F6F               	movwf	?___fltol& (0+255),b
 19540  016CCC  0E00               	movlw	0
 19541  016CCE  6F70               	movwf	(?___fltol+1)& (0+255),b
 19542  016CD0  0E00               	movlw	0
 19543  016CD2  6F71               	movwf	(?___fltol+2)& (0+255),b
 19544  016CD4  0E00               	movlw	0
 19545  016CD6  6F72               	movwf	(?___fltol+3)& (0+255),b
 19546                           
 19547                           ; BSR set to: 1
 19548  016CD8  0012               	return	
 19549  016CDA                     l1776:
 19550                           
 19551                           ; BSR set to: 1
 19552                           
 19553                           ; BSR set to: 1
 19554                           
 19555                           ; BSR set to: 1
 19556  016CDA  90D8               	bcf	status,0,c
 19557  016CDC  3372               	rrcf	(___fltol@f1+3)& (0+255),f,b
 19558  016CDE  3371               	rrcf	(___fltol@f1+2)& (0+255),f,b
 19559  016CE0  3370               	rrcf	(___fltol@f1+1)& (0+255),f,b
 19560  016CE2  336F               	rrcf	___fltol@f1& (0+255),f,b
 19561                           
 19562                           ; BSR set to: 1
 19563  016CE4  3F78               	incfsz	___fltol@exp1& (0+255),f,b
 19564  016CE6  D7F9               	goto	l1776
 19565                           
 19566                           ; BSR set to: 1
 19567  016CE8  D015               	goto	u13910
 19568  016CEA                     l1775:
 19569                           
 19570                           ; BSR set to: 1
 19571                           
 19572                           ; BSR set to: 1
 19573  016CEA  0E1F               	movlw	31
 19574  016CEC  6578               	cpfsgt	___fltol@exp1& (0+255),b
 19575  016CEE  D00F               	goto	l1781
 19576                           
 19577                           ; BSR set to: 1
 19578  016CF0  0E00               	movlw	0
 19579  016CF2  6F6F               	movwf	?___fltol& (0+255),b
 19580  016CF4  0E00               	movlw	0
 19581  016CF6  6F70               	movwf	(?___fltol+1)& (0+255),b
 19582  016CF8  0E00               	movlw	0
 19583  016CFA  6F71               	movwf	(?___fltol+2)& (0+255),b
 19584  016CFC  0E00               	movlw	0
 19585  016CFE  6F72               	movwf	(?___fltol+3)& (0+255),b
 19586                           
 19587                           ; BSR set to: 1
 19588  016D00  0012               	return	
 19589  016D02                     
 19590                           ; BSR set to: 1
 19591                           
 19592                           ; BSR set to: 1
 19593  016D02  90D8               	bcf	status,0,c
 19594  016D04  376F               	rlcf	___fltol@f1& (0+255),f,b
 19595  016D06  3770               	rlcf	(___fltol@f1+1)& (0+255),f,b
 19596  016D08  3771               	rlcf	(___fltol@f1+2)& (0+255),f,b
 19597  016D0A  3772               	rlcf	(___fltol@f1+3)& (0+255),f,b
 19598  016D0C  0778               	decf	___fltol@exp1& (0+255),f,b
 19599  016D0E                     l1781:
 19600                           
 19601                           ; BSR set to: 1
 19602                           
 19603                           ; BSR set to: 1
 19604  016D0E  5178               	movf	___fltol@exp1& (0+255),w,b
 19605  016D10  A4D8               	btfss	status,2,c
 19606  016D12  D7F7               	goto	l1782
 19607  016D14                     u13910:
 19608                           
 19609                           ; BSR set to: 1
 19610                           
 19611                           ; BSR set to: 1
 19612                           
 19613                           ; BSR set to: 1
 19614  016D14  5177               	movf	___fltol@sign1& (0+255),w,b
 19615  016D16  B4D8               	btfsc	status,2,c
 19616  016D18  D008               	goto	l1784
 19617                           
 19618                           ; BSR set to: 1
 19619  016D1A  1F72               	comf	(___fltol@f1+3)& (0+255),f,b
 19620  016D1C  1F71               	comf	(___fltol@f1+2)& (0+255),f,b
 19621  016D1E  1F70               	comf	(___fltol@f1+1)& (0+255),f,b
 19622  016D20  6D6F               	negf	___fltol@f1& (0+255),b
 19623  016D22  0E00               	movlw	0
 19624  016D24  2370               	addwfc	(___fltol@f1+1)& (0+255),f,b
 19625  016D26  2371               	addwfc	(___fltol@f1+2)& (0+255),f,b
 19626  016D28  2372               	addwfc	(___fltol@f1+3)& (0+255),f,b
 19627  016D2A                     l1784:
 19628                           
 19629                           ; BSR set to: 1
 19630                           
 19631                           ; BSR set to: 1
 19632  016D2A  C16F  F16F         	movff	___fltol@f1,?___fltol
 19633  016D2E  C170  F170         	movff	___fltol@f1+1,?___fltol+1
 19634  016D32  C171  F171         	movff	___fltol@f1+2,?___fltol+2
 19635  016D36  C172  F172         	movff	___fltol@f1+3,?___fltol+3
 19636  016D3A  0012               	return	
 19637  016D3C                     __end_of___fltol:
 19638                           	opt stack 0
 19639                           tblptru	equ	0xFF8
 19640                           tblptrh	equ	0xFF7
 19641                           tblptrl	equ	0xFF6
 19642                           tablat	equ	0xFF5
 19643                           prodh	equ	0xFF4
 19644                           prodl	equ	0xFF3
 19645                           intcon	equ	0xFF2
 19646                           indf0	equ	0xFEF
 19647                           postinc0	equ	0xFEE
 19648                           fsr0h	equ	0xFEA
 19649                           fsr0l	equ	0xFE9
 19650                           wreg	equ	0xFE8
 19651                           indf1	equ	0xFE7
 19652                           postdec1	equ	0xFE5
 19653                           plusw1	equ	0xFE3
 19654                           fsr1h	equ	0xFE2
 19655                           fsr1l	equ	0xFE1
 19656                           indf2	equ	0xFDF
 19657                           postinc2	equ	0xFDE
 19658                           postdec2	equ	0xFDD
 19659                           plusw2	equ	0xFDB
 19660                           fsr2h	equ	0xFDA
 19661                           fsr2l	equ	0xFD9
 19662                           status	equ	0xFD8
 19663                           
 19664 ;; *************** function ___flsub *****************
 19665 ;; Defined at:
 19666 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;  b               4   61[BANK1 ] long 
 19669 ;;  a               4   65[BANK1 ] long 
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;		None
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  4   61[BANK1 ] long 
 19674 ;; Registers used:
 19675 ;;		wreg, status,2, status,0, cstack
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/0
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19681 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19684 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19685 ;;Total ram usage:        8 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:   14
 19688 ;; This function calls:
 19689 ;;		___fladd
 19690 ;; This function is called by:
 19691 ;;		_printf
 19692 ;; This function uses a non-reentrant model
 19693 ;;
 19694                           
 19695                           	psect	text44
 19696  017CC0                     __ptext44:
 19697                           	opt stack 0
 19698  017CC0                     ___flsub:
 19699                           	opt stack 13
 19700                           
 19701                           ; BSR set to: 1
 19702                           ;incstack = 0
 19703  017CC0  0E00               	movlw	0
 19704  017CC2  0101               	movlb	1	; () banked
 19705  017CC4  1B41               	xorwf	___flsub@a& (0+255),f,b
 19706  017CC6  0E00               	movlw	0
 19707  017CC8  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 19708  017CCA  0E00               	movlw	0
 19709  017CCC  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 19710  017CCE  0E80               	movlw	128
 19711  017CD0  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 19712                           
 19713                           ; BSR set to: 1
 19714  017CD2  C13D  F129         	movff	___flsub@b,___fladd@b
 19715  017CD6  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 19716  017CDA  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 19717  017CDE  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 19718  017CE2  C141  F12D         	movff	___flsub@a,___fladd@a
 19719  017CE6  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 19720  017CEA  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 19721  017CEE  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 19722  017CF2  EC79  F0A0         	call	___fladd	;wreg free
 19723  017CF6  C129  F13D         	movff	?___fladd,?___flsub
 19724  017CFA  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 19725  017CFE  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 19726  017D02  C12C  F140         	movff	?___fladd+3,?___flsub+3
 19727  017D06  0012               	return	
 19728  017D08                     __end_of___flsub:
 19729                           	opt stack 0
 19730                           tblptru	equ	0xFF8
 19731                           tblptrh	equ	0xFF7
 19732                           tblptrl	equ	0xFF6
 19733                           tablat	equ	0xFF5
 19734                           prodh	equ	0xFF4
 19735                           prodl	equ	0xFF3
 19736                           intcon	equ	0xFF2
 19737                           indf0	equ	0xFEF
 19738                           postinc0	equ	0xFEE
 19739                           fsr0h	equ	0xFEA
 19740                           fsr0l	equ	0xFE9
 19741                           wreg	equ	0xFE8
 19742                           indf1	equ	0xFE7
 19743                           postdec1	equ	0xFE5
 19744                           plusw1	equ	0xFE3
 19745                           fsr1h	equ	0xFE2
 19746                           fsr1l	equ	0xFE1
 19747                           indf2	equ	0xFDF
 19748                           postinc2	equ	0xFDE
 19749                           postdec2	equ	0xFDD
 19750                           plusw2	equ	0xFDB
 19751                           fsr2h	equ	0xFDA
 19752                           fsr2l	equ	0xFD9
 19753                           status	equ	0xFD8
 19754                           
 19755 ;; *************** function ___fladd *****************
 19756 ;; Defined at:
 19757 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19758 ;; Parameters:    Size  Location     Type
 19759 ;;  b               4   41[BANK1 ] long 
 19760 ;;  a               4   45[BANK1 ] long 
 19761 ;; Auto vars:     Size  Location     Type
 19762 ;;  grs             1   60[BANK1 ] unsigned char 
 19763 ;;  bexp            1   59[BANK1 ] unsigned char 
 19764 ;;  aexp            1   58[BANK1 ] unsigned char 
 19765 ;;  signs           1   57[BANK1 ] unsigned char 
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  4   41[BANK1 ] unsigned char 
 19768 ;; Registers used:
 19769 ;;		wreg, status,2, status,0
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19775 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19776 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19777 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19778 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19779 ;;Total ram usage:       20 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:   13
 19782 ;; This function calls:
 19783 ;;		Nothing
 19784 ;; This function is called by:
 19785 ;;		_ringBufferLUT
 19786 ;;		_printf
 19787 ;;		___flsub
 19788 ;; This function uses a non-reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text45
 19792  0140F2                     __ptext45:
 19793                           	opt stack 0
 19794  0140F2                     ___fladd:
 19795                           	opt stack 13
 19796                           
 19797                           ;incstack = 0
 19798  0140F2  0101               	movlb	1	; () banked
 19799  0140F4  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19800  0140F6  0B80               	andlw	128
 19801  0140F8  6F39               	movwf	___fladd@signs& (0+255),b
 19802  0140FA  512C               	movf	(___fladd@b+3)& (0+255),w,b
 19803  0140FC  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 19804  0140FE  6F3B               	movwf	___fladd@bexp& (0+255),b
 19805                           
 19806                           ; BSR set to: 1
 19807  014100  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 19808                           
 19809                           ; BSR set to: 1
 19810  014102  813B               	bsf	___fladd@bexp& (0+255),0,b
 19811                           
 19812                           ; BSR set to: 1
 19813                           
 19814                           ; BSR set to: 1
 19815  014104  513B               	movf	___fladd@bexp& (0+255),w,b
 19816  014106  B4D8               	btfsc	status,2,c
 19817  014108  D00D               	goto	l2013
 19818                           
 19819                           ; BSR set to: 1
 19820  01410A  293B               	incf	___fladd@bexp& (0+255),w,b
 19821  01410C  A4D8               	btfss	status,2,c
 19822  01410E  D008               	goto	l2014
 19823                           
 19824                           ; BSR set to: 1
 19825  014110  0E00               	movlw	0
 19826  014112  6F29               	movwf	___fladd@b& (0+255),b
 19827  014114  0E00               	movlw	0
 19828  014116  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19829  014118  0E00               	movlw	0
 19830  01411A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19831  01411C  0E00               	movlw	0
 19832  01411E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19833  014120                     l2014:
 19834                           
 19835                           ; BSR set to: 1
 19836                           
 19837                           ; BSR set to: 1
 19838  014120  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 19839  014122  D006               	goto	L5
 19840  014124                     l2013:
 19841                           
 19842                           ; BSR set to: 1
 19843                           
 19844                           ; BSR set to: 1
 19845  014124  0E00               	movlw	0
 19846  014126  6F29               	movwf	___fladd@b& (0+255),b
 19847  014128  0E00               	movlw	0
 19848  01412A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 19849  01412C  0E00               	movlw	0
 19850  01412E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 19851  014130                     L5:
 19852  014130  0E00               	movlw	0
 19853  014132  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 19854                           
 19855                           ; BSR set to: 1
 19856                           
 19857                           ; BSR set to: 1
 19858  014134  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19859  014136  0B80               	andlw	128
 19860  014138  6F3A               	movwf	___fladd@aexp& (0+255),b
 19861                           
 19862                           ; BSR set to: 1
 19863  01413A  5139               	movf	___fladd@signs& (0+255),w,b
 19864  01413C  193A               	xorwf	___fladd@aexp& (0+255),w,b
 19865  01413E  A4D8               	btfss	status,2,c
 19866                           
 19867                           ; BSR set to: 1
 19868  014140  8D39               	bsf	___fladd@signs& (0+255),6,b
 19869                           
 19870                           ; BSR set to: 1
 19871                           
 19872                           ; BSR set to: 1
 19873  014142  5130               	movf	(___fladd@a+3)& (0+255),w,b
 19874  014144  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 19875  014146  6F3A               	movwf	___fladd@aexp& (0+255),b
 19876                           
 19877                           ; BSR set to: 1
 19878  014148  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 19879                           
 19880                           ; BSR set to: 1
 19881  01414A  813A               	bsf	___fladd@aexp& (0+255),0,b
 19882                           
 19883                           ; BSR set to: 1
 19884                           
 19885                           ; BSR set to: 1
 19886  01414C  513A               	movf	___fladd@aexp& (0+255),w,b
 19887  01414E  B4D8               	btfsc	status,2,c
 19888  014150  D00D               	goto	l2018
 19889                           
 19890                           ; BSR set to: 1
 19891  014152  293A               	incf	___fladd@aexp& (0+255),w,b
 19892  014154  A4D8               	btfss	status,2,c
 19893  014156  D008               	goto	l2019
 19894                           
 19895                           ; BSR set to: 1
 19896  014158  0E00               	movlw	0
 19897  01415A  6F2D               	movwf	___fladd@a& (0+255),b
 19898  01415C  0E00               	movlw	0
 19899  01415E  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 19900  014160  0E00               	movlw	0
 19901  014162  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 19902  014164  0E00               	movlw	0
 19903  014166  6F30               	movwf	(___fladd@a+3)& (0+255),b
 19904  014168                     l2019:
 19905                           
 19906                           ; BSR set to: 1
 19907                           
 19908                           ; BSR set to: 1
 19909  014168  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 19910  01416A  D006               	goto	L6
 19911  01416C                     l2018:
 19912                           
 19913                           ; BSR set to: 1
 19914                           
 19915                           ; BSR set to: 1
 19916  01416C  0E00               	movlw	0
 19917  01416E  6F2D               	movwf	___fladd@a& (0+255),b
 19918  014170  0E00               	movlw	0
 19919  014172  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 19920  014174  0E00               	movlw	0
 19921  014176  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 19922  014178                     L6:
 19923  014178  0E00               	movlw	0
 19924  01417A  6F30               	movwf	(___fladd@a+3)& (0+255),b
 19925                           
 19926                           ; BSR set to: 1
 19927                           
 19928                           ; BSR set to: 1
 19929  01417C  513B               	movf	___fladd@bexp& (0+255),w,b
 19930  01417E  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 19931  014180  B0D8               	btfsc	status,0,c
 19932  014182  D022               	goto	l2021
 19933                           
 19934                           ; BSR set to: 1
 19935  014184  AD39               	btfss	___fladd@signs& (0+255),6,b
 19936  014186  D002               	goto	l2022
 19937                           
 19938                           ; BSR set to: 1
 19939  014188  0E80               	movlw	128
 19940  01418A  1B39               	xorwf	___fladd@signs& (0+255),f,b
 19941  01418C                     l2022:
 19942                           
 19943                           ; BSR set to: 1
 19944                           
 19945                           ; BSR set to: 1
 19946  01418C  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 19947                           
 19948                           ; BSR set to: 1
 19949  014190  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 19950                           
 19951                           ; BSR set to: 1
 19952  014194  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 19953                           
 19954                           ; BSR set to: 1
 19955  014198  C129  F13C         	movff	___fladd@b,___fladd@grs
 19956                           
 19957                           ; BSR set to: 1
 19958  01419C  C12D  F129         	movff	___fladd@a,___fladd@b
 19959                           
 19960                           ; BSR set to: 1
 19961  0141A0  C13C  F12D         	movff	___fladd@grs,___fladd@a
 19962                           
 19963                           ; BSR set to: 1
 19964  0141A4  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 19965                           
 19966                           ; BSR set to: 1
 19967  0141A8  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 19968                           
 19969                           ; BSR set to: 1
 19970  0141AC  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 19971                           
 19972                           ; BSR set to: 1
 19973  0141B0  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 19974                           
 19975                           ; BSR set to: 1
 19976  0141B4  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 19977                           
 19978                           ; BSR set to: 1
 19979  0141B8  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 19980                           
 19981                           ; BSR set to: 1
 19982  0141BC  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 19983                           
 19984                           ; BSR set to: 1
 19985  0141C0  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 19986                           
 19987                           ; BSR set to: 1
 19988  0141C4  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 19989  0141C8                     l2021:
 19990                           
 19991                           ; BSR set to: 1
 19992                           
 19993                           ; BSR set to: 1
 19994  0141C8  0E00               	movlw	0
 19995  0141CA  6F3C               	movwf	___fladd@grs& (0+255),b
 19996                           
 19997                           ; BSR set to: 1
 19998  0141CC  513B               	movf	___fladd@bexp& (0+255),w,b
 19999  0141CE  6F31               	movwf	??___fladd& (0+255),b
 20000  0141D0  6B32               	clrf	(??___fladd+1)& (0+255),b
 20001  0141D2  1F31               	comf	??___fladd& (0+255),f,b
 20002  0141D4  1F32               	comf	(??___fladd+1)& (0+255),f,b
 20003  0141D6  4B31               	infsnz	??___fladd& (0+255),f,b
 20004  0141D8  2B32               	incf	(??___fladd+1)& (0+255),f,b
 20005  0141DA  513A               	movf	___fladd@aexp& (0+255),w,b
 20006  0141DC  6F33               	movwf	(??___fladd+2)& (0+255),b
 20007  0141DE  6B34               	clrf	(??___fladd+3)& (0+255),b
 20008  0141E0  5131               	movf	??___fladd& (0+255),w,b
 20009  0141E2  2733               	addwf	(??___fladd+2)& (0+255),f,b
 20010  0141E4  5132               	movf	(??___fladd+1)& (0+255),w,b
 20011  0141E6  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 20012  0141E8  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 20013  0141EA  D02C               	goto	l2025
 20014  0141EC  5134               	movf	(??___fladd+3)& (0+255),w,b
 20015  0141EE  E104               	bnz	u12470
 20016  0141F0  0E1A               	movlw	26
 20017  0141F2  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 20018  0141F4  A0D8               	btfss	status,0,c
 20019  0141F6  D026               	goto	l2025
 20020  0141F8                     u12470:
 20021                           
 20022                           ; BSR set to: 1
 20023  0141F8  5129               	movf	___fladd@b& (0+255),w,b
 20024  0141FA  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 20025  0141FC  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 20026  0141FE  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 20027  014200  B4D8               	btfsc	status,2,c
 20028  014202  D002               	goto	u12480
 20029  014204  0E01               	movlw	1
 20030  014206  D001               	goto	u12490
 20031  014208                     u12480:
 20032  014208  0E00               	movlw	0
 20033  01420A                     u12490:
 20034  01420A  6F3C               	movwf	___fladd@grs& (0+255),b
 20035                           
 20036                           ; BSR set to: 1
 20037  01420C  0E00               	movlw	0
 20038  01420E  6F29               	movwf	___fladd@b& (0+255),b
 20039  014210  0E00               	movlw	0
 20040  014212  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20041  014214  0E00               	movlw	0
 20042  014216  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20043  014218  0E00               	movlw	0
 20044  01421A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20045                           
 20046                           ; BSR set to: 1
 20047  01421C  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 20048  014220  D015               	goto	u12520
 20049  014222                     l2026:
 20050                           
 20051                           ; BSR set to: 1
 20052  014222  A13C               	btfss	___fladd@grs& (0+255),0,b
 20053  014224  D005               	goto	l2027
 20054                           
 20055                           ; BSR set to: 1
 20056  014226  90D8               	bcf	status,0,c
 20057  014228  313C               	rrcf	___fladd@grs& (0+255),w,b
 20058  01422A  0901               	iorlw	1
 20059  01422C  6F3C               	movwf	___fladd@grs& (0+255),b
 20060  01422E  D002               	goto	l2028
 20061  014230                     l2027:
 20062                           
 20063                           ; BSR set to: 1
 20064                           
 20065                           ; BSR set to: 1
 20066  014230  90D8               	bcf	status,0,c
 20067  014232  333C               	rrcf	___fladd@grs& (0+255),f,b
 20068  014234                     l2028:
 20069                           
 20070                           ; BSR set to: 1
 20071                           
 20072                           ; BSR set to: 1
 20073  014234  B129               	btfsc	___fladd@b& (0+255),0,b
 20074                           
 20075                           ; BSR set to: 1
 20076  014236  8F3C               	bsf	___fladd@grs& (0+255),7,b
 20077                           
 20078                           ; BSR set to: 1
 20079                           
 20080                           ; BSR set to: 1
 20081  014238  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 20082  01423A  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 20083  01423C  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 20084  01423E  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 20085  014240  3329               	rrcf	___fladd@b& (0+255),f,b
 20086                           
 20087                           ; BSR set to: 1
 20088  014242  2B3B               	incf	___fladd@bexp& (0+255),f,b
 20089  014244                     l2025:
 20090                           
 20091                           ; BSR set to: 1
 20092  014244  513A               	movf	___fladd@aexp& (0+255),w,b
 20093  014246  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 20094  014248  A0D8               	btfss	status,0,c
 20095  01424A  D7EB               	goto	l2026
 20096  01424C                     u12520:
 20097                           
 20098                           ; BSR set to: 1
 20099                           
 20100                           ; BSR set to: 1
 20101  01424C  BD39               	btfsc	___fladd@signs& (0+255),6,b
 20102  01424E  D029               	goto	l2031
 20103                           
 20104                           ; BSR set to: 1
 20105  014250  513B               	movf	___fladd@bexp& (0+255),w,b
 20106  014252  A4D8               	btfss	status,2,c
 20107  014254  D009               	goto	l2032
 20108                           
 20109                           ; BSR set to: 1
 20110  014256  0E00               	movlw	0
 20111  014258  6F29               	movwf	?___fladd& (0+255),b
 20112  01425A  0E00               	movlw	0
 20113  01425C  6F2A               	movwf	(?___fladd+1)& (0+255),b
 20114  01425E  0E00               	movlw	0
 20115  014260  6F2B               	movwf	(?___fladd+2)& (0+255),b
 20116  014262  0E00               	movlw	0
 20117  014264  6F2C               	movwf	(?___fladd+3)& (0+255),b
 20118                           
 20119                           ; BSR set to: 1
 20120  014266  0012               	return	
 20121  014268                     l2032:
 20122                           
 20123                           ; BSR set to: 1
 20124                           
 20125                           ; BSR set to: 1
 20126  014268  512D               	movf	___fladd@a& (0+255),w,b
 20127  01426A  2729               	addwf	___fladd@b& (0+255),f,b
 20128  01426C  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20129  01426E  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 20130  014270  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20131  014272  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 20132  014274  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20133  014276  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 20134                           
 20135                           ; BSR set to: 1
 20136  014278  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 20137  01427A  D083               	goto	u12650
 20138                           
 20139                           ; BSR set to: 1
 20140  01427C  A13C               	btfss	___fladd@grs& (0+255),0,b
 20141  01427E  D006               	goto	l2035
 20142                           
 20143                           ; BSR set to: 1
 20144  014280  90D8               	bcf	status,0,c
 20145  014282  333C               	rrcf	___fladd@grs& (0+255),f,b
 20146  014284  513C               	movf	___fladd@grs& (0+255),w,b
 20147  014286  0901               	iorlw	1
 20148  014288  6F3C               	movwf	___fladd@grs& (0+255),b
 20149  01428A  D002               	goto	l2036
 20150  01428C                     l2035:
 20151                           
 20152                           ; BSR set to: 1
 20153                           
 20154                           ; BSR set to: 1
 20155  01428C  90D8               	bcf	status,0,c
 20156  01428E  333C               	rrcf	___fladd@grs& (0+255),f,b
 20157  014290                     l2036:
 20158                           
 20159                           ; BSR set to: 1
 20160                           
 20161                           ; BSR set to: 1
 20162  014290  B129               	btfsc	___fladd@b& (0+255),0,b
 20163                           
 20164                           ; BSR set to: 1
 20165  014292  8F3C               	bsf	___fladd@grs& (0+255),7,b
 20166                           
 20167                           ; BSR set to: 1
 20168                           
 20169                           ; BSR set to: 1
 20170  014294  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 20171  014296  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 20172  014298  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 20173  01429A  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 20174  01429C  3329               	rrcf	___fladd@b& (0+255),f,b
 20175                           
 20176                           ; BSR set to: 1
 20177  01429E  2B3B               	incf	___fladd@bexp& (0+255),f,b
 20178                           
 20179                           ; BSR set to: 1
 20180  0142A0  D070               	goto	u12650
 20181  0142A2                     l2031:
 20182                           
 20183                           ; BSR set to: 1
 20184                           
 20185                           ; BSR set to: 1
 20186  0142A2  512D               	movf	___fladd@a& (0+255),w,b
 20187  0142A4  5D29               	subwf	___fladd@b& (0+255),w,b
 20188  0142A6  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20189  0142A8  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 20190  0142AA  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20191  0142AC  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 20192  0142AE  512C               	movf	(___fladd@b+3)& (0+255),w,b
 20193  0142B0  0A80               	xorlw	128
 20194  0142B2  6F31               	movwf	??___fladd& (0+255),b
 20195  0142B4  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20196  0142B6  0A80               	xorlw	128
 20197  0142B8  5931               	subwfb	??___fladd& (0+255),w,b
 20198  0142BA  B0D8               	btfsc	status,0,c
 20199  0142BC  D036               	goto	l2039
 20200                           
 20201                           ; BSR set to: 1
 20202  0142BE  C129  F131         	movff	___fladd@b,??___fladd
 20203  0142C2  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 20204  0142C6  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 20205  0142CA  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 20206  0142CE  1F31               	comf	??___fladd& (0+255),f,b
 20207  0142D0  1F32               	comf	(??___fladd+1)& (0+255),f,b
 20208  0142D2  1F33               	comf	(??___fladd+2)& (0+255),f,b
 20209  0142D4  1F34               	comf	(??___fladd+3)& (0+255),f,b
 20210  0142D6  2B31               	incf	??___fladd& (0+255),f,b
 20211  0142D8  0E00               	movlw	0
 20212  0142DA  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 20213  0142DC  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 20214  0142DE  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 20215  0142E0  512D               	movf	___fladd@a& (0+255),w,b
 20216  0142E2  2531               	addwf	??___fladd& (0+255),w,b
 20217  0142E4  6F35               	movwf	(??___fladd+4)& (0+255),b
 20218  0142E6  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20219  0142E8  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 20220  0142EA  6F36               	movwf	(??___fladd+5)& (0+255),b
 20221  0142EC  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20222  0142EE  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 20223  0142F0  6F37               	movwf	(??___fladd+6)& (0+255),b
 20224  0142F2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20225  0142F4  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 20226  0142F6  6F38               	movwf	(??___fladd+7)& (0+255),b
 20227  0142F8  0EFF               	movlw	255
 20228  0142FA  2535               	addwf	(??___fladd+4)& (0+255),w,b
 20229  0142FC  6F29               	movwf	___fladd@b& (0+255),b
 20230  0142FE  0EFF               	movlw	255
 20231  014300  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 20232  014302  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20233  014304  0EFF               	movlw	255
 20234  014306  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 20235  014308  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20236  01430A  0EFF               	movlw	255
 20237  01430C  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 20238  01430E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20239  014310  0E80               	movlw	128
 20240  014312  1B39               	xorwf	___fladd@signs& (0+255),f,b
 20241                           
 20242                           ; BSR set to: 1
 20243  014314  6D3C               	negf	___fladd@grs& (0+255),b
 20244                           
 20245                           ; BSR set to: 1
 20246  014316  513C               	movf	___fladd@grs& (0+255),w,b
 20247  014318  A4D8               	btfss	status,2,c
 20248  01431A  D00F               	goto	l2041
 20249                           
 20250                           ; BSR set to: 1
 20251  01431C  0E01               	movlw	1
 20252  01431E  2729               	addwf	___fladd@b& (0+255),f,b
 20253  014320  0E00               	movlw	0
 20254  014322  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 20255  014324  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 20256  014326  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 20257                           
 20258                           ; BSR set to: 1
 20259  014328  D008               	goto	l2041
 20260  01432A                     l2039:
 20261                           
 20262                           ; BSR set to: 1
 20263                           
 20264                           ; BSR set to: 1
 20265  01432A  512D               	movf	___fladd@a& (0+255),w,b
 20266  01432C  5F29               	subwf	___fladd@b& (0+255),f,b
 20267  01432E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 20268  014330  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 20269  014332  512F               	movf	(___fladd@a+2)& (0+255),w,b
 20270  014334  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 20271  014336  5130               	movf	(___fladd@a+3)& (0+255),w,b
 20272  014338  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 20273  01433A                     l2041:
 20274                           
 20275                           ; BSR set to: 1
 20276  01433A  5129               	movf	___fladd@b& (0+255),w,b
 20277  01433C  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 20278  01433E  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 20279  014340  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 20280  014342  A4D8               	btfss	status,2,c
 20281  014344  D01C               	goto	l2048
 20282                           
 20283                           ; BSR set to: 1
 20284  014346  513C               	movf	___fladd@grs& (0+255),w,b
 20285  014348  A4D8               	btfss	status,2,c
 20286  01434A  D019               	goto	l2048
 20287                           
 20288                           ; BSR set to: 1
 20289  01434C  0E00               	movlw	0
 20290  01434E  6F29               	movwf	?___fladd& (0+255),b
 20291  014350  0E00               	movlw	0
 20292  014352  6F2A               	movwf	(?___fladd+1)& (0+255),b
 20293  014354  0E00               	movlw	0
 20294  014356  6F2B               	movwf	(?___fladd+2)& (0+255),b
 20295  014358  0E00               	movlw	0
 20296  01435A  6F2C               	movwf	(?___fladd+3)& (0+255),b
 20297                           
 20298                           ; BSR set to: 1
 20299  01435C  0012               	return	
 20300  01435E                     
 20301                           ; BSR set to: 1
 20302                           
 20303                           ; BSR set to: 1
 20304  01435E  90D8               	bcf	status,0,c
 20305  014360  3729               	rlcf	___fladd@b& (0+255),f,b
 20306  014362  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 20307  014364  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 20308  014366  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 20309                           
 20310                           ; BSR set to: 1
 20311  014368  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 20312                           
 20313                           ; BSR set to: 1
 20314  01436A  8129               	bsf	___fladd@b& (0+255),0,b
 20315                           
 20316                           ; BSR set to: 1
 20317                           
 20318                           ; BSR set to: 1
 20319  01436C  A13C               	btfss	___fladd@grs& (0+255),0,b
 20320  01436E  D002               	goto	l2046
 20321                           
 20322                           ; BSR set to: 1
 20323  014370  80D8               	bsf	status,0,c
 20324  014372  D001               	goto	L7
 20325  014374                     l2046:
 20326                           
 20327                           ; BSR set to: 1
 20328                           
 20329                           ; BSR set to: 1
 20330  014374  90D8               	bcf	status,0,c
 20331  014376                     L7:
 20332  014376  373C               	rlcf	___fladd@grs& (0+255),f,b
 20333                           
 20334                           ; BSR set to: 1
 20335                           
 20336                           ; BSR set to: 1
 20337  014378  513B               	movf	___fladd@bexp& (0+255),w,b
 20338  01437A  A4D8               	btfss	status,2,c
 20339                           
 20340                           ; BSR set to: 1
 20341  01437C  073B               	decf	___fladd@bexp& (0+255),f,b
 20342  01437E                     l2048:
 20343                           
 20344                           ; BSR set to: 1
 20345                           
 20346                           ; BSR set to: 1
 20347                           
 20348                           ; BSR set to: 1
 20349  01437E  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 20350  014380  D7EE               	goto	l2044
 20351  014382                     u12650:
 20352                           
 20353                           ; BSR set to: 1
 20354                           
 20355                           ; BSR set to: 1
 20356                           
 20357                           ; BSR set to: 1
 20358  014382  0E00               	movlw	0
 20359  014384  6F3A               	movwf	___fladd@aexp& (0+255),b
 20360                           
 20361                           ; BSR set to: 1
 20362  014386  AF3C               	btfss	___fladd@grs& (0+255),7,b
 20363  014388  D00A               	goto	l2053
 20364                           
 20365                           ; BSR set to: 1
 20366  01438A  C13C  F131         	movff	___fladd@grs,??___fladd
 20367  01438E  0E7F               	movlw	127
 20368  014390  1731               	andwf	??___fladd& (0+255),f,b
 20369  014392  A4D8               	btfss	status,2,c
 20370  014394  D002               	goto	u12680
 20371                           
 20372                           ; BSR set to: 1
 20373                           
 20374                           ; BSR set to: 1
 20375  014396  A129               	btfss	___fladd@b& (0+255),0,b
 20376  014398  D002               	goto	l2053
 20377  01439A                     u12680:
 20378                           
 20379                           ; BSR set to: 1
 20380  01439A  0E01               	movlw	1
 20381  01439C  6F3A               	movwf	___fladd@aexp& (0+255),b
 20382  01439E                     l2053:
 20383                           
 20384                           ; BSR set to: 1
 20385                           
 20386                           ; BSR set to: 1
 20387                           
 20388                           ; BSR set to: 1
 20389  01439E  513A               	movf	___fladd@aexp& (0+255),w,b
 20390  0143A0  B4D8               	btfsc	status,2,c
 20391  0143A2  D020               	goto	l2056
 20392                           
 20393                           ; BSR set to: 1
 20394  0143A4  0E01               	movlw	1
 20395  0143A6  2729               	addwf	___fladd@b& (0+255),f,b
 20396  0143A8  0E00               	movlw	0
 20397  0143AA  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 20398  0143AC  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 20399  0143AE  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 20400                           
 20401                           ; BSR set to: 1
 20402  0143B0  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 20403  0143B2  D018               	goto	l2056
 20404                           
 20405                           ; BSR set to: 1
 20406  0143B4  C129  F131         	movff	___fladd@b,??___fladd
 20407  0143B8  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 20408  0143BC  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 20409  0143C0  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 20410  0143C4  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 20411  0143C6  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 20412  0143C8  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 20413  0143CA  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 20414  0143CC  3331               	rrcf	??___fladd& (0+255),f,b
 20415  0143CE  C131  F129         	movff	??___fladd,___fladd@b
 20416  0143D2  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 20417  0143D6  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 20418  0143DA  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 20419  0143DE  293B               	incf	___fladd@bexp& (0+255),w,b
 20420  0143E0  A4D8               	btfss	status,2,c
 20421                           
 20422                           ; BSR set to: 1
 20423  0143E2  2B3B               	incf	___fladd@bexp& (0+255),f,b
 20424  0143E4                     l2056:
 20425                           
 20426                           ; BSR set to: 1
 20427                           
 20428                           ; BSR set to: 1
 20429                           
 20430                           ; BSR set to: 1
 20431                           
 20432                           ; BSR set to: 1
 20433  0143E4  293B               	incf	___fladd@bexp& (0+255),w,b
 20434  0143E6  B4D8               	btfsc	status,2,c
 20435  0143E8  D003               	goto	u12730
 20436                           
 20437                           ; BSR set to: 1
 20438  0143EA  513B               	movf	___fladd@bexp& (0+255),w,b
 20439  0143EC  A4D8               	btfss	status,2,c
 20440  0143EE  D00D               	goto	l2060
 20441  0143F0                     u12730:
 20442                           
 20443                           ; BSR set to: 1
 20444                           
 20445                           ; BSR set to: 1
 20446  0143F0  0E00               	movlw	0
 20447  0143F2  6F29               	movwf	___fladd@b& (0+255),b
 20448  0143F4  0E00               	movlw	0
 20449  0143F6  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 20450  0143F8  0E00               	movlw	0
 20451  0143FA  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 20452  0143FC  0E00               	movlw	0
 20453  0143FE  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20454  014400  513B               	movf	___fladd@bexp& (0+255),w,b
 20455  014402  A4D8               	btfss	status,2,c
 20456  014404  D002               	goto	l2060
 20457                           
 20458                           ; BSR set to: 1
 20459  014406  0E00               	movlw	0
 20460  014408  6F39               	movwf	___fladd@signs& (0+255),b
 20461  01440A                     l2060:
 20462                           
 20463                           ; BSR set to: 1
 20464                           
 20465                           ; BSR set to: 1
 20466                           
 20467                           ; BSR set to: 1
 20468  01440A  A13B               	btfss	___fladd@bexp& (0+255),0,b
 20469  01440C  D002               	goto	l2061
 20470                           
 20471                           ; BSR set to: 1
 20472  01440E  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 20473  014410  D001               	goto	l2062
 20474  014412                     l2061:
 20475                           
 20476                           ; BSR set to: 1
 20477                           
 20478                           ; BSR set to: 1
 20479  014412  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 20480  014414                     l2062:
 20481                           
 20482                           ; BSR set to: 1
 20483                           
 20484                           ; BSR set to: 1
 20485  014414  90D8               	bcf	status,0,c
 20486  014416  313B               	rrcf	___fladd@bexp& (0+255),w,b
 20487  014418  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 20488                           
 20489                           ; BSR set to: 1
 20490  01441A  BF39               	btfsc	___fladd@signs& (0+255),7,b
 20491                           
 20492                           ; BSR set to: 1
 20493  01441C  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 20494                           
 20495                           ; BSR set to: 1
 20496                           
 20497                           ; BSR set to: 1
 20498  01441E  C129  F129         	movff	___fladd@b,?___fladd
 20499  014422  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 20500  014426  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 20501  01442A  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 20502  01442E  0012               	return	
 20503  014430                     __end_of___fladd:
 20504                           	opt stack 0
 20505                           tblptru	equ	0xFF8
 20506                           tblptrh	equ	0xFF7
 20507                           tblptrl	equ	0xFF6
 20508                           tablat	equ	0xFF5
 20509                           prodh	equ	0xFF4
 20510                           prodl	equ	0xFF3
 20511                           intcon	equ	0xFF2
 20512                           indf0	equ	0xFEF
 20513                           postinc0	equ	0xFEE
 20514                           fsr0h	equ	0xFEA
 20515                           fsr0l	equ	0xFE9
 20516                           wreg	equ	0xFE8
 20517                           indf1	equ	0xFE7
 20518                           postdec1	equ	0xFE5
 20519                           plusw1	equ	0xFE3
 20520                           fsr1h	equ	0xFE2
 20521                           fsr1l	equ	0xFE1
 20522                           indf2	equ	0xFDF
 20523                           postinc2	equ	0xFDE
 20524                           postdec2	equ	0xFDD
 20525                           plusw2	equ	0xFDB
 20526                           fsr2h	equ	0xFDA
 20527                           fsr2l	equ	0xFD9
 20528                           status	equ	0xFD8
 20529                           
 20530 ;; *************** function ___flneg *****************
 20531 ;; Defined at:
 20532 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 20533 ;; Parameters:    Size  Location     Type
 20534 ;;  f1              4   37[BANK1 ] unsigned char 
 20535 ;; Auto vars:     Size  Location     Type
 20536 ;;		None
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  4   37[BANK1 ] unsigned char 
 20539 ;; Registers used:
 20540 ;;		wreg, status,2, status,0
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/0
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20546 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20549 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20550 ;;Total ram usage:        4 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:   13
 20553 ;; This function calls:
 20554 ;;		Nothing
 20555 ;; This function is called by:
 20556 ;;		_ringBufferLUT
 20557 ;;		_printf
 20558 ;; This function uses a non-reentrant model
 20559 ;;
 20560                           
 20561                           	psect	text46
 20562  017FFC                     __ptext46:
 20563                           	opt stack 0
 20564  017FFC                     ___flneg:
 20565                           	opt stack 14
 20566                           
 20567                           ; BSR set to: 1
 20568                           ;incstack = 0
 20569  017FFC  0101               	movlb	1	; () banked
 20570  017FFE  5125               	movf	___flneg@f1& (0+255),w,b
 20571  018000  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 20572  018002  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 20573  018004  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 20574  018006  B4D8               	btfsc	status,2,c
 20575  018008  D008               	goto	l1750
 20576                           
 20577                           ; BSR set to: 1
 20578  01800A  0E00               	movlw	0
 20579  01800C  1B25               	xorwf	___flneg@f1& (0+255),f,b
 20580  01800E  0E00               	movlw	0
 20581  018010  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 20582  018012  0E00               	movlw	0
 20583  018014  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 20584  018016  0E80               	movlw	128
 20585  018018  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 20586  01801A                     l1750:
 20587                           
 20588                           ; BSR set to: 1
 20589                           
 20590                           ; BSR set to: 1
 20591  01801A  C125  F125         	movff	___flneg@f1,?___flneg
 20592  01801E  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 20593  018022  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 20594  018026  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 20595  01802A  0012               	return	
 20596  01802C                     __end_of___flneg:
 20597                           	opt stack 0
 20598                           tblptru	equ	0xFF8
 20599                           tblptrh	equ	0xFF7
 20600                           tblptrl	equ	0xFF6
 20601                           tablat	equ	0xFF5
 20602                           prodh	equ	0xFF4
 20603                           prodl	equ	0xFF3
 20604                           intcon	equ	0xFF2
 20605                           indf0	equ	0xFEF
 20606                           postinc0	equ	0xFEE
 20607                           fsr0h	equ	0xFEA
 20608                           fsr0l	equ	0xFE9
 20609                           wreg	equ	0xFE8
 20610                           indf1	equ	0xFE7
 20611                           postdec1	equ	0xFE5
 20612                           plusw1	equ	0xFE3
 20613                           fsr1h	equ	0xFE2
 20614                           fsr1l	equ	0xFE1
 20615                           indf2	equ	0xFDF
 20616                           postinc2	equ	0xFDE
 20617                           postdec2	equ	0xFDD
 20618                           plusw2	equ	0xFDB
 20619                           fsr2h	equ	0xFDA
 20620                           fsr2l	equ	0xFD9
 20621                           status	equ	0xFD8
 20622                           
 20623 ;; *************** function ___flge *****************
 20624 ;; Defined at:
 20625 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;  ff1             4   23[BANK1 ] unsigned char 
 20628 ;;  ff2             4   27[BANK1 ] unsigned char 
 20629 ;; Auto vars:     Size  Location     Type
 20630 ;;		None
 20631 ;; Return value:  Size  Location     Type
 20632 ;;		None               void
 20633 ;; Registers used:
 20634 ;;		wreg, status,2, status,0
 20635 ;; Tracked objects:
 20636 ;;		On entry : 0/0
 20637 ;;		On exit  : 0/0
 20638 ;;		Unchanged: 0/0
 20639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20640 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20642 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20643 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20644 ;;Total ram usage:       12 bytes
 20645 ;; Hardware stack levels used:    1
 20646 ;; Hardware stack levels required when called:   13
 20647 ;; This function calls:
 20648 ;;		Nothing
 20649 ;; This function is called by:
 20650 ;;		_printf
 20651 ;; This function uses a non-reentrant model
 20652 ;;
 20653                           
 20654                           	psect	text47
 20655  0166EE                     __ptext47:
 20656                           	opt stack 0
 20657  0166EE                     ___flge:
 20658                           	opt stack 14
 20659                           
 20660                           ; BSR set to: 1
 20661                           ;incstack = 0
 20662  0166EE  0E00               	movlw	0
 20663  0166F0  0101               	movlb	1	; () banked
 20664  0166F2  1517               	andwf	___flge@ff1& (0+255),w,b
 20665  0166F4  6F1F               	movwf	??___flge& (0+255),b
 20666  0166F6  0E00               	movlw	0
 20667  0166F8  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 20668  0166FA  6F20               	movwf	(??___flge+1)& (0+255),b
 20669  0166FC  0E80               	movlw	128
 20670  0166FE  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 20671  016700  6F21               	movwf	(??___flge+2)& (0+255),b
 20672  016702  0E7F               	movlw	127
 20673  016704  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 20674  016706  6F22               	movwf	(??___flge+3)& (0+255),b
 20675  016708  511F               	movf	??___flge& (0+255),w,b
 20676  01670A  1120               	iorwf	(??___flge+1)& (0+255),w,b
 20677  01670C  1121               	iorwf	(??___flge+2)& (0+255),w,b
 20678  01670E  1122               	iorwf	(??___flge+3)& (0+255),w,b
 20679  016710  A4D8               	btfss	status,2,c
 20680  016712  D008               	goto	l1743
 20681                           
 20682                           ; BSR set to: 1
 20683  016714  0E00               	movlw	0
 20684  016716  6F17               	movwf	___flge@ff1& (0+255),b
 20685  016718  0E00               	movlw	0
 20686  01671A  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 20687  01671C  0E00               	movlw	0
 20688  01671E  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 20689  016720  0E00               	movlw	0
 20690  016722  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 20691  016724                     l1743:
 20692                           
 20693                           ; BSR set to: 1
 20694                           
 20695                           ; BSR set to: 1
 20696  016724  0E00               	movlw	0
 20697  016726  151B               	andwf	___flge@ff2& (0+255),w,b
 20698  016728  6F1F               	movwf	??___flge& (0+255),b
 20699  01672A  0E00               	movlw	0
 20700  01672C  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 20701  01672E  6F20               	movwf	(??___flge+1)& (0+255),b
 20702  016730  0E80               	movlw	128
 20703  016732  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 20704  016734  6F21               	movwf	(??___flge+2)& (0+255),b
 20705  016736  0E7F               	movlw	127
 20706  016738  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 20707  01673A  6F22               	movwf	(??___flge+3)& (0+255),b
 20708  01673C  511F               	movf	??___flge& (0+255),w,b
 20709  01673E  1120               	iorwf	(??___flge+1)& (0+255),w,b
 20710  016740  1121               	iorwf	(??___flge+2)& (0+255),w,b
 20711  016742  1122               	iorwf	(??___flge+3)& (0+255),w,b
 20712  016744  A4D8               	btfss	status,2,c
 20713  016746  D008               	goto	l1744
 20714                           
 20715                           ; BSR set to: 1
 20716  016748  0E00               	movlw	0
 20717  01674A  6F1B               	movwf	___flge@ff2& (0+255),b
 20718  01674C  0E00               	movlw	0
 20719  01674E  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20720  016750  0E00               	movlw	0
 20721  016752  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20722  016754  0E00               	movlw	0
 20723  016756  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20724  016758                     l1744:
 20725                           
 20726                           ; BSR set to: 1
 20727                           
 20728                           ; BSR set to: 1
 20729  016758  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 20730  01675A  D01D               	goto	l1745
 20731                           
 20732                           ; BSR set to: 1
 20733  01675C  C117  F11F         	movff	___flge@ff1,??___flge
 20734  016760  C118  F120         	movff	___flge@ff1+1,??___flge+1
 20735  016764  C119  F121         	movff	___flge@ff1+2,??___flge+2
 20736  016768  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 20737  01676C  1F1F               	comf	??___flge& (0+255),f,b
 20738  01676E  1F20               	comf	(??___flge+1)& (0+255),f,b
 20739  016770  1F21               	comf	(??___flge+2)& (0+255),f,b
 20740  016772  1F22               	comf	(??___flge+3)& (0+255),f,b
 20741  016774  2B1F               	incf	??___flge& (0+255),f,b
 20742  016776  0E00               	movlw	0
 20743  016778  2320               	addwfc	(??___flge+1)& (0+255),f,b
 20744  01677A  2321               	addwfc	(??___flge+2)& (0+255),f,b
 20745  01677C  2322               	addwfc	(??___flge+3)& (0+255),f,b
 20746  01677E  0E00               	movlw	0
 20747  016780  251F               	addwf	??___flge& (0+255),w,b
 20748  016782  6F17               	movwf	___flge@ff1& (0+255),b
 20749  016784  0E00               	movlw	0
 20750  016786  2120               	addwfc	(??___flge+1)& (0+255),w,b
 20751  016788  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 20752  01678A  0E00               	movlw	0
 20753  01678C  2121               	addwfc	(??___flge+2)& (0+255),w,b
 20754  01678E  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 20755  016790  0E80               	movlw	128
 20756  016792  2122               	addwfc	(??___flge+3)& (0+255),w,b
 20757  016794  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 20758  016796                     l1745:
 20759                           
 20760                           ; BSR set to: 1
 20761                           
 20762                           ; BSR set to: 1
 20763  016796  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 20764  016798  D01D               	goto	l1746
 20765                           
 20766                           ; BSR set to: 1
 20767  01679A  C11B  F11F         	movff	___flge@ff2,??___flge
 20768  01679E  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 20769  0167A2  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 20770  0167A6  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 20771  0167AA  1F1F               	comf	??___flge& (0+255),f,b
 20772  0167AC  1F20               	comf	(??___flge+1)& (0+255),f,b
 20773  0167AE  1F21               	comf	(??___flge+2)& (0+255),f,b
 20774  0167B0  1F22               	comf	(??___flge+3)& (0+255),f,b
 20775  0167B2  2B1F               	incf	??___flge& (0+255),f,b
 20776  0167B4  0E00               	movlw	0
 20777  0167B6  2320               	addwfc	(??___flge+1)& (0+255),f,b
 20778  0167B8  2321               	addwfc	(??___flge+2)& (0+255),f,b
 20779  0167BA  2322               	addwfc	(??___flge+3)& (0+255),f,b
 20780  0167BC  0E00               	movlw	0
 20781  0167BE  251F               	addwf	??___flge& (0+255),w,b
 20782  0167C0  6F1B               	movwf	___flge@ff2& (0+255),b
 20783  0167C2  0E00               	movlw	0
 20784  0167C4  2120               	addwfc	(??___flge+1)& (0+255),w,b
 20785  0167C6  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20786  0167C8  0E00               	movlw	0
 20787  0167CA  2121               	addwfc	(??___flge+2)& (0+255),w,b
 20788  0167CC  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20789  0167CE  0E80               	movlw	128
 20790  0167D0  2122               	addwfc	(??___flge+3)& (0+255),w,b
 20791  0167D2  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20792  0167D4                     l1746:
 20793                           
 20794                           ; BSR set to: 1
 20795  0167D4  0E00               	movlw	0
 20796  0167D6  1B17               	xorwf	___flge@ff1& (0+255),f,b
 20797  0167D8  0E00               	movlw	0
 20798  0167DA  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20799  0167DC  0E00               	movlw	0
 20800  0167DE  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20801  0167E0  0E80               	movlw	128
 20802  0167E2  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20803  0167E4  0E00               	movlw	0
 20804  0167E6  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 20805  0167E8  0E00               	movlw	0
 20806  0167EA  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20807  0167EC  0E00               	movlw	0
 20808  0167EE  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20809  0167F0  0E80               	movlw	128
 20810  0167F2  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20811  0167F4  511B               	movf	___flge@ff2& (0+255),w,b
 20812  0167F6  5D17               	subwf	___flge@ff1& (0+255),w,b
 20813  0167F8  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 20814  0167FA  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20815  0167FC  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 20816  0167FE  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20817  016800  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 20818  016802  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20819  016804  B0D8               	btfsc	status,0,c
 20820  016806  D002               	goto	l10430
 20821                           
 20822                           ; BSR set to: 1
 20823  016808  90D8               	bcf	status,0,c
 20824  01680A  0012               	return	
 20825  01680C                     l10430:
 20826                           
 20827                           ; BSR set to: 1
 20828                           
 20829                           ; BSR set to: 1
 20830  01680C  80D8               	bsf	status,0,c
 20831                           
 20832                           ; BSR set to: 1
 20833  01680E  0012               	return	
 20834  016810                     __end_of___flge:
 20835                           	opt stack 0
 20836                           tblptru	equ	0xFF8
 20837                           tblptrh	equ	0xFF7
 20838                           tblptrl	equ	0xFF6
 20839                           tablat	equ	0xFF5
 20840                           prodh	equ	0xFF4
 20841                           prodl	equ	0xFF3
 20842                           intcon	equ	0xFF2
 20843                           indf0	equ	0xFEF
 20844                           postinc0	equ	0xFEE
 20845                           fsr0h	equ	0xFEA
 20846                           fsr0l	equ	0xFE9
 20847                           wreg	equ	0xFE8
 20848                           indf1	equ	0xFE7
 20849                           postdec1	equ	0xFE5
 20850                           plusw1	equ	0xFE3
 20851                           fsr1h	equ	0xFE2
 20852                           fsr1l	equ	0xFE1
 20853                           indf2	equ	0xFDF
 20854                           postinc2	equ	0xFDE
 20855                           postdec2	equ	0xFDD
 20856                           plusw2	equ	0xFDB
 20857                           fsr2h	equ	0xFDA
 20858                           fsr2l	equ	0xFD9
 20859                           status	equ	0xFD8
 20860                           
 20861 ;; *************** function _getCauseOfReset *****************
 20862 ;; Defined at:
 20863 ;;		line 11 in file "cause_of_reset.c"
 20864 ;; Parameters:    Size  Location     Type
 20865 ;;		None
 20866 ;; Auto vars:     Size  Location     Type
 20867 ;;  return_reset    1   23[BANK1 ] enum E17455
 20868 ;; Return value:  Size  Location     Type
 20869 ;;                  1    wreg      enum E17948
 20870 ;; Registers used:
 20871 ;;		wreg, status,2
 20872 ;; Tracked objects:
 20873 ;;		On entry : 0/0
 20874 ;;		On exit  : 0/0
 20875 ;;		Unchanged: 0/0
 20876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20878 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20880 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20881 ;;Total ram usage:        1 bytes
 20882 ;; Hardware stack levels used:    1
 20883 ;; Hardware stack levels required when called:   13
 20884 ;; This function calls:
 20885 ;;		Nothing
 20886 ;; This function is called by:
 20887 ;;		_main
 20888 ;; This function uses a non-reentrant model
 20889 ;;
 20890                           
 20891                           	psect	text48
 20892  017A56                     __ptext48:
 20893                           	opt stack 0
 20894  017A56                     _getCauseOfReset:
 20895                           	opt stack 17
 20896                           
 20897                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 20898                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 20899                           
 20900                           ; BSR set to: 1
 20901                           ;incstack = 0
 20902  017A56  AED7               	btfss	4055,7,c	;volatile
 20903  017A58  D002               	goto	l1302
 20904                           
 20905                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 20906  017A5A  0E07               	movlw	7
 20907  017A5C  D019               	goto	L14
 20908  017A5E                     l1302:
 20909                           
 20910                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 20911  017A5E  ACD7               	btfss	4055,6,c	;volatile
 20912  017A60  D002               	goto	l1304
 20913                           
 20914                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 20915  017A62  0E08               	movlw	8
 20916  017A64  D015               	goto	L14
 20917  017A66                     l1304:
 20918                           
 20919                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 20920  017A66  BAD7               	btfsc	4055,5,c	;volatile
 20921  017A68  D002               	goto	l1306
 20922                           
 20923                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 20924  017A6A  0E05               	movlw	5
 20925  017A6C  D011               	goto	L14
 20926  017A6E                     l1306:
 20927                           
 20928                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 20929  017A6E  B6D7               	btfsc	4055,3,c	;volatile
 20930  017A70  D002               	goto	l1308
 20931                           
 20932                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 20933  017A72  0E03               	movlw	3
 20934  017A74  D00D               	goto	L14
 20935  017A76                     l1308:
 20936                           
 20937                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 20938  017A76  B4D7               	btfsc	4055,2,c	;volatile
 20939  017A78  D002               	goto	l1310
 20940                           
 20941                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 20942  017A7A  0E06               	movlw	6
 20943  017A7C  D009               	goto	L14
 20944  017A7E                     l1310:
 20945                           
 20946                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 20947  017A7E  B2D7               	btfsc	4055,1,c	;volatile
 20948  017A80  D002               	goto	l1312
 20949                           
 20950                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 20951  017A82  0E01               	movlw	1
 20952  017A84  D005               	goto	L14
 20953  017A86                     l1312:
 20954                           
 20955                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 20956  017A86  B0D7               	btfsc	4055,0,c	;volatile
 20957  017A88  D002               	goto	l1314
 20958                           
 20959                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 20960  017A8A  0E02               	movlw	2
 20961  017A8C  D001               	goto	L14
 20962  017A8E                     l1314:
 20963                           
 20964                           ;cause_of_reset.c: 60: else {
 20965                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 20966                           
 20967                           ; BSR set to: 1
 20968  017A8E  0E00               	movlw	0
 20969  017A90                     L14:
 20970  017A90  0101               	movlb	1	; () banked
 20971  017A92  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 20972                           
 20973                           ; BSR set to: 1
 20974                           ;cause_of_reset.c: 64: }
 20975                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 20976                           
 20977                           ; BSR set to: 1
 20978                           
 20979                           ; BSR set to: 1
 20980                           
 20981                           ; BSR set to: 1
 20982                           
 20983                           ; BSR set to: 1
 20984                           
 20985                           ; BSR set to: 1
 20986                           
 20987                           ; BSR set to: 1
 20988                           
 20989                           ; BSR set to: 1
 20990  017A94  9ED7               	bcf	4055,7,c	;volatile
 20991                           
 20992                           ; BSR set to: 1
 20993                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 20994  017A96  9CD7               	bcf	4055,6,c	;volatile
 20995                           
 20996                           ; BSR set to: 1
 20997                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 20998  017A98  8AD7               	bsf	4055,5,c	;volatile
 20999                           
 21000                           ; BSR set to: 1
 21001                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 21002  017A9A  88D7               	bsf	4055,4,c	;volatile
 21003                           
 21004                           ; BSR set to: 1
 21005                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 21006  017A9C  86D7               	bsf	4055,3,c	;volatile
 21007                           
 21008                           ; BSR set to: 1
 21009                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 21010  017A9E  84D7               	bsf	4055,2,c	;volatile
 21011                           
 21012                           ; BSR set to: 1
 21013                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 21014  017AA0  82D7               	bsf	4055,1,c	;volatile
 21015                           
 21016                           ; BSR set to: 1
 21017                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 21018  017AA2  80D7               	bsf	4055,0,c	;volatile
 21019                           
 21020                           ;cause_of_reset.c: 76: return return_reset_cause;
 21021  017AA4  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 21022  017AA6  0012               	return	
 21023  017AA8                     __end_of_getCauseOfReset:
 21024                           	opt stack 0
 21025                           tblptru	equ	0xFF8
 21026                           tblptrh	equ	0xFF7
 21027                           tblptrl	equ	0xFF6
 21028                           tablat	equ	0xFF5
 21029                           prodh	equ	0xFF4
 21030                           prodl	equ	0xFF3
 21031                           intcon	equ	0xFF2
 21032                           indf0	equ	0xFEF
 21033                           postinc0	equ	0xFEE
 21034                           fsr0h	equ	0xFEA
 21035                           fsr0l	equ	0xFE9
 21036                           wreg	equ	0xFE8
 21037                           indf1	equ	0xFE7
 21038                           postdec1	equ	0xFE5
 21039                           plusw1	equ	0xFE3
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           indf2	equ	0xFDF
 21043                           postinc2	equ	0xFDE
 21044                           postdec2	equ	0xFDD
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function _SYSTEM_Initialize *****************
 21051 ;; Defined at:
 21052 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;		None
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      void 
 21059 ;; Registers used:
 21060 ;;		wreg, status,2, status,0, cstack
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:   15
 21073 ;; This function calls:
 21074 ;;		_ADCC_Initialize
 21075 ;;		_EUSART2_Initialize
 21076 ;;		_FVR_Initialize
 21077 ;;		_HLVD_Initialize
 21078 ;;		_INTERRUPT_Initialize
 21079 ;;		_OSCILLATOR_Initialize
 21080 ;;		_PIN_MANAGER_Initialize
 21081 ;;		_PMD_Initialize
 21082 ;;		_TMR5_Initialize
 21083 ;;		_TMR6_Initialize
 21084 ;;		_TMR7_Initialize
 21085 ;; This function is called by:
 21086 ;;		_main
 21087 ;; This function uses a non-reentrant model
 21088 ;;
 21089                           
 21090                           	psect	text49
 21091  01802C                     __ptext49:
 21092                           	opt stack 0
 21093  01802C                     _SYSTEM_Initialize:
 21094                           	opt stack 15
 21095                           
 21096                           ;mcc.c: 52: INTERRUPT_Initialize();
 21097                           
 21098                           ; BSR set to: 1
 21099                           ;incstack = 0
 21100  01802C  EC47  F0C1         	call	_INTERRUPT_Initialize	;wreg free
 21101                           
 21102                           ;mcc.c: 53: PMD_Initialize();
 21103  018030  EC10  F0C1         	call	_PMD_Initialize	;wreg free
 21104                           
 21105                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 21106  018034  EC36  F0B8         	call	_PIN_MANAGER_Initialize	;wreg free
 21107                           
 21108                           ;mcc.c: 55: OSCILLATOR_Initialize();
 21109  018038  EC1E  F0C1         	call	_OSCILLATOR_Initialize	;wreg free
 21110                           
 21111                           ;mcc.c: 56: HLVD_Initialize();
 21112  01803C  EC8F  F0C1         	call	_HLVD_Initialize	;wreg free
 21113                           
 21114                           ;mcc.c: 57: FVR_Initialize();
 21115  018040  ECDA  F0C1         	call	_FVR_Initialize	;wreg free
 21116                           
 21117                           ;mcc.c: 58: TMR7_Initialize();
 21118  018044  ECA4  F0BD         	call	_TMR7_Initialize	;wreg free
 21119                           
 21120                           ;mcc.c: 59: TMR6_Initialize();
 21121  018048  ECCD  F0BF         	call	_TMR6_Initialize	;wreg free
 21122                           
 21123                           ;mcc.c: 60: ADCC_Initialize();
 21124  01804C  ECCF  F0BC         	call	_ADCC_Initialize	;wreg free
 21125                           
 21126                           ;mcc.c: 61: TMR5_Initialize();
 21127  018050  EC7C  F0BD         	call	_TMR5_Initialize	;wreg free
 21128                           
 21129                           ;mcc.c: 62: EUSART2_Initialize();
 21130  018054  ECCF  F0BB         	call	_EUSART2_Initialize	;wreg free
 21131  018058  0012               	return		;funcret
 21132  01805A                     __end_of_SYSTEM_Initialize:
 21133                           	opt stack 0
 21134                           tblptru	equ	0xFF8
 21135                           tblptrh	equ	0xFF7
 21136                           tblptrl	equ	0xFF6
 21137                           tablat	equ	0xFF5
 21138                           prodh	equ	0xFF4
 21139                           prodl	equ	0xFF3
 21140                           intcon	equ	0xFF2
 21141                           indf0	equ	0xFEF
 21142                           postinc0	equ	0xFEE
 21143                           fsr0h	equ	0xFEA
 21144                           fsr0l	equ	0xFE9
 21145                           wreg	equ	0xFE8
 21146                           indf1	equ	0xFE7
 21147                           postdec1	equ	0xFE5
 21148                           plusw1	equ	0xFE3
 21149                           fsr1h	equ	0xFE2
 21150                           fsr1l	equ	0xFE1
 21151                           indf2	equ	0xFDF
 21152                           postinc2	equ	0xFDE
 21153                           postdec2	equ	0xFDD
 21154                           plusw2	equ	0xFDB
 21155                           fsr2h	equ	0xFDA
 21156                           fsr2l	equ	0xFD9
 21157                           status	equ	0xFD8
 21158                           
 21159 ;; *************** function _TMR7_Initialize *****************
 21160 ;; Defined at:
 21161 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 21162 ;; Parameters:    Size  Location     Type
 21163 ;;		None
 21164 ;; Auto vars:     Size  Location     Type
 21165 ;;		None
 21166 ;; Return value:  Size  Location     Type
 21167 ;;                  1    wreg      void 
 21168 ;; Registers used:
 21169 ;;		wreg, status,2, status,0, cstack
 21170 ;; Tracked objects:
 21171 ;;		On entry : 0/0
 21172 ;;		On exit  : 0/0
 21173 ;;		Unchanged: 0/0
 21174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21177 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21178 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21179 ;;Total ram usage:        2 bytes
 21180 ;; Hardware stack levels used:    1
 21181 ;; Hardware stack levels required when called:   14
 21182 ;; This function calls:
 21183 ;;		_TMR7_SetInterruptHandler
 21184 ;; This function is called by:
 21185 ;;		_SYSTEM_Initialize
 21186 ;; This function uses a non-reentrant model
 21187 ;;
 21188                           
 21189                           	psect	text50
 21190  017B48                     __ptext50:
 21191                           	opt stack 0
 21192  017B48                     _TMR7_Initialize:
 21193                           	opt stack 15
 21194                           
 21195                           ;tmr7.c: 69: T7GCON = 0x00;
 21196                           
 21197                           ;incstack = 0
 21198  017B48  0E00               	movlw	0
 21199  017B4A  010F               	movlb	15	; () banked
 21200  017B4C  6F31               	movwf	49,b	;volatile
 21201                           
 21202                           ;tmr7.c: 72: T7GATE = 0x00;
 21203  017B4E  0E00               	movlw	0
 21204  017B50  6F32               	movwf	50,b	;volatile
 21205                           
 21206                           ;tmr7.c: 75: T7CLK = 0x03;
 21207  017B52  0E03               	movlw	3
 21208  017B54  6F33               	movwf	51,b	;volatile
 21209                           
 21210                           ;tmr7.c: 78: TMR7H = 0xEC;
 21211  017B56  0EEC               	movlw	236
 21212  017B58  6F2F               	movwf	47,b	;volatile
 21213                           
 21214                           ;tmr7.c: 81: TMR7L = 0x78;
 21215  017B5A  0E78               	movlw	120
 21216  017B5C  6F2E               	movwf	46,b	;volatile
 21217                           
 21218                           ; BSR set to: 15
 21219                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 21220  017B5E  512E               	movf	46,w,b	;volatile
 21221  017B60  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 21222  017B64  0101               	movlb	1	; () banked
 21223  017B66  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 21224  017B68  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 21225  017B6C  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 21226  017B6E  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 21227  017B70  6FD7               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 21228  017B72  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 21229  017B74  6FD8               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 21230                           
 21231                           ; BSR set to: 1
 21232                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 21233  017B76  010E               	movlb	14	; () banked
 21234  017B78  9D38               	bcf	56,6,b	;volatile
 21235                           
 21236                           ; BSR set to: 14
 21237                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 21238  017B7A  8D2E               	bsf	46,6,b	;volatile
 21239                           
 21240                           ; BSR set to: 14
 21241                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 21242  017B7C  0EE8               	movlw	low _TMR7_DefaultInterruptHandler
 21243  017B7E  0101               	movlb	1	; () banked
 21244  017B80  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 21245  017B82  0E83               	movlw	high _TMR7_DefaultInterruptHandler
 21246  017B84  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 21247  017B86  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 21248  017B88  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 21249  017B8A  EC9E  F0C1         	call	_TMR7_SetInterruptHandler	;wreg free
 21250                           
 21251                           ;tmr7.c: 96: T7CON = 0x31;
 21252  017B8E  0E31               	movlw	49
 21253  017B90  010F               	movlb	15	; () banked
 21254  017B92  6F30               	movwf	48,b	;volatile
 21255                           
 21256                           ; BSR set to: 15
 21257  017B94  0012               	return		;funcret
 21258  017B96                     __end_of_TMR7_Initialize:
 21259                           	opt stack 0
 21260                           tblptru	equ	0xFF8
 21261                           tblptrh	equ	0xFF7
 21262                           tblptrl	equ	0xFF6
 21263                           tablat	equ	0xFF5
 21264                           prodh	equ	0xFF4
 21265                           prodl	equ	0xFF3
 21266                           intcon	equ	0xFF2
 21267                           indf0	equ	0xFEF
 21268                           postinc0	equ	0xFEE
 21269                           fsr0h	equ	0xFEA
 21270                           fsr0l	equ	0xFE9
 21271                           wreg	equ	0xFE8
 21272                           indf1	equ	0xFE7
 21273                           postdec1	equ	0xFE5
 21274                           plusw1	equ	0xFE3
 21275                           fsr1h	equ	0xFE2
 21276                           fsr1l	equ	0xFE1
 21277                           indf2	equ	0xFDF
 21278                           postinc2	equ	0xFDE
 21279                           postdec2	equ	0xFDD
 21280                           plusw2	equ	0xFDB
 21281                           fsr2h	equ	0xFDA
 21282                           fsr2l	equ	0xFD9
 21283                           status	equ	0xFD8
 21284                           
 21285 ;; *************** function _TMR7_SetInterruptHandler *****************
 21286 ;; Defined at:
 21287 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 21288 ;; Parameters:    Size  Location     Type
 21289 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21290 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 21291 ;; Auto vars:     Size  Location     Type
 21292 ;;		None
 21293 ;; Return value:  Size  Location     Type
 21294 ;;                  1    wreg      void 
 21295 ;; Registers used:
 21296 ;;		wreg, status,2, status,0
 21297 ;; Tracked objects:
 21298 ;;		On entry : 0/0
 21299 ;;		On exit  : 0/0
 21300 ;;		Unchanged: 0/0
 21301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21302 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21305 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21306 ;;Total ram usage:        3 bytes
 21307 ;; Hardware stack levels used:    1
 21308 ;; Hardware stack levels required when called:   13
 21309 ;; This function calls:
 21310 ;;		Nothing
 21311 ;; This function is called by:
 21312 ;;		_TMR7_Initialize
 21313 ;;		_main
 21314 ;; This function uses a non-reentrant model
 21315 ;;
 21316                           
 21317                           	psect	text51
 21318  01833C                     __ptext51:
 21319                           	opt stack 0
 21320  01833C                     _TMR7_SetInterruptHandler:
 21321                           	opt stack 17
 21322                           
 21323                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 21324                           
 21325                           ; BSR set to: 15
 21326                           ;incstack = 0
 21327  01833C  C117  F267         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 21328  018340  C118  F268         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 21329  018344  C119  F269         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 21330  018348  0012               	return		;funcret
 21331  01834A                     __end_of_TMR7_SetInterruptHandler:
 21332                           	opt stack 0
 21333                           tblptru	equ	0xFF8
 21334                           tblptrh	equ	0xFF7
 21335                           tblptrl	equ	0xFF6
 21336                           tablat	equ	0xFF5
 21337                           prodh	equ	0xFF4
 21338                           prodl	equ	0xFF3
 21339                           intcon	equ	0xFF2
 21340                           indf0	equ	0xFEF
 21341                           postinc0	equ	0xFEE
 21342                           fsr0h	equ	0xFEA
 21343                           fsr0l	equ	0xFE9
 21344                           wreg	equ	0xFE8
 21345                           indf1	equ	0xFE7
 21346                           postdec1	equ	0xFE5
 21347                           plusw1	equ	0xFE3
 21348                           fsr1h	equ	0xFE2
 21349                           fsr1l	equ	0xFE1
 21350                           indf2	equ	0xFDF
 21351                           postinc2	equ	0xFDE
 21352                           postdec2	equ	0xFDD
 21353                           plusw2	equ	0xFDB
 21354                           fsr2h	equ	0xFDA
 21355                           fsr2l	equ	0xFD9
 21356                           status	equ	0xFD8
 21357                           
 21358 ;; *************** function _TMR6_Initialize *****************
 21359 ;; Defined at:
 21360 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 21361 ;; Parameters:    Size  Location     Type
 21362 ;;		None
 21363 ;; Auto vars:     Size  Location     Type
 21364 ;;		None
 21365 ;; Return value:  Size  Location     Type
 21366 ;;                  1    wreg      void 
 21367 ;; Registers used:
 21368 ;;		wreg, status,2, status,0, cstack
 21369 ;; Tracked objects:
 21370 ;;		On entry : 0/0
 21371 ;;		On exit  : 0/0
 21372 ;;		Unchanged: 0/0
 21373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21378 ;;Total ram usage:        0 bytes
 21379 ;; Hardware stack levels used:    1
 21380 ;; Hardware stack levels required when called:   14
 21381 ;; This function calls:
 21382 ;;		_TMR6_SetInterruptHandler
 21383 ;; This function is called by:
 21384 ;;		_SYSTEM_Initialize
 21385 ;; This function uses a non-reentrant model
 21386 ;;
 21387                           
 21388                           	psect	text52
 21389  017F9A                     __ptext52:
 21390                           	opt stack 0
 21391  017F9A                     _TMR6_Initialize:
 21392                           	opt stack 15
 21393                           
 21394                           ;tmr6.c: 69: T6CLKCON = 0x04;
 21395                           
 21396                           ;incstack = 0
 21397  017F9A  0E04               	movlw	4
 21398  017F9C  6EB3               	movwf	4019,c	;volatile
 21399                           
 21400                           ;tmr6.c: 72: T6HLT = 0x20;
 21401  017F9E  0E20               	movlw	32
 21402  017FA0  6EB2               	movwf	4018,c	;volatile
 21403                           
 21404                           ;tmr6.c: 75: T6RST = 0x00;
 21405  017FA2  0E00               	movlw	0
 21406  017FA4  6EB4               	movwf	4020,c	;volatile
 21407                           
 21408                           ;tmr6.c: 78: T6PR = 0xF1;
 21409  017FA6  0EF1               	movlw	241
 21410  017FA8  6EB0               	movwf	4016,c	;volatile
 21411                           
 21412                           ;tmr6.c: 81: T6TMR = 0x00;
 21413  017FAA  0E00               	movlw	0
 21414  017FAC  6EAF               	movwf	4015,c	;volatile
 21415                           
 21416                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 21417  017FAE  010E               	movlb	14	; () banked
 21418  017FB0  9B38               	bcf	56,5,b	;volatile
 21419                           
 21420                           ; BSR set to: 14
 21421                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 21422  017FB2  8B2E               	bsf	46,5,b	;volatile
 21423                           
 21424                           ; BSR set to: 14
 21425                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 21426  017FB4  0EEA               	movlw	low _TMR6_DefaultInterruptHandler
 21427  017FB6  0101               	movlb	1	; () banked
 21428  017FB8  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 21429  017FBA  0E83               	movlw	high _TMR6_DefaultInterruptHandler
 21430  017FBC  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 21431  017FBE  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21432  017FC0  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 21433  017FC2  ECA5  F0C1         	call	_TMR6_SetInterruptHandler	;wreg free
 21434                           
 21435                           ;tmr6.c: 93: T6CON = 0xBF;
 21436  017FC6  0EBF               	movlw	191
 21437  017FC8  6EB1               	movwf	4017,c	;volatile
 21438  017FCA  0012               	return		;funcret
 21439  017FCC                     __end_of_TMR6_Initialize:
 21440                           	opt stack 0
 21441                           tblptru	equ	0xFF8
 21442                           tblptrh	equ	0xFF7
 21443                           tblptrl	equ	0xFF6
 21444                           tablat	equ	0xFF5
 21445                           prodh	equ	0xFF4
 21446                           prodl	equ	0xFF3
 21447                           intcon	equ	0xFF2
 21448                           indf0	equ	0xFEF
 21449                           postinc0	equ	0xFEE
 21450                           fsr0h	equ	0xFEA
 21451                           fsr0l	equ	0xFE9
 21452                           wreg	equ	0xFE8
 21453                           indf1	equ	0xFE7
 21454                           postdec1	equ	0xFE5
 21455                           plusw1	equ	0xFE3
 21456                           fsr1h	equ	0xFE2
 21457                           fsr1l	equ	0xFE1
 21458                           indf2	equ	0xFDF
 21459                           postinc2	equ	0xFDE
 21460                           postdec2	equ	0xFDD
 21461                           plusw2	equ	0xFDB
 21462                           fsr2h	equ	0xFDA
 21463                           fsr2l	equ	0xFD9
 21464                           status	equ	0xFD8
 21465                           
 21466 ;; *************** function _TMR6_SetInterruptHandler *****************
 21467 ;; Defined at:
 21468 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 21469 ;; Parameters:    Size  Location     Type
 21470 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21471 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;		None
 21474 ;; Return value:  Size  Location     Type
 21475 ;;                  1    wreg      void 
 21476 ;; Registers used:
 21477 ;;		wreg, status,2, status,0
 21478 ;; Tracked objects:
 21479 ;;		On entry : 0/0
 21480 ;;		On exit  : 0/0
 21481 ;;		Unchanged: 0/0
 21482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21483 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21486 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21487 ;;Total ram usage:        3 bytes
 21488 ;; Hardware stack levels used:    1
 21489 ;; Hardware stack levels required when called:   13
 21490 ;; This function calls:
 21491 ;;		Nothing
 21492 ;; This function is called by:
 21493 ;;		_TMR6_Initialize
 21494 ;;		_main
 21495 ;; This function uses a non-reentrant model
 21496 ;;
 21497                           
 21498                           	psect	text53
 21499  01834A                     __ptext53:
 21500                           	opt stack 0
 21501  01834A                     _TMR6_SetInterruptHandler:
 21502                           	opt stack 17
 21503                           
 21504                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 21505                           
 21506                           ;incstack = 0
 21507  01834A  C117  F26D         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 21508  01834E  C118  F26E         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 21509  018352  C119  F26F         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 21510  018356  0012               	return		;funcret
 21511  018358                     __end_of_TMR6_SetInterruptHandler:
 21512                           	opt stack 0
 21513                           tblptru	equ	0xFF8
 21514                           tblptrh	equ	0xFF7
 21515                           tblptrl	equ	0xFF6
 21516                           tablat	equ	0xFF5
 21517                           prodh	equ	0xFF4
 21518                           prodl	equ	0xFF3
 21519                           intcon	equ	0xFF2
 21520                           indf0	equ	0xFEF
 21521                           postinc0	equ	0xFEE
 21522                           fsr0h	equ	0xFEA
 21523                           fsr0l	equ	0xFE9
 21524                           wreg	equ	0xFE8
 21525                           indf1	equ	0xFE7
 21526                           postdec1	equ	0xFE5
 21527                           plusw1	equ	0xFE3
 21528                           fsr1h	equ	0xFE2
 21529                           fsr1l	equ	0xFE1
 21530                           indf2	equ	0xFDF
 21531                           postinc2	equ	0xFDE
 21532                           postdec2	equ	0xFDD
 21533                           plusw2	equ	0xFDB
 21534                           fsr2h	equ	0xFDA
 21535                           fsr2l	equ	0xFD9
 21536                           status	equ	0xFD8
 21537                           
 21538 ;; *************** function _TMR5_Initialize *****************
 21539 ;; Defined at:
 21540 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 21541 ;; Parameters:    Size  Location     Type
 21542 ;;		None
 21543 ;; Auto vars:     Size  Location     Type
 21544 ;;		None
 21545 ;; Return value:  Size  Location     Type
 21546 ;;                  1    wreg      void 
 21547 ;; Registers used:
 21548 ;;		wreg, status,2, status,0, cstack
 21549 ;; Tracked objects:
 21550 ;;		On entry : 0/0
 21551 ;;		On exit  : 0/0
 21552 ;;		Unchanged: 0/0
 21553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21556 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21557 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21558 ;;Total ram usage:        2 bytes
 21559 ;; Hardware stack levels used:    1
 21560 ;; Hardware stack levels required when called:   14
 21561 ;; This function calls:
 21562 ;;		_TMR5_SetInterruptHandler
 21563 ;; This function is called by:
 21564 ;;		_SYSTEM_Initialize
 21565 ;; This function uses a non-reentrant model
 21566 ;;
 21567                           
 21568                           	psect	text54
 21569  017AF8                     __ptext54:
 21570                           	opt stack 0
 21571  017AF8                     _TMR5_Initialize:
 21572                           	opt stack 15
 21573                           
 21574                           ;tmr5.c: 69: T5GCON = 0x00;
 21575                           
 21576                           ;incstack = 0
 21577  017AF8  0E00               	movlw	0
 21578  017AFA  6EC4               	movwf	4036,c	;volatile
 21579                           
 21580                           ;tmr5.c: 72: T5GATE = 0x00;
 21581  017AFC  0E00               	movlw	0
 21582  017AFE  6EC5               	movwf	4037,c	;volatile
 21583                           
 21584                           ;tmr5.c: 75: T5CLK = 0x01;
 21585  017B00  0E01               	movlw	1
 21586  017B02  6EC6               	movwf	4038,c	;volatile
 21587                           
 21588                           ;tmr5.c: 78: TMR5H = 0x00;
 21589  017B04  0E00               	movlw	0
 21590  017B06  6EC2               	movwf	4034,c	;volatile
 21591                           
 21592                           ;tmr5.c: 81: TMR5L = 0x00;
 21593  017B08  0E00               	movlw	0
 21594  017B0A  6EC1               	movwf	4033,c	;volatile
 21595                           
 21596                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 21597  017B0C  50C1               	movf	4033,w,c	;volatile
 21598  017B0E  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 21599  017B12  0101               	movlb	1	; () banked
 21600  017B14  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 21601  017B16  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 21602  017B1A  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 21603  017B1C  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 21604  017B1E  0102               	movlb	2	; () banked
 21605  017B20  6F78               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 21606  017B22  0101               	movlb	1	; () banked
 21607  017B24  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 21608  017B26  0102               	movlb	2	; () banked
 21609  017B28  6F79               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 21610                           
 21611                           ; BSR set to: 2
 21612                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 21613  017B2A  010E               	movlb	14	; () banked
 21614  017B2C  9938               	bcf	56,4,b	;volatile
 21615                           
 21616                           ; BSR set to: 14
 21617                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 21618  017B2E  892E               	bsf	46,4,b	;volatile
 21619                           
 21620                           ; BSR set to: 14
 21621                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 21622  017B30  0EEC               	movlw	low _TMR5_DefaultInterruptHandler
 21623  017B32  0101               	movlb	1	; () banked
 21624  017B34  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 21625  017B36  0E83               	movlw	high _TMR5_DefaultInterruptHandler
 21626  017B38  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 21627  017B3A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21628  017B3C  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 21629  017B3E  ECAC  F0C1         	call	_TMR5_SetInterruptHandler	;wreg free
 21630                           
 21631                           ;tmr5.c: 96: T5CON = 0x13;
 21632  017B42  0E13               	movlw	19
 21633  017B44  6EC3               	movwf	4035,c	;volatile
 21634  017B46  0012               	return		;funcret
 21635  017B48                     __end_of_TMR5_Initialize:
 21636                           	opt stack 0
 21637                           tblptru	equ	0xFF8
 21638                           tblptrh	equ	0xFF7
 21639                           tblptrl	equ	0xFF6
 21640                           tablat	equ	0xFF5
 21641                           prodh	equ	0xFF4
 21642                           prodl	equ	0xFF3
 21643                           intcon	equ	0xFF2
 21644                           indf0	equ	0xFEF
 21645                           postinc0	equ	0xFEE
 21646                           fsr0h	equ	0xFEA
 21647                           fsr0l	equ	0xFE9
 21648                           wreg	equ	0xFE8
 21649                           indf1	equ	0xFE7
 21650                           postdec1	equ	0xFE5
 21651                           plusw1	equ	0xFE3
 21652                           fsr1h	equ	0xFE2
 21653                           fsr1l	equ	0xFE1
 21654                           indf2	equ	0xFDF
 21655                           postinc2	equ	0xFDE
 21656                           postdec2	equ	0xFDD
 21657                           plusw2	equ	0xFDB
 21658                           fsr2h	equ	0xFDA
 21659                           fsr2l	equ	0xFD9
 21660                           status	equ	0xFD8
 21661                           
 21662 ;; *************** function _TMR5_SetInterruptHandler *****************
 21663 ;; Defined at:
 21664 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 21665 ;; Parameters:    Size  Location     Type
 21666 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21667 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21668 ;; Auto vars:     Size  Location     Type
 21669 ;;		None
 21670 ;; Return value:  Size  Location     Type
 21671 ;;                  1    wreg      void 
 21672 ;; Registers used:
 21673 ;;		wreg, status,2, status,0
 21674 ;; Tracked objects:
 21675 ;;		On entry : 0/0
 21676 ;;		On exit  : 0/0
 21677 ;;		Unchanged: 0/0
 21678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21679 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21682 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21683 ;;Total ram usage:        3 bytes
 21684 ;; Hardware stack levels used:    1
 21685 ;; Hardware stack levels required when called:   13
 21686 ;; This function calls:
 21687 ;;		Nothing
 21688 ;; This function is called by:
 21689 ;;		_TMR5_Initialize
 21690 ;; This function uses a non-reentrant model
 21691 ;;
 21692                           
 21693                           	psect	text55
 21694  018358                     __ptext55:
 21695                           	opt stack 0
 21696  018358                     _TMR5_SetInterruptHandler:
 21697                           	opt stack 15
 21698                           
 21699                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 21700                           
 21701                           ;incstack = 0
 21702  018358  C117  F264         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 21703  01835C  C118  F265         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 21704  018360  C119  F266         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 21705  018364  0012               	return		;funcret
 21706  018366                     __end_of_TMR5_SetInterruptHandler:
 21707                           	opt stack 0
 21708                           tblptru	equ	0xFF8
 21709                           tblptrh	equ	0xFF7
 21710                           tblptrl	equ	0xFF6
 21711                           tablat	equ	0xFF5
 21712                           prodh	equ	0xFF4
 21713                           prodl	equ	0xFF3
 21714                           intcon	equ	0xFF2
 21715                           indf0	equ	0xFEF
 21716                           postinc0	equ	0xFEE
 21717                           fsr0h	equ	0xFEA
 21718                           fsr0l	equ	0xFE9
 21719                           wreg	equ	0xFE8
 21720                           indf1	equ	0xFE7
 21721                           postdec1	equ	0xFE5
 21722                           plusw1	equ	0xFE3
 21723                           fsr1h	equ	0xFE2
 21724                           fsr1l	equ	0xFE1
 21725                           indf2	equ	0xFDF
 21726                           postinc2	equ	0xFDE
 21727                           postdec2	equ	0xFDD
 21728                           plusw2	equ	0xFDB
 21729                           fsr2h	equ	0xFDA
 21730                           fsr2l	equ	0xFD9
 21731                           status	equ	0xFD8
 21732                           
 21733 ;; *************** function _PMD_Initialize *****************
 21734 ;; Defined at:
 21735 ;;		line 83 in file "mcc_generated_files/mcc.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;		None
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;		None
 21740 ;; Return value:  Size  Location     Type
 21741 ;;                  1    wreg      void 
 21742 ;; Registers used:
 21743 ;;		wreg, status,2
 21744 ;; Tracked objects:
 21745 ;;		On entry : 0/0
 21746 ;;		On exit  : 0/0
 21747 ;;		Unchanged: 0/0
 21748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21753 ;;Total ram usage:        0 bytes
 21754 ;; Hardware stack levels used:    1
 21755 ;; Hardware stack levels required when called:   13
 21756 ;; This function calls:
 21757 ;;		Nothing
 21758 ;; This function is called by:
 21759 ;;		_SYSTEM_Initialize
 21760 ;; This function uses a non-reentrant model
 21761 ;;
 21762                           
 21763                           	psect	text56
 21764  018220                     __ptext56:
 21765                           	opt stack 0
 21766  018220                     _PMD_Initialize:
 21767                           	opt stack 16
 21768                           
 21769                           ;mcc.c: 86: PMD0 = 0x00;
 21770                           
 21771                           ;incstack = 0
 21772  018220  0E00               	movlw	0
 21773  018222  010E               	movlb	14	; () banked
 21774  018224  6F4C               	movwf	76,b	;volatile
 21775                           
 21776                           ;mcc.c: 88: PMD1 = 0x00;
 21777  018226  0E00               	movlw	0
 21778  018228  6F4D               	movwf	77,b	;volatile
 21779                           
 21780                           ;mcc.c: 90: PMD2 = 0x00;
 21781  01822A  0E00               	movlw	0
 21782  01822C  6F4E               	movwf	78,b	;volatile
 21783                           
 21784                           ;mcc.c: 92: PMD3 = 0x00;
 21785  01822E  0E00               	movlw	0
 21786  018230  6F4F               	movwf	79,b	;volatile
 21787                           
 21788                           ;mcc.c: 94: PMD4 = 0x00;
 21789  018232  0E00               	movlw	0
 21790  018234  6F50               	movwf	80,b	;volatile
 21791                           
 21792                           ;mcc.c: 96: PMD5 = 0x00;
 21793  018236  0E00               	movlw	0
 21794  018238  6F51               	movwf	81,b	;volatile
 21795                           
 21796                           ; BSR set to: 14
 21797  01823A  0012               	return		;funcret
 21798  01823C                     __end_of_PMD_Initialize:
 21799                           	opt stack 0
 21800                           tblptru	equ	0xFF8
 21801                           tblptrh	equ	0xFF7
 21802                           tblptrl	equ	0xFF6
 21803                           tablat	equ	0xFF5
 21804                           prodh	equ	0xFF4
 21805                           prodl	equ	0xFF3
 21806                           intcon	equ	0xFF2
 21807                           indf0	equ	0xFEF
 21808                           postinc0	equ	0xFEE
 21809                           fsr0h	equ	0xFEA
 21810                           fsr0l	equ	0xFE9
 21811                           wreg	equ	0xFE8
 21812                           indf1	equ	0xFE7
 21813                           postdec1	equ	0xFE5
 21814                           plusw1	equ	0xFE3
 21815                           fsr1h	equ	0xFE2
 21816                           fsr1l	equ	0xFE1
 21817                           indf2	equ	0xFDF
 21818                           postinc2	equ	0xFDE
 21819                           postdec2	equ	0xFDD
 21820                           plusw2	equ	0xFDB
 21821                           fsr2h	equ	0xFDA
 21822                           fsr2l	equ	0xFD9
 21823                           status	equ	0xFD8
 21824                           
 21825 ;; *************** function _PIN_MANAGER_Initialize *****************
 21826 ;; Defined at:
 21827 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21828 ;; Parameters:    Size  Location     Type
 21829 ;;		None
 21830 ;; Auto vars:     Size  Location     Type
 21831 ;;		None
 21832 ;; Return value:  Size  Location     Type
 21833 ;;                  1    wreg      void 
 21834 ;; Registers used:
 21835 ;;		wreg, status,2
 21836 ;; Tracked objects:
 21837 ;;		On entry : 0/0
 21838 ;;		On exit  : 0/0
 21839 ;;		Unchanged: 0/0
 21840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21845 ;;Total ram usage:        0 bytes
 21846 ;; Hardware stack levels used:    1
 21847 ;; Hardware stack levels required when called:   13
 21848 ;; This function calls:
 21849 ;;		Nothing
 21850 ;; This function is called by:
 21851 ;;		_SYSTEM_Initialize
 21852 ;; This function uses a non-reentrant model
 21853 ;;
 21854                           
 21855                           	psect	text57
 21856  01706C                     __ptext57:
 21857                           	opt stack 0
 21858  01706C                     _PIN_MANAGER_Initialize:
 21859                           	opt stack 16
 21860                           
 21861                           ;pin_manager.c: 62: LATE = 0x00;
 21862                           
 21863                           ; BSR set to: 14
 21864                           ;incstack = 0
 21865  01706C  0E00               	movlw	0
 21866  01706E  6E7D               	movwf	3965,c	;volatile
 21867                           
 21868                           ;pin_manager.c: 63: LATD = 0x00;
 21869  017070  0E00               	movlw	0
 21870  017072  6E7C               	movwf	3964,c	;volatile
 21871                           
 21872                           ;pin_manager.c: 64: LATA = 0x00;
 21873  017074  0E00               	movlw	0
 21874  017076  6E79               	movwf	3961,c	;volatile
 21875                           
 21876                           ;pin_manager.c: 65: LATF = 0x00;
 21877  017078  0E00               	movlw	0
 21878  01707A  6E7E               	movwf	3966,c	;volatile
 21879                           
 21880                           ;pin_manager.c: 66: LATB = 0x00;
 21881  01707C  0E00               	movlw	0
 21882  01707E  6E7A               	movwf	3962,c	;volatile
 21883                           
 21884                           ;pin_manager.c: 67: LATG = 0x00;
 21885  017080  0E00               	movlw	0
 21886  017082  6E7F               	movwf	3967,c	;volatile
 21887                           
 21888                           ;pin_manager.c: 68: LATC = 0x00;
 21889  017084  0E00               	movlw	0
 21890  017086  6E7B               	movwf	3963,c	;volatile
 21891                           
 21892                           ;pin_manager.c: 69: LATH = 0x00;
 21893  017088  0E00               	movlw	0
 21894  01708A  6E80               	movwf	3968,c	;volatile
 21895                           
 21896                           ;pin_manager.c: 74: TRISE = 0xFF;
 21897  01708C  6885               	setf	3973,c	;volatile
 21898                           
 21899                           ;pin_manager.c: 75: TRISF = 0xF0;
 21900  01708E  0EF0               	movlw	240
 21901  017090  6E86               	movwf	3974,c	;volatile
 21902                           
 21903                           ;pin_manager.c: 76: TRISA = 0xFF;
 21904  017092  6881               	setf	3969,c	;volatile
 21905                           
 21906                           ;pin_manager.c: 77: TRISG = 0x5C;
 21907  017094  0E5C               	movlw	92
 21908  017096  6E87               	movwf	3975,c	;volatile
 21909                           
 21910                           ;pin_manager.c: 78: TRISB = 0xFF;
 21911  017098  6882               	setf	3970,c	;volatile
 21912                           
 21913                           ;pin_manager.c: 79: TRISH = 0x0F;
 21914  01709A  0E0F               	movlw	15
 21915  01709C  6E88               	movwf	3976,c	;volatile
 21916                           
 21917                           ;pin_manager.c: 80: TRISC = 0xFF;
 21918  01709E  6883               	setf	3971,c	;volatile
 21919                           
 21920                           ;pin_manager.c: 81: TRISD = 0xFF;
 21921  0170A0  6884               	setf	3972,c	;volatile
 21922                           
 21923                           ;pin_manager.c: 86: ANSELD = 0xFF;
 21924  0170A2  010E               	movlb	14	; () banked
 21925  0170A4  69A7               	setf	167,b	;volatile
 21926                           
 21927                           ; BSR set to: 14
 21928                           ;pin_manager.c: 87: ANSELB = 0xFF;
 21929  0170A6  699A               	setf	154,b	;volatile
 21930                           
 21931                           ; BSR set to: 14
 21932                           ;pin_manager.c: 88: ANSELE = 0xFF;
 21933  0170A8  69AF               	setf	175,b	;volatile
 21934                           
 21935                           ;pin_manager.c: 89: ANSELG = 0x3C;
 21936  0170AA  0E3C               	movlw	60
 21937  0170AC  6FBC               	movwf	188,b	;volatile
 21938                           
 21939                           ;pin_manager.c: 90: ANSELF = 0xF0;
 21940  0170AE  0EF0               	movlw	240
 21941  0170B0  6FB4               	movwf	180,b	;volatile
 21942                           
 21943                           ; BSR set to: 14
 21944                           ;pin_manager.c: 91: ANSELA = 0xFF;
 21945  0170B2  6992               	setf	146,b	;volatile
 21946                           
 21947                           ;pin_manager.c: 96: WPUD = 0x00;
 21948  0170B4  0E00               	movlw	0
 21949  0170B6  6FA6               	movwf	166,b	;volatile
 21950                           
 21951                           ;pin_manager.c: 97: WPUF = 0x00;
 21952  0170B8  0E00               	movlw	0
 21953  0170BA  6FB3               	movwf	179,b	;volatile
 21954                           
 21955                           ;pin_manager.c: 98: WPUE = 0x00;
 21956  0170BC  0E00               	movlw	0
 21957  0170BE  6FAE               	movwf	174,b	;volatile
 21958                           
 21959                           ;pin_manager.c: 99: WPUB = 0x00;
 21960  0170C0  0E00               	movlw	0
 21961  0170C2  6F99               	movwf	153,b	;volatile
 21962                           
 21963                           ;pin_manager.c: 100: WPUG = 0x00;
 21964  0170C4  0E00               	movlw	0
 21965  0170C6  6FBB               	movwf	187,b	;volatile
 21966                           
 21967                           ;pin_manager.c: 101: WPUA = 0x00;
 21968  0170C8  0E00               	movlw	0
 21969  0170CA  6F91               	movwf	145,b	;volatile
 21970                           
 21971                           ;pin_manager.c: 102: WPUC = 0x00;
 21972  0170CC  0E00               	movlw	0
 21973  0170CE  6FA1               	movwf	161,b	;volatile
 21974                           
 21975                           ;pin_manager.c: 103: WPUH = 0x00;
 21976  0170D0  0E00               	movlw	0
 21977  0170D2  6FC0               	movwf	192,b	;volatile
 21978                           
 21979                           ;pin_manager.c: 108: ODCONE = 0x00;
 21980  0170D4  0E00               	movlw	0
 21981  0170D6  6FAD               	movwf	173,b	;volatile
 21982                           
 21983                           ;pin_manager.c: 109: ODCONF = 0x01;
 21984  0170D8  0E01               	movlw	1
 21985  0170DA  6FB2               	movwf	178,b	;volatile
 21986                           
 21987                           ;pin_manager.c: 110: ODCONA = 0x00;
 21988  0170DC  0E00               	movlw	0
 21989  0170DE  6F90               	movwf	144,b	;volatile
 21990                           
 21991                           ;pin_manager.c: 111: ODCONG = 0x00;
 21992  0170E0  0E00               	movlw	0
 21993  0170E2  6FBA               	movwf	186,b	;volatile
 21994                           
 21995                           ;pin_manager.c: 112: ODCONB = 0x00;
 21996  0170E4  0E00               	movlw	0
 21997  0170E6  6F98               	movwf	152,b	;volatile
 21998                           
 21999                           ;pin_manager.c: 113: ODCONH = 0x00;
 22000  0170E8  0E00               	movlw	0
 22001  0170EA  6FBF               	movwf	191,b	;volatile
 22002                           
 22003                           ;pin_manager.c: 114: ODCONC = 0x00;
 22004  0170EC  0E00               	movlw	0
 22005  0170EE  6FA0               	movwf	160,b	;volatile
 22006                           
 22007                           ;pin_manager.c: 115: ODCOND = 0x00;
 22008  0170F0  0E00               	movlw	0
 22009  0170F2  6FA5               	movwf	165,b	;volatile
 22010                           
 22011                           ; BSR set to: 14
 22012                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 22013  0170F4  698F               	setf	143,b	;volatile
 22014                           
 22015                           ; BSR set to: 14
 22016                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 22017  0170F6  6997               	setf	151,b	;volatile
 22018                           
 22019                           ; BSR set to: 14
 22020                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 22021  0170F8  699F               	setf	159,b	;volatile
 22022                           
 22023                           ; BSR set to: 14
 22024                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 22025  0170FA  69A4               	setf	164,b	;volatile
 22026                           
 22027                           ; BSR set to: 14
 22028                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 22029  0170FC  69AC               	setf	172,b	;volatile
 22030                           
 22031                           ; BSR set to: 14
 22032                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 22033  0170FE  69B1               	setf	177,b	;volatile
 22034                           
 22035                           ; BSR set to: 14
 22036                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 22037  017100  69B9               	setf	185,b	;volatile
 22038                           
 22039                           ; BSR set to: 14
 22040                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 22041  017102  69BE               	setf	190,b	;volatile
 22042                           
 22043                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 22044  017104  0E0E               	movlw	14
 22045  017106  6F89               	movwf	137,b	;volatile
 22046                           
 22047                           ;pin_manager.c: 137: RX2PPS = 0x36;
 22048  017108  0E36               	movlw	54
 22049  01710A  6F11               	movwf	17,b	;volatile
 22050                           
 22051                           ; BSR set to: 14
 22052  01710C  0012               	return		;funcret
 22053  01710E                     __end_of_PIN_MANAGER_Initialize:
 22054                           	opt stack 0
 22055                           tblptru	equ	0xFF8
 22056                           tblptrh	equ	0xFF7
 22057                           tblptrl	equ	0xFF6
 22058                           tablat	equ	0xFF5
 22059                           prodh	equ	0xFF4
 22060                           prodl	equ	0xFF3
 22061                           intcon	equ	0xFF2
 22062                           indf0	equ	0xFEF
 22063                           postinc0	equ	0xFEE
 22064                           fsr0h	equ	0xFEA
 22065                           fsr0l	equ	0xFE9
 22066                           wreg	equ	0xFE8
 22067                           indf1	equ	0xFE7
 22068                           postdec1	equ	0xFE5
 22069                           plusw1	equ	0xFE3
 22070                           fsr1h	equ	0xFE2
 22071                           fsr1l	equ	0xFE1
 22072                           indf2	equ	0xFDF
 22073                           postinc2	equ	0xFDE
 22074                           postdec2	equ	0xFDD
 22075                           plusw2	equ	0xFDB
 22076                           fsr2h	equ	0xFDA
 22077                           fsr2l	equ	0xFD9
 22078                           status	equ	0xFD8
 22079                           
 22080 ;; *************** function _OSCILLATOR_Initialize *****************
 22081 ;; Defined at:
 22082 ;;		line 65 in file "mcc_generated_files/mcc.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;		None
 22085 ;; Auto vars:     Size  Location     Type
 22086 ;;		None
 22087 ;; Return value:  Size  Location     Type
 22088 ;;                  1    wreg      void 
 22089 ;; Registers used:
 22090 ;;		wreg, status,2
 22091 ;; Tracked objects:
 22092 ;;		On entry : 0/0
 22093 ;;		On exit  : 0/0
 22094 ;;		Unchanged: 0/0
 22095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22100 ;;Total ram usage:        0 bytes
 22101 ;; Hardware stack levels used:    1
 22102 ;; Hardware stack levels required when called:   13
 22103 ;; This function calls:
 22104 ;;		Nothing
 22105 ;; This function is called by:
 22106 ;;		_SYSTEM_Initialize
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text58
 22111  01823C                     __ptext58:
 22112                           	opt stack 0
 22113  01823C                     _OSCILLATOR_Initialize:
 22114                           	opt stack 16
 22115                           
 22116                           ;mcc.c: 68: OSCCON1 = 0x20;
 22117                           
 22118                           ; BSR set to: 14
 22119                           ;incstack = 0
 22120  01823C  0E20               	movlw	32
 22121  01823E  010E               	movlb	14	; () banked
 22122  018240  6F43               	movwf	67,b	;volatile
 22123                           
 22124                           ;mcc.c: 70: OSCCON3 = 0x00;
 22125  018242  0E00               	movlw	0
 22126  018244  6F45               	movwf	69,b	;volatile
 22127                           
 22128                           ;mcc.c: 72: OSCEN = 0x00;
 22129  018246  0E00               	movlw	0
 22130  018248  6F47               	movwf	71,b	;volatile
 22131                           
 22132                           ;mcc.c: 74: OSCFRQ = 0x02;
 22133  01824A  0E02               	movlw	2
 22134  01824C  6F49               	movwf	73,b	;volatile
 22135                           
 22136                           ;mcc.c: 76: OSCTUNE = 0x00;
 22137  01824E  0E00               	movlw	0
 22138  018250  6F48               	movwf	72,b	;volatile
 22139  018252                     
 22140                           ; BSR set to: 14
 22141                           
 22142                           ; BSR set to: 14
 22143                           ;mcc.c: 79: {
 22144  018252  B146               	btfsc	70,0,b	;volatile
 22145  018254  0012               	return	
 22146  018256  D7FD               	goto	l57
 22147  018258                     __end_of_OSCILLATOR_Initialize:
 22148                           	opt stack 0
 22149                           tblptru	equ	0xFF8
 22150                           tblptrh	equ	0xFF7
 22151                           tblptrl	equ	0xFF6
 22152                           tablat	equ	0xFF5
 22153                           prodh	equ	0xFF4
 22154                           prodl	equ	0xFF3
 22155                           intcon	equ	0xFF2
 22156                           indf0	equ	0xFEF
 22157                           postinc0	equ	0xFEE
 22158                           fsr0h	equ	0xFEA
 22159                           fsr0l	equ	0xFE9
 22160                           wreg	equ	0xFE8
 22161                           indf1	equ	0xFE7
 22162                           postdec1	equ	0xFE5
 22163                           plusw1	equ	0xFE3
 22164                           fsr1h	equ	0xFE2
 22165                           fsr1l	equ	0xFE1
 22166                           indf2	equ	0xFDF
 22167                           postinc2	equ	0xFDE
 22168                           postdec2	equ	0xFDD
 22169                           plusw2	equ	0xFDB
 22170                           fsr2h	equ	0xFDA
 22171                           fsr2l	equ	0xFD9
 22172                           status	equ	0xFD8
 22173                           
 22174 ;; *************** function _INTERRUPT_Initialize *****************
 22175 ;; Defined at:
 22176 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22177 ;; Parameters:    Size  Location     Type
 22178 ;;		None
 22179 ;; Auto vars:     Size  Location     Type
 22180 ;;		None
 22181 ;; Return value:  Size  Location     Type
 22182 ;;                  1    wreg      void 
 22183 ;; Registers used:
 22184 ;;		None
 22185 ;; Tracked objects:
 22186 ;;		On entry : 0/0
 22187 ;;		On exit  : 0/0
 22188 ;;		Unchanged: 0/0
 22189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22194 ;;Total ram usage:        0 bytes
 22195 ;; Hardware stack levels used:    1
 22196 ;; Hardware stack levels required when called:   13
 22197 ;; This function calls:
 22198 ;;		Nothing
 22199 ;; This function is called by:
 22200 ;;		_SYSTEM_Initialize
 22201 ;; This function uses a non-reentrant model
 22202 ;;
 22203                           
 22204                           	psect	text59
 22205  01828E                     __ptext59:
 22206                           	opt stack 0
 22207  01828E                     _INTERRUPT_Initialize:
 22208                           	opt stack 16
 22209                           
 22210                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 22211                           
 22212                           ; BSR set to: 14
 22213                           ;incstack = 0
 22214  01828E  8AF2               	bsf	intcon,5,c	;volatile
 22215                           
 22216                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 22217  018290  010E               	movlb	14	; () banked
 22218  018292  8F22               	bsf	34,7,b	;volatile
 22219                           
 22220                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 22221  018294  8924               	bsf	36,4,b	;volatile
 22222                           
 22223                           ;interrupt_manager.c: 66: IPR1bits.ADTIP = 1;
 22224  018296  8320               	bsf	32,1,b	;volatile
 22225                           
 22226                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 22227  018298  9B24               	bcf	36,5,b	;volatile
 22228                           
 22229                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 22230  01829A  9D22               	bcf	34,6,b	;volatile
 22231                           
 22232                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 22233  01829C  9D24               	bcf	36,6,b	;volatile
 22234                           
 22235                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 22236  01829E  9F21               	bcf	33,7,b	;volatile
 22237                           
 22238                           ; BSR set to: 14
 22239  0182A0  0012               	return		;funcret
 22240  0182A2                     __end_of_INTERRUPT_Initialize:
 22241                           	opt stack 0
 22242                           tblptru	equ	0xFF8
 22243                           tblptrh	equ	0xFF7
 22244                           tblptrl	equ	0xFF6
 22245                           tablat	equ	0xFF5
 22246                           prodh	equ	0xFF4
 22247                           prodl	equ	0xFF3
 22248                           intcon	equ	0xFF2
 22249                           indf0	equ	0xFEF
 22250                           postinc0	equ	0xFEE
 22251                           fsr0h	equ	0xFEA
 22252                           fsr0l	equ	0xFE9
 22253                           wreg	equ	0xFE8
 22254                           indf1	equ	0xFE7
 22255                           postdec1	equ	0xFE5
 22256                           plusw1	equ	0xFE3
 22257                           fsr1h	equ	0xFE2
 22258                           fsr1l	equ	0xFE1
 22259                           indf2	equ	0xFDF
 22260                           postinc2	equ	0xFDE
 22261                           postdec2	equ	0xFDD
 22262                           plusw2	equ	0xFDB
 22263                           fsr2h	equ	0xFDA
 22264                           fsr2l	equ	0xFD9
 22265                           status	equ	0xFD8
 22266                           
 22267 ;; *************** function _HLVD_Initialize *****************
 22268 ;; Defined at:
 22269 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 22270 ;; Parameters:    Size  Location     Type
 22271 ;;		None
 22272 ;; Auto vars:     Size  Location     Type
 22273 ;;		None
 22274 ;; Return value:  Size  Location     Type
 22275 ;;                  1    wreg      void 
 22276 ;; Registers used:
 22277 ;;		wreg, status,2
 22278 ;; Tracked objects:
 22279 ;;		On entry : 0/0
 22280 ;;		On exit  : 0/0
 22281 ;;		Unchanged: 0/0
 22282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22287 ;;Total ram usage:        0 bytes
 22288 ;; Hardware stack levels used:    1
 22289 ;; Hardware stack levels required when called:   13
 22290 ;; This function calls:
 22291 ;;		Nothing
 22292 ;; This function is called by:
 22293 ;;		_SYSTEM_Initialize
 22294 ;; This function uses a non-reentrant model
 22295 ;;
 22296                           
 22297                           	psect	text60
 22298  01831E                     __ptext60:
 22299                           	opt stack 0
 22300  01831E                     _HLVD_Initialize:
 22301                           	opt stack 16
 22302                           
 22303                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 22304                           
 22305                           ; BSR set to: 14
 22306                           ;incstack = 0
 22307  01831E  0E09               	movlw	9
 22308  018320  010E               	movlb	14	; () banked
 22309  018322  6FC3               	movwf	195,b	;volatile
 22310                           
 22311                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 22312  018324  0E82               	movlw	130
 22313  018326  6FC2               	movwf	194,b	;volatile
 22314                           
 22315                           ; BSR set to: 14
 22316                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 22317  018328  9F35               	bcf	53,7,b	;volatile
 22318                           
 22319                           ; BSR set to: 14
 22320                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 22321  01832A  8F2B               	bsf	43,7,b	;volatile
 22322                           
 22323                           ; BSR set to: 14
 22324  01832C  0012               	return		;funcret
 22325  01832E                     __end_of_HLVD_Initialize:
 22326                           	opt stack 0
 22327                           tblptru	equ	0xFF8
 22328                           tblptrh	equ	0xFF7
 22329                           tblptrl	equ	0xFF6
 22330                           tablat	equ	0xFF5
 22331                           prodh	equ	0xFF4
 22332                           prodl	equ	0xFF3
 22333                           intcon	equ	0xFF2
 22334                           indf0	equ	0xFEF
 22335                           postinc0	equ	0xFEE
 22336                           fsr0h	equ	0xFEA
 22337                           fsr0l	equ	0xFE9
 22338                           wreg	equ	0xFE8
 22339                           indf1	equ	0xFE7
 22340                           postdec1	equ	0xFE5
 22341                           plusw1	equ	0xFE3
 22342                           fsr1h	equ	0xFE2
 22343                           fsr1l	equ	0xFE1
 22344                           indf2	equ	0xFDF
 22345                           postinc2	equ	0xFDE
 22346                           postdec2	equ	0xFDD
 22347                           plusw2	equ	0xFDB
 22348                           fsr2h	equ	0xFDA
 22349                           fsr2l	equ	0xFD9
 22350                           status	equ	0xFD8
 22351                           
 22352 ;; *************** function _FVR_Initialize *****************
 22353 ;; Defined at:
 22354 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22355 ;; Parameters:    Size  Location     Type
 22356 ;;		None
 22357 ;; Auto vars:     Size  Location     Type
 22358 ;;		None
 22359 ;; Return value:  Size  Location     Type
 22360 ;;                  1    wreg      void 
 22361 ;; Registers used:
 22362 ;;		wreg, status,2
 22363 ;; Tracked objects:
 22364 ;;		On entry : 0/0
 22365 ;;		On exit  : 0/0
 22366 ;;		Unchanged: 0/0
 22367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22372 ;;Total ram usage:        0 bytes
 22373 ;; Hardware stack levels used:    1
 22374 ;; Hardware stack levels required when called:   13
 22375 ;; This function calls:
 22376 ;;		Nothing
 22377 ;; This function is called by:
 22378 ;;		_SYSTEM_Initialize
 22379 ;; This function uses a non-reentrant model
 22380 ;;
 22381                           
 22382                           	psect	text61
 22383  0183B4                     __ptext61:
 22384                           	opt stack 0
 22385  0183B4                     _FVR_Initialize:
 22386                           	opt stack 16
 22387                           
 22388                           ;fvr.c: 61: FVRCON = 0xA6;
 22389                           
 22390                           ; BSR set to: 14
 22391                           ;incstack = 0
 22392  0183B4  0EA6               	movlw	166
 22393  0183B6  010E               	movlb	14	; () banked
 22394  0183B8  6FC4               	movwf	196,b	;volatile
 22395                           
 22396                           ; BSR set to: 14
 22397  0183BA  0012               	return		;funcret
 22398  0183BC                     __end_of_FVR_Initialize:
 22399                           	opt stack 0
 22400                           tblptru	equ	0xFF8
 22401                           tblptrh	equ	0xFF7
 22402                           tblptrl	equ	0xFF6
 22403                           tablat	equ	0xFF5
 22404                           prodh	equ	0xFF4
 22405                           prodl	equ	0xFF3
 22406                           intcon	equ	0xFF2
 22407                           indf0	equ	0xFEF
 22408                           postinc0	equ	0xFEE
 22409                           fsr0h	equ	0xFEA
 22410                           fsr0l	equ	0xFE9
 22411                           wreg	equ	0xFE8
 22412                           indf1	equ	0xFE7
 22413                           postdec1	equ	0xFE5
 22414                           plusw1	equ	0xFE3
 22415                           fsr1h	equ	0xFE2
 22416                           fsr1l	equ	0xFE1
 22417                           indf2	equ	0xFDF
 22418                           postinc2	equ	0xFDE
 22419                           postdec2	equ	0xFDD
 22420                           plusw2	equ	0xFDB
 22421                           fsr2h	equ	0xFDA
 22422                           fsr2l	equ	0xFD9
 22423                           status	equ	0xFD8
 22424                           
 22425 ;; *************** function _EUSART2_Initialize *****************
 22426 ;; Defined at:
 22427 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 22428 ;; Parameters:    Size  Location     Type
 22429 ;;		None
 22430 ;; Auto vars:     Size  Location     Type
 22431 ;;		None
 22432 ;; Return value:  Size  Location     Type
 22433 ;;                  1    wreg      void 
 22434 ;; Registers used:
 22435 ;;		wreg, status,2, status,0, cstack
 22436 ;; Tracked objects:
 22437 ;;		On entry : 0/0
 22438 ;;		On exit  : 0/0
 22439 ;;		Unchanged: 0/0
 22440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22445 ;;Total ram usage:        0 bytes
 22446 ;; Hardware stack levels used:    1
 22447 ;; Hardware stack levels required when called:   14
 22448 ;; This function calls:
 22449 ;;		_EUSART2_SetRxInterruptHandler
 22450 ;;		_EUSART2_SetTxInterruptHandler
 22451 ;; This function is called by:
 22452 ;;		_SYSTEM_Initialize
 22453 ;; This function uses a non-reentrant model
 22454 ;;
 22455                           
 22456                           	psect	text62
 22457  01779E                     __ptext62:
 22458                           	opt stack 0
 22459  01779E                     _EUSART2_Initialize:
 22460                           	opt stack 15
 22461                           
 22462                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 22463                           
 22464                           ; BSR set to: 14
 22465                           ;incstack = 0
 22466  01779E  827E               	bsf	3966,1,c	;volatile
 22467                           
 22468                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 22469  0177A0  010E               	movlb	14	; () banked
 22470  0177A2  9F2C               	bcf	44,7,b	;volatile
 22471                           
 22472                           ; BSR set to: 14
 22473                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 22474  0177A4  0EBE               	movlw	low _EUSART2_Receive_ISR
 22475  0177A6  0101               	movlb	1	; () banked
 22476  0177A8  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 22477  0177AA  0E6F               	movlw	high _EUSART2_Receive_ISR
 22478  0177AC  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 22479  0177AE  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 22480  0177B0  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 22481  0177B2  ECBA  F0C1         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 22482                           
 22483                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 22484  0177B6  010E               	movlb	14	; () banked
 22485  0177B8  9D2C               	bcf	44,6,b	;volatile
 22486                           
 22487                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 22488  0177BA  0EFC               	movlw	low _EUSART2_Transmit_ISR
 22489  0177BC  0101               	movlb	1	; () banked
 22490  0177BE  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 22491  0177C0  0E7E               	movlw	high _EUSART2_Transmit_ISR
 22492  0177C2  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 22493  0177C4  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 22494  0177C6  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 22495  0177C8  ECB3  F0C1         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 22496                           
 22497                           ;eusart2.c: 91: BAUD2CON = 0x08;
 22498  0177CC  0E08               	movlw	8
 22499  0177CE  010E               	movlb	14	; () banked
 22500  0177D0  6FF7               	movwf	247,b	;volatile
 22501                           
 22502                           ; BSR set to: 14
 22503                           ;eusart2.c: 94: RC2STA = 0x90;
 22504  0177D2  0E90               	movlw	144
 22505  0177D4  6FF5               	movwf	245,b	;volatile
 22506                           
 22507                           ; BSR set to: 14
 22508                           ;eusart2.c: 97: TX2STA = 0x24;
 22509  0177D6  0E24               	movlw	36
 22510  0177D8  6FF6               	movwf	246,b	;volatile
 22511                           
 22512                           ; BSR set to: 14
 22513                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 22514  0177DA  0E8A               	movlw	138
 22515  0177DC  6FF3               	movwf	243,b	;volatile
 22516                           
 22517                           ; BSR set to: 14
 22518                           ;eusart2.c: 103: SP2BRGH = 0x00;
 22519  0177DE  0E00               	movlw	0
 22520  0177E0  6FF4               	movwf	244,b	;volatile
 22521                           
 22522                           ; BSR set to: 14
 22523                           ;eusart2.c: 107: eusart2TxHead = 0;
 22524  0177E2  0E00               	movlw	0
 22525  0177E4  0101               	movlb	1	; () banked
 22526  0177E6  6FDD               	movwf	_eusart2TxHead& (0+255),b	;volatile
 22527                           
 22528                           ; BSR set to: 1
 22529                           ;eusart2.c: 108: eusart2TxTail = 0;
 22530  0177E8  0E00               	movlw	0
 22531  0177EA  6FDC               	movwf	_eusart2TxTail& (0+255),b	;volatile
 22532                           
 22533                           ; BSR set to: 1
 22534                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 22535  0177EC  0E80               	movlw	128
 22536  0177EE  6FDB               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 22537                           
 22538                           ; BSR set to: 1
 22539                           ;eusart2.c: 111: eusart2RxHead = 0;
 22540  0177F0  0E00               	movlw	0
 22541  0177F2  0100               	movlb	0	; () banked
 22542  0177F4  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 22543                           
 22544                           ; BSR set to: 0
 22545                           ;eusart2.c: 112: eusart2RxTail = 0;
 22546  0177F6  0E00               	movlw	0
 22547  0177F8  0101               	movlb	1	; () banked
 22548  0177FA  6FDA               	movwf	_eusart2RxTail& (0+255),b	;volatile
 22549                           
 22550                           ; BSR set to: 1
 22551                           ;eusart2.c: 113: eusart2RxCount = 0;
 22552  0177FC  0E00               	movlw	0
 22553  0177FE  6FD9               	movwf	_eusart2RxCount& (0+255),b	;volatile
 22554                           
 22555                           ; BSR set to: 1
 22556                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 22557  017800  010E               	movlb	14	; () banked
 22558  017802  8F2C               	bsf	44,7,b	;volatile
 22559                           
 22560                           ; BSR set to: 14
 22561                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 22562  017804  927E               	bcf	3966,1,c	;volatile
 22563                           
 22564                           ; BSR set to: 14
 22565  017806  0012               	return		;funcret
 22566  017808                     __end_of_EUSART2_Initialize:
 22567                           	opt stack 0
 22568                           tblptru	equ	0xFF8
 22569                           tblptrh	equ	0xFF7
 22570                           tblptrl	equ	0xFF6
 22571                           tablat	equ	0xFF5
 22572                           prodh	equ	0xFF4
 22573                           prodl	equ	0xFF3
 22574                           intcon	equ	0xFF2
 22575                           indf0	equ	0xFEF
 22576                           postinc0	equ	0xFEE
 22577                           fsr0h	equ	0xFEA
 22578                           fsr0l	equ	0xFE9
 22579                           wreg	equ	0xFE8
 22580                           indf1	equ	0xFE7
 22581                           postdec1	equ	0xFE5
 22582                           plusw1	equ	0xFE3
 22583                           fsr1h	equ	0xFE2
 22584                           fsr1l	equ	0xFE1
 22585                           indf2	equ	0xFDF
 22586                           postinc2	equ	0xFDE
 22587                           postdec2	equ	0xFDD
 22588                           plusw2	equ	0xFDB
 22589                           fsr2h	equ	0xFDA
 22590                           fsr2l	equ	0xFD9
 22591                           status	equ	0xFD8
 22592                           
 22593 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 22594 ;; Defined at:
 22595 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 22596 ;; Parameters:    Size  Location     Type
 22597 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 22598 ;;		 -> EUSART2_Transmit_ISR(1), 
 22599 ;; Auto vars:     Size  Location     Type
 22600 ;;		None
 22601 ;; Return value:  Size  Location     Type
 22602 ;;                  1    wreg      void 
 22603 ;; Registers used:
 22604 ;;		wreg, status,2, status,0
 22605 ;; Tracked objects:
 22606 ;;		On entry : 0/0
 22607 ;;		On exit  : 0/0
 22608 ;;		Unchanged: 0/0
 22609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22610 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22613 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22614 ;;Total ram usage:        3 bytes
 22615 ;; Hardware stack levels used:    1
 22616 ;; Hardware stack levels required when called:   13
 22617 ;; This function calls:
 22618 ;;		Nothing
 22619 ;; This function is called by:
 22620 ;;		_EUSART2_Initialize
 22621 ;; This function uses a non-reentrant model
 22622 ;;
 22623                           
 22624                           	psect	text63
 22625  018366                     __ptext63:
 22626                           	opt stack 0
 22627  018366                     _EUSART2_SetTxInterruptHandler:
 22628                           	opt stack 15
 22629                           
 22630                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 22631                           
 22632                           ; BSR set to: 14
 22633                           ;incstack = 0
 22634  018366  C117  F273         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 22635  01836A  C118  F274         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 22636  01836E  C119  F275         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 22637  018372  0012               	return		;funcret
 22638  018374                     __end_of_EUSART2_SetTxInterruptHandler:
 22639                           	opt stack 0
 22640                           tblptru	equ	0xFF8
 22641                           tblptrh	equ	0xFF7
 22642                           tblptrl	equ	0xFF6
 22643                           tablat	equ	0xFF5
 22644                           prodh	equ	0xFF4
 22645                           prodl	equ	0xFF3
 22646                           intcon	equ	0xFF2
 22647                           indf0	equ	0xFEF
 22648                           postinc0	equ	0xFEE
 22649                           fsr0h	equ	0xFEA
 22650                           fsr0l	equ	0xFE9
 22651                           wreg	equ	0xFE8
 22652                           indf1	equ	0xFE7
 22653                           postdec1	equ	0xFE5
 22654                           plusw1	equ	0xFE3
 22655                           fsr1h	equ	0xFE2
 22656                           fsr1l	equ	0xFE1
 22657                           indf2	equ	0xFDF
 22658                           postinc2	equ	0xFDE
 22659                           postdec2	equ	0xFDD
 22660                           plusw2	equ	0xFDB
 22661                           fsr2h	equ	0xFDA
 22662                           fsr2l	equ	0xFD9
 22663                           status	equ	0xFD8
 22664                           
 22665 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 22666 ;; Defined at:
 22667 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 22668 ;; Parameters:    Size  Location     Type
 22669 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 22670 ;;		 -> EUSART2_Receive_ISR(1), 
 22671 ;; Auto vars:     Size  Location     Type
 22672 ;;		None
 22673 ;; Return value:  Size  Location     Type
 22674 ;;                  1    wreg      void 
 22675 ;; Registers used:
 22676 ;;		wreg, status,2, status,0
 22677 ;; Tracked objects:
 22678 ;;		On entry : 0/0
 22679 ;;		On exit  : 0/0
 22680 ;;		Unchanged: 0/0
 22681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22682 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22685 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22686 ;;Total ram usage:        3 bytes
 22687 ;; Hardware stack levels used:    1
 22688 ;; Hardware stack levels required when called:   13
 22689 ;; This function calls:
 22690 ;;		Nothing
 22691 ;; This function is called by:
 22692 ;;		_EUSART2_Initialize
 22693 ;; This function uses a non-reentrant model
 22694 ;;
 22695                           
 22696                           	psect	text64
 22697  018374                     __ptext64:
 22698                           	opt stack 0
 22699  018374                     _EUSART2_SetRxInterruptHandler:
 22700                           	opt stack 15
 22701                           
 22702                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 22703                           
 22704                           ;incstack = 0
 22705  018374  C117  F270         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 22706  018378  C118  F271         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 22707  01837C  C119  F272         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 22708  018380  0012               	return		;funcret
 22709  018382                     __end_of_EUSART2_SetRxInterruptHandler:
 22710                           	opt stack 0
 22711                           tblptru	equ	0xFF8
 22712                           tblptrh	equ	0xFF7
 22713                           tblptrl	equ	0xFF6
 22714                           tablat	equ	0xFF5
 22715                           prodh	equ	0xFF4
 22716                           prodl	equ	0xFF3
 22717                           intcon	equ	0xFF2
 22718                           indf0	equ	0xFEF
 22719                           postinc0	equ	0xFEE
 22720                           fsr0h	equ	0xFEA
 22721                           fsr0l	equ	0xFE9
 22722                           wreg	equ	0xFE8
 22723                           indf1	equ	0xFE7
 22724                           postdec1	equ	0xFE5
 22725                           plusw1	equ	0xFE3
 22726                           fsr1h	equ	0xFE2
 22727                           fsr1l	equ	0xFE1
 22728                           indf2	equ	0xFDF
 22729                           postinc2	equ	0xFDE
 22730                           postdec2	equ	0xFDD
 22731                           plusw2	equ	0xFDB
 22732                           fsr2h	equ	0xFDA
 22733                           fsr2l	equ	0xFD9
 22734                           status	equ	0xFD8
 22735                           
 22736 ;; *************** function _ADCC_Initialize *****************
 22737 ;; Defined at:
 22738 ;;		line 63 in file "mcc_generated_files/adcc.c"
 22739 ;; Parameters:    Size  Location     Type
 22740 ;;		None
 22741 ;; Auto vars:     Size  Location     Type
 22742 ;;		None
 22743 ;; Return value:  Size  Location     Type
 22744 ;;                  1    wreg      void 
 22745 ;; Registers used:
 22746 ;;		wreg, status,2, status,0, cstack
 22747 ;; Tracked objects:
 22748 ;;		On entry : 0/0
 22749 ;;		On exit  : 0/0
 22750 ;;		Unchanged: 0/0
 22751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22756 ;;Total ram usage:        0 bytes
 22757 ;; Hardware stack levels used:    1
 22758 ;; Hardware stack levels required when called:   14
 22759 ;; This function calls:
 22760 ;;		_ADCC_SetADTIInterruptHandler
 22761 ;; This function is called by:
 22762 ;;		_SYSTEM_Initialize
 22763 ;; This function uses a non-reentrant model
 22764 ;;
 22765                           
 22766                           	psect	text65
 22767  01799E                     __ptext65:
 22768                           	opt stack 0
 22769  01799E                     _ADCC_Initialize:
 22770                           	opt stack 15
 22771                           
 22772                           ;adcc.c: 67: ADLTHL = 0x00;
 22773                           
 22774                           ;incstack = 0
 22775  01799E  0E00               	movlw	0
 22776  0179A0  6E6A               	movwf	3946,c	;volatile
 22777                           
 22778                           ;adcc.c: 69: ADLTHH = 0x00;
 22779  0179A2  0E00               	movlw	0
 22780  0179A4  6E6B               	movwf	3947,c	;volatile
 22781                           
 22782                           ;adcc.c: 71: ADUTHL = 0x00;
 22783  0179A6  0E00               	movlw	0
 22784  0179A8  6E6C               	movwf	3948,c	;volatile
 22785                           
 22786                           ;adcc.c: 73: ADUTHH = 0x00;
 22787  0179AA  0E00               	movlw	0
 22788  0179AC  6E6D               	movwf	3949,c	;volatile
 22789                           
 22790                           ;adcc.c: 75: ADSTPTL = 0x00;
 22791  0179AE  0E00               	movlw	0
 22792  0179B0  6E68               	movwf	3944,c	;volatile
 22793                           
 22794                           ;adcc.c: 77: ADSTPTH = 0x00;
 22795  0179B2  0E00               	movlw	0
 22796  0179B4  6E69               	movwf	3945,c	;volatile
 22797                           
 22798                           ;adcc.c: 79: ADRPT = 0xFF;
 22799  0179B6  6866               	setf	3942,c	;volatile
 22800                           
 22801                           ;adcc.c: 81: ADPCH = 0x00;
 22802  0179B8  0E00               	movlw	0
 22803  0179BA  010F               	movlb	15	; () banked
 22804  0179BC  6F5F               	movwf	95,b	;volatile
 22805                           
 22806                           ;adcc.c: 83: ADCAP = 0x00;
 22807  0179BE  0E00               	movlw	0
 22808  0179C0  6F5D               	movwf	93,b	;volatile
 22809                           
 22810                           ;adcc.c: 85: ADCON1 = 0x00;
 22811  0179C2  0E00               	movlw	0
 22812  0179C4  6F59               	movwf	89,b	;volatile
 22813                           
 22814                           ;adcc.c: 87: ADCON2 = 0x04;
 22815  0179C6  0E04               	movlw	4
 22816  0179C8  6F5A               	movwf	90,b	;volatile
 22817                           
 22818                           ;adcc.c: 89: ADCON3 = 0x5F;
 22819  0179CA  0E5F               	movlw	95
 22820  0179CC  6F5B               	movwf	91,b	;volatile
 22821                           
 22822                           ;adcc.c: 91: ADSTAT = 0x00;
 22823  0179CE  0E00               	movlw	0
 22824  0179D0  6E65               	movwf	3941,c	;volatile
 22825                           
 22826                           ;adcc.c: 93: ADREF = 0x12;
 22827  0179D2  0E12               	movlw	18
 22828  0179D4  6F58               	movwf	88,b	;volatile
 22829                           
 22830                           ;adcc.c: 95: ADACT = 0x00;
 22831  0179D6  0E00               	movlw	0
 22832  0179D8  6F56               	movwf	86,b	;volatile
 22833                           
 22834                           ;adcc.c: 97: ADCLK = 0x1F;
 22835  0179DA  0E1F               	movlw	31
 22836  0179DC  6F57               	movwf	87,b	;volatile
 22837                           
 22838                           ;adcc.c: 99: ADCON0 = 0xC4;
 22839  0179DE  0EC4               	movlw	196
 22840  0179E0  6E60               	movwf	3936,c	;volatile
 22841                           
 22842                           ; BSR set to: 15
 22843                           ;adcc.c: 101: ADACQ = 0xFF;
 22844  0179E2  695C               	setf	92,b	;volatile
 22845                           
 22846                           ; BSR set to: 15
 22847                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 22848  0179E4  010E               	movlb	14	; () banked
 22849  0179E6  9334               	bcf	52,1,b	;volatile
 22850                           
 22851                           ; BSR set to: 14
 22852                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 22853  0179E8  832A               	bsf	42,1,b	;volatile
 22854                           
 22855                           ; BSR set to: 14
 22856                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 22857  0179EA  0EEE               	movlw	low _ADCC_DefaultInterruptHandler
 22858  0179EC  0101               	movlb	1	; () banked
 22859  0179EE  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 22860  0179F0  0E83               	movlw	high _ADCC_DefaultInterruptHandler
 22861  0179F2  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 22862  0179F4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 22863  0179F6  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 22864  0179F8  ECC1  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22865  0179FC  0012               	return		;funcret
 22866  0179FE                     __end_of_ADCC_Initialize:
 22867                           	opt stack 0
 22868                           tblptru	equ	0xFF8
 22869                           tblptrh	equ	0xFF7
 22870                           tblptrl	equ	0xFF6
 22871                           tablat	equ	0xFF5
 22872                           prodh	equ	0xFF4
 22873                           prodl	equ	0xFF3
 22874                           intcon	equ	0xFF2
 22875                           indf0	equ	0xFEF
 22876                           postinc0	equ	0xFEE
 22877                           fsr0h	equ	0xFEA
 22878                           fsr0l	equ	0xFE9
 22879                           wreg	equ	0xFE8
 22880                           indf1	equ	0xFE7
 22881                           postdec1	equ	0xFE5
 22882                           plusw1	equ	0xFE3
 22883                           fsr1h	equ	0xFE2
 22884                           fsr1l	equ	0xFE1
 22885                           indf2	equ	0xFDF
 22886                           postinc2	equ	0xFDE
 22887                           postdec2	equ	0xFDD
 22888                           plusw2	equ	0xFDB
 22889                           fsr2h	equ	0xFDA
 22890                           fsr2l	equ	0xFD9
 22891                           status	equ	0xFD8
 22892                           
 22893 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22894 ;; Defined at:
 22895 ;;		line 307 in file "mcc_generated_files/adcc.c"
 22896 ;; Parameters:    Size  Location     Type
 22897 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 22898 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;		None
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1    wreg      void 
 22903 ;; Registers used:
 22904 ;;		wreg, status,2, status,0
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/0
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22910 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22913 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22914 ;;Total ram usage:        3 bytes
 22915 ;; Hardware stack levels used:    1
 22916 ;; Hardware stack levels required when called:   13
 22917 ;; This function calls:
 22918 ;;		Nothing
 22919 ;; This function is called by:
 22920 ;;		_ADCC_Initialize
 22921 ;;		_main
 22922 ;; This function uses a non-reentrant model
 22923 ;;
 22924                           
 22925                           	psect	text66
 22926  018382                     __ptext66:
 22927                           	opt stack 0
 22928  018382                     _ADCC_SetADTIInterruptHandler:
 22929                           	opt stack 15
 22930                           
 22931                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 22932                           
 22933                           ;incstack = 0
 22934  018382  C117  F26A         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 22935  018386  C118  F26B         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 22936  01838A  C119  F26C         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 22937  01838E  0012               	return		;funcret
 22938  018390                     __end_of_ADCC_SetADTIInterruptHandler:
 22939                           	opt stack 0
 22940                           tblptru	equ	0xFF8
 22941                           tblptrh	equ	0xFF7
 22942                           tblptrl	equ	0xFF6
 22943                           tablat	equ	0xFF5
 22944                           prodh	equ	0xFF4
 22945                           prodl	equ	0xFF3
 22946                           intcon	equ	0xFF2
 22947                           indf0	equ	0xFEF
 22948                           postinc0	equ	0xFEE
 22949                           fsr0h	equ	0xFEA
 22950                           fsr0l	equ	0xFE9
 22951                           wreg	equ	0xFE8
 22952                           indf1	equ	0xFE7
 22953                           postdec1	equ	0xFE5
 22954                           plusw1	equ	0xFE3
 22955                           fsr1h	equ	0xFE2
 22956                           fsr1l	equ	0xFE1
 22957                           indf2	equ	0xFDF
 22958                           postinc2	equ	0xFDE
 22959                           postdec2	equ	0xFDD
 22960                           plusw2	equ	0xFDB
 22961                           fsr2h	equ	0xFDA
 22962                           fsr2l	equ	0xFD9
 22963                           status	equ	0xFD8
 22964                           
 22965 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 22966 ;; Defined at:
 22967 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;		None
 22970 ;; Auto vars:     Size  Location     Type
 22971 ;;		None
 22972 ;; Return value:  Size  Location     Type
 22973 ;;                  1    wreg      void 
 22974 ;; Registers used:
 22975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22976 ;; Tracked objects:
 22977 ;;		On entry : 0/0
 22978 ;;		On exit  : 0/0
 22979 ;;		Unchanged: 0/0
 22980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22983 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22984 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22985 ;;Total ram usage:       21 bytes
 22986 ;; Hardware stack levels used:    1
 22987 ;; Hardware stack levels required when called:   12
 22988 ;; This function calls:
 22989 ;;		Absolute function
 22990 ;;		_EUSART2_Transmit_ISR
 22991 ;;		_HLVD_ISR
 22992 ;;		_TMR6_ISR
 22993 ;;		_TMR7_ISR
 22994 ;; This function is called by:
 22995 ;;		Interrupt level 1
 22996 ;; This function uses a non-reentrant model
 22997 ;;
 22998                           
 22999                           	psect	intcodelo
 23000  000018                     __pintcodelo:
 23001                           	opt stack 0
 23002  000018                     _INTERRUPT_InterruptManagerLow:
 23003                           	opt stack 11
 23004                           
 23005                           ;incstack = 0
 23006  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 23007  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 23008  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 23009  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 23010  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 23011  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 23012  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 23013  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 23014  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 23015  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 23016  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 23017  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 23018  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 23019  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 23020  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 23021  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 23022  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 23023  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 23024  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 23025  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 23026  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 23027  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 23028                           
 23029                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 23030  00006E  010E               	movlb	14	; () banked
 23031  000070  BB2E               	btfsc	46,5,b	;volatile
 23032                           
 23033                           ; BSR set to: 14
 23034  000072  AB38               	btfss	56,5,b	;volatile
 23035  000074  D003               	goto	i1l223
 23036                           
 23037                           ; BSR set to: 14
 23038                           ;interrupt_manager.c: 108: {
 23039                           ;interrupt_manager.c: 109: TMR6_ISR();
 23040  000076  EC6D  F0C0         	call	_TMR6_ISR	;wreg free
 23041                           
 23042                           ;interrupt_manager.c: 110: }
 23043  00007A  D01B               	goto	i1l229
 23044  00007C                     i1l223:
 23045                           
 23046                           ; BSR set to: 14
 23047                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 23048  00007C  BD2C               	btfsc	44,6,b	;volatile
 23049                           
 23050                           ; BSR set to: 14
 23051  00007E  AD36               	btfss	54,6,b	;volatile
 23052  000080  D00D               	goto	i1l225
 23053                           
 23054                           ; BSR set to: 14
 23055                           ;interrupt_manager.c: 112: {
 23056                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 23057  000082  D801               	call	i1u1818_28
 23058  000084  D016               	goto	i1l229
 23059  000086                     i1u1818_28:
 23060  000086  0005               	push	
 23061  000088  6EFA               	movwf	pclath,c
 23062  00008A  0102               	movlb	2	; () banked
 23063  00008C  5173               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 23064  00008E  6EFD               	movwf	tosl,c
 23065  000090  5174               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 23066  000092  6EFE               	movwf	tosh,c
 23067  000094  5175               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 23068  000096  6EFF               	movwf	tosu,c
 23069  000098  50FA               	movf	pclath,w,c
 23070  00009A  0012               	return		;indir
 23071  00009C                     i1l225:
 23072                           
 23073                           ; BSR set to: 14
 23074                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 23075  00009C  BD2E               	btfsc	46,6,b	;volatile
 23076                           
 23077                           ; BSR set to: 14
 23078  00009E  AD38               	btfss	56,6,b	;volatile
 23079  0000A0  D003               	goto	i1l227
 23080                           
 23081                           ; BSR set to: 14
 23082                           ;interrupt_manager.c: 116: {
 23083                           ;interrupt_manager.c: 117: TMR7_ISR();
 23084  0000A2  EC99  F0BF         	call	_TMR7_ISR	;wreg free
 23085                           
 23086                           ;interrupt_manager.c: 118: }
 23087  0000A6  D005               	goto	i1l229
 23088  0000A8                     i1l227:
 23089                           
 23090                           ; BSR set to: 14
 23091                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 23092  0000A8  BF2B               	btfsc	43,7,b	;volatile
 23093                           
 23094                           ; BSR set to: 14
 23095  0000AA  AF35               	btfss	53,7,b	;volatile
 23096  0000AC  D002               	goto	i1l229
 23097                           
 23098                           ; BSR set to: 14
 23099                           ;interrupt_manager.c: 120: {
 23100                           ;interrupt_manager.c: 121: HLVD_ISR();
 23101  0000AE  ECE2  F0C1         	call	_HLVD_ISR	;wreg free
 23102  0000B2                     i1l229:
 23103                           
 23104                           ;interrupt_manager.c: 123: else
 23105                           ;interrupt_manager.c: 124: {
 23106  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 23107  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 23108  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 23109  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 23110  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 23111  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 23112  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 23113  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 23114  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 23115  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 23116  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 23117  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 23118  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 23119  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 23120  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 23121  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 23122  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 23123  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 23124  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 23125  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 23126  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 23127  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 23128  000108  0010               	retfie	
 23129  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 23130                           	opt stack 0
 23131                           tosu	equ	0xFFF
 23132                           tosh	equ	0xFFE
 23133                           tosl	equ	0xFFD
 23134                           pclatu	equ	0xFFB
 23135                           pclath	equ	0xFFA
 23136                           tblptru	equ	0xFF8
 23137                           tblptrh	equ	0xFF7
 23138                           tblptrl	equ	0xFF6
 23139                           tablat	equ	0xFF5
 23140                           prodh	equ	0xFF4
 23141                           prodl	equ	0xFF3
 23142                           intcon	equ	0xFF2
 23143                           indf0	equ	0xFEF
 23144                           postinc0	equ	0xFEE
 23145                           fsr0h	equ	0xFEA
 23146                           fsr0l	equ	0xFE9
 23147                           wreg	equ	0xFE8
 23148                           indf1	equ	0xFE7
 23149                           postdec1	equ	0xFE5
 23150                           plusw1	equ	0xFE3
 23151                           fsr1h	equ	0xFE2
 23152                           fsr1l	equ	0xFE1
 23153                           bsr	equ	0xFE0
 23154                           indf2	equ	0xFDF
 23155                           postinc2	equ	0xFDE
 23156                           postdec2	equ	0xFDD
 23157                           plusw2	equ	0xFDB
 23158                           fsr2h	equ	0xFDA
 23159                           fsr2l	equ	0xFD9
 23160                           status	equ	0xFD8
 23161                           
 23162 ;; *************** function _TMR7_ISR *****************
 23163 ;; Defined at:
 23164 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 23165 ;; Parameters:    Size  Location     Type
 23166 ;;		None
 23167 ;; Auto vars:     Size  Location     Type
 23168 ;;		None
 23169 ;; Return value:  Size  Location     Type
 23170 ;;                  1    wreg      void 
 23171 ;; Registers used:
 23172 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23173 ;; Tracked objects:
 23174 ;;		On entry : 0/0
 23175 ;;		On exit  : 0/0
 23176 ;;		Unchanged: 0/0
 23177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23182 ;;Total ram usage:        0 bytes
 23183 ;; Hardware stack levels used:    1
 23184 ;; Hardware stack levels required when called:   11
 23185 ;; This function calls:
 23186 ;;		Absolute function
 23187 ;;		_TMR7_DefaultInterruptHandler
 23188 ;;		_TMR7_WriteTimer
 23189 ;;		_acquisitionTimerCallback
 23190 ;; This function is called by:
 23191 ;;		_INTERRUPT_InterruptManagerLow
 23192 ;; This function uses a non-reentrant model
 23193 ;;
 23194                           
 23195                           	psect	text68
 23196  017F32                     __ptext68:
 23197                           	opt stack 0
 23198  017F32                     _TMR7_ISR:
 23199                           	opt stack 11
 23200                           
 23201                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 23202                           
 23203                           ;incstack = 0
 23204  017F32  010E               	movlb	14	; () banked
 23205  017F34  9D38               	bcf	56,6,b	;volatile
 23206                           
 23207                           ; BSR set to: 14
 23208                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 23209  017F36  C1D7  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 23210  017F3A  C1D8  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 23211  017F3E  ECA8  F0C0         	call	_TMR7_WriteTimer	;wreg free
 23212                           
 23213                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 23214  017F42  0102               	movlb	2	; () banked
 23215  017F44  5167               	movf	_TMR7_InterruptHandler& (0+255),w,b
 23216  017F46  1168               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 23217  017F48  1169               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 23218  017F4A  B4D8               	btfsc	status,2,c
 23219  017F4C  0012               	return	
 23220                           
 23221                           ; BSR set to: 2
 23222                           ;tmr7.c: 172: {
 23223                           ;tmr7.c: 173: TMR7_InterruptHandler();
 23224  017F4E  D801               	call	i1u1806_28
 23225  017F50  0012               	return	
 23226  017F52                     i1u1806_28:
 23227  017F52  0005               	push	
 23228  017F54  6EFA               	movwf	pclath,c
 23229  017F56  5167               	movf	_TMR7_InterruptHandler& (0+255),w,b
 23230  017F58  6EFD               	movwf	tosl,c
 23231  017F5A  5168               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 23232  017F5C  6EFE               	movwf	tosh,c
 23233  017F5E  5169               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 23234  017F60  6EFF               	movwf	tosu,c
 23235  017F62  50FA               	movf	pclath,w,c
 23236  017F64  0012               	return		;indir
 23237  017F66                     __end_of_TMR7_ISR:
 23238                           	opt stack 0
 23239                           tosu	equ	0xFFF
 23240                           tosh	equ	0xFFE
 23241                           tosl	equ	0xFFD
 23242                           pclatu	equ	0xFFB
 23243                           pclath	equ	0xFFA
 23244                           tblptru	equ	0xFF8
 23245                           tblptrh	equ	0xFF7
 23246                           tblptrl	equ	0xFF6
 23247                           tablat	equ	0xFF5
 23248                           prodh	equ	0xFF4
 23249                           prodl	equ	0xFF3
 23250                           intcon	equ	0xFF2
 23251                           indf0	equ	0xFEF
 23252                           postinc0	equ	0xFEE
 23253                           fsr0h	equ	0xFEA
 23254                           fsr0l	equ	0xFE9
 23255                           wreg	equ	0xFE8
 23256                           indf1	equ	0xFE7
 23257                           postdec1	equ	0xFE5
 23258                           plusw1	equ	0xFE3
 23259                           fsr1h	equ	0xFE2
 23260                           fsr1l	equ	0xFE1
 23261                           bsr	equ	0xFE0
 23262                           indf2	equ	0xFDF
 23263                           postinc2	equ	0xFDE
 23264                           postdec2	equ	0xFDD
 23265                           plusw2	equ	0xFDB
 23266                           fsr2h	equ	0xFDA
 23267                           fsr2l	equ	0xFD9
 23268                           status	equ	0xFD8
 23269                           
 23270 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 23271 ;; Defined at:
 23272 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 23273 ;; Parameters:    Size  Location     Type
 23274 ;;		None
 23275 ;; Auto vars:     Size  Location     Type
 23276 ;;		None
 23277 ;; Return value:  Size  Location     Type
 23278 ;;                  1    wreg      void 
 23279 ;; Registers used:
 23280 ;;		None
 23281 ;; Tracked objects:
 23282 ;;		On entry : 0/0
 23283 ;;		On exit  : 0/0
 23284 ;;		Unchanged: 0/0
 23285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23290 ;;Total ram usage:        0 bytes
 23291 ;; Hardware stack levels used:    1
 23292 ;; Hardware stack levels required when called:    9
 23293 ;; This function calls:
 23294 ;;		Nothing
 23295 ;; This function is called by:
 23296 ;;		_TMR7_Initialize
 23297 ;;		_TMR7_ISR
 23298 ;; This function uses a non-reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text69
 23302  0183E8                     __ptext69:
 23303                           	opt stack 0
 23304  0183E8                     _TMR7_DefaultInterruptHandler:
 23305                           	opt stack 12
 23306                           
 23307                           ;incstack = 0
 23308  0183E8  0012               	return		;funcret
 23309  0183EA                     __end_of_TMR7_DefaultInterruptHandler:
 23310                           	opt stack 0
 23311                           tosu	equ	0xFFF
 23312                           tosh	equ	0xFFE
 23313                           tosl	equ	0xFFD
 23314                           pclatu	equ	0xFFB
 23315                           pclath	equ	0xFFA
 23316                           tblptru	equ	0xFF8
 23317                           tblptrh	equ	0xFF7
 23318                           tblptrl	equ	0xFF6
 23319                           tablat	equ	0xFF5
 23320                           prodh	equ	0xFF4
 23321                           prodl	equ	0xFF3
 23322                           intcon	equ	0xFF2
 23323                           indf0	equ	0xFEF
 23324                           postinc0	equ	0xFEE
 23325                           fsr0h	equ	0xFEA
 23326                           fsr0l	equ	0xFE9
 23327                           wreg	equ	0xFE8
 23328                           indf1	equ	0xFE7
 23329                           postdec1	equ	0xFE5
 23330                           plusw1	equ	0xFE3
 23331                           fsr1h	equ	0xFE2
 23332                           fsr1l	equ	0xFE1
 23333                           bsr	equ	0xFE0
 23334                           indf2	equ	0xFDF
 23335                           postinc2	equ	0xFDE
 23336                           postdec2	equ	0xFDD
 23337                           plusw2	equ	0xFDB
 23338                           fsr2h	equ	0xFDA
 23339                           fsr2l	equ	0xFD9
 23340                           status	equ	0xFD8
 23341                           
 23342 ;; *************** function _acquisitionTimerCallback *****************
 23343 ;; Defined at:
 23344 ;;		line 359 in file "main.c"
 23345 ;; Parameters:    Size  Location     Type
 23346 ;;		None
 23347 ;; Auto vars:     Size  Location     Type
 23348 ;;		None
 23349 ;; Return value:  Size  Location     Type
 23350 ;;                  1    wreg      void 
 23351 ;; Registers used:
 23352 ;;		wreg, status,2, cstack
 23353 ;; Tracked objects:
 23354 ;;		On entry : 0/0
 23355 ;;		On exit  : 0/0
 23356 ;;		Unchanged: 0/0
 23357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23362 ;;Total ram usage:        0 bytes
 23363 ;; Hardware stack levels used:    1
 23364 ;; Hardware stack levels required when called:   10
 23365 ;; This function calls:
 23366 ;;		_ADCC_ClearAccumulator
 23367 ;;		_ADCC_DischargeSampleCapacitor
 23368 ;;		_ADCC_StartConversion
 23369 ;; This function is called by:
 23370 ;;		_main
 23371 ;;		_TMR7_ISR
 23372 ;; This function uses a non-reentrant model
 23373 ;;
 23374                           
 23375                           	psect	text70
 23376  0182DC                     __ptext70:
 23377                           	opt stack 0
 23378  0182DC                     _acquisitionTimerCallback:
 23379                           	opt stack 11
 23380                           
 23381                           ;main.c: 362: ADCC_DischargeSampleCapacitor();
 23382                           
 23383                           ;incstack = 0
 23384  0182DC  ECDE  F0C1         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 23385                           
 23386                           ;main.c: 365: ADCC_ClearAccumulator();
 23387  0182E0  ECEC  F0C1         	call	_ADCC_ClearAccumulator	;wreg free
 23388                           
 23389                           ;main.c: 368: ADCC_StartConversion(next_channel);
 23390  0182E4  0101               	movlb	1	; () banked
 23391  0182E6  51E2               	movf	_next_channel& (0+255),w,b
 23392  0182E8  ECC8  F0C1         	call	_ADCC_StartConversion
 23393  0182EC  0012               	return		;funcret
 23394  0182EE                     __end_of_acquisitionTimerCallback:
 23395                           	opt stack 0
 23396                           tosu	equ	0xFFF
 23397                           tosh	equ	0xFFE
 23398                           tosl	equ	0xFFD
 23399                           pclatu	equ	0xFFB
 23400                           pclath	equ	0xFFA
 23401                           tblptru	equ	0xFF8
 23402                           tblptrh	equ	0xFF7
 23403                           tblptrl	equ	0xFF6
 23404                           tablat	equ	0xFF5
 23405                           prodh	equ	0xFF4
 23406                           prodl	equ	0xFF3
 23407                           intcon	equ	0xFF2
 23408                           indf0	equ	0xFEF
 23409                           postinc0	equ	0xFEE
 23410                           fsr0h	equ	0xFEA
 23411                           fsr0l	equ	0xFE9
 23412                           wreg	equ	0xFE8
 23413                           indf1	equ	0xFE7
 23414                           postdec1	equ	0xFE5
 23415                           plusw1	equ	0xFE3
 23416                           fsr1h	equ	0xFE2
 23417                           fsr1l	equ	0xFE1
 23418                           bsr	equ	0xFE0
 23419                           indf2	equ	0xFDF
 23420                           postinc2	equ	0xFDE
 23421                           postdec2	equ	0xFDD
 23422                           plusw2	equ	0xFDB
 23423                           fsr2h	equ	0xFDA
 23424                           fsr2l	equ	0xFD9
 23425                           status	equ	0xFD8
 23426                           
 23427 ;; *************** function _ADCC_StartConversion *****************
 23428 ;; Defined at:
 23429 ;;		line 112 in file "mcc_generated_files/adcc.c"
 23430 ;; Parameters:    Size  Location     Type
 23431 ;;  channel         1    wreg     enum E17310
 23432 ;; Auto vars:     Size  Location     Type
 23433 ;;  channel         1    0[BANK1 ] enum E17310
 23434 ;; Return value:  Size  Location     Type
 23435 ;;                  1    wreg      void 
 23436 ;; Registers used:
 23437 ;;		wreg
 23438 ;; Tracked objects:
 23439 ;;		On entry : 0/0
 23440 ;;		On exit  : 0/0
 23441 ;;		Unchanged: 0/0
 23442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23444 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23446 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23447 ;;Total ram usage:        1 bytes
 23448 ;; Hardware stack levels used:    1
 23449 ;; Hardware stack levels required when called:    9
 23450 ;; This function calls:
 23451 ;;		Nothing
 23452 ;; This function is called by:
 23453 ;;		_acquisitionTimerCallback
 23454 ;; This function uses a non-reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text71
 23458  018390                     __ptext71:
 23459                           	opt stack 0
 23460  018390                     _ADCC_StartConversion:
 23461                           	opt stack 11
 23462                           
 23463                           ;incstack = 0
 23464                           ;ADCC_StartConversion@channel stored from wreg
 23465  018390  0101               	movlb	1	; () banked
 23466  018392  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 23467                           
 23468                           ;adcc.c: 115: ADPCH = channel;
 23469  018394  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 23470                           
 23471                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 23472  018398  8E60               	bsf	3936,7,c	;volatile
 23473                           
 23474                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 23475  01839A  8060               	bsf	3936,0,c	;volatile
 23476  01839C  0012               	return		;funcret
 23477  01839E                     __end_of_ADCC_StartConversion:
 23478                           	opt stack 0
 23479                           tosu	equ	0xFFF
 23480                           tosh	equ	0xFFE
 23481                           tosl	equ	0xFFD
 23482                           pclatu	equ	0xFFB
 23483                           pclath	equ	0xFFA
 23484                           tblptru	equ	0xFF8
 23485                           tblptrh	equ	0xFF7
 23486                           tblptrl	equ	0xFF6
 23487                           tablat	equ	0xFF5
 23488                           prodh	equ	0xFF4
 23489                           prodl	equ	0xFF3
 23490                           intcon	equ	0xFF2
 23491                           indf0	equ	0xFEF
 23492                           postinc0	equ	0xFEE
 23493                           fsr0h	equ	0xFEA
 23494                           fsr0l	equ	0xFE9
 23495                           wreg	equ	0xFE8
 23496                           indf1	equ	0xFE7
 23497                           postdec1	equ	0xFE5
 23498                           plusw1	equ	0xFE3
 23499                           fsr1h	equ	0xFE2
 23500                           fsr1l	equ	0xFE1
 23501                           bsr	equ	0xFE0
 23502                           indf2	equ	0xFDF
 23503                           postinc2	equ	0xFDE
 23504                           postdec2	equ	0xFDD
 23505                           plusw2	equ	0xFDB
 23506                           fsr2h	equ	0xFDA
 23507                           fsr2l	equ	0xFD9
 23508                           status	equ	0xFD8
 23509                           
 23510 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 23511 ;; Defined at:
 23512 ;;		line 174 in file "mcc_generated_files/adcc.c"
 23513 ;; Parameters:    Size  Location     Type
 23514 ;;		None
 23515 ;; Auto vars:     Size  Location     Type
 23516 ;;		None
 23517 ;; Return value:  Size  Location     Type
 23518 ;;                  1    wreg      void 
 23519 ;; Registers used:
 23520 ;;		wreg, status,2
 23521 ;; Tracked objects:
 23522 ;;		On entry : 0/0
 23523 ;;		On exit  : 0/0
 23524 ;;		Unchanged: 0/0
 23525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23530 ;;Total ram usage:        0 bytes
 23531 ;; Hardware stack levels used:    1
 23532 ;; Hardware stack levels required when called:    9
 23533 ;; This function calls:
 23534 ;;		Nothing
 23535 ;; This function is called by:
 23536 ;;		_acquisitionTimerCallback
 23537 ;; This function uses a non-reentrant model
 23538 ;;
 23539                           
 23540                           	psect	text72
 23541  0183BC                     __ptext72:
 23542                           	opt stack 0
 23543  0183BC                     _ADCC_DischargeSampleCapacitor:
 23544                           	opt stack 11
 23545                           
 23546                           ;adcc.c: 177: ADPCH = 0x3c;
 23547                           
 23548                           ;incstack = 0
 23549  0183BC  0E3C               	movlw	60
 23550  0183BE  010F               	movlb	15	; () banked
 23551  0183C0  6F5F               	movwf	95,b	;volatile
 23552                           
 23553                           ; BSR set to: 15
 23554  0183C2  0012               	return		;funcret
 23555  0183C4                     __end_of_ADCC_DischargeSampleCapacitor:
 23556                           	opt stack 0
 23557                           tosu	equ	0xFFF
 23558                           tosh	equ	0xFFE
 23559                           tosl	equ	0xFFD
 23560                           pclatu	equ	0xFFB
 23561                           pclath	equ	0xFFA
 23562                           tblptru	equ	0xFF8
 23563                           tblptrh	equ	0xFF7
 23564                           tblptrl	equ	0xFF6
 23565                           tablat	equ	0xFF5
 23566                           prodh	equ	0xFF4
 23567                           prodl	equ	0xFF3
 23568                           intcon	equ	0xFF2
 23569                           indf0	equ	0xFEF
 23570                           postinc0	equ	0xFEE
 23571                           fsr0h	equ	0xFEA
 23572                           fsr0l	equ	0xFE9
 23573                           wreg	equ	0xFE8
 23574                           indf1	equ	0xFE7
 23575                           postdec1	equ	0xFE5
 23576                           plusw1	equ	0xFE3
 23577                           fsr1h	equ	0xFE2
 23578                           fsr1l	equ	0xFE1
 23579                           bsr	equ	0xFE0
 23580                           indf2	equ	0xFDF
 23581                           postinc2	equ	0xFDE
 23582                           postdec2	equ	0xFDD
 23583                           plusw2	equ	0xFDB
 23584                           fsr2h	equ	0xFDA
 23585                           fsr2l	equ	0xFD9
 23586                           status	equ	0xFD8
 23587                           
 23588 ;; *************** function _ADCC_ClearAccumulator *****************
 23589 ;; Defined at:
 23590 ;;		line 204 in file "mcc_generated_files/adcc.c"
 23591 ;; Parameters:    Size  Location     Type
 23592 ;;		None
 23593 ;; Auto vars:     Size  Location     Type
 23594 ;;		None
 23595 ;; Return value:  Size  Location     Type
 23596 ;;                  1    wreg      void 
 23597 ;; Registers used:
 23598 ;;		None
 23599 ;; Tracked objects:
 23600 ;;		On entry : 0/0
 23601 ;;		On exit  : 0/0
 23602 ;;		Unchanged: 0/0
 23603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23608 ;;Total ram usage:        0 bytes
 23609 ;; Hardware stack levels used:    1
 23610 ;; Hardware stack levels required when called:    9
 23611 ;; This function calls:
 23612 ;;		Nothing
 23613 ;; This function is called by:
 23614 ;;		_acquisitionTimerCallback
 23615 ;; This function uses a non-reentrant model
 23616 ;;
 23617                           
 23618                           	psect	text73
 23619  0183D8                     __ptext73:
 23620                           	opt stack 0
 23621  0183D8                     _ADCC_ClearAccumulator:
 23622                           	opt stack 11
 23623                           
 23624                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 23625                           
 23626                           ; BSR set to: 15
 23627                           ;incstack = 0
 23628  0183D8  010F               	movlb	15	; () banked
 23629  0183DA  875A               	bsf	90,3,b	;volatile
 23630                           
 23631                           ; BSR set to: 15
 23632  0183DC  0012               	return		;funcret
 23633  0183DE                     __end_of_ADCC_ClearAccumulator:
 23634                           	opt stack 0
 23635                           tosu	equ	0xFFF
 23636                           tosh	equ	0xFFE
 23637                           tosl	equ	0xFFD
 23638                           pclatu	equ	0xFFB
 23639                           pclath	equ	0xFFA
 23640                           tblptru	equ	0xFF8
 23641                           tblptrh	equ	0xFF7
 23642                           tblptrl	equ	0xFF6
 23643                           tablat	equ	0xFF5
 23644                           prodh	equ	0xFF4
 23645                           prodl	equ	0xFF3
 23646                           intcon	equ	0xFF2
 23647                           indf0	equ	0xFEF
 23648                           postinc0	equ	0xFEE
 23649                           fsr0h	equ	0xFEA
 23650                           fsr0l	equ	0xFE9
 23651                           wreg	equ	0xFE8
 23652                           indf1	equ	0xFE7
 23653                           postdec1	equ	0xFE5
 23654                           plusw1	equ	0xFE3
 23655                           fsr1h	equ	0xFE2
 23656                           fsr1l	equ	0xFE1
 23657                           bsr	equ	0xFE0
 23658                           indf2	equ	0xFDF
 23659                           postinc2	equ	0xFDE
 23660                           postdec2	equ	0xFDD
 23661                           plusw2	equ	0xFDB
 23662                           fsr2h	equ	0xFDA
 23663                           fsr2l	equ	0xFD9
 23664                           status	equ	0xFD8
 23665                           
 23666 ;; *************** function _TMR7_WriteTimer *****************
 23667 ;; Defined at:
 23668 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 23669 ;; Parameters:    Size  Location     Type
 23670 ;;  timerVal        2    0[BANK1 ] unsigned int 
 23671 ;; Auto vars:     Size  Location     Type
 23672 ;;		None
 23673 ;; Return value:  Size  Location     Type
 23674 ;;                  1    wreg      void 
 23675 ;; Registers used:
 23676 ;;		wreg, status,2
 23677 ;; Tracked objects:
 23678 ;;		On entry : 0/0
 23679 ;;		On exit  : 0/0
 23680 ;;		Unchanged: 0/0
 23681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23682 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23685 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23686 ;;Total ram usage:        2 bytes
 23687 ;; Hardware stack levels used:    1
 23688 ;; Hardware stack levels required when called:    9
 23689 ;; This function calls:
 23690 ;;		Nothing
 23691 ;; This function is called by:
 23692 ;;		_TMR7_ISR
 23693 ;;		_TMR7_Reload
 23694 ;; This function uses a non-reentrant model
 23695 ;;
 23696                           
 23697                           	psect	text74
 23698  018150                     __ptext74:
 23699                           	opt stack 0
 23700  018150                     _TMR7_WriteTimer:
 23701                           	opt stack 12
 23702                           
 23703                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 23704                           
 23705                           ; BSR set to: 15
 23706                           ;incstack = 0
 23707  018150  010F               	movlb	15	; () banked
 23708  018152  A530               	btfss	48,2,b	;volatile
 23709  018154  D009               	goto	i1l640
 23710                           
 23711                           ; BSR set to: 15
 23712                           ;tmr7.c: 130: {
 23713                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 23714  018156  9130               	bcf	48,0,b	;volatile
 23715                           
 23716                           ; BSR set to: 15
 23717                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 23718  018158  0101               	movlb	1	; () banked
 23719  01815A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23720  01815C  010F               	movlb	15	; () banked
 23721  01815E  6F2F               	movwf	47,b	;volatile
 23722                           
 23723                           ; BSR set to: 15
 23724                           ;tmr7.c: 136: TMR7L = timerVal;
 23725  018160  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23726                           
 23727                           ; BSR set to: 15
 23728                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 23729  018164  8130               	bsf	48,0,b	;volatile
 23730                           
 23731                           ;tmr7.c: 140: }
 23732  018166  0012               	return	
 23733  018168                     i1l640:
 23734                           
 23735                           ; BSR set to: 15
 23736                           ;tmr7.c: 141: else
 23737                           ;tmr7.c: 142: {
 23738                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 23739                           
 23740                           ; BSR set to: 15
 23741  018168  0101               	movlb	1	; () banked
 23742  01816A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 23743  01816C  010F               	movlb	15	; () banked
 23744  01816E  6F2F               	movwf	47,b	;volatile
 23745                           
 23746                           ; BSR set to: 15
 23747                           ;tmr7.c: 145: TMR7L = timerVal;
 23748  018170  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 23749  018174  0012               	return	
 23750  018176                     __end_of_TMR7_WriteTimer:
 23751                           	opt stack 0
 23752                           tosu	equ	0xFFF
 23753                           tosh	equ	0xFFE
 23754                           tosl	equ	0xFFD
 23755                           pclatu	equ	0xFFB
 23756                           pclath	equ	0xFFA
 23757                           tblptru	equ	0xFF8
 23758                           tblptrh	equ	0xFF7
 23759                           tblptrl	equ	0xFF6
 23760                           tablat	equ	0xFF5
 23761                           prodh	equ	0xFF4
 23762                           prodl	equ	0xFF3
 23763                           intcon	equ	0xFF2
 23764                           indf0	equ	0xFEF
 23765                           postinc0	equ	0xFEE
 23766                           fsr0h	equ	0xFEA
 23767                           fsr0l	equ	0xFE9
 23768                           wreg	equ	0xFE8
 23769                           indf1	equ	0xFE7
 23770                           postdec1	equ	0xFE5
 23771                           plusw1	equ	0xFE3
 23772                           fsr1h	equ	0xFE2
 23773                           fsr1l	equ	0xFE1
 23774                           bsr	equ	0xFE0
 23775                           indf2	equ	0xFDF
 23776                           postinc2	equ	0xFDE
 23777                           postdec2	equ	0xFDD
 23778                           plusw2	equ	0xFDB
 23779                           fsr2h	equ	0xFDA
 23780                           fsr2l	equ	0xFD9
 23781                           status	equ	0xFD8
 23782                           
 23783 ;; *************** function _TMR6_ISR *****************
 23784 ;; Defined at:
 23785 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 23786 ;; Parameters:    Size  Location     Type
 23787 ;;		None
 23788 ;; Auto vars:     Size  Location     Type
 23789 ;;		None
 23790 ;; Return value:  Size  Location     Type
 23791 ;;                  1    wreg      void 
 23792 ;; Registers used:
 23793 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23794 ;; Tracked objects:
 23795 ;;		On entry : 0/0
 23796 ;;		On exit  : 0/0
 23797 ;;		Unchanged: 0/0
 23798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23803 ;;Total ram usage:        0 bytes
 23804 ;; Hardware stack levels used:    1
 23805 ;; Hardware stack levels required when called:   10
 23806 ;; This function calls:
 23807 ;;		Absolute function
 23808 ;;		_TMR6_DefaultInterruptHandler
 23809 ;;		_heartbeatTimerCallback
 23810 ;; This function is called by:
 23811 ;;		_INTERRUPT_InterruptManagerLow
 23812 ;; This function uses a non-reentrant model
 23813 ;;
 23814                           
 23815                           	psect	text75
 23816  0180DA                     __ptext75:
 23817                           	opt stack 0
 23818  0180DA                     _TMR6_ISR:
 23819                           	opt stack 12
 23820                           
 23821                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 23822                           
 23823                           ; BSR set to: 15
 23824                           ;incstack = 0
 23825  0180DA  010E               	movlb	14	; () banked
 23826  0180DC  9B38               	bcf	56,5,b	;volatile
 23827                           
 23828                           ; BSR set to: 14
 23829                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 23830  0180DE  0102               	movlb	2	; () banked
 23831  0180E0  516D               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23832  0180E2  116E               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23833  0180E4  116F               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23834  0180E6  B4D8               	btfsc	status,2,c
 23835  0180E8  0012               	return	
 23836                           
 23837                           ; BSR set to: 2
 23838                           ;tmr6.c: 172: {
 23839                           ;tmr6.c: 173: TMR6_InterruptHandler();
 23840  0180EA  D801               	call	i1u1804_28
 23841  0180EC  0012               	return	
 23842  0180EE                     i1u1804_28:
 23843  0180EE  0005               	push	
 23844  0180F0  6EFA               	movwf	pclath,c
 23845  0180F2  516D               	movf	_TMR6_InterruptHandler& (0+255),w,b
 23846  0180F4  6EFD               	movwf	tosl,c
 23847  0180F6  516E               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 23848  0180F8  6EFE               	movwf	tosh,c
 23849  0180FA  516F               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 23850  0180FC  6EFF               	movwf	tosu,c
 23851  0180FE  50FA               	movf	pclath,w,c
 23852  018100  0012               	return		;indir
 23853  018102                     __end_of_TMR6_ISR:
 23854                           	opt stack 0
 23855                           tosu	equ	0xFFF
 23856                           tosh	equ	0xFFE
 23857                           tosl	equ	0xFFD
 23858                           pclatu	equ	0xFFB
 23859                           pclath	equ	0xFFA
 23860                           tblptru	equ	0xFF8
 23861                           tblptrh	equ	0xFF7
 23862                           tblptrl	equ	0xFF6
 23863                           tablat	equ	0xFF5
 23864                           prodh	equ	0xFF4
 23865                           prodl	equ	0xFF3
 23866                           intcon	equ	0xFF2
 23867                           indf0	equ	0xFEF
 23868                           postinc0	equ	0xFEE
 23869                           fsr0h	equ	0xFEA
 23870                           fsr0l	equ	0xFE9
 23871                           wreg	equ	0xFE8
 23872                           indf1	equ	0xFE7
 23873                           postdec1	equ	0xFE5
 23874                           plusw1	equ	0xFE3
 23875                           fsr1h	equ	0xFE2
 23876                           fsr1l	equ	0xFE1
 23877                           bsr	equ	0xFE0
 23878                           indf2	equ	0xFDF
 23879                           postinc2	equ	0xFDE
 23880                           postdec2	equ	0xFDD
 23881                           plusw2	equ	0xFDB
 23882                           fsr2h	equ	0xFDA
 23883                           fsr2l	equ	0xFD9
 23884                           status	equ	0xFD8
 23885                           
 23886 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 23887 ;; Defined at:
 23888 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 23889 ;; Parameters:    Size  Location     Type
 23890 ;;		None
 23891 ;; Auto vars:     Size  Location     Type
 23892 ;;		None
 23893 ;; Return value:  Size  Location     Type
 23894 ;;                  1    wreg      void 
 23895 ;; Registers used:
 23896 ;;		None
 23897 ;; Tracked objects:
 23898 ;;		On entry : 0/0
 23899 ;;		On exit  : 0/0
 23900 ;;		Unchanged: 0/0
 23901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23906 ;;Total ram usage:        0 bytes
 23907 ;; Hardware stack levels used:    1
 23908 ;; Hardware stack levels required when called:    9
 23909 ;; This function calls:
 23910 ;;		Nothing
 23911 ;; This function is called by:
 23912 ;;		_TMR6_Initialize
 23913 ;;		_TMR6_ISR
 23914 ;; This function uses a non-reentrant model
 23915 ;;
 23916                           
 23917                           	psect	text76
 23918  0183EA                     __ptext76:
 23919                           	opt stack 0
 23920  0183EA                     _TMR6_DefaultInterruptHandler:
 23921                           	opt stack 12
 23922                           
 23923                           ;incstack = 0
 23924  0183EA  0012               	return		;funcret
 23925  0183EC                     __end_of_TMR6_DefaultInterruptHandler:
 23926                           	opt stack 0
 23927                           tosu	equ	0xFFF
 23928                           tosh	equ	0xFFE
 23929                           tosl	equ	0xFFD
 23930                           pclatu	equ	0xFFB
 23931                           pclath	equ	0xFFA
 23932                           tblptru	equ	0xFF8
 23933                           tblptrh	equ	0xFF7
 23934                           tblptrl	equ	0xFF6
 23935                           tablat	equ	0xFF5
 23936                           prodh	equ	0xFF4
 23937                           prodl	equ	0xFF3
 23938                           intcon	equ	0xFF2
 23939                           indf0	equ	0xFEF
 23940                           postinc0	equ	0xFEE
 23941                           fsr0h	equ	0xFEA
 23942                           fsr0l	equ	0xFE9
 23943                           wreg	equ	0xFE8
 23944                           indf1	equ	0xFE7
 23945                           postdec1	equ	0xFE5
 23946                           plusw1	equ	0xFE3
 23947                           fsr1h	equ	0xFE2
 23948                           fsr1l	equ	0xFE1
 23949                           bsr	equ	0xFE0
 23950                           indf2	equ	0xFDF
 23951                           postinc2	equ	0xFDE
 23952                           postdec2	equ	0xFDD
 23953                           plusw2	equ	0xFDB
 23954                           fsr2h	equ	0xFDA
 23955                           fsr2l	equ	0xFD9
 23956                           status	equ	0xFD8
 23957                           
 23958 ;; *************** function _heartbeatTimerCallback *****************
 23959 ;; Defined at:
 23960 ;;		line 140 in file "main.c"
 23961 ;; Parameters:    Size  Location     Type
 23962 ;;		None
 23963 ;; Auto vars:     Size  Location     Type
 23964 ;;		None
 23965 ;; Return value:  Size  Location     Type
 23966 ;;                  1    wreg      void 
 23967 ;; Registers used:
 23968 ;;		wreg, status,2, status,0
 23969 ;; Tracked objects:
 23970 ;;		On entry : 0/0
 23971 ;;		On exit  : 0/0
 23972 ;;		Unchanged: 0/0
 23973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23976 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23977 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23978 ;;Total ram usage:        1 bytes
 23979 ;; Hardware stack levels used:    1
 23980 ;; Hardware stack levels required when called:    9
 23981 ;; This function calls:
 23982 ;;		Nothing
 23983 ;; This function is called by:
 23984 ;;		_main
 23985 ;;		_TMR6_ISR
 23986 ;; This function uses a non-reentrant model
 23987 ;;
 23988                           
 23989                           	psect	text77
 23990  017DD6                     __ptext77:
 23991                           	opt stack 0
 23992  017DD6                     _heartbeatTimerCallback:
 23993                           	opt stack 12
 23994                           
 23995                           ;main.c: 143: LATFbits.LATF2 = !LATFbits.LATF2;
 23996                           
 23997                           ;incstack = 0
 23998  017DD6  B47E               	btfsc	3966,2,c	;volatile
 23999  017DD8  D004               	goto	i1u1015_20
 24000  017DDA  0101               	movlb	1	; () banked
 24001  017DDC  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 24002  017DDE  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 24003  017DE0  D002               	goto	i1u1016_28
 24004  017DE2                     i1u1015_20:
 24005  017DE2  0101               	movlb	1	; () banked
 24006  017DE4  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 24007  017DE6                     i1u1016_28:
 24008  017DE6  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 24009  017DE8  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 24010  017DEA  507E               	movf	3966,w,c	;volatile
 24011  017DEC  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 24012  017DEE  0BFB               	andlw	-5
 24013  017DF0  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 24014  017DF2  6E7E               	movwf	3966,c	;volatile
 24015                           
 24016                           ;main.c: 146: dev_on_time++;
 24017  017DF4  0E01               	movlw	1
 24018  017DF6  0102               	movlb	2	; () banked
 24019  017DF8  2744               	addwf	_dev_on_time& (0+255),f,b	;volatile
 24020  017DFA  0E00               	movlw	0
 24021  017DFC  2345               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 24022  017DFE  2346               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 24023  017E00  2347               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 24024                           
 24025                           ; BSR set to: 2
 24026                           ;main.c: 149: if (load_enable) {
 24027  017E02  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 24028  017E04  D006               	goto	i1l953
 24029                           
 24030                           ; BSR set to: 2
 24031                           ;main.c: 151: load_on_time++;
 24032  017E06  0E01               	movlw	1
 24033  017E08  2740               	addwf	_load_on_time& (0+255),f,b	;volatile
 24034  017E0A  0E00               	movlw	0
 24035  017E0C  2341               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 24036  017E0E  2342               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 24037  017E10  2343               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 24038  017E12                     i1l953:
 24039                           
 24040                           ; BSR set to: 2
 24041  017E12  0004               	clrwdt		;# 
 24042  017E14  0012               	return		;funcret
 24043  017E16                     __end_of_heartbeatTimerCallback:
 24044                           	opt stack 0
 24045                           tosu	equ	0xFFF
 24046                           tosh	equ	0xFFE
 24047                           tosl	equ	0xFFD
 24048                           pclatu	equ	0xFFB
 24049                           pclath	equ	0xFFA
 24050                           tblptru	equ	0xFF8
 24051                           tblptrh	equ	0xFF7
 24052                           tblptrl	equ	0xFF6
 24053                           tablat	equ	0xFF5
 24054                           prodh	equ	0xFF4
 24055                           prodl	equ	0xFF3
 24056                           intcon	equ	0xFF2
 24057                           indf0	equ	0xFEF
 24058                           postinc0	equ	0xFEE
 24059                           fsr0h	equ	0xFEA
 24060                           fsr0l	equ	0xFE9
 24061                           wreg	equ	0xFE8
 24062                           indf1	equ	0xFE7
 24063                           postdec1	equ	0xFE5
 24064                           plusw1	equ	0xFE3
 24065                           fsr1h	equ	0xFE2
 24066                           fsr1l	equ	0xFE1
 24067                           bsr	equ	0xFE0
 24068                           indf2	equ	0xFDF
 24069                           postinc2	equ	0xFDE
 24070                           postdec2	equ	0xFDD
 24071                           plusw2	equ	0xFDB
 24072                           fsr2h	equ	0xFDA
 24073                           fsr2l	equ	0xFD9
 24074                           status	equ	0xFD8
 24075                           
 24076 ;; *************** function _HLVD_ISR *****************
 24077 ;; Defined at:
 24078 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 24079 ;; Parameters:    Size  Location     Type
 24080 ;;		None
 24081 ;; Auto vars:     Size  Location     Type
 24082 ;;		None
 24083 ;; Return value:  Size  Location     Type
 24084 ;;                  1    wreg      void 
 24085 ;; Registers used:
 24086 ;;		None
 24087 ;; Tracked objects:
 24088 ;;		On entry : 0/0
 24089 ;;		On exit  : 0/0
 24090 ;;		Unchanged: 0/0
 24091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24096 ;;Total ram usage:        0 bytes
 24097 ;; Hardware stack levels used:    1
 24098 ;; Hardware stack levels required when called:    9
 24099 ;; This function calls:
 24100 ;;		Nothing
 24101 ;; This function is called by:
 24102 ;;		_INTERRUPT_InterruptManagerLow
 24103 ;; This function uses a non-reentrant model
 24104 ;;
 24105                           
 24106                           	psect	text78
 24107  0183C4                     __ptext78:
 24108                           	opt stack 0
 24109  0183C4                     _HLVD_ISR:
 24110                           	opt stack 13
 24111                           
 24112                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 24113                           
 24114                           ;incstack = 0
 24115  0183C4  010E               	movlb	14	; () banked
 24116  0183C6  9F35               	bcf	53,7,b	;volatile
 24117                           
 24118                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 24119  0183C8  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 24120                           
 24121                           ; BSR set to: 14
 24122  0183CA  0012               	return		;funcret
 24123  0183CC                     __end_of_HLVD_ISR:
 24124                           	opt stack 0
 24125                           tosu	equ	0xFFF
 24126                           tosh	equ	0xFFE
 24127                           tosl	equ	0xFFD
 24128                           pclatu	equ	0xFFB
 24129                           pclath	equ	0xFFA
 24130                           tblptru	equ	0xFF8
 24131                           tblptrh	equ	0xFF7
 24132                           tblptrl	equ	0xFF6
 24133                           tablat	equ	0xFF5
 24134                           prodh	equ	0xFF4
 24135                           prodl	equ	0xFF3
 24136                           intcon	equ	0xFF2
 24137                           indf0	equ	0xFEF
 24138                           postinc0	equ	0xFEE
 24139                           fsr0h	equ	0xFEA
 24140                           fsr0l	equ	0xFE9
 24141                           wreg	equ	0xFE8
 24142                           indf1	equ	0xFE7
 24143                           postdec1	equ	0xFE5
 24144                           plusw1	equ	0xFE3
 24145                           fsr1h	equ	0xFE2
 24146                           fsr1l	equ	0xFE1
 24147                           bsr	equ	0xFE0
 24148                           indf2	equ	0xFDF
 24149                           postinc2	equ	0xFDE
 24150                           postdec2	equ	0xFDD
 24151                           plusw2	equ	0xFDB
 24152                           fsr2h	equ	0xFDA
 24153                           fsr2l	equ	0xFD9
 24154                           status	equ	0xFD8
 24155                           
 24156 ;; *************** function _EUSART2_Transmit_ISR *****************
 24157 ;; Defined at:
 24158 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;		None
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;		None
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  1    wreg      void 
 24165 ;; Registers used:
 24166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24176 ;;Total ram usage:        0 bytes
 24177 ;; Hardware stack levels used:    1
 24178 ;; Hardware stack levels required when called:    9
 24179 ;; This function calls:
 24180 ;;		Nothing
 24181 ;; This function is called by:
 24182 ;;		_EUSART2_Initialize
 24183 ;;		_INTERRUPT_InterruptManagerLow
 24184 ;; This function uses a non-reentrant model
 24185 ;;
 24186                           
 24187                           	psect	text79
 24188  017EFC                     __ptext79:
 24189                           	opt stack 0
 24190  017EFC                     _EUSART2_Transmit_ISR:
 24191                           	opt stack 13
 24192                           
 24193                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 24194                           
 24195                           ; BSR set to: 14
 24196                           ;incstack = 0
 24197  017EFC  0E80               	movlw	128
 24198  017EFE  0101               	movlb	1	; () banked
 24199  017F00  61DB               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 24200  017F02  D014               	goto	i1l403
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;eusart2.c: 203: {
 24204                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 24205  017F04  51DC               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 24206  017F06  0D01               	mullw	1
 24207  017F08  0E00               	movlw	low _eusart2TxBuffer
 24208  017F0A  24F3               	addwf	prodl,w,c
 24209  017F0C  6ED9               	movwf	fsr2l,c
 24210  017F0E  0E03               	movlw	high _eusart2TxBuffer
 24211  017F10  20F4               	addwfc	prodh,w,c
 24212  017F12  6EDA               	movwf	fsr2h,c
 24213  017F14  50DF               	movf	indf2,w,c
 24214  017F16  010E               	movlb	14	; () banked
 24215  017F18  6FF2               	movwf	242,b	;volatile
 24216                           
 24217                           ; BSR set to: 14
 24218  017F1A  0101               	movlb	1	; () banked
 24219  017F1C  2BDC               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 24220                           
 24221                           ; BSR set to: 1
 24222                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 24223  017F1E  0E7F               	movlw	127
 24224  017F20  65DC               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 24225  017F22  D002               	goto	i1l404
 24226                           
 24227                           ; BSR set to: 1
 24228                           ;eusart2.c: 206: {
 24229                           ;eusart2.c: 207: eusart2TxTail = 0;
 24230  017F24  0E00               	movlw	0
 24231  017F26  6FDC               	movwf	_eusart2TxTail& (0+255),b	;volatile
 24232  017F28                     i1l404:
 24233                           
 24234                           ; BSR set to: 1
 24235                           ;eusart2.c: 208: }
 24236                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 24237                           
 24238                           ; BSR set to: 1
 24239  017F28  2BDB               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 24240                           
 24241                           ;eusart2.c: 210: }
 24242  017F2A  0012               	return	
 24243  017F2C                     i1l403:
 24244                           
 24245                           ; BSR set to: 1
 24246                           ;eusart2.c: 211: else
 24247                           ;eusart2.c: 212: {
 24248                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 24249  017F2C  010E               	movlb	14	; () banked
 24250  017F2E  9D2C               	bcf	44,6,b	;volatile
 24251  017F30  0012               	return	
 24252  017F32                     __end_of_EUSART2_Transmit_ISR:
 24253                           	opt stack 0
 24254                           tosu	equ	0xFFF
 24255                           tosh	equ	0xFFE
 24256                           tosl	equ	0xFFD
 24257                           pclatu	equ	0xFFB
 24258                           pclath	equ	0xFFA
 24259                           tblptru	equ	0xFF8
 24260                           tblptrh	equ	0xFF7
 24261                           tblptrl	equ	0xFF6
 24262                           tablat	equ	0xFF5
 24263                           prodh	equ	0xFF4
 24264                           prodl	equ	0xFF3
 24265                           intcon	equ	0xFF2
 24266                           indf0	equ	0xFEF
 24267                           postinc0	equ	0xFEE
 24268                           fsr0h	equ	0xFEA
 24269                           fsr0l	equ	0xFE9
 24270                           wreg	equ	0xFE8
 24271                           indf1	equ	0xFE7
 24272                           postdec1	equ	0xFE5
 24273                           plusw1	equ	0xFE3
 24274                           fsr1h	equ	0xFE2
 24275                           fsr1l	equ	0xFE1
 24276                           bsr	equ	0xFE0
 24277                           indf2	equ	0xFDF
 24278                           postinc2	equ	0xFDE
 24279                           postdec2	equ	0xFDD
 24280                           plusw2	equ	0xFDB
 24281                           fsr2h	equ	0xFDA
 24282                           fsr2l	equ	0xFD9
 24283                           status	equ	0xFD8
 24284                           
 24285 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 24286 ;; Defined at:
 24287 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 24288 ;; Parameters:    Size  Location     Type
 24289 ;;		None
 24290 ;; Auto vars:     Size  Location     Type
 24291 ;;		None
 24292 ;; Return value:  Size  Location     Type
 24293 ;;                  1    wreg      void 
 24294 ;; Registers used:
 24295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24296 ;; Tracked objects:
 24297 ;;		On entry : 0/0
 24298 ;;		On exit  : 0/0
 24299 ;;		Unchanged: 0/0
 24300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24303 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24304 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24305 ;;Total ram usage:       18 bytes
 24306 ;; Hardware stack levels used:    1
 24307 ;; Hardware stack levels required when called:    8
 24308 ;; This function calls:
 24309 ;;		Absolute function
 24310 ;;		_ADCC_ThresholdISR
 24311 ;;		_EUSART2_Receive_ISR
 24312 ;;		_TMR5_ISR
 24313 ;; This function is called by:
 24314 ;;		Interrupt level 2
 24315 ;; This function uses a non-reentrant model
 24316 ;;
 24317                           
 24318                           	psect	intcode
 24319  000008                     __pintcode:
 24320                           	opt stack 0
 24321  000008                     _INTERRUPT_InterruptManagerHigh:
 24322                           	opt stack 11
 24323                           
 24324                           ;incstack = 0
 24325  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24326  00000A  EF79  F0B7         	goto	int_func
 24327                           tosu	equ	0xFFF
 24328                           tosh	equ	0xFFE
 24329                           tosl	equ	0xFFD
 24330                           pclatu	equ	0xFFB
 24331                           pclath	equ	0xFFA
 24332                           tblptru	equ	0xFF8
 24333                           tblptrh	equ	0xFF7
 24334                           tblptrl	equ	0xFF6
 24335                           tablat	equ	0xFF5
 24336                           prodh	equ	0xFF4
 24337                           prodl	equ	0xFF3
 24338                           intcon	equ	0xFF2
 24339                           indf0	equ	0xFEF
 24340                           postinc0	equ	0xFEE
 24341                           fsr0h	equ	0xFEA
 24342                           fsr0l	equ	0xFE9
 24343                           wreg	equ	0xFE8
 24344                           indf1	equ	0xFE7
 24345                           postdec1	equ	0xFE5
 24346                           plusw1	equ	0xFE3
 24347                           fsr1h	equ	0xFE2
 24348                           fsr1l	equ	0xFE1
 24349                           bsr	equ	0xFE0
 24350                           indf2	equ	0xFDF
 24351                           postinc2	equ	0xFDE
 24352                           postdec2	equ	0xFDD
 24353                           plusw2	equ	0xFDB
 24354                           fsr2h	equ	0xFDA
 24355                           fsr2l	equ	0xFD9
 24356                           status	equ	0xFD8
 24357                           
 24358                           	psect	intcode_body
 24359  016EF2                     __pintcode_body:
 24360                           	opt stack 11
 24361  016EF2                     int_func:
 24362                           	opt stack 11
 24363  016EF2  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 24364  016EF6  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 24365  016EFA  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 24366  016EFE  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 24367  016F02  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 24368  016F06  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 24369  016F0A  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 24370  016F0E  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 24371  016F12  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 24372  016F16  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 24373  016F1A  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 24374  016F1E  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 24375  016F22  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 24376  016F26  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 24377  016F2A  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 24378  016F2E  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 24379  016F32  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 24380  016F36  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 24381                           
 24382                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 24383  016F3A  010E               	movlb	14	; () banked
 24384  016F3C  BF2C               	btfsc	44,7,b	;volatile
 24385                           
 24386                           ; BSR set to: 14
 24387  016F3E  AF36               	btfss	54,7,b	;volatile
 24388  016F40  D00D               	goto	i2l212
 24389                           
 24390                           ; BSR set to: 14
 24391                           ;interrupt_manager.c: 87: {
 24392                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 24393  016F42  D801               	call	i2u1809_48
 24394  016F44  D016               	goto	i2l216
 24395  016F46                     i2u1809_48:
 24396  016F46  0005               	push	
 24397  016F48  6EFA               	movwf	pclath,c
 24398  016F4A  0102               	movlb	2	; () banked
 24399  016F4C  5170               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 24400  016F4E  6EFD               	movwf	tosl,c
 24401  016F50  5171               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 24402  016F52  6EFE               	movwf	tosh,c
 24403  016F54  5172               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 24404  016F56  6EFF               	movwf	tosu,c
 24405  016F58  50FA               	movf	pclath,w,c
 24406  016F5A  0012               	return		;indir
 24407  016F5C                     i2l212:
 24408                           
 24409                           ; BSR set to: 14
 24410                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 24411  016F5C  B92E               	btfsc	46,4,b	;volatile
 24412                           
 24413                           ; BSR set to: 14
 24414  016F5E  A938               	btfss	56,4,b	;volatile
 24415  016F60  D003               	goto	i2l214
 24416                           
 24417                           ; BSR set to: 14
 24418                           ;interrupt_manager.c: 91: {
 24419                           ;interrupt_manager.c: 92: TMR5_ISR();
 24420  016F62  ECB3  F0BF         	call	_TMR5_ISR	;wreg free
 24421                           
 24422                           ;interrupt_manager.c: 93: }
 24423  016F66  D005               	goto	i2l216
 24424  016F68                     i2l214:
 24425                           
 24426                           ; BSR set to: 14
 24427                           ;interrupt_manager.c: 94: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 24428  016F68  B32A               	btfsc	42,1,b	;volatile
 24429                           
 24430                           ; BSR set to: 14
 24431  016F6A  A334               	btfss	52,1,b	;volatile
 24432  016F6C  D002               	goto	i2l216
 24433                           
 24434                           ; BSR set to: 14
 24435                           ;interrupt_manager.c: 95: {
 24436                           ;interrupt_manager.c: 96: ADCC_ThresholdISR();
 24437  016F6E  EC81  F0C0         	call	_ADCC_ThresholdISR	;wreg free
 24438  016F72                     i2l216:
 24439                           
 24440                           ;interrupt_manager.c: 98: else
 24441                           ;interrupt_manager.c: 99: {
 24442  016F72  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 24443  016F76  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 24444  016F7A  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 24445  016F7E  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 24446  016F82  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 24447  016F86  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 24448  016F8A  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 24449  016F8E  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 24450  016F92  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 24451  016F96  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 24452  016F9A  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 24453  016F9E  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 24454  016FA2  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 24455  016FA6  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 24456  016FAA  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 24457  016FAE  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 24458  016FB2  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 24459  016FB6  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 24460  016FBA  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24461  016FBC  0011               	retfie		f
 24462  016FBE                     __end_of_INTERRUPT_InterruptManagerHigh:
 24463                           	opt stack 0
 24464                           tosu	equ	0xFFF
 24465                           tosh	equ	0xFFE
 24466                           tosl	equ	0xFFD
 24467                           pclatu	equ	0xFFB
 24468                           pclath	equ	0xFFA
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           fsr0h	equ	0xFEA
 24479                           fsr0l	equ	0xFE9
 24480                           wreg	equ	0xFE8
 24481                           indf1	equ	0xFE7
 24482                           postdec1	equ	0xFE5
 24483                           plusw1	equ	0xFE3
 24484                           fsr1h	equ	0xFE2
 24485                           fsr1l	equ	0xFE1
 24486                           bsr	equ	0xFE0
 24487                           indf2	equ	0xFDF
 24488                           postinc2	equ	0xFDE
 24489                           postdec2	equ	0xFDD
 24490                           plusw2	equ	0xFDB
 24491                           fsr2h	equ	0xFDA
 24492                           fsr2l	equ	0xFD9
 24493                           status	equ	0xFD8
 24494                           
 24495 ;; *************** function _TMR5_ISR *****************
 24496 ;; Defined at:
 24497 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24498 ;; Parameters:    Size  Location     Type
 24499 ;;		None
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;		None
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  1    wreg      void 
 24504 ;; Registers used:
 24505 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24515 ;;Total ram usage:        0 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:    1
 24518 ;; This function calls:
 24519 ;;		Absolute function
 24520 ;;		_TMR5_DefaultInterruptHandler
 24521 ;;		_TMR5_WriteTimer
 24522 ;; This function is called by:
 24523 ;;		_INTERRUPT_InterruptManagerHigh
 24524 ;; This function uses a non-reentrant model
 24525 ;;
 24526                           
 24527                           	psect	text81
 24528  017F66                     __ptext81:
 24529                           	opt stack 0
 24530  017F66                     _TMR5_ISR:
 24531                           	opt stack 17
 24532                           
 24533                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 24534                           
 24535                           ;incstack = 0
 24536  017F66  010E               	movlb	14	; () banked
 24537  017F68  9938               	bcf	56,4,b	;volatile
 24538                           
 24539                           ; BSR set to: 14
 24540                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 24541  017F6A  C278  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 24542  017F6E  C279  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 24543  017F72  EC2C  F0C1         	call	_TMR5_WriteTimer	;wreg free
 24544                           
 24545                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 24546  017F76  0102               	movlb	2	; () banked
 24547  017F78  5164               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24548  017F7A  1165               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24549  017F7C  1166               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24550  017F7E  B4D8               	btfsc	status,2,c
 24551  017F80  0012               	return	
 24552                           
 24553                           ; BSR set to: 2
 24554                           ;tmr5.c: 172: {
 24555                           ;tmr5.c: 173: TMR5_InterruptHandler();
 24556  017F82  D801               	call	i2u1800_48
 24557  017F84  0012               	return	
 24558  017F86                     i2u1800_48:
 24559  017F86  0005               	push	
 24560  017F88  6EFA               	movwf	pclath,c
 24561  017F8A  5164               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24562  017F8C  6EFD               	movwf	tosl,c
 24563  017F8E  5165               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24564  017F90  6EFE               	movwf	tosh,c
 24565  017F92  5166               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24566  017F94  6EFF               	movwf	tosu,c
 24567  017F96  50FA               	movf	pclath,w,c
 24568  017F98  0012               	return		;indir
 24569  017F9A                     __end_of_TMR5_ISR:
 24570                           	opt stack 0
 24571                           tosu	equ	0xFFF
 24572                           tosh	equ	0xFFE
 24573                           tosl	equ	0xFFD
 24574                           pclatu	equ	0xFFB
 24575                           pclath	equ	0xFFA
 24576                           tblptru	equ	0xFF8
 24577                           tblptrh	equ	0xFF7
 24578                           tblptrl	equ	0xFF6
 24579                           tablat	equ	0xFF5
 24580                           prodh	equ	0xFF4
 24581                           prodl	equ	0xFF3
 24582                           intcon	equ	0xFF2
 24583                           indf0	equ	0xFEF
 24584                           postinc0	equ	0xFEE
 24585                           fsr0h	equ	0xFEA
 24586                           fsr0l	equ	0xFE9
 24587                           wreg	equ	0xFE8
 24588                           indf1	equ	0xFE7
 24589                           postdec1	equ	0xFE5
 24590                           plusw1	equ	0xFE3
 24591                           fsr1h	equ	0xFE2
 24592                           fsr1l	equ	0xFE1
 24593                           bsr	equ	0xFE0
 24594                           indf2	equ	0xFDF
 24595                           postinc2	equ	0xFDE
 24596                           postdec2	equ	0xFDD
 24597                           plusw2	equ	0xFDB
 24598                           fsr2h	equ	0xFDA
 24599                           fsr2l	equ	0xFD9
 24600                           status	equ	0xFD8
 24601                           
 24602 ;; *************** function _TMR5_WriteTimer *****************
 24603 ;; Defined at:
 24604 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 24605 ;; Parameters:    Size  Location     Type
 24606 ;;  timerVal        2    0[COMRAM] unsigned int 
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;		None
 24609 ;; Return value:  Size  Location     Type
 24610 ;;                  1    wreg      void 
 24611 ;; Registers used:
 24612 ;;		wreg, status,2
 24613 ;; Tracked objects:
 24614 ;;		On entry : 0/0
 24615 ;;		On exit  : 0/0
 24616 ;;		Unchanged: 0/0
 24617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24622 ;;Total ram usage:        2 bytes
 24623 ;; Hardware stack levels used:    1
 24624 ;; This function calls:
 24625 ;;		Nothing
 24626 ;; This function is called by:
 24627 ;;		_TMR5_ISR
 24628 ;;		_TMR5_Reload
 24629 ;; This function uses a non-reentrant model
 24630 ;;
 24631                           
 24632                           	psect	text82
 24633  018258                     __ptext82:
 24634                           	opt stack 0
 24635  018258                     _TMR5_WriteTimer:
 24636                           	opt stack 17
 24637                           
 24638                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 24639                           
 24640                           ;incstack = 0
 24641  018258  A4C3               	btfss	4035,2,c	;volatile
 24642  01825A  D007               	goto	i2l714
 24643                           
 24644                           ;tmr5.c: 130: {
 24645                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 24646  01825C  90C3               	bcf	4035,0,c	;volatile
 24647                           
 24648                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 24649  01825E  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24650  018260  6EC2               	movwf	4034,c	;volatile
 24651                           
 24652                           ;tmr5.c: 136: TMR5L = timerVal;
 24653  018262  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24654                           
 24655                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 24656  018266  80C3               	bsf	4035,0,c	;volatile
 24657                           
 24658                           ;tmr5.c: 140: }
 24659  018268  0012               	return	
 24660  01826A                     i2l714:
 24661                           
 24662                           ;tmr5.c: 141: else
 24663                           ;tmr5.c: 142: {
 24664                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 24665  01826A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 24666  01826C  6EC2               	movwf	4034,c	;volatile
 24667                           
 24668                           ;tmr5.c: 145: TMR5L = timerVal;
 24669  01826E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 24670  018272  0012               	return	
 24671  018274                     __end_of_TMR5_WriteTimer:
 24672                           	opt stack 0
 24673                           tosu	equ	0xFFF
 24674                           tosh	equ	0xFFE
 24675                           tosl	equ	0xFFD
 24676                           pclatu	equ	0xFFB
 24677                           pclath	equ	0xFFA
 24678                           tblptru	equ	0xFF8
 24679                           tblptrh	equ	0xFF7
 24680                           tblptrl	equ	0xFF6
 24681                           tablat	equ	0xFF5
 24682                           prodh	equ	0xFF4
 24683                           prodl	equ	0xFF3
 24684                           intcon	equ	0xFF2
 24685                           indf0	equ	0xFEF
 24686                           postinc0	equ	0xFEE
 24687                           fsr0h	equ	0xFEA
 24688                           fsr0l	equ	0xFE9
 24689                           wreg	equ	0xFE8
 24690                           indf1	equ	0xFE7
 24691                           postdec1	equ	0xFE5
 24692                           plusw1	equ	0xFE3
 24693                           fsr1h	equ	0xFE2
 24694                           fsr1l	equ	0xFE1
 24695                           bsr	equ	0xFE0
 24696                           indf2	equ	0xFDF
 24697                           postinc2	equ	0xFDE
 24698                           postdec2	equ	0xFDD
 24699                           plusw2	equ	0xFDB
 24700                           fsr2h	equ	0xFDA
 24701                           fsr2l	equ	0xFD9
 24702                           status	equ	0xFD8
 24703                           
 24704 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24705 ;; Defined at:
 24706 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24707 ;; Parameters:    Size  Location     Type
 24708 ;;		None
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;		None
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  1    wreg      void 
 24713 ;; Registers used:
 24714 ;;		None
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24724 ;;Total ram usage:        0 bytes
 24725 ;; Hardware stack levels used:    1
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		_TMR5_Initialize
 24730 ;;		_TMR5_ISR
 24731 ;; This function uses a non-reentrant model
 24732 ;;
 24733                           
 24734                           	psect	text83
 24735  0183EC                     __ptext83:
 24736                           	opt stack 0
 24737  0183EC                     _TMR5_DefaultInterruptHandler:
 24738                           	opt stack 17
 24739                           
 24740                           ;incstack = 0
 24741  0183EC  0012               	return		;funcret
 24742  0183EE                     __end_of_TMR5_DefaultInterruptHandler:
 24743                           	opt stack 0
 24744                           tosu	equ	0xFFF
 24745                           tosh	equ	0xFFE
 24746                           tosl	equ	0xFFD
 24747                           pclatu	equ	0xFFB
 24748                           pclath	equ	0xFFA
 24749                           tblptru	equ	0xFF8
 24750                           tblptrh	equ	0xFF7
 24751                           tblptrl	equ	0xFF6
 24752                           tablat	equ	0xFF5
 24753                           prodh	equ	0xFF4
 24754                           prodl	equ	0xFF3
 24755                           intcon	equ	0xFF2
 24756                           indf0	equ	0xFEF
 24757                           postinc0	equ	0xFEE
 24758                           fsr0h	equ	0xFEA
 24759                           fsr0l	equ	0xFE9
 24760                           wreg	equ	0xFE8
 24761                           indf1	equ	0xFE7
 24762                           postdec1	equ	0xFE5
 24763                           plusw1	equ	0xFE3
 24764                           fsr1h	equ	0xFE2
 24765                           fsr1l	equ	0xFE1
 24766                           bsr	equ	0xFE0
 24767                           indf2	equ	0xFDF
 24768                           postinc2	equ	0xFDE
 24769                           postdec2	equ	0xFDD
 24770                           plusw2	equ	0xFDB
 24771                           fsr2h	equ	0xFDA
 24772                           fsr2l	equ	0xFD9
 24773                           status	equ	0xFD8
 24774                           
 24775 ;; *************** function _EUSART2_Receive_ISR *****************
 24776 ;; Defined at:
 24777 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 24778 ;; Parameters:    Size  Location     Type
 24779 ;;		None
 24780 ;; Auto vars:     Size  Location     Type
 24781 ;;		None
 24782 ;; Return value:  Size  Location     Type
 24783 ;;                  1    wreg      void 
 24784 ;; Registers used:
 24785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24786 ;; Tracked objects:
 24787 ;;		On entry : 0/0
 24788 ;;		On exit  : 0/0
 24789 ;;		Unchanged: 0/0
 24790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24795 ;;Total ram usage:        0 bytes
 24796 ;; Hardware stack levels used:    1
 24797 ;; Hardware stack levels required when called:    3
 24798 ;; This function calls:
 24799 ;;		i2_printf
 24800 ;; This function is called by:
 24801 ;;		_EUSART2_Initialize
 24802 ;;		_INTERRUPT_InterruptManagerHigh
 24803 ;; This function uses a non-reentrant model
 24804 ;;
 24805                           
 24806                           	psect	text84
 24807  016FBE                     __ptext84:
 24808                           	opt stack 0
 24809  016FBE                     _EUSART2_Receive_ISR:
 24810                           	opt stack 15
 24811                           
 24812                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 24813                           
 24814                           ;incstack = 0
 24815  016FBE  010E               	movlb	14	; () banked
 24816  016FC0  A3F5               	btfss	245,1,b	;volatile
 24817  016FC2  D003               	goto	i2l409
 24818                           
 24819                           ; BSR set to: 14
 24820                           ;eusart2.c: 221: {
 24821                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 24822  016FC4  99F5               	bcf	245,4,b	;volatile
 24823                           
 24824                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 24825  016FC6  89F5               	bsf	245,4,b	;volatile
 24826                           
 24827                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 24828  016FC8  827E               	bsf	3966,1,c	;volatile
 24829  016FCA                     i2l409:
 24830                           
 24831                           ; BSR set to: 14
 24832                           ;eusart2.c: 227: }
 24833                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 24834  016FCA  927E               	bcf	3966,1,c	;volatile
 24835                           
 24836                           ; BSR set to: 14
 24837                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 24838  016FCC  0100               	movlb	0	; () banked
 24839  016FCE  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24840  016FD0  0D01               	mullw	1
 24841  016FD2  0E00               	movlw	low _eusart2RxBuffer
 24842  016FD4  24F3               	addwf	prodl,w,c
 24843  016FD6  6ED9               	movwf	fsr2l,c
 24844  016FD8  0E02               	movlw	high _eusart2RxBuffer
 24845  016FDA  20F4               	addwfc	prodh,w,c
 24846  016FDC  6EDA               	movwf	fsr2h,c
 24847  016FDE  CEF1 FFDF          	movff	3825,indf2	;volatile
 24848                           
 24849                           ; BSR set to: 0
 24850  016FE2  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 24851                           
 24852                           ; BSR set to: 0
 24853                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 24854  016FE4  0E3F               	movlw	63
 24855  016FE6  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 24856  016FE8  D002               	goto	i2l410
 24857                           
 24858                           ; BSR set to: 0
 24859                           ;eusart2.c: 234: {
 24860                           ;eusart2.c: 235: eusart2RxHead = 0;
 24861  016FEA  0E00               	movlw	0
 24862  016FEC  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 24863  016FEE                     i2l410:
 24864                           
 24865                           ; BSR set to: 0
 24866                           ;eusart2.c: 236: }
 24867                           ;eusart2.c: 237: eusart2RxCount++;
 24868                           
 24869                           ; BSR set to: 0
 24870  016FEE  0101               	movlb	1	; () banked
 24871  016FF0  2BD9               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 24872                           
 24873                           ; BSR set to: 1
 24874                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 24875  016FF2  0E0A               	movlw	10
 24876  016FF4  010E               	movlb	14	; () banked
 24877  016FF6  19F1               	xorwf	241,w,b	;volatile
 24878  016FF8  B4D8               	btfsc	status,2,c
 24879  016FFA  D004               	goto	i2u1717_40
 24880                           
 24881                           ; BSR set to: 14
 24882  016FFC  0E0D               	movlw	13
 24883  016FFE  19F1               	xorwf	241,w,b	;volatile
 24884  017000  A4D8               	btfss	status,2,c
 24885  017002  D006               	goto	i2l411
 24886  017004                     i2u1717_40:
 24887                           
 24888                           ; BSR set to: 14
 24889                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 24890  017004  0100               	movlb	0	; () banked
 24891  017006  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24892                           
 24893                           ; BSR set to: 0
 24894                           ;eusart2.c: 248: RC2REG = 0;
 24895  017008  0E00               	movlw	0
 24896  01700A  010E               	movlb	14	; () banked
 24897  01700C  6FF1               	movwf	241,b	;volatile
 24898                           
 24899                           ;eusart2.c: 250: }
 24900  01700E  D002               	goto	i2l414
 24901  017010                     i2l411:
 24902                           
 24903                           ; BSR set to: 14
 24904                           ;eusart2.c: 252: else {
 24905                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 24906  017010  0100               	movlb	0	; () banked
 24907  017012  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 24908  017014                     i2l414:
 24909                           
 24910                           ;eusart2.c: 256: }
 24911                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 24912                           
 24913                           ; BSR set to: 0
 24914  017014  0E08               	movlw	8
 24915  017016  010E               	movlb	14	; () banked
 24916  017018  19F1               	xorwf	241,w,b	;volatile
 24917  01701A  A4D8               	btfss	status,2,c
 24918  01701C  0012               	return	
 24919                           
 24920                           ; BSR set to: 14
 24921                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 24922  01701E  0100               	movlb	0	; () banked
 24923  017020  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24924  017022  0D01               	mullw	1
 24925  017024  0E00               	movlw	low _eusart2RxBuffer
 24926  017026  24F3               	addwf	prodl,w,c
 24927  017028  6ED9               	movwf	fsr2l,c
 24928  01702A  0E02               	movlw	high _eusart2RxBuffer
 24929  01702C  20F4               	addwfc	prodh,w,c
 24930  01702E  6EDA               	movwf	fsr2h,c
 24931  017030  0E00               	movlw	0
 24932  017032  6EDF               	movwf	indf2,c
 24933                           
 24934                           ; BSR set to: 0
 24935                           ;eusart2.c: 262: eusart2RxHead--;
 24936  017034  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24937                           
 24938                           ; BSR set to: 0
 24939                           ;eusart2.c: 265: printf("\033[K");
 24940  017036  0EC5               	movlw	low STR_1
 24941  017038  6F88               	movwf	i2printf@f& (0+255),b
 24942  01703A  0EFF               	movlw	high STR_1
 24943  01703C  6F89               	movwf	(i2printf@f+1)& (0+255),b
 24944  01703E  EC63  F08C         	call	i2_printf	;wreg free
 24945                           
 24946                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 24947  017042  0101               	movlb	1	; () banked
 24948  017044  51DA               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 24949  017046  0100               	movlb	0	; () banked
 24950  017048  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 24951  01704A  B4D8               	btfsc	status,2,c
 24952  01704C  D00B               	goto	i2l416
 24953                           
 24954                           ; BSR set to: 0
 24955                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 24956  01704E  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 24957  017050  0D01               	mullw	1
 24958  017052  0E00               	movlw	low _eusart2RxBuffer
 24959  017054  24F3               	addwf	prodl,w,c
 24960  017056  6ED9               	movwf	fsr2l,c
 24961  017058  0E02               	movlw	high _eusart2RxBuffer
 24962  01705A  20F4               	addwfc	prodh,w,c
 24963  01705C  6EDA               	movwf	fsr2h,c
 24964  01705E  0E00               	movlw	0
 24965  017060  6EDF               	movwf	indf2,c
 24966                           
 24967                           ; BSR set to: 0
 24968                           ;eusart2.c: 270: eusart2RxHead--;
 24969  017062  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 24970  017064                     i2l416:
 24971                           
 24972                           ; BSR set to: 0
 24973                           ;eusart2.c: 272: }
 24974                           ;eusart2.c: 274: RC2REG = 0;
 24975                           
 24976                           ; BSR set to: 0
 24977  017064  0E00               	movlw	0
 24978  017066  010E               	movlb	14	; () banked
 24979  017068  6FF1               	movwf	241,b	;volatile
 24980  01706A  0012               	return	
 24981  01706C                     __end_of_EUSART2_Receive_ISR:
 24982                           	opt stack 0
 24983                           tosu	equ	0xFFF
 24984                           tosh	equ	0xFFE
 24985                           tosl	equ	0xFFD
 24986                           pclatu	equ	0xFFB
 24987                           pclath	equ	0xFFA
 24988                           tblptru	equ	0xFF8
 24989                           tblptrh	equ	0xFF7
 24990                           tblptrl	equ	0xFF6
 24991                           tablat	equ	0xFF5
 24992                           prodh	equ	0xFF4
 24993                           prodl	equ	0xFF3
 24994                           intcon	equ	0xFF2
 24995                           indf0	equ	0xFEF
 24996                           postinc0	equ	0xFEE
 24997                           fsr0h	equ	0xFEA
 24998                           fsr0l	equ	0xFE9
 24999                           wreg	equ	0xFE8
 25000                           indf1	equ	0xFE7
 25001                           postdec1	equ	0xFE5
 25002                           plusw1	equ	0xFE3
 25003                           fsr1h	equ	0xFE2
 25004                           fsr1l	equ	0xFE1
 25005                           bsr	equ	0xFE0
 25006                           indf2	equ	0xFDF
 25007                           postinc2	equ	0xFDE
 25008                           postdec2	equ	0xFDD
 25009                           plusw2	equ	0xFDB
 25010                           fsr2h	equ	0xFDA
 25011                           fsr2l	equ	0xFD9
 25012                           status	equ	0xFD8
 25013                           
 25014 ;; *************** function i2_printf *****************
 25015 ;; Defined at:
 25016 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 25019 ;;		 -> STR_126(30), STR_125(46), STR_124(39), STR_123(62), 
 25020 ;;		 -> STR_122(33), STR_121(2170), STR_119(53), STR_117(58), 
 25021 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 25022 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 25023 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 25024 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 25025 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 25026 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 25027 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 25028 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(57), 
 25029 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 25030 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 25031 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 25032 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 25033 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;  printf          4   71[BANK0 ] PTR const unsigned char 
 25036 ;;  printf          4   67[BANK0 ] unsigned long 
 25037 ;;  printf          4   63[BANK0 ] struct .
 25038 ;;  printf          2   75[BANK0 ] int 
 25039 ;;  printf          2   61[BANK0 ] int 
 25040 ;;  printf          2   59[BANK0 ] unsigned short 
 25041 ;;  printf          2   57[BANK0 ] PTR void [1]
 25042 ;;		 -> ?i2_printf(2), ?_printf(2), 
 25043 ;;  printf          2   55[BANK0 ] PTR const unsigned char 
 25044 ;;		 -> STR_140(7), printf@c(1), STR_139(16), STR_138(22), 
 25045 ;;		 -> STR_137(21), STR_136(27), STR_135(41), STR_134(32), 
 25046 ;;		 -> STR_133(19), STR_132(16), STR_131(15), STR_130(16), 
 25047 ;;		 -> STR_129(10), STR_128(13), STR_127(12), ringBufferLUT@channel_name(22), 
 25048 ;;		 -> TRIAC_Firing_Angle(4), 
 25049 ;;  printf          2   53[BANK0 ] unsigned int 
 25050 ;;  printf          2    0        int 
 25051 ;;  printf          1   77[BANK0 ] char 
 25052 ;;  printf          1   52[BANK0 ] unsigned char 
 25053 ;;  printf          1    0        unsigned char 
 25054 ;; Return value:  Size  Location     Type
 25055 ;;                  2   40[BANK0 ] int 
 25056 ;; Registers used:
 25057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25058 ;; Tracked objects:
 25059 ;;		On entry : 0/0
 25060 ;;		On exit  : 0/0
 25061 ;;		Unchanged: 0/0
 25062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25064 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25065 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25066 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25067 ;;Total ram usage:       38 bytes
 25068 ;; Hardware stack levels used:    1
 25069 ;; Hardware stack levels required when called:    2
 25070 ;; This function calls:
 25071 ;;		i2___awdiv
 25072 ;;		i2___fladd
 25073 ;;		i2___flge
 25074 ;;		i2___flmul
 25075 ;;		i2___flneg
 25076 ;;		i2___flsub
 25077 ;;		i2___fltol
 25078 ;;		i2___lldiv
 25079 ;;		i2___llmod
 25080 ;;		i2___wmul
 25081 ;;		i2___xxtofl
 25082 ;;		i2__div_to_l_
 25083 ;;		i2__tdiv_to_l_
 25084 ;;		i2_fround
 25085 ;;		i2_isdigit
 25086 ;;		i2_putch
 25087 ;;		i2_scale
 25088 ;; This function is called by:
 25089 ;;		_EUSART2_Receive_ISR
 25090 ;; This function uses a non-reentrant model
 25091 ;;
 25092                           
 25093                           	psect	text85
 25094  0118C6                     __ptext85:
 25095                           	opt stack 0
 25096  0118C6                     i2_printf:
 25097                           	opt stack 15
 25098                           
 25099                           ;doprnt.c: 466: va_list ap;
 25100                           ;doprnt.c: 499: signed char c;
 25101                           ;doprnt.c: 501: int width;
 25102                           ;doprnt.c: 504: int prec;
 25103                           ;doprnt.c: 508: unsigned short flag;
 25104                           ;doprnt.c: 515: char d;
 25105                           ;doprnt.c: 516: double fval;
 25106                           ;doprnt.c: 517: int exp;
 25107                           ;doprnt.c: 523: union {
 25108                           ;doprnt.c: 524: unsigned long vd;
 25109                           ;doprnt.c: 525: double integ;
 25110                           ;doprnt.c: 526: } tmpval;
 25111                           ;doprnt.c: 528: unsigned long val;
 25112                           ;doprnt.c: 529: unsigned len;
 25113                           ;doprnt.c: 530: const char * cp;
 25114                           ;doprnt.c: 533: *ap = __va_start();
 25115                           
 25116                           ; BSR set to: 14
 25117                           ;incstack = 0
 25118  0118C6  0E8A               	movlw	low (?i2_printf+2)
 25119  0118C8  0100               	movlb	0	; () banked
 25120  0118CA  6F99               	movwf	i2printf@ap& (0+255),b
 25121  0118CC  0E00               	movlw	high (?i2_printf+2)
 25122  0118CE  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 25123                           
 25124                           ;doprnt.c: 536: while(c = *f++) {
 25125  0118D0  EFD3  F091         	goto	i2u1703_40
 25126  0118D4                     
 25127                           ; BSR set to: 0
 25128                           ;doprnt.c: 538: if(c != '%')
 25129                           
 25130                           ; BSR set to: 0
 25131  0118D4  0E25               	movlw	37
 25132  0118D6  19AD               	xorwf	i2printf@c& (0+255),w,b
 25133  0118D8  B4D8               	btfsc	status,2,c
 25134  0118DA  D005               	goto	i2l1364
 25135                           
 25136                           ; BSR set to: 0
 25137                           ;doprnt.c: 540: {
 25138                           ;doprnt.c: 541: (putch(c) );
 25139  0118DC  51AD               	movf	i2printf@c& (0+255),w,b
 25140  0118DE  ECD5  F0C1         	call	i2_putch
 25141                           
 25142                           ;doprnt.c: 542: continue;
 25143  0118E2  EFD3  F091         	goto	i2u1703_40
 25144  0118E6                     i2l1364:
 25145                           
 25146                           ;doprnt.c: 543: }
 25147                           ;doprnt.c: 548: flag = 0;
 25148  0118E6  0E00               	movlw	0
 25149  0118E8  0100               	movlb	0	; () banked
 25150  0118EA  6F9C               	movwf	(i2printf@flag+1)& (0+255),b
 25151  0118EC  0E00               	movlw	0
 25152  0118EE  6F9B               	movwf	i2printf@flag& (0+255),b
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;doprnt.c: 611: if(*f == '.') {
 25156  0118F0  C088  FFF6         	movff	i2printf@f,tblptrl
 25157  0118F4  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25158  0118F8  0E00               	movlw	low (__mediumconst shr (0+16))
 25159  0118FA  6EF8               	movwf	tblptru,c
 25160  0118FC  0E0D               	movlw	(high __ramtop+-1)
 25161  0118FE  64F7               	cpfsgt	tblptrh,c
 25162  011900  D003               	bra	i2u1654_47
 25163  011902  0008               	tblrd		*
 25164  011904  50F5               	movf	tablat,w,c
 25165  011906  D005               	bra	i2u1654_40
 25166  011908                     i2u1654_47:
 25167  011908  CFF6 FFE9          	movff	tblptrl,fsr0l
 25168  01190C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25169  011910  50EF               	movf	indf0,w,c
 25170  011912                     i2u1654_40:
 25171  011912  0A2E               	xorlw	46
 25172  011914  A4D8               	btfss	status,2,c
 25173  011916  D048               	goto	i2l1365
 25174                           
 25175                           ;doprnt.c: 612: flag |= 0x4000;
 25176  011918  0100               	movlb	0	; () banked
 25177  01191A  8D9C               	bsf	(i2printf@flag+1)& (0+255),6,b
 25178                           
 25179                           ;doprnt.c: 613: f++;
 25180  01191C  4B88               	infsnz	i2printf@f& (0+255),f,b
 25181  01191E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25182                           
 25183                           ; BSR set to: 0
 25184                           ;doprnt.c: 620: {
 25185                           ;doprnt.c: 621: prec = 0;
 25186  011920  0E00               	movlw	0
 25187  011922  6FAC               	movwf	(i2printf@prec+1)& (0+255),b
 25188  011924  0E00               	movlw	0
 25189  011926  6FAB               	movwf	i2printf@prec& (0+255),b
 25190                           
 25191                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 25192  011928  D029               	goto	i2l1366
 25193  01192A                     
 25194                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 25195                           
 25196                           ; BSR set to: 0
 25197  01192A  C0AB  F001         	movff	i2printf@prec,i2___wmul@multiplier
 25198  01192E  C0AC  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 25199  011932  0E00               	movlw	0
 25200  011934  6E04               	movwf	i2___wmul@multiplicand+1,c
 25201  011936  0E0A               	movlw	10
 25202  011938  6E03               	movwf	i2___wmul@multiplicand,c
 25203  01193A  ECBB  F0C0         	call	i2___wmul	;wreg free
 25204  01193E  C088  FFF6         	movff	i2printf@f,tblptrl
 25205  011942  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25206  011946  0E00               	movlw	low (__mediumconst shr (0+16))
 25207  011948  6EF8               	movwf	tblptru,c
 25208  01194A  0E0D               	movlw	(high __ramtop+-1)
 25209  01194C  64F7               	cpfsgt	tblptrh,c
 25210  01194E  D003               	bra	i2u1656_47
 25211  011950  0008               	tblrd		*
 25212  011952  50F5               	movf	tablat,w,c
 25213  011954  D005               	bra	i2u1656_40
 25214  011956                     i2u1656_47:
 25215  011956  CFF6 FFE9          	movff	tblptrl,fsr0l
 25216  01195A  CFF7 FFEA          	movff	tblptrh,fsr0h
 25217  01195E  50EF               	movf	indf0,w,c
 25218  011960                     i2u1656_40:
 25219  011960  0100               	movlb	0	; () banked
 25220  011962  6F8A               	movwf	??i2_printf& (0+255),b
 25221  011964  518A               	movf	??i2_printf& (0+255),w,b
 25222  011966  2601               	addwf	?i2___wmul,f,c
 25223  011968  0E00               	movlw	0
 25224  01196A  2202               	addwfc	?i2___wmul+1,f,c
 25225  01196C  0ED0               	movlw	208
 25226  01196E  2401               	addwf	?i2___wmul,w,c
 25227  011970  6FAB               	movwf	i2printf@prec& (0+255),b
 25228  011972  0EFF               	movlw	255
 25229  011974  2002               	addwfc	?i2___wmul+1,w,c
 25230  011976  6FAC               	movwf	(i2printf@prec+1)& (0+255),b
 25231                           
 25232                           ; BSR set to: 0
 25233  011978  4B88               	infsnz	i2printf@f& (0+255),f,b
 25234  01197A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25235  01197C                     i2l1366:
 25236                           
 25237                           ; BSR set to: 0
 25238                           
 25239                           ; BSR set to: 0
 25240  01197C  C088  FFF6         	movff	i2printf@f,tblptrl
 25241  011980  C089  FFF7         	movff	i2printf@f+1,tblptrh
 25242  011984  0E00               	movlw	low (__mediumconst shr (0+16))
 25243  011986  6EF8               	movwf	tblptru,c
 25244  011988  0E0D               	movlw	(high __ramtop+-1)
 25245  01198A  64F7               	cpfsgt	tblptrh,c
 25246  01198C  D003               	bra	i2u1657_47
 25247  01198E  0008               	tblrd		*
 25248  011990  50F5               	movf	tablat,w,c
 25249  011992  D005               	bra	i2u1657_40
 25250  011994                     i2u1657_47:
 25251  011994  CFF6 FFE9          	movff	tblptrl,fsr0l
 25252  011998  CFF7 FFEA          	movff	tblptrh,fsr0h
 25253  01199C  50EF               	movf	indf0,w,c
 25254  01199E                     i2u1657_40:
 25255  01199E  EC01  F0C1         	call	i2_isdigit
 25256  0119A2  A0D8               	btfss	status,0,c
 25257  0119A4  D088               	goto	i2l1370
 25258  0119A6  D7C1               	goto	i2l1367
 25259  0119A8                     i2l1365:
 25260                           
 25261                           ;doprnt.c: 626: prec = 0;
 25262  0119A8  0E00               	movlw	0
 25263  0119AA  0100               	movlb	0	; () banked
 25264  0119AC  6FAC               	movwf	(i2printf@prec+1)& (0+255),b
 25265  0119AE  0E00               	movlw	0
 25266  0119B0  6FAB               	movwf	i2printf@prec& (0+255),b
 25267                           
 25268                           ; BSR set to: 0
 25269                           ;doprnt.c: 628: flag |= 0x1000;
 25270  0119B2  899C               	bsf	(i2printf@flag+1)& (0+255),4,b
 25271                           
 25272                           ; BSR set to: 0
 25273                           ;doprnt.c: 630: }
 25274                           ;doprnt.c: 635: switch(c = *f++) {
 25275  0119B4  D080               	goto	i2l1370
 25276  0119B6                     
 25277                           ; BSR set to: 0
 25278                           ;doprnt.c: 663: flag |= 0x400;
 25279                           
 25280                           ; BSR set to: 0
 25281  0119B6  859C               	bsf	(i2printf@flag+1)& (0+255),2,b
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;doprnt.c: 698: case 'i':
 25285                           ;doprnt.c: 699: break;
 25286                           
 25287                           ; BSR set to: 0
 25288                           
 25289                           ;doprnt.c: 697: case 'd':
 25290                           
 25291                           ;doprnt.c: 664: break;
 25292  0119B8  D0B5               	goto	i2l1374
 25293  0119BA                     
 25294                           ; BSR set to: 0
 25295                           ;doprnt.c: 718: case 'x':
 25296                           ;doprnt.c: 721: flag |= 0x80;
 25297                           
 25298                           ; BSR set to: 0
 25299                           
 25300                           ; BSR set to: 0
 25301  0119BA  8F9B               	bsf	i2printf@flag& (0+255),7,b
 25302                           
 25303                           ;doprnt.c: 723: break;
 25304  0119BC  D0B3               	goto	i2l1374
 25305  0119BE                     
 25306                           ; BSR set to: 0
 25307                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 25308                           
 25309                           ; BSR set to: 0
 25310  0119BE  C099  FFD9         	movff	i2printf@ap,fsr2l
 25311  0119C2  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 25312  0119C6  CFDE F097          	movff	postinc2,i2printf@cp
 25313  0119CA  CFDD F098          	movff	postdec2,i2printf@cp+1
 25314                           
 25315                           ; BSR set to: 0
 25316  0119CE  0E02               	movlw	2
 25317  0119D0  2799               	addwf	i2printf@ap& (0+255),f,b
 25318  0119D2  0E00               	movlw	0
 25319  0119D4  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25320                           
 25321                           ; BSR set to: 0
 25322                           ;doprnt.c: 740: if(!cp)
 25323  0119D6  5197               	movf	i2printf@cp& (0+255),w,b
 25324  0119D8  1198               	iorwf	(i2printf@cp+1)& (0+255),w,b
 25325  0119DA  A4D8               	btfss	status,2,c
 25326  0119DC  D004               	goto	i2l1380
 25327                           
 25328                           ; BSR set to: 0
 25329                           ;doprnt.c: 741: cp = "(null)";
 25330  0119DE  0E86               	movlw	low STR_140
 25331  0119E0  6F97               	movwf	i2printf@cp& (0+255),b
 25332  0119E2  0EFF               	movlw	high STR_140
 25333  0119E4  6F98               	movwf	(i2printf@cp+1)& (0+255),b
 25334  0119E6                     i2l1380:
 25335                           
 25336                           ; BSR set to: 0
 25337                           ;doprnt.c: 745: len = 0;
 25338                           
 25339                           ; BSR set to: 0
 25340  0119E6  0E00               	movlw	0
 25341  0119E8  6F96               	movwf	(i2printf@len+1)& (0+255),b
 25342  0119EA  0E00               	movlw	0
 25343  0119EC  6F95               	movwf	i2printf@len& (0+255),b
 25344                           
 25345                           ;doprnt.c: 746: while(cp[len])
 25346  0119EE  D003               	goto	i2l1381
 25347  0119F0                     
 25348                           ;doprnt.c: 747: len++;
 25349                           
 25350                           ; BSR set to: 0
 25351  0119F0  0100               	movlb	0	; () banked
 25352  0119F2  4B95               	infsnz	i2printf@len& (0+255),f,b
 25353  0119F4  2B96               	incf	(i2printf@len+1)& (0+255),f,b
 25354  0119F6                     i2l1381:
 25355                           
 25356                           ; BSR set to: 0
 25357                           
 25358                           ; BSR set to: 0
 25359  0119F6  5195               	movf	i2printf@len& (0+255),w,b
 25360  0119F8  2597               	addwf	i2printf@cp& (0+255),w,b
 25361  0119FA  6F8A               	movwf	??i2_printf& (0+255),b
 25362  0119FC  5196               	movf	(i2printf@len+1)& (0+255),w,b
 25363  0119FE  2198               	addwfc	(i2printf@cp+1)& (0+255),w,b
 25364  011A00  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 25365  011A02  C08A  FFF6         	movff	??i2_printf,tblptrl
 25366  011A06  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 25367  011A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 25368  011A0C  6EF8               	movwf	tblptru,c
 25369  011A0E  0E0D               	movlw	(high __ramtop+-1)
 25370  011A10  64F7               	cpfsgt	tblptrh,c
 25371  011A12  D003               	bra	i2u1660_47
 25372  011A14  0008               	tblrd		*
 25373  011A16  50F5               	movf	tablat,w,c
 25374  011A18  D005               	bra	i2u1660_40
 25375  011A1A                     i2u1660_47:
 25376  011A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 25377  011A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 25378  011A22  50EF               	movf	indf0,w,c
 25379  011A24                     i2u1660_40:
 25380  011A24  0900               	iorlw	0
 25381  011A26  A4D8               	btfss	status,2,c
 25382  011A28  D7E3               	goto	i2l1382
 25383  011A2A                     i2u1661_40:
 25384                           
 25385                           ;doprnt.c: 753: if(prec && prec < len)
 25386                           
 25387                           ;doprnt.c: 750: dostring:
 25388  011A2A  0100               	movlb	0	; () banked
 25389  011A2C  51AB               	movf	i2printf@prec& (0+255),w,b
 25390  011A2E  11AC               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25391  011A30  B4D8               	btfsc	status,2,c
 25392  011A32  D021               	goto	i2l1386
 25393                           
 25394                           ; BSR set to: 0
 25395  011A34  5195               	movf	i2printf@len& (0+255),w,b
 25396  011A36  5DAB               	subwf	i2printf@prec& (0+255),w,b
 25397  011A38  5196               	movf	(i2printf@len+1)& (0+255),w,b
 25398  011A3A  59AC               	subwfb	(i2printf@prec+1)& (0+255),w,b
 25399  011A3C  B0D8               	btfsc	status,0,c
 25400  011A3E  D01B               	goto	i2l1386
 25401                           
 25402                           ; BSR set to: 0
 25403                           ;doprnt.c: 754: len = prec;
 25404  011A40  C0AB  F095         	movff	i2printf@prec,i2printf@len
 25405  011A44  C0AC  F096         	movff	i2printf@prec+1,i2printf@len+1
 25406                           
 25407                           ; BSR set to: 0
 25408                           ;doprnt.c: 767: while(len--)
 25409  011A48  D016               	goto	i2l1386
 25410  011A4A                     i2l13758:
 25411                           
 25412                           ; BSR set to: 0
 25413                           ;doprnt.c: 768: (putch(*cp++) );
 25414  011A4A  C097  FFF6         	movff	i2printf@cp,tblptrl
 25415  011A4E  C098  FFF7         	movff	i2printf@cp+1,tblptrh
 25416  011A52  0E00               	movlw	low (__mediumconst shr (0+16))
 25417  011A54  6EF8               	movwf	tblptru,c
 25418  011A56  0E0D               	movlw	(high __ramtop+-1)
 25419  011A58  64F7               	cpfsgt	tblptrh,c
 25420  011A5A  D003               	bra	i2u1664_47
 25421  011A5C  0008               	tblrd		*
 25422  011A5E  50F5               	movf	tablat,w,c
 25423  011A60  D005               	bra	i2u1664_40
 25424  011A62                     i2u1664_47:
 25425  011A62  CFF6 FFE9          	movff	tblptrl,fsr0l
 25426  011A66  CFF7 FFEA          	movff	tblptrh,fsr0h
 25427  011A6A  50EF               	movf	indf0,w,c
 25428  011A6C                     i2u1664_40:
 25429  011A6C  ECD5  F0C1         	call	i2_putch
 25430  011A70  0100               	movlb	0	; () banked
 25431  011A72  4B97               	infsnz	i2printf@cp& (0+255),f,b
 25432  011A74  2B98               	incf	(i2printf@cp+1)& (0+255),f,b
 25433  011A76                     i2l1386:
 25434                           
 25435                           ; BSR set to: 0
 25436                           
 25437                           ; BSR set to: 0
 25438  011A76  0795               	decf	i2printf@len& (0+255),f,b
 25439  011A78  A0D8               	btfss	status,0,c
 25440  011A7A  0796               	decf	(i2printf@len+1)& (0+255),f,b
 25441  011A7C  2995               	incf	i2printf@len& (0+255),w,b
 25442  011A7E  E1E5               	bnz	i2l13758
 25443  011A80  2996               	incf	(i2printf@len+1)& (0+255),w,b
 25444  011A82  B4D8               	btfsc	status,2,c
 25445  011A84  EFD3  F091         	goto	i2u1703_40
 25446  011A88  D7E0               	goto	i2l1387
 25447  011A8A                     
 25448                           ; BSR set to: 0
 25449                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 25450                           
 25451                           ; BSR set to: 0
 25452  011A8A  C099  FFD9         	movff	i2printf@ap,fsr2l
 25453  011A8E  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 25454  011A92  50DF               	movf	indf2,w,c
 25455  011A94  6FAD               	movwf	i2printf@c& (0+255),b
 25456                           
 25457                           ; BSR set to: 0
 25458  011A96  0E02               	movlw	2
 25459  011A98  2799               	addwf	i2printf@ap& (0+255),f,b
 25460  011A9A  0E00               	movlw	0
 25461  011A9C  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25462  011A9E                     
 25463                           ; BSR set to: 0
 25464                           ;doprnt.c: 805: cp = (char *)&c;
 25465                           
 25466                           ; BSR set to: 0
 25467  011A9E  0EAD               	movlw	low i2printf@c
 25468  011AA0  6F97               	movwf	i2printf@cp& (0+255),b
 25469  011AA2  0E00               	movlw	high i2printf@c
 25470  011AA4  6F98               	movwf	(i2printf@cp+1)& (0+255),b
 25471                           
 25472                           ; BSR set to: 0
 25473                           ;doprnt.c: 806: len = 1;
 25474  011AA6  0E00               	movlw	0
 25475  011AA8  6F96               	movwf	(i2printf@len+1)& (0+255),b
 25476  011AAA  0E01               	movlw	1
 25477  011AAC  6F95               	movwf	i2printf@len& (0+255),b
 25478                           
 25479                           ;doprnt.c: 807: goto dostring;
 25480  011AAE  D7BD               	goto	i2u1661_40
 25481  011AB0                     
 25482                           ; BSR set to: 0
 25483                           ;doprnt.c: 818: flag |= 0xC0;
 25484                           
 25485                           ; BSR set to: 0
 25486  011AB0  0EC0               	movlw	192
 25487  011AB2  139B               	iorwf	i2printf@flag& (0+255),f,b
 25488                           
 25489                           ; BSR set to: 0
 25490                           ;doprnt.c: 822: }
 25491                           
 25492                           ;doprnt.c: 819: break;
 25493  011AB4  D037               	goto	i2l1374
 25494  011AB6                     i2l1370:
 25495                           
 25496                           ; BSR set to: 0
 25497  011AB6  0100               	movlb	0	; () banked
 25498  011AB8  5188               	movf	i2printf@f& (0+255),w,b
 25499  011ABA  6F8A               	movwf	??i2_printf& (0+255),b
 25500  011ABC  5189               	movf	(i2printf@f+1)& (0+255),w,b
 25501  011ABE  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 25502  011AC0  4B88               	infsnz	i2printf@f& (0+255),f,b
 25503  011AC2  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 25504  011AC4  C08A  FFF6         	movff	??i2_printf,tblptrl
 25505  011AC8  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 25506  011ACC  0E00               	movlw	low (__mediumconst shr (0+16))
 25507  011ACE  6EF8               	movwf	tblptru,c
 25508  011AD0  0E0D               	movlw	(high __ramtop+-1)
 25509  011AD2  64F7               	cpfsgt	tblptrh,c
 25510  011AD4  D003               	bra	i2u1666_47
 25511  011AD6  0008               	tblrd		*
 25512  011AD8  50F5               	movf	tablat,w,c
 25513  011ADA  D005               	bra	i2u1666_40
 25514  011ADC                     i2u1666_47:
 25515  011ADC  CFF6 FFE9          	movff	tblptrl,fsr0l
 25516  011AE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 25517  011AE4  50EF               	movf	indf0,w,c
 25518  011AE6                     i2u1666_40:
 25519  011AE6  0100               	movlb	0	; () banked
 25520  011AE8  6FAD               	movwf	i2printf@c& (0+255),b
 25521  011AEA  51AD               	movf	i2printf@c& (0+255),w,b
 25522                           
 25523                           ; Switch size 1, requested type "space"
 25524                           ; Number of cases is 9, Range of values is 0 to 120
 25525                           ; switch strategies available:
 25526                           ; Name         Instructions Cycles
 25527                           ; simple_byte           28    15 (average)
 25528                           ;	Chosen strategy is simple_byte
 25529  011AEC  0A00               	xorlw	0	; case 0
 25530  011AEE  B4D8               	btfsc	status,2,c
 25531  011AF0  0012               	return	
 25532  011AF2  0A58               	xorlw	88	; case 88
 25533  011AF4  B4D8               	btfsc	status,2,c
 25534  011AF6  D761               	goto	i2l1377
 25535  011AF8  0A3B               	xorlw	59	; case 99
 25536  011AFA  B4D8               	btfsc	status,2,c
 25537  011AFC  D7C6               	goto	i2l1389
 25538  011AFE  0A07               	xorlw	7	; case 100
 25539  011B00  B4D8               	btfsc	status,2,c
 25540  011B02  D010               	goto	i2l1374
 25541  011B04  0A02               	xorlw	2	; case 102
 25542  011B06  B4D8               	btfsc	status,2,c
 25543  011B08  D756               	goto	i2l1373
 25544  011B0A  0A0F               	xorlw	15	; case 105
 25545  011B0C  B4D8               	btfsc	status,2,c
 25546  011B0E  D00A               	goto	i2l1374
 25547  011B10  0A1A               	xorlw	26	; case 115
 25548  011B12  B4D8               	btfsc	status,2,c
 25549  011B14  D754               	goto	i2l1379
 25550  011B16  0A06               	xorlw	6	; case 117
 25551  011B18  B4D8               	btfsc	status,2,c
 25552  011B1A  D7CA               	goto	i2l1391
 25553  011B1C  0A0D               	xorlw	13	; case 120
 25554  011B1E  B4D8               	btfsc	status,2,c
 25555  011B20  D74C               	goto	i2l1377
 25556  011B22  D7BD               	goto	i2l1390
 25557  011B24                     i2l1374:
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;doprnt.c: 825: if(flag & (0x700)) {
 25561                           
 25562                           ; BSR set to: 0
 25563  011B24  0E07               	movlw	7
 25564  011B26  159C               	andwf	(i2printf@flag+1)& (0+255),w,b
 25565  011B28  B4D8               	btfsc	status,2,c
 25566  011B2A  D2E8               	goto	i2l1392
 25567                           
 25568                           ; BSR set to: 0
 25569                           ;doprnt.c: 827: if(flag & 0x1000)
 25570  011B2C  A99C               	btfss	(i2printf@flag+1)& (0+255),4,b
 25571  011B2E  D004               	goto	i2l1393
 25572                           
 25573                           ; BSR set to: 0
 25574                           ;doprnt.c: 829: prec = 6;
 25575  011B30  0E00               	movlw	0
 25576  011B32  6FAC               	movwf	(i2printf@prec+1)& (0+255),b
 25577  011B34  0E06               	movlw	6
 25578  011B36  6FAB               	movwf	i2printf@prec& (0+255),b
 25579  011B38                     i2l1393:
 25580                           
 25581                           ; BSR set to: 0
 25582                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25583                           
 25584                           ; BSR set to: 0
 25585  011B38  C099  FFD9         	movff	i2printf@ap,fsr2l
 25586  011B3C  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 25587  011B40  CFDE F0A7          	movff	postinc2,i2printf@fval
 25588  011B44  CFDE F0A8          	movff	postinc2,i2printf@fval+1
 25589  011B48  CFDE F0A9          	movff	postinc2,i2printf@fval+2
 25590  011B4C  CFDE F0AA          	movff	postinc2,i2printf@fval+3
 25591                           
 25592                           ; BSR set to: 0
 25593  011B50  0E04               	movlw	4
 25594  011B52  2799               	addwf	i2printf@ap& (0+255),f,b
 25595  011B54  0E00               	movlw	0
 25596  011B56  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25597                           
 25598                           ; BSR set to: 0
 25599                           ;doprnt.c: 831: if(fval < 0.0) {
 25600  011B58  AFAA               	btfss	(i2printf@fval+3)& (0+255),7,b
 25601  011B5A  D015               	goto	i2l1394
 25602                           
 25603                           ; BSR set to: 0
 25604                           ;doprnt.c: 832: fval = -fval;
 25605  011B5C  C0A7  F02C         	movff	i2printf@fval,i2___flneg@f1
 25606  011B60  C0A8  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 25607  011B64  C0A9  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 25608  011B68  C0AA  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 25609  011B6C  EC2D  F0C0         	call	i2___flneg	;wreg free
 25610  011B70  C02C  F0A7         	movff	?i2___flneg,i2printf@fval
 25611  011B74  C02D  F0A8         	movff	?i2___flneg+1,i2printf@fval+1
 25612  011B78  C02E  F0A9         	movff	?i2___flneg+2,i2printf@fval+2
 25613  011B7C  C02F  F0AA         	movff	?i2___flneg+3,i2printf@fval+3
 25614                           
 25615                           ;doprnt.c: 833: flag |= 0x03;
 25616  011B80  0E03               	movlw	3
 25617  011B82  0100               	movlb	0	; () banked
 25618  011B84  139B               	iorwf	i2printf@flag& (0+255),f,b
 25619  011B86                     i2l1394:
 25620                           
 25621                           ; BSR set to: 0
 25622                           ;doprnt.c: 834: }
 25623                           ;doprnt.c: 835: exp = 0;
 25624                           
 25625                           ; BSR set to: 0
 25626  011B86  0E00               	movlw	0
 25627  011B88  6F9E               	movwf	(i2printf@exp+1)& (0+255),b
 25628  011B8A  0E00               	movlw	0
 25629  011B8C  6F9D               	movwf	i2printf@exp& (0+255),b
 25630                           
 25631                           ; BSR set to: 0
 25632                           ;doprnt.c: 836: if( fval!=0) {
 25633  011B8E  51A7               	movf	i2printf@fval& (0+255),w,b
 25634  011B90  11A8               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25635  011B92  11A9               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25636  011B94  11AA               	iorwf	(i2printf@fval+3)& (0+255),w,b
 25637  011B96  B4D8               	btfsc	status,2,c
 25638  011B98  D082               	goto	i2l1399
 25639                           
 25640                           ; BSR set to: 0
 25641                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 25642  011B9A  35A9               	rlcf	(i2printf@fval+2)& (0+255),w,b
 25643  011B9C  35AA               	rlcf	(i2printf@fval+3)& (0+255),w,b
 25644  011B9E  0F82               	addlw	130
 25645  011BA0  6F9D               	movwf	i2printf@exp& (0+255),b
 25646  011BA2  6B9E               	clrf	(i2printf@exp+1)& (0+255),b
 25647  011BA4  0EFF               	movlw	255
 25648  011BA6  239E               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25649                           
 25650                           ; BSR set to: 0
 25651                           ;doprnt.c: 838: exp--;
 25652  011BA8  079D               	decf	i2printf@exp& (0+255),f,b
 25653  011BAA  A0D8               	btfss	status,0,c
 25654  011BAC  079E               	decf	(i2printf@exp+1)& (0+255),f,b
 25655                           
 25656                           ; BSR set to: 0
 25657                           ;doprnt.c: 839: exp *= 3;
 25658  011BAE  C09D  F001         	movff	i2printf@exp,i2___wmul@multiplier
 25659  011BB2  C09E  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 25660  011BB6  0E00               	movlw	0
 25661  011BB8  6E04               	movwf	i2___wmul@multiplicand+1,c
 25662  011BBA  0E03               	movlw	3
 25663  011BBC  6E03               	movwf	i2___wmul@multiplicand,c
 25664  011BBE  ECBB  F0C0         	call	i2___wmul	;wreg free
 25665  011BC2  C001  F09D         	movff	?i2___wmul,i2printf@exp
 25666  011BC6  C002  F09E         	movff	?i2___wmul+1,i2printf@exp+1
 25667                           
 25668                           ;doprnt.c: 840: exp /= 10;
 25669  011BCA  C09D  F007         	movff	i2printf@exp,i2___awdiv@dividend
 25670  011BCE  C09E  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 25671  011BD2  0E00               	movlw	0
 25672  011BD4  6E0A               	movwf	i2___awdiv@divisor+1,c
 25673  011BD6  0E0A               	movlw	10
 25674  011BD8  6E09               	movwf	i2___awdiv@divisor,c
 25675  011BDA  EC29  F0BA         	call	i2___awdiv	;wreg free
 25676  011BDE  C007  F09D         	movff	?i2___awdiv,i2printf@exp
 25677  011BE2  C008  F09E         	movff	?i2___awdiv+1,i2printf@exp+1
 25678                           
 25679                           ;doprnt.c: 841: if(exp < 0)
 25680  011BE6  0100               	movlb	0	; () banked
 25681  011BE8  AF9E               	btfss	(i2printf@exp+1)& (0+255),7,b
 25682  011BEA  D003               	goto	i2l1396
 25683                           
 25684                           ; BSR set to: 0
 25685                           ;doprnt.c: 842: exp--;
 25686  011BEC  079D               	decf	i2printf@exp& (0+255),f,b
 25687  011BEE  A0D8               	btfss	status,0,c
 25688  011BF0  079E               	decf	(i2printf@exp+1)& (0+255),f,b
 25689  011BF2                     i2l1396:
 25690                           
 25691                           ; BSR set to: 0
 25692                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25693                           
 25694                           ; BSR set to: 0
 25695  011BF2  519D               	movf	i2printf@exp& (0+255),w,b
 25696  011BF4  0800               	sublw	0
 25697  011BF6  EC34  F099         	call	i2_scale
 25698  011BFA  C049  F09F         	movff	?i2_scale,i2printf@tmpval
 25699  011BFE  C04A  F0A0         	movff	?i2_scale+1,i2printf@tmpval+1
 25700  011C02  C04B  F0A1         	movff	?i2_scale+2,i2printf@tmpval+2
 25701  011C06  C04C  F0A2         	movff	?i2_scale+3,i2printf@tmpval+3
 25702                           
 25703                           ;doprnt.c: 847: tmpval.integ *= fval;
 25704  011C0A  C09F  F030         	movff	i2printf@tmpval,i2___flmul@b
 25705  011C0E  C0A0  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 25706  011C12  C0A1  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 25707  011C16  C0A2  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 25708  011C1A  C0A7  F034         	movff	i2printf@fval,i2___flmul@a
 25709  011C1E  C0A8  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 25710  011C22  C0A9  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 25711  011C26  C0AA  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 25712  011C2A  ECD1  F09E         	call	i2___flmul	;wreg free
 25713  011C2E  C030  F09F         	movff	?i2___flmul,i2printf@tmpval
 25714  011C32  C031  F0A0         	movff	?i2___flmul+1,i2printf@tmpval+1
 25715  011C36  C032  F0A1         	movff	?i2___flmul+2,i2printf@tmpval+2
 25716  011C3A  C033  F0A2         	movff	?i2___flmul+3,i2printf@tmpval+3
 25717                           
 25718                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25719  011C3E  C09F  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25720  011C42  C0A0  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25721  011C46  C0A1  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25722  011C4A  C0A2  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25723  011C4E  0E00               	movlw	0
 25724  011C50  6E38               	movwf	i2___flge@ff2,c
 25725  011C52  0E00               	movlw	0
 25726  011C54  6E39               	movwf	i2___flge@ff2+1,c
 25727  011C56  0E80               	movlw	128
 25728  011C58  6E3A               	movwf	i2___flge@ff2+2,c
 25729  011C5A  0E3F               	movlw	63
 25730  011C5C  6E3B               	movwf	i2___flge@ff2+3,c
 25731  011C5E  EC08  F0B4         	call	i2___flge	;wreg free
 25732  011C62  B0D8               	btfsc	status,0,c
 25733  011C64  D005               	goto	i2l1397
 25734                           
 25735                           ;doprnt.c: 849: exp--;
 25736  011C66  0100               	movlb	0	; () banked
 25737  011C68  079D               	decf	i2printf@exp& (0+255),f,b
 25738  011C6A  A0D8               	btfss	status,0,c
 25739  011C6C  079E               	decf	(i2printf@exp+1)& (0+255),f,b
 25740  011C6E  D017               	goto	i2l1399
 25741  011C70                     i2l1397:
 25742                           
 25743                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25744                           
 25745                           ; BSR set to: 0
 25746  011C70  C09F  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25747  011C74  C0A0  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25748  011C78  C0A1  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25749  011C7C  C0A2  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25750  011C80  0E00               	movlw	0
 25751  011C82  6E38               	movwf	i2___flge@ff2,c
 25752  011C84  0E00               	movlw	0
 25753  011C86  6E39               	movwf	i2___flge@ff2+1,c
 25754  011C88  0E20               	movlw	32
 25755  011C8A  6E3A               	movwf	i2___flge@ff2+2,c
 25756  011C8C  0E41               	movlw	65
 25757  011C8E  6E3B               	movwf	i2___flge@ff2+3,c
 25758  011C90  EC08  F0B4         	call	i2___flge	;wreg free
 25759  011C94  A0D8               	btfss	status,0,c
 25760  011C96  D003               	goto	i2l1399
 25761                           
 25762                           ;doprnt.c: 851: exp++;
 25763  011C98  0100               	movlb	0	; () banked
 25764  011C9A  4B9D               	infsnz	i2printf@exp& (0+255),f,b
 25765  011C9C  2B9E               	incf	(i2printf@exp+1)& (0+255),f,b
 25766  011C9E                     i2l1399:
 25767                           
 25768                           ;doprnt.c: 852: }
 25769                           ;doprnt.c: 1112: if(prec <= 12)
 25770                           
 25771                           ; BSR set to: 0
 25772                           
 25773                           ; BSR set to: 0
 25774                           
 25775                           ; BSR set to: 0
 25776  011C9E  0100               	movlb	0	; () banked
 25777  011CA0  BFAC               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25778  011CA2  D006               	goto	i2u1674_40
 25779  011CA4  51AC               	movf	(i2printf@prec+1)& (0+255),w,b
 25780  011CA6  E121               	bnz	i2l13826
 25781  011CA8  0E0D               	movlw	13
 25782  011CAA  5DAB               	subwf	i2printf@prec& (0+255),w,b
 25783  011CAC  B0D8               	btfsc	status,0,c
 25784  011CAE  D01D               	goto	i2l1400
 25785  011CB0                     i2u1674_40:
 25786                           
 25787                           ; BSR set to: 0
 25788                           ;doprnt.c: 1113: fval += fround(prec);
 25789  011CB0  C0A7  F056         	movff	i2printf@fval,i2___fladd@b
 25790  011CB4  C0A8  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 25791  011CB8  C0A9  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 25792  011CBC  C0AA  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 25793  011CC0  51AB               	movf	i2printf@prec& (0+255),w,b
 25794  011CC2  EC32  F0AC         	call	i2_fround
 25795  011CC6  C049  F05A         	movff	?i2_fround,i2___fladd@a
 25796  011CCA  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 25797  011CCE  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 25798  011CD2  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 25799  011CD6  EC18  F0A2         	call	i2___fladd	;wreg free
 25800  011CDA  C056  F0A7         	movff	?i2___fladd,i2printf@fval
 25801  011CDE  C057  F0A8         	movff	?i2___fladd+1,i2printf@fval+1
 25802  011CE2  C058  F0A9         	movff	?i2___fladd+2,i2printf@fval+2
 25803  011CE6  C059  F0AA         	movff	?i2___fladd+3,i2printf@fval+3
 25804  011CEA                     i2l1400:
 25805  011CEA                     i2l13826:
 25806                           
 25807                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25808  011CEA  0100               	movlb	0	; () banked
 25809  011CEC  BF9E               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25810  011CEE  D006               	goto	i2u1675_40
 25811  011CF0  519E               	movf	(i2printf@exp+1)& (0+255),w,b
 25812  011CF2  E122               	bnz	i2l13834
 25813  011CF4  0E0A               	movlw	10
 25814  011CF6  5D9D               	subwf	i2printf@exp& (0+255),w,b
 25815  011CF8  B0D8               	btfsc	status,0,c
 25816  011CFA  D01E               	goto	i2u1678_40
 25817  011CFC                     i2u1675_40:
 25818                           
 25819                           ; BSR set to: 0
 25820  011CFC  51A7               	movf	i2printf@fval& (0+255),w,b
 25821  011CFE  11A8               	iorwf	(i2printf@fval+1)& (0+255),w,b
 25822  011D00  11A9               	iorwf	(i2printf@fval+2)& (0+255),w,b
 25823  011D02  11AA               	iorwf	(i2printf@fval+3)& (0+255),w,b
 25824  011D04  B4D8               	btfsc	status,2,c
 25825  011D06  D063               	goto	i2l1401
 25826                           
 25827                           ; BSR set to: 0
 25828  011D08  C0A7  F06C         	movff	i2printf@fval,i2___fltol@f1
 25829  011D0C  C0A8  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 25830  011D10  C0A9  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 25831  011D14  C0AA  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 25832  011D18  EC9E  F0B6         	call	i2___fltol	;wreg free
 25833  011D1C  0100               	movlb	0	; () banked
 25834  011D1E  516C               	movf	?i2___fltol& (0+255),w,b
 25835  011D20  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 25836  011D22  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 25837  011D24  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 25838  011D26  B4D8               	btfsc	status,2,c
 25839                           
 25840                           ; BSR set to: 0
 25841  011D28  BF9E               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25842  011D2A  D051               	goto	i2l1401
 25843  011D2C  519E               	movf	(i2printf@exp+1)& (0+255),w,b
 25844  011D2E  E104               	bnz	i2l13834
 25845  011D30  0E02               	movlw	2
 25846  011D32  5D9D               	subwf	i2printf@exp& (0+255),w,b
 25847  011D34  A0D8               	btfss	status,0,c
 25848  011D36  D04B               	goto	i2l1401
 25849  011D38                     i2u1678_40:
 25850  011D38                     i2l13834:
 25851                           
 25852                           ; BSR set to: 0
 25853                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25854  011D38  C09F  F034         	movff	i2printf@tmpval,i2___flge@ff1
 25855  011D3C  C0A0  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 25856  011D40  C0A1  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 25857  011D44  C0A2  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 25858  011D48  0E5F               	movlw	95
 25859  011D4A  6E38               	movwf	i2___flge@ff2,c
 25860  011D4C  0E70               	movlw	112
 25861  011D4E  6E39               	movwf	i2___flge@ff2+1,c
 25862  011D50  0E89               	movlw	137
 25863  011D52  6E3A               	movwf	i2___flge@ff2+2,c
 25864  011D54  0E40               	movlw	64
 25865  011D56  6E3B               	movwf	i2___flge@ff2+3,c
 25866  011D58  EC08  F0B4         	call	i2___flge	;wreg free
 25867  011D5C  B0D8               	btfsc	status,0,c
 25868  011D5E  D003               	goto	i2l1404
 25869                           
 25870                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25871  011D60  0100               	movlb	0	; () banked
 25872  011D62  0EF7               	movlw	247
 25873  011D64  D002               	goto	L15
 25874  011D66                     i2l1404:
 25875                           
 25876                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25877                           
 25878                           ; BSR set to: 0
 25879  011D66  0100               	movlb	0	; () banked
 25880  011D68  0EF8               	movlw	248
 25881  011D6A                     L15:
 25882  011D6A  279D               	addwf	i2printf@exp& (0+255),f,b
 25883  011D6C  0EFF               	movlw	255
 25884  011D6E  239E               	addwfc	(i2printf@exp+1)& (0+255),f,b
 25885                           
 25886                           ; BSR set to: 0
 25887                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25888                           
 25889                           ; BSR set to: 0
 25890  011D70  519D               	movf	i2printf@exp& (0+255),w,b
 25891  011D72  EC34  F099         	call	i2_scale
 25892  011D76  C049  F09F         	movff	?i2_scale,i2printf@tmpval
 25893  011D7A  C04A  F0A0         	movff	?i2_scale+1,i2printf@tmpval+1
 25894  011D7E  C04B  F0A1         	movff	?i2_scale+2,i2printf@tmpval+2
 25895  011D82  C04C  F0A2         	movff	?i2_scale+3,i2printf@tmpval+3
 25896  011D86  C0A7  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 25897  011D8A  C0A8  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 25898  011D8E  C0A9  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 25899  011D92  C0AA  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 25900  011D96  C09F  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 25901  011D9A  C0A0  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 25902  011D9E  C0A1  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 25903  011DA2  C0A2  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 25904  011DA6  ECE3  F0B2         	call	i2__div_to_l_	;wreg free
 25905  011DAA  C001  F0A3         	movff	?i2__div_to_l_,i2printf@val
 25906  011DAE  C002  F0A4         	movff	?i2__div_to_l_+1,i2printf@val+1
 25907  011DB2  C003  F0A5         	movff	?i2__div_to_l_+2,i2printf@val+2
 25908  011DB6  C004  F0A6         	movff	?i2__div_to_l_+3,i2printf@val+3
 25909                           
 25910                           ;doprnt.c: 1129: fval = 0.0;
 25911  011DBA  0E00               	movlw	0
 25912  011DBC  0100               	movlb	0	; () banked
 25913  011DBE  6FA7               	movwf	i2printf@fval& (0+255),b
 25914  011DC0  0E00               	movlw	0
 25915  011DC2  6FA8               	movwf	(i2printf@fval+1)& (0+255),b
 25916  011DC4  0E00               	movlw	0
 25917  011DC6  6FA9               	movwf	(i2printf@fval+2)& (0+255),b
 25918  011DC8  0E00               	movlw	0
 25919  011DCA  6FAA               	movwf	(i2printf@fval+3)& (0+255),b
 25920                           
 25921                           ;doprnt.c: 1130: } else {
 25922  011DCC  D03C               	goto	i2l1410
 25923  011DCE                     i2l1401:
 25924                           
 25925                           ; BSR set to: 0
 25926                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25927                           
 25928                           ; BSR set to: 0
 25929  011DCE  C0A7  F06C         	movff	i2printf@fval,i2___fltol@f1
 25930  011DD2  C0A8  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 25931  011DD6  C0A9  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 25932  011DDA  C0AA  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 25933  011DDE  EC9E  F0B6         	call	i2___fltol	;wreg free
 25934  011DE2  C06C  F0A3         	movff	?i2___fltol,i2printf@val
 25935  011DE6  C06D  F0A4         	movff	?i2___fltol+1,i2printf@val+1
 25936  011DEA  C06E  F0A5         	movff	?i2___fltol+2,i2printf@val+2
 25937  011DEE  C06F  F0A6         	movff	?i2___fltol+3,i2printf@val+3
 25938                           
 25939                           ;doprnt.c: 1132: fval -= (double)val;
 25940  011DF2  C0A7  F080         	movff	i2printf@fval,i2___flsub@b
 25941  011DF6  C0A8  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 25942  011DFA  C0A9  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 25943  011DFE  C0AA  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 25944  011E02  C0A3  F005         	movff	i2printf@val,i2___xxtofl@val
 25945  011E06  C0A4  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 25946  011E0A  C0A5  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 25947  011E0E  C0A6  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 25948  011E12  0E00               	movlw	0
 25949  011E14  EC73  F0B0         	call	i2___xxtofl
 25950  011E18  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 25951  011E1C  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 25952  011E20  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 25953  011E24  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 25954  011E28  EC84  F0BE         	call	i2___flsub	;wreg free
 25955  011E2C  C080  F0A7         	movff	?i2___flsub,i2printf@fval
 25956  011E30  C081  F0A8         	movff	?i2___flsub+1,i2printf@fval+1
 25957  011E34  C082  F0A9         	movff	?i2___flsub+2,i2printf@fval+2
 25958  011E38  C083  F0AA         	movff	?i2___flsub+3,i2printf@fval+3
 25959                           
 25960                           ;doprnt.c: 1133: exp = 0;
 25961  011E3C  0E00               	movlw	0
 25962  011E3E  0100               	movlb	0	; () banked
 25963  011E40  6F9E               	movwf	(i2printf@exp+1)& (0+255),b
 25964  011E42  0E00               	movlw	0
 25965  011E44  6F9D               	movwf	i2printf@exp& (0+255),b
 25966  011E46                     i2l1410:
 25967                           
 25968                           ; BSR set to: 0
 25969                           ;doprnt.c: 1134: }
 25970                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25971                           
 25972                           ; BSR set to: 0
 25973  011E46  0E01               	movlw	1
 25974  011E48  6FAD               	movwf	i2printf@c& (0+255),b
 25975  011E4A                     i2l13854:
 25976                           
 25977                           ; BSR set to: 0
 25978  011E4A  0E0A               	movlw	10
 25979  011E4C  19AD               	xorwf	i2printf@c& (0+255),w,b
 25980  011E4E  B4D8               	btfsc	status,2,c
 25981  011E50  D01B               	goto	i2u1682_40
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;doprnt.c: 1137: if(val < dpowers[c])
 25985                           
 25986                           ; BSR set to: 0
 25987                           
 25988                           ; BSR set to: 0
 25989  011E52  51AD               	movf	i2printf@c& (0+255),w,b
 25990  011E54  0D04               	mullw	4
 25991  011E56  0E83               	movlw	low _dpowers
 25992  011E58  24F3               	addwf	prodl,w,c
 25993  011E5A  6EF6               	movwf	tblptrl,c
 25994  011E5C  0EEA               	movlw	high _dpowers
 25995  011E5E  20F4               	addwfc	prodh,w,c
 25996  011E60  6EF7               	movwf	tblptrh,c
 25997  011E62                     	if	1	;There are 3 active tblptr bytes
 25998  011E62  6AF8               	clrf	tblptru,c
 25999  011E64  0E00               	movlw	low (__mediumconst shr (0+16))
 26000  011E66  22F8               	addwfc	tblptru,f,c
 26001  011E68                     	endif
 26002  011E68  0009               	tblrd		*+
 26003  011E6A  50F5               	movf	tablat,w,c
 26004  011E6C  5DA3               	subwf	i2printf@val& (0+255),w,b
 26005  011E6E  0009               	tblrd		*+
 26006  011E70  50F5               	movf	tablat,w,c
 26007  011E72  59A4               	subwfb	(i2printf@val+1)& (0+255),w,b
 26008  011E74  0009               	tblrd		*+
 26009  011E76  50F5               	movf	tablat,w,c
 26010  011E78  59A5               	subwfb	(i2printf@val+2)& (0+255),w,b
 26011  011E7A  0009               	tblrd		*+
 26012  011E7C  50F5               	movf	tablat,w,c
 26013  011E7E  59A6               	subwfb	(i2printf@val+3)& (0+255),w,b
 26014  011E80  A0D8               	btfss	status,0,c
 26015  011E82  D002               	goto	i2u1682_40
 26016                           
 26017                           ; BSR set to: 0
 26018                           
 26019                           ; BSR set to: 0
 26020                           
 26021                           ; BSR set to: 0
 26022                           ;doprnt.c: 1138: break;
 26023  011E84  2BAD               	incf	i2printf@c& (0+255),f,b
 26024  011E86  D7E1               	goto	i2l13854
 26025  011E88                     i2u1682_40:
 26026                           
 26027                           ; BSR set to: 0
 26028                           ;doprnt.c: 1175: {
 26029                           ;doprnt.c: 1188: if(flag & 0x03)
 26030                           
 26031                           ; BSR set to: 0
 26032  011E88  0E03               	movlw	3
 26033  011E8A  159B               	andwf	i2printf@flag& (0+255),w,b
 26034  011E8C  6F8A               	movwf	??i2_printf& (0+255),b
 26035  011E8E  0E00               	movlw	0
 26036  011E90  159C               	andwf	(i2printf@flag+1)& (0+255),w,b
 26037  011E92  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26038  011E94  518A               	movf	??i2_printf& (0+255),w,b
 26039  011E96  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 26040  011E98  B4D8               	btfsc	status,2,c
 26041  011E9A  D04D               	goto	i2l1415
 26042                           
 26043                           ; BSR set to: 0
 26044                           ;doprnt.c: 1190: (putch('-') );
 26045  011E9C  0E2D               	movlw	45
 26046  011E9E  ECD5  F0C1         	call	i2_putch
 26047                           
 26048                           ;doprnt.c: 1195: }
 26049                           ;doprnt.c: 1196: while(c--) {
 26050  011EA2  D049               	goto	i2l1415
 26051  011EA4                     
 26052                           ;doprnt.c: 1200: {
 26053                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 26054  011EA4  C0A3  F001         	movff	i2printf@val,i2___lldiv@dividend
 26055  011EA8  C0A4  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26056  011EAC  C0A5  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26057  011EB0  C0A6  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26058  011EB4  0100               	movlb	0	; () banked
 26059  011EB6  51AD               	movf	i2printf@c& (0+255),w,b
 26060  011EB8  0D04               	mullw	4
 26061  011EBA  0E83               	movlw	low _dpowers
 26062  011EBC  24F3               	addwf	prodl,w,c
 26063  011EBE  6EF6               	movwf	tblptrl,c
 26064  011EC0  0EEA               	movlw	high _dpowers
 26065  011EC2  20F4               	addwfc	prodh,w,c
 26066  011EC4  6EF7               	movwf	tblptrh,c
 26067  011EC6                     	if	1	;There are 3 active tblptr bytes
 26068  011EC6  6AF8               	clrf	tblptru,c
 26069  011EC8  0E00               	movlw	low (__mediumconst shr (0+16))
 26070  011ECA  22F8               	addwfc	tblptru,f,c
 26071  011ECC                     	endif
 26072  011ECC  0009               	tblrd		*+
 26073  011ECE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26074  011ED2  0009               	tblrd		*+
 26075  011ED4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26076  011ED8  0009               	tblrd		*+
 26077  011EDA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26078  011EDE  000A               	tblrd		*-
 26079  011EE0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26080  011EE4  EC6B  F0BA         	call	i2___lldiv	;wreg free
 26081  011EE8  C001  F09F         	movff	?i2___lldiv,i2printf@tmpval
 26082  011EEC  C002  F0A0         	movff	?i2___lldiv+1,i2printf@tmpval+1
 26083  011EF0  C003  F0A1         	movff	?i2___lldiv+2,i2printf@tmpval+2
 26084  011EF4  C004  F0A2         	movff	?i2___lldiv+3,i2printf@tmpval+3
 26085                           
 26086                           ;doprnt.c: 1202: tmpval.vd %= 10;
 26087  011EF8  C09F  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 26088  011EFC  C0A0  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 26089  011F00  C0A1  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 26090  011F04  C0A2  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 26091  011F08  0E0A               	movlw	10
 26092  011F0A  6E12               	movwf	i2___llmod@divisor,c
 26093  011F0C  0E00               	movlw	0
 26094  011F0E  6E13               	movwf	i2___llmod@divisor+1,c
 26095  011F10  0E00               	movlw	0
 26096  011F12  6E14               	movwf	i2___llmod@divisor+2,c
 26097  011F14  0E00               	movlw	0
 26098  011F16  6E15               	movwf	i2___llmod@divisor+3,c
 26099  011F18  EC6C  F0BC         	call	i2___llmod	;wreg free
 26100  011F1C  C00E  F09F         	movff	?i2___llmod,i2printf@tmpval
 26101  011F20  C00F  F0A0         	movff	?i2___llmod+1,i2printf@tmpval+1
 26102  011F24  C010  F0A1         	movff	?i2___llmod+2,i2printf@tmpval+2
 26103  011F28  C011  F0A2         	movff	?i2___llmod+3,i2printf@tmpval+3
 26104                           
 26105                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 26106  011F2C  0100               	movlb	0	; () banked
 26107  011F2E  519F               	movf	i2printf@tmpval& (0+255),w,b
 26108  011F30  0F30               	addlw	48
 26109  011F32  ECD5  F0C1         	call	i2_putch
 26110  011F36                     i2l1415:
 26111  011F36  0100               	movlb	0	; () banked
 26112  011F38  07AD               	decf	i2printf@c& (0+255),f,b
 26113  011F3A  29AD               	incf	i2printf@c& (0+255),w,b
 26114  011F3C  B4D8               	btfsc	status,2,c
 26115  011F3E  D008               	goto	i2l1418
 26116  011F40  D7B1               	goto	i2l1416
 26117  011F42                     i2l13878:
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;doprnt.c: 1208: (putch('0') );
 26121  011F42  0E30               	movlw	48
 26122  011F44  ECD5  F0C1         	call	i2_putch
 26123                           
 26124                           ;doprnt.c: 1209: exp--;
 26125  011F48  0100               	movlb	0	; () banked
 26126  011F4A  079D               	decf	i2printf@exp& (0+255),f,b
 26127  011F4C  A0D8               	btfss	status,0,c
 26128  011F4E  079E               	decf	(i2printf@exp+1)& (0+255),f,b
 26129  011F50                     i2l1418:
 26130                           
 26131                           ; BSR set to: 0
 26132                           
 26133                           ; BSR set to: 0
 26134  011F50  BF9E               	btfsc	(i2printf@exp+1)& (0+255),7,b
 26135  011F52  D005               	goto	i2u1685_40
 26136  011F54  519E               	movf	(i2printf@exp+1)& (0+255),w,b
 26137  011F56  E1F5               	bnz	i2l13878
 26138  011F58  059D               	decf	i2printf@exp& (0+255),w,b
 26139  011F5A  B0D8               	btfsc	status,0,c
 26140  011F5C  D7F2               	goto	i2l1419
 26141  011F5E                     i2u1685_40:
 26142                           
 26143                           ; BSR set to: 0
 26144                           ;doprnt.c: 1210: }
 26145                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 26146                           
 26147                           ; BSR set to: 0
 26148  011F5E  BFAC               	btfsc	(i2printf@prec+1)& (0+255),7,b
 26149  011F60  D009               	goto	i2l1421
 26150  011F62  51AC               	movf	(i2printf@prec+1)& (0+255),w,b
 26151  011F64  E104               	bnz	i2u1686_40
 26152  011F66  0E09               	movlw	9
 26153  011F68  5DAB               	subwf	i2printf@prec& (0+255),w,b
 26154  011F6A  A0D8               	btfss	status,0,c
 26155  011F6C  D003               	goto	i2l1421
 26156  011F6E                     i2u1686_40:
 26157                           
 26158                           ; BSR set to: 0
 26159                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 26160  011F6E  0E08               	movlw	8
 26161  011F70  6FAD               	movwf	i2printf@c& (0+255),b
 26162  011F72  D002               	goto	i2l1422
 26163  011F74                     i2l1421:
 26164                           
 26165                           ; BSR set to: 0
 26166                           ;doprnt.c: 1213: else
 26167                           ;doprnt.c: 1214: c = prec;
 26168  011F74  C0AB  F0AD         	movff	i2printf@prec,i2printf@c
 26169  011F78                     i2l1422:
 26170                           
 26171                           ; BSR set to: 0
 26172                           ;doprnt.c: 1215: prec -= c;
 26173                           
 26174                           ; BSR set to: 0
 26175  011F78  51AD               	movf	i2printf@c& (0+255),w,b
 26176  011F7A  5FAB               	subwf	i2printf@prec& (0+255),f,b
 26177  011F7C  0E00               	movlw	0
 26178  011F7E  BFAD               	btfsc	i2printf@c& (0+255),7,b
 26179  011F80  0EFF               	movlw	255
 26180  011F82  5BAC               	subwfb	(i2printf@prec+1)& (0+255),f,b
 26181                           
 26182                           ; BSR set to: 0
 26183                           ;doprnt.c: 1219: if(c)
 26184  011F84  51AD               	movf	i2printf@c& (0+255),w,b
 26185  011F86  B4D8               	btfsc	status,2,c
 26186  011F88  D003               	goto	i2l1423
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;doprnt.c: 1221: (putch('.') );
 26190  011F8A  0E2E               	movlw	46
 26191  011F8C  ECD5  F0C1         	call	i2_putch
 26192  011F90                     i2l1423:
 26193                           
 26194                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26195  011F90  0100               	movlb	0	; () banked
 26196  011F92  51AD               	movf	i2printf@c& (0+255),w,b
 26197  011F94  EC34  F099         	call	i2_scale
 26198  011F98  C049  F090         	movff	?i2_scale,i2_printf$4101
 26199  011F9C  C04A  F091         	movff	?i2_scale+1,i2_printf$4101+1
 26200  011FA0  C04B  F092         	movff	?i2_scale+2,i2_printf$4101+2
 26201  011FA4  C04C  F093         	movff	?i2_scale+3,i2_printf$4101+3
 26202                           
 26203                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26204  011FA8  C0A7  F034         	movff	i2printf@fval,i2___flmul@a
 26205  011FAC  C0A8  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 26206  011FB0  C0A9  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 26207  011FB4  C0AA  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 26208  011FB8  C090  F030         	movff	i2_printf$4101,i2___flmul@b
 26209  011FBC  C091  F031         	movff	i2_printf$4101+1,i2___flmul@b+1
 26210  011FC0  C092  F032         	movff	i2_printf$4101+2,i2___flmul@b+2
 26211  011FC4  C093  F033         	movff	i2_printf$4101+3,i2___flmul@b+3
 26212  011FC8  ECD1  F09E         	call	i2___flmul	;wreg free
 26213  011FCC  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 26214  011FD0  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 26215  011FD4  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 26216  011FD8  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 26217  011FDC  EC9E  F0B6         	call	i2___fltol	;wreg free
 26218  011FE0  C06C  F0A3         	movff	?i2___fltol,i2printf@val
 26219  011FE4  C06D  F0A4         	movff	?i2___fltol+1,i2printf@val+1
 26220  011FE8  C06E  F0A5         	movff	?i2___fltol+2,i2printf@val+2
 26221  011FEC  C06F  F0A6         	movff	?i2___fltol+3,i2printf@val+3
 26222                           
 26223                           ;doprnt.c: 1228: while(c--) {
 26224  011FF0  D073               	goto	i2l1424
 26225  011FF2                     
 26226                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 26227  011FF2  C0A3  F001         	movff	i2printf@val,i2___lldiv@dividend
 26228  011FF6  C0A4  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26229  011FFA  C0A5  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26230  011FFE  C0A6  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26231  012002  0100               	movlb	0	; () banked
 26232  012004  51AD               	movf	i2printf@c& (0+255),w,b
 26233  012006  0D04               	mullw	4
 26234  012008  0E83               	movlw	low _dpowers
 26235  01200A  24F3               	addwf	prodl,w,c
 26236  01200C  6EF6               	movwf	tblptrl,c
 26237  01200E  0EEA               	movlw	high _dpowers
 26238  012010  20F4               	addwfc	prodh,w,c
 26239  012012  6EF7               	movwf	tblptrh,c
 26240  012014                     	if	1	;There are 3 active tblptr bytes
 26241  012014  6AF8               	clrf	tblptru,c
 26242  012016  0E00               	movlw	low (__mediumconst shr (0+16))
 26243  012018  22F8               	addwfc	tblptru,f,c
 26244  01201A                     	endif
 26245  01201A  0009               	tblrd		*+
 26246  01201C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26247  012020  0009               	tblrd		*+
 26248  012022  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26249  012026  0009               	tblrd		*+
 26250  012028  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26251  01202C  000A               	tblrd		*-
 26252  01202E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26253  012032  EC6B  F0BA         	call	i2___lldiv	;wreg free
 26254  012036  C001  F09F         	movff	?i2___lldiv,i2printf@tmpval
 26255  01203A  C002  F0A0         	movff	?i2___lldiv+1,i2printf@tmpval+1
 26256  01203E  C003  F0A1         	movff	?i2___lldiv+2,i2printf@tmpval+2
 26257  012042  C004  F0A2         	movff	?i2___lldiv+3,i2printf@tmpval+3
 26258                           
 26259                           ;doprnt.c: 1230: tmpval.vd %= 10;
 26260  012046  C09F  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 26261  01204A  C0A0  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 26262  01204E  C0A1  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 26263  012052  C0A2  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 26264  012056  0E0A               	movlw	10
 26265  012058  6E12               	movwf	i2___llmod@divisor,c
 26266  01205A  0E00               	movlw	0
 26267  01205C  6E13               	movwf	i2___llmod@divisor+1,c
 26268  01205E  0E00               	movlw	0
 26269  012060  6E14               	movwf	i2___llmod@divisor+2,c
 26270  012062  0E00               	movlw	0
 26271  012064  6E15               	movwf	i2___llmod@divisor+3,c
 26272  012066  EC6C  F0BC         	call	i2___llmod	;wreg free
 26273  01206A  C00E  F09F         	movff	?i2___llmod,i2printf@tmpval
 26274  01206E  C00F  F0A0         	movff	?i2___llmod+1,i2printf@tmpval+1
 26275  012072  C010  F0A1         	movff	?i2___llmod+2,i2printf@tmpval+2
 26276  012076  C011  F0A2         	movff	?i2___llmod+3,i2printf@tmpval+3
 26277                           
 26278                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 26279  01207A  0100               	movlb	0	; () banked
 26280  01207C  519F               	movf	i2printf@tmpval& (0+255),w,b
 26281  01207E  0F30               	addlw	48
 26282  012080  ECD5  F0C1         	call	i2_putch
 26283                           
 26284                           ;doprnt.c: 1232: val %= dpowers[c];
 26285  012084  C0A3  F00E         	movff	i2printf@val,i2___llmod@dividend
 26286  012088  C0A4  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 26287  01208C  C0A5  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 26288  012090  C0A6  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 26289  012094  0100               	movlb	0	; () banked
 26290  012096  51AD               	movf	i2printf@c& (0+255),w,b
 26291  012098  0D04               	mullw	4
 26292  01209A  0E83               	movlw	low _dpowers
 26293  01209C  24F3               	addwf	prodl,w,c
 26294  01209E  6EF6               	movwf	tblptrl,c
 26295  0120A0  0EEA               	movlw	high _dpowers
 26296  0120A2  20F4               	addwfc	prodh,w,c
 26297  0120A4  6EF7               	movwf	tblptrh,c
 26298  0120A6                     	if	1	;There are 3 active tblptr bytes
 26299  0120A6  6AF8               	clrf	tblptru,c
 26300  0120A8  0E00               	movlw	low (__mediumconst shr (0+16))
 26301  0120AA  22F8               	addwfc	tblptru,f,c
 26302  0120AC                     	endif
 26303  0120AC  0009               	tblrd		*+
 26304  0120AE  CFF5 F012          	movff	tablat,i2___llmod@divisor
 26305  0120B2  0009               	tblrd		*+
 26306  0120B4  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 26307  0120B8  0009               	tblrd		*+
 26308  0120BA  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 26309  0120BE  000A               	tblrd		*-
 26310  0120C0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 26311  0120C4  EC6C  F0BC         	call	i2___llmod	;wreg free
 26312  0120C8  C00E  F0A3         	movff	?i2___llmod,i2printf@val
 26313  0120CC  C00F  F0A4         	movff	?i2___llmod+1,i2printf@val+1
 26314  0120D0  C010  F0A5         	movff	?i2___llmod+2,i2printf@val+2
 26315  0120D4  C011  F0A6         	movff	?i2___llmod+3,i2printf@val+3
 26316  0120D8                     i2l1424:
 26317  0120D8  0100               	movlb	0	; () banked
 26318  0120DA  07AD               	decf	i2printf@c& (0+255),f,b
 26319  0120DC  29AD               	incf	i2printf@c& (0+255),w,b
 26320  0120DE  B4D8               	btfsc	status,2,c
 26321  0120E0  D008               	goto	i2l1427
 26322  0120E2  D787               	goto	i2l1425
 26323  0120E4                     
 26324                           ; BSR set to: 0
 26325                           ;doprnt.c: 1236: (putch('0') );
 26326                           
 26327                           ; BSR set to: 0
 26328  0120E4  0E30               	movlw	48
 26329  0120E6  ECD5  F0C1         	call	i2_putch
 26330                           
 26331                           ;doprnt.c: 1237: prec--;
 26332  0120EA  0100               	movlb	0	; () banked
 26333  0120EC  07AB               	decf	i2printf@prec& (0+255),f,b
 26334  0120EE  A0D8               	btfss	status,0,c
 26335  0120F0  07AC               	decf	(i2printf@prec+1)& (0+255),f,b
 26336  0120F2                     i2l1427:
 26337                           
 26338                           ; BSR set to: 0
 26339                           
 26340                           ; BSR set to: 0
 26341  0120F2  51AB               	movf	i2printf@prec& (0+255),w,b
 26342  0120F4  11AC               	iorwf	(i2printf@prec+1)& (0+255),w,b
 26343  0120F6  B4D8               	btfsc	status,2,c
 26344  0120F8  D156               	goto	i2u1703_40
 26345  0120FA  D7F4               	goto	i2l1428
 26346  0120FC                     i2l1392:
 26347                           
 26348                           ; BSR set to: 0
 26349                           ;doprnt.c: 1246: }
 26350                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 26351                           
 26352                           ; BSR set to: 0
 26353  0120FC  0EC0               	movlw	192
 26354  0120FE  159B               	andwf	i2printf@flag& (0+255),w,b
 26355  012100  6F8A               	movwf	??i2_printf& (0+255),b
 26356  012102  0E00               	movlw	0
 26357  012104  159C               	andwf	(i2printf@flag+1)& (0+255),w,b
 26358  012106  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26359  012108  518A               	movf	??i2_printf& (0+255),w,b
 26360  01210A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 26361  01210C  A4D8               	btfss	status,2,c
 26362  01210E  D01E               	goto	i2l1430
 26363                           
 26364                           ; BSR set to: 0
 26365                           ;doprnt.c: 1253: {
 26366                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 26367  012110  C099  FFD9         	movff	i2printf@ap,fsr2l
 26368  012114  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 26369  012118  CFDE F0A3          	movff	postinc2,i2printf@val
 26370  01211C  CFDD F0A4          	movff	postdec2,i2printf@val+1
 26371  012120  0E00               	movlw	0
 26372  012122  BFA4               	btfsc	(i2printf@val+1)& (0+255),7,b
 26373  012124  0EFF               	movlw	-1
 26374  012126  6FA5               	movwf	(i2printf@val+2)& (0+255),b
 26375  012128  6FA6               	movwf	(i2printf@val+3)& (0+255),b
 26376                           
 26377                           ; BSR set to: 0
 26378  01212A  0E02               	movlw	2
 26379  01212C  2799               	addwf	i2printf@ap& (0+255),f,b
 26380  01212E  0E00               	movlw	0
 26381  012130  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 26382                           
 26383                           ; BSR set to: 0
 26384                           ;doprnt.c: 1261: if((long)val < 0) {
 26385  012132  AFA6               	btfss	(i2printf@val+3)& (0+255),7,b
 26386  012134  D01D               	goto	i2l1432
 26387                           
 26388                           ; BSR set to: 0
 26389                           ;doprnt.c: 1262: flag |= 0x03;
 26390  012136  0E03               	movlw	3
 26391  012138  139B               	iorwf	i2printf@flag& (0+255),f,b
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;doprnt.c: 1263: val = -val;
 26395  01213A  1FA6               	comf	(i2printf@val+3)& (0+255),f,b
 26396  01213C  1FA5               	comf	(i2printf@val+2)& (0+255),f,b
 26397  01213E  1FA4               	comf	(i2printf@val+1)& (0+255),f,b
 26398  012140  6DA3               	negf	i2printf@val& (0+255),b
 26399  012142  0E00               	movlw	0
 26400  012144  23A4               	addwfc	(i2printf@val+1)& (0+255),f,b
 26401  012146  23A5               	addwfc	(i2printf@val+2)& (0+255),f,b
 26402  012148  23A6               	addwfc	(i2printf@val+3)& (0+255),f,b
 26403                           
 26404                           ; BSR set to: 0
 26405                           ;doprnt.c: 1264: }
 26406                           ;doprnt.c: 1266: }
 26407  01214A  D012               	goto	i2l1432
 26408  01214C                     i2l1430:
 26409                           
 26410                           ; BSR set to: 0
 26411                           ;doprnt.c: 1268: else
 26412                           ;doprnt.c: 1273: {
 26413                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 26414                           
 26415                           ; BSR set to: 0
 26416  01214C  C099  FFD9         	movff	i2printf@ap,fsr2l
 26417  012150  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 26418  012154  CFDE F08A          	movff	postinc2,??i2_printf
 26419  012158  CFDD F08B          	movff	postdec2,??i2_printf+1
 26420  01215C  C08A  F0A3         	movff	??i2_printf,i2printf@val
 26421  012160  C08B  F0A4         	movff	??i2_printf+1,i2printf@val+1
 26422  012164  6BA5               	clrf	(i2printf@val+2)& (0+255),b
 26423  012166  6BA6               	clrf	(i2printf@val+3)& (0+255),b
 26424                           
 26425                           ; BSR set to: 0
 26426  012168  0E02               	movlw	2
 26427  01216A  2799               	addwf	i2printf@ap& (0+255),f,b
 26428  01216C  0E00               	movlw	0
 26429  01216E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 26430  012170                     i2l1432:
 26431                           
 26432                           ; BSR set to: 0
 26433                           ;doprnt.c: 1287: }
 26434                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 26435                           
 26436                           ; BSR set to: 0
 26437  012170  51AB               	movf	i2printf@prec& (0+255),w,b
 26438  012172  11AC               	iorwf	(i2printf@prec+1)& (0+255),w,b
 26439  012174  A4D8               	btfss	status,2,c
 26440  012176  D04B               	goto	i2l1434
 26441                           
 26442                           ; BSR set to: 0
 26443  012178  51A3               	movf	i2printf@val& (0+255),w,b
 26444  01217A  11A4               	iorwf	(i2printf@val+1)& (0+255),w,b
 26445  01217C  11A5               	iorwf	(i2printf@val+2)& (0+255),w,b
 26446  01217E  11A6               	iorwf	(i2printf@val+3)& (0+255),w,b
 26447  012180  A4D8               	btfss	status,2,c
 26448  012182  D045               	goto	i2l1434
 26449                           
 26450                           ; BSR set to: 0
 26451                           ;doprnt.c: 1291: prec++;
 26452  012184  4BAB               	infsnz	i2printf@prec& (0+255),f,b
 26453  012186  2BAC               	incf	(i2printf@prec+1)& (0+255),f,b
 26454                           
 26455                           ; BSR set to: 0
 26456                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 26457  012188  D042               	goto	i2l1434
 26458  01218A                     
 26459                           ; BSR set to: 0
 26460                           ;doprnt.c: 1302: case 0xC0:
 26461                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 26462                           
 26463                           ; BSR set to: 0
 26464                           
 26465                           ; BSR set to: 0
 26466  01218A  0E01               	movlw	1
 26467  01218C  6FAD               	movwf	i2printf@c& (0+255),b
 26468  01218E                     i2l13938:
 26469                           
 26470                           ; BSR set to: 0
 26471  01218E  0E0A               	movlw	10
 26472  012190  19AD               	xorwf	i2printf@c& (0+255),w,b
 26473  012192  B4D8               	btfsc	status,2,c
 26474  012194  D047               	goto	i2l1440
 26475                           
 26476                           ; BSR set to: 0
 26477                           ;doprnt.c: 1306: if(val < dpowers[c])
 26478                           
 26479                           ; BSR set to: 0
 26480                           
 26481                           ; BSR set to: 0
 26482  012196  51AD               	movf	i2printf@c& (0+255),w,b
 26483  012198  0D04               	mullw	4
 26484  01219A  0E83               	movlw	low _dpowers
 26485  01219C  24F3               	addwf	prodl,w,c
 26486  01219E  6EF6               	movwf	tblptrl,c
 26487  0121A0  0EEA               	movlw	high _dpowers
 26488  0121A2  20F4               	addwfc	prodh,w,c
 26489  0121A4  6EF7               	movwf	tblptrh,c
 26490  0121A6                     	if	1	;There are 3 active tblptr bytes
 26491  0121A6  6AF8               	clrf	tblptru,c
 26492  0121A8  0E00               	movlw	low (__mediumconst shr (0+16))
 26493  0121AA  22F8               	addwfc	tblptru,f,c
 26494  0121AC                     	endif
 26495  0121AC  0009               	tblrd		*+
 26496  0121AE  50F5               	movf	tablat,w,c
 26497  0121B0  5DA3               	subwf	i2printf@val& (0+255),w,b
 26498  0121B2  0009               	tblrd		*+
 26499  0121B4  50F5               	movf	tablat,w,c
 26500  0121B6  59A4               	subwfb	(i2printf@val+1)& (0+255),w,b
 26501  0121B8  0009               	tblrd		*+
 26502  0121BA  50F5               	movf	tablat,w,c
 26503  0121BC  59A5               	subwfb	(i2printf@val+2)& (0+255),w,b
 26504  0121BE  0009               	tblrd		*+
 26505  0121C0  50F5               	movf	tablat,w,c
 26506  0121C2  59A6               	subwfb	(i2printf@val+3)& (0+255),w,b
 26507  0121C4  A0D8               	btfss	status,0,c
 26508  0121C6  D02E               	goto	i2l1440
 26509                           
 26510                           ; BSR set to: 0
 26511                           
 26512                           ; BSR set to: 0
 26513                           
 26514                           ; BSR set to: 0
 26515                           ;doprnt.c: 1307: break;
 26516  0121C8  2BAD               	incf	i2printf@c& (0+255),f,b
 26517  0121CA  D7E1               	goto	i2l13938
 26518  0121CC                     
 26519                           ; BSR set to: 0
 26520                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26521                           
 26522                           ; BSR set to: 0
 26523  0121CC  0E01               	movlw	1
 26524  0121CE  6FAD               	movwf	i2printf@c& (0+255),b
 26525  0121D0                     i2l13952:
 26526                           
 26527                           ; BSR set to: 0
 26528  0121D0  0E08               	movlw	8
 26529  0121D2  19AD               	xorwf	i2printf@c& (0+255),w,b
 26530  0121D4  B4D8               	btfsc	status,2,c
 26531  0121D6  D026               	goto	i2l1440
 26532                           
 26533                           ; BSR set to: 0
 26534                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26535                           
 26536                           ; BSR set to: 0
 26537                           
 26538                           ; BSR set to: 0
 26539  0121D8  51AD               	movf	i2printf@c& (0+255),w,b
 26540  0121DA  0D04               	mullw	4
 26541  0121DC  0EAB               	movlw	low _hexpowers
 26542  0121DE  24F3               	addwf	prodl,w,c
 26543  0121E0  6EF6               	movwf	tblptrl,c
 26544  0121E2  0EEA               	movlw	high _hexpowers
 26545  0121E4  20F4               	addwfc	prodh,w,c
 26546  0121E6  6EF7               	movwf	tblptrh,c
 26547  0121E8                     	if	1	;There are 3 active tblptr bytes
 26548  0121E8  6AF8               	clrf	tblptru,c
 26549  0121EA  0E00               	movlw	low (__mediumconst shr (0+16))
 26550  0121EC  22F8               	addwfc	tblptru,f,c
 26551  0121EE                     	endif
 26552  0121EE  0009               	tblrd		*+
 26553  0121F0  50F5               	movf	tablat,w,c
 26554  0121F2  5DA3               	subwf	i2printf@val& (0+255),w,b
 26555  0121F4  0009               	tblrd		*+
 26556  0121F6  50F5               	movf	tablat,w,c
 26557  0121F8  59A4               	subwfb	(i2printf@val+1)& (0+255),w,b
 26558  0121FA  0009               	tblrd		*+
 26559  0121FC  50F5               	movf	tablat,w,c
 26560  0121FE  59A5               	subwfb	(i2printf@val+2)& (0+255),w,b
 26561  012200  0009               	tblrd		*+
 26562  012202  50F5               	movf	tablat,w,c
 26563  012204  59A6               	subwfb	(i2printf@val+3)& (0+255),w,b
 26564  012206  A0D8               	btfss	status,0,c
 26565  012208  D00D               	goto	i2l1440
 26566                           
 26567                           ; BSR set to: 0
 26568                           
 26569                           ; BSR set to: 0
 26570                           
 26571                           ; BSR set to: 0
 26572                           ;doprnt.c: 1318: break;
 26573  01220A  2BAD               	incf	i2printf@c& (0+255),f,b
 26574  01220C  D7E1               	goto	i2l13952
 26575  01220E                     i2l1434:
 26576                           
 26577                           ; BSR set to: 0
 26578                           
 26579                           ; BSR set to: 0
 26580  01220E  519B               	movf	i2printf@flag& (0+255),w,b
 26581  012210  0BC0               	andlw	192
 26582                           
 26583                           ; Switch size 1, requested type "space"
 26584                           ; Number of cases is 3, Range of values is 0 to 192
 26585                           ; switch strategies available:
 26586                           ; Name         Instructions Cycles
 26587                           ; simple_byte           10     6 (average)
 26588                           ;	Chosen strategy is simple_byte
 26589  012212  0A00               	xorlw	0	; case 0
 26590  012214  B4D8               	btfsc	status,2,c
 26591  012216  D7B9               	goto	i2l1435
 26592  012218  0A80               	xorlw	128	; case 128
 26593  01221A  B4D8               	btfsc	status,2,c
 26594  01221C  D7D7               	goto	i2l1441
 26595  01221E  0A40               	xorlw	64	; case 192
 26596  012220  B4D8               	btfsc	status,2,c
 26597  012222  D7B3               	goto	i2l1435
 26598  012224                     i2l1440:
 26599                           
 26600                           ; BSR set to: 0
 26601                           ;doprnt.c: 1339: if(c < prec)
 26602                           
 26603                           ; BSR set to: 0
 26604  012224  0E80               	movlw	128
 26605  012226  BFAD               	btfsc	i2printf@c& (0+255),7,b
 26606  012228  0E7F               	movlw	127
 26607  01222A  6F8A               	movwf	??i2_printf& (0+255),b
 26608  01222C  51AB               	movf	i2printf@prec& (0+255),w,b
 26609  01222E  5DAD               	subwf	i2printf@c& (0+255),w,b
 26610  012230  51AC               	movf	(i2printf@prec+1)& (0+255),w,b
 26611  012232  0A80               	xorlw	128
 26612  012234  598A               	subwfb	??i2_printf& (0+255),w,b
 26613  012236  B0D8               	btfsc	status,0,c
 26614  012238  D003               	goto	i2l1445
 26615                           
 26616                           ; BSR set to: 0
 26617                           ;doprnt.c: 1340: c = prec;
 26618  01223A  C0AB  F0AD         	movff	i2printf@prec,i2printf@c
 26619  01223E  D010               	goto	i2l1447
 26620  012240                     i2l1445:
 26621                           
 26622                           ; BSR set to: 0
 26623                           ;doprnt.c: 1341: else if(prec < c)
 26624                           
 26625                           ; BSR set to: 0
 26626  012240  51AC               	movf	(i2printf@prec+1)& (0+255),w,b
 26627  012242  0A80               	xorlw	128
 26628  012244  6F8A               	movwf	??i2_printf& (0+255),b
 26629  012246  51AD               	movf	i2printf@c& (0+255),w,b
 26630  012248  5DAB               	subwf	i2printf@prec& (0+255),w,b
 26631  01224A  0E80               	movlw	128
 26632  01224C  BFAD               	btfsc	i2printf@c& (0+255),7,b
 26633  01224E  0E7F               	movlw	127
 26634  012250  598A               	subwfb	??i2_printf& (0+255),w,b
 26635  012252  B0D8               	btfsc	status,0,c
 26636  012254  D005               	goto	i2l1447
 26637                           
 26638                           ; BSR set to: 0
 26639                           ;doprnt.c: 1342: prec = c;
 26640  012256  51AD               	movf	i2printf@c& (0+255),w,b
 26641  012258  6FAB               	movwf	i2printf@prec& (0+255),b
 26642  01225A  6BAC               	clrf	(i2printf@prec+1)& (0+255),b
 26643  01225C  BFAB               	btfsc	i2printf@prec& (0+255),7,b
 26644  01225E  07AC               	decf	(i2printf@prec+1)& (0+255),f,b
 26645  012260                     i2l1447:
 26646                           
 26647                           ; BSR set to: 0
 26648                           ;doprnt.c: 1422: {
 26649                           ;doprnt.c: 1438: if(flag & 0x03)
 26650                           
 26651                           ; BSR set to: 0
 26652                           
 26653                           ; BSR set to: 0
 26654  012260  0E03               	movlw	3
 26655  012262  159B               	andwf	i2printf@flag& (0+255),w,b
 26656  012264  6F8A               	movwf	??i2_printf& (0+255),b
 26657  012266  0E00               	movlw	0
 26658  012268  159C               	andwf	(i2printf@flag+1)& (0+255),w,b
 26659  01226A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26660  01226C  518A               	movf	??i2_printf& (0+255),w,b
 26661  01226E  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 26662  012270  B4D8               	btfsc	status,2,c
 26663  012272  D090               	goto	i2l1449
 26664                           
 26665                           ; BSR set to: 0
 26666                           ;doprnt.c: 1439: (putch('-') );
 26667  012274  0E2D               	movlw	45
 26668  012276  ECD5  F0C1         	call	i2_putch
 26669                           
 26670                           ;doprnt.c: 1469: }
 26671                           ;doprnt.c: 1474: while(prec--) {
 26672  01227A  D08C               	goto	i2l1449
 26673  01227C                     
 26674                           ;doprnt.c: 1486: case 0xC0:
 26675                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26676  01227C  C0AB  F08A         	movff	i2printf@prec,??i2_printf
 26677  012280  C0AC  F08B         	movff	i2printf@prec+1,??i2_printf+1
 26678  012284  0100               	movlb	0	; () banked
 26679  012286  90D8               	bcf	status,0,c
 26680  012288  378A               	rlcf	??i2_printf& (0+255),f,b
 26681  01228A  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 26682  01228C  90D8               	bcf	status,0,c
 26683  01228E  378A               	rlcf	??i2_printf& (0+255),f,b
 26684  012290  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 26685  012292  0E83               	movlw	low _dpowers
 26686  012294  258A               	addwf	??i2_printf& (0+255),w,b
 26687  012296  6EF6               	movwf	tblptrl,c
 26688  012298  0EEA               	movlw	high _dpowers
 26689  01229A  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 26690  01229C  6EF7               	movwf	tblptrh,c
 26691  01229E                     	if	1	;There are 3 active tblptr bytes
 26692  01229E  6AF8               	clrf	tblptru,c
 26693  0122A0  0E00               	movlw	low (__mediumconst shr (0+16))
 26694  0122A2  22F8               	addwfc	tblptru,f,c
 26695  0122A4                     	endif
 26696  0122A4  0009               	tblrd		*+
 26697  0122A6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26698  0122AA  0009               	tblrd		*+
 26699  0122AC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26700  0122B0  0009               	tblrd		*+
 26701  0122B2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26702  0122B6  000A               	tblrd		*-
 26703  0122B8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26704  0122BC  C0A3  F001         	movff	i2printf@val,i2___lldiv@dividend
 26705  0122C0  C0A4  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26706  0122C4  C0A5  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26707  0122C8  C0A6  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26708  0122CC  EC6B  F0BA         	call	i2___lldiv	;wreg free
 26709  0122D0  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 26710  0122D4  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 26711  0122D8  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 26712  0122DC  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 26713  0122E0  0E0A               	movlw	10
 26714  0122E2  6E12               	movwf	i2___llmod@divisor,c
 26715  0122E4  0E00               	movlw	0
 26716  0122E6  6E13               	movwf	i2___llmod@divisor+1,c
 26717  0122E8  0E00               	movlw	0
 26718  0122EA  6E14               	movwf	i2___llmod@divisor+2,c
 26719  0122EC  0E00               	movlw	0
 26720  0122EE  6E15               	movwf	i2___llmod@divisor+3,c
 26721  0122F0  EC6C  F0BC         	call	i2___llmod	;wreg free
 26722  0122F4  500E               	movf	?i2___llmod,w,c
 26723  0122F6  0F30               	addlw	48
 26724  0122F8  0100               	movlb	0	; () banked
 26725  0122FA  6FAD               	movwf	i2printf@c& (0+255),b
 26726                           
 26727                           ;doprnt.c: 1491: break;
 26728  0122FC  D048               	goto	i2l1454
 26729  0122FE                     
 26730                           ; BSR set to: 0
 26731                           ;doprnt.c: 1499: {
 26732                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26733                           
 26734                           ; BSR set to: 0
 26735  0122FE  C0A3  F001         	movff	i2printf@val,i2___lldiv@dividend
 26736  012302  C0A4  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 26737  012306  C0A5  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 26738  01230A  C0A6  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 26739  01230E  C0AB  F08A         	movff	i2printf@prec,??i2_printf
 26740  012312  C0AC  F08B         	movff	i2printf@prec+1,??i2_printf+1
 26741  012316  90D8               	bcf	status,0,c
 26742  012318  378A               	rlcf	??i2_printf& (0+255),f,b
 26743  01231A  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 26744  01231C  90D8               	bcf	status,0,c
 26745  01231E  378A               	rlcf	??i2_printf& (0+255),f,b
 26746  012320  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 26747  012322  0EAB               	movlw	low _hexpowers
 26748  012324  258A               	addwf	??i2_printf& (0+255),w,b
 26749  012326  6EF6               	movwf	tblptrl,c
 26750  012328  0EEA               	movlw	high _hexpowers
 26751  01232A  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 26752  01232C  6EF7               	movwf	tblptrh,c
 26753  01232E                     	if	1	;There are 3 active tblptr bytes
 26754  01232E  6AF8               	clrf	tblptru,c
 26755  012330  0E00               	movlw	low (__mediumconst shr (0+16))
 26756  012332  22F8               	addwfc	tblptru,f,c
 26757  012334                     	endif
 26758  012334  0009               	tblrd		*+
 26759  012336  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 26760  01233A  0009               	tblrd		*+
 26761  01233C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 26762  012340  0009               	tblrd		*+
 26763  012342  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 26764  012346  000A               	tblrd		*-
 26765  012348  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 26766  01234C  EC6B  F0BA         	call	i2___lldiv	;wreg free
 26767  012350  5001               	movf	?i2___lldiv,w,c
 26768  012352  0B0F               	andlw	15
 26769  012354  0100               	movlb	0	; () banked
 26770  012356  6F94               	movwf	i2printf@idx& (0+255),b
 26771                           
 26772                           ; BSR set to: 0
 26773                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26774  012358  5194               	movf	i2printf@idx& (0+255),w,b
 26775  01235A  0D01               	mullw	1
 26776  01235C  0ECC               	movlw	low STR_141
 26777  01235E  24F3               	addwf	prodl,w,c
 26778  012360  6EF6               	movwf	tblptrl,c
 26779  012362  0EFD               	movlw	high STR_141
 26780  012364  20F4               	addwfc	prodh,w,c
 26781  012366  6EF7               	movwf	tblptrh,c
 26782  012368                     	if	1	;There are 3 active tblptr bytes
 26783  012368  6AF8               	clrf	tblptru,c
 26784  01236A  0E00               	movlw	low (__mediumconst shr (0+16))
 26785  01236C  22F8               	addwfc	tblptru,f,c
 26786  01236E                     	endif
 26787  01236E  0008               	tblrd		*
 26788  012370  CFF5 F0AD          	movff	tablat,i2printf@c
 26789                           
 26790                           ; BSR set to: 0
 26791                           ;doprnt.c: 1523: }
 26792                           
 26793                           ;doprnt.c: 1508: }
 26794                           ;doprnt.c: 1510: break;
 26795  012374  D00C               	goto	i2l1454
 26796  012376                     i2l13988:
 26797  012376  0100               	movlb	0	; () banked
 26798  012378  519B               	movf	i2printf@flag& (0+255),w,b
 26799  01237A  0BC0               	andlw	192
 26800                           
 26801                           ; Switch size 1, requested type "space"
 26802                           ; Number of cases is 3, Range of values is 0 to 192
 26803                           ; switch strategies available:
 26804                           ; Name         Instructions Cycles
 26805                           ; simple_byte           10     6 (average)
 26806                           ;	Chosen strategy is simple_byte
 26807  01237C  0A00               	xorlw	0	; case 0
 26808  01237E  B4D8               	btfsc	status,2,c
 26809  012380  D77D               	goto	i2l1452
 26810  012382  0A80               	xorlw	128	; case 128
 26811  012384  B4D8               	btfsc	status,2,c
 26812  012386  D7BB               	goto	i2l1455
 26813  012388  0A40               	xorlw	64	; case 192
 26814  01238A  B4D8               	btfsc	status,2,c
 26815  01238C  D777               	goto	i2l1452
 26816  01238E                     i2l1454:
 26817                           
 26818                           ; BSR set to: 0
 26819                           ;doprnt.c: 1524: (putch(c) );
 26820                           
 26821                           ; BSR set to: 0
 26822  01238E  51AD               	movf	i2printf@c& (0+255),w,b
 26823  012390  ECD5  F0C1         	call	i2_putch
 26824  012394                     i2l1449:
 26825  012394  0100               	movlb	0	; () banked
 26826  012396  07AB               	decf	i2printf@prec& (0+255),f,b
 26827  012398  A0D8               	btfss	status,0,c
 26828  01239A  07AC               	decf	(i2printf@prec+1)& (0+255),f,b
 26829  01239C  29AB               	incf	i2printf@prec& (0+255),w,b
 26830  01239E  E1EB               	bnz	i2l13988
 26831  0123A0  29AC               	incf	(i2printf@prec+1)& (0+255),w,b
 26832  0123A2  A4D8               	btfss	status,2,c
 26833  0123A4  D7E8               	goto	i2l1451
 26834  0123A6                     i2u1703_40:
 26835                           
 26836                           ; BSR set to: 0
 26837                           
 26838                           ; BSR set to: 0
 26839  0123A6  0100               	movlb	0	; () banked
 26840  0123A8  5188               	movf	i2printf@f& (0+255),w,b
 26841  0123AA  6F8A               	movwf	??i2_printf& (0+255),b
 26842  0123AC  5189               	movf	(i2printf@f+1)& (0+255),w,b
 26843  0123AE  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 26844  0123B0  4B88               	infsnz	i2printf@f& (0+255),f,b
 26845  0123B2  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 26846  0123B4  C08A  FFF6         	movff	??i2_printf,tblptrl
 26847  0123B8  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 26848  0123BC  0E00               	movlw	low (__mediumconst shr (0+16))
 26849  0123BE  6EF8               	movwf	tblptru,c
 26850  0123C0  0E0D               	movlw	(high __ramtop+-1)
 26851  0123C2  64F7               	cpfsgt	tblptrh,c
 26852  0123C4  D003               	bra	i2u1704_47
 26853  0123C6  0008               	tblrd		*
 26854  0123C8  50F5               	movf	tablat,w,c
 26855  0123CA  D005               	bra	i2u1704_40
 26856  0123CC                     i2u1704_47:
 26857  0123CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 26858  0123D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 26859  0123D4  50EF               	movf	indf0,w,c
 26860  0123D6                     i2u1704_40:
 26861  0123D6  0100               	movlb	0	; () banked
 26862  0123D8  6FAD               	movwf	i2printf@c& (0+255),b
 26863  0123DA  51AD               	movf	i2printf@c& (0+255),w,b
 26864  0123DC  B4D8               	btfsc	status,2,c
 26865  0123DE  0012               	return	
 26866  0123E0  EF6A  F08C         	goto	i2l1363
 26867  0123E4                     __end_ofi2_printf:
 26868                           	opt stack 0
 26869                           tosu	equ	0xFFF
 26870                           tosh	equ	0xFFE
 26871                           tosl	equ	0xFFD
 26872                           pclatu	equ	0xFFB
 26873                           pclath	equ	0xFFA
 26874                           tblptru	equ	0xFF8
 26875                           tblptrh	equ	0xFF7
 26876                           tblptrl	equ	0xFF6
 26877                           tablat	equ	0xFF5
 26878                           prodh	equ	0xFF4
 26879                           prodl	equ	0xFF3
 26880                           intcon	equ	0xFF2
 26881                           indf0	equ	0xFEF
 26882                           postinc0	equ	0xFEE
 26883                           fsr0h	equ	0xFEA
 26884                           fsr0l	equ	0xFE9
 26885                           wreg	equ	0xFE8
 26886                           indf1	equ	0xFE7
 26887                           postdec1	equ	0xFE5
 26888                           plusw1	equ	0xFE3
 26889                           fsr1h	equ	0xFE2
 26890                           fsr1l	equ	0xFE1
 26891                           bsr	equ	0xFE0
 26892                           indf2	equ	0xFDF
 26893                           postinc2	equ	0xFDE
 26894                           postdec2	equ	0xFDD
 26895                           plusw2	equ	0xFDB
 26896                           fsr2h	equ	0xFDA
 26897                           fsr2l	equ	0xFD9
 26898                           status	equ	0xFD8
 26899                           
 26900 ;; *************** function i2_scale *****************
 26901 ;; Defined at:
 26902 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26903 ;; Parameters:    Size  Location     Type
 26904 ;;  scl             1    wreg     char 
 26905 ;; Auto vars:     Size  Location     Type
 26906 ;;  scl             1   80[COMRAM] char 
 26907 ;; Return value:  Size  Location     Type
 26908 ;;                  4   72[COMRAM] char 
 26909 ;; Registers used:
 26910 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26911 ;; Tracked objects:
 26912 ;;		On entry : 0/0
 26913 ;;		On exit  : 0/0
 26914 ;;		Unchanged: 0/0
 26915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26917 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26919 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26920 ;;Total ram usage:        9 bytes
 26921 ;; Hardware stack levels used:    1
 26922 ;; Hardware stack levels required when called:    1
 26923 ;; This function calls:
 26924 ;;		i2___awdiv
 26925 ;;		i2___awmod
 26926 ;;		i2___flmul
 26927 ;; This function is called by:
 26928 ;;		i2_printf
 26929 ;; This function uses a non-reentrant model
 26930 ;;
 26931                           
 26932                           	psect	text86
 26933  013268                     __ptext86:
 26934                           	opt stack 0
 26935  013268                     i2_scale:
 26936                           	opt stack 15
 26937                           
 26938                           ; BSR set to: 0
 26939                           ;incstack = 0
 26940                           ;i2scale@scl stored from wreg
 26941  013268  6E51               	movwf	i2scale@scl,c
 26942                           
 26943                           ;doprnt.c: 428: if(scl < 0) {
 26944  01326A  AE51               	btfss	i2scale@scl,7,c
 26945  01326C  D11F               	goto	i2l1352
 26946                           
 26947                           ;doprnt.c: 429: scl = -scl;
 26948  01326E  6C51               	negf	i2scale@scl,c
 26949                           
 26950                           ;doprnt.c: 430: if(scl>=110)
 26951  013270  5051               	movf	i2scale@scl,w,c
 26952  013272  0A80               	xorlw	128
 26953  013274  0F12               	addlw	-238
 26954  013276  A0D8               	btfss	status,0,c
 26955  013278  D0A1               	goto	i2l1353
 26956                           
 26957                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26958  01327A  0E00               	movlw	0
 26959  01327C  6E0A               	movwf	i2___awdiv@divisor+1,c
 26960  01327E  0E0A               	movlw	10
 26961  013280  6E09               	movwf	i2___awdiv@divisor,c
 26962  013282  0E00               	movlw	0
 26963  013284  6E04               	movwf	i2___awmod@divisor+1,c
 26964  013286  0E64               	movlw	100
 26965  013288  6E03               	movwf	i2___awmod@divisor,c
 26966  01328A  5051               	movf	i2scale@scl,w,c
 26967  01328C  6E01               	movwf	i2___awmod@dividend,c
 26968  01328E  6A02               	clrf	i2___awmod@dividend+1,c
 26969  013290  BE01               	btfsc	i2___awmod@dividend,7,c
 26970  013292  0602               	decf	i2___awmod@dividend+1,f,c
 26971  013294  EC60  F0BB         	call	i2___awmod	;wreg free
 26972  013298  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26973  01329C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26974  0132A0  EC29  F0BA         	call	i2___awdiv	;wreg free
 26975  0132A4  90D8               	bcf	status,0,c
 26976  0132A6  3607               	rlcf	?i2___awdiv,f,c
 26977  0132A8  3608               	rlcf	?i2___awdiv+1,f,c
 26978  0132AA  90D8               	bcf	status,0,c
 26979  0132AC  3607               	rlcf	?i2___awdiv,f,c
 26980  0132AE  3608               	rlcf	?i2___awdiv+1,f,c
 26981  0132B0  0E24               	movlw	36
 26982  0132B2  2607               	addwf	?i2___awdiv,f,c
 26983  0132B4  0E00               	movlw	0
 26984  0132B6  2208               	addwfc	?i2___awdiv+1,f,c
 26985  0132B8  0E4F               	movlw	low __npowers_
 26986  0132BA  2407               	addwf	?i2___awdiv,w,c
 26987  0132BC  6EF6               	movwf	tblptrl,c
 26988  0132BE  0EEA               	movlw	high __npowers_
 26989  0132C0  2008               	addwfc	?i2___awdiv+1,w,c
 26990  0132C2  6EF7               	movwf	tblptrh,c
 26991  0132C4                     	if	1	;There are 3 active tblptr bytes
 26992  0132C4  6AF8               	clrf	tblptru,c
 26993  0132C6  0E00               	movlw	low (__mediumconst shr (0+16))
 26994  0132C8  22F8               	addwfc	tblptru,f,c
 26995  0132CA                     	endif
 26996  0132CA  0009               	tblrd		*+
 26997  0132CC  CFF5 F034          	movff	tablat,i2___flmul@a
 26998  0132D0  0009               	tblrd		*+
 26999  0132D2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27000  0132D6  0009               	tblrd		*+
 27001  0132D8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27002  0132DC  000A               	tblrd		*-
 27003  0132DE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27004  0132E2  0E00               	movlw	0
 27005  0132E4  6E0A               	movwf	i2___awdiv@divisor+1,c
 27006  0132E6  0E64               	movlw	100
 27007  0132E8  6E09               	movwf	i2___awdiv@divisor,c
 27008  0132EA  5051               	movf	i2scale@scl,w,c
 27009  0132EC  6E07               	movwf	i2___awdiv@dividend,c
 27010  0132EE  6A08               	clrf	i2___awdiv@dividend+1,c
 27011  0132F0  BE07               	btfsc	i2___awdiv@dividend,7,c
 27012  0132F2  0608               	decf	i2___awdiv@dividend+1,f,c
 27013  0132F4  EC29  F0BA         	call	i2___awdiv	;wreg free
 27014  0132F8  90D8               	bcf	status,0,c
 27015  0132FA  3607               	rlcf	?i2___awdiv,f,c
 27016  0132FC  3608               	rlcf	?i2___awdiv+1,f,c
 27017  0132FE  90D8               	bcf	status,0,c
 27018  013300  3607               	rlcf	?i2___awdiv,f,c
 27019  013302  3608               	rlcf	?i2___awdiv+1,f,c
 27020  013304  0E48               	movlw	72
 27021  013306  2607               	addwf	?i2___awdiv,f,c
 27022  013308  0E00               	movlw	0
 27023  01330A  2208               	addwfc	?i2___awdiv+1,f,c
 27024  01330C  0E4F               	movlw	low __npowers_
 27025  01330E  2407               	addwf	?i2___awdiv,w,c
 27026  013310  6EF6               	movwf	tblptrl,c
 27027  013312  0EEA               	movlw	high __npowers_
 27028  013314  2008               	addwfc	?i2___awdiv+1,w,c
 27029  013316  6EF7               	movwf	tblptrh,c
 27030  013318                     	if	1	;There are 3 active tblptr bytes
 27031  013318  6AF8               	clrf	tblptru,c
 27032  01331A  0E00               	movlw	low (__mediumconst shr (0+16))
 27033  01331C  22F8               	addwfc	tblptru,f,c
 27034  01331E                     	endif
 27035  01331E  0009               	tblrd		*+
 27036  013320  CFF5 F030          	movff	tablat,i2___flmul@b
 27037  013324  0009               	tblrd		*+
 27038  013326  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27039  01332A  0009               	tblrd		*+
 27040  01332C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27041  013330  000A               	tblrd		*-
 27042  013332  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27043  013336  ECD1  F09E         	call	i2___flmul	;wreg free
 27044  01333A  C030  F04D         	movff	?i2___flmul,i2_scale$4100
 27045  01333E  C031  F04E         	movff	?i2___flmul+1,i2_scale$4100+1
 27046  013342  C032  F04F         	movff	?i2___flmul+2,i2_scale$4100+2
 27047  013346  C033  F050         	movff	?i2___flmul+3,i2_scale$4100+3
 27048                           
 27049                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27050  01334A  C04D  F030         	movff	i2_scale$4100,i2___flmul@b
 27051  01334E  C04E  F031         	movff	i2_scale$4100+1,i2___flmul@b+1
 27052  013352  C04F  F032         	movff	i2_scale$4100+2,i2___flmul@b+2
 27053  013356  C050  F033         	movff	i2_scale$4100+3,i2___flmul@b+3
 27054  01335A  0E00               	movlw	0
 27055  01335C  6E04               	movwf	i2___awmod@divisor+1,c
 27056  01335E  0E0A               	movlw	10
 27057  013360  6E03               	movwf	i2___awmod@divisor,c
 27058  013362  5051               	movf	i2scale@scl,w,c
 27059  013364  6E01               	movwf	i2___awmod@dividend,c
 27060  013366  6A02               	clrf	i2___awmod@dividend+1,c
 27061  013368  BE01               	btfsc	i2___awmod@dividend,7,c
 27062  01336A  0602               	decf	i2___awmod@dividend+1,f,c
 27063  01336C  EC60  F0BB         	call	i2___awmod	;wreg free
 27064  013370  90D8               	bcf	status,0,c
 27065  013372  3601               	rlcf	?i2___awmod,f,c
 27066  013374  3602               	rlcf	?i2___awmod+1,f,c
 27067  013376  90D8               	bcf	status,0,c
 27068  013378  3601               	rlcf	?i2___awmod,f,c
 27069  01337A  3602               	rlcf	?i2___awmod+1,f,c
 27070  01337C  0E4F               	movlw	low __npowers_
 27071  01337E  2401               	addwf	?i2___awmod,w,c
 27072  013380  6EF6               	movwf	tblptrl,c
 27073  013382  0EEA               	movlw	high __npowers_
 27074  013384  2002               	addwfc	?i2___awmod+1,w,c
 27075  013386  6EF7               	movwf	tblptrh,c
 27076  013388                     	if	1	;There are 3 active tblptr bytes
 27077  013388  6AF8               	clrf	tblptru,c
 27078  01338A  0E00               	movlw	low (__mediumconst shr (0+16))
 27079  01338C  22F8               	addwfc	tblptru,f,c
 27080  01338E                     	endif
 27081  01338E  0009               	tblrd		*+
 27082  013390  CFF5 F034          	movff	tablat,i2___flmul@a
 27083  013394  0009               	tblrd		*+
 27084  013396  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27085  01339A  0009               	tblrd		*+
 27086  01339C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27087  0133A0  000A               	tblrd		*-
 27088  0133A2  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27089  0133A6  ECD1  F09E         	call	i2___flmul	;wreg free
 27090  0133AA  C030  F049         	movff	?i2___flmul,?i2_scale
 27091  0133AE  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 27092  0133B2  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 27093  0133B6  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 27094  0133BA  0012               	return	
 27095  0133BC                     i2l1353:
 27096                           
 27097                           ;doprnt.c: 432: else if(scl > 10)
 27098  0133BC  5051               	movf	i2scale@scl,w,c
 27099  0133BE  0A80               	xorlw	128
 27100  0133C0  0F75               	addlw	-139
 27101  0133C2  A0D8               	btfss	status,0,c
 27102  0133C4  D05B               	goto	i2l1356
 27103                           
 27104                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27105  0133C6  0E00               	movlw	0
 27106  0133C8  6E0A               	movwf	i2___awdiv@divisor+1,c
 27107  0133CA  0E0A               	movlw	10
 27108  0133CC  6E09               	movwf	i2___awdiv@divisor,c
 27109  0133CE  5051               	movf	i2scale@scl,w,c
 27110  0133D0  6E07               	movwf	i2___awdiv@dividend,c
 27111  0133D2  6A08               	clrf	i2___awdiv@dividend+1,c
 27112  0133D4  BE07               	btfsc	i2___awdiv@dividend,7,c
 27113  0133D6  0608               	decf	i2___awdiv@dividend+1,f,c
 27114  0133D8  EC29  F0BA         	call	i2___awdiv	;wreg free
 27115  0133DC  90D8               	bcf	status,0,c
 27116  0133DE  3607               	rlcf	?i2___awdiv,f,c
 27117  0133E0  3608               	rlcf	?i2___awdiv+1,f,c
 27118  0133E2  90D8               	bcf	status,0,c
 27119  0133E4  3607               	rlcf	?i2___awdiv,f,c
 27120  0133E6  3608               	rlcf	?i2___awdiv+1,f,c
 27121  0133E8  0E24               	movlw	36
 27122  0133EA  2607               	addwf	?i2___awdiv,f,c
 27123  0133EC  0E00               	movlw	0
 27124  0133EE  2208               	addwfc	?i2___awdiv+1,f,c
 27125  0133F0  0E4F               	movlw	low __npowers_
 27126  0133F2  2407               	addwf	?i2___awdiv,w,c
 27127  0133F4  6EF6               	movwf	tblptrl,c
 27128  0133F6  0EEA               	movlw	high __npowers_
 27129  0133F8  2008               	addwfc	?i2___awdiv+1,w,c
 27130  0133FA  6EF7               	movwf	tblptrh,c
 27131  0133FC                     	if	1	;There are 3 active tblptr bytes
 27132  0133FC  6AF8               	clrf	tblptru,c
 27133  0133FE  0E00               	movlw	low (__mediumconst shr (0+16))
 27134  013400  22F8               	addwfc	tblptru,f,c
 27135  013402                     	endif
 27136  013402  0009               	tblrd		*+
 27137  013404  CFF5 F030          	movff	tablat,i2___flmul@b
 27138  013408  0009               	tblrd		*+
 27139  01340A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27140  01340E  0009               	tblrd		*+
 27141  013410  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27142  013414  000A               	tblrd		*-
 27143  013416  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27144  01341A  0E00               	movlw	0
 27145  01341C  6E04               	movwf	i2___awmod@divisor+1,c
 27146  01341E  0E0A               	movlw	10
 27147  013420  6E03               	movwf	i2___awmod@divisor,c
 27148  013422  5051               	movf	i2scale@scl,w,c
 27149  013424  6E01               	movwf	i2___awmod@dividend,c
 27150  013426  6A02               	clrf	i2___awmod@dividend+1,c
 27151  013428  BE01               	btfsc	i2___awmod@dividend,7,c
 27152  01342A  0602               	decf	i2___awmod@dividend+1,f,c
 27153  01342C  EC60  F0BB         	call	i2___awmod	;wreg free
 27154  013430  90D8               	bcf	status,0,c
 27155  013432  3601               	rlcf	?i2___awmod,f,c
 27156  013434  3602               	rlcf	?i2___awmod+1,f,c
 27157  013436  90D8               	bcf	status,0,c
 27158  013438  3601               	rlcf	?i2___awmod,f,c
 27159  01343A  3602               	rlcf	?i2___awmod+1,f,c
 27160  01343C  0E4F               	movlw	low __npowers_
 27161  01343E  2401               	addwf	?i2___awmod,w,c
 27162  013440  6EF6               	movwf	tblptrl,c
 27163  013442  0EEA               	movlw	high __npowers_
 27164  013444  2002               	addwfc	?i2___awmod+1,w,c
 27165  013446  6EF7               	movwf	tblptrh,c
 27166  013448                     	if	1	;There are 3 active tblptr bytes
 27167  013448  6AF8               	clrf	tblptru,c
 27168  01344A  0E00               	movlw	low (__mediumconst shr (0+16))
 27169  01344C  22F8               	addwfc	tblptru,f,c
 27170  01344E                     	endif
 27171  01344E  0009               	tblrd		*+
 27172  013450  CFF5 F034          	movff	tablat,i2___flmul@a
 27173  013454  0009               	tblrd		*+
 27174  013456  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27175  01345A  0009               	tblrd		*+
 27176  01345C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27177  013460  000A               	tblrd		*-
 27178  013462  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27179  013466  ECD1  F09E         	call	i2___flmul	;wreg free
 27180  01346A  C030  F049         	movff	?i2___flmul,?i2_scale
 27181  01346E  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 27182  013472  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 27183  013476  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 27184  01347A  0012               	return	
 27185  01347C                     i2l1356:
 27186                           
 27187                           ;doprnt.c: 434: return _npowers_[scl];
 27188  01347C  5051               	movf	i2scale@scl,w,c
 27189  01347E  0D04               	mullw	4
 27190  013480  0E4F               	movlw	low __npowers_
 27191  013482  24F3               	addwf	prodl,w,c
 27192  013484  6EF6               	movwf	tblptrl,c
 27193  013486  0EEA               	movlw	high __npowers_
 27194  013488  20F4               	addwfc	prodh,w,c
 27195  01348A  6EF7               	movwf	tblptrh,c
 27196  01348C                     	if	1	;There are 3 active tblptr bytes
 27197  01348C  6AF8               	clrf	tblptru,c
 27198  01348E  0E00               	movlw	low (__mediumconst shr (0+16))
 27199  013490  22F8               	addwfc	tblptru,f,c
 27200  013492                     	endif
 27201  013492  0009               	tblrd		*+
 27202  013494  CFF5 F049          	movff	tablat,?i2_scale
 27203  013498  0009               	tblrd		*+
 27204  01349A  CFF5 F04A          	movff	tablat,?i2_scale+1
 27205  01349E  0009               	tblrd		*+
 27206  0134A0  CFF5 F04B          	movff	tablat,?i2_scale+2
 27207  0134A4  000A               	tblrd		*-
 27208  0134A6  CFF5 F04C          	movff	tablat,?i2_scale+3
 27209  0134AA  0012               	return	
 27210  0134AC                     i2l1352:
 27211                           
 27212                           ;doprnt.c: 435: }
 27213                           ;doprnt.c: 436: if(scl>=110)
 27214  0134AC  5051               	movf	i2scale@scl,w,c
 27215  0134AE  0A80               	xorlw	128
 27216  0134B0  0F12               	addlw	-238
 27217  0134B2  A0D8               	btfss	status,0,c
 27218  0134B4  D0A1               	goto	i2l1357
 27219                           
 27220                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27221  0134B6  0E00               	movlw	0
 27222  0134B8  6E0A               	movwf	i2___awdiv@divisor+1,c
 27223  0134BA  0E0A               	movlw	10
 27224  0134BC  6E09               	movwf	i2___awdiv@divisor,c
 27225  0134BE  0E00               	movlw	0
 27226  0134C0  6E04               	movwf	i2___awmod@divisor+1,c
 27227  0134C2  0E64               	movlw	100
 27228  0134C4  6E03               	movwf	i2___awmod@divisor,c
 27229  0134C6  5051               	movf	i2scale@scl,w,c
 27230  0134C8  6E01               	movwf	i2___awmod@dividend,c
 27231  0134CA  6A02               	clrf	i2___awmod@dividend+1,c
 27232  0134CC  BE01               	btfsc	i2___awmod@dividend,7,c
 27233  0134CE  0602               	decf	i2___awmod@dividend+1,f,c
 27234  0134D0  EC60  F0BB         	call	i2___awmod	;wreg free
 27235  0134D4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 27236  0134D8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 27237  0134DC  EC29  F0BA         	call	i2___awdiv	;wreg free
 27238  0134E0  90D8               	bcf	status,0,c
 27239  0134E2  3607               	rlcf	?i2___awdiv,f,c
 27240  0134E4  3608               	rlcf	?i2___awdiv+1,f,c
 27241  0134E6  90D8               	bcf	status,0,c
 27242  0134E8  3607               	rlcf	?i2___awdiv,f,c
 27243  0134EA  3608               	rlcf	?i2___awdiv+1,f,c
 27244  0134EC  0E24               	movlw	36
 27245  0134EE  2607               	addwf	?i2___awdiv,f,c
 27246  0134F0  0E00               	movlw	0
 27247  0134F2  2208               	addwfc	?i2___awdiv+1,f,c
 27248  0134F4  0E1B               	movlw	low __powers_
 27249  0134F6  2407               	addwf	?i2___awdiv,w,c
 27250  0134F8  6EF6               	movwf	tblptrl,c
 27251  0134FA  0EEA               	movlw	high __powers_
 27252  0134FC  2008               	addwfc	?i2___awdiv+1,w,c
 27253  0134FE  6EF7               	movwf	tblptrh,c
 27254  013500                     	if	1	;There are 3 active tblptr bytes
 27255  013500  6AF8               	clrf	tblptru,c
 27256  013502  0E00               	movlw	low (__mediumconst shr (0+16))
 27257  013504  22F8               	addwfc	tblptru,f,c
 27258  013506                     	endif
 27259  013506  0009               	tblrd		*+
 27260  013508  CFF5 F034          	movff	tablat,i2___flmul@a
 27261  01350C  0009               	tblrd		*+
 27262  01350E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27263  013512  0009               	tblrd		*+
 27264  013514  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27265  013518  000A               	tblrd		*-
 27266  01351A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27267  01351E  0E00               	movlw	0
 27268  013520  6E0A               	movwf	i2___awdiv@divisor+1,c
 27269  013522  0E64               	movlw	100
 27270  013524  6E09               	movwf	i2___awdiv@divisor,c
 27271  013526  5051               	movf	i2scale@scl,w,c
 27272  013528  6E07               	movwf	i2___awdiv@dividend,c
 27273  01352A  6A08               	clrf	i2___awdiv@dividend+1,c
 27274  01352C  BE07               	btfsc	i2___awdiv@dividend,7,c
 27275  01352E  0608               	decf	i2___awdiv@dividend+1,f,c
 27276  013530  EC29  F0BA         	call	i2___awdiv	;wreg free
 27277  013534  90D8               	bcf	status,0,c
 27278  013536  3607               	rlcf	?i2___awdiv,f,c
 27279  013538  3608               	rlcf	?i2___awdiv+1,f,c
 27280  01353A  90D8               	bcf	status,0,c
 27281  01353C  3607               	rlcf	?i2___awdiv,f,c
 27282  01353E  3608               	rlcf	?i2___awdiv+1,f,c
 27283  013540  0E48               	movlw	72
 27284  013542  2607               	addwf	?i2___awdiv,f,c
 27285  013544  0E00               	movlw	0
 27286  013546  2208               	addwfc	?i2___awdiv+1,f,c
 27287  013548  0E1B               	movlw	low __powers_
 27288  01354A  2407               	addwf	?i2___awdiv,w,c
 27289  01354C  6EF6               	movwf	tblptrl,c
 27290  01354E  0EEA               	movlw	high __powers_
 27291  013550  2008               	addwfc	?i2___awdiv+1,w,c
 27292  013552  6EF7               	movwf	tblptrh,c
 27293  013554                     	if	1	;There are 3 active tblptr bytes
 27294  013554  6AF8               	clrf	tblptru,c
 27295  013556  0E00               	movlw	low (__mediumconst shr (0+16))
 27296  013558  22F8               	addwfc	tblptru,f,c
 27297  01355A                     	endif
 27298  01355A  0009               	tblrd		*+
 27299  01355C  CFF5 F030          	movff	tablat,i2___flmul@b
 27300  013560  0009               	tblrd		*+
 27301  013562  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27302  013566  0009               	tblrd		*+
 27303  013568  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27304  01356C  000A               	tblrd		*-
 27305  01356E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27306  013572  ECD1  F09E         	call	i2___flmul	;wreg free
 27307  013576  C030  F04D         	movff	?i2___flmul,i2_scale$4100
 27308  01357A  C031  F04E         	movff	?i2___flmul+1,i2_scale$4100+1
 27309  01357E  C032  F04F         	movff	?i2___flmul+2,i2_scale$4100+2
 27310  013582  C033  F050         	movff	?i2___flmul+3,i2_scale$4100+3
 27311                           
 27312                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27313  013586  C04D  F030         	movff	i2_scale$4100,i2___flmul@b
 27314  01358A  C04E  F031         	movff	i2_scale$4100+1,i2___flmul@b+1
 27315  01358E  C04F  F032         	movff	i2_scale$4100+2,i2___flmul@b+2
 27316  013592  C050  F033         	movff	i2_scale$4100+3,i2___flmul@b+3
 27317  013596  0E00               	movlw	0
 27318  013598  6E04               	movwf	i2___awmod@divisor+1,c
 27319  01359A  0E0A               	movlw	10
 27320  01359C  6E03               	movwf	i2___awmod@divisor,c
 27321  01359E  5051               	movf	i2scale@scl,w,c
 27322  0135A0  6E01               	movwf	i2___awmod@dividend,c
 27323  0135A2  6A02               	clrf	i2___awmod@dividend+1,c
 27324  0135A4  BE01               	btfsc	i2___awmod@dividend,7,c
 27325  0135A6  0602               	decf	i2___awmod@dividend+1,f,c
 27326  0135A8  EC60  F0BB         	call	i2___awmod	;wreg free
 27327  0135AC  90D8               	bcf	status,0,c
 27328  0135AE  3601               	rlcf	?i2___awmod,f,c
 27329  0135B0  3602               	rlcf	?i2___awmod+1,f,c
 27330  0135B2  90D8               	bcf	status,0,c
 27331  0135B4  3601               	rlcf	?i2___awmod,f,c
 27332  0135B6  3602               	rlcf	?i2___awmod+1,f,c
 27333  0135B8  0E1B               	movlw	low __powers_
 27334  0135BA  2401               	addwf	?i2___awmod,w,c
 27335  0135BC  6EF6               	movwf	tblptrl,c
 27336  0135BE  0EEA               	movlw	high __powers_
 27337  0135C0  2002               	addwfc	?i2___awmod+1,w,c
 27338  0135C2  6EF7               	movwf	tblptrh,c
 27339  0135C4                     	if	1	;There are 3 active tblptr bytes
 27340  0135C4  6AF8               	clrf	tblptru,c
 27341  0135C6  0E00               	movlw	low (__mediumconst shr (0+16))
 27342  0135C8  22F8               	addwfc	tblptru,f,c
 27343  0135CA                     	endif
 27344  0135CA  0009               	tblrd		*+
 27345  0135CC  CFF5 F034          	movff	tablat,i2___flmul@a
 27346  0135D0  0009               	tblrd		*+
 27347  0135D2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27348  0135D6  0009               	tblrd		*+
 27349  0135D8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27350  0135DC  000A               	tblrd		*-
 27351  0135DE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27352  0135E2  ECD1  F09E         	call	i2___flmul	;wreg free
 27353  0135E6  C030  F049         	movff	?i2___flmul,?i2_scale
 27354  0135EA  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 27355  0135EE  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 27356  0135F2  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 27357  0135F6  0012               	return	
 27358  0135F8                     i2l1357:
 27359                           
 27360                           ;doprnt.c: 438: else if(scl > 10)
 27361  0135F8  5051               	movf	i2scale@scl,w,c
 27362  0135FA  0A80               	xorlw	128
 27363  0135FC  0F75               	addlw	-139
 27364  0135FE  A0D8               	btfss	status,0,c
 27365  013600  D05B               	goto	i2l1359
 27366                           
 27367                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27368  013602  0E00               	movlw	0
 27369  013604  6E0A               	movwf	i2___awdiv@divisor+1,c
 27370  013606  0E0A               	movlw	10
 27371  013608  6E09               	movwf	i2___awdiv@divisor,c
 27372  01360A  5051               	movf	i2scale@scl,w,c
 27373  01360C  6E07               	movwf	i2___awdiv@dividend,c
 27374  01360E  6A08               	clrf	i2___awdiv@dividend+1,c
 27375  013610  BE07               	btfsc	i2___awdiv@dividend,7,c
 27376  013612  0608               	decf	i2___awdiv@dividend+1,f,c
 27377  013614  EC29  F0BA         	call	i2___awdiv	;wreg free
 27378  013618  90D8               	bcf	status,0,c
 27379  01361A  3607               	rlcf	?i2___awdiv,f,c
 27380  01361C  3608               	rlcf	?i2___awdiv+1,f,c
 27381  01361E  90D8               	bcf	status,0,c
 27382  013620  3607               	rlcf	?i2___awdiv,f,c
 27383  013622  3608               	rlcf	?i2___awdiv+1,f,c
 27384  013624  0E24               	movlw	36
 27385  013626  2607               	addwf	?i2___awdiv,f,c
 27386  013628  0E00               	movlw	0
 27387  01362A  2208               	addwfc	?i2___awdiv+1,f,c
 27388  01362C  0E1B               	movlw	low __powers_
 27389  01362E  2407               	addwf	?i2___awdiv,w,c
 27390  013630  6EF6               	movwf	tblptrl,c
 27391  013632  0EEA               	movlw	high __powers_
 27392  013634  2008               	addwfc	?i2___awdiv+1,w,c
 27393  013636  6EF7               	movwf	tblptrh,c
 27394  013638                     	if	1	;There are 3 active tblptr bytes
 27395  013638  6AF8               	clrf	tblptru,c
 27396  01363A  0E00               	movlw	low (__mediumconst shr (0+16))
 27397  01363C  22F8               	addwfc	tblptru,f,c
 27398  01363E                     	endif
 27399  01363E  0009               	tblrd		*+
 27400  013640  CFF5 F030          	movff	tablat,i2___flmul@b
 27401  013644  0009               	tblrd		*+
 27402  013646  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27403  01364A  0009               	tblrd		*+
 27404  01364C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27405  013650  000A               	tblrd		*-
 27406  013652  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27407  013656  0E00               	movlw	0
 27408  013658  6E04               	movwf	i2___awmod@divisor+1,c
 27409  01365A  0E0A               	movlw	10
 27410  01365C  6E03               	movwf	i2___awmod@divisor,c
 27411  01365E  5051               	movf	i2scale@scl,w,c
 27412  013660  6E01               	movwf	i2___awmod@dividend,c
 27413  013662  6A02               	clrf	i2___awmod@dividend+1,c
 27414  013664  BE01               	btfsc	i2___awmod@dividend,7,c
 27415  013666  0602               	decf	i2___awmod@dividend+1,f,c
 27416  013668  EC60  F0BB         	call	i2___awmod	;wreg free
 27417  01366C  90D8               	bcf	status,0,c
 27418  01366E  3601               	rlcf	?i2___awmod,f,c
 27419  013670  3602               	rlcf	?i2___awmod+1,f,c
 27420  013672  90D8               	bcf	status,0,c
 27421  013674  3601               	rlcf	?i2___awmod,f,c
 27422  013676  3602               	rlcf	?i2___awmod+1,f,c
 27423  013678  0E1B               	movlw	low __powers_
 27424  01367A  2401               	addwf	?i2___awmod,w,c
 27425  01367C  6EF6               	movwf	tblptrl,c
 27426  01367E  0EEA               	movlw	high __powers_
 27427  013680  2002               	addwfc	?i2___awmod+1,w,c
 27428  013682  6EF7               	movwf	tblptrh,c
 27429  013684                     	if	1	;There are 3 active tblptr bytes
 27430  013684  6AF8               	clrf	tblptru,c
 27431  013686  0E00               	movlw	low (__mediumconst shr (0+16))
 27432  013688  22F8               	addwfc	tblptru,f,c
 27433  01368A                     	endif
 27434  01368A  0009               	tblrd		*+
 27435  01368C  CFF5 F034          	movff	tablat,i2___flmul@a
 27436  013690  0009               	tblrd		*+
 27437  013692  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27438  013696  0009               	tblrd		*+
 27439  013698  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27440  01369C  000A               	tblrd		*-
 27441  01369E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27442  0136A2  ECD1  F09E         	call	i2___flmul	;wreg free
 27443  0136A6  C030  F049         	movff	?i2___flmul,?i2_scale
 27444  0136AA  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 27445  0136AE  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 27446  0136B2  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 27447  0136B6  0012               	return	
 27448  0136B8                     i2l1359:
 27449                           
 27450                           ;doprnt.c: 440: return _powers_[scl];
 27451  0136B8  5051               	movf	i2scale@scl,w,c
 27452  0136BA  0D04               	mullw	4
 27453  0136BC  0E1B               	movlw	low __powers_
 27454  0136BE  24F3               	addwf	prodl,w,c
 27455  0136C0  6EF6               	movwf	tblptrl,c
 27456  0136C2  0EEA               	movlw	high __powers_
 27457  0136C4  20F4               	addwfc	prodh,w,c
 27458  0136C6  6EF7               	movwf	tblptrh,c
 27459  0136C8                     	if	1	;There are 3 active tblptr bytes
 27460  0136C8  6AF8               	clrf	tblptru,c
 27461  0136CA  0E00               	movlw	low (__mediumconst shr (0+16))
 27462  0136CC  22F8               	addwfc	tblptru,f,c
 27463  0136CE                     	endif
 27464  0136CE  0009               	tblrd		*+
 27465  0136D0  CFF5 F049          	movff	tablat,?i2_scale
 27466  0136D4  0009               	tblrd		*+
 27467  0136D6  CFF5 F04A          	movff	tablat,?i2_scale+1
 27468  0136DA  0009               	tblrd		*+
 27469  0136DC  CFF5 F04B          	movff	tablat,?i2_scale+2
 27470  0136E0  000A               	tblrd		*-
 27471  0136E2  CFF5 F04C          	movff	tablat,?i2_scale+3
 27472  0136E6  0012               	return	
 27473  0136E8                     __end_ofi2_scale:
 27474                           	opt stack 0
 27475                           tosu	equ	0xFFF
 27476                           tosh	equ	0xFFE
 27477                           tosl	equ	0xFFD
 27478                           pclatu	equ	0xFFB
 27479                           pclath	equ	0xFFA
 27480                           tblptru	equ	0xFF8
 27481                           tblptrh	equ	0xFF7
 27482                           tblptrl	equ	0xFF6
 27483                           tablat	equ	0xFF5
 27484                           prodh	equ	0xFF4
 27485                           prodl	equ	0xFF3
 27486                           intcon	equ	0xFF2
 27487                           indf0	equ	0xFEF
 27488                           postinc0	equ	0xFEE
 27489                           fsr0h	equ	0xFEA
 27490                           fsr0l	equ	0xFE9
 27491                           wreg	equ	0xFE8
 27492                           indf1	equ	0xFE7
 27493                           postdec1	equ	0xFE5
 27494                           plusw1	equ	0xFE3
 27495                           fsr1h	equ	0xFE2
 27496                           fsr1l	equ	0xFE1
 27497                           bsr	equ	0xFE0
 27498                           indf2	equ	0xFDF
 27499                           postinc2	equ	0xFDE
 27500                           postdec2	equ	0xFDD
 27501                           plusw2	equ	0xFDB
 27502                           fsr2h	equ	0xFDA
 27503                           fsr2l	equ	0xFD9
 27504                           status	equ	0xFD8
 27505                           
 27506 ;; *************** function i2_putch *****************
 27507 ;; Defined at:
 27508 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  txData          1    wreg     unsigned char 
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  txData          1    1[COMRAM] unsigned char 
 27513 ;; Return value:  Size  Location     Type
 27514 ;;                  1    wreg      void 
 27515 ;; Registers used:
 27516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27517 ;; Tracked objects:
 27518 ;;		On entry : 0/0
 27519 ;;		On exit  : 0/0
 27520 ;;		Unchanged: 0/0
 27521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27526 ;;Total ram usage:        1 bytes
 27527 ;; Hardware stack levels used:    1
 27528 ;; Hardware stack levels required when called:    1
 27529 ;; This function calls:
 27530 ;;		i2_EUSART2_Write
 27531 ;; This function is called by:
 27532 ;;		i2_printf
 27533 ;; This function uses a non-reentrant model
 27534 ;;
 27535                           
 27536                           	psect	text87
 27537  0183AA                     __ptext87:
 27538                           	opt stack 0
 27539  0183AA                     i2_putch:
 27540                           	opt stack 15
 27541                           
 27542                           ;incstack = 0
 27543                           ;i2putch@txData stored from wreg
 27544  0183AA  6E02               	movwf	i2putch@txData,c
 27545                           
 27546                           ;eusart2.c: 195: EUSART2_Write(txData);
 27547  0183AC  5002               	movf	i2putch@txData,w,c
 27548  0183AE  EC17  F0BE         	call	i2_EUSART2_Write
 27549  0183B2  0012               	return		;funcret
 27550  0183B4                     __end_ofi2_putch:
 27551                           	opt stack 0
 27552                           tosu	equ	0xFFF
 27553                           tosh	equ	0xFFE
 27554                           tosl	equ	0xFFD
 27555                           pclatu	equ	0xFFB
 27556                           pclath	equ	0xFFA
 27557                           tblptru	equ	0xFF8
 27558                           tblptrh	equ	0xFF7
 27559                           tblptrl	equ	0xFF6
 27560                           tablat	equ	0xFF5
 27561                           prodh	equ	0xFF4
 27562                           prodl	equ	0xFF3
 27563                           intcon	equ	0xFF2
 27564                           indf0	equ	0xFEF
 27565                           postinc0	equ	0xFEE
 27566                           fsr0h	equ	0xFEA
 27567                           fsr0l	equ	0xFE9
 27568                           wreg	equ	0xFE8
 27569                           indf1	equ	0xFE7
 27570                           postdec1	equ	0xFE5
 27571                           plusw1	equ	0xFE3
 27572                           fsr1h	equ	0xFE2
 27573                           fsr1l	equ	0xFE1
 27574                           bsr	equ	0xFE0
 27575                           indf2	equ	0xFDF
 27576                           postinc2	equ	0xFDE
 27577                           postdec2	equ	0xFDD
 27578                           plusw2	equ	0xFDB
 27579                           fsr2h	equ	0xFDA
 27580                           fsr2l	equ	0xFD9
 27581                           status	equ	0xFD8
 27582                           
 27583 ;; *************** function i2_EUSART2_Write *****************
 27584 ;; Defined at:
 27585 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 27586 ;; Parameters:    Size  Location     Type
 27587 ;;  txData          1    wreg     unsigned char 
 27588 ;; Auto vars:     Size  Location     Type
 27589 ;;  txData          1    0[COMRAM] unsigned char 
 27590 ;; Return value:  Size  Location     Type
 27591 ;;                  1    wreg      void 
 27592 ;; Registers used:
 27593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27594 ;; Tracked objects:
 27595 ;;		On entry : 0/0
 27596 ;;		On exit  : 0/0
 27597 ;;		Unchanged: 0/0
 27598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27603 ;;Total ram usage:        1 bytes
 27604 ;; Hardware stack levels used:    1
 27605 ;; This function calls:
 27606 ;;		Nothing
 27607 ;; This function is called by:
 27608 ;;		i2_putch
 27609 ;; This function uses a non-reentrant model
 27610 ;;
 27611                           
 27612                           	psect	text88
 27613  017C2E                     __ptext88:
 27614                           	opt stack 0
 27615  017C2E                     i2_EUSART2_Write:
 27616                           	opt stack 15
 27617                           
 27618                           ;incstack = 0
 27619                           ;i2EUSART2_Write@txData stored from wreg
 27620  017C2E  6E01               	movwf	i2EUSART2_Write@txData,c
 27621                           
 27622                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 27623  017C30  D002               	goto	i2l388
 27624  017C32                     i2l389:
 27625                           
 27626                           ; BSR set to: 1
 27627  017C32  0004               	clrwdt		;# 
 27628                           
 27629                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 27630  017C34  827E               	bsf	3966,1,c	;volatile
 27631  017C36                     i2l388:
 27632  017C36  0101               	movlb	1	; () banked
 27633  017C38  51DB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27634  017C3A  B4D8               	btfsc	status,2,c
 27635  017C3C  D7FA               	goto	i2l389
 27636                           
 27637                           ; BSR set to: 1
 27638                           ;eusart2.c: 167: }
 27639                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 27640  017C3E  927E               	bcf	3966,1,c	;volatile
 27641                           
 27642                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 27643  017C40  010E               	movlb	14	; () banked
 27644  017C42  BD2C               	btfsc	44,6,b	;volatile
 27645  017C44  D003               	goto	i2l391
 27646                           
 27647                           ; BSR set to: 14
 27648                           ;eusart2.c: 172: {
 27649                           ;eusart2.c: 173: TX2REG = txData;
 27650  017C46  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 27651                           
 27652                           ;eusart2.c: 174: }
 27653  017C4A  D013               	goto	i2l392
 27654  017C4C                     i2l391:
 27655                           
 27656                           ; BSR set to: 14
 27657                           ;eusart2.c: 175: else
 27658                           ;eusart2.c: 176: {
 27659                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 27660  017C4C  9D2C               	bcf	44,6,b	;volatile
 27661                           
 27662                           ; BSR set to: 14
 27663                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 27664  017C4E  0101               	movlb	1	; () banked
 27665  017C50  51DD               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27666  017C52  0D01               	mullw	1
 27667  017C54  0E00               	movlw	low _eusart2TxBuffer
 27668  017C56  24F3               	addwf	prodl,w,c
 27669  017C58  6ED9               	movwf	fsr2l,c
 27670  017C5A  0E03               	movlw	high _eusart2TxBuffer
 27671  017C5C  20F4               	addwfc	prodh,w,c
 27672  017C5E  6EDA               	movwf	fsr2h,c
 27673  017C60  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 27674                           
 27675                           ; BSR set to: 1
 27676  017C64  2BDD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27677                           
 27678                           ; BSR set to: 1
 27679                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27680  017C66  0E7F               	movlw	127
 27681  017C68  65DD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27682  017C6A  D002               	goto	i2l393
 27683                           
 27684                           ; BSR set to: 1
 27685                           ;eusart2.c: 180: {
 27686                           ;eusart2.c: 181: eusart2TxHead = 0;
 27687  017C6C  0E00               	movlw	0
 27688  017C6E  6FDD               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27689  017C70                     i2l393:
 27690                           
 27691                           ; BSR set to: 1
 27692                           ;eusart2.c: 182: }
 27693                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 27694                           
 27695                           ; BSR set to: 1
 27696  017C70  07DB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27697  017C72                     i2l392:
 27698                           
 27699                           ;eusart2.c: 184: }
 27700                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 27701                           
 27702                           ; BSR set to: 1
 27703  017C72  010E               	movlb	14	; () banked
 27704  017C74  8D2C               	bsf	44,6,b	;volatile
 27705                           
 27706                           ; BSR set to: 14
 27707  017C76  0012               	return		;funcret
 27708  017C78                     __end_ofi2_EUSART2_Write:
 27709                           	opt stack 0
 27710                           tosu	equ	0xFFF
 27711                           tosh	equ	0xFFE
 27712                           tosl	equ	0xFFD
 27713                           pclatu	equ	0xFFB
 27714                           pclath	equ	0xFFA
 27715                           tblptru	equ	0xFF8
 27716                           tblptrh	equ	0xFF7
 27717                           tblptrl	equ	0xFF6
 27718                           tablat	equ	0xFF5
 27719                           prodh	equ	0xFF4
 27720                           prodl	equ	0xFF3
 27721                           intcon	equ	0xFF2
 27722                           indf0	equ	0xFEF
 27723                           postinc0	equ	0xFEE
 27724                           fsr0h	equ	0xFEA
 27725                           fsr0l	equ	0xFE9
 27726                           wreg	equ	0xFE8
 27727                           indf1	equ	0xFE7
 27728                           postdec1	equ	0xFE5
 27729                           plusw1	equ	0xFE3
 27730                           fsr1h	equ	0xFE2
 27731                           fsr1l	equ	0xFE1
 27732                           bsr	equ	0xFE0
 27733                           indf2	equ	0xFDF
 27734                           postinc2	equ	0xFDE
 27735                           postdec2	equ	0xFDD
 27736                           plusw2	equ	0xFDB
 27737                           fsr2h	equ	0xFDA
 27738                           fsr2l	equ	0xFD9
 27739                           status	equ	0xFD8
 27740                           
 27741 ;; *************** function i2_isdigit *****************
 27742 ;; Defined at:
 27743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27744 ;; Parameters:    Size  Location     Type
 27745 ;;  c               1    wreg     unsigned char 
 27746 ;; Auto vars:     Size  Location     Type
 27747 ;;  c               1    2[COMRAM] unsigned char 
 27748 ;; Return value:  Size  Location     Type
 27749 ;;		None               void
 27750 ;; Registers used:
 27751 ;;		wreg, status,2, status,0
 27752 ;; Tracked objects:
 27753 ;;		On entry : 0/0
 27754 ;;		On exit  : 0/0
 27755 ;;		Unchanged: 0/0
 27756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27760 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27761 ;;Total ram usage:        3 bytes
 27762 ;; Hardware stack levels used:    1
 27763 ;; This function calls:
 27764 ;;		Nothing
 27765 ;; This function is called by:
 27766 ;;		i2_printf
 27767 ;; This function uses a non-reentrant model
 27768 ;;
 27769                           
 27770                           	psect	text89
 27771  018202                     __ptext89:
 27772                           	opt stack 0
 27773  018202                     i2_isdigit:
 27774                           	opt stack 16
 27775                           
 27776                           ; BSR set to: 14
 27777                           ;incstack = 0
 27778                           ;i2isdigit@c stored from wreg
 27779  018202  6E03               	movwf	i2isdigit@c,c
 27780  018204  0E00               	movlw	0
 27781  018206  6E02               	movwf	i2_isdigit$3181,c
 27782  018208  0E3A               	movlw	58
 27783  01820A  6003               	cpfslt	i2isdigit@c,c
 27784  01820C  D005               	goto	i2l1890
 27785  01820E  0E2F               	movlw	47
 27786  018210  6403               	cpfsgt	i2isdigit@c,c
 27787  018212  D002               	goto	i2l1890
 27788  018214  0E01               	movlw	1
 27789  018216  6E02               	movwf	i2_isdigit$3181,c
 27790  018218                     i2l1890:
 27791  018218  C002  F001         	movff	i2_isdigit$3181,??i2_isdigit
 27792  01821C  3001               	rrcf	??i2_isdigit,w,c
 27793  01821E  0012               	return	
 27794  018220                     __end_ofi2_isdigit:
 27795                           	opt stack 0
 27796                           tosu	equ	0xFFF
 27797                           tosh	equ	0xFFE
 27798                           tosl	equ	0xFFD
 27799                           pclatu	equ	0xFFB
 27800                           pclath	equ	0xFFA
 27801                           tblptru	equ	0xFF8
 27802                           tblptrh	equ	0xFF7
 27803                           tblptrl	equ	0xFF6
 27804                           tablat	equ	0xFF5
 27805                           prodh	equ	0xFF4
 27806                           prodl	equ	0xFF3
 27807                           intcon	equ	0xFF2
 27808                           indf0	equ	0xFEF
 27809                           postinc0	equ	0xFEE
 27810                           fsr0h	equ	0xFEA
 27811                           fsr0l	equ	0xFE9
 27812                           wreg	equ	0xFE8
 27813                           indf1	equ	0xFE7
 27814                           postdec1	equ	0xFE5
 27815                           plusw1	equ	0xFE3
 27816                           fsr1h	equ	0xFE2
 27817                           fsr1l	equ	0xFE1
 27818                           bsr	equ	0xFE0
 27819                           indf2	equ	0xFDF
 27820                           postinc2	equ	0xFDE
 27821                           postdec2	equ	0xFDD
 27822                           plusw2	equ	0xFDB
 27823                           fsr2h	equ	0xFDA
 27824                           fsr2l	equ	0xFD9
 27825                           status	equ	0xFD8
 27826                           
 27827 ;; *************** function i2_fround *****************
 27828 ;; Defined at:
 27829 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27830 ;; Parameters:    Size  Location     Type
 27831 ;;  prec            1    wreg     unsigned char 
 27832 ;; Auto vars:     Size  Location     Type
 27833 ;;  prec            1   84[COMRAM] unsigned char 
 27834 ;; Return value:  Size  Location     Type
 27835 ;;                  4   72[COMRAM] unsigned char 
 27836 ;; Registers used:
 27837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27838 ;; Tracked objects:
 27839 ;;		On entry : 0/0
 27840 ;;		On exit  : 0/0
 27841 ;;		Unchanged: 0/0
 27842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27844 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27846 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27847 ;;Total ram usage:       13 bytes
 27848 ;; Hardware stack levels used:    1
 27849 ;; Hardware stack levels required when called:    1
 27850 ;; This function calls:
 27851 ;;		i2___awdiv
 27852 ;;		i2___awmod
 27853 ;;		i2___flmul
 27854 ;; This function is called by:
 27855 ;;		i2_printf
 27856 ;; This function uses a non-reentrant model
 27857 ;;
 27858                           
 27859                           	psect	text90
 27860  015864                     __ptext90:
 27861                           	opt stack 0
 27862  015864                     i2_fround:
 27863                           	opt stack 15
 27864                           
 27865                           ;incstack = 0
 27866                           ;i2fround@prec stored from wreg
 27867  015864  6E55               	movwf	i2fround@prec,c
 27868                           
 27869                           ;doprnt.c: 413: if(prec>=110)
 27870  015866  0E6D               	movlw	109
 27871  015868  6455               	cpfsgt	i2fround@prec,c
 27872  01586A  D0B5               	goto	i2l1346
 27873                           
 27874                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27875  01586C  0E00               	movlw	0
 27876  01586E  6E0A               	movwf	i2___awdiv@divisor+1,c
 27877  015870  0E0A               	movlw	10
 27878  015872  6E09               	movwf	i2___awdiv@divisor,c
 27879  015874  0E00               	movlw	0
 27880  015876  6E04               	movwf	i2___awmod@divisor+1,c
 27881  015878  0E64               	movlw	100
 27882  01587A  6E03               	movwf	i2___awmod@divisor,c
 27883  01587C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27884  015880  6A02               	clrf	i2___awmod@dividend+1,c
 27885  015882  EC60  F0BB         	call	i2___awmod	;wreg free
 27886  015886  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 27887  01588A  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 27888  01588E  EC29  F0BA         	call	i2___awdiv	;wreg free
 27889  015892  90D8               	bcf	status,0,c
 27890  015894  3607               	rlcf	?i2___awdiv,f,c
 27891  015896  3608               	rlcf	?i2___awdiv+1,f,c
 27892  015898  90D8               	bcf	status,0,c
 27893  01589A  3607               	rlcf	?i2___awdiv,f,c
 27894  01589C  3608               	rlcf	?i2___awdiv+1,f,c
 27895  01589E  0E24               	movlw	36
 27896  0158A0  2607               	addwf	?i2___awdiv,f,c
 27897  0158A2  0E00               	movlw	0
 27898  0158A4  2208               	addwfc	?i2___awdiv+1,f,c
 27899  0158A6  0E4F               	movlw	low __npowers_
 27900  0158A8  2407               	addwf	?i2___awdiv,w,c
 27901  0158AA  6EF6               	movwf	tblptrl,c
 27902  0158AC  0EEA               	movlw	high __npowers_
 27903  0158AE  2008               	addwfc	?i2___awdiv+1,w,c
 27904  0158B0  6EF7               	movwf	tblptrh,c
 27905  0158B2                     	if	1	;There are 3 active tblptr bytes
 27906  0158B2  6AF8               	clrf	tblptru,c
 27907  0158B4  0E00               	movlw	low (__mediumconst shr (0+16))
 27908  0158B6  22F8               	addwfc	tblptru,f,c
 27909  0158B8                     	endif
 27910  0158B8  0009               	tblrd		*+
 27911  0158BA  CFF5 F034          	movff	tablat,i2___flmul@a
 27912  0158BE  0009               	tblrd		*+
 27913  0158C0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27914  0158C4  0009               	tblrd		*+
 27915  0158C6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27916  0158CA  000A               	tblrd		*-
 27917  0158CC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27918  0158D0  0E00               	movlw	0
 27919  0158D2  6E0A               	movwf	i2___awdiv@divisor+1,c
 27920  0158D4  0E64               	movlw	100
 27921  0158D6  6E09               	movwf	i2___awdiv@divisor,c
 27922  0158D8  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 27923  0158DC  6A08               	clrf	i2___awdiv@dividend+1,c
 27924  0158DE  EC29  F0BA         	call	i2___awdiv	;wreg free
 27925  0158E2  90D8               	bcf	status,0,c
 27926  0158E4  3607               	rlcf	?i2___awdiv,f,c
 27927  0158E6  3608               	rlcf	?i2___awdiv+1,f,c
 27928  0158E8  90D8               	bcf	status,0,c
 27929  0158EA  3607               	rlcf	?i2___awdiv,f,c
 27930  0158EC  3608               	rlcf	?i2___awdiv+1,f,c
 27931  0158EE  0E48               	movlw	72
 27932  0158F0  2607               	addwf	?i2___awdiv,f,c
 27933  0158F2  0E00               	movlw	0
 27934  0158F4  2208               	addwfc	?i2___awdiv+1,f,c
 27935  0158F6  0E4F               	movlw	low __npowers_
 27936  0158F8  2407               	addwf	?i2___awdiv,w,c
 27937  0158FA  6EF6               	movwf	tblptrl,c
 27938  0158FC  0EEA               	movlw	high __npowers_
 27939  0158FE  2008               	addwfc	?i2___awdiv+1,w,c
 27940  015900  6EF7               	movwf	tblptrh,c
 27941  015902                     	if	1	;There are 3 active tblptr bytes
 27942  015902  6AF8               	clrf	tblptru,c
 27943  015904  0E00               	movlw	low (__mediumconst shr (0+16))
 27944  015906  22F8               	addwfc	tblptru,f,c
 27945  015908                     	endif
 27946  015908  0009               	tblrd		*+
 27947  01590A  CFF5 F030          	movff	tablat,i2___flmul@b
 27948  01590E  0009               	tblrd		*+
 27949  015910  CFF5 F031          	movff	tablat,i2___flmul@b+1
 27950  015914  0009               	tblrd		*+
 27951  015916  CFF5 F032          	movff	tablat,i2___flmul@b+2
 27952  01591A  000A               	tblrd		*-
 27953  01591C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 27954  015920  ECD1  F09E         	call	i2___flmul	;wreg free
 27955  015924  C030  F051         	movff	?i2___flmul,i2_fround$4098
 27956  015928  C031  F052         	movff	?i2___flmul+1,i2_fround$4098+1
 27957  01592C  C032  F053         	movff	?i2___flmul+2,i2_fround$4098+2
 27958  015930  C033  F054         	movff	?i2___flmul+3,i2_fround$4098+3
 27959                           
 27960                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27961  015934  0E00               	movlw	0
 27962  015936  6E04               	movwf	i2___awmod@divisor+1,c
 27963  015938  0E0A               	movlw	10
 27964  01593A  6E03               	movwf	i2___awmod@divisor,c
 27965  01593C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 27966  015940  6A02               	clrf	i2___awmod@dividend+1,c
 27967  015942  EC60  F0BB         	call	i2___awmod	;wreg free
 27968  015946  90D8               	bcf	status,0,c
 27969  015948  3601               	rlcf	?i2___awmod,f,c
 27970  01594A  3602               	rlcf	?i2___awmod+1,f,c
 27971  01594C  90D8               	bcf	status,0,c
 27972  01594E  3601               	rlcf	?i2___awmod,f,c
 27973  015950  3602               	rlcf	?i2___awmod+1,f,c
 27974  015952  0E4F               	movlw	low __npowers_
 27975  015954  2401               	addwf	?i2___awmod,w,c
 27976  015956  6EF6               	movwf	tblptrl,c
 27977  015958  0EEA               	movlw	high __npowers_
 27978  01595A  2002               	addwfc	?i2___awmod+1,w,c
 27979  01595C  6EF7               	movwf	tblptrh,c
 27980  01595E                     	if	1	;There are 3 active tblptr bytes
 27981  01595E  6AF8               	clrf	tblptru,c
 27982  015960  0E00               	movlw	low (__mediumconst shr (0+16))
 27983  015962  22F8               	addwfc	tblptru,f,c
 27984  015964                     	endif
 27985  015964  0009               	tblrd		*+
 27986  015966  CFF5 F034          	movff	tablat,i2___flmul@a
 27987  01596A  0009               	tblrd		*+
 27988  01596C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 27989  015970  0009               	tblrd		*+
 27990  015972  CFF5 F036          	movff	tablat,i2___flmul@a+2
 27991  015976  000A               	tblrd		*-
 27992  015978  CFF5 F037          	movff	tablat,i2___flmul@a+3
 27993  01597C  C051  F030         	movff	i2_fround$4098,i2___flmul@b
 27994  015980  C052  F031         	movff	i2_fround$4098+1,i2___flmul@b+1
 27995  015984  C053  F032         	movff	i2_fround$4098+2,i2___flmul@b+2
 27996  015988  C054  F033         	movff	i2_fround$4098+3,i2___flmul@b+3
 27997  01598C  ECD1  F09E         	call	i2___flmul	;wreg free
 27998  015990  C030  F04D         	movff	?i2___flmul,i2_fround$4099
 27999  015994  C031  F04E         	movff	?i2___flmul+1,i2_fround$4099+1
 28000  015998  C032  F04F         	movff	?i2___flmul+2,i2_fround$4099+2
 28001  01599C  C033  F050         	movff	?i2___flmul+3,i2_fround$4099+3
 28002                           
 28003                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28004  0159A0  C04D  F030         	movff	i2_fround$4099,i2___flmul@b
 28005  0159A4  C04E  F031         	movff	i2_fround$4099+1,i2___flmul@b+1
 28006  0159A8  C04F  F032         	movff	i2_fround$4099+2,i2___flmul@b+2
 28007  0159AC  C050  F033         	movff	i2_fround$4099+3,i2___flmul@b+3
 28008  0159B0  0E00               	movlw	0
 28009  0159B2  6E34               	movwf	i2___flmul@a,c
 28010  0159B4  0E00               	movlw	0
 28011  0159B6  6E35               	movwf	i2___flmul@a+1,c
 28012  0159B8  0E00               	movlw	0
 28013  0159BA  6E36               	movwf	i2___flmul@a+2,c
 28014  0159BC  0E3F               	movlw	63
 28015  0159BE  6E37               	movwf	i2___flmul@a+3,c
 28016  0159C0  ECD1  F09E         	call	i2___flmul	;wreg free
 28017  0159C4  C030  F049         	movff	?i2___flmul,?i2_fround
 28018  0159C8  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 28019  0159CC  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 28020  0159D0  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 28021  0159D4  0012               	return	
 28022  0159D6                     i2l1346:
 28023                           
 28024                           ;doprnt.c: 415: else if(prec > 10)
 28025  0159D6  0E0A               	movlw	10
 28026  0159D8  6455               	cpfsgt	i2fround@prec,c
 28027  0159DA  D071               	goto	i2l1349
 28028                           
 28029                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28030  0159DC  0E00               	movlw	0
 28031  0159DE  6E04               	movwf	i2___awmod@divisor+1,c
 28032  0159E0  0E0A               	movlw	10
 28033  0159E2  6E03               	movwf	i2___awmod@divisor,c
 28034  0159E4  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 28035  0159E8  6A02               	clrf	i2___awmod@dividend+1,c
 28036  0159EA  EC60  F0BB         	call	i2___awmod	;wreg free
 28037  0159EE  90D8               	bcf	status,0,c
 28038  0159F0  3601               	rlcf	?i2___awmod,f,c
 28039  0159F2  3602               	rlcf	?i2___awmod+1,f,c
 28040  0159F4  90D8               	bcf	status,0,c
 28041  0159F6  3601               	rlcf	?i2___awmod,f,c
 28042  0159F8  3602               	rlcf	?i2___awmod+1,f,c
 28043  0159FA  0E4F               	movlw	low __npowers_
 28044  0159FC  2401               	addwf	?i2___awmod,w,c
 28045  0159FE  6EF6               	movwf	tblptrl,c
 28046  015A00  0EEA               	movlw	high __npowers_
 28047  015A02  2002               	addwfc	?i2___awmod+1,w,c
 28048  015A04  6EF7               	movwf	tblptrh,c
 28049  015A06                     	if	1	;There are 3 active tblptr bytes
 28050  015A06  6AF8               	clrf	tblptru,c
 28051  015A08  0E00               	movlw	low (__mediumconst shr (0+16))
 28052  015A0A  22F8               	addwfc	tblptru,f,c
 28053  015A0C                     	endif
 28054  015A0C  0009               	tblrd		*+
 28055  015A0E  CFF5 F034          	movff	tablat,i2___flmul@a
 28056  015A12  0009               	tblrd		*+
 28057  015A14  CFF5 F035          	movff	tablat,i2___flmul@a+1
 28058  015A18  0009               	tblrd		*+
 28059  015A1A  CFF5 F036          	movff	tablat,i2___flmul@a+2
 28060  015A1E  000A               	tblrd		*-
 28061  015A20  CFF5 F037          	movff	tablat,i2___flmul@a+3
 28062  015A24  0E00               	movlw	0
 28063  015A26  6E0A               	movwf	i2___awdiv@divisor+1,c
 28064  015A28  0E0A               	movlw	10
 28065  015A2A  6E09               	movwf	i2___awdiv@divisor,c
 28066  015A2C  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 28067  015A30  6A08               	clrf	i2___awdiv@dividend+1,c
 28068  015A32  EC29  F0BA         	call	i2___awdiv	;wreg free
 28069  015A36  90D8               	bcf	status,0,c
 28070  015A38  3607               	rlcf	?i2___awdiv,f,c
 28071  015A3A  3608               	rlcf	?i2___awdiv+1,f,c
 28072  015A3C  90D8               	bcf	status,0,c
 28073  015A3E  3607               	rlcf	?i2___awdiv,f,c
 28074  015A40  3608               	rlcf	?i2___awdiv+1,f,c
 28075  015A42  0E24               	movlw	36
 28076  015A44  2607               	addwf	?i2___awdiv,f,c
 28077  015A46  0E00               	movlw	0
 28078  015A48  2208               	addwfc	?i2___awdiv+1,f,c
 28079  015A4A  0E4F               	movlw	low __npowers_
 28080  015A4C  2407               	addwf	?i2___awdiv,w,c
 28081  015A4E  6EF6               	movwf	tblptrl,c
 28082  015A50  0EEA               	movlw	high __npowers_
 28083  015A52  2008               	addwfc	?i2___awdiv+1,w,c
 28084  015A54  6EF7               	movwf	tblptrh,c
 28085  015A56                     	if	1	;There are 3 active tblptr bytes
 28086  015A56  6AF8               	clrf	tblptru,c
 28087  015A58  0E00               	movlw	low (__mediumconst shr (0+16))
 28088  015A5A  22F8               	addwfc	tblptru,f,c
 28089  015A5C                     	endif
 28090  015A5C  0009               	tblrd		*+
 28091  015A5E  CFF5 F030          	movff	tablat,i2___flmul@b
 28092  015A62  0009               	tblrd		*+
 28093  015A64  CFF5 F031          	movff	tablat,i2___flmul@b+1
 28094  015A68  0009               	tblrd		*+
 28095  015A6A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 28096  015A6E  000A               	tblrd		*-
 28097  015A70  CFF5 F033          	movff	tablat,i2___flmul@b+3
 28098  015A74  ECD1  F09E         	call	i2___flmul	;wreg free
 28099  015A78  C030  F051         	movff	?i2___flmul,i2_fround$4098
 28100  015A7C  C031  F052         	movff	?i2___flmul+1,i2_fround$4098+1
 28101  015A80  C032  F053         	movff	?i2___flmul+2,i2_fround$4098+2
 28102  015A84  C033  F054         	movff	?i2___flmul+3,i2_fround$4098+3
 28103                           
 28104                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28105  015A88  C051  F030         	movff	i2_fround$4098,i2___flmul@b
 28106  015A8C  C052  F031         	movff	i2_fround$4098+1,i2___flmul@b+1
 28107  015A90  C053  F032         	movff	i2_fround$4098+2,i2___flmul@b+2
 28108  015A94  C054  F033         	movff	i2_fround$4098+3,i2___flmul@b+3
 28109  015A98  0E00               	movlw	0
 28110  015A9A  6E34               	movwf	i2___flmul@a,c
 28111  015A9C  0E00               	movlw	0
 28112  015A9E  6E35               	movwf	i2___flmul@a+1,c
 28113  015AA0  0E00               	movlw	0
 28114  015AA2  6E36               	movwf	i2___flmul@a+2,c
 28115  015AA4  0E3F               	movlw	63
 28116  015AA6  6E37               	movwf	i2___flmul@a+3,c
 28117  015AA8  ECD1  F09E         	call	i2___flmul	;wreg free
 28118  015AAC  C030  F049         	movff	?i2___flmul,?i2_fround
 28119  015AB0  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 28120  015AB4  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 28121  015AB8  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 28122  015ABC  0012               	return	
 28123  015ABE                     i2l1349:
 28124                           
 28125                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 28126  015ABE  5055               	movf	i2fround@prec,w,c
 28127  015AC0  0D04               	mullw	4
 28128  015AC2  0E4F               	movlw	low __npowers_
 28129  015AC4  24F3               	addwf	prodl,w,c
 28130  015AC6  6EF6               	movwf	tblptrl,c
 28131  015AC8  0EEA               	movlw	high __npowers_
 28132  015ACA  20F4               	addwfc	prodh,w,c
 28133  015ACC  6EF7               	movwf	tblptrh,c
 28134  015ACE                     	if	1	;There are 3 active tblptr bytes
 28135  015ACE  6AF8               	clrf	tblptru,c
 28136  015AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 28137  015AD2  22F8               	addwfc	tblptru,f,c
 28138  015AD4                     	endif
 28139  015AD4  0009               	tblrd		*+
 28140  015AD6  CFF5 F030          	movff	tablat,i2___flmul@b
 28141  015ADA  0009               	tblrd		*+
 28142  015ADC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 28143  015AE0  0009               	tblrd		*+
 28144  015AE2  CFF5 F032          	movff	tablat,i2___flmul@b+2
 28145  015AE6  000A               	tblrd		*-
 28146  015AE8  CFF5 F033          	movff	tablat,i2___flmul@b+3
 28147  015AEC  0E00               	movlw	0
 28148  015AEE  6E34               	movwf	i2___flmul@a,c
 28149  015AF0  0E00               	movlw	0
 28150  015AF2  6E35               	movwf	i2___flmul@a+1,c
 28151  015AF4  0E00               	movlw	0
 28152  015AF6  6E36               	movwf	i2___flmul@a+2,c
 28153  015AF8  0E3F               	movlw	63
 28154  015AFA  6E37               	movwf	i2___flmul@a+3,c
 28155  015AFC  ECD1  F09E         	call	i2___flmul	;wreg free
 28156  015B00  C030  F049         	movff	?i2___flmul,?i2_fround
 28157  015B04  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 28158  015B08  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 28159  015B0C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 28160  015B10  0012               	return	
 28161  015B12                     __end_ofi2_fround:
 28162                           	opt stack 0
 28163                           tosu	equ	0xFFF
 28164                           tosh	equ	0xFFE
 28165                           tosl	equ	0xFFD
 28166                           pclatu	equ	0xFFB
 28167                           pclath	equ	0xFFA
 28168                           tblptru	equ	0xFF8
 28169                           tblptrh	equ	0xFF7
 28170                           tblptrl	equ	0xFF6
 28171                           tablat	equ	0xFF5
 28172                           prodh	equ	0xFF4
 28173                           prodl	equ	0xFF3
 28174                           intcon	equ	0xFF2
 28175                           indf0	equ	0xFEF
 28176                           postinc0	equ	0xFEE
 28177                           fsr0h	equ	0xFEA
 28178                           fsr0l	equ	0xFE9
 28179                           wreg	equ	0xFE8
 28180                           indf1	equ	0xFE7
 28181                           postdec1	equ	0xFE5
 28182                           plusw1	equ	0xFE3
 28183                           fsr1h	equ	0xFE2
 28184                           fsr1l	equ	0xFE1
 28185                           bsr	equ	0xFE0
 28186                           indf2	equ	0xFDF
 28187                           postinc2	equ	0xFDE
 28188                           postdec2	equ	0xFDD
 28189                           plusw2	equ	0xFDB
 28190                           fsr2h	equ	0xFDA
 28191                           fsr2l	equ	0xFD9
 28192                           status	equ	0xFD8
 28193                           
 28194 ;; *************** function i2___awmod *****************
 28195 ;; Defined at:
 28196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 28197 ;; Parameters:    Size  Location     Type
 28198 ;;  dividend        2    0[COMRAM] int 
 28199 ;;  divisor         2    2[COMRAM] int 
 28200 ;; Auto vars:     Size  Location     Type
 28201 ;;  __awmod         1    5[COMRAM] unsigned char 
 28202 ;;  __awmod         1    4[COMRAM] unsigned char 
 28203 ;; Return value:  Size  Location     Type
 28204 ;;                  2    0[COMRAM] int 
 28205 ;; Registers used:
 28206 ;;		wreg, status,2, status,0
 28207 ;; Tracked objects:
 28208 ;;		On entry : 0/0
 28209 ;;		On exit  : 0/0
 28210 ;;		Unchanged: 0/0
 28211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28216 ;;Total ram usage:        6 bytes
 28217 ;; Hardware stack levels used:    1
 28218 ;; This function calls:
 28219 ;;		Nothing
 28220 ;; This function is called by:
 28221 ;;		i2_fround
 28222 ;;		i2_scale
 28223 ;; This function uses a non-reentrant model
 28224 ;;
 28225                           
 28226                           	psect	text91
 28227  0176C0                     __ptext91:
 28228                           	opt stack 0
 28229  0176C0                     i2___awmod:
 28230                           	opt stack 15
 28231                           
 28232                           ;incstack = 0
 28233  0176C0  0E00               	movlw	0
 28234  0176C2  6E06               	movwf	i2___awmod@sign,c
 28235  0176C4  AE02               	btfss	i2___awmod@dividend+1,7,c
 28236  0176C6  D006               	goto	i2l1695
 28237  0176C8  6C01               	negf	i2___awmod@dividend,c
 28238  0176CA  1E02               	comf	i2___awmod@dividend+1,f,c
 28239  0176CC  B0D8               	btfsc	status,0,c
 28240  0176CE  2A02               	incf	i2___awmod@dividend+1,f,c
 28241  0176D0  0E01               	movlw	1
 28242  0176D2  6E06               	movwf	i2___awmod@sign,c
 28243  0176D4                     i2l1695:
 28244  0176D4  AE04               	btfss	i2___awmod@divisor+1,7,c
 28245  0176D6  D004               	goto	i2l1696
 28246  0176D8  6C03               	negf	i2___awmod@divisor,c
 28247  0176DA  1E04               	comf	i2___awmod@divisor+1,f,c
 28248  0176DC  B0D8               	btfsc	status,0,c
 28249  0176DE  2A04               	incf	i2___awmod@divisor+1,f,c
 28250  0176E0                     i2l1696:
 28251  0176E0  5003               	movf	i2___awmod@divisor,w,c
 28252  0176E2  1004               	iorwf	i2___awmod@divisor+1,w,c
 28253  0176E4  B4D8               	btfsc	status,2,c
 28254  0176E6  D018               	goto	i2l1703
 28255  0176E8  0E01               	movlw	1
 28256  0176EA  6E05               	movwf	i2___awmod@counter,c
 28257  0176EC  D004               	goto	i2l1698
 28258  0176EE  90D8               	bcf	status,0,c
 28259  0176F0  3603               	rlcf	i2___awmod@divisor,f,c
 28260  0176F2  3604               	rlcf	i2___awmod@divisor+1,f,c
 28261  0176F4  2A05               	incf	i2___awmod@counter,f,c
 28262  0176F6                     i2l1698:
 28263  0176F6  AE04               	btfss	i2___awmod@divisor+1,7,c
 28264  0176F8  D7FA               	goto	i2l1699
 28265  0176FA                     i2u1518_40:
 28266  0176FA  5003               	movf	i2___awmod@divisor,w,c
 28267  0176FC  5C01               	subwf	i2___awmod@dividend,w,c
 28268  0176FE  5004               	movf	i2___awmod@divisor+1,w,c
 28269  017700  5802               	subwfb	i2___awmod@dividend+1,w,c
 28270  017702  A0D8               	btfss	status,0,c
 28271  017704  D004               	goto	i2l1702
 28272  017706  5003               	movf	i2___awmod@divisor,w,c
 28273  017708  5E01               	subwf	i2___awmod@dividend,f,c
 28274  01770A  5004               	movf	i2___awmod@divisor+1,w,c
 28275  01770C  5A02               	subwfb	i2___awmod@dividend+1,f,c
 28276  01770E                     i2l1702:
 28277  01770E  90D8               	bcf	status,0,c
 28278  017710  3204               	rrcf	i2___awmod@divisor+1,f,c
 28279  017712  3203               	rrcf	i2___awmod@divisor,f,c
 28280  017714  2E05               	decfsz	i2___awmod@counter,f,c
 28281  017716  D7F1               	goto	i2u1518_40
 28282  017718                     i2l1703:
 28283  017718  5006               	movf	i2___awmod@sign,w,c
 28284  01771A  B4D8               	btfsc	status,2,c
 28285  01771C  D004               	goto	i2l1704
 28286  01771E  6C01               	negf	i2___awmod@dividend,c
 28287  017720  1E02               	comf	i2___awmod@dividend+1,f,c
 28288  017722  B0D8               	btfsc	status,0,c
 28289  017724  2A02               	incf	i2___awmod@dividend+1,f,c
 28290  017726                     i2l1704:
 28291  017726  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 28292  01772A  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 28293  01772E  0012               	return	
 28294  017730                     __end_ofi2___awmod:
 28295                           	opt stack 0
 28296                           tosu	equ	0xFFF
 28297                           tosh	equ	0xFFE
 28298                           tosl	equ	0xFFD
 28299                           pclatu	equ	0xFFB
 28300                           pclath	equ	0xFFA
 28301                           tblptru	equ	0xFF8
 28302                           tblptrh	equ	0xFF7
 28303                           tblptrl	equ	0xFF6
 28304                           tablat	equ	0xFF5
 28305                           prodh	equ	0xFF4
 28306                           prodl	equ	0xFF3
 28307                           intcon	equ	0xFF2
 28308                           indf0	equ	0xFEF
 28309                           postinc0	equ	0xFEE
 28310                           fsr0h	equ	0xFEA
 28311                           fsr0l	equ	0xFE9
 28312                           wreg	equ	0xFE8
 28313                           indf1	equ	0xFE7
 28314                           postdec1	equ	0xFE5
 28315                           plusw1	equ	0xFE3
 28316                           fsr1h	equ	0xFE2
 28317                           fsr1l	equ	0xFE1
 28318                           bsr	equ	0xFE0
 28319                           indf2	equ	0xFDF
 28320                           postinc2	equ	0xFDE
 28321                           postdec2	equ	0xFDD
 28322                           plusw2	equ	0xFDB
 28323                           fsr2h	equ	0xFDA
 28324                           fsr2l	equ	0xFD9
 28325                           status	equ	0xFD8
 28326                           
 28327 ;; *************** function i2___awdiv *****************
 28328 ;; Defined at:
 28329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 28330 ;; Parameters:    Size  Location     Type
 28331 ;;  dividend        2    6[COMRAM] int 
 28332 ;;  divisor         2    8[COMRAM] int 
 28333 ;; Auto vars:     Size  Location     Type
 28334 ;;  __awdiv         2   12[COMRAM] int 
 28335 ;;  __awdiv         1   11[COMRAM] unsigned char 
 28336 ;;  __awdiv         1   10[COMRAM] unsigned char 
 28337 ;; Return value:  Size  Location     Type
 28338 ;;                  2    6[COMRAM] int 
 28339 ;; Registers used:
 28340 ;;		wreg, status,2, status,0
 28341 ;; Tracked objects:
 28342 ;;		On entry : 0/0
 28343 ;;		On exit  : 0/0
 28344 ;;		Unchanged: 0/0
 28345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28347 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28349 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28350 ;;Total ram usage:        8 bytes
 28351 ;; Hardware stack levels used:    1
 28352 ;; This function calls:
 28353 ;;		Nothing
 28354 ;; This function is called by:
 28355 ;;		i2_fround
 28356 ;;		i2_scale
 28357 ;;		i2_printf
 28358 ;; This function uses a non-reentrant model
 28359 ;;
 28360                           
 28361                           	psect	text92
 28362  017452                     __ptext92:
 28363                           	opt stack 0
 28364  017452                     i2___awdiv:
 28365                           	opt stack 15
 28366                           
 28367                           ;incstack = 0
 28368  017452  0E00               	movlw	0
 28369  017454  6E0C               	movwf	i2___awdiv@sign,c
 28370  017456  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 28371  017458  D006               	goto	i2l1682
 28372  01745A  6C09               	negf	i2___awdiv@divisor,c
 28373  01745C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 28374  01745E  B0D8               	btfsc	status,0,c
 28375  017460  2A0A               	incf	i2___awdiv@divisor+1,f,c
 28376  017462  0E01               	movlw	1
 28377  017464  6E0C               	movwf	i2___awdiv@sign,c
 28378  017466                     i2l1682:
 28379  017466  AE08               	btfss	i2___awdiv@dividend+1,7,c
 28380  017468  D006               	goto	i2l1683
 28381  01746A  6C07               	negf	i2___awdiv@dividend,c
 28382  01746C  1E08               	comf	i2___awdiv@dividend+1,f,c
 28383  01746E  B0D8               	btfsc	status,0,c
 28384  017470  2A08               	incf	i2___awdiv@dividend+1,f,c
 28385  017472  0E01               	movlw	1
 28386  017474  1A0C               	xorwf	i2___awdiv@sign,f,c
 28387  017476                     i2l1683:
 28388  017476  0E00               	movlw	0
 28389  017478  6E0E               	movwf	i2___awdiv@quotient+1,c
 28390  01747A  0E00               	movlw	0
 28391  01747C  6E0D               	movwf	i2___awdiv@quotient,c
 28392  01747E  5009               	movf	i2___awdiv@divisor,w,c
 28393  017480  100A               	iorwf	i2___awdiv@divisor+1,w,c
 28394  017482  B4D8               	btfsc	status,2,c
 28395  017484  D01C               	goto	i2l1690
 28396  017486  0E01               	movlw	1
 28397  017488  6E0B               	movwf	i2___awdiv@counter,c
 28398  01748A  D004               	goto	i2l1685
 28399  01748C  90D8               	bcf	status,0,c
 28400  01748E  3609               	rlcf	i2___awdiv@divisor,f,c
 28401  017490  360A               	rlcf	i2___awdiv@divisor+1,f,c
 28402  017492  2A0B               	incf	i2___awdiv@counter,f,c
 28403  017494                     i2l1685:
 28404  017494  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 28405  017496  D7FA               	goto	i2l1686
 28406  017498                     i2u1512_40:
 28407  017498  90D8               	bcf	status,0,c
 28408  01749A  360D               	rlcf	i2___awdiv@quotient,f,c
 28409  01749C  360E               	rlcf	i2___awdiv@quotient+1,f,c
 28410  01749E  5009               	movf	i2___awdiv@divisor,w,c
 28411  0174A0  5C07               	subwf	i2___awdiv@dividend,w,c
 28412  0174A2  500A               	movf	i2___awdiv@divisor+1,w,c
 28413  0174A4  5808               	subwfb	i2___awdiv@dividend+1,w,c
 28414  0174A6  A0D8               	btfss	status,0,c
 28415  0174A8  D005               	goto	i2l1689
 28416  0174AA  5009               	movf	i2___awdiv@divisor,w,c
 28417  0174AC  5E07               	subwf	i2___awdiv@dividend,f,c
 28418  0174AE  500A               	movf	i2___awdiv@divisor+1,w,c
 28419  0174B0  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 28420  0174B2  800D               	bsf	i2___awdiv@quotient,0,c
 28421  0174B4                     i2l1689:
 28422  0174B4  90D8               	bcf	status,0,c
 28423  0174B6  320A               	rrcf	i2___awdiv@divisor+1,f,c
 28424  0174B8  3209               	rrcf	i2___awdiv@divisor,f,c
 28425  0174BA  2E0B               	decfsz	i2___awdiv@counter,f,c
 28426  0174BC  D7ED               	goto	i2u1512_40
 28427  0174BE                     i2l1690:
 28428  0174BE  500C               	movf	i2___awdiv@sign,w,c
 28429  0174C0  B4D8               	btfsc	status,2,c
 28430  0174C2  D004               	goto	i2l1691
 28431  0174C4  6C0D               	negf	i2___awdiv@quotient,c
 28432  0174C6  1E0E               	comf	i2___awdiv@quotient+1,f,c
 28433  0174C8  B0D8               	btfsc	status,0,c
 28434  0174CA  2A0E               	incf	i2___awdiv@quotient+1,f,c
 28435  0174CC                     i2l1691:
 28436  0174CC  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 28437  0174D0  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 28438  0174D4  0012               	return	
 28439  0174D6                     __end_ofi2___awdiv:
 28440                           	opt stack 0
 28441                           tosu	equ	0xFFF
 28442                           tosh	equ	0xFFE
 28443                           tosl	equ	0xFFD
 28444                           pclatu	equ	0xFFB
 28445                           pclath	equ	0xFFA
 28446                           tblptru	equ	0xFF8
 28447                           tblptrh	equ	0xFF7
 28448                           tblptrl	equ	0xFF6
 28449                           tablat	equ	0xFF5
 28450                           prodh	equ	0xFF4
 28451                           prodl	equ	0xFF3
 28452                           intcon	equ	0xFF2
 28453                           indf0	equ	0xFEF
 28454                           postinc0	equ	0xFEE
 28455                           fsr0h	equ	0xFEA
 28456                           fsr0l	equ	0xFE9
 28457                           wreg	equ	0xFE8
 28458                           indf1	equ	0xFE7
 28459                           postdec1	equ	0xFE5
 28460                           plusw1	equ	0xFE3
 28461                           fsr1h	equ	0xFE2
 28462                           fsr1l	equ	0xFE1
 28463                           bsr	equ	0xFE0
 28464                           indf2	equ	0xFDF
 28465                           postinc2	equ	0xFDE
 28466                           postdec2	equ	0xFDD
 28467                           plusw2	equ	0xFDB
 28468                           fsr2h	equ	0xFDA
 28469                           fsr2l	equ	0xFD9
 28470                           status	equ	0xFD8
 28471                           
 28472 ;; *************** function i2__tdiv_to_l_ *****************
 28473 ;; Defined at:
 28474 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 28475 ;; Parameters:    Size  Location     Type
 28476 ;;  f1              3    0[COMRAM] float 
 28477 ;;  f2              3    3[COMRAM] float 
 28478 ;; Auto vars:     Size  Location     Type
 28479 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 28480 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 28481 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 28482 ;; Return value:  Size  Location     Type
 28483 ;;                  4    0[COMRAM] unsigned long 
 28484 ;; Registers used:
 28485 ;;		wreg, status,2, status,0
 28486 ;; Tracked objects:
 28487 ;;		On entry : 0/0
 28488 ;;		On exit  : 0/0
 28489 ;;		Unchanged: 0/0
 28490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28491 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28492 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28493 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28494 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28495 ;;Total ram usage:       15 bytes
 28496 ;; Hardware stack levels used:    1
 28497 ;; This function calls:
 28498 ;;		Nothing
 28499 ;; This function is called by:
 28500 ;;		i2_printf
 28501 ;; This function uses a non-reentrant model
 28502 ;;
 28503                           
 28504                           	psect	text93
 28505  01636A                     __ptext93:
 28506                           	opt stack 0
 28507  01636A                     i2__tdiv_to_l_:
 28508                           	opt stack 16
 28509                           
 28510                           ;incstack = 0
 28511  01636A  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 28512  01636E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 28513  016370  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 28514  016372  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 28515  016374  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 28516  016376  E301               	bnc	u1575_41
 28517  016378  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 28518  01637A                     u1575_41:
 28519  01637A  5007               	movf	??i2__tdiv_to_l_,w,c
 28520  01637C  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 28521  01637E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28522  016380  A4D8               	btfss	status,2,c
 28523  016382  D009               	goto	i2l1830
 28524  016384  0E00               	movlw	0
 28525  016386  6E01               	movwf	?i2__tdiv_to_l_,c
 28526  016388  0E00               	movlw	0
 28527  01638A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28528  01638C  0E00               	movlw	0
 28529  01638E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28530  016390  0E00               	movlw	0
 28531  016392  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28532  016394  0012               	return	
 28533  016396                     i2l1830:
 28534  016396  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 28535  01639A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 28536  01639C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 28537  01639E  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 28538  0163A0  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 28539  0163A2  E301               	bnc	u1577_41
 28540  0163A4  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 28541  0163A6                     u1577_41:
 28542  0163A6  5007               	movf	??i2__tdiv_to_l_,w,c
 28543  0163A8  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 28544  0163AA  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 28545  0163AC  A4D8               	btfss	status,2,c
 28546  0163AE  D009               	goto	i2l1832
 28547  0163B0  0E00               	movlw	0
 28548  0163B2  6E01               	movwf	?i2__tdiv_to_l_,c
 28549  0163B4  0E00               	movlw	0
 28550  0163B6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28551  0163B8  0E00               	movlw	0
 28552  0163BA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28553  0163BC  0E00               	movlw	0
 28554  0163BE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28555  0163C0  0012               	return	
 28556  0163C2                     i2l1832:
 28557  0163C2  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 28558  0163C4  0EFF               	movlw	255
 28559  0163C6  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 28560  0163C8  0EFF               	movlw	255
 28561  0163CA  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 28562  0163CC  0E00               	movlw	0
 28563  0163CE  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 28564  0163D0  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 28565  0163D2  0EFF               	movlw	255
 28566  0163D4  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 28567  0163D6  0EFF               	movlw	255
 28568  0163D8  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 28569  0163DA  0E00               	movlw	0
 28570  0163DC  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 28571  0163DE  0E00               	movlw	0
 28572  0163E0  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 28573  0163E2  0E00               	movlw	0
 28574  0163E4  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 28575  0163E6  0E00               	movlw	0
 28576  0163E8  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 28577  0163EA  0E00               	movlw	0
 28578  0163EC  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 28579  0163EE  0E7F               	movlw	127
 28580  0163F0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 28581  0163F2  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 28582  0163F4  0F98               	addlw	152
 28583  0163F6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 28584  0163F8  0E18               	movlw	24
 28585  0163FA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 28586  0163FC                     i2l1833:
 28587  0163FC  90D8               	bcf	status,0,c
 28588  0163FE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28589  016400  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28590  016402  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28591  016404  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28592  016406  5004               	movf	i2__tdiv_to_l_@f2,w,c
 28593  016408  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 28594  01640A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 28595  01640C  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 28596  01640E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 28597  016410  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 28598  016412  A0D8               	btfss	status,0,c
 28599  016414  D007               	goto	i2l1834
 28600  016416  5004               	movf	i2__tdiv_to_l_@f2,w,c
 28601  016418  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 28602  01641A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 28603  01641C  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 28604  01641E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 28605  016420  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 28606  016422  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 28607  016424                     i2l1834:
 28608  016424  90D8               	bcf	status,0,c
 28609  016426  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 28610  016428  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 28611  01642A  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 28612  01642C  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 28613  01642E  D7E6               	goto	i2l1833
 28614  016430  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 28615  016432  D016               	goto	i2l1836
 28616  016434  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28617  016436  0A80               	xorlw	128
 28618  016438  0F97               	addlw	151
 28619  01643A  B0D8               	btfsc	status,0,c
 28620  01643C  D009               	goto	i2l1837
 28621  01643E  0E00               	movlw	0
 28622  016440  6E01               	movwf	?i2__tdiv_to_l_,c
 28623  016442  0E00               	movlw	0
 28624  016444  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28625  016446  0E00               	movlw	0
 28626  016448  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28627  01644A  0E00               	movlw	0
 28628  01644C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28629  01644E  0012               	return	
 28630  016450                     i2l1837:
 28631  016450  90D8               	bcf	status,0,c
 28632  016452  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 28633  016454  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 28634  016456  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 28635  016458  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 28636  01645A  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 28637  01645C  D7F9               	goto	i2l1837
 28638  01645E  D015               	goto	i2u1583_40
 28639  016460                     i2l1836:
 28640  016460  0E17               	movlw	23
 28641  016462  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 28642  016464  D00F               	goto	i2l1842
 28643  016466  0E00               	movlw	0
 28644  016468  6E01               	movwf	?i2__tdiv_to_l_,c
 28645  01646A  0E00               	movlw	0
 28646  01646C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 28647  01646E  0E00               	movlw	0
 28648  016470  6E03               	movwf	?i2__tdiv_to_l_+2,c
 28649  016472  0E00               	movlw	0
 28650  016474  6E04               	movwf	?i2__tdiv_to_l_+3,c
 28651  016476  0012               	return	
 28652  016478  90D8               	bcf	status,0,c
 28653  01647A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 28654  01647C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 28655  01647E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 28656  016480  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 28657  016482  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 28658  016484                     i2l1842:
 28659  016484  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 28660  016486  A4D8               	btfss	status,2,c
 28661  016488  D7F7               	goto	i2l1843
 28662  01648A                     i2u1583_40:
 28663  01648A  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 28664  01648E  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 28665  016492  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 28666  016496  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 28667  01649A  0012               	return		;funcret
 28668  01649C                     __end_ofi2__tdiv_to_l_:
 28669                           	opt stack 0
 28670                           tosu	equ	0xFFF
 28671                           tosh	equ	0xFFE
 28672                           tosl	equ	0xFFD
 28673                           pclatu	equ	0xFFB
 28674                           pclath	equ	0xFFA
 28675                           tblptru	equ	0xFF8
 28676                           tblptrh	equ	0xFF7
 28677                           tblptrl	equ	0xFF6
 28678                           tablat	equ	0xFF5
 28679                           prodh	equ	0xFF4
 28680                           prodl	equ	0xFF3
 28681                           intcon	equ	0xFF2
 28682                           indf0	equ	0xFEF
 28683                           postinc0	equ	0xFEE
 28684                           fsr0h	equ	0xFEA
 28685                           fsr0l	equ	0xFE9
 28686                           wreg	equ	0xFE8
 28687                           indf1	equ	0xFE7
 28688                           postdec1	equ	0xFE5
 28689                           plusw1	equ	0xFE3
 28690                           fsr1h	equ	0xFE2
 28691                           fsr1l	equ	0xFE1
 28692                           bsr	equ	0xFE0
 28693                           indf2	equ	0xFDF
 28694                           postinc2	equ	0xFDE
 28695                           postdec2	equ	0xFDD
 28696                           plusw2	equ	0xFDB
 28697                           fsr2h	equ	0xFDA
 28698                           fsr2l	equ	0xFD9
 28699                           status	equ	0xFD8
 28700                           
 28701 ;; *************** function i2__div_to_l_ *****************
 28702 ;; Defined at:
 28703 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 28704 ;; Parameters:    Size  Location     Type
 28705 ;;  f1              4    0[COMRAM] unsigned long 
 28706 ;;  f2              4    4[COMRAM] unsigned long 
 28707 ;; Auto vars:     Size  Location     Type
 28708 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 28709 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 28710 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 28711 ;; Return value:  Size  Location     Type
 28712 ;;                  4    0[COMRAM] unsigned long 
 28713 ;; Registers used:
 28714 ;;		wreg, status,2, status,0
 28715 ;; Tracked objects:
 28716 ;;		On entry : 0/0
 28717 ;;		On exit  : 0/0
 28718 ;;		Unchanged: 0/0
 28719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28720 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28721 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28723 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28724 ;;Total ram usage:       14 bytes
 28725 ;; Hardware stack levels used:    1
 28726 ;; This function calls:
 28727 ;;		Nothing
 28728 ;; This function is called by:
 28729 ;;		i2_printf
 28730 ;; This function uses a non-reentrant model
 28731 ;;
 28732                           
 28733                           	psect	text94
 28734  0165C6                     __ptext94:
 28735                           	opt stack 0
 28736  0165C6                     i2__div_to_l_:
 28737                           	opt stack 16
 28738                           
 28739                           ;incstack = 0
 28740  0165C6  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 28741  0165C8  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 28742  0165CA  6E0E               	movwf	i2__div_to_l_@exp1,c
 28743  0165CC  500E               	movf	i2__div_to_l_@exp1,w,c
 28744  0165CE  A4D8               	btfss	status,2,c
 28745  0165D0  D009               	goto	i2l1726
 28746  0165D2  0E00               	movlw	0
 28747  0165D4  6E01               	movwf	?i2__div_to_l_,c
 28748  0165D6  0E00               	movlw	0
 28749  0165D8  6E02               	movwf	?i2__div_to_l_+1,c
 28750  0165DA  0E00               	movlw	0
 28751  0165DC  6E03               	movwf	?i2__div_to_l_+2,c
 28752  0165DE  0E00               	movlw	0
 28753  0165E0  6E04               	movwf	?i2__div_to_l_+3,c
 28754  0165E2  0012               	return	
 28755  0165E4                     i2l1726:
 28756  0165E4  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 28757  0165E6  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 28758  0165E8  6E0D               	movwf	i2__div_to_l_@cntr,c
 28759  0165EA  500D               	movf	i2__div_to_l_@cntr,w,c
 28760  0165EC  A4D8               	btfss	status,2,c
 28761  0165EE  D009               	goto	i2l1728
 28762  0165F0  0E00               	movlw	0
 28763  0165F2  6E01               	movwf	?i2__div_to_l_,c
 28764  0165F4  0E00               	movlw	0
 28765  0165F6  6E02               	movwf	?i2__div_to_l_+1,c
 28766  0165F8  0E00               	movlw	0
 28767  0165FA  6E03               	movwf	?i2__div_to_l_+2,c
 28768  0165FC  0E00               	movlw	0
 28769  0165FE  6E04               	movwf	?i2__div_to_l_+3,c
 28770  016600  0012               	return	
 28771  016602                     i2l1728:
 28772  016602  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 28773  016604  0EFF               	movlw	255
 28774  016606  1601               	andwf	i2__div_to_l_@f1,f,c
 28775  016608  0EFF               	movlw	255
 28776  01660A  1602               	andwf	i2__div_to_l_@f1+1,f,c
 28777  01660C  0EFF               	movlw	255
 28778  01660E  1603               	andwf	i2__div_to_l_@f1+2,f,c
 28779  016610  0E00               	movlw	0
 28780  016612  1604               	andwf	i2__div_to_l_@f1+3,f,c
 28781  016614  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 28782  016616  0EFF               	movlw	255
 28783  016618  1605               	andwf	i2__div_to_l_@f2,f,c
 28784  01661A  0EFF               	movlw	255
 28785  01661C  1606               	andwf	i2__div_to_l_@f2+1,f,c
 28786  01661E  0EFF               	movlw	255
 28787  016620  1607               	andwf	i2__div_to_l_@f2+2,f,c
 28788  016622  0E00               	movlw	0
 28789  016624  1608               	andwf	i2__div_to_l_@f2+3,f,c
 28790  016626  0E00               	movlw	0
 28791  016628  6E09               	movwf	i2__div_to_l_@quot,c
 28792  01662A  0E00               	movlw	0
 28793  01662C  6E0A               	movwf	i2__div_to_l_@quot+1,c
 28794  01662E  0E00               	movlw	0
 28795  016630  6E0B               	movwf	i2__div_to_l_@quot+2,c
 28796  016632  0E00               	movlw	0
 28797  016634  6E0C               	movwf	i2__div_to_l_@quot+3,c
 28798  016636  0E7F               	movlw	127
 28799  016638  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 28800  01663A  500D               	movf	i2__div_to_l_@cntr,w,c
 28801  01663C  0FA0               	addlw	160
 28802  01663E  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 28803  016640  0E20               	movlw	32
 28804  016642  6E0D               	movwf	i2__div_to_l_@cntr,c
 28805  016644  90D8               	bcf	status,0,c
 28806  016646  3609               	rlcf	i2__div_to_l_@quot,f,c
 28807  016648  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 28808  01664A  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 28809  01664C  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 28810  01664E  5005               	movf	i2__div_to_l_@f2,w,c
 28811  016650  5C01               	subwf	i2__div_to_l_@f1,w,c
 28812  016652  5006               	movf	i2__div_to_l_@f2+1,w,c
 28813  016654  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 28814  016656  5007               	movf	i2__div_to_l_@f2+2,w,c
 28815  016658  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 28816  01665A  5008               	movf	i2__div_to_l_@f2+3,w,c
 28817  01665C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 28818  01665E  A0D8               	btfss	status,0,c
 28819  016660  D009               	goto	i2l1730
 28820  016662  5005               	movf	i2__div_to_l_@f2,w,c
 28821  016664  5E01               	subwf	i2__div_to_l_@f1,f,c
 28822  016666  5006               	movf	i2__div_to_l_@f2+1,w,c
 28823  016668  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 28824  01666A  5007               	movf	i2__div_to_l_@f2+2,w,c
 28825  01666C  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 28826  01666E  5008               	movf	i2__div_to_l_@f2+3,w,c
 28827  016670  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 28828  016672  8009               	bsf	i2__div_to_l_@quot,0,c
 28829  016674                     i2l1730:
 28830  016674  90D8               	bcf	status,0,c
 28831  016676  3601               	rlcf	i2__div_to_l_@f1,f,c
 28832  016678  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 28833  01667A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 28834  01667C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 28835  01667E  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 28836  016680  D7E1               	goto	i2l1729
 28837  016682  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 28838  016684  D016               	goto	i2l1732
 28839  016686  500E               	movf	i2__div_to_l_@exp1,w,c
 28840  016688  0A80               	xorlw	128
 28841  01668A  0F9F               	addlw	159
 28842  01668C  B0D8               	btfsc	status,0,c
 28843  01668E  D009               	goto	i2l1733
 28844  016690  0E00               	movlw	0
 28845  016692  6E01               	movwf	?i2__div_to_l_,c
 28846  016694  0E00               	movlw	0
 28847  016696  6E02               	movwf	?i2__div_to_l_+1,c
 28848  016698  0E00               	movlw	0
 28849  01669A  6E03               	movwf	?i2__div_to_l_+2,c
 28850  01669C  0E00               	movlw	0
 28851  01669E  6E04               	movwf	?i2__div_to_l_+3,c
 28852  0166A0  0012               	return	
 28853  0166A2                     i2l1733:
 28854  0166A2  90D8               	bcf	status,0,c
 28855  0166A4  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 28856  0166A6  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 28857  0166A8  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 28858  0166AA  3209               	rrcf	i2__div_to_l_@quot,f,c
 28859  0166AC  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 28860  0166AE  D7F9               	goto	i2l1733
 28861  0166B0  D015               	goto	i2u1574_40
 28862  0166B2                     i2l1732:
 28863  0166B2  0E1F               	movlw	31
 28864  0166B4  640E               	cpfsgt	i2__div_to_l_@exp1,c
 28865  0166B6  D00F               	goto	i2l1738
 28866  0166B8  0E00               	movlw	0
 28867  0166BA  6E01               	movwf	?i2__div_to_l_,c
 28868  0166BC  0E00               	movlw	0
 28869  0166BE  6E02               	movwf	?i2__div_to_l_+1,c
 28870  0166C0  0E00               	movlw	0
 28871  0166C2  6E03               	movwf	?i2__div_to_l_+2,c
 28872  0166C4  0E00               	movlw	0
 28873  0166C6  6E04               	movwf	?i2__div_to_l_+3,c
 28874  0166C8  0012               	return	
 28875  0166CA  90D8               	bcf	status,0,c
 28876  0166CC  3609               	rlcf	i2__div_to_l_@quot,f,c
 28877  0166CE  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 28878  0166D0  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 28879  0166D2  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 28880  0166D4  060E               	decf	i2__div_to_l_@exp1,f,c
 28881  0166D6                     i2l1738:
 28882  0166D6  500E               	movf	i2__div_to_l_@exp1,w,c
 28883  0166D8  A4D8               	btfss	status,2,c
 28884  0166DA  D7F7               	goto	i2l1739
 28885  0166DC                     i2u1574_40:
 28886  0166DC  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 28887  0166E0  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 28888  0166E4  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 28889  0166E8  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 28890  0166EC  0012               	return		;funcret
 28891  0166EE                     __end_ofi2__div_to_l_:
 28892                           	opt stack 0
 28893                           tosu	equ	0xFFF
 28894                           tosh	equ	0xFFE
 28895                           tosl	equ	0xFFD
 28896                           pclatu	equ	0xFFB
 28897                           pclath	equ	0xFFA
 28898                           tblptru	equ	0xFF8
 28899                           tblptrh	equ	0xFF7
 28900                           tblptrl	equ	0xFF6
 28901                           tablat	equ	0xFF5
 28902                           prodh	equ	0xFF4
 28903                           prodl	equ	0xFF3
 28904                           intcon	equ	0xFF2
 28905                           indf0	equ	0xFEF
 28906                           postinc0	equ	0xFEE
 28907                           fsr0h	equ	0xFEA
 28908                           fsr0l	equ	0xFE9
 28909                           wreg	equ	0xFE8
 28910                           indf1	equ	0xFE7
 28911                           postdec1	equ	0xFE5
 28912                           plusw1	equ	0xFE3
 28913                           fsr1h	equ	0xFE2
 28914                           fsr1l	equ	0xFE1
 28915                           bsr	equ	0xFE0
 28916                           indf2	equ	0xFDF
 28917                           postinc2	equ	0xFDE
 28918                           postdec2	equ	0xFDD
 28919                           plusw2	equ	0xFDB
 28920                           fsr2h	equ	0xFDA
 28921                           fsr2l	equ	0xFD9
 28922                           status	equ	0xFD8
 28923                           
 28924 ;; *************** function i2___wmul *****************
 28925 ;; Defined at:
 28926 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 28927 ;; Parameters:    Size  Location     Type
 28928 ;;  multiplier      2    0[COMRAM] unsigned int 
 28929 ;;  multiplicand    2    2[COMRAM] unsigned int 
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;  __wmul          2    4[COMRAM] unsigned int 
 28932 ;; Return value:  Size  Location     Type
 28933 ;;                  2    0[COMRAM] unsigned int 
 28934 ;; Registers used:
 28935 ;;		wreg, status,2, status,0, prodl, prodh
 28936 ;; Tracked objects:
 28937 ;;		On entry : 0/0
 28938 ;;		On exit  : 0/0
 28939 ;;		Unchanged: 0/0
 28940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28945 ;;Total ram usage:        6 bytes
 28946 ;; Hardware stack levels used:    1
 28947 ;; This function calls:
 28948 ;;		Nothing
 28949 ;; This function is called by:
 28950 ;;		i2_printf
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text95
 28955  018176                     __ptext95:
 28956                           	opt stack 0
 28957  018176                     i2___wmul:
 28958                           	opt stack 16
 28959                           
 28960                           ;incstack = 0
 28961  018176  5001               	movf	i2___wmul@multiplier,w,c
 28962  018178  0203               	mulwf	i2___wmul@multiplicand,c
 28963  01817A  CFF3 F005          	movff	prodl,i2___wmul@product
 28964  01817E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 28965  018182  5001               	movf	i2___wmul@multiplier,w,c
 28966  018184  0204               	mulwf	i2___wmul@multiplicand+1,c
 28967  018186  50F3               	movf	prodl,w,c
 28968  018188  2606               	addwf	i2___wmul@product+1,f,c
 28969  01818A  5002               	movf	i2___wmul@multiplier+1,w,c
 28970  01818C  0203               	mulwf	i2___wmul@multiplicand,c
 28971  01818E  50F3               	movf	prodl,w,c
 28972  018190  2606               	addwf	i2___wmul@product+1,f,c
 28973  018192  C005  F001         	movff	i2___wmul@product,?i2___wmul
 28974  018196  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 28975  01819A  0012               	return	
 28976  01819C                     __end_ofi2___wmul:
 28977                           	opt stack 0
 28978                           tosu	equ	0xFFF
 28979                           tosh	equ	0xFFE
 28980                           tosl	equ	0xFFD
 28981                           pclatu	equ	0xFFB
 28982                           pclath	equ	0xFFA
 28983                           tblptru	equ	0xFF8
 28984                           tblptrh	equ	0xFF7
 28985                           tblptrl	equ	0xFF6
 28986                           tablat	equ	0xFF5
 28987                           prodh	equ	0xFF4
 28988                           prodl	equ	0xFF3
 28989                           intcon	equ	0xFF2
 28990                           indf0	equ	0xFEF
 28991                           postinc0	equ	0xFEE
 28992                           fsr0h	equ	0xFEA
 28993                           fsr0l	equ	0xFE9
 28994                           wreg	equ	0xFE8
 28995                           indf1	equ	0xFE7
 28996                           postdec1	equ	0xFE5
 28997                           plusw1	equ	0xFE3
 28998                           fsr1h	equ	0xFE2
 28999                           fsr1l	equ	0xFE1
 29000                           bsr	equ	0xFE0
 29001                           indf2	equ	0xFDF
 29002                           postinc2	equ	0xFDE
 29003                           postdec2	equ	0xFDD
 29004                           plusw2	equ	0xFDB
 29005                           fsr2h	equ	0xFDA
 29006                           fsr2l	equ	0xFD9
 29007                           status	equ	0xFD8
 29008                           
 29009 ;; *************** function i2___llmod *****************
 29010 ;; Defined at:
 29011 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 29012 ;; Parameters:    Size  Location     Type
 29013 ;;  dividend        4   13[COMRAM] unsigned long 
 29014 ;;  divisor         4   17[COMRAM] unsigned long 
 29015 ;; Auto vars:     Size  Location     Type
 29016 ;;  __llmod         1   21[COMRAM] unsigned char 
 29017 ;; Return value:  Size  Location     Type
 29018 ;;                  4   13[COMRAM] unsigned long 
 29019 ;; Registers used:
 29020 ;;		wreg, status,2, status,0
 29021 ;; Tracked objects:
 29022 ;;		On entry : 0/0
 29023 ;;		On exit  : 0/0
 29024 ;;		Unchanged: 0/0
 29025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29029 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29030 ;;Total ram usage:        9 bytes
 29031 ;; Hardware stack levels used:    1
 29032 ;; This function calls:
 29033 ;;		Nothing
 29034 ;; This function is called by:
 29035 ;;		i2_printf
 29036 ;; This function uses a non-reentrant model
 29037 ;;
 29038                           
 29039                           	psect	text96
 29040  0178D8                     __ptext96:
 29041                           	opt stack 0
 29042  0178D8                     i2___llmod:
 29043                           	opt stack 16
 29044                           
 29045                           ;incstack = 0
 29046  0178D8  5012               	movf	i2___llmod@divisor,w,c
 29047  0178DA  1013               	iorwf	i2___llmod@divisor+1,w,c
 29048  0178DC  1014               	iorwf	i2___llmod@divisor+2,w,c
 29049  0178DE  1015               	iorwf	i2___llmod@divisor+3,w,c
 29050  0178E0  B4D8               	btfsc	status,2,c
 29051  0178E2  D024               	goto	i2l1931
 29052  0178E4  0E01               	movlw	1
 29053  0178E6  6E16               	movwf	i2___llmod@counter,c
 29054  0178E8  D006               	goto	i2l1926
 29055  0178EA  90D8               	bcf	status,0,c
 29056  0178EC  3612               	rlcf	i2___llmod@divisor,f,c
 29057  0178EE  3613               	rlcf	i2___llmod@divisor+1,f,c
 29058  0178F0  3614               	rlcf	i2___llmod@divisor+2,f,c
 29059  0178F2  3615               	rlcf	i2___llmod@divisor+3,f,c
 29060  0178F4  2A16               	incf	i2___llmod@counter,f,c
 29061  0178F6                     i2l1926:
 29062  0178F6  AE15               	btfss	i2___llmod@divisor+3,7,c
 29063  0178F8  D7F8               	goto	i2l1927
 29064  0178FA                     i2u1590_40:
 29065  0178FA  5012               	movf	i2___llmod@divisor,w,c
 29066  0178FC  5C0E               	subwf	i2___llmod@dividend,w,c
 29067  0178FE  5013               	movf	i2___llmod@divisor+1,w,c
 29068  017900  580F               	subwfb	i2___llmod@dividend+1,w,c
 29069  017902  5014               	movf	i2___llmod@divisor+2,w,c
 29070  017904  5810               	subwfb	i2___llmod@dividend+2,w,c
 29071  017906  5015               	movf	i2___llmod@divisor+3,w,c
 29072  017908  5811               	subwfb	i2___llmod@dividend+3,w,c
 29073  01790A  A0D8               	btfss	status,0,c
 29074  01790C  D008               	goto	i2l1930
 29075  01790E  5012               	movf	i2___llmod@divisor,w,c
 29076  017910  5E0E               	subwf	i2___llmod@dividend,f,c
 29077  017912  5013               	movf	i2___llmod@divisor+1,w,c
 29078  017914  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 29079  017916  5014               	movf	i2___llmod@divisor+2,w,c
 29080  017918  5A10               	subwfb	i2___llmod@dividend+2,f,c
 29081  01791A  5015               	movf	i2___llmod@divisor+3,w,c
 29082  01791C  5A11               	subwfb	i2___llmod@dividend+3,f,c
 29083  01791E                     i2l1930:
 29084  01791E  90D8               	bcf	status,0,c
 29085  017920  3215               	rrcf	i2___llmod@divisor+3,f,c
 29086  017922  3214               	rrcf	i2___llmod@divisor+2,f,c
 29087  017924  3213               	rrcf	i2___llmod@divisor+1,f,c
 29088  017926  3212               	rrcf	i2___llmod@divisor,f,c
 29089  017928  2E16               	decfsz	i2___llmod@counter,f,c
 29090  01792A  D7E7               	goto	i2u1590_40
 29091  01792C                     i2l1931:
 29092  01792C  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 29093  017930  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 29094  017934  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 29095  017938  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 29096  01793C  0012               	return		;funcret
 29097  01793E                     __end_ofi2___llmod:
 29098                           	opt stack 0
 29099                           tosu	equ	0xFFF
 29100                           tosh	equ	0xFFE
 29101                           tosl	equ	0xFFD
 29102                           pclatu	equ	0xFFB
 29103                           pclath	equ	0xFFA
 29104                           tblptru	equ	0xFF8
 29105                           tblptrh	equ	0xFF7
 29106                           tblptrl	equ	0xFF6
 29107                           tablat	equ	0xFF5
 29108                           prodh	equ	0xFF4
 29109                           prodl	equ	0xFF3
 29110                           intcon	equ	0xFF2
 29111                           indf0	equ	0xFEF
 29112                           postinc0	equ	0xFEE
 29113                           fsr0h	equ	0xFEA
 29114                           fsr0l	equ	0xFE9
 29115                           wreg	equ	0xFE8
 29116                           indf1	equ	0xFE7
 29117                           postdec1	equ	0xFE5
 29118                           plusw1	equ	0xFE3
 29119                           fsr1h	equ	0xFE2
 29120                           fsr1l	equ	0xFE1
 29121                           bsr	equ	0xFE0
 29122                           indf2	equ	0xFDF
 29123                           postinc2	equ	0xFDE
 29124                           postdec2	equ	0xFDD
 29125                           plusw2	equ	0xFDB
 29126                           fsr2h	equ	0xFDA
 29127                           fsr2l	equ	0xFD9
 29128                           status	equ	0xFD8
 29129                           
 29130 ;; *************** function i2___lldiv *****************
 29131 ;; Defined at:
 29132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 29133 ;; Parameters:    Size  Location     Type
 29134 ;;  dividend        4    0[COMRAM] unsigned long 
 29135 ;;  divisor         4    4[COMRAM] unsigned long 
 29136 ;; Auto vars:     Size  Location     Type
 29137 ;;  __lldiv         4    8[COMRAM] unsigned long 
 29138 ;;  __lldiv         1   12[COMRAM] unsigned char 
 29139 ;; Return value:  Size  Location     Type
 29140 ;;                  4    0[COMRAM] unsigned long 
 29141 ;; Registers used:
 29142 ;;		wreg, status,2, status,0
 29143 ;; Tracked objects:
 29144 ;;		On entry : 0/0
 29145 ;;		On exit  : 0/0
 29146 ;;		Unchanged: 0/0
 29147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29148 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29149 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29151 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29152 ;;Total ram usage:       13 bytes
 29153 ;; Hardware stack levels used:    1
 29154 ;; This function calls:
 29155 ;;		Nothing
 29156 ;; This function is called by:
 29157 ;;		i2_printf
 29158 ;; This function uses a non-reentrant model
 29159 ;;
 29160                           
 29161                           	psect	text97
 29162  0174D6                     __ptext97:
 29163                           	opt stack 0
 29164  0174D6                     i2___lldiv:
 29165                           	opt stack 16
 29166                           
 29167                           ;incstack = 0
 29168  0174D6  0E00               	movlw	0
 29169  0174D8  6E09               	movwf	i2___lldiv@quotient,c
 29170  0174DA  0E00               	movlw	0
 29171  0174DC  6E0A               	movwf	i2___lldiv@quotient+1,c
 29172  0174DE  0E00               	movlw	0
 29173  0174E0  6E0B               	movwf	i2___lldiv@quotient+2,c
 29174  0174E2  0E00               	movlw	0
 29175  0174E4  6E0C               	movwf	i2___lldiv@quotient+3,c
 29176  0174E6  5005               	movf	i2___lldiv@divisor,w,c
 29177  0174E8  1006               	iorwf	i2___lldiv@divisor+1,w,c
 29178  0174EA  1007               	iorwf	i2___lldiv@divisor+2,w,c
 29179  0174EC  1008               	iorwf	i2___lldiv@divisor+3,w,c
 29180  0174EE  B4D8               	btfsc	status,2,c
 29181  0174F0  D02A               	goto	i2l1921
 29182  0174F2  0E01               	movlw	1
 29183  0174F4  6E0D               	movwf	i2___lldiv@counter,c
 29184  0174F6  D006               	goto	i2l1916
 29185  0174F8  90D8               	bcf	status,0,c
 29186  0174FA  3605               	rlcf	i2___lldiv@divisor,f,c
 29187  0174FC  3606               	rlcf	i2___lldiv@divisor+1,f,c
 29188  0174FE  3607               	rlcf	i2___lldiv@divisor+2,f,c
 29189  017500  3608               	rlcf	i2___lldiv@divisor+3,f,c
 29190  017502  2A0D               	incf	i2___lldiv@counter,f,c
 29191  017504                     i2l1916:
 29192  017504  AE08               	btfss	i2___lldiv@divisor+3,7,c
 29193  017506  D7F8               	goto	i2l1917
 29194  017508                     i2u1587_40:
 29195  017508  90D8               	bcf	status,0,c
 29196  01750A  3609               	rlcf	i2___lldiv@quotient,f,c
 29197  01750C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 29198  01750E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 29199  017510  360C               	rlcf	i2___lldiv@quotient+3,f,c
 29200  017512  5005               	movf	i2___lldiv@divisor,w,c
 29201  017514  5C01               	subwf	i2___lldiv@dividend,w,c
 29202  017516  5006               	movf	i2___lldiv@divisor+1,w,c
 29203  017518  5802               	subwfb	i2___lldiv@dividend+1,w,c
 29204  01751A  5007               	movf	i2___lldiv@divisor+2,w,c
 29205  01751C  5803               	subwfb	i2___lldiv@dividend+2,w,c
 29206  01751E  5008               	movf	i2___lldiv@divisor+3,w,c
 29207  017520  5804               	subwfb	i2___lldiv@dividend+3,w,c
 29208  017522  A0D8               	btfss	status,0,c
 29209  017524  D009               	goto	i2l1920
 29210  017526  5005               	movf	i2___lldiv@divisor,w,c
 29211  017528  5E01               	subwf	i2___lldiv@dividend,f,c
 29212  01752A  5006               	movf	i2___lldiv@divisor+1,w,c
 29213  01752C  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 29214  01752E  5007               	movf	i2___lldiv@divisor+2,w,c
 29215  017530  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 29216  017532  5008               	movf	i2___lldiv@divisor+3,w,c
 29217  017534  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 29218  017536  8009               	bsf	i2___lldiv@quotient,0,c
 29219  017538                     i2l1920:
 29220  017538  90D8               	bcf	status,0,c
 29221  01753A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 29222  01753C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 29223  01753E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 29224  017540  3205               	rrcf	i2___lldiv@divisor,f,c
 29225  017542  2E0D               	decfsz	i2___lldiv@counter,f,c
 29226  017544  D7E1               	goto	i2u1587_40
 29227  017546                     i2l1921:
 29228  017546  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 29229  01754A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 29230  01754E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 29231  017552  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 29232  017556  0012               	return		;funcret
 29233  017558                     __end_ofi2___lldiv:
 29234                           	opt stack 0
 29235                           tosu	equ	0xFFF
 29236                           tosh	equ	0xFFE
 29237                           tosl	equ	0xFFD
 29238                           pclatu	equ	0xFFB
 29239                           pclath	equ	0xFFA
 29240                           tblptru	equ	0xFF8
 29241                           tblptrh	equ	0xFF7
 29242                           tblptrl	equ	0xFF6
 29243                           tablat	equ	0xFF5
 29244                           prodh	equ	0xFF4
 29245                           prodl	equ	0xFF3
 29246                           intcon	equ	0xFF2
 29247                           indf0	equ	0xFEF
 29248                           postinc0	equ	0xFEE
 29249                           fsr0h	equ	0xFEA
 29250                           fsr0l	equ	0xFE9
 29251                           wreg	equ	0xFE8
 29252                           indf1	equ	0xFE7
 29253                           postdec1	equ	0xFE5
 29254                           plusw1	equ	0xFE3
 29255                           fsr1h	equ	0xFE2
 29256                           fsr1l	equ	0xFE1
 29257                           bsr	equ	0xFE0
 29258                           indf2	equ	0xFDF
 29259                           postinc2	equ	0xFDE
 29260                           postdec2	equ	0xFDD
 29261                           plusw2	equ	0xFDB
 29262                           fsr2h	equ	0xFDA
 29263                           fsr2l	equ	0xFD9
 29264                           status	equ	0xFD8
 29265                           
 29266 ;; *************** function _ADCC_ThresholdISR *****************
 29267 ;; Defined at:
 29268 ;;		line 298 in file "mcc_generated_files/adcc.c"
 29269 ;; Parameters:    Size  Location     Type
 29270 ;;		None
 29271 ;; Auto vars:     Size  Location     Type
 29272 ;;		None
 29273 ;; Return value:  Size  Location     Type
 29274 ;;                  1    wreg      void 
 29275 ;; Registers used:
 29276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29277 ;; Tracked objects:
 29278 ;;		On entry : 0/0
 29279 ;;		On exit  : 0/0
 29280 ;;		Unchanged: 0/0
 29281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29286 ;;Total ram usage:        0 bytes
 29287 ;; Hardware stack levels used:    1
 29288 ;; Hardware stack levels required when called:    7
 29289 ;; This function calls:
 29290 ;;		Absolute function
 29291 ;;		_ADCC_DefaultInterruptHandler
 29292 ;;		_ADCPostProcessingCallback
 29293 ;; This function is called by:
 29294 ;;		_INTERRUPT_InterruptManagerHigh
 29295 ;; This function uses a non-reentrant model
 29296 ;;
 29297                           
 29298                           	psect	text98
 29299  018102                     __ptext98:
 29300                           	opt stack 0
 29301  018102                     _ADCC_ThresholdISR:
 29302                           	opt stack 11
 29303                           
 29304                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 29305                           
 29306                           ;incstack = 0
 29307  018102  010E               	movlb	14	; () banked
 29308  018104  9334               	bcf	52,1,b	;volatile
 29309                           
 29310                           ; BSR set to: 14
 29311                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 29312  018106  0102               	movlb	2	; () banked
 29313  018108  516A               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29314  01810A  116B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29315  01810C  116C               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29316  01810E  B4D8               	btfsc	status,2,c
 29317  018110  0012               	return	
 29318                           
 29319                           ; BSR set to: 2
 29320                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 29321  018112  D801               	call	i2u1802_48
 29322  018114  0012               	return	
 29323  018116                     i2u1802_48:
 29324  018116  0005               	push	
 29325  018118  6EFA               	movwf	pclath,c
 29326  01811A  516A               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29327  01811C  6EFD               	movwf	tosl,c
 29328  01811E  516B               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29329  018120  6EFE               	movwf	tosh,c
 29330  018122  516C               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29331  018124  6EFF               	movwf	tosu,c
 29332  018126  50FA               	movf	pclath,w,c
 29333  018128  0012               	return		;indir
 29334  01812A                     __end_of_ADCC_ThresholdISR:
 29335                           	opt stack 0
 29336                           tosu	equ	0xFFF
 29337                           tosh	equ	0xFFE
 29338                           tosl	equ	0xFFD
 29339                           pclatu	equ	0xFFB
 29340                           pclath	equ	0xFFA
 29341                           tblptru	equ	0xFF8
 29342                           tblptrh	equ	0xFF7
 29343                           tblptrl	equ	0xFF6
 29344                           tablat	equ	0xFF5
 29345                           prodh	equ	0xFF4
 29346                           prodl	equ	0xFF3
 29347                           intcon	equ	0xFF2
 29348                           indf0	equ	0xFEF
 29349                           postinc0	equ	0xFEE
 29350                           fsr0h	equ	0xFEA
 29351                           fsr0l	equ	0xFE9
 29352                           wreg	equ	0xFE8
 29353                           indf1	equ	0xFE7
 29354                           postdec1	equ	0xFE5
 29355                           plusw1	equ	0xFE3
 29356                           fsr1h	equ	0xFE2
 29357                           fsr1l	equ	0xFE1
 29358                           bsr	equ	0xFE0
 29359                           indf2	equ	0xFDF
 29360                           postinc2	equ	0xFDE
 29361                           postdec2	equ	0xFDD
 29362                           plusw2	equ	0xFDB
 29363                           fsr2h	equ	0xFDA
 29364                           fsr2l	equ	0xFD9
 29365                           status	equ	0xFD8
 29366                           
 29367 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 29368 ;; Defined at:
 29369 ;;		line 310 in file "mcc_generated_files/adcc.c"
 29370 ;; Parameters:    Size  Location     Type
 29371 ;;		None
 29372 ;; Auto vars:     Size  Location     Type
 29373 ;;		None
 29374 ;; Return value:  Size  Location     Type
 29375 ;;                  1    wreg      void 
 29376 ;; Registers used:
 29377 ;;		None
 29378 ;; Tracked objects:
 29379 ;;		On entry : 0/0
 29380 ;;		On exit  : 0/0
 29381 ;;		Unchanged: 0/0
 29382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29387 ;;Total ram usage:        0 bytes
 29388 ;; Hardware stack levels used:    1
 29389 ;; This function calls:
 29390 ;;		Nothing
 29391 ;; This function is called by:
 29392 ;;		_ADCC_Initialize
 29393 ;;		_ADCC_ThresholdISR
 29394 ;; This function uses a non-reentrant model
 29395 ;;
 29396                           
 29397                           	psect	text99
 29398  0183EE                     __ptext99:
 29399                           	opt stack 0
 29400  0183EE                     _ADCC_DefaultInterruptHandler:
 29401                           	opt stack 17
 29402                           
 29403                           ;incstack = 0
 29404  0183EE  0012               	return		;funcret
 29405  0183F0                     __end_of_ADCC_DefaultInterruptHandler:
 29406                           	opt stack 0
 29407                           tosu	equ	0xFFF
 29408                           tosh	equ	0xFFE
 29409                           tosl	equ	0xFFD
 29410                           pclatu	equ	0xFFB
 29411                           pclath	equ	0xFFA
 29412                           tblptru	equ	0xFF8
 29413                           tblptrh	equ	0xFF7
 29414                           tblptrl	equ	0xFF6
 29415                           tablat	equ	0xFF5
 29416                           prodh	equ	0xFF4
 29417                           prodl	equ	0xFF3
 29418                           intcon	equ	0xFF2
 29419                           indf0	equ	0xFEF
 29420                           postinc0	equ	0xFEE
 29421                           fsr0h	equ	0xFEA
 29422                           fsr0l	equ	0xFE9
 29423                           wreg	equ	0xFE8
 29424                           indf1	equ	0xFE7
 29425                           postdec1	equ	0xFE5
 29426                           plusw1	equ	0xFE3
 29427                           fsr1h	equ	0xFE2
 29428                           fsr1l	equ	0xFE1
 29429                           bsr	equ	0xFE0
 29430                           indf2	equ	0xFDF
 29431                           postinc2	equ	0xFDE
 29432                           postdec2	equ	0xFDD
 29433                           plusw2	equ	0xFDB
 29434                           fsr2h	equ	0xFDA
 29435                           fsr2l	equ	0xFD9
 29436                           status	equ	0xFD8
 29437                           
 29438 ;; *************** function _ADCPostProcessingCallback *****************
 29439 ;; Defined at:
 29440 ;;		line 161 in file "main.c"
 29441 ;; Parameters:    Size  Location     Type
 29442 ;;		None
 29443 ;; Auto vars:     Size  Location     Type
 29444 ;;  current_adc_    1  117[BANK0 ] enum E17425
 29445 ;; Return value:  Size  Location     Type
 29446 ;;                  1    wreg      void 
 29447 ;; Registers used:
 29448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29449 ;; Tracked objects:
 29450 ;;		On entry : 0/0
 29451 ;;		On exit  : 0/0
 29452 ;;		Unchanged: 0/0
 29453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29455 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29457 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29458 ;;Total ram usage:       21 bytes
 29459 ;; Hardware stack levels used:    1
 29460 ;; Hardware stack levels required when called:    6
 29461 ;; This function calls:
 29462 ;;		_ADCC_GetConversionResult
 29463 ;;		_ADCC_GetFilterValue
 29464 ;;		_ADCC_HasAccumulatorOverflowed
 29465 ;;		_ADCC_StopConversion
 29466 ;;		_abs
 29467 ;;		_currentMeasuredToPeak
 29468 ;;		_peakToRMS
 29469 ;;		i2_TMR7_StopTimer
 29470 ;;		i2___fladd
 29471 ;;		i2___fldiv
 29472 ;;		i2___flge
 29473 ;;		i2___flmul
 29474 ;;		i2___flneg
 29475 ;;		i2___fltol
 29476 ;;		i2___xxtofl
 29477 ;; This function is called by:
 29478 ;;		_main
 29479 ;;		_ADCC_ThresholdISR
 29480 ;; This function uses a non-reentrant model
 29481 ;;
 29482                           
 29483                           	psect	text100
 29484  0123E4                     __ptext100:
 29485                           	opt stack 0
 29486  0123E4                     _ADCPostProcessingCallback:
 29487                           	opt stack 11
 29488                           
 29489                           ;main.c: 164: ADCC_StopConversion();
 29490                           
 29491                           ;incstack = 0
 29492  0123E4  ECF2  F0C1         	call	_ADCC_StopConversion	;wreg free
 29493                           
 29494                           ;main.c: 167: adcc_channel_t current_adc_channel = ADPCH;
 29495  0123E8  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 29496                           
 29497                           ;main.c: 170: switch (current_adc_channel) {
 29498  0123EC  EFCA  F096         	goto	i2l957
 29499  0123F0                     
 29500                           ;main.c: 174: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 29501  0123F0  EC5B  F0C1         	call	_ADCC_GetConversionResult	;wreg free
 29502  0123F4  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29503  0123F8  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29504  0123FC  6A07               	clrf	i2___xxtofl@val+2,c
 29505  0123FE  6A08               	clrf	i2___xxtofl@val+3,c
 29506  012400  0E00               	movlw	0
 29507  012402  EC73  F0B0         	call	i2___xxtofl
 29508  012406  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29509  01240A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29510  01240E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29511  012412  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29512  012416  0E0D               	movlw	13
 29513  012418  6E34               	movwf	i2___flmul@a,c
 29514  01241A  0E68               	movlw	104
 29515  01241C  6E35               	movwf	i2___flmul@a+1,c
 29516  01241E  0E53               	movlw	83
 29517  012420  6E36               	movwf	i2___flmul@a+2,c
 29518  012422  0E3B               	movlw	59
 29519  012424  6E37               	movwf	i2___flmul@a+3,c
 29520  012426  ECD1  F09E         	call	i2___flmul	;wreg free
 29521  01242A  C030  F260         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 29522  01242E  C031  F261         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 29523  012432  C032  F262         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 29524  012436  C033  F263         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 29525                           
 29526                           ;main.c: 176: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 29527  01243A  0E0A               	movlw	10
 29528  01243C  6E34               	movwf	i2___flge@ff1,c
 29529  01243E  0ED7               	movlw	215
 29530  012440  6E35               	movwf	i2___flge@ff1+1,c
 29531  012442  0E23               	movlw	35
 29532  012444  6E36               	movwf	i2___flge@ff1+2,c
 29533  012446  0E3C               	movlw	60
 29534  012448  6E37               	movwf	i2___flge@ff1+3,c
 29535  01244A  C260  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 29536  01244E  C261  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 29537  012452  C262  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 29538  012456  C263  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 29539  01245A  EC08  F0B4         	call	i2___flge	;wreg free
 29540  01245E  A0D8               	btfss	status,0,c
 29541  012460  D005               	goto	i2u1596_40
 29542  012462  ECCF  F0C1         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 29543  012466  0900               	iorlw	0
 29544  012468  B4D8               	btfsc	status,2,c
 29545  01246A  D007               	goto	i2l959
 29546  01246C                     i2u1596_40:
 29547                           
 29548                           ;main.c: 178: LATFbits.LATF3 = 1;
 29549  01246C  867E               	bsf	3966,3,c	;volatile
 29550                           
 29551                           ;main.c: 179: adc_error_flag = 1;
 29552  01246E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29553                           
 29554                           ;main.c: 181: PIE5bits.TMR7IE = 0;
 29555  012470  010E               	movlb	14	; () banked
 29556  012472  9D2E               	bcf	46,6,b	;volatile
 29557                           
 29558                           ; BSR set to: 14
 29559                           ;main.c: 182: TMR7_StopTimer();
 29560  012474  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 29561                           
 29562                           ;main.c: 183: return;
 29563  012478  0012               	return	
 29564  01247A                     i2l959:
 29565                           
 29566                           ;main.c: 185: }
 29567                           ;main.c: 187: next_channel = channel_FVR_buf1;
 29568  01247A  0E3F               	movlw	63
 29569  01247C  0101               	movlb	1	; () banked
 29570  01247E  6FE2               	movwf	_next_channel& (0+255),b
 29571                           
 29572                           ;main.c: 189: break;
 29573  012480  0012               	return	
 29574  012482                     
 29575                           ;main.c: 194: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 29576                           
 29577                           ; BSR set to: 1
 29578  012482  0E0D               	movlw	13
 29579  012484  6E34               	movwf	i2___flmul@a,c
 29580  012486  0E68               	movlw	104
 29581  012488  6E35               	movwf	i2___flmul@a+1,c
 29582  01248A  0E53               	movlw	83
 29583  01248C  6E36               	movwf	i2___flmul@a+2,c
 29584  01248E  0E3B               	movlw	59
 29585  012490  6E37               	movwf	i2___flmul@a+3,c
 29586  012492  EC5B  F0C1         	call	_ADCC_GetConversionResult	;wreg free
 29587  012496  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 29588  01249A  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 29589  01249E  6A07               	clrf	i2___xxtofl@val+2,c
 29590  0124A0  6A08               	clrf	i2___xxtofl@val+3,c
 29591  0124A2  0E00               	movlw	0
 29592  0124A4  EC73  F0B0         	call	i2___xxtofl
 29593  0124A8  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29594  0124AC  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29595  0124B0  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29596  0124B4  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29597  0124B8  ECD1  F09E         	call	i2___flmul	;wreg free
 29598  0124BC  C030  F056         	movff	?i2___flmul,i2___fladd@b
 29599  0124C0  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 29600  0124C4  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 29601  0124C8  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 29602  0124CC  C260  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 29603  0124D0  C261  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 29604  0124D4  C262  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 29605  0124D8  C263  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 29606  0124DC  EC18  F0A2         	call	i2___fladd	;wreg free
 29607  0124E0  C056  F1DE         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 29608  0124E4  C057  F1DF         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 29609  0124E8  C058  F1E0         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 29610  0124EC  C059  F1E1         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 29611                           
 29612                           ;main.c: 195: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 29613  0124F0  0E6F               	movlw	111
 29614  0124F2  6E13               	movwf	i2___fldiv@b,c
 29615  0124F4  0E12               	movlw	18
 29616  0124F6  6E14               	movwf	i2___fldiv@b+1,c
 29617  0124F8  0E03               	movlw	3
 29618  0124FA  6E15               	movwf	i2___fldiv@b+2,c
 29619  0124FC  0E40               	movlw	64
 29620  0124FE  6E16               	movwf	i2___fldiv@b+3,c
 29621  012500  C1DE  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 29622  012504  C1DF  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 29623  012508  C1E0  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 29624  01250C  C1E1  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 29625  012510  ECD8  F0AA         	call	i2___fldiv	;wreg free
 29626  012514  C013  F25C         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 29627  012518  C014  F25D         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 29628  01251C  C015  F25E         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 29629  012520  C016  F25F         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 29630                           
 29631                           ;main.c: 197: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 29632  012524  0E00               	movlw	0
 29633  012526  6E34               	movwf	i2___flge@ff1,c
 29634  012528  0E00               	movlw	0
 29635  01252A  6E35               	movwf	i2___flge@ff1+1,c
 29636  01252C  0E20               	movlw	32
 29637  01252E  6E36               	movwf	i2___flge@ff1+2,c
 29638  012530  0E40               	movlw	64
 29639  012532  6E37               	movwf	i2___flge@ff1+3,c
 29640  012534  C1DE  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 29641  012538  C1DF  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 29642  01253C  C1E0  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 29643  012540  C1E1  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 29644  012544  EC08  F0B4         	call	i2___flge	;wreg free
 29645  012548  A0D8               	btfss	status,0,c
 29646  01254A  D019               	goto	i2u1599_40
 29647  01254C  C1DE  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 29648  012550  C1DF  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 29649  012554  C1E0  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 29650  012558  C1E1  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 29651  01255C  0E00               	movlw	0
 29652  01255E  6E38               	movwf	i2___flge@ff2,c
 29653  012560  0E00               	movlw	0
 29654  012562  6E39               	movwf	i2___flge@ff2+1,c
 29655  012564  0E00               	movlw	0
 29656  012566  6E3A               	movwf	i2___flge@ff2+2,c
 29657  012568  0E40               	movlw	64
 29658  01256A  6E3B               	movwf	i2___flge@ff2+3,c
 29659  01256C  EC08  F0B4         	call	i2___flge	;wreg free
 29660  012570  A0D8               	btfss	status,0,c
 29661  012572  D005               	goto	i2u1599_40
 29662  012574  ECCF  F0C1         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 29663  012578  0900               	iorlw	0
 29664  01257A  B4D8               	btfsc	status,2,c
 29665  01257C  D007               	goto	i2l965
 29666  01257E                     i2u1599_40:
 29667                           
 29668                           ;main.c: 199: LATFbits.LATF3 = 1;
 29669  01257E  867E               	bsf	3966,3,c	;volatile
 29670                           
 29671                           ;main.c: 200: adc_error_flag = 1;
 29672  012580  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29673                           
 29674                           ;main.c: 202: PIE5bits.TMR7IE = 0;
 29675  012582  010E               	movlb	14	; () banked
 29676  012584  9D2E               	bcf	46,6,b	;volatile
 29677                           
 29678                           ; BSR set to: 14
 29679                           ;main.c: 203: TMR7_StopTimer();
 29680  012586  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 29681                           
 29682                           ;main.c: 204: return;
 29683  01258A  0012               	return	
 29684  01258C                     i2l965:
 29685                           
 29686                           ;main.c: 206: }
 29687                           ;main.c: 208: next_channel = POS3P3_ADC;
 29688  01258C  0E22               	movlw	34
 29689  01258E  0101               	movlb	1	; () banked
 29690  012590  6FE2               	movwf	_next_channel& (0+255),b
 29691                           
 29692                           ;main.c: 210: break;
 29693  012592  0012               	return	
 29694  012594                     
 29695                           ;main.c: 215: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 29696                           
 29697                           ; BSR set to: 1
 29698  012594  C25C  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 29699  012598  C25D  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 29700  01259C  C25E  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 29701  0125A0  C25F  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 29702  0125A4  EC51  F0C1         	call	_ADCC_GetFilterValue	;wreg free
 29703  0125A8  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 29704  0125AC  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 29705  0125B0  6A07               	clrf	i2___xxtofl@val+2,c
 29706  0125B2  6A08               	clrf	i2___xxtofl@val+3,c
 29707  0125B4  0E00               	movlw	0
 29708  0125B6  EC73  F0B0         	call	i2___xxtofl
 29709  0125BA  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29710  0125BE  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29711  0125C2  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29712  0125C6  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29713  0125CA  ECD1  F09E         	call	i2___flmul	;wreg free
 29714  0125CE  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4088
 29715  0125D2  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4088+1
 29716  0125D6  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4088+2
 29717  0125DA  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4088+3
 29718                           
 29719                           ;main.c: 215: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 29720  0125DE  C0D6  F030         	movff	_ADCPostProcessingCallback$4088,i2___flmul@b
 29721  0125E2  C0D7  F031         	movff	_ADCPostProcessingCallback$4088+1,i2___flmul@b+1
 29722  0125E6  C0D8  F032         	movff	_ADCPostProcessingCallback$4088+2,i2___flmul@b+2
 29723  0125EA  C0D9  F033         	movff	_ADCPostProcessingCallback$4088+3,i2___flmul@b+3
 29724  0125EE  0E0D               	movlw	13
 29725  0125F0  6E34               	movwf	i2___flmul@a,c
 29726  0125F2  0E68               	movlw	104
 29727  0125F4  6E35               	movwf	i2___flmul@a+1,c
 29728  0125F6  0ED3               	movlw	211
 29729  0125F8  6E36               	movwf	i2___flmul@a+2,c
 29730  0125FA  0E3B               	movlw	59
 29731  0125FC  6E37               	movwf	i2___flmul@a+3,c
 29732  0125FE  ECD1  F09E         	call	i2___flmul	;wreg free
 29733  012602  C030  F0F6         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 29734  012606  C031  F0F7         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 29735  01260A  C032  F0F8         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 29736  01260E  C033  F0F9         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 29737                           
 29738                           ;main.c: 217: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 29739  012612  0E00               	movlw	0
 29740  012614  6E34               	movwf	i2___flge@ff1,c
 29741  012616  0E00               	movlw	0
 29742  012618  6E35               	movwf	i2___flge@ff1+1,c
 29743  01261A  0E60               	movlw	96
 29744  01261C  6E36               	movwf	i2___flge@ff1+2,c
 29745  01261E  0E40               	movlw	64
 29746  012620  6E37               	movwf	i2___flge@ff1+3,c
 29747  012622  C0F6  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 29748  012626  C0F7  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 29749  01262A  C0F8  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 29750  01262E  C0F9  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 29751  012632  EC08  F0B4         	call	i2___flge	;wreg free
 29752  012636  A0D8               	btfss	status,0,c
 29753  012638  D005               	goto	i2u1601_40
 29754  01263A  ECCF  F0C1         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 29755  01263E  0900               	iorlw	0
 29756  012640  B4D8               	btfsc	status,2,c
 29757  012642  D007               	goto	i2l969
 29758  012644                     i2u1601_40:
 29759                           
 29760                           ;main.c: 219: LATFbits.LATF3 = 1;
 29761  012644  867E               	bsf	3966,3,c	;volatile
 29762                           
 29763                           ;main.c: 220: adc_error_flag = 1;
 29764  012646  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29765                           
 29766                           ;main.c: 222: PIE5bits.TMR7IE = 0;
 29767  012648  010E               	movlb	14	; () banked
 29768  01264A  9D2E               	bcf	46,6,b	;volatile
 29769                           
 29770                           ; BSR set to: 14
 29771                           ;main.c: 223: TMR7_StopTimer();
 29772  01264C  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 29773                           
 29774                           ;main.c: 224: return;
 29775  012650  0012               	return	
 29776  012652                     i2l969:
 29777                           
 29778                           ;main.c: 226: }
 29779                           ;main.c: 228: next_channel = ISNS_ADC;
 29780  012652  0E00               	movlw	0
 29781  012654  0101               	movlb	1	; () banked
 29782  012656  6FE2               	movwf	_next_channel& (0+255),b
 29783                           
 29784                           ;main.c: 230: break;
 29785  012658  0012               	return	
 29786  01265A                     
 29787                           ;main.c: 235: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 29788                           
 29789                           ; BSR set to: 1
 29790  01265A  0E00               	movlw	0
 29791  01265C  6E17               	movwf	i2___fldiv@a,c
 29792  01265E  0EC0               	movlw	192
 29793  012660  6E18               	movwf	i2___fldiv@a+1,c
 29794  012662  0E7F               	movlw	127
 29795  012664  6E19               	movwf	i2___fldiv@a+2,c
 29796  012666  0E44               	movlw	68
 29797  012668  6E1A               	movwf	i2___fldiv@a+3,c
 29798  01266A  C0F6  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 29799  01266E  C0F7  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 29800  012672  C0F8  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 29801  012676  C0F9  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 29802  01267A  ECD8  F0AA         	call	i2___fldiv	;wreg free
 29803  01267E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 29804  012682  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 29805  012686  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 29806  01268A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 29807  01268E  EC51  F0C1         	call	_ADCC_GetFilterValue	;wreg free
 29808  012692  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 29809  012696  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 29810  01269A  6A07               	clrf	i2___xxtofl@val+2,c
 29811  01269C  6A08               	clrf	i2___xxtofl@val+3,c
 29812  01269E  0E00               	movlw	0
 29813  0126A0  EC73  F0B0         	call	i2___xxtofl
 29814  0126A4  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 29815  0126A8  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 29816  0126AC  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 29817  0126B0  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 29818  0126B4  ECD1  F09E         	call	i2___flmul	;wreg free
 29819  0126B8  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4088
 29820  0126BC  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4088+1
 29821  0126C0  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4088+2
 29822  0126C4  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4088+3
 29823                           
 29824                           ;main.c: 235: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 29825  0126C8  C0D6  F030         	movff	_ADCPostProcessingCallback$4088,i2___flmul@b
 29826  0126CC  C0D7  F031         	movff	_ADCPostProcessingCallback$4088+1,i2___flmul@b+1
 29827  0126D0  C0D8  F032         	movff	_ADCPostProcessingCallback$4088+2,i2___flmul@b+2
 29828  0126D4  C0D9  F033         	movff	_ADCPostProcessingCallback$4088+3,i2___flmul@b+3
 29829  0126D8  0E35               	movlw	53
 29830  0126DA  6E34               	movwf	i2___flmul@a,c
 29831  0126DC  0E5E               	movlw	94
 29832  0126DE  6E35               	movwf	i2___flmul@a+1,c
 29833  0126E0  0EF2               	movlw	242
 29834  0126E2  6E36               	movwf	i2___flmul@a+2,c
 29835  0126E4  0E3F               	movlw	63
 29836  0126E6  6E37               	movwf	i2___flmul@a+3,c
 29837  0126E8  ECD1  F09E         	call	i2___flmul	;wreg free
 29838  0126EC  C030  F1CF         	movff	?i2___flmul,_Imeas	;volatile
 29839  0126F0  C031  F1D0         	movff	?i2___flmul+1,_Imeas+1	;volatile
 29840  0126F4  C032  F1D1         	movff	?i2___flmul+2,_Imeas+2	;volatile
 29841  0126F8  C033  F1D2         	movff	?i2___flmul+3,_Imeas+3	;volatile
 29842                           
 29843                           ;main.c: 239: if (LATGbits.LATG0 != 1) {
 29844  0126FC  B07F               	btfsc	3967,0,c	;volatile
 29845  0126FE  D128               	goto	i2l973
 29846                           
 29847                           ;main.c: 244: if (load_enable) {
 29848  012700  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 29849  012702  D0CD               	goto	i2l974
 29850                           
 29851                           ;main.c: 247: if (dimming_period < 0x7FEE) {
 29852  012704  0EEE               	movlw	238
 29853  012706  0100               	movlb	0	; () banked
 29854  012708  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 29855  01270A  0E7F               	movlw	127
 29856  01270C  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 29857  01270E  B0D8               	btfsc	status,0,c
 29858  012710  D052               	goto	i2l975
 29859                           
 29860                           ; BSR set to: 0
 29861                           ;main.c: 249: Ipk = Imeas;
 29862  012712  C1CF  F1D3         	movff	_Imeas,_Ipk	;volatile
 29863  012716  C1D0  F1D4         	movff	_Imeas+1,_Ipk+1	;volatile
 29864  01271A  C1D1  F1D5         	movff	_Imeas+2,_Ipk+2	;volatile
 29865  01271E  C1D2  F1D6         	movff	_Imeas+3,_Ipk+3	;volatile
 29866                           
 29867                           ; BSR set to: 0
 29868                           ;main.c: 250: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 29869  012722  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29870  012726  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29871  01272A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29872  01272E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 29873  012732  C1D3  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 29874  012736  C1D4  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29875  01273A  C1D5  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29876  01273E  C1D6  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 29877  012742  EC89  F0AD         	call	_peakToRMS	;wreg free
 29878  012746  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4089
 29879  01274A  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4089+1
 29880  01274E  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4089+2
 29881  012752  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4089+3
 29882                           
 29883                           ;main.c: 250: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 29884  012756  C2D6  F05A         	movff	_Irms_offset,i2___fladd@a
 29885  01275A  C2D7  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 29886  01275E  C2D8  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 29887  012762  C2D9  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 29888  012766  C0DA  F056         	movff	_ADCPostProcessingCallback$4089,i2___fladd@b
 29889  01276A  C0DB  F057         	movff	_ADCPostProcessingCallback$4089+1,i2___fladd@b+1
 29890  01276E  C0DC  F058         	movff	_ADCPostProcessingCallback$4089+2,i2___fladd@b+2
 29891  012772  C0DD  F059         	movff	_ADCPostProcessingCallback$4089+3,i2___fladd@b+3
 29892  012776  EC18  F0A2         	call	i2___fladd	;wreg free
 29893  01277A  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 29894  01277E  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 29895  012782  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 29896  012786  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 29897  01278A  EC9E  F0B6         	call	i2___fltol	;wreg free
 29898  01278E  C06C  F076         	movff	?i2___fltol,abs@a
 29899  012792  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 29900  012796  EC44  F0C0         	call	_abs	;wreg free
 29901  01279A  0100               	movlb	0	; () banked
 29902  01279C  C076  F005         	movff	?_abs,i2___xxtofl@val
 29903  0127A0  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 29904  0127A4  0E00               	movlw	0
 29905  0127A6  BE06               	btfsc	i2___xxtofl@val+1,7,c
 29906  0127A8  0EFF               	movlw	-1
 29907  0127AA  6E07               	movwf	i2___xxtofl@val+2,c
 29908  0127AC  6E08               	movwf	i2___xxtofl@val+3,c
 29909  0127AE  0E01               	movlw	1
 29910  0127B0  EC73  F0B0         	call	i2___xxtofl
 29911  0127B4  D063               	goto	L16
 29912  0127B6                     i2l975:
 29913                           
 29914                           ;main.c: 255: else {
 29915                           ;main.c: 257: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 29916  0127B6  C1CF  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 29917  0127BA  C1D0  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 29918  0127BE  C1D1  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 29919  0127C2  C1D2  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 29920  0127C6  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 29921  0127CA  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 29922  0127CE  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 29923  0127D2  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 29924  0127D6  ECAC  F0BA         	call	_currentMeasuredToPeak	;wreg free
 29925  0127DA  C099  F1D3         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 29926  0127DE  C09A  F1D4         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 29927  0127E2  C09B  F1D5         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 29928  0127E6  C09C  F1D6         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 29929                           
 29930                           ;main.c: 258: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 29931  0127EA  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 29932  0127EE  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 29933  0127F2  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 29934  0127F6  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 29935  0127FA  C1D3  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 29936  0127FE  C1D4  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 29937  012802  C1D5  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 29938  012806  C1D6  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 29939  01280A  EC89  F0AD         	call	_peakToRMS	;wreg free
 29940  01280E  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4089
 29941  012812  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4089+1
 29942  012816  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4089+2
 29943  01281A  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4089+3
 29944                           
 29945                           ;main.c: 258: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 29946  01281E  C2D6  F05A         	movff	_Irms_offset,i2___fladd@a
 29947  012822  C2D7  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 29948  012826  C2D8  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 29949  01282A  C2D9  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 29950  01282E  C0DA  F056         	movff	_ADCPostProcessingCallback$4089,i2___fladd@b
 29951  012832  C0DB  F057         	movff	_ADCPostProcessingCallback$4089+1,i2___fladd@b+1
 29952  012836  C0DC  F058         	movff	_ADCPostProcessingCallback$4089+2,i2___fladd@b+2
 29953  01283A  C0DD  F059         	movff	_ADCPostProcessingCallback$4089+3,i2___fladd@b+3
 29954  01283E  EC18  F0A2         	call	i2___fladd	;wreg free
 29955  012842  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 29956  012846  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 29957  01284A  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 29958  01284E  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 29959  012852  EC9E  F0B6         	call	i2___fltol	;wreg free
 29960  012856  C06C  F076         	movff	?i2___fltol,abs@a
 29961  01285A  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 29962  01285E  EC44  F0C0         	call	_abs	;wreg free
 29963  012862  0100               	movlb	0	; () banked
 29964  012864  C076  F005         	movff	?_abs,i2___xxtofl@val
 29965  012868  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 29966  01286C  0E00               	movlw	0
 29967  01286E  BE06               	btfsc	i2___xxtofl@val+1,7,c
 29968  012870  0EFF               	movlw	-1
 29969  012872  6E07               	movwf	i2___xxtofl@val+2,c
 29970  012874  6E08               	movwf	i2___xxtofl@val+3,c
 29971  012876  0E01               	movlw	1
 29972  012878  EC73  F0B0         	call	i2___xxtofl
 29973  01287C                     L16:
 29974  01287C  C005  F1CB         	movff	?i2___xxtofl,_Irms	;volatile
 29975  012880  C006  F1CC         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 29976  012884  C007  F1CD         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 29977  012888  C008  F1CE         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 29978                           
 29979                           ;main.c: 260: }
 29980                           ;main.c: 262: Vpk = Vpk_const;
 29981  01288C  C2DA  F250         	movff	_Vpk_const,_Vpk	;volatile
 29982  012890  C2DB  F251         	movff	_Vpk_const+1,_Vpk+1	;volatile
 29983  012894  C2DC  F252         	movff	_Vpk_const+2,_Vpk+2	;volatile
 29984  012898  C2DD  F253         	movff	_Vpk_const+3,_Vpk+3	;volatile
 29985                           
 29986                           ;main.c: 264: }
 29987  01289C  D02C               	goto	i2l977
 29988  01289E                     i2l974:
 29989                           
 29990                           ;main.c: 266: else {
 29991                           ;main.c: 268: Ipk = 0.0;
 29992  01289E  0E00               	movlw	0
 29993  0128A0  0101               	movlb	1	; () banked
 29994  0128A2  6FD3               	movwf	_Ipk& (0+255),b	;volatile
 29995  0128A4  0E00               	movlw	0
 29996  0128A6  6FD4               	movwf	(_Ipk+1)& (0+255),b	;volatile
 29997  0128A8  0E00               	movlw	0
 29998  0128AA  6FD5               	movwf	(_Ipk+2)& (0+255),b	;volatile
 29999  0128AC  0E00               	movlw	0
 30000  0128AE  6FD6               	movwf	(_Ipk+3)& (0+255),b	;volatile
 30001                           
 30002                           ;main.c: 269: Vpk = 0.0;
 30003  0128B0  0E00               	movlw	0
 30004  0128B2  0102               	movlb	2	; () banked
 30005  0128B4  6F50               	movwf	_Vpk& (0+255),b	;volatile
 30006  0128B6  0E00               	movlw	0
 30007  0128B8  6F51               	movwf	(_Vpk+1)& (0+255),b	;volatile
 30008  0128BA  0E00               	movlw	0
 30009  0128BC  6F52               	movwf	(_Vpk+2)& (0+255),b	;volatile
 30010  0128BE  0E00               	movlw	0
 30011  0128C0  6F53               	movwf	(_Vpk+3)& (0+255),b	;volatile
 30012                           
 30013                           ; BSR set to: 2
 30014                           ;main.c: 270: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 30015  0128C2  C1D3  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 30016  0128C6  C1D4  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 30017  0128CA  C1D5  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 30018  0128CE  C1D6  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 30019  0128D2  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 30020  0128D6  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 30021  0128DA  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 30022  0128DE  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 30023  0128E2  EC89  F0AD         	call	_peakToRMS	;wreg free
 30024  0128E6  C0B1  F1CB         	movff	?_peakToRMS,_Irms	;volatile
 30025  0128EA  C0B2  F1CC         	movff	?_peakToRMS+1,_Irms+1	;volatile
 30026  0128EE  C0B3  F1CD         	movff	?_peakToRMS+2,_Irms+2	;volatile
 30027  0128F2  C0B4  F1CE         	movff	?_peakToRMS+3,_Irms+3	;volatile
 30028  0128F6                     i2l977:
 30029                           
 30030                           ;main.c: 272: }
 30031                           ;main.c: 274: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 30032  0128F6  C250  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 30033  0128FA  C251  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 30034  0128FE  C252  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 30035  012902  C253  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 30036  012906  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 30037  01290A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 30038  01290E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 30039  012912  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 30040  012916  EC89  F0AD         	call	_peakToRMS	;wreg free
 30041  01291A  C0B1  F24C         	movff	?_peakToRMS,_Vrms	;volatile
 30042  01291E  C0B2  F24D         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 30043  012922  C0B3  F24E         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 30044  012926  C0B4  F24F         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 30045                           
 30046                           ;main.c: 275: Avg_Power = Vrms * Irms;
 30047  01292A  C24C  F030         	movff	_Vrms,i2___flmul@b	;volatile
 30048  01292E  C24D  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 30049  012932  C24E  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 30050  012936  C24F  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 30051  01293A  C1CB  F034         	movff	_Irms,i2___flmul@a	;volatile
 30052  01293E  C1CC  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 30053  012942  C1CD  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 30054  012946  C1CE  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 30055  01294A  ECD1  F09E         	call	i2___flmul	;wreg free
 30056  01294E  D087               	goto	L17
 30057  012950                     i2l973:
 30058                           
 30059                           ;main.c: 280: else {
 30060                           ;main.c: 282: Ipk = Imeas;
 30061  012950  C1CF  F1D3         	movff	_Imeas,_Ipk	;volatile
 30062  012954  C1D0  F1D4         	movff	_Imeas+1,_Ipk+1	;volatile
 30063  012958  C1D1  F1D5         	movff	_Imeas+2,_Ipk+2	;volatile
 30064  01295C  C1D2  F1D6         	movff	_Imeas+3,_Ipk+3	;volatile
 30065                           
 30066                           ;main.c: 283: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 30067  012960  0E00               	movlw	0
 30068  012962  0100               	movlb	0	; () banked
 30069  012964  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 30070  012966  0E00               	movlw	0
 30071  012968  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 30072  01296A  0E00               	movlw	0
 30073  01296C  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 30074  01296E  0E00               	movlw	0
 30075  012970  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 30076  012972  C1D3  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 30077  012976  C1D4  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 30078  01297A  C1D5  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 30079  01297E  C1D6  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 30080  012982  EC89  F0AD         	call	_peakToRMS	;wreg free
 30081  012986  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4089
 30082  01298A  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4089+1
 30083  01298E  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4089+2
 30084  012992  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4089+3
 30085                           
 30086                           ;main.c: 283: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 30087  012996  C2D6  F05A         	movff	_Irms_offset,i2___fladd@a
 30088  01299A  C2D7  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 30089  01299E  C2D8  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 30090  0129A2  C2D9  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 30091  0129A6  C0DA  F056         	movff	_ADCPostProcessingCallback$4089,i2___fladd@b
 30092  0129AA  C0DB  F057         	movff	_ADCPostProcessingCallback$4089+1,i2___fladd@b+1
 30093  0129AE  C0DC  F058         	movff	_ADCPostProcessingCallback$4089+2,i2___fladd@b+2
 30094  0129B2  C0DD  F059         	movff	_ADCPostProcessingCallback$4089+3,i2___fladd@b+3
 30095  0129B6  EC18  F0A2         	call	i2___fladd	;wreg free
 30096  0129BA  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 30097  0129BE  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 30098  0129C2  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 30099  0129C6  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 30100  0129CA  EC9E  F0B6         	call	i2___fltol	;wreg free
 30101  0129CE  C06C  F076         	movff	?i2___fltol,abs@a
 30102  0129D2  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 30103  0129D6  EC44  F0C0         	call	_abs	;wreg free
 30104  0129DA  0100               	movlb	0	; () banked
 30105  0129DC  C076  F005         	movff	?_abs,i2___xxtofl@val
 30106  0129E0  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 30107  0129E4  0E00               	movlw	0
 30108  0129E6  BE06               	btfsc	i2___xxtofl@val+1,7,c
 30109  0129E8  0EFF               	movlw	-1
 30110  0129EA  6E07               	movwf	i2___xxtofl@val+2,c
 30111  0129EC  6E08               	movwf	i2___xxtofl@val+3,c
 30112  0129EE  0E01               	movlw	1
 30113  0129F0  EC73  F0B0         	call	i2___xxtofl
 30114  0129F4  C005  F1CB         	movff	?i2___xxtofl,_Irms	;volatile
 30115  0129F8  C006  F1CC         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 30116  0129FC  C007  F1CD         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 30117  012A00  C008  F1CE         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 30118                           
 30119                           ;main.c: 284: Vrms = peakToRMS(Vpk_const, 0.0);
 30120  012A04  C2DA  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 30121  012A08  C2DB  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 30122  012A0C  C2DC  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 30123  012A10  C2DD  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 30124  012A14  0E00               	movlw	0
 30125  012A16  0100               	movlb	0	; () banked
 30126  012A18  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 30127  012A1A  0E00               	movlw	0
 30128  012A1C  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 30129  012A1E  0E00               	movlw	0
 30130  012A20  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 30131  012A22  0E00               	movlw	0
 30132  012A24  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 30133  012A26  EC89  F0AD         	call	_peakToRMS	;wreg free
 30134  012A2A  C0B1  F24C         	movff	?_peakToRMS,_Vrms	;volatile
 30135  012A2E  C0B2  F24D         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 30136  012A32  C0B3  F24E         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 30137  012A36  C0B4  F24F         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 30138                           
 30139                           ;main.c: 285: Avg_Power = Vrms * Irms;
 30140  012A3A  C24C  F030         	movff	_Vrms,i2___flmul@b	;volatile
 30141  012A3E  C24D  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 30142  012A42  C24E  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 30143  012A46  C24F  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 30144  012A4A  C1CB  F034         	movff	_Irms,i2___flmul@a	;volatile
 30145  012A4E  C1CC  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 30146  012A52  C1CD  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 30147  012A56  C1CE  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 30148  012A5A  ECD1  F09E         	call	i2___flmul	;wreg free
 30149  012A5E                     L17:
 30150  012A5E  C030  F248         	movff	?i2___flmul,_Avg_Power	;volatile
 30151  012A62  C031  F249         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 30152  012A66  C032  F24A         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 30153  012A6A  C033  F24B         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 30154                           
 30155                           ;main.c: 287: }
 30156                           ;main.c: 289: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 30157  012A6E  0E00               	movlw	0
 30158  012A70  6E34               	movwf	i2___flge@ff1,c
 30159  012A72  0E00               	movlw	0
 30160  012A74  6E35               	movwf	i2___flge@ff1+1,c
 30161  012A76  0EA0               	movlw	160
 30162  012A78  6E36               	movwf	i2___flge@ff1+2,c
 30163  012A7A  0E40               	movlw	64
 30164  012A7C  6E37               	movwf	i2___flge@ff1+3,c
 30165  012A7E  C1CB  F038         	movff	_Irms,i2___flge@ff2	;volatile
 30166  012A82  C1CC  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 30167  012A86  C1CD  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 30168  012A8A  C1CE  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 30169  012A8E  EC08  F0B4         	call	i2___flge	;wreg free
 30170  012A92  A0D8               	btfss	status,0,c
 30171  012A94  D005               	goto	i2u1606_40
 30172  012A96  ECCF  F0C1         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 30173  012A9A  0900               	iorlw	0
 30174  012A9C  B4D8               	btfsc	status,2,c
 30175  012A9E  D007               	goto	i2l979
 30176  012AA0                     i2u1606_40:
 30177                           
 30178                           ;main.c: 291: LATFbits.LATF3 = 1;
 30179  012AA0  867E               	bsf	3966,3,c	;volatile
 30180                           
 30181                           ;main.c: 292: adc_error_flag = 1;
 30182  012AA2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30183                           
 30184                           ;main.c: 294: PIE5bits.TMR7IE = 0;
 30185  012AA4  010E               	movlb	14	; () banked
 30186  012AA6  9D2E               	bcf	46,6,b	;volatile
 30187                           
 30188                           ; BSR set to: 14
 30189                           ;main.c: 295: TMR7_StopTimer();
 30190  012AA8  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 30191                           
 30192                           ;main.c: 296: return;
 30193  012AAC  0012               	return	
 30194  012AAE                     i2l979:
 30195                           
 30196                           ;main.c: 298: }
 30197                           ;main.c: 300: next_channel = POS12_ADC;
 30198  012AAE  0E04               	movlw	4
 30199  012AB0  0101               	movlb	1	; () banked
 30200  012AB2  6FE2               	movwf	_next_channel& (0+255),b
 30201                           
 30202                           ;main.c: 302: break;
 30203  012AB4  0012               	return	
 30204  012AB6                     
 30205                           ;main.c: 307: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 30206                           
 30207                           ; BSR set to: 1
 30208  012AB6  0E00               	movlw	0
 30209  012AB8  6E17               	movwf	i2___fldiv@a,c
 30210  012ABA  0EC0               	movlw	192
 30211  012ABC  6E18               	movwf	i2___fldiv@a+1,c
 30212  012ABE  0E7F               	movlw	127
 30213  012AC0  6E19               	movwf	i2___fldiv@a+2,c
 30214  012AC2  0E44               	movlw	68
 30215  012AC4  6E1A               	movwf	i2___fldiv@a+3,c
 30216  012AC6  C0F6  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 30217  012ACA  C0F7  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 30218  012ACE  C0F8  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 30219  012AD2  C0F9  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 30220  012AD6  ECD8  F0AA         	call	i2___fldiv	;wreg free
 30221  012ADA  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 30222  012ADE  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 30223  012AE2  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 30224  012AE6  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 30225  012AEA  EC51  F0C1         	call	_ADCC_GetFilterValue	;wreg free
 30226  012AEE  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 30227  012AF2  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 30228  012AF6  6A07               	clrf	i2___xxtofl@val+2,c
 30229  012AF8  6A08               	clrf	i2___xxtofl@val+3,c
 30230  012AFA  0E00               	movlw	0
 30231  012AFC  EC73  F0B0         	call	i2___xxtofl
 30232  012B00  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 30233  012B04  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 30234  012B08  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 30235  012B0C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 30236  012B10  ECD1  F09E         	call	i2___flmul	;wreg free
 30237  012B14  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4088
 30238  012B18  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4088+1
 30239  012B1C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4088+2
 30240  012B20  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4088+3
 30241                           
 30242                           ;main.c: 307: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 30243  012B24  C0D6  F030         	movff	_ADCPostProcessingCallback$4088,i2___flmul@b
 30244  012B28  C0D7  F031         	movff	_ADCPostProcessingCallback$4088+1,i2___flmul@b+1
 30245  012B2C  C0D8  F032         	movff	_ADCPostProcessingCallback$4088+2,i2___flmul@b+2
 30246  012B30  C0D9  F033         	movff	_ADCPostProcessingCallback$4088+3,i2___flmul@b+3
 30247  012B34  0E3E               	movlw	62
 30248  012B36  6E34               	movwf	i2___flmul@a,c
 30249  012B38  0EF8               	movlw	248
 30250  012B3A  6E35               	movwf	i2___flmul@a+1,c
 30251  012B3C  0E80               	movlw	128
 30252  012B3E  6E36               	movwf	i2___flmul@a+2,c
 30253  012B40  0E40               	movlw	64
 30254  012B42  6E37               	movwf	i2___flmul@a+3,c
 30255  012B44  ECD1  F09E         	call	i2___flmul	;wreg free
 30256  012B48  C030  F258         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 30257  012B4C  C031  F259         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 30258  012B50  C032  F25A         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 30259  012B54  C033  F25B         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 30260                           
 30261                           ;main.c: 309: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 30262  012B58  0E9A               	movlw	154
 30263  012B5A  6E34               	movwf	i2___flge@ff1,c
 30264  012B5C  0E99               	movlw	153
 30265  012B5E  6E35               	movwf	i2___flge@ff1+1,c
 30266  012B60  0E59               	movlw	89
 30267  012B62  6E36               	movwf	i2___flge@ff1+2,c
 30268  012B64  0E41               	movlw	65
 30269  012B66  6E37               	movwf	i2___flge@ff1+3,c
 30270  012B68  C258  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 30271  012B6C  C259  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 30272  012B70  C25A  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 30273  012B74  C25B  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 30274  012B78  EC08  F0B4         	call	i2___flge	;wreg free
 30275  012B7C  A0D8               	btfss	status,0,c
 30276  012B7E  D005               	goto	i2u1608_40
 30277  012B80  ECCF  F0C1         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 30278  012B84  0900               	iorlw	0
 30279  012B86  B4D8               	btfsc	status,2,c
 30280  012B88  D007               	goto	i2l983
 30281  012B8A                     i2u1608_40:
 30282                           
 30283                           ;main.c: 311: LATFbits.LATF3 = 1;
 30284  012B8A  867E               	bsf	3966,3,c	;volatile
 30285                           
 30286                           ;main.c: 312: adc_error_flag = 1;
 30287  012B8C  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30288                           
 30289                           ;main.c: 314: PIE5bits.TMR7IE = 0;
 30290  012B8E  010E               	movlb	14	; () banked
 30291  012B90  9D2E               	bcf	46,6,b	;volatile
 30292                           
 30293                           ; BSR set to: 14
 30294                           ;main.c: 315: TMR7_StopTimer();
 30295  012B92  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 30296                           
 30297                           ;main.c: 316: return;
 30298  012B96  0012               	return	
 30299  012B98                     i2l983:
 30300                           
 30301                           ;main.c: 318: }
 30302                           ;main.c: 320: next_channel = channel_Temp;
 30303  012B98  0E3D               	movlw	61
 30304  012B9A  0101               	movlb	1	; () banked
 30305  012B9C  6FE2               	movwf	_next_channel& (0+255),b
 30306                           
 30307                           ;main.c: 322: break;
 30308  012B9E  0012               	return	
 30309  012BA0                     
 30310                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 30311                           
 30312                           ; BSR set to: 1
 30313  012BA0  0E00               	movlw	0
 30314  012BA2  6E17               	movwf	i2___fldiv@a,c
 30315  012BA4  0E00               	movlw	0
 30316  012BA6  6E18               	movwf	i2___fldiv@a+1,c
 30317  012BA8  0E00               	movlw	0
 30318  012BAA  6E19               	movwf	i2___fldiv@a+2,c
 30319  012BAC  0E40               	movlw	64
 30320  012BAE  6E1A               	movwf	i2___fldiv@a+3,c
 30321  012BB0  C0F6  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 30322  012BB4  C0F7  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 30323  012BB8  C0F8  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 30324  012BBC  C0F9  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 30325  012BC0  ECD8  F0AA         	call	i2___fldiv	;wreg free
 30326  012BC4  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 30327  012BC8  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 30328  012BCC  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 30329  012BD0  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 30330  012BD4  0E00               	movlw	0
 30331  012BD6  6E5A               	movwf	i2___fladd@a,c
 30332  012BD8  0E00               	movlw	0
 30333  012BDA  6E5B               	movwf	i2___fladd@a+1,c
 30334  012BDC  0E80               	movlw	128
 30335  012BDE  6E5C               	movwf	i2___fladd@a+2,c
 30336  012BE0  0E3F               	movlw	63
 30337  012BE2  6E5D               	movwf	i2___fladd@a+3,c
 30338  012BE4  0E00               	movlw	0
 30339  012BE6  6E17               	movwf	i2___fldiv@a,c
 30340  012BE8  0EC0               	movlw	192
 30341  012BEA  6E18               	movwf	i2___fldiv@a+1,c
 30342  012BEC  0E7F               	movlw	127
 30343  012BEE  6E19               	movwf	i2___fldiv@a+2,c
 30344  012BF0  0E44               	movlw	68
 30345  012BF2  6E1A               	movwf	i2___fldiv@a+3,c
 30346  012BF4  EC5B  F0C1         	call	_ADCC_GetConversionResult	;wreg free
 30347  012BF8  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 30348  012BFC  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 30349  012C00  6A07               	clrf	i2___xxtofl@val+2,c
 30350  012C02  6A08               	clrf	i2___xxtofl@val+3,c
 30351  012C04  0E00               	movlw	0
 30352  012C06  EC73  F0B0         	call	i2___xxtofl
 30353  012C0A  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 30354  012C0E  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 30355  012C12  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 30356  012C16  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 30357  012C1A  ECD8  F0AA         	call	i2___fldiv	;wreg free
 30358  012C1E  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 30359  012C22  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 30360  012C26  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 30361  012C2A  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 30362  012C2E  EC2D  F0C0         	call	i2___flneg	;wreg free
 30363  012C32  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30364  012C36  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30365  012C3A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30366  012C3E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30367  012C42  EC18  F0A2         	call	i2___fladd	;wreg free
 30368  012C46  C056  F030         	movff	?i2___fladd,i2___flmul@b
 30369  012C4A  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 30370  012C4E  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 30371  012C52  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 30372  012C56  ECD1  F09E         	call	i2___flmul	;wreg free
 30373  012C5A  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4090
 30374  012C5E  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4090+1
 30375  012C62  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4090+2
 30376  012C66  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4090+3
 30377                           
 30378                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 30379  012C6A  0EDA               	movlw	218
 30380  012C6C  6E17               	movwf	i2___fldiv@a,c
 30381  012C6E  0E03               	movlw	3
 30382  012C70  6E18               	movwf	i2___fldiv@a+1,c
 30383  012C72  0EAD               	movlw	173
 30384  012C74  6E19               	movwf	i2___fldiv@a+2,c
 30385  012C76  0E3A               	movlw	58
 30386  012C78  6E1A               	movwf	i2___fldiv@a+3,c
 30387  012C7A  0E39               	movlw	57
 30388  012C7C  6E5A               	movwf	i2___fladd@a,c
 30389  012C7E  0EB4               	movlw	180
 30390  012C80  6E5B               	movwf	i2___fladd@a+1,c
 30391  012C82  0E28               	movlw	40
 30392  012C84  6E5C               	movwf	i2___fladd@a+2,c
 30393  012C86  0E3F               	movlw	63
 30394  012C88  6E5D               	movwf	i2___fladd@a+3,c
 30395  012C8A  C0C9  F02C         	movff	_ADCPostProcessingCallback$4090,i2___flneg@f1
 30396  012C8E  C0CA  F02D         	movff	_ADCPostProcessingCallback$4090+1,i2___flneg@f1+1
 30397  012C92  C0CB  F02E         	movff	_ADCPostProcessingCallback$4090+2,i2___flneg@f1+2
 30398  012C96  C0CC  F02F         	movff	_ADCPostProcessingCallback$4090+3,i2___flneg@f1+3
 30399  012C9A  EC2D  F0C0         	call	i2___flneg	;wreg free
 30400  012C9E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30401  012CA2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30402  012CA6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30403  012CAA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30404  012CAE  EC18  F0A2         	call	i2___fladd	;wreg free
 30405  012CB2  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 30406  012CB6  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 30407  012CBA  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 30408  012CBE  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 30409  012CC2  ECD8  F0AA         	call	i2___fldiv	;wreg free
 30410  012CC6  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4091
 30411  012CCA  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4091+1
 30412  012CCE  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4091+2
 30413  012CD2  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4091+3
 30414                           
 30415                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 30416  012CD6  C2DE  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 30417  012CDA  C2DF  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 30418  012CDE  C2E0  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 30419  012CE2  C2E1  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 30420  012CE6  C0CD  F056         	movff	_ADCPostProcessingCallback$4091,i2___fladd@b
 30421  012CEA  C0CE  F057         	movff	_ADCPostProcessingCallback$4091+1,i2___fladd@b+1
 30422  012CEE  C0CF  F058         	movff	_ADCPostProcessingCallback$4091+2,i2___fladd@b+2
 30423  012CF2  C0D0  F059         	movff	_ADCPostProcessingCallback$4091+3,i2___fladd@b+3
 30424  012CF6  EC18  F0A2         	call	i2___fladd	;wreg free
 30425  012CFA  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4092
 30426  012CFE  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4092+1
 30427  012D02  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4092+2
 30428  012D06  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4092+3
 30429                           
 30430                           ;main.c: 327: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 30431  012D0A  C0D1  F056         	movff	_ADCPostProcessingCallback$4092,i2___fladd@b
 30432  012D0E  C0D2  F057         	movff	_ADCPostProcessingCallback$4092+1,i2___fladd@b+1
 30433  012D12  C0D3  F058         	movff	_ADCPostProcessingCallback$4092+2,i2___fladd@b+2
 30434  012D16  C0D4  F059         	movff	_ADCPostProcessingCallback$4092+3,i2___fladd@b+3
 30435  012D1A  0E00               	movlw	0
 30436  012D1C  6E5A               	movwf	i2___fladd@a,c
 30437  012D1E  0E00               	movlw	0
 30438  012D20  6E5B               	movwf	i2___fladd@a+1,c
 30439  012D22  0E20               	movlw	32
 30440  012D24  6E5C               	movwf	i2___fladd@a+2,c
 30441  012D26  0EC2               	movlw	194
 30442  012D28  6E5D               	movwf	i2___fladd@a+3,c
 30443  012D2A  EC18  F0A2         	call	i2___fladd	;wreg free
 30444  012D2E  C056  F254         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 30445  012D32  C057  F255         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 30446  012D36  C058  F256         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 30447  012D3A  C059  F257         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 30448                           
 30449                           ;main.c: 329: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 30450  012D3E  0E00               	movlw	0
 30451  012D40  6E34               	movwf	i2___flge@ff1,c
 30452  012D42  0E00               	movlw	0
 30453  012D44  6E35               	movwf	i2___flge@ff1+1,c
 30454  012D46  0E20               	movlw	32
 30455  012D48  6E36               	movwf	i2___flge@ff1+2,c
 30456  012D4A  0E42               	movlw	66
 30457  012D4C  6E37               	movwf	i2___flge@ff1+3,c
 30458  012D4E  C254  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 30459  012D52  C255  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 30460  012D56  C256  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 30461  012D5A  C257  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 30462  012D5E  EC08  F0B4         	call	i2___flge	;wreg free
 30463  012D62  A0D8               	btfss	status,0,c
 30464  012D64  D005               	goto	i2u1610_40
 30465  012D66  ECCF  F0C1         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 30466  012D6A  0900               	iorlw	0
 30467  012D6C  B4D8               	btfsc	status,2,c
 30468  012D6E  D007               	goto	i2l987
 30469  012D70                     i2u1610_40:
 30470                           
 30471                           ;main.c: 331: LATFbits.LATF3 = 1;
 30472  012D70  867E               	bsf	3966,3,c	;volatile
 30473                           
 30474                           ;main.c: 332: adc_error_flag = 1;
 30475  012D72  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30476                           
 30477                           ;main.c: 334: PIE5bits.TMR7IE = 0;
 30478  012D74  010E               	movlb	14	; () banked
 30479  012D76  9D2E               	bcf	46,6,b	;volatile
 30480                           
 30481                           ; BSR set to: 14
 30482                           ;main.c: 335: TMR7_StopTimer();
 30483  012D78  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 30484                           
 30485                           ;main.c: 336: return;
 30486  012D7C  0012               	return	
 30487  012D7E                     i2l987:
 30488                           
 30489                           ;main.c: 338: }
 30490                           ;main.c: 340: next_channel = channel_VSS;
 30491  012D7E  0E3C               	movlw	60
 30492  012D80  0101               	movlb	1	; () banked
 30493  012D82  6FE2               	movwf	_next_channel& (0+255),b
 30494                           
 30495                           ;main.c: 342: break;
 30496  012D84  0012               	return	
 30497  012D86                     i2l990:
 30498                           
 30499                           ; BSR set to: 0
 30500                           ;main.c: 347: LATFbits.LATF3 = 1;
 30501  012D86  867E               	bsf	3966,3,c	;volatile
 30502                           
 30503                           ;main.c: 348: adc_error_flag = 1;
 30504  012D88  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 30505                           
 30506                           ; BSR set to: 0
 30507                           ;main.c: 350: PIE5bits.TMR7IE == 0;
 30508  012D8A  010E               	movlb	14	; () banked
 30509  012D8C  512E               	movf	46,w,b	;volatile
 30510                           
 30511                           ; BSR set to: 14
 30512                           ;main.c: 351: TMR7_StopTimer();
 30513  012D8E  ECEF  F0C1         	call	i2_TMR7_StopTimer	;wreg free
 30514                           
 30515                           ;main.c: 354: }
 30516                           
 30517                           ;main.c: 352: break;
 30518  012D92  0012               	return	
 30519  012D94                     i2l957:
 30520  012D94  0100               	movlb	0	; () banked
 30521  012D96  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 30522                           
 30523                           ; Switch size 1, requested type "space"
 30524                           ; Number of cases is 6, Range of values is 0 to 63
 30525                           ; switch strategies available:
 30526                           ; Name         Instructions Cycles
 30527                           ; simple_byte           19    10 (average)
 30528                           ;	Chosen strategy is simple_byte
 30529  012D98  0A00               	xorlw	0	; case 0
 30530  012D9A  B4D8               	btfsc	status,2,c
 30531  012D9C  D45E               	goto	i2l972
 30532  012D9E  0A04               	xorlw	4	; case 4
 30533  012DA0  B4D8               	btfsc	status,2,c
 30534  012DA2  D689               	goto	i2l982
 30535  012DA4  0A26               	xorlw	38	; case 34
 30536  012DA6  B4D8               	btfsc	status,2,c
 30537  012DA8  EFCA  F092         	goto	i2l968
 30538  012DAC  0A1E               	xorlw	30	; case 60
 30539  012DAE  B4D8               	btfsc	status,2,c
 30540  012DB0  EFF8  F091         	goto	i2l958
 30541  012DB4  0A01               	xorlw	1	; case 61
 30542  012DB6  B4D8               	btfsc	status,2,c
 30543  012DB8  D6F3               	goto	i2l986
 30544  012DBA  0A02               	xorlw	2	; case 63
 30545  012DBC  B4D8               	btfsc	status,2,c
 30546  012DBE  EF41  F092         	goto	i2l964
 30547  012DC2  D7E1               	goto	i2l990
 30548  012DC4                     __end_of_ADCPostProcessingCallback:
 30549                           	opt stack 0
 30550                           tosu	equ	0xFFF
 30551                           tosh	equ	0xFFE
 30552                           tosl	equ	0xFFD
 30553                           pclatu	equ	0xFFB
 30554                           pclath	equ	0xFFA
 30555                           tblptru	equ	0xFF8
 30556                           tblptrh	equ	0xFF7
 30557                           tblptrl	equ	0xFF6
 30558                           tablat	equ	0xFF5
 30559                           prodh	equ	0xFF4
 30560                           prodl	equ	0xFF3
 30561                           intcon	equ	0xFF2
 30562                           indf0	equ	0xFEF
 30563                           postinc0	equ	0xFEE
 30564                           fsr0h	equ	0xFEA
 30565                           fsr0l	equ	0xFE9
 30566                           wreg	equ	0xFE8
 30567                           indf1	equ	0xFE7
 30568                           postdec1	equ	0xFE5
 30569                           plusw1	equ	0xFE3
 30570                           fsr1h	equ	0xFE2
 30571                           fsr1l	equ	0xFE1
 30572                           bsr	equ	0xFE0
 30573                           indf2	equ	0xFDF
 30574                           postinc2	equ	0xFDE
 30575                           postdec2	equ	0xFDD
 30576                           plusw2	equ	0xFDB
 30577                           fsr2h	equ	0xFDA
 30578                           fsr2l	equ	0xFD9
 30579                           status	equ	0xFD8
 30580                           
 30581 ;; *************** function i2_TMR7_StopTimer *****************
 30582 ;; Defined at:
 30583 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 30584 ;; Parameters:    Size  Location     Type
 30585 ;;		None
 30586 ;; Auto vars:     Size  Location     Type
 30587 ;;		None
 30588 ;; Return value:  Size  Location     Type
 30589 ;;                  1    wreg      void 
 30590 ;; Registers used:
 30591 ;;		None
 30592 ;; Tracked objects:
 30593 ;;		On entry : 0/0
 30594 ;;		On exit  : 0/0
 30595 ;;		Unchanged: 0/0
 30596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30601 ;;Total ram usage:        0 bytes
 30602 ;; Hardware stack levels used:    1
 30603 ;; This function calls:
 30604 ;;		Nothing
 30605 ;; This function is called by:
 30606 ;;		_ADCPostProcessingCallback
 30607 ;; This function uses a non-reentrant model
 30608 ;;
 30609                           
 30610                           	psect	text101
 30611  0183DE                     __ptext101:
 30612                           	opt stack 0
 30613  0183DE                     i2_TMR7_StopTimer:
 30614                           	opt stack 16
 30615                           
 30616                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 30617                           
 30618                           ;incstack = 0
 30619  0183DE  010F               	movlb	15	; () banked
 30620  0183E0  9130               	bcf	48,0,b	;volatile
 30621                           
 30622                           ; BSR set to: 15
 30623  0183E2  0012               	return		;funcret
 30624  0183E4                     __end_ofi2_TMR7_StopTimer:
 30625                           	opt stack 0
 30626                           tosu	equ	0xFFF
 30627                           tosh	equ	0xFFE
 30628                           tosl	equ	0xFFD
 30629                           pclatu	equ	0xFFB
 30630                           pclath	equ	0xFFA
 30631                           tblptru	equ	0xFF8
 30632                           tblptrh	equ	0xFF7
 30633                           tblptrl	equ	0xFF6
 30634                           tablat	equ	0xFF5
 30635                           prodh	equ	0xFF4
 30636                           prodl	equ	0xFF3
 30637                           intcon	equ	0xFF2
 30638                           indf0	equ	0xFEF
 30639                           postinc0	equ	0xFEE
 30640                           fsr0h	equ	0xFEA
 30641                           fsr0l	equ	0xFE9
 30642                           wreg	equ	0xFE8
 30643                           indf1	equ	0xFE7
 30644                           postdec1	equ	0xFE5
 30645                           plusw1	equ	0xFE3
 30646                           fsr1h	equ	0xFE2
 30647                           fsr1l	equ	0xFE1
 30648                           bsr	equ	0xFE0
 30649                           indf2	equ	0xFDF
 30650                           postinc2	equ	0xFDE
 30651                           postdec2	equ	0xFDD
 30652                           plusw2	equ	0xFDB
 30653                           fsr2h	equ	0xFDA
 30654                           fsr2l	equ	0xFD9
 30655                           status	equ	0xFD8
 30656                           
 30657 ;; *************** function _peakToRMS *****************
 30658 ;; Defined at:
 30659 ;;		line 104 in file "main.c"
 30660 ;; Parameters:    Size  Location     Type
 30661 ;;  Peak            4   81[BANK0 ] void 
 30662 ;;  Angle           4   85[BANK0 ] void 
 30663 ;; Auto vars:     Size  Location     Type
 30664 ;;  RMS             4  101[BANK0 ] void 
 30665 ;; Return value:  Size  Location     Type
 30666 ;;                  4   81[BANK0 ] void 
 30667 ;; Registers used:
 30668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30669 ;; Tracked objects:
 30670 ;;		On entry : 0/0
 30671 ;;		On exit  : 0/0
 30672 ;;		Unchanged: 0/0
 30673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30674 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30675 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30677 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30678 ;;Total ram usage:       24 bytes
 30679 ;; Hardware stack levels used:    1
 30680 ;; Hardware stack levels required when called:    5
 30681 ;; This function calls:
 30682 ;;		_acos
 30683 ;;		_sin
 30684 ;;		_sqrt
 30685 ;;		i2___fladd
 30686 ;;		i2___fldiv
 30687 ;;		i2___flmul
 30688 ;;		i2___flneg
 30689 ;; This function is called by:
 30690 ;;		_ADCPostProcessingCallback
 30691 ;; This function uses a non-reentrant model
 30692 ;;
 30693                           
 30694                           	psect	text102
 30695  015B12                     __ptext102:
 30696                           	opt stack 0
 30697  015B12                     _peakToRMS:
 30698                           	opt stack 11
 30699                           
 30700                           ;main.c: 107: double RMS = 0.0;
 30701                           
 30702                           ; BSR set to: 15
 30703                           ;incstack = 0
 30704  015B12  0E00               	movlw	0
 30705  015B14  0100               	movlb	0	; () banked
 30706  015B16  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 30707  015B18  0E00               	movlw	0
 30708  015B1A  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 30709  015B1C  0E00               	movlw	0
 30710  015B1E  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 30711  015B20  0E00               	movlw	0
 30712  015B22  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;main.c: 110: RMS = 2.0 * acos(-1.0);
 30716  015B24  0E00               	movlw	0
 30717  015B26  6FA9               	movwf	acos@x& (0+255),b
 30718  015B28  0E00               	movlw	0
 30719  015B2A  6FAA               	movwf	(acos@x+1)& (0+255),b
 30720  015B2C  0E80               	movlw	128
 30721  015B2E  6FAB               	movwf	(acos@x+2)& (0+255),b
 30722  015B30  0EBF               	movlw	191
 30723  015B32  6FAC               	movwf	(acos@x+3)& (0+255),b
 30724  015B34  EC98  F0BB         	call	_acos	;wreg free
 30725  015B38  C0A9  F0C1         	movff	?_acos,_peakToRMS$4085
 30726  015B3C  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4085+1
 30727  015B40  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4085+2
 30728  015B44  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4085+3
 30729                           
 30730                           ;main.c: 110: RMS = 2.0 * acos(-1.0);
 30731  015B48  C0C1  F030         	movff	_peakToRMS$4085,i2___flmul@b
 30732  015B4C  C0C2  F031         	movff	_peakToRMS$4085+1,i2___flmul@b+1
 30733  015B50  C0C3  F032         	movff	_peakToRMS$4085+2,i2___flmul@b+2
 30734  015B54  C0C4  F033         	movff	_peakToRMS$4085+3,i2___flmul@b+3
 30735  015B58  0E00               	movlw	0
 30736  015B5A  6E34               	movwf	i2___flmul@a,c
 30737  015B5C  0E00               	movlw	0
 30738  015B5E  6E35               	movwf	i2___flmul@a+1,c
 30739  015B60  0E00               	movlw	0
 30740  015B62  6E36               	movwf	i2___flmul@a+2,c
 30741  015B64  0E40               	movlw	64
 30742  015B66  6E37               	movwf	i2___flmul@a+3,c
 30743  015B68  ECD1  F09E         	call	i2___flmul	;wreg free
 30744  015B6C  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 30745  015B70  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 30746  015B74  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 30747  015B78  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 30748                           
 30749                           ;main.c: 111: RMS = RMS - (2.0 * Angle);
 30750  015B7C  0E00               	movlw	0
 30751  015B7E  6E34               	movwf	i2___flmul@a,c
 30752  015B80  0E00               	movlw	0
 30753  015B82  6E35               	movwf	i2___flmul@a+1,c
 30754  015B84  0E00               	movlw	0
 30755  015B86  6E36               	movwf	i2___flmul@a+2,c
 30756  015B88  0E40               	movlw	64
 30757  015B8A  6E37               	movwf	i2___flmul@a+3,c
 30758  015B8C  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 30759  015B90  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 30760  015B94  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 30761  015B98  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 30762  015B9C  ECD1  F09E         	call	i2___flmul	;wreg free
 30763  015BA0  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 30764  015BA4  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 30765  015BA8  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 30766  015BAC  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 30767  015BB0  EC2D  F0C0         	call	i2___flneg	;wreg free
 30768  015BB4  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30769  015BB8  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30770  015BBC  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30771  015BC0  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30772  015BC4  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 30773  015BC8  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 30774  015BCC  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 30775  015BD0  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 30776  015BD4  EC18  F0A2         	call	i2___fladd	;wreg free
 30777  015BD8  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 30778  015BDC  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 30779  015BE0  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 30780  015BE4  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 30781                           
 30782                           ;main.c: 112: RMS = RMS + sin(2.0 * Angle);
 30783  015BE8  0E00               	movlw	0
 30784  015BEA  6E34               	movwf	i2___flmul@a,c
 30785  015BEC  0E00               	movlw	0
 30786  015BEE  6E35               	movwf	i2___flmul@a+1,c
 30787  015BF0  0E00               	movlw	0
 30788  015BF2  6E36               	movwf	i2___flmul@a+2,c
 30789  015BF4  0E40               	movlw	64
 30790  015BF6  6E37               	movwf	i2___flmul@a+3,c
 30791  015BF8  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 30792  015BFC  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 30793  015C00  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 30794  015C04  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 30795  015C08  ECD1  F09E         	call	i2___flmul	;wreg free
 30796  015C0C  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4086
 30797  015C10  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4086+1
 30798  015C14  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4086+2
 30799  015C18  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4086+3
 30800                           
 30801                           ;main.c: 112: RMS = RMS + sin(2.0 * Angle);
 30802  015C1C  C0B9  F088         	movff	_peakToRMS$4086,sin@f
 30803  015C20  C0BA  F089         	movff	_peakToRMS$4086+1,sin@f+1
 30804  015C24  C0BB  F08A         	movff	_peakToRMS$4086+2,sin@f+2
 30805  015C28  C0BC  F08B         	movff	_peakToRMS$4086+3,sin@f+3
 30806  015C2C  EC39  F0A5         	call	_sin	;wreg free
 30807  015C30  C088  F0BD         	movff	?_sin,_peakToRMS$4087
 30808  015C34  C089  F0BE         	movff	?_sin+1,_peakToRMS$4087+1
 30809  015C38  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4087+2
 30810  015C3C  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4087+3
 30811                           
 30812                           ;main.c: 112: RMS = RMS + sin(2.0 * Angle);
 30813  015C40  C0BD  F056         	movff	_peakToRMS$4087,i2___fladd@b
 30814  015C44  C0BE  F057         	movff	_peakToRMS$4087+1,i2___fladd@b+1
 30815  015C48  C0BF  F058         	movff	_peakToRMS$4087+2,i2___fladd@b+2
 30816  015C4C  C0C0  F059         	movff	_peakToRMS$4087+3,i2___fladd@b+3
 30817  015C50  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 30818  015C54  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 30819  015C58  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 30820  015C5C  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 30821  015C60  EC18  F0A2         	call	i2___fladd	;wreg free
 30822  015C64  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 30823  015C68  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 30824  015C6C  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 30825  015C70  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 30826                           
 30827                           ;main.c: 113: RMS = RMS / (4.0 * acos(-1.0));
 30828  015C74  0E00               	movlw	0
 30829  015C76  0100               	movlb	0	; () banked
 30830  015C78  6FA9               	movwf	acos@x& (0+255),b
 30831  015C7A  0E00               	movlw	0
 30832  015C7C  6FAA               	movwf	(acos@x+1)& (0+255),b
 30833  015C7E  0E80               	movlw	128
 30834  015C80  6FAB               	movwf	(acos@x+2)& (0+255),b
 30835  015C82  0EBF               	movlw	191
 30836  015C84  6FAC               	movwf	(acos@x+3)& (0+255),b
 30837  015C86  EC98  F0BB         	call	_acos	;wreg free
 30838  015C8A  C0A9  F0C1         	movff	?_acos,_peakToRMS$4085
 30839  015C8E  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4085+1
 30840  015C92  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4085+2
 30841  015C96  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4085+3
 30842                           
 30843                           ;main.c: 113: RMS = RMS / (4.0 * acos(-1.0));
 30844  015C9A  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 30845  015C9E  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 30846  015CA2  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 30847  015CA6  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 30848  015CAA  0E00               	movlw	0
 30849  015CAC  6E34               	movwf	i2___flmul@a,c
 30850  015CAE  0E00               	movlw	0
 30851  015CB0  6E35               	movwf	i2___flmul@a+1,c
 30852  015CB2  0E80               	movlw	128
 30853  015CB4  6E36               	movwf	i2___flmul@a+2,c
 30854  015CB6  0E40               	movlw	64
 30855  015CB8  6E37               	movwf	i2___flmul@a+3,c
 30856  015CBA  C0C1  F030         	movff	_peakToRMS$4085,i2___flmul@b
 30857  015CBE  C0C2  F031         	movff	_peakToRMS$4085+1,i2___flmul@b+1
 30858  015CC2  C0C3  F032         	movff	_peakToRMS$4085+2,i2___flmul@b+2
 30859  015CC6  C0C4  F033         	movff	_peakToRMS$4085+3,i2___flmul@b+3
 30860  015CCA  ECD1  F09E         	call	i2___flmul	;wreg free
 30861  015CCE  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 30862  015CD2  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 30863  015CD6  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 30864  015CDA  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 30865  015CDE  ECD8  F0AA         	call	i2___fldiv	;wreg free
 30866  015CE2  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 30867  015CE6  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 30868  015CEA  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 30869  015CEE  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 30870                           
 30871                           ;main.c: 114: RMS = sqrt(RMS);
 30872  015CF2  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 30873  015CF6  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 30874  015CFA  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 30875  015CFE  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 30876  015D02  ECB6  F0A6         	call	_sqrt	;wreg free
 30877  015D06  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 30878  015D0A  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 30879  015D0E  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 30880  015D12  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 30881                           
 30882                           ;main.c: 115: RMS = Peak * RMS;
 30883  015D16  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 30884  015D1A  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 30885  015D1E  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 30886  015D22  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 30887  015D26  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 30888  015D2A  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 30889  015D2E  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 30890  015D32  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 30891  015D36  ECD1  F09E         	call	i2___flmul	;wreg free
 30892  015D3A  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 30893  015D3E  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 30894  015D42  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 30895  015D46  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 30896                           
 30897                           ;main.c: 116: return RMS;
 30898  015D4A  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 30899  015D4E  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 30900  015D52  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 30901  015D56  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 30902  015D5A  0012               	return	
 30903  015D5C                     __end_of_peakToRMS:
 30904                           	opt stack 0
 30905                           tosu	equ	0xFFF
 30906                           tosh	equ	0xFFE
 30907                           tosl	equ	0xFFD
 30908                           pclatu	equ	0xFFB
 30909                           pclath	equ	0xFFA
 30910                           tblptru	equ	0xFF8
 30911                           tblptrh	equ	0xFF7
 30912                           tblptrl	equ	0xFF6
 30913                           tablat	equ	0xFF5
 30914                           prodh	equ	0xFF4
 30915                           prodl	equ	0xFF3
 30916                           intcon	equ	0xFF2
 30917                           indf0	equ	0xFEF
 30918                           postinc0	equ	0xFEE
 30919                           fsr0h	equ	0xFEA
 30920                           fsr0l	equ	0xFE9
 30921                           wreg	equ	0xFE8
 30922                           indf1	equ	0xFE7
 30923                           postdec1	equ	0xFE5
 30924                           plusw1	equ	0xFE3
 30925                           fsr1h	equ	0xFE2
 30926                           fsr1l	equ	0xFE1
 30927                           bsr	equ	0xFE0
 30928                           indf2	equ	0xFDF
 30929                           postinc2	equ	0xFDE
 30930                           postdec2	equ	0xFDD
 30931                           plusw2	equ	0xFDB
 30932                           fsr2h	equ	0xFDA
 30933                           fsr2l	equ	0xFD9
 30934                           status	equ	0xFD8
 30935                           
 30936 ;; *************** function _acos *****************
 30937 ;; Defined at:
 30938 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 30939 ;; Parameters:    Size  Location     Type
 30940 ;;  x               4   73[BANK0 ] void 
 30941 ;; Auto vars:     Size  Location     Type
 30942 ;;		None
 30943 ;; Return value:  Size  Location     Type
 30944 ;;                  4   73[BANK0 ] void 
 30945 ;; Registers used:
 30946 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30947 ;; Tracked objects:
 30948 ;;		On entry : 0/0
 30949 ;;		On exit  : 0/0
 30950 ;;		Unchanged: 0/0
 30951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30953 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30955 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30956 ;;Total ram usage:        8 bytes
 30957 ;; Hardware stack levels used:    1
 30958 ;; Hardware stack levels required when called:    4
 30959 ;; This function calls:
 30960 ;;		_asin
 30961 ;;		i2___fladd
 30962 ;;		i2___flneg
 30963 ;; This function is called by:
 30964 ;;		_peakToRMS
 30965 ;; This function uses a non-reentrant model
 30966 ;;
 30967                           
 30968                           	psect	text103
 30969  017730                     __ptext103:
 30970                           	opt stack 0
 30971  017730                     _acos:
 30972                           	opt stack 11
 30973                           
 30974                           ;incstack = 0
 30975  017730  C0A9  F091         	movff	acos@x,asin@x
 30976  017734  C0AA  F092         	movff	acos@x+1,asin@x+1
 30977  017738  C0AB  F093         	movff	acos@x+2,asin@x+2
 30978  01773C  C0AC  F094         	movff	acos@x+3,asin@x+3
 30979  017740  ECB7  F0A3         	call	_asin	;wreg free
 30980  017744  C091  F0AD         	movff	?_asin,_acos$4093
 30981  017748  C092  F0AE         	movff	?_asin+1,_acos$4093+1
 30982  01774C  C093  F0AF         	movff	?_asin+2,_acos$4093+2
 30983  017750  C094  F0B0         	movff	?_asin+3,_acos$4093+3
 30984  017754  C0AD  F02C         	movff	_acos$4093,i2___flneg@f1
 30985  017758  C0AE  F02D         	movff	_acos$4093+1,i2___flneg@f1+1
 30986  01775C  C0AF  F02E         	movff	_acos$4093+2,i2___flneg@f1+2
 30987  017760  C0B0  F02F         	movff	_acos$4093+3,i2___flneg@f1+3
 30988  017764  EC2D  F0C0         	call	i2___flneg	;wreg free
 30989  017768  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 30990  01776C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 30991  017770  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 30992  017774  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 30993  017778  0EDB               	movlw	219
 30994  01777A  6E5A               	movwf	i2___fladd@a,c
 30995  01777C  0E0F               	movlw	15
 30996  01777E  6E5B               	movwf	i2___fladd@a+1,c
 30997  017780  0EC9               	movlw	201
 30998  017782  6E5C               	movwf	i2___fladd@a+2,c
 30999  017784  0E3F               	movlw	63
 31000  017786  6E5D               	movwf	i2___fladd@a+3,c
 31001  017788  EC18  F0A2         	call	i2___fladd	;wreg free
 31002  01778C  C056  F0A9         	movff	?i2___fladd,?_acos
 31003  017790  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 31004  017794  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 31005  017798  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 31006  01779C  0012               	return	
 31007  01779E                     __end_of_acos:
 31008                           	opt stack 0
 31009                           tosu	equ	0xFFF
 31010                           tosh	equ	0xFFE
 31011                           tosl	equ	0xFFD
 31012                           pclatu	equ	0xFFB
 31013                           pclath	equ	0xFFA
 31014                           tblptru	equ	0xFF8
 31015                           tblptrh	equ	0xFF7
 31016                           tblptrl	equ	0xFF6
 31017                           tablat	equ	0xFF5
 31018                           prodh	equ	0xFF4
 31019                           prodl	equ	0xFF3
 31020                           intcon	equ	0xFF2
 31021                           indf0	equ	0xFEF
 31022                           postinc0	equ	0xFEE
 31023                           fsr0h	equ	0xFEA
 31024                           fsr0l	equ	0xFE9
 31025                           wreg	equ	0xFE8
 31026                           indf1	equ	0xFE7
 31027                           postdec1	equ	0xFE5
 31028                           plusw1	equ	0xFE3
 31029                           fsr1h	equ	0xFE2
 31030                           fsr1l	equ	0xFE1
 31031                           bsr	equ	0xFE0
 31032                           indf2	equ	0xFDF
 31033                           postinc2	equ	0xFDE
 31034                           postdec2	equ	0xFDD
 31035                           plusw2	equ	0xFDB
 31036                           fsr2h	equ	0xFDA
 31037                           fsr2l	equ	0xFD9
 31038                           status	equ	0xFD8
 31039                           
 31040 ;; *************** function _asin *****************
 31041 ;; Defined at:
 31042 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 31043 ;; Parameters:    Size  Location     Type
 31044 ;;  x               4   49[BANK0 ] void 
 31045 ;; Auto vars:     Size  Location     Type
 31046 ;;  y               4   65[BANK0 ] void 
 31047 ;;  sgn             4   53[BANK0 ] void 
 31048 ;; Return value:  Size  Location     Type
 31049 ;;                  4   49[BANK0 ] void 
 31050 ;; Registers used:
 31051 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31052 ;; Tracked objects:
 31053 ;;		On entry : 0/0
 31054 ;;		On exit  : 0/0
 31055 ;;		Unchanged: 0/0
 31056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31058 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31060 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31061 ;;Total ram usage:       24 bytes
 31062 ;; Hardware stack levels used:    1
 31063 ;; Hardware stack levels required when called:    3
 31064 ;; This function calls:
 31065 ;;		_atan
 31066 ;;		_fabs
 31067 ;;		_sqrt
 31068 ;;		i2___fladd
 31069 ;;		i2___fldiv
 31070 ;;		i2___flge
 31071 ;;		i2___flmul
 31072 ;;		i2___flneg
 31073 ;; This function is called by:
 31074 ;;		_acos
 31075 ;; This function uses a non-reentrant model
 31076 ;;
 31077                           
 31078                           	psect	text104
 31079  01476E                     __ptext104:
 31080                           	opt stack 0
 31081  01476E                     _asin:
 31082                           	opt stack 11
 31083                           
 31084                           ;incstack = 0
 31085  01476E  0E00               	movlw	0
 31086  014770  6E34               	movwf	i2___flge@ff1,c
 31087  014772  0E00               	movlw	0
 31088  014774  6E35               	movwf	i2___flge@ff1+1,c
 31089  014776  0E80               	movlw	128
 31090  014778  6E36               	movwf	i2___flge@ff1+2,c
 31091  01477A  0E3F               	movlw	63
 31092  01477C  6E37               	movwf	i2___flge@ff1+3,c
 31093  01477E  C091  F030         	movff	asin@x,fabs@d
 31094  014782  C092  F031         	movff	asin@x+1,fabs@d+1
 31095  014786  C093  F032         	movff	asin@x+2,fabs@d+2
 31096  01478A  C094  F033         	movff	asin@x+3,fabs@d+3
 31097  01478E  EC29  F0BF         	call	_fabs	;wreg free
 31098  014792  C030  F038         	movff	?_fabs,i2___flge@ff2
 31099  014796  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 31100  01479A  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 31101  01479E  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 31102  0147A2  EC08  F0B4         	call	i2___flge	;wreg free
 31103  0147A6  B0D8               	btfsc	status,0,c
 31104  0147A8  D00F               	goto	i2l1606
 31105  0147AA  0E00               	movlw	0
 31106  0147AC  0102               	movlb	2	; () banked
 31107  0147AE  6F77               	movwf	(_errno+1)& (0+255),b
 31108  0147B0  0E21               	movlw	33
 31109  0147B2  6F76               	movwf	_errno& (0+255),b
 31110  0147B4  0E00               	movlw	0
 31111  0147B6  0100               	movlb	0	; () banked
 31112  0147B8  6F91               	movwf	?_asin& (0+255),b
 31113  0147BA  0E00               	movlw	0
 31114  0147BC  6F92               	movwf	(?_asin+1)& (0+255),b
 31115  0147BE  0E00               	movlw	0
 31116  0147C0  6F93               	movwf	(?_asin+2)& (0+255),b
 31117  0147C2  0E00               	movlw	0
 31118  0147C4  6F94               	movwf	(?_asin+3)& (0+255),b
 31119                           
 31120                           ; BSR set to: 0
 31121  0147C6  0012               	return	
 31122  0147C8                     i2l1606:
 31123                           
 31124                           ; BSR set to: 0
 31125  0147C8  0E00               	movlw	0
 31126  0147CA  0100               	movlb	0	; () banked
 31127  0147CC  6F95               	movwf	asin@sgn& (0+255),b
 31128  0147CE  0E00               	movlw	0
 31129  0147D0  6F96               	movwf	(asin@sgn+1)& (0+255),b
 31130  0147D2  0E80               	movlw	128
 31131  0147D4  6F97               	movwf	(asin@sgn+2)& (0+255),b
 31132  0147D6  0E3F               	movlw	63
 31133  0147D8  6F98               	movwf	(asin@sgn+3)& (0+255),b
 31134                           
 31135                           ; BSR set to: 0
 31136  0147DA  C091  F034         	movff	asin@x,i2___flmul@a
 31137  0147DE  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 31138  0147E2  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 31139  0147E6  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 31140  0147EA  C091  F030         	movff	asin@x,i2___flmul@b
 31141  0147EE  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 31142  0147F2  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 31143  0147F6  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 31144  0147FA  ECD1  F09E         	call	i2___flmul	;wreg free
 31145  0147FE  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 31146  014802  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 31147  014806  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 31148  01480A  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 31149  01480E  EC2D  F0C0         	call	i2___flneg	;wreg free
 31150  014812  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31151  014816  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31152  01481A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31153  01481E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31154  014822  0E00               	movlw	0
 31155  014824  6E5A               	movwf	i2___fladd@a,c
 31156  014826  0E00               	movlw	0
 31157  014828  6E5B               	movwf	i2___fladd@a+1,c
 31158  01482A  0E80               	movlw	128
 31159  01482C  6E5C               	movwf	i2___fladd@a+2,c
 31160  01482E  0E3F               	movlw	63
 31161  014830  6E5D               	movwf	i2___fladd@a+3,c
 31162  014832  EC18  F0A2         	call	i2___fladd	;wreg free
 31163  014836  C056  F06C         	movff	?i2___fladd,sqrt@a
 31164  01483A  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 31165  01483E  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 31166  014842  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 31167  014846  ECB6  F0A6         	call	_sqrt	;wreg free
 31168  01484A  C06C  F0A1         	movff	?_sqrt,asin@y
 31169  01484E  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 31170  014852  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 31171  014856  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 31172  01485A  C091  F030         	movff	asin@x,fabs@d
 31173  01485E  C092  F031         	movff	asin@x+1,fabs@d+1
 31174  014862  C093  F032         	movff	asin@x+2,fabs@d+2
 31175  014866  C094  F033         	movff	asin@x+3,fabs@d+3
 31176  01486A  EC29  F0BF         	call	_fabs	;wreg free
 31177  01486E  C030  F034         	movff	?_fabs,i2___flge@ff1
 31178  014872  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 31179  014876  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 31180  01487A  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 31181  01487E  0E8F               	movlw	143
 31182  014880  6E38               	movwf	i2___flge@ff2,c
 31183  014882  0EC2               	movlw	194
 31184  014884  6E39               	movwf	i2___flge@ff2+1,c
 31185  014886  0E35               	movlw	53
 31186  014888  6E3A               	movwf	i2___flge@ff2+2,c
 31187  01488A  0E3F               	movlw	63
 31188  01488C  6E3B               	movwf	i2___flge@ff2+3,c
 31189  01488E  EC08  F0B4         	call	i2___flge	;wreg free
 31190  014892  B0D8               	btfsc	status,0,c
 31191  014894  D02D               	goto	i2l1608
 31192  014896  C091  F013         	movff	asin@x,i2___fldiv@b
 31193  01489A  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 31194  01489E  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 31195  0148A2  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 31196  0148A6  C0A1  F017         	movff	asin@y,i2___fldiv@a
 31197  0148AA  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 31198  0148AE  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 31199  0148B2  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 31200  0148B6  ECD8  F0AA         	call	i2___fldiv	;wreg free
 31201  0148BA  C013  F0A5         	movff	?i2___fldiv,_asin$4094
 31202  0148BE  C014  F0A6         	movff	?i2___fldiv+1,_asin$4094+1
 31203  0148C2  C015  F0A7         	movff	?i2___fldiv+2,_asin$4094+2
 31204  0148C6  C016  F0A8         	movff	?i2___fldiv+3,_asin$4094+3
 31205  0148CA  C0A5  F07C         	movff	_asin$4094,atan@f
 31206  0148CE  C0A6  F07D         	movff	_asin$4094+1,atan@f+1
 31207  0148D2  C0A7  F07E         	movff	_asin$4094+2,atan@f+2
 31208  0148D6  C0A8  F07F         	movff	_asin$4094+3,atan@f+3
 31209  0148DA  ECAE  F0AE         	call	_atan	;wreg free
 31210  0148DE  C07C  F091         	movff	?_atan,?_asin
 31211  0148E2  C07D  F092         	movff	?_atan+1,?_asin+1
 31212  0148E6  C07E  F093         	movff	?_atan+2,?_asin+2
 31213  0148EA  C07F  F094         	movff	?_atan+3,?_asin+3
 31214  0148EE  0012               	return	
 31215  0148F0                     i2l1608:
 31216  0148F0  0100               	movlb	0	; () banked
 31217  0148F2  AF94               	btfss	(asin@x+3)& (0+255),7,b
 31218  0148F4  D06D               	goto	i2l1609
 31219                           
 31220                           ; BSR set to: 0
 31221  0148F6  C091  F017         	movff	asin@x,i2___fldiv@a
 31222  0148FA  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 31223  0148FE  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 31224  014902  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 31225  014906  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 31226  01490A  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 31227  01490E  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 31228  014912  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 31229  014916  EC2D  F0C0         	call	i2___flneg	;wreg free
 31230  01491A  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 31231  01491E  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 31232  014922  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 31233  014926  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 31234  01492A  ECD8  F0AA         	call	i2___fldiv	;wreg free
 31235  01492E  C013  F0A5         	movff	?i2___fldiv,_asin$4094
 31236  014932  C014  F0A6         	movff	?i2___fldiv+1,_asin$4094+1
 31237  014936  C015  F0A7         	movff	?i2___fldiv+2,_asin$4094+2
 31238  01493A  C016  F0A8         	movff	?i2___fldiv+3,_asin$4094+3
 31239  01493E  C0A5  F07C         	movff	_asin$4094,atan@f
 31240  014942  C0A6  F07D         	movff	_asin$4094+1,atan@f+1
 31241  014946  C0A7  F07E         	movff	_asin$4094+2,atan@f+2
 31242  01494A  C0A8  F07F         	movff	_asin$4094+3,atan@f+3
 31243  01494E  ECAE  F0AE         	call	_atan	;wreg free
 31244  014952  C07C  F09D         	movff	?_atan,_asin$4095
 31245  014956  C07D  F09E         	movff	?_atan+1,_asin$4095+1
 31246  01495A  C07E  F09F         	movff	?_atan+2,_asin$4095+2
 31247  01495E  C07F  F0A0         	movff	?_atan+3,_asin$4095+3
 31248  014962  0EDB               	movlw	219
 31249  014964  6E5A               	movwf	i2___fladd@a,c
 31250  014966  0E0F               	movlw	15
 31251  014968  6E5B               	movwf	i2___fladd@a+1,c
 31252  01496A  0EC9               	movlw	201
 31253  01496C  6E5C               	movwf	i2___fladd@a+2,c
 31254  01496E  0E3F               	movlw	63
 31255  014970  6E5D               	movwf	i2___fladd@a+3,c
 31256  014972  C09D  F02C         	movff	_asin$4095,i2___flneg@f1
 31257  014976  C09E  F02D         	movff	_asin$4095+1,i2___flneg@f1+1
 31258  01497A  C09F  F02E         	movff	_asin$4095+2,i2___flneg@f1+2
 31259  01497E  C0A0  F02F         	movff	_asin$4095+3,i2___flneg@f1+3
 31260  014982  EC2D  F0C0         	call	i2___flneg	;wreg free
 31261  014986  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31262  01498A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31263  01498E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31264  014992  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31265  014996  EC18  F0A2         	call	i2___fladd	;wreg free
 31266  01499A  C056  F099         	movff	?i2___fladd,_asin$4096
 31267  01499E  C057  F09A         	movff	?i2___fladd+1,_asin$4096+1
 31268  0149A2  C058  F09B         	movff	?i2___fladd+2,_asin$4096+2
 31269  0149A6  C059  F09C         	movff	?i2___fladd+3,_asin$4096+3
 31270  0149AA  C099  F02C         	movff	_asin$4096,i2___flneg@f1
 31271  0149AE  C09A  F02D         	movff	_asin$4096+1,i2___flneg@f1+1
 31272  0149B2  C09B  F02E         	movff	_asin$4096+2,i2___flneg@f1+2
 31273  0149B6  C09C  F02F         	movff	_asin$4096+3,i2___flneg@f1+3
 31274  0149BA  EC2D  F0C0         	call	i2___flneg	;wreg free
 31275  0149BE  C02C  F091         	movff	?i2___flneg,?_asin
 31276  0149C2  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 31277  0149C6  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 31278  0149CA  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 31279  0149CE  0012               	return	
 31280  0149D0                     i2l1609:
 31281  0149D0  C091  F017         	movff	asin@x,i2___fldiv@a
 31282  0149D4  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 31283  0149D8  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 31284  0149DC  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 31285  0149E0  C0A1  F013         	movff	asin@y,i2___fldiv@b
 31286  0149E4  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 31287  0149E8  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 31288  0149EC  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 31289  0149F0  ECD8  F0AA         	call	i2___fldiv	;wreg free
 31290  0149F4  C013  F0A5         	movff	?i2___fldiv,_asin$4094
 31291  0149F8  C014  F0A6         	movff	?i2___fldiv+1,_asin$4094+1
 31292  0149FC  C015  F0A7         	movff	?i2___fldiv+2,_asin$4094+2
 31293  014A00  C016  F0A8         	movff	?i2___fldiv+3,_asin$4094+3
 31294  014A04  C0A5  F07C         	movff	_asin$4094,atan@f
 31295  014A08  C0A6  F07D         	movff	_asin$4094+1,atan@f+1
 31296  014A0C  C0A7  F07E         	movff	_asin$4094+2,atan@f+2
 31297  014A10  C0A8  F07F         	movff	_asin$4094+3,atan@f+3
 31298  014A14  ECAE  F0AE         	call	_atan	;wreg free
 31299  014A18  C07C  F09D         	movff	?_atan,_asin$4095
 31300  014A1C  C07D  F09E         	movff	?_atan+1,_asin$4095+1
 31301  014A20  C07E  F09F         	movff	?_atan+2,_asin$4095+2
 31302  014A24  C07F  F0A0         	movff	?_atan+3,_asin$4095+3
 31303  014A28  C09D  F02C         	movff	_asin$4095,i2___flneg@f1
 31304  014A2C  C09E  F02D         	movff	_asin$4095+1,i2___flneg@f1+1
 31305  014A30  C09F  F02E         	movff	_asin$4095+2,i2___flneg@f1+2
 31306  014A34  C0A0  F02F         	movff	_asin$4095+3,i2___flneg@f1+3
 31307  014A38  EC2D  F0C0         	call	i2___flneg	;wreg free
 31308  014A3C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 31309  014A40  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 31310  014A44  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 31311  014A48  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 31312  014A4C  0EDB               	movlw	219
 31313  014A4E  6E5A               	movwf	i2___fladd@a,c
 31314  014A50  0E0F               	movlw	15
 31315  014A52  6E5B               	movwf	i2___fladd@a+1,c
 31316  014A54  0EC9               	movlw	201
 31317  014A56  6E5C               	movwf	i2___fladd@a+2,c
 31318  014A58  0E3F               	movlw	63
 31319  014A5A  6E5D               	movwf	i2___fladd@a+3,c
 31320  014A5C  EC18  F0A2         	call	i2___fladd	;wreg free
 31321  014A60  C056  F091         	movff	?i2___fladd,?_asin
 31322  014A64  C057  F092         	movff	?i2___fladd+1,?_asin+1
 31323  014A68  C058  F093         	movff	?i2___fladd+2,?_asin+2
 31324  014A6C  C059  F094         	movff	?i2___fladd+3,?_asin+3
 31325  014A70  0012               	return	
 31326  014A72                     __end_of_asin:
 31327                           	opt stack 0
 31328                           tosu	equ	0xFFF
 31329                           tosh	equ	0xFFE
 31330                           tosl	equ	0xFFD
 31331                           pclatu	equ	0xFFB
 31332                           pclath	equ	0xFFA
 31333                           tblptru	equ	0xFF8
 31334                           tblptrh	equ	0xFF7
 31335                           tblptrl	equ	0xFF6
 31336                           tablat	equ	0xFF5
 31337                           prodh	equ	0xFF4
 31338                           prodl	equ	0xFF3
 31339                           intcon	equ	0xFF2
 31340                           indf0	equ	0xFEF
 31341                           postinc0	equ	0xFEE
 31342                           fsr0h	equ	0xFEA
 31343                           fsr0l	equ	0xFE9
 31344                           wreg	equ	0xFE8
 31345                           indf1	equ	0xFE7
 31346                           postdec1	equ	0xFE5
 31347                           plusw1	equ	0xFE3
 31348                           fsr1h	equ	0xFE2
 31349                           fsr1l	equ	0xFE1
 31350                           bsr	equ	0xFE0
 31351                           indf2	equ	0xFDF
 31352                           postinc2	equ	0xFDE
 31353                           postdec2	equ	0xFDD
 31354                           plusw2	equ	0xFDB
 31355                           fsr2h	equ	0xFDA
 31356                           fsr2l	equ	0xFD9
 31357                           status	equ	0xFD8
 31358                           
 31359 ;; *************** function _sqrt *****************
 31360 ;; Defined at:
 31361 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 31362 ;; Parameters:    Size  Location     Type
 31363 ;;  a               4   12[BANK0 ] void 
 31364 ;; Auto vars:     Size  Location     Type
 31365 ;;  frac            4   37[BANK0 ] unsigned long 
 31366 ;;  root            4   33[BANK0 ] struct .
 31367 ;;  grs             4   27[BANK0 ] unsigned long 
 31368 ;;  tfrac           4   22[BANK0 ] unsigned long 
 31369 ;;  exp             2   31[BANK0 ] int 
 31370 ;;  p               1   26[BANK0 ] unsigned char 
 31371 ;;  i               1   21[BANK0 ] unsigned char 
 31372 ;;  sign            1   20[BANK0 ] unsigned char 
 31373 ;; Return value:  Size  Location     Type
 31374 ;;                  4   12[BANK0 ] unsigned char 
 31375 ;; Registers used:
 31376 ;;		wreg, status,2, status,0
 31377 ;; Tracked objects:
 31378 ;;		On entry : 0/0
 31379 ;;		On exit  : 0/0
 31380 ;;		Unchanged: 0/0
 31381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31382 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31383 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31384 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31385 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31386 ;;Total ram usage:       29 bytes
 31387 ;; Hardware stack levels used:    1
 31388 ;; This function calls:
 31389 ;;		Nothing
 31390 ;; This function is called by:
 31391 ;;		_peakToRMS
 31392 ;;		_asin
 31393 ;; This function uses a non-reentrant model
 31394 ;;
 31395                           
 31396                           	psect	text105
 31397  014D6C                     __ptext105:
 31398                           	opt stack 0
 31399  014D6C                     _sqrt:
 31400                           	opt stack 15
 31401                           
 31402                           ;incstack = 0
 31403  014D6C  0100               	movlb	0	; () banked
 31404  014D6E  516F               	movf	(sqrt@a+3)& (0+255),w,b
 31405  014D70  0B80               	andlw	128
 31406  014D72  6F74               	movwf	sqrt@sign& (0+255),b
 31407  014D74  516F               	movf	(sqrt@a+3)& (0+255),w,b
 31408  014D76  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 31409  014D78  6F7A               	movwf	sqrt@p& (0+255),b
 31410                           
 31411                           ; BSR set to: 0
 31412  014D7A  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 31413                           
 31414                           ; BSR set to: 0
 31415  014D7C  817A               	bsf	sqrt@p& (0+255),0,b
 31416                           
 31417                           ; BSR set to: 0
 31418                           
 31419                           ; BSR set to: 0
 31420  014D7E  C07A  F07F         	movff	sqrt@p,sqrt@exp
 31421  014D82  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 31422                           
 31423                           ; BSR set to: 0
 31424  014D84  0EFF               	movlw	255
 31425  014D86  156C               	andwf	sqrt@a& (0+255),w,b
 31426  014D88  6F85               	movwf	sqrt@frac& (0+255),b
 31427  014D8A  0EFF               	movlw	255
 31428  014D8C  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 31429  014D8E  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 31430  014D90  0E7F               	movlw	127
 31431  014D92  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 31432  014D94  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 31433  014D96  0E00               	movlw	0
 31434  014D98  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 31435  014D9A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 31436                           
 31437                           ; BSR set to: 0
 31438  014D9C  517F               	movf	sqrt@exp& (0+255),w,b
 31439  014D9E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 31440  014DA0  B4D8               	btfsc	status,2,c
 31441  014DA2  D005               	goto	i2l2135
 31442                           
 31443                           ; BSR set to: 0
 31444  014DA4  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 31445                           
 31446                           ; BSR set to: 0
 31447  014DA6  297F               	incf	sqrt@exp& (0+255),w,b
 31448  014DA8  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 31449  014DAA  A4D8               	btfss	status,2,c
 31450  014DAC  D008               	goto	i2l2137
 31451  014DAE                     i2l2135:
 31452                           
 31453                           ; BSR set to: 0
 31454                           
 31455                           ; BSR set to: 0
 31456  014DAE  0E00               	movlw	0
 31457  014DB0  6F85               	movwf	sqrt@frac& (0+255),b
 31458  014DB2  0E00               	movlw	0
 31459  014DB4  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 31460  014DB6  0E00               	movlw	0
 31461  014DB8  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 31462  014DBA  0E00               	movlw	0
 31463  014DBC  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 31464  014DBE                     i2l2137:
 31465                           
 31466                           ; BSR set to: 0
 31467                           
 31468                           ; BSR set to: 0
 31469  014DBE  517F               	movf	sqrt@exp& (0+255),w,b
 31470  014DC0  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 31471  014DC2  A4D8               	btfss	status,2,c
 31472  014DC4  D009               	goto	i2l2138
 31473                           
 31474                           ; BSR set to: 0
 31475  014DC6  0E00               	movlw	0
 31476  014DC8  6F6C               	movwf	?_sqrt& (0+255),b
 31477  014DCA  0E00               	movlw	0
 31478  014DCC  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 31479  014DCE  0E00               	movlw	0
 31480  014DD0  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 31481  014DD2  0E00               	movlw	0
 31482  014DD4  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 31483                           
 31484                           ; BSR set to: 0
 31485  014DD6  0012               	return	
 31486  014DD8                     i2l2138:
 31487                           
 31488                           ; BSR set to: 0
 31489                           
 31490                           ; BSR set to: 0
 31491  014DD8  5174               	movf	sqrt@sign& (0+255),w,b
 31492  014DDA  B4D8               	btfsc	status,2,c
 31493  014DDC  D01A               	goto	i2l2140
 31494                           
 31495                           ; BSR set to: 0
 31496  014DDE  0E00               	movlw	0
 31497  014DE0  6F81               	movwf	sqrt@root& (0+255),b
 31498  014DE2  0E00               	movlw	0
 31499  014DE4  6F82               	movwf	(sqrt@root+1)& (0+255),b
 31500  014DE6  0E40               	movlw	64
 31501  014DE8  6F83               	movwf	(sqrt@root+2)& (0+255),b
 31502  014DEA  0E00               	movlw	0
 31503  014DEC  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31504                           
 31505                           ; BSR set to: 0
 31506  014DEE  0E80               	movlw	128
 31507  014DF0  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 31508  014DF2  0EFF               	movlw	255
 31509  014DF4  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 31510                           
 31511                           ; BSR set to: 0
 31512  014DF6  0E00               	movlw	0
 31513  014DF8  0102               	movlb	2	; () banked
 31514  014DFA  6F77               	movwf	(_errno+1)& (0+255),b
 31515  014DFC  0E21               	movlw	33
 31516  014DFE  6F76               	movwf	_errno& (0+255),b
 31517                           
 31518                           ; BSR set to: 2
 31519  014E00  C081  F06C         	movff	sqrt@root,?_sqrt
 31520  014E04  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 31521  014E08  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 31522  014E0C  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 31523                           
 31524                           ; BSR set to: 2
 31525  014E10  0012               	return	
 31526  014E12                     i2l2140:
 31527                           
 31528                           ; BSR set to: 2
 31529  014E12  0100               	movlb	0	; () banked
 31530  014E14  297F               	incf	sqrt@exp& (0+255),w,b
 31531  014E16  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 31532  014E18  A4D8               	btfss	status,2,c
 31533  014E1A  D011               	goto	i2l2141
 31534                           
 31535                           ; BSR set to: 0
 31536  014E1C  0E00               	movlw	0
 31537  014E1E  6F81               	movwf	sqrt@root& (0+255),b
 31538  014E20  0E00               	movlw	0
 31539  014E22  6F82               	movwf	(sqrt@root+1)& (0+255),b
 31540  014E24  0E80               	movlw	128
 31541  014E26  6F83               	movwf	(sqrt@root+2)& (0+255),b
 31542  014E28  0E7F               	movlw	127
 31543  014E2A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31544                           
 31545                           ; BSR set to: 0
 31546  014E2C  C081  F06C         	movff	sqrt@root,?_sqrt
 31547  014E30  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 31548  014E34  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 31549  014E38  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 31550                           
 31551                           ; BSR set to: 0
 31552  014E3C  0012               	return	
 31553  014E3E                     i2l2141:
 31554                           
 31555                           ; BSR set to: 0
 31556                           
 31557                           ; BSR set to: 0
 31558  014E3E  0E81               	movlw	129
 31559  014E40  277F               	addwf	sqrt@exp& (0+255),f,b
 31560  014E42  0EFF               	movlw	255
 31561  014E44  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 31562  014E46  517F               	movf	sqrt@exp& (0+255),w,b
 31563  014E48  0B01               	andlw	1
 31564  014E4A  6F7A               	movwf	sqrt@p& (0+255),b
 31565  014E4C  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 31566  014E4E  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 31567  014E50  337F               	rrcf	sqrt@exp& (0+255),f,b
 31568  014E52  0E7F               	movlw	127
 31569  014E54  277F               	addwf	sqrt@exp& (0+255),f,b
 31570  014E56  0E00               	movlw	0
 31571  014E58  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 31572  014E5A  90D8               	bcf	status,0,c
 31573  014E5C  3585               	rlcf	sqrt@frac& (0+255),w,b
 31574  014E5E  6F76               	movwf	sqrt@tfrac& (0+255),b
 31575  014E60  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 31576  014E62  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 31577  014E64  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 31578  014E66  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 31579  014E68  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 31580  014E6A  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 31581                           
 31582                           ; BSR set to: 0
 31583  014E6C  0E00               	movlw	0
 31584  014E6E  6F85               	movwf	sqrt@frac& (0+255),b
 31585  014E70  0E00               	movlw	0
 31586  014E72  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 31587  014E74  0E00               	movlw	0
 31588  014E76  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 31589  014E78  0E00               	movlw	0
 31590  014E7A  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 31591                           
 31592                           ; BSR set to: 0
 31593  014E7C  0E00               	movlw	0
 31594  014E7E  6F7B               	movwf	sqrt@grs& (0+255),b
 31595  014E80  0E00               	movlw	0
 31596  014E82  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 31597  014E84  0E00               	movlw	0
 31598  014E86  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 31599  014E88  0E01               	movlw	1
 31600  014E8A  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 31601                           
 31602                           ; BSR set to: 0
 31603  014E8C  517A               	movf	sqrt@p& (0+255),w,b
 31604  014E8E  B4D8               	btfsc	status,2,c
 31605  014E90  D005               	goto	i2l2142
 31606                           
 31607                           ; BSR set to: 0
 31608  014E92  90D8               	bcf	status,0,c
 31609  014E94  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 31610  014E96  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 31611  014E98  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 31612  014E9A  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 31613  014E9C                     i2l2142:
 31614                           
 31615                           ; BSR set to: 0
 31616                           
 31617                           ; BSR set to: 0
 31618  014E9C  0E00               	movlw	0
 31619  014E9E  6F75               	movwf	sqrt@i& (0+255),b
 31620  014EA0  D052               	goto	i2l2143
 31621  014EA2                     
 31622                           ; BSR set to: 0
 31623                           
 31624                           ; BSR set to: 0
 31625  014EA2  517B               	movf	sqrt@grs& (0+255),w,b
 31626  014EA4  1385               	iorwf	sqrt@frac& (0+255),f,b
 31627  014EA6  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 31628  014EA8  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 31629  014EAA  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 31630  014EAC  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 31631  014EAE  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 31632  014EB0  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 31633  014EB2  5185               	movf	sqrt@frac& (0+255),w,b
 31634  014EB4  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 31635  014EB6  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 31636  014EB8  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 31637  014EBA  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 31638  014EBC  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 31639  014EBE  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 31640  014EC0  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 31641  014EC2  A0D8               	btfss	status,0,c
 31642  014EC4  D011               	goto	i2l2145
 31643                           
 31644                           ; BSR set to: 0
 31645  014EC6  5185               	movf	sqrt@frac& (0+255),w,b
 31646  014EC8  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 31647  014ECA  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 31648  014ECC  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 31649  014ECE  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 31650  014ED0  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 31651  014ED2  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 31652  014ED4  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 31653  014ED6  517B               	movf	sqrt@grs& (0+255),w,b
 31654  014ED8  2785               	addwf	sqrt@frac& (0+255),f,b
 31655  014EDA  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 31656  014EDC  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 31657  014EDE  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 31658  014EE0  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 31659  014EE2  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 31660  014EE4  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 31661  014EE6  D014               	goto	i2l2146
 31662  014EE8                     i2l2145:
 31663                           
 31664                           ; BSR set to: 0
 31665                           
 31666                           ; BSR set to: 0
 31667  014EE8  C07B  F070         	movff	sqrt@grs,??_sqrt
 31668  014EEC  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 31669  014EF0  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 31670  014EF4  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 31671  014EF8  1F70               	comf	??_sqrt& (0+255),f,b
 31672  014EFA  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 31673  014EFC  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 31674  014EFE  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 31675  014F00  5170               	movf	??_sqrt& (0+255),w,b
 31676  014F02  1785               	andwf	sqrt@frac& (0+255),f,b
 31677  014F04  5171               	movf	(??_sqrt+1)& (0+255),w,b
 31678  014F06  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 31679  014F08  5172               	movf	(??_sqrt+2)& (0+255),w,b
 31680  014F0A  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 31681  014F0C  5173               	movf	(??_sqrt+3)& (0+255),w,b
 31682  014F0E  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 31683  014F10                     i2l2146:
 31684                           
 31685                           ; BSR set to: 0
 31686                           
 31687                           ; BSR set to: 0
 31688  014F10  C07B  F070         	movff	sqrt@grs,??_sqrt
 31689  014F14  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 31690  014F18  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 31691  014F1C  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 31692  014F20  90D8               	bcf	status,0,c
 31693  014F22  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31694  014F24  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31695  014F26  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31696  014F28  3370               	rrcf	??_sqrt& (0+255),f,b
 31697  014F2A  C070  F07B         	movff	??_sqrt,sqrt@grs
 31698  014F2E  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 31699  014F32  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 31700  014F36  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 31701                           
 31702                           ; BSR set to: 0
 31703  014F3A  90D8               	bcf	status,0,c
 31704  014F3C  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 31705  014F3E  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 31706  014F40  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 31707  014F42  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 31708                           
 31709                           ; BSR set to: 0
 31710  014F44  2B75               	incf	sqrt@i& (0+255),f,b
 31711  014F46                     i2l2143:
 31712                           
 31713                           ; BSR set to: 0
 31714                           
 31715                           ; BSR set to: 0
 31716  014F46  0E18               	movlw	24
 31717  014F48  6575               	cpfsgt	sqrt@i& (0+255),b
 31718  014F4A  D7AB               	goto	i2l2144
 31719                           
 31720                           ; BSR set to: 0
 31721                           
 31722                           ; BSR set to: 0
 31723  014F4C  C085  F070         	movff	sqrt@frac,??_sqrt
 31724  014F50  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31725  014F54  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31726  014F58  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31727  014F5C  90D8               	bcf	status,0,c
 31728  014F5E  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31729  014F60  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31730  014F62  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31731  014F64  3370               	rrcf	??_sqrt& (0+255),f,b
 31732  014F66  C070  F085         	movff	??_sqrt,sqrt@frac
 31733  014F6A  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31734  014F6E  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31735  014F72  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31736                           
 31737                           ; BSR set to: 0
 31738  014F76  0E01               	movlw	1
 31739  014F78  1585               	andwf	sqrt@frac& (0+255),w,b
 31740  014F7A  6F7B               	movwf	sqrt@grs& (0+255),b
 31741  014F7C  0E00               	movlw	0
 31742  014F7E  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 31743  014F80  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 31744  014F82  0E00               	movlw	0
 31745  014F84  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 31746  014F86  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 31747  014F88  0E00               	movlw	0
 31748  014F8A  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 31749  014F8C  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 31750                           
 31751                           ; BSR set to: 0
 31752  014F8E  C085  F070         	movff	sqrt@frac,??_sqrt
 31753  014F92  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31754  014F96  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31755  014F9A  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31756  014F9E  90D8               	bcf	status,0,c
 31757  014FA0  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31758  014FA2  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31759  014FA4  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31760  014FA6  3370               	rrcf	??_sqrt& (0+255),f,b
 31761  014FA8  C070  F085         	movff	??_sqrt,sqrt@frac
 31762  014FAC  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31763  014FB0  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31764  014FB4  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31765  014FB8  517B               	movf	sqrt@grs& (0+255),w,b
 31766  014FBA  2785               	addwf	sqrt@frac& (0+255),f,b
 31767  014FBC  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 31768  014FBE  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 31769  014FC0  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 31770  014FC2  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 31771  014FC4  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 31772  014FC6  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 31773                           
 31774                           ; BSR set to: 0
 31775  014FC8  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 31776  014FCA  D017               	goto	i2l2148
 31777                           
 31778                           ; BSR set to: 0
 31779  014FCC  C085  F070         	movff	sqrt@frac,??_sqrt
 31780  014FD0  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 31781  014FD4  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 31782  014FD8  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 31783  014FDC  90D8               	bcf	status,0,c
 31784  014FDE  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 31785  014FE0  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 31786  014FE2  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 31787  014FE4  3370               	rrcf	??_sqrt& (0+255),f,b
 31788  014FE6  C070  F085         	movff	??_sqrt,sqrt@frac
 31789  014FEA  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 31790  014FEE  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 31791  014FF2  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 31792  014FF6  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 31793  014FF8  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 31794  014FFA                     i2l2148:
 31795                           
 31796                           ; BSR set to: 0
 31797                           
 31798                           ; BSR set to: 0
 31799  014FFA  0EFF               	movlw	255
 31800  014FFC  1585               	andwf	sqrt@frac& (0+255),w,b
 31801  014FFE  6F81               	movwf	sqrt@root& (0+255),b
 31802  015000  0EFF               	movlw	255
 31803  015002  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 31804  015004  6F82               	movwf	(sqrt@root+1)& (0+255),b
 31805  015006  0E7F               	movlw	127
 31806  015008  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 31807  01500A  6F83               	movwf	(sqrt@root+2)& (0+255),b
 31808  01500C  0E00               	movlw	0
 31809  01500E  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 31810  015010  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31811                           
 31812                           ; BSR set to: 0
 31813  015012  C07F  F07A         	movff	sqrt@exp,sqrt@p
 31814                           
 31815                           ; BSR set to: 0
 31816  015016  B17A               	btfsc	sqrt@p& (0+255),0,b
 31817                           
 31818                           ; BSR set to: 0
 31819  015018  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 31820                           
 31821                           ; BSR set to: 0
 31822                           
 31823                           ; BSR set to: 0
 31824  01501A  90D8               	bcf	status,0,c
 31825  01501C  317A               	rrcf	sqrt@p& (0+255),w,b
 31826  01501E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 31827                           
 31828                           ; BSR set to: 0
 31829  015020  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 31830                           
 31831                           ; BSR set to: 0
 31832  015022  C081  F06C         	movff	sqrt@root,?_sqrt
 31833  015026  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 31834  01502A  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 31835  01502E  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 31836  015032  0012               	return	
 31837  015034                     __end_of_sqrt:
 31838                           	opt stack 0
 31839                           tosu	equ	0xFFF
 31840                           tosh	equ	0xFFE
 31841                           tosl	equ	0xFFD
 31842                           pclatu	equ	0xFFB
 31843                           pclath	equ	0xFFA
 31844                           tblptru	equ	0xFF8
 31845                           tblptrh	equ	0xFF7
 31846                           tblptrl	equ	0xFF6
 31847                           tablat	equ	0xFF5
 31848                           prodh	equ	0xFF4
 31849                           prodl	equ	0xFF3
 31850                           intcon	equ	0xFF2
 31851                           indf0	equ	0xFEF
 31852                           postinc0	equ	0xFEE
 31853                           fsr0h	equ	0xFEA
 31854                           fsr0l	equ	0xFE9
 31855                           wreg	equ	0xFE8
 31856                           indf1	equ	0xFE7
 31857                           postdec1	equ	0xFE5
 31858                           plusw1	equ	0xFE3
 31859                           fsr1h	equ	0xFE2
 31860                           fsr1l	equ	0xFE1
 31861                           bsr	equ	0xFE0
 31862                           indf2	equ	0xFDF
 31863                           postinc2	equ	0xFDE
 31864                           postdec2	equ	0xFDD
 31865                           plusw2	equ	0xFDB
 31866                           fsr2h	equ	0xFDA
 31867                           fsr2l	equ	0xFD9
 31868                           status	equ	0xFD8
 31869                           
 31870 ;; *************** function _atan *****************
 31871 ;; Defined at:
 31872 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 31873 ;; Parameters:    Size  Location     Type
 31874 ;;  f               4   28[BANK0 ] unsigned char 
 31875 ;; Auto vars:     Size  Location     Type
 31876 ;;  val             4   45[BANK0 ] unsigned char 
 31877 ;;  val_squared     4   41[BANK0 ] unsigned char 
 31878 ;;  x               4   36[BANK0 ] unsigned char 
 31879 ;;  y               4   32[BANK0 ] unsigned char 
 31880 ;;  recip           1   40[BANK0 ] unsigned char 
 31881 ;; Return value:  Size  Location     Type
 31882 ;;                  4   28[BANK0 ] unsigned char 
 31883 ;; Registers used:
 31884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31885 ;; Tracked objects:
 31886 ;;		On entry : 0/0
 31887 ;;		On exit  : 0/0
 31888 ;;		Unchanged: 0/0
 31889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31890 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31891 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31893 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31894 ;;Total ram usage:       21 bytes
 31895 ;; Hardware stack levels used:    1
 31896 ;; Hardware stack levels required when called:    2
 31897 ;; This function calls:
 31898 ;;		_eval_poly
 31899 ;;		_fabs
 31900 ;;		i2___fladd
 31901 ;;		i2___fldiv
 31902 ;;		i2___flge
 31903 ;;		i2___flmul
 31904 ;;		i2___flneg
 31905 ;; This function is called by:
 31906 ;;		_asin
 31907 ;; This function uses a non-reentrant model
 31908 ;;
 31909                           
 31910                           	psect	text106
 31911  015D5C                     __ptext106:
 31912                           	opt stack 0
 31913  015D5C                     _atan:
 31914                           	opt stack 11
 31915                           
 31916                           ;incstack = 0
 31917  015D5C  C07C  F030         	movff	atan@f,fabs@d
 31918  015D60  C07D  F031         	movff	atan@f+1,fabs@d+1
 31919  015D64  C07E  F032         	movff	atan@f+2,fabs@d+2
 31920  015D68  C07F  F033         	movff	atan@f+3,fabs@d+3
 31921  015D6C  EC29  F0BF         	call	_fabs	;wreg free
 31922  015D70  C030  F08D         	movff	?_fabs,atan@val
 31923  015D74  C031  F08E         	movff	?_fabs+1,atan@val+1
 31924  015D78  C032  F08F         	movff	?_fabs+2,atan@val+2
 31925  015D7C  C033  F090         	movff	?_fabs+3,atan@val+3
 31926  015D80  0100               	movlb	0	; () banked
 31927  015D82  518D               	movf	atan@val& (0+255),w,b
 31928  015D84  118E               	iorwf	(atan@val+1)& (0+255),w,b
 31929  015D86  118F               	iorwf	(atan@val+2)& (0+255),w,b
 31930  015D88  1190               	iorwf	(atan@val+3)& (0+255),w,b
 31931  015D8A  A4D8               	btfss	status,2,c
 31932  015D8C  D009               	goto	i2l1625
 31933                           
 31934                           ; BSR set to: 0
 31935  015D8E  0E00               	movlw	0
 31936  015D90  6F7C               	movwf	?_atan& (0+255),b
 31937  015D92  0E00               	movlw	0
 31938  015D94  6F7D               	movwf	(?_atan+1)& (0+255),b
 31939  015D96  0E00               	movlw	0
 31940  015D98  6F7E               	movwf	(?_atan+2)& (0+255),b
 31941  015D9A  0E00               	movlw	0
 31942  015D9C  6F7F               	movwf	(?_atan+3)& (0+255),b
 31943                           
 31944                           ; BSR set to: 0
 31945  015D9E  0012               	return	
 31946  015DA0                     i2l1625:
 31947                           
 31948                           ; BSR set to: 0
 31949                           
 31950                           ; BSR set to: 0
 31951  015DA0  0E00               	movlw	0
 31952  015DA2  6E34               	movwf	i2___flge@ff1,c
 31953  015DA4  0E00               	movlw	0
 31954  015DA6  6E35               	movwf	i2___flge@ff1+1,c
 31955  015DA8  0E80               	movlw	128
 31956  015DAA  6E36               	movwf	i2___flge@ff1+2,c
 31957  015DAC  0E3F               	movlw	63
 31958  015DAE  6E37               	movwf	i2___flge@ff1+3,c
 31959  015DB0  C08D  F038         	movff	atan@val,i2___flge@ff2
 31960  015DB4  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 31961  015DB8  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 31962  015DBC  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 31963  015DC0  EC08  F0B4         	call	i2___flge	;wreg free
 31964  015DC4  B0D8               	btfsc	status,0,c
 31965  015DC6  D002               	goto	i2u1375_40
 31966  015DC8  0E01               	movlw	1
 31967  015DCA  D001               	goto	i2u1376_40
 31968  015DCC                     i2u1375_40:
 31969  015DCC  0E00               	movlw	0
 31970  015DCE                     i2u1376_40:
 31971  015DCE  0100               	movlb	0	; () banked
 31972  015DD0  6F88               	movwf	atan@recip& (0+255),b
 31973  015DD2  5188               	movf	atan@recip& (0+255),w,b
 31974  015DD4  B4D8               	btfsc	status,2,c
 31975  015DD6  D01A               	goto	i2l1627
 31976                           
 31977                           ; BSR set to: 0
 31978  015DD8  0E00               	movlw	0
 31979  015DDA  6E13               	movwf	i2___fldiv@b,c
 31980  015DDC  0E00               	movlw	0
 31981  015DDE  6E14               	movwf	i2___fldiv@b+1,c
 31982  015DE0  0E80               	movlw	128
 31983  015DE2  6E15               	movwf	i2___fldiv@b+2,c
 31984  015DE4  0E3F               	movlw	63
 31985  015DE6  6E16               	movwf	i2___fldiv@b+3,c
 31986  015DE8  C08D  F017         	movff	atan@val,i2___fldiv@a
 31987  015DEC  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 31988  015DF0  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 31989  015DF4  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 31990  015DF8  ECD8  F0AA         	call	i2___fldiv	;wreg free
 31991  015DFC  C013  F08D         	movff	?i2___fldiv,atan@val
 31992  015E00  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 31993  015E04  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 31994  015E08  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 31995  015E0C                     i2l1627:
 31996  015E0C  C08D  F030         	movff	atan@val,i2___flmul@b
 31997  015E10  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 31998  015E14  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 31999  015E18  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 32000  015E1C  C08D  F034         	movff	atan@val,i2___flmul@a
 32001  015E20  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 32002  015E24  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 32003  015E28  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 32004  015E2C  ECD1  F09E         	call	i2___flmul	;wreg free
 32005  015E30  C030  F089         	movff	?i2___flmul,atan@val_squared
 32006  015E34  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 32007  015E38  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 32008  015E3C  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 32009  015E40  C089  F06C         	movff	atan@val_squared,eval_poly@x
 32010  015E44  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 32011  015E48  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 32012  015E4C  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 32013  015E50  0EF7               	movlw	low atan@coeff_b
 32014  015E52  0100               	movlb	0	; () banked
 32015  015E54  6F70               	movwf	eval_poly@d& (0+255),b
 32016  015E56  0EEA               	movlw	high atan@coeff_b
 32017  015E58  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 32018  015E5A  0E00               	movlw	0
 32019  015E5C  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 32020  015E5E  0E04               	movlw	4
 32021  015E60  6F72               	movwf	eval_poly@n& (0+255),b
 32022  015E62  ECAF  F0B5         	call	_eval_poly	;wreg free
 32023  015E66  C06C  F080         	movff	?_eval_poly,atan@y
 32024  015E6A  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 32025  015E6E  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 32026  015E72  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 32027  015E76  C089  F06C         	movff	atan@val_squared,eval_poly@x
 32028  015E7A  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 32029  015E7E  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 32030  015E82  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 32031  015E86  0ECB               	movlw	low atan@coeff_a
 32032  015E88  0100               	movlb	0	; () banked
 32033  015E8A  6F70               	movwf	eval_poly@d& (0+255),b
 32034  015E8C  0EEA               	movlw	high atan@coeff_a
 32035  015E8E  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 32036  015E90  0E00               	movlw	0
 32037  015E92  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 32038  015E94  0E05               	movlw	5
 32039  015E96  6F72               	movwf	eval_poly@n& (0+255),b
 32040  015E98  ECAF  F0B5         	call	_eval_poly	;wreg free
 32041  015E9C  C06C  F084         	movff	?_eval_poly,atan@x
 32042  015EA0  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 32043  015EA4  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 32044  015EA8  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 32045  015EAC  C08D  F030         	movff	atan@val,i2___flmul@b
 32046  015EB0  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 32047  015EB4  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 32048  015EB8  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 32049  015EBC  C080  F017         	movff	atan@y,i2___fldiv@a
 32050  015EC0  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 32051  015EC4  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 32052  015EC8  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 32053  015ECC  C084  F013         	movff	atan@x,i2___fldiv@b
 32054  015ED0  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 32055  015ED4  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 32056  015ED8  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 32057  015EDC  ECD8  F0AA         	call	i2___fldiv	;wreg free
 32058  015EE0  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 32059  015EE4  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 32060  015EE8  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 32061  015EEC  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 32062  015EF0  ECD1  F09E         	call	i2___flmul	;wreg free
 32063  015EF4  C030  F08D         	movff	?i2___flmul,atan@val
 32064  015EF8  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 32065  015EFC  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 32066  015F00  C033  F090         	movff	?i2___flmul+3,atan@val+3
 32067  015F04  0100               	movlb	0	; () banked
 32068  015F06  5188               	movf	atan@recip& (0+255),w,b
 32069  015F08  B4D8               	btfsc	status,2,c
 32070  015F0A  D024               	goto	i2l1628
 32071                           
 32072                           ; BSR set to: 0
 32073  015F0C  C08D  F02C         	movff	atan@val,i2___flneg@f1
 32074  015F10  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 32075  015F14  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 32076  015F18  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 32077  015F1C  EC2D  F0C0         	call	i2___flneg	;wreg free
 32078  015F20  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32079  015F24  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32080  015F28  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32081  015F2C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32082  015F30  0EDB               	movlw	219
 32083  015F32  6E5A               	movwf	i2___fladd@a,c
 32084  015F34  0E0F               	movlw	15
 32085  015F36  6E5B               	movwf	i2___fladd@a+1,c
 32086  015F38  0EC9               	movlw	201
 32087  015F3A  6E5C               	movwf	i2___fladd@a+2,c
 32088  015F3C  0E3F               	movlw	63
 32089  015F3E  6E5D               	movwf	i2___fladd@a+3,c
 32090  015F40  EC18  F0A2         	call	i2___fladd	;wreg free
 32091  015F44  C056  F08D         	movff	?i2___fladd,atan@val
 32092  015F48  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 32093  015F4C  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 32094  015F50  C059  F090         	movff	?i2___fladd+3,atan@val+3
 32095  015F54                     i2l1628:
 32096  015F54  0100               	movlb	0	; () banked
 32097  015F56  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 32098  015F58  D009               	goto	i2l1630
 32099                           
 32100                           ; BSR set to: 0
 32101  015F5A  C08D  F07C         	movff	atan@val,?_atan
 32102  015F5E  C08E  F07D         	movff	atan@val+1,?_atan+1
 32103  015F62  C08F  F07E         	movff	atan@val+2,?_atan+2
 32104  015F66  C090  F07F         	movff	atan@val+3,?_atan+3
 32105  015F6A  0012               	return	
 32106  015F6C                     i2l1630:
 32107                           
 32108                           ; BSR set to: 0
 32109                           
 32110                           ; BSR set to: 0
 32111  015F6C  C08D  F02C         	movff	atan@val,i2___flneg@f1
 32112  015F70  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 32113  015F74  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 32114  015F78  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 32115  015F7C  EC2D  F0C0         	call	i2___flneg	;wreg free
 32116  015F80  C02C  F07C         	movff	?i2___flneg,?_atan
 32117  015F84  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 32118  015F88  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 32119  015F8C  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 32120  015F90  0012               	return	
 32121  015F92                     __end_of_atan:
 32122                           	opt stack 0
 32123                           tosu	equ	0xFFF
 32124                           tosh	equ	0xFFE
 32125                           tosl	equ	0xFFD
 32126                           pclatu	equ	0xFFB
 32127                           pclath	equ	0xFFA
 32128                           tblptru	equ	0xFF8
 32129                           tblptrh	equ	0xFF7
 32130                           tblptrl	equ	0xFF6
 32131                           tablat	equ	0xFF5
 32132                           prodh	equ	0xFF4
 32133                           prodl	equ	0xFF3
 32134                           intcon	equ	0xFF2
 32135                           indf0	equ	0xFEF
 32136                           postinc0	equ	0xFEE
 32137                           fsr0h	equ	0xFEA
 32138                           fsr0l	equ	0xFE9
 32139                           wreg	equ	0xFE8
 32140                           indf1	equ	0xFE7
 32141                           postdec1	equ	0xFE5
 32142                           plusw1	equ	0xFE3
 32143                           fsr1h	equ	0xFE2
 32144                           fsr1l	equ	0xFE1
 32145                           bsr	equ	0xFE0
 32146                           indf2	equ	0xFDF
 32147                           postinc2	equ	0xFDE
 32148                           postdec2	equ	0xFDD
 32149                           plusw2	equ	0xFDB
 32150                           fsr2h	equ	0xFDA
 32151                           fsr2l	equ	0xFD9
 32152                           status	equ	0xFD8
 32153                           
 32154 ;; *************** function _fabs *****************
 32155 ;; Defined at:
 32156 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 32157 ;; Parameters:    Size  Location     Type
 32158 ;;  d               4   47[COMRAM] unsigned char 
 32159 ;; Auto vars:     Size  Location     Type
 32160 ;;		None
 32161 ;; Return value:  Size  Location     Type
 32162 ;;                  4   47[COMRAM] unsigned char 
 32163 ;; Registers used:
 32164 ;;		wreg, status,2, status,0, cstack
 32165 ;; Tracked objects:
 32166 ;;		On entry : 0/0
 32167 ;;		On exit  : 0/0
 32168 ;;		Unchanged: 0/0
 32169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32174 ;;Total ram usage:        4 bytes
 32175 ;; Hardware stack levels used:    1
 32176 ;; Hardware stack levels required when called:    1
 32177 ;; This function calls:
 32178 ;;		i2___flneg
 32179 ;; This function is called by:
 32180 ;;		_asin
 32181 ;;		_atan
 32182 ;; This function uses a non-reentrant model
 32183 ;;
 32184                           
 32185                           	psect	text107
 32186  017E52                     __ptext107:
 32187                           	opt stack 0
 32188  017E52                     _fabs:
 32189                           	opt stack 12
 32190                           
 32191                           ;incstack = 0
 32192  017E52  AE33               	btfss	fabs@d+3,7,c
 32193  017E54  D013               	goto	i2l1722
 32194  017E56  C030  F02C         	movff	fabs@d,i2___flneg@f1
 32195  017E5A  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 32196  017E5E  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 32197  017E62  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 32198  017E66  EC2D  F0C0         	call	i2___flneg	;wreg free
 32199  017E6A  C02C  F030         	movff	?i2___flneg,?_fabs
 32200  017E6E  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 32201  017E72  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 32202  017E76  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 32203  017E7A  0012               	return	
 32204  017E7C                     i2l1722:
 32205  017E7C  C030  F030         	movff	fabs@d,?_fabs
 32206  017E80  C031  F031         	movff	fabs@d+1,?_fabs+1
 32207  017E84  C032  F032         	movff	fabs@d+2,?_fabs+2
 32208  017E88  C033  F033         	movff	fabs@d+3,?_fabs+3
 32209  017E8C  0012               	return		;funcret
 32210  017E8E                     __end_of_fabs:
 32211                           	opt stack 0
 32212                           tosu	equ	0xFFF
 32213                           tosh	equ	0xFFE
 32214                           tosl	equ	0xFFD
 32215                           pclatu	equ	0xFFB
 32216                           pclath	equ	0xFFA
 32217                           tblptru	equ	0xFF8
 32218                           tblptrh	equ	0xFF7
 32219                           tblptrl	equ	0xFF6
 32220                           tablat	equ	0xFF5
 32221                           prodh	equ	0xFF4
 32222                           prodl	equ	0xFF3
 32223                           intcon	equ	0xFF2
 32224                           indf0	equ	0xFEF
 32225                           postinc0	equ	0xFEE
 32226                           fsr0h	equ	0xFEA
 32227                           fsr0l	equ	0xFE9
 32228                           wreg	equ	0xFE8
 32229                           indf1	equ	0xFE7
 32230                           postdec1	equ	0xFE5
 32231                           plusw1	equ	0xFE3
 32232                           fsr1h	equ	0xFE2
 32233                           fsr1l	equ	0xFE1
 32234                           bsr	equ	0xFE0
 32235                           indf2	equ	0xFDF
 32236                           postinc2	equ	0xFDE
 32237                           postdec2	equ	0xFDD
 32238                           plusw2	equ	0xFDB
 32239                           fsr2h	equ	0xFDA
 32240                           fsr2l	equ	0xFD9
 32241                           status	equ	0xFD8
 32242                           
 32243 ;; *************** function _currentMeasuredToPeak *****************
 32244 ;; Defined at:
 32245 ;;		line 121 in file "main.c"
 32246 ;; Parameters:    Size  Location     Type
 32247 ;;  Measured        4   57[BANK0 ] unsigned char 
 32248 ;;  Angle           4   61[BANK0 ] unsigned char 
 32249 ;; Auto vars:     Size  Location     Type
 32250 ;;  Peak            4   65[BANK0 ] unsigned char 
 32251 ;; Return value:  Size  Location     Type
 32252 ;;                  4   57[BANK0 ] unsigned char 
 32253 ;; Registers used:
 32254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32255 ;; Tracked objects:
 32256 ;;		On entry : 0/0
 32257 ;;		On exit  : 0/0
 32258 ;;		Unchanged: 0/0
 32259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32261 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32263 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32264 ;;Total ram usage:       12 bytes
 32265 ;; Hardware stack levels used:    1
 32266 ;; Hardware stack levels required when called:    3
 32267 ;; This function calls:
 32268 ;;		_sin
 32269 ;;		i2___fldiv
 32270 ;; This function is called by:
 32271 ;;		_ADCPostProcessingCallback
 32272 ;; This function uses a non-reentrant model
 32273 ;;
 32274                           
 32275                           	psect	text108
 32276  017558                     __ptext108:
 32277                           	opt stack 0
 32278  017558                     _currentMeasuredToPeak:
 32279                           	opt stack 13
 32280                           
 32281                           ;main.c: 124: double Peak = 0.0;
 32282                           
 32283                           ;incstack = 0
 32284  017558  0E00               	movlw	0
 32285  01755A  0100               	movlb	0	; () banked
 32286  01755C  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 32287  01755E  0E00               	movlw	0
 32288  017560  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 32289  017562  0E00               	movlw	0
 32290  017564  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 32291  017566  0E00               	movlw	0
 32292  017568  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 32293                           
 32294                           ; BSR set to: 0
 32295                           ;main.c: 127: Peak = sin(Angle);
 32296  01756A  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 32297  01756E  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 32298  017572  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 32299  017576  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 32300  01757A  EC39  F0A5         	call	_sin	;wreg free
 32301  01757E  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 32302  017582  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 32303  017586  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 32304  01758A  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 32305                           
 32306                           ;main.c: 128: Peak = Measured / Peak;
 32307  01758E  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 32308  017592  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 32309  017596  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 32310  01759A  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 32311  01759E  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 32312  0175A2  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 32313  0175A6  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 32314  0175AA  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 32315  0175AE  ECD8  F0AA         	call	i2___fldiv	;wreg free
 32316  0175B2  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 32317  0175B6  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 32318  0175BA  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 32319  0175BE  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 32320                           
 32321                           ;main.c: 129: return Peak;
 32322  0175C2  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 32323  0175C6  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 32324  0175CA  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 32325  0175CE  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 32326  0175D2  0012               	return	
 32327  0175D4                     __end_of_currentMeasuredToPeak:
 32328                           	opt stack 0
 32329                           tosu	equ	0xFFF
 32330                           tosh	equ	0xFFE
 32331                           tosl	equ	0xFFD
 32332                           pclatu	equ	0xFFB
 32333                           pclath	equ	0xFFA
 32334                           tblptru	equ	0xFF8
 32335                           tblptrh	equ	0xFF7
 32336                           tblptrl	equ	0xFF6
 32337                           tablat	equ	0xFF5
 32338                           prodh	equ	0xFF4
 32339                           prodl	equ	0xFF3
 32340                           intcon	equ	0xFF2
 32341                           indf0	equ	0xFEF
 32342                           postinc0	equ	0xFEE
 32343                           fsr0h	equ	0xFEA
 32344                           fsr0l	equ	0xFE9
 32345                           wreg	equ	0xFE8
 32346                           indf1	equ	0xFE7
 32347                           postdec1	equ	0xFE5
 32348                           plusw1	equ	0xFE3
 32349                           fsr1h	equ	0xFE2
 32350                           fsr1l	equ	0xFE1
 32351                           bsr	equ	0xFE0
 32352                           indf2	equ	0xFDF
 32353                           postinc2	equ	0xFDE
 32354                           postdec2	equ	0xFDD
 32355                           plusw2	equ	0xFDB
 32356                           fsr2h	equ	0xFDA
 32357                           fsr2l	equ	0xFD9
 32358                           status	equ	0xFD8
 32359                           
 32360 ;; *************** function _sin *****************
 32361 ;; Defined at:
 32362 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 32363 ;; Parameters:    Size  Location     Type
 32364 ;;  f               4   40[BANK0 ] unsigned char 
 32365 ;; Auto vars:     Size  Location     Type
 32366 ;;  x2              4   52[BANK0 ] unsigned char 
 32367 ;;  y               4   44[BANK0 ] unsigned char 
 32368 ;;  sgn             1   56[BANK0 ] unsigned char 
 32369 ;; Return value:  Size  Location     Type
 32370 ;;                  4   40[BANK0 ] unsigned char 
 32371 ;; Registers used:
 32372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32373 ;; Tracked objects:
 32374 ;;		On entry : 0/0
 32375 ;;		On exit  : 0/0
 32376 ;;		Unchanged: 0/0
 32377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32379 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32381 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32382 ;;Total ram usage:       17 bytes
 32383 ;; Hardware stack levels used:    1
 32384 ;; Hardware stack levels required when called:    2
 32385 ;; This function calls:
 32386 ;;		_eval_poly
 32387 ;;		_floor
 32388 ;;		i2___fladd
 32389 ;;		i2___fldiv
 32390 ;;		i2___flge
 32391 ;;		i2___flmul
 32392 ;;		i2___flneg
 32393 ;;		i2___flsub
 32394 ;; This function is called by:
 32395 ;;		_peakToRMS
 32396 ;;		_currentMeasuredToPeak
 32397 ;; This function uses a non-reentrant model
 32398 ;;
 32399                           
 32400                           	psect	text109
 32401  014A72                     __ptext109:
 32402                           	opt stack 0
 32403  014A72                     _sin:
 32404                           	opt stack 13
 32405                           
 32406                           ;incstack = 0
 32407  014A72  0E00               	movlw	0
 32408  014A74  0100               	movlb	0	; () banked
 32409  014A76  6F98               	movwf	sin@sgn& (0+255),b
 32410                           
 32411                           ; BSR set to: 0
 32412  014A78  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 32413  014A7A  D015               	goto	i2l2005
 32414                           
 32415                           ; BSR set to: 0
 32416  014A7C  C088  F02C         	movff	sin@f,i2___flneg@f1
 32417  014A80  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 32418  014A84  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 32419  014A88  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 32420  014A8C  EC2D  F0C0         	call	i2___flneg	;wreg free
 32421  014A90  C02C  F088         	movff	?i2___flneg,sin@f
 32422  014A94  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 32423  014A98  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 32424  014A9C  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 32425  014AA0  0E01               	movlw	1
 32426  014AA2  0100               	movlb	0	; () banked
 32427  014AA4  6F98               	movwf	sin@sgn& (0+255),b
 32428  014AA6                     i2l2005:
 32429                           
 32430                           ; BSR set to: 0
 32431                           
 32432                           ; BSR set to: 0
 32433  014AA6  C088  F030         	movff	sin@f,i2___flmul@b
 32434  014AAA  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 32435  014AAE  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 32436  014AB2  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 32437  014AB6  0E83               	movlw	131
 32438  014AB8  6E34               	movwf	i2___flmul@a,c
 32439  014ABA  0EF9               	movlw	249
 32440  014ABC  6E35               	movwf	i2___flmul@a+1,c
 32441  014ABE  0E22               	movlw	34
 32442  014AC0  6E36               	movwf	i2___flmul@a+2,c
 32443  014AC2  0E3E               	movlw	62
 32444  014AC4  6E37               	movwf	i2___flmul@a+3,c
 32445  014AC6  ECD1  F09E         	call	i2___flmul	;wreg free
 32446  014ACA  C030  F088         	movff	?i2___flmul,sin@f
 32447  014ACE  C031  F089         	movff	?i2___flmul+1,sin@f+1
 32448  014AD2  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 32449  014AD6  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 32450  014ADA  C088  F080         	movff	sin@f,i2___flsub@b
 32451  014ADE  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 32452  014AE2  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 32453  014AE6  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 32454  014AEA  C088  F076         	movff	sin@f,floor@x
 32455  014AEE  C089  F077         	movff	sin@f+1,floor@x+1
 32456  014AF2  C08A  F078         	movff	sin@f+2,floor@x+2
 32457  014AF6  C08B  F079         	movff	sin@f+3,floor@x+3
 32458  014AFA  EC26  F0B5         	call	_floor	;wreg free
 32459  014AFE  C076  F084         	movff	?_floor,i2___flsub@a
 32460  014B02  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 32461  014B06  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 32462  014B0A  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 32463  014B0E  EC84  F0BE         	call	i2___flsub	;wreg free
 32464  014B12  C080  F088         	movff	?i2___flsub,sin@f
 32465  014B16  C081  F089         	movff	?i2___flsub+1,sin@f+1
 32466  014B1A  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 32467  014B1E  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 32468  014B22  C088  F030         	movff	sin@f,i2___flmul@b
 32469  014B26  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 32470  014B2A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 32471  014B2E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 32472  014B32  0E00               	movlw	0
 32473  014B34  6E34               	movwf	i2___flmul@a,c
 32474  014B36  0E00               	movlw	0
 32475  014B38  6E35               	movwf	i2___flmul@a+1,c
 32476  014B3A  0E80               	movlw	128
 32477  014B3C  6E36               	movwf	i2___flmul@a+2,c
 32478  014B3E  0E40               	movlw	64
 32479  014B40  6E37               	movwf	i2___flmul@a+3,c
 32480  014B42  ECD1  F09E         	call	i2___flmul	;wreg free
 32481  014B46  C030  F088         	movff	?i2___flmul,sin@f
 32482  014B4A  C031  F089         	movff	?i2___flmul+1,sin@f+1
 32483  014B4E  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 32484  014B52  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 32485  014B56  0E00               	movlw	0
 32486  014B58  6E34               	movwf	i2___flge@ff1,c
 32487  014B5A  0E00               	movlw	0
 32488  014B5C  6E35               	movwf	i2___flge@ff1+1,c
 32489  014B5E  0E00               	movlw	0
 32490  014B60  6E36               	movwf	i2___flge@ff1+2,c
 32491  014B62  0E40               	movlw	64
 32492  014B64  6E37               	movwf	i2___flge@ff1+3,c
 32493  014B66  C088  F038         	movff	sin@f,i2___flge@ff2
 32494  014B6A  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 32495  014B6E  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 32496  014B72  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 32497  014B76  EC08  F0B4         	call	i2___flge	;wreg free
 32498  014B7A  B0D8               	btfsc	status,0,c
 32499  014B7C  D023               	goto	i2l2006
 32500  014B7E  C088  F080         	movff	sin@f,i2___flsub@b
 32501  014B82  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 32502  014B86  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 32503  014B8A  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 32504  014B8E  0E00               	movlw	0
 32505  014B90  0100               	movlb	0	; () banked
 32506  014B92  6F84               	movwf	i2___flsub@a& (0+255),b
 32507  014B94  0E00               	movlw	0
 32508  014B96  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 32509  014B98  0E00               	movlw	0
 32510  014B9A  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 32511  014B9C  0E40               	movlw	64
 32512  014B9E  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 32513  014BA0  EC84  F0BE         	call	i2___flsub	;wreg free
 32514  014BA4  C080  F088         	movff	?i2___flsub,sin@f
 32515  014BA8  C081  F089         	movff	?i2___flsub+1,sin@f+1
 32516  014BAC  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 32517  014BB0  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 32518  014BB4  0100               	movlb	0	; () banked
 32519  014BB6  5198               	movf	sin@sgn& (0+255),w,b
 32520  014BB8  A4D8               	btfss	status,2,c
 32521  014BBA  D002               	goto	i2u1495_40
 32522  014BBC  0E01               	movlw	1
 32523  014BBE  D001               	goto	i2u1496_40
 32524  014BC0                     i2u1495_40:
 32525  014BC0  0E00               	movlw	0
 32526  014BC2                     i2u1496_40:
 32527  014BC2  6F98               	movwf	sin@sgn& (0+255),b
 32528  014BC4                     i2l2006:
 32529                           
 32530                           ; BSR set to: 0
 32531  014BC4  0E00               	movlw	0
 32532  014BC6  6E34               	movwf	i2___flge@ff1,c
 32533  014BC8  0E00               	movlw	0
 32534  014BCA  6E35               	movwf	i2___flge@ff1+1,c
 32535  014BCC  0E80               	movlw	128
 32536  014BCE  6E36               	movwf	i2___flge@ff1+2,c
 32537  014BD0  0E3F               	movlw	63
 32538  014BD2  6E37               	movwf	i2___flge@ff1+3,c
 32539  014BD4  C088  F038         	movff	sin@f,i2___flge@ff2
 32540  014BD8  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 32541  014BDC  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 32542  014BE0  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 32543  014BE4  EC08  F0B4         	call	i2___flge	;wreg free
 32544  014BE8  B0D8               	btfsc	status,0,c
 32545  014BEA  D024               	goto	i2l2007
 32546  014BEC  C088  F02C         	movff	sin@f,i2___flneg@f1
 32547  014BF0  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 32548  014BF4  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 32549  014BF8  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 32550  014BFC  EC2D  F0C0         	call	i2___flneg	;wreg free
 32551  014C00  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 32552  014C04  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 32553  014C08  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 32554  014C0C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 32555  014C10  0E00               	movlw	0
 32556  014C12  6E5A               	movwf	i2___fladd@a,c
 32557  014C14  0E00               	movlw	0
 32558  014C16  6E5B               	movwf	i2___fladd@a+1,c
 32559  014C18  0E00               	movlw	0
 32560  014C1A  6E5C               	movwf	i2___fladd@a+2,c
 32561  014C1C  0E40               	movlw	64
 32562  014C1E  6E5D               	movwf	i2___fladd@a+3,c
 32563  014C20  EC18  F0A2         	call	i2___fladd	;wreg free
 32564  014C24  C056  F088         	movff	?i2___fladd,sin@f
 32565  014C28  C057  F089         	movff	?i2___fladd+1,sin@f+1
 32566  014C2C  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 32567  014C30  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 32568  014C34                     i2l2007:
 32569  014C34  C088  F030         	movff	sin@f,i2___flmul@b
 32570  014C38  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 32571  014C3C  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 32572  014C40  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 32573  014C44  C088  F034         	movff	sin@f,i2___flmul@a
 32574  014C48  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 32575  014C4C  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 32576  014C50  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 32577  014C54  ECD1  F09E         	call	i2___flmul	;wreg free
 32578  014C58  C030  F094         	movff	?i2___flmul,sin@x2
 32579  014C5C  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 32580  014C60  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 32581  014C64  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 32582  014C68  C094  F06C         	movff	sin@x2,eval_poly@x
 32583  014C6C  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 32584  014C70  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 32585  014C74  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 32586  014C78  0E0B               	movlw	low sin@coeff_b
 32587  014C7A  0100               	movlb	0	; () banked
 32588  014C7C  6F70               	movwf	eval_poly@d& (0+255),b
 32589  014C7E  0EEB               	movlw	high sin@coeff_b
 32590  014C80  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 32591  014C82  0E00               	movlw	0
 32592  014C84  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 32593  014C86  0E03               	movlw	3
 32594  014C88  6F72               	movwf	eval_poly@n& (0+255),b
 32595  014C8A  ECAF  F0B5         	call	_eval_poly	;wreg free
 32596  014C8E  C06C  F08C         	movff	?_eval_poly,sin@y
 32597  014C92  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 32598  014C96  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 32599  014C9A  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 32600  014C9E  C08C  F017         	movff	sin@y,i2___fldiv@a
 32601  014CA2  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 32602  014CA6  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 32603  014CAA  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 32604  014CAE  0E00               	movlw	0
 32605  014CB0  0100               	movlb	0	; () banked
 32606  014CB2  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 32607  014CB4  0E04               	movlw	4
 32608  014CB6  6F72               	movwf	eval_poly@n& (0+255),b
 32609  014CB8  0EE3               	movlw	low sin@coeff_a
 32610  014CBA  6F70               	movwf	eval_poly@d& (0+255),b
 32611  014CBC  0EEA               	movlw	high sin@coeff_a
 32612  014CBE  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 32613  014CC0  C094  F06C         	movff	sin@x2,eval_poly@x
 32614  014CC4  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 32615  014CC8  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 32616  014CCC  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 32617  014CD0  ECAF  F0B5         	call	_eval_poly	;wreg free
 32618  014CD4  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 32619  014CD8  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 32620  014CDC  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 32621  014CE0  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 32622  014CE4  ECD8  F0AA         	call	i2___fldiv	;wreg free
 32623  014CE8  C013  F090         	movff	?i2___fldiv,_sin$4097
 32624  014CEC  C014  F091         	movff	?i2___fldiv+1,_sin$4097+1
 32625  014CF0  C015  F092         	movff	?i2___fldiv+2,_sin$4097+2
 32626  014CF4  C016  F093         	movff	?i2___fldiv+3,_sin$4097+3
 32627  014CF8  C088  F030         	movff	sin@f,i2___flmul@b
 32628  014CFC  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 32629  014D00  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 32630  014D04  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 32631  014D08  C090  F034         	movff	_sin$4097,i2___flmul@a
 32632  014D0C  C091  F035         	movff	_sin$4097+1,i2___flmul@a+1
 32633  014D10  C092  F036         	movff	_sin$4097+2,i2___flmul@a+2
 32634  014D14  C093  F037         	movff	_sin$4097+3,i2___flmul@a+3
 32635  014D18  ECD1  F09E         	call	i2___flmul	;wreg free
 32636  014D1C  C030  F088         	movff	?i2___flmul,sin@f
 32637  014D20  C031  F089         	movff	?i2___flmul+1,sin@f+1
 32638  014D24  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 32639  014D28  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 32640  014D2C  0100               	movlb	0	; () banked
 32641  014D2E  5198               	movf	sin@sgn& (0+255),w,b
 32642  014D30  B4D8               	btfsc	status,2,c
 32643  014D32  D013               	goto	i2l2008
 32644                           
 32645                           ; BSR set to: 0
 32646  014D34  C088  F02C         	movff	sin@f,i2___flneg@f1
 32647  014D38  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 32648  014D3C  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 32649  014D40  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 32650  014D44  EC2D  F0C0         	call	i2___flneg	;wreg free
 32651  014D48  C02C  F088         	movff	?i2___flneg,?_sin
 32652  014D4C  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 32653  014D50  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 32654  014D54  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 32655  014D58  0012               	return	
 32656  014D5A                     i2l2008:
 32657                           
 32658                           ; BSR set to: 0
 32659  014D5A  C088  F088         	movff	sin@f,?_sin
 32660  014D5E  C089  F089         	movff	sin@f+1,?_sin+1
 32661  014D62  C08A  F08A         	movff	sin@f+2,?_sin+2
 32662  014D66  C08B  F08B         	movff	sin@f+3,?_sin+3
 32663  014D6A  0012               	return		;funcret
 32664  014D6C                     __end_of_sin:
 32665                           	opt stack 0
 32666                           tosu	equ	0xFFF
 32667                           tosh	equ	0xFFE
 32668                           tosl	equ	0xFFD
 32669                           pclatu	equ	0xFFB
 32670                           pclath	equ	0xFFA
 32671                           tblptru	equ	0xFF8
 32672                           tblptrh	equ	0xFF7
 32673                           tblptrl	equ	0xFF6
 32674                           tablat	equ	0xFF5
 32675                           prodh	equ	0xFF4
 32676                           prodl	equ	0xFF3
 32677                           intcon	equ	0xFF2
 32678                           indf0	equ	0xFEF
 32679                           postinc0	equ	0xFEE
 32680                           fsr0h	equ	0xFEA
 32681                           fsr0l	equ	0xFE9
 32682                           wreg	equ	0xFE8
 32683                           indf1	equ	0xFE7
 32684                           postdec1	equ	0xFE5
 32685                           plusw1	equ	0xFE3
 32686                           fsr1h	equ	0xFE2
 32687                           fsr1l	equ	0xFE1
 32688                           bsr	equ	0xFE0
 32689                           indf2	equ	0xFDF
 32690                           postinc2	equ	0xFDE
 32691                           postdec2	equ	0xFDD
 32692                           plusw2	equ	0xFDB
 32693                           fsr2h	equ	0xFDA
 32694                           fsr2l	equ	0xFD9
 32695                           status	equ	0xFD8
 32696                           
 32697 ;; *************** function i2___flsub *****************
 32698 ;; Defined at:
 32699 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 32700 ;; Parameters:    Size  Location     Type
 32701 ;;  b               4   32[BANK0 ] unsigned char 
 32702 ;;  a               4   36[BANK0 ] unsigned char 
 32703 ;; Auto vars:     Size  Location     Type
 32704 ;;		None
 32705 ;; Return value:  Size  Location     Type
 32706 ;;                  4   32[BANK0 ] unsigned char 
 32707 ;; Registers used:
 32708 ;;		wreg, status,2, status,0, cstack
 32709 ;; Tracked objects:
 32710 ;;		On entry : 0/0
 32711 ;;		On exit  : 0/0
 32712 ;;		Unchanged: 0/0
 32713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32714 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32717 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32718 ;;Total ram usage:        8 bytes
 32719 ;; Hardware stack levels used:    1
 32720 ;; Hardware stack levels required when called:    1
 32721 ;; This function calls:
 32722 ;;		i2___fladd
 32723 ;; This function is called by:
 32724 ;;		_sin
 32725 ;;		i2_printf
 32726 ;; This function uses a non-reentrant model
 32727 ;;
 32728                           
 32729                           	psect	text110
 32730  017D08                     __ptext110:
 32731                           	opt stack 0
 32732  017D08                     i2___flsub:
 32733                           	opt stack 15
 32734                           
 32735                           ;incstack = 0
 32736  017D08  0E00               	movlw	0
 32737  017D0A  0100               	movlb	0	; () banked
 32738  017D0C  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 32739  017D0E  0E00               	movlw	0
 32740  017D10  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 32741  017D12  0E00               	movlw	0
 32742  017D14  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 32743  017D16  0E80               	movlw	128
 32744  017D18  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 32745                           
 32746                           ; BSR set to: 0
 32747  017D1A  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 32748  017D1E  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 32749  017D22  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 32750  017D26  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 32751  017D2A  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 32752  017D2E  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 32753  017D32  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 32754  017D36  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 32755  017D3A  EC18  F0A2         	call	i2___fladd	;wreg free
 32756  017D3E  C056  F080         	movff	?i2___fladd,?i2___flsub
 32757  017D42  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 32758  017D46  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 32759  017D4A  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 32760  017D4E  0012               	return	
 32761  017D50                     __end_ofi2___flsub:
 32762                           	opt stack 0
 32763                           tosu	equ	0xFFF
 32764                           tosh	equ	0xFFE
 32765                           tosl	equ	0xFFD
 32766                           pclatu	equ	0xFFB
 32767                           pclath	equ	0xFFA
 32768                           tblptru	equ	0xFF8
 32769                           tblptrh	equ	0xFF7
 32770                           tblptrl	equ	0xFF6
 32771                           tablat	equ	0xFF5
 32772                           prodh	equ	0xFF4
 32773                           prodl	equ	0xFF3
 32774                           intcon	equ	0xFF2
 32775                           indf0	equ	0xFEF
 32776                           postinc0	equ	0xFEE
 32777                           fsr0h	equ	0xFEA
 32778                           fsr0l	equ	0xFE9
 32779                           wreg	equ	0xFE8
 32780                           indf1	equ	0xFE7
 32781                           postdec1	equ	0xFE5
 32782                           plusw1	equ	0xFE3
 32783                           fsr1h	equ	0xFE2
 32784                           fsr1l	equ	0xFE1
 32785                           bsr	equ	0xFE0
 32786                           indf2	equ	0xFDF
 32787                           postinc2	equ	0xFDE
 32788                           postdec2	equ	0xFDD
 32789                           plusw2	equ	0xFDB
 32790                           fsr2h	equ	0xFDA
 32791                           fsr2l	equ	0xFD9
 32792                           status	equ	0xFD8
 32793                           
 32794 ;; *************** function i2___flneg *****************
 32795 ;; Defined at:
 32796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 32797 ;; Parameters:    Size  Location     Type
 32798 ;;  f1              4   43[COMRAM] unsigned char 
 32799 ;; Auto vars:     Size  Location     Type
 32800 ;;		None
 32801 ;; Return value:  Size  Location     Type
 32802 ;;                  4   43[COMRAM] unsigned char 
 32803 ;; Registers used:
 32804 ;;		wreg, status,2, status,0
 32805 ;; Tracked objects:
 32806 ;;		On entry : 0/0
 32807 ;;		On exit  : 0/0
 32808 ;;		Unchanged: 0/0
 32809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32814 ;;Total ram usage:        4 bytes
 32815 ;; Hardware stack levels used:    1
 32816 ;; This function calls:
 32817 ;;		Nothing
 32818 ;; This function is called by:
 32819 ;;		_peakToRMS
 32820 ;;		_ADCPostProcessingCallback
 32821 ;;		_acos
 32822 ;;		_asin
 32823 ;;		_atan
 32824 ;;		_fabs
 32825 ;;		_sin
 32826 ;;		i2_printf
 32827 ;; This function uses a non-reentrant model
 32828 ;;
 32829                           
 32830                           	psect	text111
 32831  01805A                     __ptext111:
 32832                           	opt stack 0
 32833  01805A                     i2___flneg:
 32834                           	opt stack 16
 32835                           
 32836                           ;incstack = 0
 32837  01805A  502C               	movf	i2___flneg@f1,w,c
 32838  01805C  102D               	iorwf	i2___flneg@f1+1,w,c
 32839  01805E  102E               	iorwf	i2___flneg@f1+2,w,c
 32840  018060  102F               	iorwf	i2___flneg@f1+3,w,c
 32841  018062  B4D8               	btfsc	status,2,c
 32842  018064  D008               	goto	i2l1750
 32843  018066  0E00               	movlw	0
 32844  018068  1A2C               	xorwf	i2___flneg@f1,f,c
 32845  01806A  0E00               	movlw	0
 32846  01806C  1A2D               	xorwf	i2___flneg@f1+1,f,c
 32847  01806E  0E00               	movlw	0
 32848  018070  1A2E               	xorwf	i2___flneg@f1+2,f,c
 32849  018072  0E80               	movlw	128
 32850  018074  1A2F               	xorwf	i2___flneg@f1+3,f,c
 32851  018076                     i2l1750:
 32852  018076  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 32853  01807A  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 32854  01807E  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 32855  018082  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 32856  018086  0012               	return	
 32857  018088                     __end_ofi2___flneg:
 32858                           	opt stack 0
 32859                           tosu	equ	0xFFF
 32860                           tosh	equ	0xFFE
 32861                           tosl	equ	0xFFD
 32862                           pclatu	equ	0xFFB
 32863                           pclath	equ	0xFFA
 32864                           tblptru	equ	0xFF8
 32865                           tblptrh	equ	0xFF7
 32866                           tblptrl	equ	0xFF6
 32867                           tablat	equ	0xFF5
 32868                           prodh	equ	0xFF4
 32869                           prodl	equ	0xFF3
 32870                           intcon	equ	0xFF2
 32871                           indf0	equ	0xFEF
 32872                           postinc0	equ	0xFEE
 32873                           fsr0h	equ	0xFEA
 32874                           fsr0l	equ	0xFE9
 32875                           wreg	equ	0xFE8
 32876                           indf1	equ	0xFE7
 32877                           postdec1	equ	0xFE5
 32878                           plusw1	equ	0xFE3
 32879                           fsr1h	equ	0xFE2
 32880                           fsr1l	equ	0xFE1
 32881                           bsr	equ	0xFE0
 32882                           indf2	equ	0xFDF
 32883                           postinc2	equ	0xFDE
 32884                           postdec2	equ	0xFDD
 32885                           plusw2	equ	0xFDB
 32886                           fsr2h	equ	0xFDA
 32887                           fsr2l	equ	0xFD9
 32888                           status	equ	0xFD8
 32889                           
 32890 ;; *************** function i2___fldiv *****************
 32891 ;; Defined at:
 32892 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 32893 ;; Parameters:    Size  Location     Type
 32894 ;;  b               4   18[COMRAM] unsigned char 
 32895 ;;  a               4   22[COMRAM] unsigned char 
 32896 ;; Auto vars:     Size  Location     Type
 32897 ;;  __fldiv         4   37[COMRAM] unsigned long 
 32898 ;;  __fldiv         4   31[COMRAM] unsigned long 
 32899 ;;  __fldiv         2   35[COMRAM] int 
 32900 ;;  __fldiv         1   42[COMRAM] unsigned char 
 32901 ;;  __fldiv         1   41[COMRAM] unsigned char 
 32902 ;;  __fldiv         1   30[COMRAM] unsigned char 
 32903 ;; Return value:  Size  Location     Type
 32904 ;;                  4   18[COMRAM] unsigned char 
 32905 ;; Registers used:
 32906 ;;		wreg, status,2, status,0
 32907 ;; Tracked objects:
 32908 ;;		On entry : 0/0
 32909 ;;		On exit  : 0/0
 32910 ;;		Unchanged: 0/0
 32911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32912 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32913 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32914 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32915 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32916 ;;Total ram usage:       25 bytes
 32917 ;; Hardware stack levels used:    1
 32918 ;; This function calls:
 32919 ;;		Nothing
 32920 ;; This function is called by:
 32921 ;;		_peakToRMS
 32922 ;;		_currentMeasuredToPeak
 32923 ;;		_ADCPostProcessingCallback
 32924 ;;		_asin
 32925 ;;		_atan
 32926 ;;		_sin
 32927 ;; This function uses a non-reentrant model
 32928 ;;
 32929                           
 32930                           	psect	text112
 32931  0155B0                     __ptext112:
 32932                           	opt stack 0
 32933  0155B0                     i2___fldiv:
 32934                           	opt stack 16
 32935                           
 32936                           ;incstack = 0
 32937  0155B0  5016               	movf	i2___fldiv@b+3,w,c
 32938  0155B2  0B80               	andlw	128
 32939  0155B4  6E1F               	movwf	i2___fldiv@sign,c
 32940  0155B6  5016               	movf	i2___fldiv@b+3,w,c
 32941  0155B8  2416               	addwf	i2___fldiv@b+3,w,c
 32942  0155BA  6E2A               	movwf	i2___fldiv@bexp,c
 32943  0155BC  BE15               	btfsc	i2___fldiv@b+2,7,c
 32944  0155BE  802A               	bsf	i2___fldiv@bexp,0,c
 32945  0155C0  502A               	movf	i2___fldiv@bexp,w,c
 32946  0155C2  B4D8               	btfsc	status,2,c
 32947  0155C4  D00D               	goto	i2l2070
 32948  0155C6  282A               	incf	i2___fldiv@bexp,w,c
 32949  0155C8  A4D8               	btfss	status,2,c
 32950  0155CA  D008               	goto	i2l2071
 32951  0155CC  0E00               	movlw	0
 32952  0155CE  6E13               	movwf	i2___fldiv@b,c
 32953  0155D0  0E00               	movlw	0
 32954  0155D2  6E14               	movwf	i2___fldiv@b+1,c
 32955  0155D4  0E00               	movlw	0
 32956  0155D6  6E15               	movwf	i2___fldiv@b+2,c
 32957  0155D8  0E00               	movlw	0
 32958  0155DA  6E16               	movwf	i2___fldiv@b+3,c
 32959  0155DC                     i2l2071:
 32960  0155DC  8E15               	bsf	i2___fldiv@b+2,7,c
 32961  0155DE  D006               	goto	L18
 32962  0155E0                     i2l2070:
 32963  0155E0  0E00               	movlw	0
 32964  0155E2  6E13               	movwf	i2___fldiv@b,c
 32965  0155E4  0E00               	movlw	0
 32966  0155E6  6E14               	movwf	i2___fldiv@b+1,c
 32967  0155E8  0E00               	movlw	0
 32968  0155EA  6E15               	movwf	i2___fldiv@b+2,c
 32969  0155EC                     L18:
 32970  0155EC  0E00               	movlw	0
 32971  0155EE  6E16               	movwf	i2___fldiv@b+3,c
 32972  0155F0  501A               	movf	i2___fldiv@a+3,w,c
 32973  0155F2  0B80               	andlw	128
 32974  0155F4  1A1F               	xorwf	i2___fldiv@sign,f,c
 32975  0155F6  501A               	movf	i2___fldiv@a+3,w,c
 32976  0155F8  241A               	addwf	i2___fldiv@a+3,w,c
 32977  0155FA  6E2B               	movwf	i2___fldiv@aexp,c
 32978  0155FC  BE19               	btfsc	i2___fldiv@a+2,7,c
 32979  0155FE  802B               	bsf	i2___fldiv@aexp,0,c
 32980  015600  502B               	movf	i2___fldiv@aexp,w,c
 32981  015602  B4D8               	btfsc	status,2,c
 32982  015604  D00D               	goto	i2l2074
 32983  015606  282B               	incf	i2___fldiv@aexp,w,c
 32984  015608  A4D8               	btfss	status,2,c
 32985  01560A  D008               	goto	i2l2075
 32986  01560C  0E00               	movlw	0
 32987  01560E  6E17               	movwf	i2___fldiv@a,c
 32988  015610  0E00               	movlw	0
 32989  015612  6E18               	movwf	i2___fldiv@a+1,c
 32990  015614  0E00               	movlw	0
 32991  015616  6E19               	movwf	i2___fldiv@a+2,c
 32992  015618  0E00               	movlw	0
 32993  01561A  6E1A               	movwf	i2___fldiv@a+3,c
 32994  01561C                     i2l2075:
 32995  01561C  8E19               	bsf	i2___fldiv@a+2,7,c
 32996  01561E  D006               	goto	L19
 32997  015620                     i2l2074:
 32998  015620  0E00               	movlw	0
 32999  015622  6E17               	movwf	i2___fldiv@a,c
 33000  015624  0E00               	movlw	0
 33001  015626  6E18               	movwf	i2___fldiv@a+1,c
 33002  015628  0E00               	movlw	0
 33003  01562A  6E19               	movwf	i2___fldiv@a+2,c
 33004  01562C                     L19:
 33005  01562C  0E00               	movlw	0
 33006  01562E  6E1A               	movwf	i2___fldiv@a+3,c
 33007  015630  5017               	movf	i2___fldiv@a,w,c
 33008  015632  1018               	iorwf	i2___fldiv@a+1,w,c
 33009  015634  1019               	iorwf	i2___fldiv@a+2,w,c
 33010  015636  101A               	iorwf	i2___fldiv@a+3,w,c
 33011  015638  A4D8               	btfss	status,2,c
 33012  01563A  D015               	goto	i2l2077
 33013  01563C  0E00               	movlw	0
 33014  01563E  6E13               	movwf	i2___fldiv@b,c
 33015  015640  0E00               	movlw	0
 33016  015642  6E14               	movwf	i2___fldiv@b+1,c
 33017  015644  0E00               	movlw	0
 33018  015646  6E15               	movwf	i2___fldiv@b+2,c
 33019  015648  0E00               	movlw	0
 33020  01564A  6E16               	movwf	i2___fldiv@b+3,c
 33021  01564C  0E80               	movlw	128
 33022  01564E  1215               	iorwf	i2___fldiv@b+2,f,c
 33023  015650  0E7F               	movlw	127
 33024  015652  1216               	iorwf	i2___fldiv@b+3,f,c
 33025  015654  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 33026  015658  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 33027  01565C  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 33028  015660  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 33029  015664  0012               	return	
 33030  015666                     i2l2077:
 33031  015666  502A               	movf	i2___fldiv@bexp,w,c
 33032  015668  A4D8               	btfss	status,2,c
 33033  01566A  D011               	goto	i2l2079
 33034  01566C  0E00               	movlw	0
 33035  01566E  6E13               	movwf	i2___fldiv@b,c
 33036  015670  0E00               	movlw	0
 33037  015672  6E14               	movwf	i2___fldiv@b+1,c
 33038  015674  0E00               	movlw	0
 33039  015676  6E15               	movwf	i2___fldiv@b+2,c
 33040  015678  0E00               	movlw	0
 33041  01567A  6E16               	movwf	i2___fldiv@b+3,c
 33042  01567C  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 33043  015680  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 33044  015684  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 33045  015688  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 33046  01568C  0012               	return	
 33047  01568E                     i2l2079:
 33048  01568E  502B               	movf	i2___fldiv@aexp,w,c
 33049  015690  6E1B               	movwf	??i2___fldiv& (0+255),c
 33050  015692  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 33051  015694  1E1B               	comf	??i2___fldiv,f,c
 33052  015696  1E1C               	comf	??i2___fldiv+1,f,c
 33053  015698  4A1B               	infsnz	??i2___fldiv,f,c
 33054  01569A  2A1C               	incf	??i2___fldiv+1,f,c
 33055  01569C  502A               	movf	i2___fldiv@bexp,w,c
 33056  01569E  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 33057  0156A0  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 33058  0156A2  501B               	movf	??i2___fldiv,w,c
 33059  0156A4  261D               	addwf	??i2___fldiv+2,f,c
 33060  0156A6  501C               	movf	??i2___fldiv+1,w,c
 33061  0156A8  221E               	addwfc	??i2___fldiv+3,f,c
 33062  0156AA  0E7F               	movlw	127
 33063  0156AC  241D               	addwf	??i2___fldiv+2,w,c
 33064  0156AE  6E24               	movwf	i2___fldiv@new_exp,c
 33065  0156B0  0E00               	movlw	0
 33066  0156B2  201E               	addwfc	??i2___fldiv+3,w,c
 33067  0156B4  6E25               	movwf	i2___fldiv@new_exp+1,c
 33068  0156B6  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 33069  0156BA  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 33070  0156BE  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 33071  0156C2  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 33072  0156C6  0E00               	movlw	0
 33073  0156C8  6E13               	movwf	i2___fldiv@b,c
 33074  0156CA  0E00               	movlw	0
 33075  0156CC  6E14               	movwf	i2___fldiv@b+1,c
 33076  0156CE  0E00               	movlw	0
 33077  0156D0  6E15               	movwf	i2___fldiv@b+2,c
 33078  0156D2  0E00               	movlw	0
 33079  0156D4  6E16               	movwf	i2___fldiv@b+3,c
 33080  0156D6  0E00               	movlw	0
 33081  0156D8  6E26               	movwf	i2___fldiv@grs,c
 33082  0156DA  0E00               	movlw	0
 33083  0156DC  6E27               	movwf	i2___fldiv@grs+1,c
 33084  0156DE  0E00               	movlw	0
 33085  0156E0  6E28               	movwf	i2___fldiv@grs+2,c
 33086  0156E2  0E00               	movlw	0
 33087  0156E4  6E29               	movwf	i2___fldiv@grs+3,c
 33088  0156E6  0E00               	movlw	0
 33089  0156E8  6E2B               	movwf	i2___fldiv@aexp,c
 33090  0156EA  D028               	goto	i2l2080
 33091  0156EC  502B               	movf	i2___fldiv@aexp,w,c
 33092  0156EE  B4D8               	btfsc	status,2,c
 33093  0156F0  D011               	goto	i2l2082
 33094  0156F2  90D8               	bcf	status,0,c
 33095  0156F4  3620               	rlcf	i2___fldiv@rem,f,c
 33096  0156F6  3621               	rlcf	i2___fldiv@rem+1,f,c
 33097  0156F8  3622               	rlcf	i2___fldiv@rem+2,f,c
 33098  0156FA  3623               	rlcf	i2___fldiv@rem+3,f,c
 33099  0156FC  90D8               	bcf	status,0,c
 33100  0156FE  3613               	rlcf	i2___fldiv@b,f,c
 33101  015700  3614               	rlcf	i2___fldiv@b+1,f,c
 33102  015702  3615               	rlcf	i2___fldiv@b+2,f,c
 33103  015704  3616               	rlcf	i2___fldiv@b+3,f,c
 33104  015706  BE29               	btfsc	i2___fldiv@grs+3,7,c
 33105  015708  8013               	bsf	i2___fldiv@b,0,c
 33106  01570A  90D8               	bcf	status,0,c
 33107  01570C  3626               	rlcf	i2___fldiv@grs,f,c
 33108  01570E  3627               	rlcf	i2___fldiv@grs+1,f,c
 33109  015710  3628               	rlcf	i2___fldiv@grs+2,f,c
 33110  015712  3629               	rlcf	i2___fldiv@grs+3,f,c
 33111  015714                     i2l2082:
 33112  015714  5017               	movf	i2___fldiv@a,w,c
 33113  015716  5C20               	subwf	i2___fldiv@rem,w,c
 33114  015718  5018               	movf	i2___fldiv@a+1,w,c
 33115  01571A  5821               	subwfb	i2___fldiv@rem+1,w,c
 33116  01571C  5019               	movf	i2___fldiv@a+2,w,c
 33117  01571E  5822               	subwfb	i2___fldiv@rem+2,w,c
 33118  015720  501A               	movf	i2___fldiv@a+3,w,c
 33119  015722  5823               	subwfb	i2___fldiv@rem+3,w,c
 33120  015724  A0D8               	btfss	status,0,c
 33121  015726  D009               	goto	i2l2084
 33122  015728  8C29               	bsf	i2___fldiv@grs+3,6,c
 33123  01572A  5017               	movf	i2___fldiv@a,w,c
 33124  01572C  5E20               	subwf	i2___fldiv@rem,f,c
 33125  01572E  5018               	movf	i2___fldiv@a+1,w,c
 33126  015730  5A21               	subwfb	i2___fldiv@rem+1,f,c
 33127  015732  5019               	movf	i2___fldiv@a+2,w,c
 33128  015734  5A22               	subwfb	i2___fldiv@rem+2,f,c
 33129  015736  501A               	movf	i2___fldiv@a+3,w,c
 33130  015738  5A23               	subwfb	i2___fldiv@rem+3,f,c
 33131  01573A                     i2l2084:
 33132  01573A  2A2B               	incf	i2___fldiv@aexp,f,c
 33133  01573C                     i2l2080:
 33134  01573C  0E19               	movlw	25
 33135  01573E  642B               	cpfsgt	i2___fldiv@aexp,c
 33136  015740  D7D5               	goto	i2l2081
 33137  015742  5020               	movf	i2___fldiv@rem,w,c
 33138  015744  1021               	iorwf	i2___fldiv@rem+1,w,c
 33139  015746  1022               	iorwf	i2___fldiv@rem+2,w,c
 33140  015748  1023               	iorwf	i2___fldiv@rem+3,w,c
 33141  01574A  B4D8               	btfsc	status,2,c
 33142  01574C  D011               	goto	i2l2087
 33143  01574E  8026               	bsf	i2___fldiv@grs,0,c
 33144  015750  D00F               	goto	i2l2087
 33145  015752  90D8               	bcf	status,0,c
 33146  015754  3613               	rlcf	i2___fldiv@b,f,c
 33147  015756  3614               	rlcf	i2___fldiv@b+1,f,c
 33148  015758  3615               	rlcf	i2___fldiv@b+2,f,c
 33149  01575A  3616               	rlcf	i2___fldiv@b+3,f,c
 33150  01575C  BE29               	btfsc	i2___fldiv@grs+3,7,c
 33151  01575E  8013               	bsf	i2___fldiv@b,0,c
 33152  015760  90D8               	bcf	status,0,c
 33153  015762  3626               	rlcf	i2___fldiv@grs,f,c
 33154  015764  3627               	rlcf	i2___fldiv@grs+1,f,c
 33155  015766  3628               	rlcf	i2___fldiv@grs+2,f,c
 33156  015768  3629               	rlcf	i2___fldiv@grs+3,f,c
 33157  01576A  0624               	decf	i2___fldiv@new_exp,f,c
 33158  01576C  A0D8               	btfss	status,0,c
 33159  01576E  0625               	decf	i2___fldiv@new_exp+1,f,c
 33160  015770                     i2l2087:
 33161  015770  AE15               	btfss	i2___fldiv@b+2,7,c
 33162  015772  D7EF               	goto	i2l2088
 33163  015774  0E00               	movlw	0
 33164  015776  6E2B               	movwf	i2___fldiv@aexp,c
 33165  015778  AE29               	btfss	i2___fldiv@grs+3,7,c
 33166  01577A  D016               	goto	i2l2094
 33167  01577C  0EFF               	movlw	255
 33168  01577E  1426               	andwf	i2___fldiv@grs,w,c
 33169  015780  6E1B               	movwf	??i2___fldiv& (0+255),c
 33170  015782  0EFF               	movlw	255
 33171  015784  1427               	andwf	i2___fldiv@grs+1,w,c
 33172  015786  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 33173  015788  0EFF               	movlw	255
 33174  01578A  1428               	andwf	i2___fldiv@grs+2,w,c
 33175  01578C  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 33176  01578E  0E7F               	movlw	127
 33177  015790  1429               	andwf	i2___fldiv@grs+3,w,c
 33178  015792  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 33179  015794  501B               	movf	??i2___fldiv,w,c
 33180  015796  101C               	iorwf	??i2___fldiv+1,w,c
 33181  015798  101D               	iorwf	??i2___fldiv+2,w,c
 33182  01579A  101E               	iorwf	??i2___fldiv+3,w,c
 33183  01579C  A4D8               	btfss	status,2,c
 33184  01579E  D002               	goto	i2u1332_40
 33185  0157A0  A013               	btfss	i2___fldiv@b,0,c
 33186  0157A2  D002               	goto	i2l2094
 33187  0157A4                     i2u1332_40:
 33188  0157A4  0E01               	movlw	1
 33189  0157A6  6E2B               	movwf	i2___fldiv@aexp,c
 33190  0157A8                     i2l2094:
 33191  0157A8  502B               	movf	i2___fldiv@aexp,w,c
 33192  0157AA  B4D8               	btfsc	status,2,c
 33193  0157AC  D01F               	goto	i2l2096
 33194  0157AE  0E01               	movlw	1
 33195  0157B0  2613               	addwf	i2___fldiv@b,f,c
 33196  0157B2  0E00               	movlw	0
 33197  0157B4  2214               	addwfc	i2___fldiv@b+1,f,c
 33198  0157B6  2215               	addwfc	i2___fldiv@b+2,f,c
 33199  0157B8  2216               	addwfc	i2___fldiv@b+3,f,c
 33200  0157BA  A016               	btfss	i2___fldiv@b+3,0,c
 33201  0157BC  D017               	goto	i2l2096
 33202  0157BE  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 33203  0157C2  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 33204  0157C6  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 33205  0157CA  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 33206  0157CE  341E               	rlcf	??i2___fldiv+3,w,c
 33207  0157D0  321E               	rrcf	??i2___fldiv+3,f,c
 33208  0157D2  321D               	rrcf	??i2___fldiv+2,f,c
 33209  0157D4  321C               	rrcf	??i2___fldiv+1,f,c
 33210  0157D6  321B               	rrcf	??i2___fldiv,f,c
 33211  0157D8  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 33212  0157DC  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 33213  0157E0  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 33214  0157E4  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 33215  0157E8  4A24               	infsnz	i2___fldiv@new_exp,f,c
 33216  0157EA  2A25               	incf	i2___fldiv@new_exp+1,f,c
 33217  0157EC                     i2l2096:
 33218  0157EC  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 33219  0157EE  D010               	goto	i2l2097
 33220  0157F0  5025               	movf	i2___fldiv@new_exp+1,w,c
 33221  0157F2  E103               	bnz	i2u1335_40
 33222  0157F4  2824               	incf	i2___fldiv@new_exp,w,c
 33223  0157F6  A0D8               	btfss	status,0,c
 33224  0157F8  D00B               	goto	i2l2097
 33225  0157FA                     i2u1335_40:
 33226  0157FA  0E00               	movlw	0
 33227  0157FC  6E25               	movwf	i2___fldiv@new_exp+1,c
 33228  0157FE  6824               	setf	i2___fldiv@new_exp,c
 33229  015800  0E00               	movlw	0
 33230  015802  6E13               	movwf	i2___fldiv@b,c
 33231  015804  0E00               	movlw	0
 33232  015806  6E14               	movwf	i2___fldiv@b+1,c
 33233  015808  0E00               	movlw	0
 33234  01580A  6E15               	movwf	i2___fldiv@b+2,c
 33235  01580C  0E00               	movlw	0
 33236  01580E  6E16               	movwf	i2___fldiv@b+3,c
 33237  015810                     i2l2097:
 33238  015810  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 33239  015812  D005               	goto	i2u1336_40
 33240  015814  5025               	movf	i2___fldiv@new_exp+1,w,c
 33241  015816  E111               	bnz	i2l11362
 33242  015818  0424               	decf	i2___fldiv@new_exp,w,c
 33243  01581A  B0D8               	btfsc	status,0,c
 33244  01581C  D00E               	goto	i2l2098
 33245  01581E                     i2u1336_40:
 33246  01581E  0E00               	movlw	0
 33247  015820  6E25               	movwf	i2___fldiv@new_exp+1,c
 33248  015822  0E00               	movlw	0
 33249  015824  6E24               	movwf	i2___fldiv@new_exp,c
 33250  015826  0E00               	movlw	0
 33251  015828  6E13               	movwf	i2___fldiv@b,c
 33252  01582A  0E00               	movlw	0
 33253  01582C  6E14               	movwf	i2___fldiv@b+1,c
 33254  01582E  0E00               	movlw	0
 33255  015830  6E15               	movwf	i2___fldiv@b+2,c
 33256  015832  0E00               	movlw	0
 33257  015834  6E16               	movwf	i2___fldiv@b+3,c
 33258  015836  0E00               	movlw	0
 33259  015838  6E1F               	movwf	i2___fldiv@sign,c
 33260  01583A                     i2l2098:
 33261  01583A                     i2l11362:
 33262  01583A  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 33263  01583E  A02A               	btfss	i2___fldiv@bexp,0,c
 33264  015840  D002               	goto	i2l2099
 33265  015842  8E15               	bsf	i2___fldiv@b+2,7,c
 33266  015844  D001               	goto	i2l2100
 33267  015846                     i2l2099:
 33268  015846  9E15               	bcf	i2___fldiv@b+2,7,c
 33269  015848                     i2l2100:
 33270  015848  90D8               	bcf	status,0,c
 33271  01584A  302A               	rrcf	i2___fldiv@bexp,w,c
 33272  01584C  6E16               	movwf	i2___fldiv@b+3,c
 33273  01584E  501F               	movf	i2___fldiv@sign,w,c
 33274  015850  1216               	iorwf	i2___fldiv@b+3,f,c
 33275  015852  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 33276  015856  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 33277  01585A  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 33278  01585E  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 33279  015862  0012               	return	
 33280  015864                     __end_ofi2___fldiv:
 33281                           	opt stack 0
 33282                           tosu	equ	0xFFF
 33283                           tosh	equ	0xFFE
 33284                           tosl	equ	0xFFD
 33285                           pclatu	equ	0xFFB
 33286                           pclath	equ	0xFFA
 33287                           tblptru	equ	0xFF8
 33288                           tblptrh	equ	0xFF7
 33289                           tblptrl	equ	0xFF6
 33290                           tablat	equ	0xFF5
 33291                           prodh	equ	0xFF4
 33292                           prodl	equ	0xFF3
 33293                           intcon	equ	0xFF2
 33294                           indf0	equ	0xFEF
 33295                           postinc0	equ	0xFEE
 33296                           fsr0h	equ	0xFEA
 33297                           fsr0l	equ	0xFE9
 33298                           wreg	equ	0xFE8
 33299                           indf1	equ	0xFE7
 33300                           postdec1	equ	0xFE5
 33301                           plusw1	equ	0xFE3
 33302                           fsr1h	equ	0xFE2
 33303                           fsr1l	equ	0xFE1
 33304                           bsr	equ	0xFE0
 33305                           indf2	equ	0xFDF
 33306                           postinc2	equ	0xFDE
 33307                           postdec2	equ	0xFDD
 33308                           plusw2	equ	0xFDB
 33309                           fsr2h	equ	0xFDA
 33310                           fsr2l	equ	0xFD9
 33311                           status	equ	0xFD8
 33312                           
 33313 ;; *************** function _floor *****************
 33314 ;; Defined at:
 33315 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 33316 ;; Parameters:    Size  Location     Type
 33317 ;;  x               4   22[BANK0 ] unsigned char 
 33318 ;; Auto vars:     Size  Location     Type
 33319 ;;  i               4   26[BANK0 ] unsigned char 
 33320 ;;  expon           2   30[BANK0 ] int 
 33321 ;; Return value:  Size  Location     Type
 33322 ;;                  4   22[BANK0 ] int 
 33323 ;; Registers used:
 33324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33325 ;; Tracked objects:
 33326 ;;		On entry : 0/0
 33327 ;;		On exit  : 0/0
 33328 ;;		Unchanged: 0/0
 33329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33330 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33331 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33333 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33334 ;;Total ram usage:       10 bytes
 33335 ;; Hardware stack levels used:    1
 33336 ;; Hardware stack levels required when called:    1
 33337 ;; This function calls:
 33338 ;;		_frexp
 33339 ;;		i2___fladd
 33340 ;;		i2___flge
 33341 ;;		i2___fltol
 33342 ;;		i2___xxtofl
 33343 ;; This function is called by:
 33344 ;;		_sin
 33345 ;; This function uses a non-reentrant model
 33346 ;;
 33347                           
 33348                           	psect	text113
 33349  016A4C                     __ptext113:
 33350                           	opt stack 0
 33351  016A4C                     _floor:
 33352                           	opt stack 13
 33353                           
 33354                           ;incstack = 0
 33355  016A4C  C076  F001         	movff	floor@x,frexp@value
 33356  016A50  C077  F002         	movff	floor@x+1,frexp@value+1
 33357  016A54  C078  F003         	movff	floor@x+2,frexp@value+2
 33358  016A58  C079  F004         	movff	floor@x+3,frexp@value+3
 33359  016A5C  0E7E               	movlw	low floor@expon
 33360  016A5E  6E05               	movwf	frexp@eptr,c
 33361  016A60  0E00               	movlw	high floor@expon
 33362  016A62  6E06               	movwf	frexp@eptr+1,c
 33363  016A64  ECEA  F0BA         	call	_frexp	;wreg free
 33364  016A68  0100               	movlb	0	; () banked
 33365  016A6A  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 33366  016A6C  D014               	goto	i2l2227
 33367                           
 33368                           ; BSR set to: 0
 33369  016A6E  AF79               	btfss	(floor@x+3)& (0+255),7,b
 33370  016A70  D009               	goto	i2l2228
 33371                           
 33372                           ; BSR set to: 0
 33373  016A72  0E00               	movlw	0
 33374  016A74  6F76               	movwf	?_floor& (0+255),b
 33375  016A76  0E00               	movlw	0
 33376  016A78  6F77               	movwf	(?_floor+1)& (0+255),b
 33377  016A7A  0E80               	movlw	128
 33378  016A7C  6F78               	movwf	(?_floor+2)& (0+255),b
 33379  016A7E  0EBF               	movlw	191
 33380  016A80  6F79               	movwf	(?_floor+3)& (0+255),b
 33381                           
 33382                           ; BSR set to: 0
 33383  016A82  0012               	return	
 33384  016A84                     i2l2228:
 33385                           
 33386                           ; BSR set to: 0
 33387                           
 33388                           ; BSR set to: 0
 33389  016A84  0E00               	movlw	0
 33390  016A86  6F76               	movwf	?_floor& (0+255),b
 33391  016A88  0E00               	movlw	0
 33392  016A8A  6F77               	movwf	(?_floor+1)& (0+255),b
 33393  016A8C  0E00               	movlw	0
 33394  016A8E  6F78               	movwf	(?_floor+2)& (0+255),b
 33395  016A90  0E00               	movlw	0
 33396  016A92  6F79               	movwf	(?_floor+3)& (0+255),b
 33397                           
 33398                           ; BSR set to: 0
 33399  016A94  0012               	return	
 33400  016A96                     i2l2227:
 33401                           
 33402                           ; BSR set to: 0
 33403                           
 33404                           ; BSR set to: 0
 33405  016A96  517F               	movf	(floor@expon+1)& (0+255),w,b
 33406  016A98  E104               	bnz	i2u1491_40
 33407  016A9A  0E1D               	movlw	29
 33408  016A9C  5D7E               	subwf	floor@expon& (0+255),w,b
 33409  016A9E  A0D8               	btfss	status,0,c
 33410  016AA0  D009               	goto	i2l2230
 33411  016AA2                     i2u1491_40:
 33412                           
 33413                           ; BSR set to: 0
 33414  016AA2  C076  F076         	movff	floor@x,?_floor
 33415  016AA6  C077  F077         	movff	floor@x+1,?_floor+1
 33416  016AAA  C078  F078         	movff	floor@x+2,?_floor+2
 33417  016AAE  C079  F079         	movff	floor@x+3,?_floor+3
 33418  016AB2  0012               	return	
 33419  016AB4                     i2l2230:
 33420                           
 33421                           ; BSR set to: 0
 33422                           
 33423                           ; BSR set to: 0
 33424  016AB4  C076  F06C         	movff	floor@x,i2___fltol@f1
 33425  016AB8  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 33426  016ABC  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 33427  016AC0  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 33428  016AC4  EC9E  F0B6         	call	i2___fltol	;wreg free
 33429  016AC8  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 33430  016ACC  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 33431  016AD0  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 33432  016AD4  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 33433  016AD8  0E01               	movlw	1
 33434  016ADA  EC73  F0B0         	call	i2___xxtofl
 33435  016ADE  C005  F07A         	movff	?i2___xxtofl,floor@i
 33436  016AE2  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 33437  016AE6  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 33438  016AEA  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 33439  016AEE  C076  F034         	movff	floor@x,i2___flge@ff1
 33440  016AF2  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 33441  016AF6  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 33442  016AFA  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 33443  016AFE  C07A  F038         	movff	floor@i,i2___flge@ff2
 33444  016B02  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 33445  016B06  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 33446  016B0A  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 33447  016B0E  EC08  F0B4         	call	i2___flge	;wreg free
 33448  016B12  B0D8               	btfsc	status,0,c
 33449  016B14  D01B               	goto	i2l2231
 33450  016B16  C07A  F056         	movff	floor@i,i2___fladd@b
 33451  016B1A  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 33452  016B1E  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 33453  016B22  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 33454  016B26  0E00               	movlw	0
 33455  016B28  6E5A               	movwf	i2___fladd@a,c
 33456  016B2A  0E00               	movlw	0
 33457  016B2C  6E5B               	movwf	i2___fladd@a+1,c
 33458  016B2E  0E80               	movlw	128
 33459  016B30  6E5C               	movwf	i2___fladd@a+2,c
 33460  016B32  0EBF               	movlw	191
 33461  016B34  6E5D               	movwf	i2___fladd@a+3,c
 33462  016B36  EC18  F0A2         	call	i2___fladd	;wreg free
 33463  016B3A  C056  F076         	movff	?i2___fladd,?_floor
 33464  016B3E  C057  F077         	movff	?i2___fladd+1,?_floor+1
 33465  016B42  C058  F078         	movff	?i2___fladd+2,?_floor+2
 33466  016B46  C059  F079         	movff	?i2___fladd+3,?_floor+3
 33467  016B4A  0012               	return	
 33468  016B4C                     i2l2231:
 33469  016B4C  C07A  F076         	movff	floor@i,?_floor
 33470  016B50  C07B  F077         	movff	floor@i+1,?_floor+1
 33471  016B54  C07C  F078         	movff	floor@i+2,?_floor+2
 33472  016B58  C07D  F079         	movff	floor@i+3,?_floor+3
 33473  016B5C  0012               	return		;funcret
 33474  016B5E                     __end_of_floor:
 33475                           	opt stack 0
 33476                           tosu	equ	0xFFF
 33477                           tosh	equ	0xFFE
 33478                           tosl	equ	0xFFD
 33479                           pclatu	equ	0xFFB
 33480                           pclath	equ	0xFFA
 33481                           tblptru	equ	0xFF8
 33482                           tblptrh	equ	0xFF7
 33483                           tblptrl	equ	0xFF6
 33484                           tablat	equ	0xFF5
 33485                           prodh	equ	0xFF4
 33486                           prodl	equ	0xFF3
 33487                           intcon	equ	0xFF2
 33488                           indf0	equ	0xFEF
 33489                           postinc0	equ	0xFEE
 33490                           fsr0h	equ	0xFEA
 33491                           fsr0l	equ	0xFE9
 33492                           wreg	equ	0xFE8
 33493                           indf1	equ	0xFE7
 33494                           postdec1	equ	0xFE5
 33495                           plusw1	equ	0xFE3
 33496                           fsr1h	equ	0xFE2
 33497                           fsr1l	equ	0xFE1
 33498                           bsr	equ	0xFE0
 33499                           indf2	equ	0xFDF
 33500                           postinc2	equ	0xFDE
 33501                           postdec2	equ	0xFDD
 33502                           plusw2	equ	0xFDB
 33503                           fsr2h	equ	0xFDA
 33504                           fsr2l	equ	0xFD9
 33505                           status	equ	0xFD8
 33506                           
 33507 ;; *************** function i2___xxtofl *****************
 33508 ;; Defined at:
 33509 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 33510 ;; Parameters:    Size  Location     Type
 33511 ;;  sign            1    wreg     unsigned char 
 33512 ;;  val             4    4[COMRAM] long 
 33513 ;; Auto vars:     Size  Location     Type
 33514 ;;  sign            1   12[COMRAM] unsigned char 
 33515 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 33516 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 33517 ;; Return value:  Size  Location     Type
 33518 ;;                  4    4[COMRAM] unsigned char 
 33519 ;; Registers used:
 33520 ;;		wreg, status,2, status,0
 33521 ;; Tracked objects:
 33522 ;;		On entry : 0/0
 33523 ;;		On exit  : 0/0
 33524 ;;		Unchanged: 0/0
 33525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33527 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33528 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33529 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33530 ;;Total ram usage:       14 bytes
 33531 ;; Hardware stack levels used:    1
 33532 ;; This function calls:
 33533 ;;		Nothing
 33534 ;; This function is called by:
 33535 ;;		_ADCPostProcessingCallback
 33536 ;;		_floor
 33537 ;;		i2_printf
 33538 ;; This function uses a non-reentrant model
 33539 ;;
 33540                           
 33541                           	psect	text114
 33542  0160E6                     __ptext114:
 33543                           	opt stack 0
 33544  0160E6                     i2___xxtofl:
 33545                           	opt stack 16
 33546                           
 33547                           ;incstack = 0
 33548                           ;i2___xxtofl@sign stored from wreg
 33549  0160E6  6E0D               	movwf	i2___xxtofl@sign,c
 33550  0160E8  500D               	movf	i2___xxtofl@sign,w,c
 33551  0160EA  A4D8               	btfss	status,2,c
 33552  0160EC  AE08               	btfss	i2___xxtofl@val+3,7,c
 33553  0160EE  D01A               	goto	i2l2206
 33554  0160F0  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 33555  0160F4  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 33556  0160F8  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 33557  0160FC  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 33558  016100  1E09               	comf	??i2___xxtofl,f,c
 33559  016102  1E0A               	comf	??i2___xxtofl+1,f,c
 33560  016104  1E0B               	comf	??i2___xxtofl+2,f,c
 33561  016106  1E0C               	comf	??i2___xxtofl+3,f,c
 33562  016108  2A09               	incf	??i2___xxtofl,f,c
 33563  01610A  0E00               	movlw	0
 33564  01610C  220A               	addwfc	??i2___xxtofl+1,f,c
 33565  01610E  220B               	addwfc	??i2___xxtofl+2,f,c
 33566  016110  220C               	addwfc	??i2___xxtofl+3,f,c
 33567  016112  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 33568  016116  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 33569  01611A  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 33570  01611E  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 33571  016122  D008               	goto	i2l2207
 33572  016124                     i2l2206:
 33573  016124  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 33574  016128  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 33575  01612C  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 33576  016130  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 33577  016134                     i2l2207:
 33578  016134  5005               	movf	i2___xxtofl@val,w,c
 33579  016136  1006               	iorwf	i2___xxtofl@val+1,w,c
 33580  016138  1007               	iorwf	i2___xxtofl@val+2,w,c
 33581  01613A  1008               	iorwf	i2___xxtofl@val+3,w,c
 33582  01613C  A4D8               	btfss	status,2,c
 33583  01613E  D009               	goto	i2l2208
 33584  016140  0E00               	movlw	0
 33585  016142  6E05               	movwf	?i2___xxtofl,c
 33586  016144  0E00               	movlw	0
 33587  016146  6E06               	movwf	?i2___xxtofl+1,c
 33588  016148  0E00               	movlw	0
 33589  01614A  6E07               	movwf	?i2___xxtofl+2,c
 33590  01614C  0E00               	movlw	0
 33591  01614E  6E08               	movwf	?i2___xxtofl+3,c
 33592  016150  0012               	return	
 33593  016152                     i2l2208:
 33594  016152  0E96               	movlw	150
 33595  016154  6E0E               	movwf	i2___xxtofl@exp,c
 33596  016156  D006               	goto	i2l2210
 33597  016158  2A0E               	incf	i2___xxtofl@exp,f,c
 33598  01615A  90D8               	bcf	status,0,c
 33599  01615C  3212               	rrcf	i2___xxtofl@arg+3,f,c
 33600  01615E  3211               	rrcf	i2___xxtofl@arg+2,f,c
 33601  016160  3210               	rrcf	i2___xxtofl@arg+1,f,c
 33602  016162  320F               	rrcf	i2___xxtofl@arg,f,c
 33603  016164                     i2l2210:
 33604  016164  0E00               	movlw	0
 33605  016166  140F               	andwf	i2___xxtofl@arg,w,c
 33606  016168  6E09               	movwf	??i2___xxtofl& (0+255),c
 33607  01616A  0E00               	movlw	0
 33608  01616C  1410               	andwf	i2___xxtofl@arg+1,w,c
 33609  01616E  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 33610  016170  0E00               	movlw	0
 33611  016172  1411               	andwf	i2___xxtofl@arg+2,w,c
 33612  016174  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 33613  016176  0EFE               	movlw	254
 33614  016178  1412               	andwf	i2___xxtofl@arg+3,w,c
 33615  01617A  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 33616  01617C  5009               	movf	??i2___xxtofl,w,c
 33617  01617E  100A               	iorwf	??i2___xxtofl+1,w,c
 33618  016180  100B               	iorwf	??i2___xxtofl+2,w,c
 33619  016182  100C               	iorwf	??i2___xxtofl+3,w,c
 33620  016184  B4D8               	btfsc	status,2,c
 33621  016186  D00D               	goto	i2l2213
 33622  016188  D7E7               	goto	i2l2211
 33623  01618A  2A0E               	incf	i2___xxtofl@exp,f,c
 33624  01618C  0E01               	movlw	1
 33625  01618E  260F               	addwf	i2___xxtofl@arg,f,c
 33626  016190  0E00               	movlw	0
 33627  016192  2210               	addwfc	i2___xxtofl@arg+1,f,c
 33628  016194  2211               	addwfc	i2___xxtofl@arg+2,f,c
 33629  016196  2212               	addwfc	i2___xxtofl@arg+3,f,c
 33630  016198  90D8               	bcf	status,0,c
 33631  01619A  3212               	rrcf	i2___xxtofl@arg+3,f,c
 33632  01619C  3211               	rrcf	i2___xxtofl@arg+2,f,c
 33633  01619E  3210               	rrcf	i2___xxtofl@arg+1,f,c
 33634  0161A0  320F               	rrcf	i2___xxtofl@arg,f,c
 33635  0161A2                     i2l2213:
 33636  0161A2  0E00               	movlw	0
 33637  0161A4  140F               	andwf	i2___xxtofl@arg,w,c
 33638  0161A6  6E09               	movwf	??i2___xxtofl& (0+255),c
 33639  0161A8  0E00               	movlw	0
 33640  0161AA  1410               	andwf	i2___xxtofl@arg+1,w,c
 33641  0161AC  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 33642  0161AE  0E00               	movlw	0
 33643  0161B0  1411               	andwf	i2___xxtofl@arg+2,w,c
 33644  0161B2  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 33645  0161B4  0EFF               	movlw	255
 33646  0161B6  1412               	andwf	i2___xxtofl@arg+3,w,c
 33647  0161B8  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 33648  0161BA  5009               	movf	??i2___xxtofl,w,c
 33649  0161BC  100A               	iorwf	??i2___xxtofl+1,w,c
 33650  0161BE  100B               	iorwf	??i2___xxtofl+2,w,c
 33651  0161C0  100C               	iorwf	??i2___xxtofl+3,w,c
 33652  0161C2  B4D8               	btfsc	status,2,c
 33653  0161C4  D007               	goto	i2l2216
 33654  0161C6  D7E1               	goto	i2l2214
 33655  0161C8  060E               	decf	i2___xxtofl@exp,f,c
 33656  0161CA  90D8               	bcf	status,0,c
 33657  0161CC  360F               	rlcf	i2___xxtofl@arg,f,c
 33658  0161CE  3610               	rlcf	i2___xxtofl@arg+1,f,c
 33659  0161D0  3611               	rlcf	i2___xxtofl@arg+2,f,c
 33660  0161D2  3612               	rlcf	i2___xxtofl@arg+3,f,c
 33661  0161D4                     i2l2216:
 33662  0161D4  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 33663  0161D6  D003               	goto	i2u1424_40
 33664  0161D8  0E02               	movlw	2
 33665  0161DA  600E               	cpfslt	i2___xxtofl@exp,c
 33666  0161DC  D7F5               	goto	i2l2217
 33667  0161DE                     i2u1424_40:
 33668  0161DE  B00E               	btfsc	i2___xxtofl@exp,0,c
 33669  0161E0  D008               	goto	i2l2221
 33670  0161E2  0EFF               	movlw	255
 33671  0161E4  160F               	andwf	i2___xxtofl@arg,f,c
 33672  0161E6  0EFF               	movlw	255
 33673  0161E8  1610               	andwf	i2___xxtofl@arg+1,f,c
 33674  0161EA  0E7F               	movlw	127
 33675  0161EC  1611               	andwf	i2___xxtofl@arg+2,f,c
 33676  0161EE  0EFF               	movlw	255
 33677  0161F0  1612               	andwf	i2___xxtofl@arg+3,f,c
 33678  0161F2                     i2l2221:
 33679  0161F2  90D8               	bcf	status,0,c
 33680  0161F4  320E               	rrcf	i2___xxtofl@exp,f,c
 33681  0161F6  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 33682  0161FA  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 33683  0161FC  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 33684  0161FE  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 33685  016200  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 33686  016204  6A0B               	clrf	??i2___xxtofl+2,c
 33687  016206  6A0A               	clrf	??i2___xxtofl+1,c
 33688  016208  6A09               	clrf	??i2___xxtofl,c
 33689  01620A  5009               	movf	??i2___xxtofl,w,c
 33690  01620C  120F               	iorwf	i2___xxtofl@arg,f,c
 33691  01620E  500A               	movf	??i2___xxtofl+1,w,c
 33692  016210  1210               	iorwf	i2___xxtofl@arg+1,f,c
 33693  016212  500B               	movf	??i2___xxtofl+2,w,c
 33694  016214  1211               	iorwf	i2___xxtofl@arg+2,f,c
 33695  016216  500C               	movf	??i2___xxtofl+3,w,c
 33696  016218  1212               	iorwf	i2___xxtofl@arg+3,f,c
 33697  01621A  500D               	movf	i2___xxtofl@sign,w,c
 33698  01621C  A4D8               	btfss	status,2,c
 33699  01621E  AE08               	btfss	i2___xxtofl@val+3,7,c
 33700  016220  D001               	goto	i2l2222
 33701  016222  8E12               	bsf	i2___xxtofl@arg+3,7,c
 33702  016224                     i2l2222:
 33703  016224  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 33704  016228  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 33705  01622C  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 33706  016230  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 33707  016234  0012               	return	
 33708  016236                     __end_ofi2___xxtofl:
 33709                           	opt stack 0
 33710                           tosu	equ	0xFFF
 33711                           tosh	equ	0xFFE
 33712                           tosl	equ	0xFFD
 33713                           pclatu	equ	0xFFB
 33714                           pclath	equ	0xFFA
 33715                           tblptru	equ	0xFF8
 33716                           tblptrh	equ	0xFF7
 33717                           tblptrl	equ	0xFF6
 33718                           tablat	equ	0xFF5
 33719                           prodh	equ	0xFF4
 33720                           prodl	equ	0xFF3
 33721                           intcon	equ	0xFF2
 33722                           indf0	equ	0xFEF
 33723                           postinc0	equ	0xFEE
 33724                           fsr0h	equ	0xFEA
 33725                           fsr0l	equ	0xFE9
 33726                           wreg	equ	0xFE8
 33727                           indf1	equ	0xFE7
 33728                           postdec1	equ	0xFE5
 33729                           plusw1	equ	0xFE3
 33730                           fsr1h	equ	0xFE2
 33731                           fsr1l	equ	0xFE1
 33732                           bsr	equ	0xFE0
 33733                           indf2	equ	0xFDF
 33734                           postinc2	equ	0xFDE
 33735                           postdec2	equ	0xFDD
 33736                           plusw2	equ	0xFDB
 33737                           fsr2h	equ	0xFDA
 33738                           fsr2l	equ	0xFD9
 33739                           status	equ	0xFD8
 33740                           
 33741 ;; *************** function i2___fltol *****************
 33742 ;; Defined at:
 33743 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 33744 ;; Parameters:    Size  Location     Type
 33745 ;;  f1              4   12[BANK0 ] unsigned char 
 33746 ;; Auto vars:     Size  Location     Type
 33747 ;;  __fltol         1   21[BANK0 ] unsigned char 
 33748 ;;  __fltol         1   20[BANK0 ] unsigned char 
 33749 ;; Return value:  Size  Location     Type
 33750 ;;                  4   12[BANK0 ] long 
 33751 ;; Registers used:
 33752 ;;		wreg, status,2, status,0
 33753 ;; Tracked objects:
 33754 ;;		On entry : 0/0
 33755 ;;		On exit  : 0/0
 33756 ;;		Unchanged: 0/0
 33757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33759 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33760 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33761 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33762 ;;Total ram usage:       10 bytes
 33763 ;; Hardware stack levels used:    1
 33764 ;; This function calls:
 33765 ;;		Nothing
 33766 ;; This function is called by:
 33767 ;;		_ADCPostProcessingCallback
 33768 ;;		_floor
 33769 ;;		i2_printf
 33770 ;; This function uses a non-reentrant model
 33771 ;;
 33772                           
 33773                           	psect	text115
 33774  016D3C                     __ptext115:
 33775                           	opt stack 0
 33776  016D3C                     i2___fltol:
 33777                           	opt stack 16
 33778                           
 33779                           ;incstack = 0
 33780  016D3C  0100               	movlb	0	; () banked
 33781  016D3E  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 33782  016D40  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 33783  016D42  6F75               	movwf	i2___fltol@exp1& (0+255),b
 33784  016D44  5175               	movf	i2___fltol@exp1& (0+255),w,b
 33785  016D46  A4D8               	btfss	status,2,c
 33786  016D48  D009               	goto	i2l1773
 33787                           
 33788                           ; BSR set to: 0
 33789  016D4A  0E00               	movlw	0
 33790  016D4C  6F6C               	movwf	?i2___fltol& (0+255),b
 33791  016D4E  0E00               	movlw	0
 33792  016D50  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 33793  016D52  0E00               	movlw	0
 33794  016D54  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 33795  016D56  0E00               	movlw	0
 33796  016D58  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 33797                           
 33798                           ; BSR set to: 0
 33799  016D5A  0012               	return	
 33800  016D5C                     i2l1773:
 33801                           
 33802                           ; BSR set to: 0
 33803                           
 33804                           ; BSR set to: 0
 33805  016D5C  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 33806  016D60  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 33807  016D64  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 33808  016D68  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 33809  016D6C  0E20               	movlw	32
 33810  016D6E  D005               	goto	i2u1412_40
 33811  016D70                     i2u1412_45:
 33812  016D70  90D8               	bcf	status,0,c
 33813  016D72  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 33814  016D74  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 33815  016D76  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 33816  016D78  3370               	rrcf	??i2___fltol& (0+255),f,b
 33817  016D7A                     i2u1412_40:
 33818  016D7A  2EE8               	decfsz	wreg,f,c
 33819  016D7C  D7F9               	goto	i2u1412_45
 33820  016D7E  5170               	movf	??i2___fltol& (0+255),w,b
 33821  016D80  6F74               	movwf	i2___fltol@sign1& (0+255),b
 33822                           
 33823                           ; BSR set to: 0
 33824  016D82  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 33825                           
 33826                           ; BSR set to: 0
 33827  016D84  0EFF               	movlw	255
 33828  016D86  176C               	andwf	i2___fltol@f1& (0+255),f,b
 33829  016D88  0EFF               	movlw	255
 33830  016D8A  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 33831  016D8C  0EFF               	movlw	255
 33832  016D8E  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 33833  016D90  0E00               	movlw	0
 33834  016D92  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 33835                           
 33836                           ; BSR set to: 0
 33837  016D94  0E96               	movlw	150
 33838  016D96  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 33839                           
 33840                           ; BSR set to: 0
 33841  016D98  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 33842  016D9A  D016               	goto	i2l1775
 33843                           
 33844                           ; BSR set to: 0
 33845  016D9C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 33846  016D9E  0A80               	xorlw	128
 33847  016DA0  0F97               	addlw	151
 33848  016DA2  B0D8               	btfsc	status,0,c
 33849  016DA4  D009               	goto	i2l1776
 33850                           
 33851                           ; BSR set to: 0
 33852  016DA6  0E00               	movlw	0
 33853  016DA8  6F6C               	movwf	?i2___fltol& (0+255),b
 33854  016DAA  0E00               	movlw	0
 33855  016DAC  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 33856  016DAE  0E00               	movlw	0
 33857  016DB0  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 33858  016DB2  0E00               	movlw	0
 33859  016DB4  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 33860                           
 33861                           ; BSR set to: 0
 33862  016DB6  0012               	return	
 33863  016DB8                     i2l1776:
 33864                           
 33865                           ; BSR set to: 0
 33866                           
 33867                           ; BSR set to: 0
 33868                           
 33869                           ; BSR set to: 0
 33870  016DB8  90D8               	bcf	status,0,c
 33871  016DBA  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 33872  016DBC  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 33873  016DBE  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 33874  016DC0  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 33875                           
 33876                           ; BSR set to: 0
 33877  016DC2  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 33878  016DC4  D7F9               	goto	i2l1776
 33879                           
 33880                           ; BSR set to: 0
 33881  016DC6  D015               	goto	i2u1416_40
 33882  016DC8                     i2l1775:
 33883                           
 33884                           ; BSR set to: 0
 33885                           
 33886                           ; BSR set to: 0
 33887  016DC8  0E1F               	movlw	31
 33888  016DCA  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 33889  016DCC  D00F               	goto	i2l1781
 33890                           
 33891                           ; BSR set to: 0
 33892  016DCE  0E00               	movlw	0
 33893  016DD0  6F6C               	movwf	?i2___fltol& (0+255),b
 33894  016DD2  0E00               	movlw	0
 33895  016DD4  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 33896  016DD6  0E00               	movlw	0
 33897  016DD8  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 33898  016DDA  0E00               	movlw	0
 33899  016DDC  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 33900                           
 33901                           ; BSR set to: 0
 33902  016DDE  0012               	return	
 33903  016DE0                     
 33904                           ; BSR set to: 0
 33905                           
 33906                           ; BSR set to: 0
 33907  016DE0  90D8               	bcf	status,0,c
 33908  016DE2  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 33909  016DE4  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 33910  016DE6  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 33911  016DE8  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 33912  016DEA  0775               	decf	i2___fltol@exp1& (0+255),f,b
 33913  016DEC                     i2l1781:
 33914                           
 33915                           ; BSR set to: 0
 33916                           
 33917                           ; BSR set to: 0
 33918  016DEC  5175               	movf	i2___fltol@exp1& (0+255),w,b
 33919  016DEE  A4D8               	btfss	status,2,c
 33920  016DF0  D7F7               	goto	i2l1782
 33921  016DF2                     i2u1416_40:
 33922                           
 33923                           ; BSR set to: 0
 33924                           
 33925                           ; BSR set to: 0
 33926                           
 33927                           ; BSR set to: 0
 33928  016DF2  5174               	movf	i2___fltol@sign1& (0+255),w,b
 33929  016DF4  B4D8               	btfsc	status,2,c
 33930  016DF6  D008               	goto	i2l1784
 33931                           
 33932                           ; BSR set to: 0
 33933  016DF8  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 33934  016DFA  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 33935  016DFC  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 33936  016DFE  6D6C               	negf	i2___fltol@f1& (0+255),b
 33937  016E00  0E00               	movlw	0
 33938  016E02  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 33939  016E04  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 33940  016E06  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 33941  016E08                     i2l1784:
 33942                           
 33943                           ; BSR set to: 0
 33944                           
 33945                           ; BSR set to: 0
 33946  016E08  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 33947  016E0C  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 33948  016E10  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 33949  016E14  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 33950  016E18  0012               	return	
 33951  016E1A                     __end_ofi2___fltol:
 33952                           	opt stack 0
 33953                           tosu	equ	0xFFF
 33954                           tosh	equ	0xFFE
 33955                           tosl	equ	0xFFD
 33956                           pclatu	equ	0xFFB
 33957                           pclath	equ	0xFFA
 33958                           tblptru	equ	0xFF8
 33959                           tblptrh	equ	0xFF7
 33960                           tblptrl	equ	0xFF6
 33961                           tablat	equ	0xFF5
 33962                           prodh	equ	0xFF4
 33963                           prodl	equ	0xFF3
 33964                           intcon	equ	0xFF2
 33965                           indf0	equ	0xFEF
 33966                           postinc0	equ	0xFEE
 33967                           fsr0h	equ	0xFEA
 33968                           fsr0l	equ	0xFE9
 33969                           wreg	equ	0xFE8
 33970                           indf1	equ	0xFE7
 33971                           postdec1	equ	0xFE5
 33972                           plusw1	equ	0xFE3
 33973                           fsr1h	equ	0xFE2
 33974                           fsr1l	equ	0xFE1
 33975                           bsr	equ	0xFE0
 33976                           indf2	equ	0xFDF
 33977                           postinc2	equ	0xFDE
 33978                           postdec2	equ	0xFDD
 33979                           plusw2	equ	0xFDB
 33980                           fsr2h	equ	0xFDA
 33981                           fsr2l	equ	0xFD9
 33982                           status	equ	0xFD8
 33983                           
 33984 ;; *************** function i2___flge *****************
 33985 ;; Defined at:
 33986 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 33987 ;; Parameters:    Size  Location     Type
 33988 ;;  ff1             4   51[COMRAM] long 
 33989 ;;  ff2             4   55[COMRAM] long 
 33990 ;; Auto vars:     Size  Location     Type
 33991 ;;		None
 33992 ;; Return value:  Size  Location     Type
 33993 ;;		None               void
 33994 ;; Registers used:
 33995 ;;		wreg, status,2, status,0
 33996 ;; Tracked objects:
 33997 ;;		On entry : 0/0
 33998 ;;		On exit  : 0/0
 33999 ;;		Unchanged: 0/0
 34000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34001 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34004 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34005 ;;Total ram usage:       12 bytes
 34006 ;; Hardware stack levels used:    1
 34007 ;; This function calls:
 34008 ;;		Nothing
 34009 ;; This function is called by:
 34010 ;;		_ADCPostProcessingCallback
 34011 ;;		_asin
 34012 ;;		_atan
 34013 ;;		_sin
 34014 ;;		_floor
 34015 ;;		i2_printf
 34016 ;; This function uses a non-reentrant model
 34017 ;;
 34018                           
 34019                           	psect	text116
 34020  016810                     __ptext116:
 34021                           	opt stack 0
 34022  016810                     i2___flge:
 34023                           	opt stack 16
 34024                           
 34025                           ; BSR set to: 0
 34026                           ;incstack = 0
 34027  016810  0E00               	movlw	0
 34028  016812  1434               	andwf	i2___flge@ff1,w,c
 34029  016814  6E3C               	movwf	??i2___flge& (0+255),c
 34030  016816  0E00               	movlw	0
 34031  016818  1435               	andwf	i2___flge@ff1+1,w,c
 34032  01681A  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 34033  01681C  0E80               	movlw	128
 34034  01681E  1436               	andwf	i2___flge@ff1+2,w,c
 34035  016820  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 34036  016822  0E7F               	movlw	127
 34037  016824  1437               	andwf	i2___flge@ff1+3,w,c
 34038  016826  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 34039  016828  503C               	movf	??i2___flge,w,c
 34040  01682A  103D               	iorwf	??i2___flge+1,w,c
 34041  01682C  103E               	iorwf	??i2___flge+2,w,c
 34042  01682E  103F               	iorwf	??i2___flge+3,w,c
 34043  016830  A4D8               	btfss	status,2,c
 34044  016832  D008               	goto	i2l1743
 34045  016834  0E00               	movlw	0
 34046  016836  6E34               	movwf	i2___flge@ff1,c
 34047  016838  0E00               	movlw	0
 34048  01683A  6E35               	movwf	i2___flge@ff1+1,c
 34049  01683C  0E00               	movlw	0
 34050  01683E  6E36               	movwf	i2___flge@ff1+2,c
 34051  016840  0E00               	movlw	0
 34052  016842  6E37               	movwf	i2___flge@ff1+3,c
 34053  016844                     i2l1743:
 34054  016844  0E00               	movlw	0
 34055  016846  1438               	andwf	i2___flge@ff2,w,c
 34056  016848  6E3C               	movwf	??i2___flge& (0+255),c
 34057  01684A  0E00               	movlw	0
 34058  01684C  1439               	andwf	i2___flge@ff2+1,w,c
 34059  01684E  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 34060  016850  0E80               	movlw	128
 34061  016852  143A               	andwf	i2___flge@ff2+2,w,c
 34062  016854  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 34063  016856  0E7F               	movlw	127
 34064  016858  143B               	andwf	i2___flge@ff2+3,w,c
 34065  01685A  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 34066  01685C  503C               	movf	??i2___flge,w,c
 34067  01685E  103D               	iorwf	??i2___flge+1,w,c
 34068  016860  103E               	iorwf	??i2___flge+2,w,c
 34069  016862  103F               	iorwf	??i2___flge+3,w,c
 34070  016864  A4D8               	btfss	status,2,c
 34071  016866  D008               	goto	i2l1744
 34072  016868  0E00               	movlw	0
 34073  01686A  6E38               	movwf	i2___flge@ff2,c
 34074  01686C  0E00               	movlw	0
 34075  01686E  6E39               	movwf	i2___flge@ff2+1,c
 34076  016870  0E00               	movlw	0
 34077  016872  6E3A               	movwf	i2___flge@ff2+2,c
 34078  016874  0E00               	movlw	0
 34079  016876  6E3B               	movwf	i2___flge@ff2+3,c
 34080  016878                     i2l1744:
 34081  016878  AE37               	btfss	i2___flge@ff1+3,7,c
 34082  01687A  D01D               	goto	i2l1745
 34083  01687C  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 34084  016880  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 34085  016884  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 34086  016888  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 34087  01688C  1E3C               	comf	??i2___flge,f,c
 34088  01688E  1E3D               	comf	??i2___flge+1,f,c
 34089  016890  1E3E               	comf	??i2___flge+2,f,c
 34090  016892  1E3F               	comf	??i2___flge+3,f,c
 34091  016894  2A3C               	incf	??i2___flge,f,c
 34092  016896  0E00               	movlw	0
 34093  016898  223D               	addwfc	??i2___flge+1,f,c
 34094  01689A  223E               	addwfc	??i2___flge+2,f,c
 34095  01689C  223F               	addwfc	??i2___flge+3,f,c
 34096  01689E  0E00               	movlw	0
 34097  0168A0  243C               	addwf	??i2___flge,w,c
 34098  0168A2  6E34               	movwf	i2___flge@ff1,c
 34099  0168A4  0E00               	movlw	0
 34100  0168A6  203D               	addwfc	??i2___flge+1,w,c
 34101  0168A8  6E35               	movwf	i2___flge@ff1+1,c
 34102  0168AA  0E00               	movlw	0
 34103  0168AC  203E               	addwfc	??i2___flge+2,w,c
 34104  0168AE  6E36               	movwf	i2___flge@ff1+2,c
 34105  0168B0  0E80               	movlw	128
 34106  0168B2  203F               	addwfc	??i2___flge+3,w,c
 34107  0168B4  6E37               	movwf	i2___flge@ff1+3,c
 34108  0168B6                     i2l1745:
 34109  0168B6  AE3B               	btfss	i2___flge@ff2+3,7,c
 34110  0168B8  D01D               	goto	i2l1746
 34111  0168BA  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 34112  0168BE  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 34113  0168C2  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 34114  0168C6  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 34115  0168CA  1E3C               	comf	??i2___flge,f,c
 34116  0168CC  1E3D               	comf	??i2___flge+1,f,c
 34117  0168CE  1E3E               	comf	??i2___flge+2,f,c
 34118  0168D0  1E3F               	comf	??i2___flge+3,f,c
 34119  0168D2  2A3C               	incf	??i2___flge,f,c
 34120  0168D4  0E00               	movlw	0
 34121  0168D6  223D               	addwfc	??i2___flge+1,f,c
 34122  0168D8  223E               	addwfc	??i2___flge+2,f,c
 34123  0168DA  223F               	addwfc	??i2___flge+3,f,c
 34124  0168DC  0E00               	movlw	0
 34125  0168DE  243C               	addwf	??i2___flge,w,c
 34126  0168E0  6E38               	movwf	i2___flge@ff2,c
 34127  0168E2  0E00               	movlw	0
 34128  0168E4  203D               	addwfc	??i2___flge+1,w,c
 34129  0168E6  6E39               	movwf	i2___flge@ff2+1,c
 34130  0168E8  0E00               	movlw	0
 34131  0168EA  203E               	addwfc	??i2___flge+2,w,c
 34132  0168EC  6E3A               	movwf	i2___flge@ff2+2,c
 34133  0168EE  0E80               	movlw	128
 34134  0168F0  203F               	addwfc	??i2___flge+3,w,c
 34135  0168F2  6E3B               	movwf	i2___flge@ff2+3,c
 34136  0168F4                     i2l1746:
 34137  0168F4  0E00               	movlw	0
 34138  0168F6  1A34               	xorwf	i2___flge@ff1,f,c
 34139  0168F8  0E00               	movlw	0
 34140  0168FA  1A35               	xorwf	i2___flge@ff1+1,f,c
 34141  0168FC  0E00               	movlw	0
 34142  0168FE  1A36               	xorwf	i2___flge@ff1+2,f,c
 34143  016900  0E80               	movlw	128
 34144  016902  1A37               	xorwf	i2___flge@ff1+3,f,c
 34145  016904  0E00               	movlw	0
 34146  016906  1A38               	xorwf	i2___flge@ff2,f,c
 34147  016908  0E00               	movlw	0
 34148  01690A  1A39               	xorwf	i2___flge@ff2+1,f,c
 34149  01690C  0E00               	movlw	0
 34150  01690E  1A3A               	xorwf	i2___flge@ff2+2,f,c
 34151  016910  0E80               	movlw	128
 34152  016912  1A3B               	xorwf	i2___flge@ff2+3,f,c
 34153  016914  5038               	movf	i2___flge@ff2,w,c
 34154  016916  5C34               	subwf	i2___flge@ff1,w,c
 34155  016918  5039               	movf	i2___flge@ff2+1,w,c
 34156  01691A  5835               	subwfb	i2___flge@ff1+1,w,c
 34157  01691C  503A               	movf	i2___flge@ff2+2,w,c
 34158  01691E  5836               	subwfb	i2___flge@ff1+2,w,c
 34159  016920  503B               	movf	i2___flge@ff2+3,w,c
 34160  016922  5837               	subwfb	i2___flge@ff1+3,w,c
 34161  016924  B0D8               	btfsc	status,0,c
 34162  016926  D002               	goto	i2l10434
 34163  016928  90D8               	bcf	status,0,c
 34164  01692A  0012               	return	
 34165  01692C                     i2l10434:
 34166  01692C  80D8               	bsf	status,0,c
 34167  01692E  0012               	return	
 34168  016930                     __end_ofi2___flge:
 34169                           	opt stack 0
 34170                           tosu	equ	0xFFF
 34171                           tosh	equ	0xFFE
 34172                           tosl	equ	0xFFD
 34173                           pclatu	equ	0xFFB
 34174                           pclath	equ	0xFFA
 34175                           tblptru	equ	0xFF8
 34176                           tblptrh	equ	0xFF7
 34177                           tblptrl	equ	0xFF6
 34178                           tablat	equ	0xFF5
 34179                           prodh	equ	0xFF4
 34180                           prodl	equ	0xFF3
 34181                           intcon	equ	0xFF2
 34182                           indf0	equ	0xFEF
 34183                           postinc0	equ	0xFEE
 34184                           fsr0h	equ	0xFEA
 34185                           fsr0l	equ	0xFE9
 34186                           wreg	equ	0xFE8
 34187                           indf1	equ	0xFE7
 34188                           postdec1	equ	0xFE5
 34189                           plusw1	equ	0xFE3
 34190                           fsr1h	equ	0xFE2
 34191                           fsr1l	equ	0xFE1
 34192                           bsr	equ	0xFE0
 34193                           indf2	equ	0xFDF
 34194                           postinc2	equ	0xFDE
 34195                           postdec2	equ	0xFDD
 34196                           plusw2	equ	0xFDB
 34197                           fsr2h	equ	0xFDA
 34198                           fsr2l	equ	0xFD9
 34199                           status	equ	0xFD8
 34200                           
 34201 ;; *************** function _frexp *****************
 34202 ;; Defined at:
 34203 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 34204 ;; Parameters:    Size  Location     Type
 34205 ;;  value           4    0[COMRAM] long 
 34206 ;;  eptr            2    4[COMRAM] PTR int 
 34207 ;;		 -> floor@expon(2), 
 34208 ;; Auto vars:     Size  Location     Type
 34209 ;;		None
 34210 ;; Return value:  Size  Location     Type
 34211 ;;                  4    0[COMRAM] PTR int 
 34212 ;; Registers used:
 34213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34214 ;; Tracked objects:
 34215 ;;		On entry : 0/0
 34216 ;;		On exit  : 0/0
 34217 ;;		Unchanged: 0/0
 34218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34219 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34223 ;;Total ram usage:        8 bytes
 34224 ;; Hardware stack levels used:    1
 34225 ;; This function calls:
 34226 ;;		Nothing
 34227 ;; This function is called by:
 34228 ;;		_floor
 34229 ;; This function uses a non-reentrant model
 34230 ;;
 34231                           
 34232                           	psect	text117
 34233  0175D4                     __ptext117:
 34234                           	opt stack 0
 34235  0175D4                     _frexp:
 34236                           	opt stack 13
 34237                           
 34238                           ;incstack = 0
 34239  0175D4  5001               	movf	frexp@value,w,c
 34240  0175D6  1002               	iorwf	frexp@value+1,w,c
 34241  0175D8  1003               	iorwf	frexp@value+2,w,c
 34242  0175DA  1004               	iorwf	frexp@value+3,w,c
 34243  0175DC  A4D8               	btfss	status,2,c
 34244  0175DE  D009               	goto	i2l2236
 34245  0175E0  C005  FFD9         	movff	frexp@eptr,fsr2l
 34246  0175E4  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 34247  0175E8  0E00               	movlw	0
 34248  0175EA  6EDE               	movwf	postinc2,c
 34249  0175EC  0E00               	movlw	0
 34250  0175EE  6EDD               	movwf	postdec2,c
 34251                           
 34252                           ;	Return value of _frexp is never used
 34253  0175F0  0012               	return	
 34254  0175F2                     i2l2236:
 34255  0175F2  5004               	movf	frexp@value+3,w,c
 34256  0175F4  0B7F               	andlw	127
 34257  0175F6  6E07               	movwf	??_frexp& (0+255),c
 34258  0175F8  6A08               	clrf	(??_frexp+1)& (0+255),c
 34259  0175FA  90D8               	bcf	status,0,c
 34260  0175FC  3607               	rlcf	??_frexp,f,c
 34261  0175FE  3608               	rlcf	??_frexp+1,f,c
 34262  017600  C005  FFD9         	movff	frexp@eptr,fsr2l
 34263  017604  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 34264  017608  C007  FFDE         	movff	??_frexp,postinc2
 34265  01760C  C008  FFDD         	movff	??_frexp+1,postdec2
 34266  017610  AE03               	btfss	frexp@value+2,7,c
 34267  017612  D003               	goto	i2u1410_40
 34268  017614  6A07               	clrf	??_frexp& (0+255),c
 34269  017616  2A07               	incf	??_frexp& (0+255),f,c
 34270  017618  D001               	goto	i2u1410_48
 34271  01761A                     i2u1410_40:
 34272  01761A  6A07               	clrf	??_frexp& (0+255),c
 34273  01761C                     i2u1410_48:
 34274  01761C  5007               	movf	??_frexp,w,c
 34275  01761E  C005  FFD9         	movff	frexp@eptr,fsr2l
 34276  017622  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 34277  017626  12DE               	iorwf	postinc2,f,c
 34278  017628  0E00               	movlw	0
 34279  01762A  12DD               	iorwf	postdec2,f,c
 34280  01762C  C005  FFD9         	movff	frexp@eptr,fsr2l
 34281  017630  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 34282  017634  0E82               	movlw	130
 34283  017636  26DE               	addwf	postinc2,f,c
 34284  017638  0EFF               	movlw	255
 34285  01763A  22DD               	addwfc	postdec2,f,c
 34286  01763C  8004               	bsf	frexp@value+3,0,c
 34287  01763E  8204               	bsf	frexp@value+3,1,c
 34288  017640  8404               	bsf	frexp@value+3,2,c
 34289  017642  8604               	bsf	frexp@value+3,3,c
 34290  017644  8804               	bsf	frexp@value+3,4,c
 34291  017646  8A04               	bsf	frexp@value+3,5,c
 34292  017648  9C04               	bcf	frexp@value+3,6,c
 34293  01764A  9E03               	bcf	frexp@value+2,7,c
 34294  01764C  0012               	return	
 34295  01764E                     __end_of_frexp:
 34296                           	opt stack 0
 34297                           tosu	equ	0xFFF
 34298                           tosh	equ	0xFFE
 34299                           tosl	equ	0xFFD
 34300                           pclatu	equ	0xFFB
 34301                           pclath	equ	0xFFA
 34302                           tblptru	equ	0xFF8
 34303                           tblptrh	equ	0xFF7
 34304                           tblptrl	equ	0xFF6
 34305                           tablat	equ	0xFF5
 34306                           prodh	equ	0xFF4
 34307                           prodl	equ	0xFF3
 34308                           intcon	equ	0xFF2
 34309                           indf0	equ	0xFEF
 34310                           postinc0	equ	0xFEE
 34311                           fsr0h	equ	0xFEA
 34312                           fsr0l	equ	0xFE9
 34313                           wreg	equ	0xFE8
 34314                           indf1	equ	0xFE7
 34315                           postdec1	equ	0xFE5
 34316                           plusw1	equ	0xFE3
 34317                           fsr1h	equ	0xFE2
 34318                           fsr1l	equ	0xFE1
 34319                           bsr	equ	0xFE0
 34320                           indf2	equ	0xFDF
 34321                           postinc2	equ	0xFDE
 34322                           postdec2	equ	0xFDD
 34323                           plusw2	equ	0xFDB
 34324                           fsr2h	equ	0xFDA
 34325                           fsr2l	equ	0xFD9
 34326                           status	equ	0xFD8
 34327                           
 34328 ;; *************** function _eval_poly *****************
 34329 ;; Defined at:
 34330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 34331 ;; Parameters:    Size  Location     Type
 34332 ;;  x               4   12[BANK0 ] PTR int 
 34333 ;;  d               2   16[BANK0 ] PTR const 
 34334 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 34335 ;;  n               2   18[BANK0 ] int 
 34336 ;; Auto vars:     Size  Location     Type
 34337 ;;  res             4   24[BANK0 ] int 
 34338 ;; Return value:  Size  Location     Type
 34339 ;;                  4   12[BANK0 ] int 
 34340 ;; Registers used:
 34341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34342 ;; Tracked objects:
 34343 ;;		On entry : 0/0
 34344 ;;		On exit  : 0/0
 34345 ;;		Unchanged: 0/0
 34346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34350 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34351 ;;Total ram usage:       16 bytes
 34352 ;; Hardware stack levels used:    1
 34353 ;; Hardware stack levels required when called:    1
 34354 ;; This function calls:
 34355 ;;		i2___fladd
 34356 ;;		i2___flmul
 34357 ;; This function is called by:
 34358 ;;		_atan
 34359 ;;		_sin
 34360 ;; This function uses a non-reentrant model
 34361 ;;
 34362                           
 34363                           	psect	text118
 34364  016B5E                     __ptext118:
 34365                           	opt stack 0
 34366  016B5E                     _eval_poly:
 34367                           	opt stack 13
 34368                           
 34369                           ;incstack = 0
 34370  016B5E  C072  F074         	movff	eval_poly@n,??_eval_poly
 34371  016B62  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 34372  016B66  0100               	movlb	0	; () banked
 34373  016B68  90D8               	bcf	status,0,c
 34374  016B6A  3774               	rlcf	??_eval_poly& (0+255),f,b
 34375  016B6C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 34376  016B6E  90D8               	bcf	status,0,c
 34377  016B70  3774               	rlcf	??_eval_poly& (0+255),f,b
 34378  016B72  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 34379  016B74  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 34380  016B78  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 34381  016B7C  5174               	movf	??_eval_poly& (0+255),w,b
 34382  016B7E  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 34383  016B80  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 34384  016B82  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 34385  016B84  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 34386  016B88  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 34387  016B8C                     	if	0	;tblptru may be non-zero
 34388  016B8C                     	endif
 34389  016B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34390  016B8C  0E00               	movlw	low (__mediumconst shr (0+16))
 34391  016B8E  6EF8               	movwf	tblptru,c
 34392  016B90                     	endif
 34393  016B90  0009               	tblrd		*+
 34394  016B92  CFF5 F078          	movff	tablat,eval_poly@res
 34395  016B96  0009               	tblrd		*+
 34396  016B98  CFF5 F079          	movff	tablat,eval_poly@res+1
 34397  016B9C  0009               	tblrd		*+
 34398  016B9E  CFF5 F07A          	movff	tablat,eval_poly@res+2
 34399  016BA2  000A               	tblrd		*-
 34400  016BA4  CFF5 F07B          	movff	tablat,eval_poly@res+3
 34401  016BA8  D04C               	goto	i2l1716
 34402  016BAA                     
 34403                           ; BSR set to: 0
 34404                           
 34405                           ; BSR set to: 0
 34406  016BAA  C078  F034         	movff	eval_poly@res,i2___flmul@a
 34407  016BAE  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 34408  016BB2  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 34409  016BB6  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 34410  016BBA  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 34411  016BBE  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 34412  016BC2  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 34413  016BC6  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 34414  016BCA  ECD1  F09E         	call	i2___flmul	;wreg free
 34415  016BCE  C030  F056         	movff	?i2___flmul,i2___fladd@b
 34416  016BD2  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 34417  016BD6  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 34418  016BDA  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 34419  016BDE  0100               	movlb	0	; () banked
 34420  016BE0  0772               	decf	eval_poly@n& (0+255),f,b
 34421  016BE2  A0D8               	btfss	status,0,c
 34422  016BE4  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 34423  016BE6  C072  F074         	movff	eval_poly@n,??_eval_poly
 34424  016BEA  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 34425  016BEE  90D8               	bcf	status,0,c
 34426  016BF0  3774               	rlcf	??_eval_poly& (0+255),f,b
 34427  016BF2  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 34428  016BF4  90D8               	bcf	status,0,c
 34429  016BF6  3774               	rlcf	??_eval_poly& (0+255),f,b
 34430  016BF8  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 34431  016BFA  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 34432  016BFE  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 34433  016C02  5174               	movf	??_eval_poly& (0+255),w,b
 34434  016C04  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 34435  016C06  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 34436  016C08  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 34437  016C0A  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 34438  016C0E  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 34439  016C12                     	if	0	;tblptru may be non-zero
 34440  016C12                     	endif
 34441  016C12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34442  016C12  0E00               	movlw	low (__mediumconst shr (0+16))
 34443  016C14  6EF8               	movwf	tblptru,c
 34444  016C16                     	endif
 34445  016C16  0009               	tblrd		*+
 34446  016C18  CFF5 F05A          	movff	tablat,i2___fladd@a
 34447  016C1C  0009               	tblrd		*+
 34448  016C1E  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 34449  016C22  0009               	tblrd		*+
 34450  016C24  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 34451  016C28  000A               	tblrd		*-
 34452  016C2A  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 34453  016C2E  EC18  F0A2         	call	i2___fladd	;wreg free
 34454  016C32  C056  F078         	movff	?i2___fladd,eval_poly@res
 34455  016C36  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 34456  016C3A  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 34457  016C3E  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 34458  016C42                     i2l1716:
 34459  016C42  0100               	movlb	0	; () banked
 34460  016C44  5172               	movf	eval_poly@n& (0+255),w,b
 34461  016C46  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 34462  016C48  A4D8               	btfss	status,2,c
 34463  016C4A  D7AF               	goto	i2l1717
 34464                           
 34465                           ; BSR set to: 0
 34466  016C4C  C078  F06C         	movff	eval_poly@res,?_eval_poly
 34467  016C50  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 34468  016C54  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 34469  016C58  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 34470                           
 34471                           ; BSR set to: 0
 34472  016C5C  0012               	return		;funcret
 34473  016C5E                     __end_of_eval_poly:
 34474                           	opt stack 0
 34475                           tosu	equ	0xFFF
 34476                           tosh	equ	0xFFE
 34477                           tosl	equ	0xFFD
 34478                           pclatu	equ	0xFFB
 34479                           pclath	equ	0xFFA
 34480                           tblptru	equ	0xFF8
 34481                           tblptrh	equ	0xFF7
 34482                           tblptrl	equ	0xFF6
 34483                           tablat	equ	0xFF5
 34484                           prodh	equ	0xFF4
 34485                           prodl	equ	0xFF3
 34486                           intcon	equ	0xFF2
 34487                           indf0	equ	0xFEF
 34488                           postinc0	equ	0xFEE
 34489                           fsr0h	equ	0xFEA
 34490                           fsr0l	equ	0xFE9
 34491                           wreg	equ	0xFE8
 34492                           indf1	equ	0xFE7
 34493                           postdec1	equ	0xFE5
 34494                           plusw1	equ	0xFE3
 34495                           fsr1h	equ	0xFE2
 34496                           fsr1l	equ	0xFE1
 34497                           bsr	equ	0xFE0
 34498                           indf2	equ	0xFDF
 34499                           postinc2	equ	0xFDE
 34500                           postdec2	equ	0xFDD
 34501                           plusw2	equ	0xFDB
 34502                           fsr2h	equ	0xFDA
 34503                           fsr2l	equ	0xFD9
 34504                           status	equ	0xFD8
 34505                           
 34506 ;; *************** function i2___flmul *****************
 34507 ;; Defined at:
 34508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 34509 ;; Parameters:    Size  Location     Type
 34510 ;;  b               4   47[COMRAM] int 
 34511 ;;  a               4   51[COMRAM] int 
 34512 ;; Auto vars:     Size  Location     Type
 34513 ;;  __flmul         4   66[COMRAM] struct .
 34514 ;;  __flmul         4   61[COMRAM] unsigned long 
 34515 ;;  __flmul         2   70[COMRAM] struct .
 34516 ;;  __flmul         1   65[COMRAM] unsigned char 
 34517 ;;  __flmul         1   60[COMRAM] unsigned char 
 34518 ;;  __flmul         1   59[COMRAM] unsigned char 
 34519 ;; Return value:  Size  Location     Type
 34520 ;;                  4   47[COMRAM] unsigned char 
 34521 ;; Registers used:
 34522 ;;		wreg, status,2, status,0, prodl, prodh
 34523 ;; Tracked objects:
 34524 ;;		On entry : 0/0
 34525 ;;		On exit  : 0/0
 34526 ;;		Unchanged: 0/0
 34527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34528 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34529 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34531 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34532 ;;Total ram usage:       25 bytes
 34533 ;; Hardware stack levels used:    1
 34534 ;; This function calls:
 34535 ;;		Nothing
 34536 ;; This function is called by:
 34537 ;;		_peakToRMS
 34538 ;;		_ADCPostProcessingCallback
 34539 ;;		_asin
 34540 ;;		_atan
 34541 ;;		_eval_poly
 34542 ;;		_sin
 34543 ;;		i2_fround
 34544 ;;		i2_scale
 34545 ;;		i2_printf
 34546 ;; This function uses a non-reentrant model
 34547 ;;
 34548                           
 34549                           	psect	text119
 34550  013DA2                     __ptext119:
 34551                           	opt stack 0
 34552  013DA2                     i2___flmul:
 34553                           	opt stack 15
 34554                           
 34555                           ; BSR set to: 0
 34556                           ;incstack = 0
 34557  013DA2  5033               	movf	i2___flmul@b+3,w,c
 34558  013DA4  0B80               	andlw	128
 34559  013DA6  6E3C               	movwf	i2___flmul@sign,c
 34560  013DA8  5033               	movf	i2___flmul@b+3,w,c
 34561  013DAA  2433               	addwf	i2___flmul@b+3,w,c
 34562  013DAC  6E42               	movwf	i2___flmul@bexp,c
 34563  013DAE  BE32               	btfsc	i2___flmul@b+2,7,c
 34564  013DB0  8042               	bsf	i2___flmul@bexp,0,c
 34565  013DB2  5042               	movf	i2___flmul@bexp,w,c
 34566  013DB4  B4D8               	btfsc	status,2,c
 34567  013DB6  D00D               	goto	i2l2104
 34568  013DB8  2842               	incf	i2___flmul@bexp,w,c
 34569  013DBA  A4D8               	btfss	status,2,c
 34570  013DBC  D008               	goto	i2l2105
 34571  013DBE  0E00               	movlw	0
 34572  013DC0  6E30               	movwf	i2___flmul@b,c
 34573  013DC2  0E00               	movlw	0
 34574  013DC4  6E31               	movwf	i2___flmul@b+1,c
 34575  013DC6  0E00               	movlw	0
 34576  013DC8  6E32               	movwf	i2___flmul@b+2,c
 34577  013DCA  0E00               	movlw	0
 34578  013DCC  6E33               	movwf	i2___flmul@b+3,c
 34579  013DCE                     i2l2105:
 34580  013DCE  8E32               	bsf	i2___flmul@b+2,7,c
 34581  013DD0  D008               	goto	i2l2106
 34582  013DD2                     i2l2104:
 34583  013DD2  0E00               	movlw	0
 34584  013DD4  6E30               	movwf	i2___flmul@b,c
 34585  013DD6  0E00               	movlw	0
 34586  013DD8  6E31               	movwf	i2___flmul@b+1,c
 34587  013DDA  0E00               	movlw	0
 34588  013DDC  6E32               	movwf	i2___flmul@b+2,c
 34589  013DDE  0E00               	movlw	0
 34590  013DE0  6E33               	movwf	i2___flmul@b+3,c
 34591  013DE2                     i2l2106:
 34592  013DE2  5037               	movf	i2___flmul@a+3,w,c
 34593  013DE4  0B80               	andlw	128
 34594  013DE6  1A3C               	xorwf	i2___flmul@sign,f,c
 34595  013DE8  5037               	movf	i2___flmul@a+3,w,c
 34596  013DEA  2437               	addwf	i2___flmul@a+3,w,c
 34597  013DEC  6E3D               	movwf	i2___flmul@aexp,c
 34598  013DEE  BE36               	btfsc	i2___flmul@a+2,7,c
 34599  013DF0  803D               	bsf	i2___flmul@aexp,0,c
 34600  013DF2  503D               	movf	i2___flmul@aexp,w,c
 34601  013DF4  B4D8               	btfsc	status,2,c
 34602  013DF6  D00D               	goto	i2l2108
 34603  013DF8  283D               	incf	i2___flmul@aexp,w,c
 34604  013DFA  A4D8               	btfss	status,2,c
 34605  013DFC  D008               	goto	i2l2109
 34606  013DFE  0E00               	movlw	0
 34607  013E00  6E34               	movwf	i2___flmul@a,c
 34608  013E02  0E00               	movlw	0
 34609  013E04  6E35               	movwf	i2___flmul@a+1,c
 34610  013E06  0E00               	movlw	0
 34611  013E08  6E36               	movwf	i2___flmul@a+2,c
 34612  013E0A  0E00               	movlw	0
 34613  013E0C  6E37               	movwf	i2___flmul@a+3,c
 34614  013E0E                     i2l2109:
 34615  013E0E  8E36               	bsf	i2___flmul@a+2,7,c
 34616  013E10  D008               	goto	i2l2110
 34617  013E12                     i2l2108:
 34618  013E12  0E00               	movlw	0
 34619  013E14  6E34               	movwf	i2___flmul@a,c
 34620  013E16  0E00               	movlw	0
 34621  013E18  6E35               	movwf	i2___flmul@a+1,c
 34622  013E1A  0E00               	movlw	0
 34623  013E1C  6E36               	movwf	i2___flmul@a+2,c
 34624  013E1E  0E00               	movlw	0
 34625  013E20  6E37               	movwf	i2___flmul@a+3,c
 34626  013E22                     i2l2110:
 34627  013E22  503D               	movf	i2___flmul@aexp,w,c
 34628  013E24  B4D8               	btfsc	status,2,c
 34629  013E26  D003               	goto	i2u1223_40
 34630  013E28  5042               	movf	i2___flmul@bexp,w,c
 34631  013E2A  A4D8               	btfss	status,2,c
 34632  013E2C  D009               	goto	i2l2111
 34633  013E2E                     i2u1223_40:
 34634  013E2E  0E00               	movlw	0
 34635  013E30  6E30               	movwf	?i2___flmul,c
 34636  013E32  0E00               	movlw	0
 34637  013E34  6E31               	movwf	?i2___flmul+1,c
 34638  013E36  0E00               	movlw	0
 34639  013E38  6E32               	movwf	?i2___flmul+2,c
 34640  013E3A  0E00               	movlw	0
 34641  013E3C  6E33               	movwf	?i2___flmul+3,c
 34642  013E3E  0012               	return	
 34643  013E40                     i2l2111:
 34644  013E40  5036               	movf	i2___flmul@a+2,w,c
 34645  013E42  0230               	mulwf	i2___flmul@b,c
 34646  013E44  CFF3 F047          	movff	prodl,i2___flmul@temp
 34647  013E48  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34648  013E4C  5047               	movf	i2___flmul@temp,w,c
 34649  013E4E  6E3E               	movwf	i2___flmul@grs,c
 34650  013E50  6A3F               	clrf	i2___flmul@grs+1,c
 34651  013E52  6A40               	clrf	i2___flmul@grs+2,c
 34652  013E54  6A41               	clrf	i2___flmul@grs+3,c
 34653  013E56  5048               	movf	i2___flmul@temp+1,w,c
 34654  013E58  6E43               	movwf	i2___flmul@prod,c
 34655  013E5A  6A44               	clrf	i2___flmul@prod+1,c
 34656  013E5C  6A45               	clrf	i2___flmul@prod+2,c
 34657  013E5E  6A46               	clrf	i2___flmul@prod+3,c
 34658  013E60  5035               	movf	i2___flmul@a+1,w,c
 34659  013E62  0231               	mulwf	i2___flmul@b+1,c
 34660  013E64  CFF3 F047          	movff	prodl,i2___flmul@temp
 34661  013E68  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34662  013E6C  5047               	movf	i2___flmul@temp,w,c
 34663  013E6E  263E               	addwf	i2___flmul@grs,f,c
 34664  013E70  0E00               	movlw	0
 34665  013E72  223F               	addwfc	i2___flmul@grs+1,f,c
 34666  013E74  2240               	addwfc	i2___flmul@grs+2,f,c
 34667  013E76  2241               	addwfc	i2___flmul@grs+3,f,c
 34668  013E78  5048               	movf	i2___flmul@temp+1,w,c
 34669  013E7A  2643               	addwf	i2___flmul@prod,f,c
 34670  013E7C  0E00               	movlw	0
 34671  013E7E  2244               	addwfc	i2___flmul@prod+1,f,c
 34672  013E80  2245               	addwfc	i2___flmul@prod+2,f,c
 34673  013E82  2246               	addwfc	i2___flmul@prod+3,f,c
 34674  013E84  5034               	movf	i2___flmul@a,w,c
 34675  013E86  0232               	mulwf	i2___flmul@b+2,c
 34676  013E88  CFF3 F047          	movff	prodl,i2___flmul@temp
 34677  013E8C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34678  013E90  5047               	movf	i2___flmul@temp,w,c
 34679  013E92  263E               	addwf	i2___flmul@grs,f,c
 34680  013E94  0E00               	movlw	0
 34681  013E96  223F               	addwfc	i2___flmul@grs+1,f,c
 34682  013E98  2240               	addwfc	i2___flmul@grs+2,f,c
 34683  013E9A  2241               	addwfc	i2___flmul@grs+3,f,c
 34684  013E9C  5048               	movf	i2___flmul@temp+1,w,c
 34685  013E9E  2643               	addwf	i2___flmul@prod,f,c
 34686  013EA0  0E00               	movlw	0
 34687  013EA2  2244               	addwfc	i2___flmul@prod+1,f,c
 34688  013EA4  2245               	addwfc	i2___flmul@prod+2,f,c
 34689  013EA6  2246               	addwfc	i2___flmul@prod+3,f,c
 34690  013EA8  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 34691  013EAC  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 34692  013EB0  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 34693  013EB4  6A3E               	clrf	i2___flmul@grs,c
 34694  013EB6  5034               	movf	i2___flmul@a,w,c
 34695  013EB8  0231               	mulwf	i2___flmul@b+1,c
 34696  013EBA  CFF3 F047          	movff	prodl,i2___flmul@temp
 34697  013EBE  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34698  013EC2  5047               	movf	i2___flmul@temp,w,c
 34699  013EC4  263E               	addwf	i2___flmul@grs,f,c
 34700  013EC6  5048               	movf	i2___flmul@temp+1,w,c
 34701  013EC8  223F               	addwfc	i2___flmul@grs+1,f,c
 34702  013ECA  0E00               	movlw	0
 34703  013ECC  2240               	addwfc	i2___flmul@grs+2,f,c
 34704  013ECE  0E00               	movlw	0
 34705  013ED0  2241               	addwfc	i2___flmul@grs+3,f,c
 34706  013ED2  5035               	movf	i2___flmul@a+1,w,c
 34707  013ED4  0230               	mulwf	i2___flmul@b,c
 34708  013ED6  CFF3 F047          	movff	prodl,i2___flmul@temp
 34709  013EDA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34710  013EDE  5047               	movf	i2___flmul@temp,w,c
 34711  013EE0  263E               	addwf	i2___flmul@grs,f,c
 34712  013EE2  5048               	movf	i2___flmul@temp+1,w,c
 34713  013EE4  223F               	addwfc	i2___flmul@grs+1,f,c
 34714  013EE6  0E00               	movlw	0
 34715  013EE8  2240               	addwfc	i2___flmul@grs+2,f,c
 34716  013EEA  0E00               	movlw	0
 34717  013EEC  2241               	addwfc	i2___flmul@grs+3,f,c
 34718  013EEE  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 34719  013EF2  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 34720  013EF6  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 34721  013EFA  6A3E               	clrf	i2___flmul@grs,c
 34722  013EFC  5034               	movf	i2___flmul@a,w,c
 34723  013EFE  0230               	mulwf	i2___flmul@b,c
 34724  013F00  CFF3 F047          	movff	prodl,i2___flmul@temp
 34725  013F04  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34726  013F08  5047               	movf	i2___flmul@temp,w,c
 34727  013F0A  263E               	addwf	i2___flmul@grs,f,c
 34728  013F0C  5048               	movf	i2___flmul@temp+1,w,c
 34729  013F0E  223F               	addwfc	i2___flmul@grs+1,f,c
 34730  013F10  0E00               	movlw	0
 34731  013F12  2240               	addwfc	i2___flmul@grs+2,f,c
 34732  013F14  0E00               	movlw	0
 34733  013F16  2241               	addwfc	i2___flmul@grs+3,f,c
 34734  013F18  5036               	movf	i2___flmul@a+2,w,c
 34735  013F1A  0231               	mulwf	i2___flmul@b+1,c
 34736  013F1C  CFF3 F047          	movff	prodl,i2___flmul@temp
 34737  013F20  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34738  013F24  5047               	movf	i2___flmul@temp,w,c
 34739  013F26  2643               	addwf	i2___flmul@prod,f,c
 34740  013F28  5048               	movf	i2___flmul@temp+1,w,c
 34741  013F2A  2244               	addwfc	i2___flmul@prod+1,f,c
 34742  013F2C  0E00               	movlw	0
 34743  013F2E  2245               	addwfc	i2___flmul@prod+2,f,c
 34744  013F30  0E00               	movlw	0
 34745  013F32  2246               	addwfc	i2___flmul@prod+3,f,c
 34746  013F34  5035               	movf	i2___flmul@a+1,w,c
 34747  013F36  0232               	mulwf	i2___flmul@b+2,c
 34748  013F38  CFF3 F047          	movff	prodl,i2___flmul@temp
 34749  013F3C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34750  013F40  5047               	movf	i2___flmul@temp,w,c
 34751  013F42  2643               	addwf	i2___flmul@prod,f,c
 34752  013F44  5048               	movf	i2___flmul@temp+1,w,c
 34753  013F46  2244               	addwfc	i2___flmul@prod+1,f,c
 34754  013F48  0E00               	movlw	0
 34755  013F4A  2245               	addwfc	i2___flmul@prod+2,f,c
 34756  013F4C  0E00               	movlw	0
 34757  013F4E  2246               	addwfc	i2___flmul@prod+3,f,c
 34758  013F50  5036               	movf	i2___flmul@a+2,w,c
 34759  013F52  0232               	mulwf	i2___flmul@b+2,c
 34760  013F54  CFF3 F047          	movff	prodl,i2___flmul@temp
 34761  013F58  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 34762  013F5C  5047               	movf	i2___flmul@temp,w,c
 34763  013F5E  6E38               	movwf	??i2___flmul& (0+255),c
 34764  013F60  5048               	movf	i2___flmul@temp+1,w,c
 34765  013F62  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 34766  013F64  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 34767  013F66  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 34768  013F68  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 34769  013F6C  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 34770  013F70  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 34771  013F74  6A38               	clrf	??i2___flmul,c
 34772  013F76  5038               	movf	??i2___flmul,w,c
 34773  013F78  2643               	addwf	i2___flmul@prod,f,c
 34774  013F7A  5039               	movf	??i2___flmul+1,w,c
 34775  013F7C  2244               	addwfc	i2___flmul@prod+1,f,c
 34776  013F7E  503A               	movf	??i2___flmul+2,w,c
 34777  013F80  2245               	addwfc	i2___flmul@prod+2,f,c
 34778  013F82  503B               	movf	??i2___flmul+3,w,c
 34779  013F84  2246               	addwfc	i2___flmul@prod+3,f,c
 34780  013F86  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 34781  013F8A  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 34782  013F8E  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 34783  013F92  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 34784  013F96  0E19               	movlw	25
 34785  013F98  D005               	goto	i2u1224_40
 34786  013F9A                     i2u1224_45:
 34787  013F9A  90D8               	bcf	status,0,c
 34788  013F9C  323B               	rrcf	??i2___flmul+3,f,c
 34789  013F9E  323A               	rrcf	??i2___flmul+2,f,c
 34790  013FA0  3239               	rrcf	??i2___flmul+1,f,c
 34791  013FA2  3238               	rrcf	??i2___flmul,f,c
 34792  013FA4                     i2u1224_40:
 34793  013FA4  2EE8               	decfsz	wreg,f,c
 34794  013FA6  D7F9               	goto	i2u1224_45
 34795  013FA8  5038               	movf	??i2___flmul,w,c
 34796  013FAA  2643               	addwf	i2___flmul@prod,f,c
 34797  013FAC  5039               	movf	??i2___flmul+1,w,c
 34798  013FAE  2244               	addwfc	i2___flmul@prod+1,f,c
 34799  013FB0  503A               	movf	??i2___flmul+2,w,c
 34800  013FB2  2245               	addwfc	i2___flmul@prod+2,f,c
 34801  013FB4  503B               	movf	??i2___flmul+3,w,c
 34802  013FB6  2246               	addwfc	i2___flmul@prod+3,f,c
 34803  013FB8  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 34804  013FBC  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 34805  013FC0  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 34806  013FC4  6A3E               	clrf	i2___flmul@grs,c
 34807  013FC6  503D               	movf	i2___flmul@aexp,w,c
 34808  013FC8  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 34809  013FCC  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 34810  013FCE  2638               	addwf	??i2___flmul,f,c
 34811  013FD0  0E00               	movlw	0
 34812  013FD2  2239               	addwfc	??i2___flmul+1,f,c
 34813  013FD4  0E82               	movlw	130
 34814  013FD6  2438               	addwf	??i2___flmul,w,c
 34815  013FD8  6E47               	movwf	i2___flmul@temp,c
 34816  013FDA  0EFF               	movlw	255
 34817  013FDC  2039               	addwfc	??i2___flmul+1,w,c
 34818  013FDE  6E48               	movwf	i2___flmul@temp+1,c
 34819  013FE0  D00F               	goto	i2l2115
 34820  013FE2  90D8               	bcf	status,0,c
 34821  013FE4  3643               	rlcf	i2___flmul@prod,f,c
 34822  013FE6  3644               	rlcf	i2___flmul@prod+1,f,c
 34823  013FE8  3645               	rlcf	i2___flmul@prod+2,f,c
 34824  013FEA  3646               	rlcf	i2___flmul@prod+3,f,c
 34825  013FEC  BE41               	btfsc	i2___flmul@grs+3,7,c
 34826  013FEE  8043               	bsf	i2___flmul@prod,0,c
 34827  013FF0  90D8               	bcf	status,0,c
 34828  013FF2  363E               	rlcf	i2___flmul@grs,f,c
 34829  013FF4  363F               	rlcf	i2___flmul@grs+1,f,c
 34830  013FF6  3640               	rlcf	i2___flmul@grs+2,f,c
 34831  013FF8  3641               	rlcf	i2___flmul@grs+3,f,c
 34832  013FFA  0647               	decf	i2___flmul@temp,f,c
 34833  013FFC  A0D8               	btfss	status,0,c
 34834  013FFE  0648               	decf	i2___flmul@temp+1,f,c
 34835  014000                     i2l2115:
 34836  014000  AE45               	btfss	i2___flmul@prod+2,7,c
 34837  014002  D7EF               	goto	i2l2116
 34838  014004  0E00               	movlw	0
 34839  014006  6E3D               	movwf	i2___flmul@aexp,c
 34840  014008  AE41               	btfss	i2___flmul@grs+3,7,c
 34841  01400A  D016               	goto	i2l2122
 34842  01400C  0EFF               	movlw	255
 34843  01400E  143E               	andwf	i2___flmul@grs,w,c
 34844  014010  6E38               	movwf	??i2___flmul& (0+255),c
 34845  014012  0EFF               	movlw	255
 34846  014014  143F               	andwf	i2___flmul@grs+1,w,c
 34847  014016  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 34848  014018  0EFF               	movlw	255
 34849  01401A  1440               	andwf	i2___flmul@grs+2,w,c
 34850  01401C  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 34851  01401E  0E7F               	movlw	127
 34852  014020  1441               	andwf	i2___flmul@grs+3,w,c
 34853  014022  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 34854  014024  5038               	movf	??i2___flmul,w,c
 34855  014026  1039               	iorwf	??i2___flmul+1,w,c
 34856  014028  103A               	iorwf	??i2___flmul+2,w,c
 34857  01402A  103B               	iorwf	??i2___flmul+3,w,c
 34858  01402C  A4D8               	btfss	status,2,c
 34859  01402E  D002               	goto	i2u1229_40
 34860  014030  A043               	btfss	i2___flmul@prod,0,c
 34861  014032  D002               	goto	i2l2122
 34862  014034                     i2u1229_40:
 34863  014034  0E01               	movlw	1
 34864  014036  6E3D               	movwf	i2___flmul@aexp,c
 34865  014038                     i2l2122:
 34866  014038  503D               	movf	i2___flmul@aexp,w,c
 34867  01403A  B4D8               	btfsc	status,2,c
 34868  01403C  D01F               	goto	i2l2124
 34869  01403E  0E01               	movlw	1
 34870  014040  2643               	addwf	i2___flmul@prod,f,c
 34871  014042  0E00               	movlw	0
 34872  014044  2244               	addwfc	i2___flmul@prod+1,f,c
 34873  014046  2245               	addwfc	i2___flmul@prod+2,f,c
 34874  014048  2246               	addwfc	i2___flmul@prod+3,f,c
 34875  01404A  A046               	btfss	i2___flmul@prod+3,0,c
 34876  01404C  D017               	goto	i2l2124
 34877  01404E  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 34878  014052  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 34879  014056  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 34880  01405A  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 34881  01405E  343B               	rlcf	??i2___flmul+3,w,c
 34882  014060  323B               	rrcf	??i2___flmul+3,f,c
 34883  014062  323A               	rrcf	??i2___flmul+2,f,c
 34884  014064  3239               	rrcf	??i2___flmul+1,f,c
 34885  014066  3238               	rrcf	??i2___flmul,f,c
 34886  014068  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 34887  01406C  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 34888  014070  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 34889  014074  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 34890  014078  4A47               	infsnz	i2___flmul@temp,f,c
 34891  01407A  2A48               	incf	i2___flmul@temp+1,f,c
 34892  01407C                     i2l2124:
 34893  01407C  BE48               	btfsc	i2___flmul@temp+1,7,c
 34894  01407E  D00D               	goto	i2l2125
 34895  014080  5048               	movf	i2___flmul@temp+1,w,c
 34896  014082  E103               	bnz	i2u1232_40
 34897  014084  2847               	incf	i2___flmul@temp,w,c
 34898  014086  A0D8               	btfss	status,0,c
 34899  014088  D008               	goto	i2l2125
 34900  01408A                     i2u1232_40:
 34901  01408A  0E00               	movlw	0
 34902  01408C  6E43               	movwf	i2___flmul@prod,c
 34903  01408E  0E00               	movlw	0
 34904  014090  6E44               	movwf	i2___flmul@prod+1,c
 34905  014092  0E80               	movlw	128
 34906  014094  6E45               	movwf	i2___flmul@prod+2,c
 34907  014096  0E7F               	movlw	127
 34908  014098  D020               	goto	L20
 34909  01409A                     i2l2125:
 34910  01409A  BE48               	btfsc	i2___flmul@temp+1,7,c
 34911  01409C  D005               	goto	i2u1233_40
 34912  01409E  5048               	movf	i2___flmul@temp+1,w,c
 34913  0140A0  E10E               	bnz	i2l2127
 34914  0140A2  0447               	decf	i2___flmul@temp,w,c
 34915  0140A4  B0D8               	btfsc	status,0,c
 34916  0140A6  D00B               	goto	i2l2127
 34917  0140A8                     i2u1233_40:
 34918  0140A8  0E00               	movlw	0
 34919  0140AA  6E43               	movwf	i2___flmul@prod,c
 34920  0140AC  0E00               	movlw	0
 34921  0140AE  6E44               	movwf	i2___flmul@prod+1,c
 34922  0140B0  0E00               	movlw	0
 34923  0140B2  6E45               	movwf	i2___flmul@prod+2,c
 34924  0140B4  0E00               	movlw	0
 34925  0140B6  6E46               	movwf	i2___flmul@prod+3,c
 34926  0140B8  0E00               	movlw	0
 34927  0140BA  6E3C               	movwf	i2___flmul@sign,c
 34928  0140BC  D00F               	goto	i2l2128
 34929  0140BE                     i2l2127:
 34930  0140BE  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 34931  0140C2  0EFF               	movlw	255
 34932  0140C4  1643               	andwf	i2___flmul@prod,f,c
 34933  0140C6  0EFF               	movlw	255
 34934  0140C8  1644               	andwf	i2___flmul@prod+1,f,c
 34935  0140CA  0E7F               	movlw	127
 34936  0140CC  1645               	andwf	i2___flmul@prod+2,f,c
 34937  0140CE  0E00               	movlw	0
 34938  0140D0  1646               	andwf	i2___flmul@prod+3,f,c
 34939  0140D2  B042               	btfsc	i2___flmul@bexp,0,c
 34940  0140D4  8E45               	bsf	i2___flmul@prod+2,7,c
 34941  0140D6  90D8               	bcf	status,0,c
 34942  0140D8  3042               	rrcf	i2___flmul@bexp,w,c
 34943  0140DA                     L20:
 34944  0140DA  6E46               	movwf	i2___flmul@prod+3,c
 34945  0140DC                     i2l2128:
 34946  0140DC  503C               	movf	i2___flmul@sign,w,c
 34947  0140DE  1246               	iorwf	i2___flmul@prod+3,f,c
 34948  0140E0  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 34949  0140E4  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 34950  0140E8  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 34951  0140EC  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 34952  0140F0  0012               	return	
 34953  0140F2                     __end_ofi2___flmul:
 34954                           	opt stack 0
 34955                           tosu	equ	0xFFF
 34956                           tosh	equ	0xFFE
 34957                           tosl	equ	0xFFD
 34958                           pclatu	equ	0xFFB
 34959                           pclath	equ	0xFFA
 34960                           tblptru	equ	0xFF8
 34961                           tblptrh	equ	0xFF7
 34962                           tblptrl	equ	0xFF6
 34963                           tablat	equ	0xFF5
 34964                           prodh	equ	0xFF4
 34965                           prodl	equ	0xFF3
 34966                           intcon	equ	0xFF2
 34967                           indf0	equ	0xFEF
 34968                           postinc0	equ	0xFEE
 34969                           fsr0h	equ	0xFEA
 34970                           fsr0l	equ	0xFE9
 34971                           wreg	equ	0xFE8
 34972                           indf1	equ	0xFE7
 34973                           postdec1	equ	0xFE5
 34974                           plusw1	equ	0xFE3
 34975                           fsr1h	equ	0xFE2
 34976                           fsr1l	equ	0xFE1
 34977                           bsr	equ	0xFE0
 34978                           indf2	equ	0xFDF
 34979                           postinc2	equ	0xFDE
 34980                           postdec2	equ	0xFDD
 34981                           plusw2	equ	0xFDB
 34982                           fsr2h	equ	0xFDA
 34983                           fsr2l	equ	0xFD9
 34984                           status	equ	0xFD8
 34985                           
 34986 ;; *************** function i2___fladd *****************
 34987 ;; Defined at:
 34988 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 34989 ;; Parameters:    Size  Location     Type
 34990 ;;  b               4   85[COMRAM] unsigned char 
 34991 ;;  a               4   89[COMRAM] unsigned char 
 34992 ;; Auto vars:     Size  Location     Type
 34993 ;;  __fladd         1   11[BANK0 ] unsigned char 
 34994 ;;  __fladd         1   10[BANK0 ] unsigned char 
 34995 ;;  __fladd         1    9[BANK0 ] unsigned char 
 34996 ;;  __fladd         1    8[BANK0 ] unsigned char 
 34997 ;; Return value:  Size  Location     Type
 34998 ;;                  4   85[COMRAM] unsigned char 
 34999 ;; Registers used:
 35000 ;;		wreg, status,2, status,0
 35001 ;; Tracked objects:
 35002 ;;		On entry : 0/0
 35003 ;;		On exit  : 0/0
 35004 ;;		Unchanged: 0/0
 35005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35006 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35007 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35008 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35009 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35010 ;;Total ram usage:       20 bytes
 35011 ;; Hardware stack levels used:    1
 35012 ;; This function calls:
 35013 ;;		Nothing
 35014 ;; This function is called by:
 35015 ;;		_peakToRMS
 35016 ;;		_ADCPostProcessingCallback
 35017 ;;		_acos
 35018 ;;		_asin
 35019 ;;		_atan
 35020 ;;		_eval_poly
 35021 ;;		_sin
 35022 ;;		_floor
 35023 ;;		i2_printf
 35024 ;;		i2___flsub
 35025 ;; This function uses a non-reentrant model
 35026 ;;
 35027                           
 35028                           	psect	text120
 35029  014430                     __ptext120:
 35030                           	opt stack 0
 35031  014430                     i2___fladd:
 35032                           	opt stack 15
 35033                           
 35034                           ;incstack = 0
 35035  014430  5059               	movf	i2___fladd@b+3,w,c
 35036  014432  0B80               	andlw	128
 35037  014434  0100               	movlb	0	; () banked
 35038  014436  6F68               	movwf	i2___fladd@signs& (0+255),b
 35039  014438  5059               	movf	i2___fladd@b+3,w,c
 35040  01443A  2459               	addwf	i2___fladd@b+3,w,c
 35041  01443C  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 35042                           
 35043                           ; BSR set to: 0
 35044  01443E  BE58               	btfsc	i2___fladd@b+2,7,c
 35045                           
 35046                           ; BSR set to: 0
 35047  014440  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 35048                           
 35049                           ; BSR set to: 0
 35050                           
 35051                           ; BSR set to: 0
 35052  014442  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35053  014444  B4D8               	btfsc	status,2,c
 35054  014446  D00D               	goto	i2l2013
 35055                           
 35056                           ; BSR set to: 0
 35057  014448  296A               	incf	i2___fladd@bexp& (0+255),w,b
 35058  01444A  A4D8               	btfss	status,2,c
 35059  01444C  D008               	goto	i2l2014
 35060                           
 35061                           ; BSR set to: 0
 35062  01444E  0E00               	movlw	0
 35063  014450  6E56               	movwf	i2___fladd@b,c
 35064  014452  0E00               	movlw	0
 35065  014454  6E57               	movwf	i2___fladd@b+1,c
 35066  014456  0E00               	movlw	0
 35067  014458  6E58               	movwf	i2___fladd@b+2,c
 35068  01445A  0E00               	movlw	0
 35069  01445C  6E59               	movwf	i2___fladd@b+3,c
 35070  01445E                     i2l2014:
 35071                           
 35072                           ; BSR set to: 0
 35073                           
 35074                           ; BSR set to: 0
 35075  01445E  8E58               	bsf	i2___fladd@b+2,7,c
 35076  014460  D006               	goto	L21
 35077  014462                     i2l2013:
 35078                           
 35079                           ; BSR set to: 0
 35080                           
 35081                           ; BSR set to: 0
 35082  014462  0E00               	movlw	0
 35083  014464  6E56               	movwf	i2___fladd@b,c
 35084  014466  0E00               	movlw	0
 35085  014468  6E57               	movwf	i2___fladd@b+1,c
 35086  01446A  0E00               	movlw	0
 35087  01446C  6E58               	movwf	i2___fladd@b+2,c
 35088  01446E                     L21:
 35089  01446E  0E00               	movlw	0
 35090  014470  6E59               	movwf	i2___fladd@b+3,c
 35091                           
 35092                           ; BSR set to: 0
 35093                           
 35094                           ; BSR set to: 0
 35095  014472  505D               	movf	i2___fladd@a+3,w,c
 35096  014474  0B80               	andlw	128
 35097  014476  6F69               	movwf	i2___fladd@aexp& (0+255),b
 35098                           
 35099                           ; BSR set to: 0
 35100  014478  5168               	movf	i2___fladd@signs& (0+255),w,b
 35101  01447A  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 35102  01447C  A4D8               	btfss	status,2,c
 35103                           
 35104                           ; BSR set to: 0
 35105  01447E  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 35106                           
 35107                           ; BSR set to: 0
 35108                           
 35109                           ; BSR set to: 0
 35110  014480  505D               	movf	i2___fladd@a+3,w,c
 35111  014482  245D               	addwf	i2___fladd@a+3,w,c
 35112  014484  6F69               	movwf	i2___fladd@aexp& (0+255),b
 35113                           
 35114                           ; BSR set to: 0
 35115  014486  BE5C               	btfsc	i2___fladd@a+2,7,c
 35116                           
 35117                           ; BSR set to: 0
 35118  014488  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 35119                           
 35120                           ; BSR set to: 0
 35121                           
 35122                           ; BSR set to: 0
 35123  01448A  5169               	movf	i2___fladd@aexp& (0+255),w,b
 35124  01448C  B4D8               	btfsc	status,2,c
 35125  01448E  D00D               	goto	i2l2018
 35126                           
 35127                           ; BSR set to: 0
 35128  014490  2969               	incf	i2___fladd@aexp& (0+255),w,b
 35129  014492  A4D8               	btfss	status,2,c
 35130  014494  D008               	goto	i2l2019
 35131                           
 35132                           ; BSR set to: 0
 35133  014496  0E00               	movlw	0
 35134  014498  6E5A               	movwf	i2___fladd@a,c
 35135  01449A  0E00               	movlw	0
 35136  01449C  6E5B               	movwf	i2___fladd@a+1,c
 35137  01449E  0E00               	movlw	0
 35138  0144A0  6E5C               	movwf	i2___fladd@a+2,c
 35139  0144A2  0E00               	movlw	0
 35140  0144A4  6E5D               	movwf	i2___fladd@a+3,c
 35141  0144A6                     i2l2019:
 35142                           
 35143                           ; BSR set to: 0
 35144                           
 35145                           ; BSR set to: 0
 35146  0144A6  8E5C               	bsf	i2___fladd@a+2,7,c
 35147  0144A8  D006               	goto	L22
 35148  0144AA                     i2l2018:
 35149                           
 35150                           ; BSR set to: 0
 35151                           
 35152                           ; BSR set to: 0
 35153  0144AA  0E00               	movlw	0
 35154  0144AC  6E5A               	movwf	i2___fladd@a,c
 35155  0144AE  0E00               	movlw	0
 35156  0144B0  6E5B               	movwf	i2___fladd@a+1,c
 35157  0144B2  0E00               	movlw	0
 35158  0144B4  6E5C               	movwf	i2___fladd@a+2,c
 35159  0144B6                     L22:
 35160  0144B6  0E00               	movlw	0
 35161  0144B8  6E5D               	movwf	i2___fladd@a+3,c
 35162                           
 35163                           ; BSR set to: 0
 35164                           
 35165                           ; BSR set to: 0
 35166  0144BA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35167  0144BC  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 35168  0144BE  B0D8               	btfsc	status,0,c
 35169  0144C0  D022               	goto	i2l2021
 35170                           
 35171                           ; BSR set to: 0
 35172  0144C2  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 35173  0144C4  D002               	goto	i2l2022
 35174                           
 35175                           ; BSR set to: 0
 35176  0144C6  0E80               	movlw	128
 35177  0144C8  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 35178  0144CA                     i2l2022:
 35179                           
 35180                           ; BSR set to: 0
 35181                           
 35182                           ; BSR set to: 0
 35183  0144CA  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 35184                           
 35185                           ; BSR set to: 0
 35186  0144CE  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 35187                           
 35188                           ; BSR set to: 0
 35189  0144D2  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 35190                           
 35191                           ; BSR set to: 0
 35192  0144D6  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 35193                           
 35194                           ; BSR set to: 0
 35195  0144DA  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 35196                           
 35197                           ; BSR set to: 0
 35198  0144DE  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 35199                           
 35200                           ; BSR set to: 0
 35201  0144E2  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 35202                           
 35203                           ; BSR set to: 0
 35204  0144E6  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 35205                           
 35206                           ; BSR set to: 0
 35207  0144EA  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 35208                           
 35209                           ; BSR set to: 0
 35210  0144EE  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 35211                           
 35212                           ; BSR set to: 0
 35213  0144F2  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 35214                           
 35215                           ; BSR set to: 0
 35216  0144F6  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 35217                           
 35218                           ; BSR set to: 0
 35219  0144FA  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 35220                           
 35221                           ; BSR set to: 0
 35222  0144FE  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 35223                           
 35224                           ; BSR set to: 0
 35225  014502  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 35226  014506                     i2l2021:
 35227                           
 35228                           ; BSR set to: 0
 35229                           
 35230                           ; BSR set to: 0
 35231  014506  0E00               	movlw	0
 35232  014508  6F6B               	movwf	i2___fladd@grs& (0+255),b
 35233                           
 35234                           ; BSR set to: 0
 35235  01450A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35236  01450C  6F60               	movwf	??i2___fladd& (0+255),b
 35237  01450E  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 35238  014510  1F60               	comf	??i2___fladd& (0+255),f,b
 35239  014512  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 35240  014514  4B60               	infsnz	??i2___fladd& (0+255),f,b
 35241  014516  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 35242  014518  5169               	movf	i2___fladd@aexp& (0+255),w,b
 35243  01451A  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 35244  01451C  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 35245  01451E  5160               	movf	??i2___fladd& (0+255),w,b
 35246  014520  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 35247  014522  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 35248  014524  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 35249  014526  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 35250  014528  D02C               	goto	i2l2025
 35251  01452A  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 35252  01452C  E104               	bnz	i2u1186_40
 35253  01452E  0E1A               	movlw	26
 35254  014530  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 35255  014532  A0D8               	btfss	status,0,c
 35256  014534  D026               	goto	i2l2025
 35257  014536                     i2u1186_40:
 35258                           
 35259                           ; BSR set to: 0
 35260  014536  5056               	movf	i2___fladd@b,w,c
 35261  014538  1057               	iorwf	i2___fladd@b+1,w,c
 35262  01453A  1058               	iorwf	i2___fladd@b+2,w,c
 35263  01453C  1059               	iorwf	i2___fladd@b+3,w,c
 35264  01453E  B4D8               	btfsc	status,2,c
 35265  014540  D002               	goto	i2u1187_40
 35266  014542  0E01               	movlw	1
 35267  014544  D001               	goto	i2u1188_40
 35268  014546                     i2u1187_40:
 35269  014546  0E00               	movlw	0
 35270  014548                     i2u1188_40:
 35271  014548  6F6B               	movwf	i2___fladd@grs& (0+255),b
 35272                           
 35273                           ; BSR set to: 0
 35274  01454A  0E00               	movlw	0
 35275  01454C  6E56               	movwf	i2___fladd@b,c
 35276  01454E  0E00               	movlw	0
 35277  014550  6E57               	movwf	i2___fladd@b+1,c
 35278  014552  0E00               	movlw	0
 35279  014554  6E58               	movwf	i2___fladd@b+2,c
 35280  014556  0E00               	movlw	0
 35281  014558  6E59               	movwf	i2___fladd@b+3,c
 35282                           
 35283                           ; BSR set to: 0
 35284  01455A  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 35285  01455E  D015               	goto	i2u1191_40
 35286  014560                     i2l2026:
 35287                           
 35288                           ; BSR set to: 0
 35289  014560  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 35290  014562  D005               	goto	i2l2027
 35291                           
 35292                           ; BSR set to: 0
 35293  014564  90D8               	bcf	status,0,c
 35294  014566  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 35295  014568  0901               	iorlw	1
 35296  01456A  6F6B               	movwf	i2___fladd@grs& (0+255),b
 35297  01456C  D002               	goto	i2l2028
 35298  01456E                     i2l2027:
 35299                           
 35300                           ; BSR set to: 0
 35301                           
 35302                           ; BSR set to: 0
 35303  01456E  90D8               	bcf	status,0,c
 35304  014570  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 35305  014572                     i2l2028:
 35306                           
 35307                           ; BSR set to: 0
 35308                           
 35309                           ; BSR set to: 0
 35310  014572  B056               	btfsc	i2___fladd@b,0,c
 35311                           
 35312                           ; BSR set to: 0
 35313  014574  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 35314                           
 35315                           ; BSR set to: 0
 35316                           
 35317                           ; BSR set to: 0
 35318  014576  3459               	rlcf	i2___fladd@b+3,w,c
 35319  014578  3259               	rrcf	i2___fladd@b+3,f,c
 35320  01457A  3258               	rrcf	i2___fladd@b+2,f,c
 35321  01457C  3257               	rrcf	i2___fladd@b+1,f,c
 35322  01457E  3256               	rrcf	i2___fladd@b,f,c
 35323                           
 35324                           ; BSR set to: 0
 35325  014580  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 35326  014582                     i2l2025:
 35327                           
 35328                           ; BSR set to: 0
 35329  014582  5169               	movf	i2___fladd@aexp& (0+255),w,b
 35330  014584  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 35331  014586  A0D8               	btfss	status,0,c
 35332  014588  D7EB               	goto	i2l2026
 35333  01458A                     i2u1191_40:
 35334                           
 35335                           ; BSR set to: 0
 35336                           
 35337                           ; BSR set to: 0
 35338  01458A  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 35339  01458C  D029               	goto	i2l2031
 35340                           
 35341                           ; BSR set to: 0
 35342  01458E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35343  014590  A4D8               	btfss	status,2,c
 35344  014592  D009               	goto	i2l2032
 35345                           
 35346                           ; BSR set to: 0
 35347  014594  0E00               	movlw	0
 35348  014596  6E56               	movwf	?i2___fladd,c
 35349  014598  0E00               	movlw	0
 35350  01459A  6E57               	movwf	?i2___fladd+1,c
 35351  01459C  0E00               	movlw	0
 35352  01459E  6E58               	movwf	?i2___fladd+2,c
 35353  0145A0  0E00               	movlw	0
 35354  0145A2  6E59               	movwf	?i2___fladd+3,c
 35355                           
 35356                           ; BSR set to: 0
 35357  0145A4  0012               	return	
 35358  0145A6                     i2l2032:
 35359                           
 35360                           ; BSR set to: 0
 35361                           
 35362                           ; BSR set to: 0
 35363  0145A6  505A               	movf	i2___fladd@a,w,c
 35364  0145A8  2656               	addwf	i2___fladd@b,f,c
 35365  0145AA  505B               	movf	i2___fladd@a+1,w,c
 35366  0145AC  2257               	addwfc	i2___fladd@b+1,f,c
 35367  0145AE  505C               	movf	i2___fladd@a+2,w,c
 35368  0145B0  2258               	addwfc	i2___fladd@b+2,f,c
 35369  0145B2  505D               	movf	i2___fladd@a+3,w,c
 35370  0145B4  2259               	addwfc	i2___fladd@b+3,f,c
 35371                           
 35372                           ; BSR set to: 0
 35373  0145B6  A059               	btfss	i2___fladd@b+3,0,c
 35374  0145B8  D083               	goto	i2u1204_40
 35375                           
 35376                           ; BSR set to: 0
 35377  0145BA  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 35378  0145BC  D006               	goto	i2l2035
 35379                           
 35380                           ; BSR set to: 0
 35381  0145BE  90D8               	bcf	status,0,c
 35382  0145C0  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 35383  0145C2  516B               	movf	i2___fladd@grs& (0+255),w,b
 35384  0145C4  0901               	iorlw	1
 35385  0145C6  6F6B               	movwf	i2___fladd@grs& (0+255),b
 35386  0145C8  D002               	goto	i2l2036
 35387  0145CA                     i2l2035:
 35388                           
 35389                           ; BSR set to: 0
 35390                           
 35391                           ; BSR set to: 0
 35392  0145CA  90D8               	bcf	status,0,c
 35393  0145CC  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 35394  0145CE                     i2l2036:
 35395                           
 35396                           ; BSR set to: 0
 35397                           
 35398                           ; BSR set to: 0
 35399  0145CE  B056               	btfsc	i2___fladd@b,0,c
 35400                           
 35401                           ; BSR set to: 0
 35402  0145D0  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 35403                           
 35404                           ; BSR set to: 0
 35405                           
 35406                           ; BSR set to: 0
 35407  0145D2  3459               	rlcf	i2___fladd@b+3,w,c
 35408  0145D4  3259               	rrcf	i2___fladd@b+3,f,c
 35409  0145D6  3258               	rrcf	i2___fladd@b+2,f,c
 35410  0145D8  3257               	rrcf	i2___fladd@b+1,f,c
 35411  0145DA  3256               	rrcf	i2___fladd@b,f,c
 35412                           
 35413                           ; BSR set to: 0
 35414  0145DC  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 35415                           
 35416                           ; BSR set to: 0
 35417  0145DE  D070               	goto	i2u1204_40
 35418  0145E0                     i2l2031:
 35419                           
 35420                           ; BSR set to: 0
 35421                           
 35422                           ; BSR set to: 0
 35423  0145E0  505A               	movf	i2___fladd@a,w,c
 35424  0145E2  5C56               	subwf	i2___fladd@b,w,c
 35425  0145E4  505B               	movf	i2___fladd@a+1,w,c
 35426  0145E6  5857               	subwfb	i2___fladd@b+1,w,c
 35427  0145E8  505C               	movf	i2___fladd@a+2,w,c
 35428  0145EA  5858               	subwfb	i2___fladd@b+2,w,c
 35429  0145EC  5059               	movf	i2___fladd@b+3,w,c
 35430  0145EE  0A80               	xorlw	128
 35431  0145F0  6F60               	movwf	??i2___fladd& (0+255),b
 35432  0145F2  505D               	movf	i2___fladd@a+3,w,c
 35433  0145F4  0A80               	xorlw	128
 35434  0145F6  5960               	subwfb	??i2___fladd& (0+255),w,b
 35435  0145F8  B0D8               	btfsc	status,0,c
 35436  0145FA  D036               	goto	i2l2039
 35437                           
 35438                           ; BSR set to: 0
 35439  0145FC  C056  F060         	movff	i2___fladd@b,??i2___fladd
 35440  014600  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 35441  014604  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 35442  014608  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 35443  01460C  1F60               	comf	??i2___fladd& (0+255),f,b
 35444  01460E  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 35445  014610  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 35446  014612  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 35447  014614  2B60               	incf	??i2___fladd& (0+255),f,b
 35448  014616  0E00               	movlw	0
 35449  014618  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 35450  01461A  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 35451  01461C  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 35452  01461E  505A               	movf	i2___fladd@a,w,c
 35453  014620  2560               	addwf	??i2___fladd& (0+255),w,b
 35454  014622  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 35455  014624  505B               	movf	i2___fladd@a+1,w,c
 35456  014626  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 35457  014628  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 35458  01462A  505C               	movf	i2___fladd@a+2,w,c
 35459  01462C  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 35460  01462E  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 35461  014630  505D               	movf	i2___fladd@a+3,w,c
 35462  014632  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 35463  014634  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 35464  014636  0EFF               	movlw	255
 35465  014638  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 35466  01463A  6E56               	movwf	i2___fladd@b,c
 35467  01463C  0EFF               	movlw	255
 35468  01463E  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 35469  014640  6E57               	movwf	i2___fladd@b+1,c
 35470  014642  0EFF               	movlw	255
 35471  014644  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 35472  014646  6E58               	movwf	i2___fladd@b+2,c
 35473  014648  0EFF               	movlw	255
 35474  01464A  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 35475  01464C  6E59               	movwf	i2___fladd@b+3,c
 35476  01464E  0E80               	movlw	128
 35477  014650  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 35478                           
 35479                           ; BSR set to: 0
 35480  014652  6D6B               	negf	i2___fladd@grs& (0+255),b
 35481                           
 35482                           ; BSR set to: 0
 35483  014654  516B               	movf	i2___fladd@grs& (0+255),w,b
 35484  014656  A4D8               	btfss	status,2,c
 35485  014658  D00F               	goto	i2l2041
 35486                           
 35487                           ; BSR set to: 0
 35488  01465A  0E01               	movlw	1
 35489  01465C  2656               	addwf	i2___fladd@b,f,c
 35490  01465E  0E00               	movlw	0
 35491  014660  2257               	addwfc	i2___fladd@b+1,f,c
 35492  014662  2258               	addwfc	i2___fladd@b+2,f,c
 35493  014664  2259               	addwfc	i2___fladd@b+3,f,c
 35494                           
 35495                           ; BSR set to: 0
 35496  014666  D008               	goto	i2l2041
 35497  014668                     i2l2039:
 35498                           
 35499                           ; BSR set to: 0
 35500                           
 35501                           ; BSR set to: 0
 35502  014668  505A               	movf	i2___fladd@a,w,c
 35503  01466A  5E56               	subwf	i2___fladd@b,f,c
 35504  01466C  505B               	movf	i2___fladd@a+1,w,c
 35505  01466E  5A57               	subwfb	i2___fladd@b+1,f,c
 35506  014670  505C               	movf	i2___fladd@a+2,w,c
 35507  014672  5A58               	subwfb	i2___fladd@b+2,f,c
 35508  014674  505D               	movf	i2___fladd@a+3,w,c
 35509  014676  5A59               	subwfb	i2___fladd@b+3,f,c
 35510  014678                     i2l2041:
 35511                           
 35512                           ; BSR set to: 0
 35513  014678  5056               	movf	i2___fladd@b,w,c
 35514  01467A  1057               	iorwf	i2___fladd@b+1,w,c
 35515  01467C  1058               	iorwf	i2___fladd@b+2,w,c
 35516  01467E  1059               	iorwf	i2___fladd@b+3,w,c
 35517  014680  A4D8               	btfss	status,2,c
 35518  014682  D01C               	goto	i2l2048
 35519                           
 35520                           ; BSR set to: 0
 35521  014684  516B               	movf	i2___fladd@grs& (0+255),w,b
 35522  014686  A4D8               	btfss	status,2,c
 35523  014688  D019               	goto	i2l2048
 35524                           
 35525                           ; BSR set to: 0
 35526  01468A  0E00               	movlw	0
 35527  01468C  6E56               	movwf	?i2___fladd,c
 35528  01468E  0E00               	movlw	0
 35529  014690  6E57               	movwf	?i2___fladd+1,c
 35530  014692  0E00               	movlw	0
 35531  014694  6E58               	movwf	?i2___fladd+2,c
 35532  014696  0E00               	movlw	0
 35533  014698  6E59               	movwf	?i2___fladd+3,c
 35534                           
 35535                           ; BSR set to: 0
 35536  01469A  0012               	return	
 35537  01469C                     
 35538                           ; BSR set to: 0
 35539                           
 35540                           ; BSR set to: 0
 35541  01469C  90D8               	bcf	status,0,c
 35542  01469E  3656               	rlcf	i2___fladd@b,f,c
 35543  0146A0  3657               	rlcf	i2___fladd@b+1,f,c
 35544  0146A2  3658               	rlcf	i2___fladd@b+2,f,c
 35545  0146A4  3659               	rlcf	i2___fladd@b+3,f,c
 35546                           
 35547                           ; BSR set to: 0
 35548  0146A6  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 35549                           
 35550                           ; BSR set to: 0
 35551  0146A8  8056               	bsf	i2___fladd@b,0,c
 35552                           
 35553                           ; BSR set to: 0
 35554                           
 35555                           ; BSR set to: 0
 35556  0146AA  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 35557  0146AC  D002               	goto	i2l2046
 35558                           
 35559                           ; BSR set to: 0
 35560  0146AE  80D8               	bsf	status,0,c
 35561  0146B0  D001               	goto	L23
 35562  0146B2                     i2l2046:
 35563                           
 35564                           ; BSR set to: 0
 35565                           
 35566                           ; BSR set to: 0
 35567  0146B2  90D8               	bcf	status,0,c
 35568  0146B4                     L23:
 35569  0146B4  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 35570                           
 35571                           ; BSR set to: 0
 35572                           
 35573                           ; BSR set to: 0
 35574  0146B6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35575  0146B8  A4D8               	btfss	status,2,c
 35576                           
 35577                           ; BSR set to: 0
 35578  0146BA  076A               	decf	i2___fladd@bexp& (0+255),f,b
 35579  0146BC                     i2l2048:
 35580                           
 35581                           ; BSR set to: 0
 35582                           
 35583                           ; BSR set to: 0
 35584                           
 35585                           ; BSR set to: 0
 35586  0146BC  AE58               	btfss	i2___fladd@b+2,7,c
 35587  0146BE  D7EE               	goto	i2l2044
 35588  0146C0                     i2u1204_40:
 35589                           
 35590                           ; BSR set to: 0
 35591                           
 35592                           ; BSR set to: 0
 35593                           
 35594                           ; BSR set to: 0
 35595  0146C0  0E00               	movlw	0
 35596  0146C2  6F69               	movwf	i2___fladd@aexp& (0+255),b
 35597                           
 35598                           ; BSR set to: 0
 35599  0146C4  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 35600  0146C6  D00A               	goto	i2l2053
 35601                           
 35602                           ; BSR set to: 0
 35603  0146C8  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 35604  0146CC  0E7F               	movlw	127
 35605  0146CE  1760               	andwf	??i2___fladd& (0+255),f,b
 35606  0146D0  A4D8               	btfss	status,2,c
 35607  0146D2  D002               	goto	i2u1207_40
 35608                           
 35609                           ; BSR set to: 0
 35610                           
 35611                           ; BSR set to: 0
 35612  0146D4  A056               	btfss	i2___fladd@b,0,c
 35613  0146D6  D002               	goto	i2l2053
 35614  0146D8                     i2u1207_40:
 35615                           
 35616                           ; BSR set to: 0
 35617  0146D8  0E01               	movlw	1
 35618  0146DA  6F69               	movwf	i2___fladd@aexp& (0+255),b
 35619  0146DC                     i2l2053:
 35620                           
 35621                           ; BSR set to: 0
 35622                           
 35623                           ; BSR set to: 0
 35624                           
 35625                           ; BSR set to: 0
 35626  0146DC  5169               	movf	i2___fladd@aexp& (0+255),w,b
 35627  0146DE  B4D8               	btfsc	status,2,c
 35628  0146E0  D020               	goto	i2l2056
 35629                           
 35630                           ; BSR set to: 0
 35631  0146E2  0E01               	movlw	1
 35632  0146E4  2656               	addwf	i2___fladd@b,f,c
 35633  0146E6  0E00               	movlw	0
 35634  0146E8  2257               	addwfc	i2___fladd@b+1,f,c
 35635  0146EA  2258               	addwfc	i2___fladd@b+2,f,c
 35636  0146EC  2259               	addwfc	i2___fladd@b+3,f,c
 35637                           
 35638                           ; BSR set to: 0
 35639  0146EE  A059               	btfss	i2___fladd@b+3,0,c
 35640  0146F0  D018               	goto	i2l2056
 35641                           
 35642                           ; BSR set to: 0
 35643  0146F2  C056  F060         	movff	i2___fladd@b,??i2___fladd
 35644  0146F6  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 35645  0146FA  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 35646  0146FE  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 35647  014702  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 35648  014704  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 35649  014706  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 35650  014708  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 35651  01470A  3360               	rrcf	??i2___fladd& (0+255),f,b
 35652  01470C  C060  F056         	movff	??i2___fladd,i2___fladd@b
 35653  014710  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 35654  014714  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 35655  014718  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 35656  01471C  296A               	incf	i2___fladd@bexp& (0+255),w,b
 35657  01471E  A4D8               	btfss	status,2,c
 35658                           
 35659                           ; BSR set to: 0
 35660  014720  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 35661  014722                     i2l2056:
 35662                           
 35663                           ; BSR set to: 0
 35664                           
 35665                           ; BSR set to: 0
 35666                           
 35667                           ; BSR set to: 0
 35668                           
 35669                           ; BSR set to: 0
 35670  014722  296A               	incf	i2___fladd@bexp& (0+255),w,b
 35671  014724  B4D8               	btfsc	status,2,c
 35672  014726  D003               	goto	i2u1212_40
 35673                           
 35674                           ; BSR set to: 0
 35675  014728  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35676  01472A  A4D8               	btfss	status,2,c
 35677  01472C  D00D               	goto	i2l2060
 35678  01472E                     i2u1212_40:
 35679                           
 35680                           ; BSR set to: 0
 35681                           
 35682                           ; BSR set to: 0
 35683  01472E  0E00               	movlw	0
 35684  014730  6E56               	movwf	i2___fladd@b,c
 35685  014732  0E00               	movlw	0
 35686  014734  6E57               	movwf	i2___fladd@b+1,c
 35687  014736  0E00               	movlw	0
 35688  014738  6E58               	movwf	i2___fladd@b+2,c
 35689  01473A  0E00               	movlw	0
 35690  01473C  6E59               	movwf	i2___fladd@b+3,c
 35691  01473E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 35692  014740  A4D8               	btfss	status,2,c
 35693  014742  D002               	goto	i2l2060
 35694                           
 35695                           ; BSR set to: 0
 35696  014744  0E00               	movlw	0
 35697  014746  6F68               	movwf	i2___fladd@signs& (0+255),b
 35698  014748                     i2l2060:
 35699                           
 35700                           ; BSR set to: 0
 35701                           
 35702                           ; BSR set to: 0
 35703                           
 35704                           ; BSR set to: 0
 35705  014748  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 35706  01474A  D002               	goto	i2l2061
 35707                           
 35708                           ; BSR set to: 0
 35709  01474C  8E58               	bsf	i2___fladd@b+2,7,c
 35710  01474E  D001               	goto	i2l2062
 35711  014750                     i2l2061:
 35712                           
 35713                           ; BSR set to: 0
 35714                           
 35715                           ; BSR set to: 0
 35716  014750  9E58               	bcf	i2___fladd@b+2,7,c
 35717  014752                     i2l2062:
 35718                           
 35719                           ; BSR set to: 0
 35720                           
 35721                           ; BSR set to: 0
 35722  014752  90D8               	bcf	status,0,c
 35723  014754  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 35724  014756  6E59               	movwf	i2___fladd@b+3,c
 35725                           
 35726                           ; BSR set to: 0
 35727  014758  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 35728                           
 35729                           ; BSR set to: 0
 35730  01475A  8E59               	bsf	i2___fladd@b+3,7,c
 35731                           
 35732                           ; BSR set to: 0
 35733                           
 35734                           ; BSR set to: 0
 35735  01475C  C056  F056         	movff	i2___fladd@b,?i2___fladd
 35736  014760  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 35737  014764  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 35738  014768  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 35739  01476C  0012               	return	
 35740  01476E                     __end_ofi2___fladd:
 35741                           	opt stack 0
 35742                           tosu	equ	0xFFF
 35743                           tosh	equ	0xFFE
 35744                           tosl	equ	0xFFD
 35745                           pclatu	equ	0xFFB
 35746                           pclath	equ	0xFFA
 35747                           tblptru	equ	0xFF8
 35748                           tblptrh	equ	0xFF7
 35749                           tblptrl	equ	0xFF6
 35750                           tablat	equ	0xFF5
 35751                           prodh	equ	0xFF4
 35752                           prodl	equ	0xFF3
 35753                           intcon	equ	0xFF2
 35754                           indf0	equ	0xFEF
 35755                           postinc0	equ	0xFEE
 35756                           fsr0h	equ	0xFEA
 35757                           fsr0l	equ	0xFE9
 35758                           wreg	equ	0xFE8
 35759                           indf1	equ	0xFE7
 35760                           postdec1	equ	0xFE5
 35761                           plusw1	equ	0xFE3
 35762                           fsr1h	equ	0xFE2
 35763                           fsr1l	equ	0xFE1
 35764                           bsr	equ	0xFE0
 35765                           indf2	equ	0xFDF
 35766                           postinc2	equ	0xFDE
 35767                           postdec2	equ	0xFDD
 35768                           plusw2	equ	0xFDB
 35769                           fsr2h	equ	0xFDA
 35770                           fsr2l	equ	0xFD9
 35771                           status	equ	0xFD8
 35772                           
 35773 ;; *************** function _abs *****************
 35774 ;; Defined at:
 35775 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 35776 ;; Parameters:    Size  Location     Type
 35777 ;;  a               2   22[BANK0 ] int 
 35778 ;; Auto vars:     Size  Location     Type
 35779 ;;		None
 35780 ;; Return value:  Size  Location     Type
 35781 ;;                  2   22[BANK0 ] int 
 35782 ;; Registers used:
 35783 ;;		wreg, status,2, status,0
 35784 ;; Tracked objects:
 35785 ;;		On entry : 0/0
 35786 ;;		On exit  : 0/0
 35787 ;;		Unchanged: 0/0
 35788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35791 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35792 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35793 ;;Total ram usage:        4 bytes
 35794 ;; Hardware stack levels used:    1
 35795 ;; This function calls:
 35796 ;;		Nothing
 35797 ;; This function is called by:
 35798 ;;		_ADCPostProcessingCallback
 35799 ;; This function uses a non-reentrant model
 35800 ;;
 35801                           
 35802                           	psect	text121
 35803  018088                     __ptext121:
 35804                           	opt stack 0
 35805  018088                     _abs:
 35806                           	opt stack 16
 35807                           
 35808                           ; BSR set to: 0
 35809                           ;incstack = 0
 35810  018088  0100               	movlb	0	; () banked
 35811  01808A  AF77               	btfss	(abs@a+1)& (0+255),7,b
 35812  01808C  D00D               	goto	i2l1508
 35813                           
 35814                           ; BSR set to: 0
 35815  01808E  C076  F078         	movff	abs@a,??_abs
 35816  018092  C077  F079         	movff	abs@a+1,??_abs+1
 35817  018096  1F78               	comf	??_abs& (0+255),f,b
 35818  018098  1F79               	comf	(??_abs+1)& (0+255),f,b
 35819  01809A  4B78               	infsnz	??_abs& (0+255),f,b
 35820  01809C  2B79               	incf	(??_abs+1)& (0+255),f,b
 35821  01809E  C078  F076         	movff	??_abs,?_abs
 35822  0180A2  C079  F077         	movff	??_abs+1,?_abs+1
 35823  0180A6  0012               	return	
 35824  0180A8                     i2l1508:
 35825                           
 35826                           ; BSR set to: 0
 35827  0180A8  C076  F076         	movff	abs@a,?_abs
 35828  0180AC  C077  F077         	movff	abs@a+1,?_abs+1
 35829                           
 35830                           ; BSR set to: 0
 35831  0180B0  0012               	return		;funcret
 35832  0180B2                     __end_of_abs:
 35833                           	opt stack 0
 35834                           tosu	equ	0xFFF
 35835                           tosh	equ	0xFFE
 35836                           tosl	equ	0xFFD
 35837                           pclatu	equ	0xFFB
 35838                           pclath	equ	0xFFA
 35839                           tblptru	equ	0xFF8
 35840                           tblptrh	equ	0xFF7
 35841                           tblptrl	equ	0xFF6
 35842                           tablat	equ	0xFF5
 35843                           prodh	equ	0xFF4
 35844                           prodl	equ	0xFF3
 35845                           intcon	equ	0xFF2
 35846                           indf0	equ	0xFEF
 35847                           postinc0	equ	0xFEE
 35848                           fsr0h	equ	0xFEA
 35849                           fsr0l	equ	0xFE9
 35850                           wreg	equ	0xFE8
 35851                           indf1	equ	0xFE7
 35852                           postdec1	equ	0xFE5
 35853                           plusw1	equ	0xFE3
 35854                           fsr1h	equ	0xFE2
 35855                           fsr1l	equ	0xFE1
 35856                           bsr	equ	0xFE0
 35857                           indf2	equ	0xFDF
 35858                           postinc2	equ	0xFDE
 35859                           postdec2	equ	0xFDD
 35860                           plusw2	equ	0xFDB
 35861                           fsr2h	equ	0xFDA
 35862                           fsr2l	equ	0xFD9
 35863                           status	equ	0xFD8
 35864                           
 35865 ;; *************** function _ADCC_StopConversion *****************
 35866 ;; Defined at:
 35867 ;;		line 162 in file "mcc_generated_files/adcc.c"
 35868 ;; Parameters:    Size  Location     Type
 35869 ;;		None
 35870 ;; Auto vars:     Size  Location     Type
 35871 ;;		None
 35872 ;; Return value:  Size  Location     Type
 35873 ;;                  1    wreg      void 
 35874 ;; Registers used:
 35875 ;;		None
 35876 ;; Tracked objects:
 35877 ;;		On entry : 0/0
 35878 ;;		On exit  : 0/0
 35879 ;;		Unchanged: 0/0
 35880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35885 ;;Total ram usage:        0 bytes
 35886 ;; Hardware stack levels used:    1
 35887 ;; This function calls:
 35888 ;;		Nothing
 35889 ;; This function is called by:
 35890 ;;		_ADCPostProcessingCallback
 35891 ;; This function uses a non-reentrant model
 35892 ;;
 35893                           
 35894                           	psect	text122
 35895  0183E4                     __ptext122:
 35896                           	opt stack 0
 35897  0183E4                     _ADCC_StopConversion:
 35898                           	opt stack 16
 35899                           
 35900                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 35901                           
 35902                           ; BSR set to: 0
 35903                           ;incstack = 0
 35904  0183E4  9060               	bcf	3936,0,c	;volatile
 35905  0183E6  0012               	return		;funcret
 35906  0183E8                     __end_of_ADCC_StopConversion:
 35907                           	opt stack 0
 35908                           tosu	equ	0xFFF
 35909                           tosh	equ	0xFFE
 35910                           tosl	equ	0xFFD
 35911                           pclatu	equ	0xFFB
 35912                           pclath	equ	0xFFA
 35913                           tblptru	equ	0xFF8
 35914                           tblptrh	equ	0xFF7
 35915                           tblptrl	equ	0xFF6
 35916                           tablat	equ	0xFF5
 35917                           prodh	equ	0xFF4
 35918                           prodl	equ	0xFF3
 35919                           intcon	equ	0xFF2
 35920                           indf0	equ	0xFEF
 35921                           postinc0	equ	0xFEE
 35922                           fsr0h	equ	0xFEA
 35923                           fsr0l	equ	0xFE9
 35924                           wreg	equ	0xFE8
 35925                           indf1	equ	0xFE7
 35926                           postdec1	equ	0xFE5
 35927                           plusw1	equ	0xFE3
 35928                           fsr1h	equ	0xFE2
 35929                           fsr1l	equ	0xFE1
 35930                           bsr	equ	0xFE0
 35931                           indf2	equ	0xFDF
 35932                           postinc2	equ	0xFDE
 35933                           postdec2	equ	0xFDD
 35934                           plusw2	equ	0xFDB
 35935                           fsr2h	equ	0xFDA
 35936                           fsr2l	equ	0xFD9
 35937                           status	equ	0xFD8
 35938                           
 35939 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 35940 ;; Defined at:
 35941 ;;		line 216 in file "mcc_generated_files/adcc.c"
 35942 ;; Parameters:    Size  Location     Type
 35943 ;;		None
 35944 ;; Auto vars:     Size  Location     Type
 35945 ;;		None
 35946 ;; Return value:  Size  Location     Type
 35947 ;;                  1    wreg      unsigned char 
 35948 ;; Registers used:
 35949 ;;		wreg
 35950 ;; Tracked objects:
 35951 ;;		On entry : 0/0
 35952 ;;		On exit  : 0/0
 35953 ;;		Unchanged: 0/0
 35954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35959 ;;Total ram usage:        0 bytes
 35960 ;; Hardware stack levels used:    1
 35961 ;; This function calls:
 35962 ;;		Nothing
 35963 ;; This function is called by:
 35964 ;;		_ADCPostProcessingCallback
 35965 ;; This function uses a non-reentrant model
 35966 ;;
 35967                           
 35968                           	psect	text123
 35969  01839E                     __ptext123:
 35970                           	opt stack 0
 35971  01839E                     _ADCC_HasAccumulatorOverflowed:
 35972                           	opt stack 16
 35973                           
 35974                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 35975                           
 35976                           ;incstack = 0
 35977  01839E  AE65               	btfss	3941,7,c	;volatile
 35978  0183A0  D002               	goto	i2u1521_40
 35979  0183A2  0E01               	movlw	1
 35980  0183A4  0012               	return	
 35981  0183A6                     i2u1521_40:
 35982  0183A6  0E00               	movlw	0
 35983  0183A8  0012               	return	
 35984  0183AA                     __end_of_ADCC_HasAccumulatorOverflowed:
 35985                           	opt stack 0
 35986                           tosu	equ	0xFFF
 35987                           tosh	equ	0xFFE
 35988                           tosl	equ	0xFFD
 35989                           pclatu	equ	0xFFB
 35990                           pclath	equ	0xFFA
 35991                           tblptru	equ	0xFF8
 35992                           tblptrh	equ	0xFF7
 35993                           tblptrl	equ	0xFF6
 35994                           tablat	equ	0xFF5
 35995                           prodh	equ	0xFF4
 35996                           prodl	equ	0xFF3
 35997                           intcon	equ	0xFF2
 35998                           indf0	equ	0xFEF
 35999                           postinc0	equ	0xFEE
 36000                           fsr0h	equ	0xFEA
 36001                           fsr0l	equ	0xFE9
 36002                           wreg	equ	0xFE8
 36003                           indf1	equ	0xFE7
 36004                           postdec1	equ	0xFE5
 36005                           plusw1	equ	0xFE3
 36006                           fsr1h	equ	0xFE2
 36007                           fsr1l	equ	0xFE1
 36008                           bsr	equ	0xFE0
 36009                           indf2	equ	0xFDF
 36010                           postinc2	equ	0xFDE
 36011                           postdec2	equ	0xFDD
 36012                           plusw2	equ	0xFDB
 36013                           fsr2h	equ	0xFDA
 36014                           fsr2l	equ	0xFD9
 36015                           status	equ	0xFD8
 36016                           
 36017 ;; *************** function _ADCC_GetFilterValue *****************
 36018 ;; Defined at:
 36019 ;;		line 222 in file "mcc_generated_files/adcc.c"
 36020 ;; Parameters:    Size  Location     Type
 36021 ;;		None
 36022 ;; Auto vars:     Size  Location     Type
 36023 ;;		None
 36024 ;; Return value:  Size  Location     Type
 36025 ;;                  2    0[COMRAM] unsigned int 
 36026 ;; Registers used:
 36027 ;;		wreg, status,2, status,0
 36028 ;; Tracked objects:
 36029 ;;		On entry : 0/0
 36030 ;;		On exit  : 0/0
 36031 ;;		Unchanged: 0/0
 36032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36037 ;;Total ram usage:        4 bytes
 36038 ;; Hardware stack levels used:    1
 36039 ;; This function calls:
 36040 ;;		Nothing
 36041 ;; This function is called by:
 36042 ;;		_ADCPostProcessingCallback
 36043 ;; This function uses a non-reentrant model
 36044 ;;
 36045                           
 36046                           	psect	text124
 36047  0182A2                     __ptext124:
 36048                           	opt stack 0
 36049  0182A2                     _ADCC_GetFilterValue:
 36050                           	opt stack 16
 36051                           
 36052                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 36053                           
 36054                           ;incstack = 0
 36055  0182A2  5073               	movf	3955,w,c	;volatile
 36056  0182A4  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 36057  0182A6  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 36058  0182A8  5072               	movf	3954,w,c	;volatile
 36059  0182AA  2403               	addwf	??_ADCC_GetFilterValue,w,c
 36060  0182AC  6E01               	movwf	?_ADCC_GetFilterValue,c
 36061  0182AE  0E00               	movlw	0
 36062  0182B0  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 36063  0182B2  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 36064  0182B4  0012               	return	
 36065  0182B6                     __end_of_ADCC_GetFilterValue:
 36066                           	opt stack 0
 36067                           tosu	equ	0xFFF
 36068                           tosh	equ	0xFFE
 36069                           tosl	equ	0xFFD
 36070                           pclatu	equ	0xFFB
 36071                           pclath	equ	0xFFA
 36072                           tblptru	equ	0xFF8
 36073                           tblptrh	equ	0xFF7
 36074                           tblptrl	equ	0xFF6
 36075                           tablat	equ	0xFF5
 36076                           prodh	equ	0xFF4
 36077                           prodl	equ	0xFF3
 36078                           intcon	equ	0xFF2
 36079                           indf0	equ	0xFEF
 36080                           postinc0	equ	0xFEE
 36081                           fsr0h	equ	0xFEA
 36082                           fsr0l	equ	0xFE9
 36083                           wreg	equ	0xFE8
 36084                           indf1	equ	0xFE7
 36085                           postdec1	equ	0xFE5
 36086                           plusw1	equ	0xFE3
 36087                           fsr1h	equ	0xFE2
 36088                           fsr1l	equ	0xFE1
 36089                           bsr	equ	0xFE0
 36090                           indf2	equ	0xFDF
 36091                           postinc2	equ	0xFDE
 36092                           postdec2	equ	0xFDD
 36093                           plusw2	equ	0xFDB
 36094                           fsr2h	equ	0xFDA
 36095                           fsr2l	equ	0xFD9
 36096                           status	equ	0xFD8
 36097                           
 36098 ;; *************** function _ADCC_GetConversionResult *****************
 36099 ;; Defined at:
 36100 ;;		line 130 in file "mcc_generated_files/adcc.c"
 36101 ;; Parameters:    Size  Location     Type
 36102 ;;		None
 36103 ;; Auto vars:     Size  Location     Type
 36104 ;;		None
 36105 ;; Return value:  Size  Location     Type
 36106 ;;                  2    0[COMRAM] unsigned int 
 36107 ;; Registers used:
 36108 ;;		wreg, status,2, status,0
 36109 ;; Tracked objects:
 36110 ;;		On entry : 0/0
 36111 ;;		On exit  : 0/0
 36112 ;;		Unchanged: 0/0
 36113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36118 ;;Total ram usage:        4 bytes
 36119 ;; Hardware stack levels used:    1
 36120 ;; This function calls:
 36121 ;;		Nothing
 36122 ;; This function is called by:
 36123 ;;		_ADCPostProcessingCallback
 36124 ;; This function uses a non-reentrant model
 36125 ;;
 36126                           
 36127                           	psect	text125
 36128  0182B6                     __ptext125:
 36129                           	opt stack 0
 36130  0182B6                     _ADCC_GetConversionResult:
 36131                           	opt stack 16
 36132                           
 36133                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 36134                           
 36135                           ;incstack = 0
 36136  0182B6  5064               	movf	3940,w,c	;volatile
 36137  0182B8  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 36138  0182BA  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 36139  0182BC  5063               	movf	3939,w,c	;volatile
 36140  0182BE  2403               	addwf	??_ADCC_GetConversionResult,w,c
 36141  0182C0  6E01               	movwf	?_ADCC_GetConversionResult,c
 36142  0182C2  0E00               	movlw	0
 36143  0182C4  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 36144  0182C6  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 36145  0182C8  0012               	return	
 36146  0182CA                     __end_of_ADCC_GetConversionResult:
 36147                           	opt stack 0
 36148                           tosu	equ	0xFFF
 36149                           tosh	equ	0xFFE
 36150                           tosl	equ	0xFFD
 36151                           pclatu	equ	0xFFB
 36152                           pclath	equ	0xFFA
 36153                           tblptru	equ	0xFF8
 36154                           tblptrh	equ	0xFF7
 36155                           tblptrl	equ	0xFF6
 36156                           tablat	equ	0xFF5
 36157                           prodh	equ	0xFF4
 36158                           prodl	equ	0xFF3
 36159                           intcon	equ	0xFF2
 36160                           indf0	equ	0xFEF
 36161                           postinc0	equ	0xFEE
 36162                           fsr0h	equ	0xFEA
 36163                           fsr0l	equ	0xFE9
 36164                           wreg	equ	0xFE8
 36165                           indf1	equ	0xFE7
 36166                           postdec1	equ	0xFE5
 36167                           plusw1	equ	0xFE3
 36168                           fsr1h	equ	0xFE2
 36169                           fsr1l	equ	0xFE1
 36170                           bsr	equ	0xFE0
 36171                           indf2	equ	0xFDF
 36172                           postinc2	equ	0xFDE
 36173                           postdec2	equ	0xFDD
 36174                           plusw2	equ	0xFDB
 36175                           fsr2h	equ	0xFDA
 36176                           fsr2l	equ	0xFD9
 36177                           status	equ	0xFD8
 36178                           tosu	equ	0xFFF
 36179                           tosh	equ	0xFFE
 36180                           tosl	equ	0xFFD
 36181                           pclatu	equ	0xFFB
 36182                           pclath	equ	0xFFA
 36183                           tblptru	equ	0xFF8
 36184                           tblptrh	equ	0xFF7
 36185                           tblptrl	equ	0xFF6
 36186                           tablat	equ	0xFF5
 36187                           prodh	equ	0xFF4
 36188                           prodl	equ	0xFF3
 36189                           intcon	equ	0xFF2
 36190                           indf0	equ	0xFEF
 36191                           postinc0	equ	0xFEE
 36192                           fsr0h	equ	0xFEA
 36193                           fsr0l	equ	0xFE9
 36194                           wreg	equ	0xFE8
 36195                           indf1	equ	0xFE7
 36196                           postdec1	equ	0xFE5
 36197                           plusw1	equ	0xFE3
 36198                           fsr1h	equ	0xFE2
 36199                           fsr1l	equ	0xFE1
 36200                           bsr	equ	0xFE0
 36201                           indf2	equ	0xFDF
 36202                           postinc2	equ	0xFDE
 36203                           postdec2	equ	0xFDD
 36204                           plusw2	equ	0xFDB
 36205                           fsr2h	equ	0xFDA
 36206                           fsr2l	equ	0xFD9
 36207                           status	equ	0xFD8
 36208                           
 36209                           	psect	text126
 36210  000000                     __ptext126:
 36211                           	opt stack 0
 36212                           tosu	equ	0xFFF
 36213                           tosh	equ	0xFFE
 36214                           tosl	equ	0xFFD
 36215                           pclatu	equ	0xFFB
 36216                           pclath	equ	0xFFA
 36217                           tblptru	equ	0xFF8
 36218                           tblptrh	equ	0xFF7
 36219                           tblptrl	equ	0xFF6
 36220                           tablat	equ	0xFF5
 36221                           prodh	equ	0xFF4
 36222                           prodl	equ	0xFF3
 36223                           intcon	equ	0xFF2
 36224                           indf0	equ	0xFEF
 36225                           postinc0	equ	0xFEE
 36226                           fsr0h	equ	0xFEA
 36227                           fsr0l	equ	0xFE9
 36228                           wreg	equ	0xFE8
 36229                           indf1	equ	0xFE7
 36230                           postdec1	equ	0xFE5
 36231                           plusw1	equ	0xFE3
 36232                           fsr1h	equ	0xFE2
 36233                           fsr1l	equ	0xFE1
 36234                           bsr	equ	0xFE0
 36235                           indf2	equ	0xFDF
 36236                           postinc2	equ	0xFDE
 36237                           postdec2	equ	0xFDD
 36238                           plusw2	equ	0xFDB
 36239                           fsr2h	equ	0xFDA
 36240                           fsr2l	equ	0xFD9
 36241                           status	equ	0xFD8
 36242                           
 36243                           	psect	rparam
 36244  0000                     tosu	equ	0xFFF
 36245                           tosh	equ	0xFFE
 36246                           tosl	equ	0xFFD
 36247                           pclatu	equ	0xFFB
 36248                           pclath	equ	0xFFA
 36249                           tblptru	equ	0xFF8
 36250                           tblptrh	equ	0xFF7
 36251                           tblptrl	equ	0xFF6
 36252                           tablat	equ	0xFF5
 36253                           prodh	equ	0xFF4
 36254                           prodl	equ	0xFF3
 36255                           intcon	equ	0xFF2
 36256                           indf0	equ	0xFEF
 36257                           postinc0	equ	0xFEE
 36258                           fsr0h	equ	0xFEA
 36259                           fsr0l	equ	0xFE9
 36260                           wreg	equ	0xFE8
 36261                           indf1	equ	0xFE7
 36262                           postdec1	equ	0xFE5
 36263                           plusw1	equ	0xFE3
 36264                           fsr1h	equ	0xFE2
 36265                           fsr1l	equ	0xFE1
 36266                           bsr	equ	0xFE0
 36267                           indf2	equ	0xFDF
 36268                           postinc2	equ	0xFDE
 36269                           postdec2	equ	0xFDD
 36270                           plusw2	equ	0xFDB
 36271                           fsr2h	equ	0xFDA
 36272                           fsr2l	equ	0xFD9
 36273                           status	equ	0xFD8
 36274                           
 36275                           	psect	temp
 36276  00005F                     btemp:
 36277                           	opt stack 0
 36278  00005F                     	ds	1
 36279  0000                     int$flags	set	btemp
 36280  0000                     wtemp6	set	btemp+1
 36281                           tosu	equ	0xFFF
 36282                           tosh	equ	0xFFE
 36283                           tosl	equ	0xFFD
 36284                           pclatu	equ	0xFFB
 36285                           pclath	equ	0xFFA
 36286                           tblptru	equ	0xFF8
 36287                           tblptrh	equ	0xFF7
 36288                           tblptrl	equ	0xFF6
 36289                           tablat	equ	0xFF5
 36290                           prodh	equ	0xFF4
 36291                           prodl	equ	0xFF3
 36292                           intcon	equ	0xFF2
 36293                           indf0	equ	0xFEF
 36294                           postinc0	equ	0xFEE
 36295                           fsr0h	equ	0xFEA
 36296                           fsr0l	equ	0xFE9
 36297                           wreg	equ	0xFE8
 36298                           indf1	equ	0xFE7
 36299                           postdec1	equ	0xFE5
 36300                           plusw1	equ	0xFE3
 36301                           fsr1h	equ	0xFE2
 36302                           fsr1l	equ	0xFE1
 36303                           bsr	equ	0xFE0
 36304                           indf2	equ	0xFDF
 36305                           postinc2	equ	0xFDE
 36306                           postdec2	equ	0xFDD
 36307                           plusw2	equ	0xFDB
 36308                           fsr2h	equ	0xFDA
 36309                           fsr2l	equ	0xFD9
 36310                           status	equ	0xFD8


Data Sizes:
    Strings     5348
    Constant    256
    Data        43
    BSS         346
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    203     227
    BANK2           256      0     227
    BANK3           256     35     163
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_120(CODE[5]), STR_118(CODE[14]), STR_116(CODE[16]), STR_107(CODE[13]), 
		 -> STR_103(CODE[17]), STR_100(CODE[14]), STR_98(CODE[12]), STR_96(CODE[16]), 
		 -> STR_94(CODE[15]), STR_92(CODE[15]), STR_90(CODE[21]), STR_88(CODE[21]), 
		 -> STR_86(CODE[26]), STR_84(CODE[14]), STR_82(CODE[13]), STR_80(CODE[18]), 
		 -> STR_78(CODE[15]), STR_76(CODE[16]), STR_73(CODE[17]), STR_71(CODE[16]), 
		 -> STR_60(CODE[11]), STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), 
		 -> STR_50(CODE[4]), STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK3[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_140(CODE[7]), printf@c(BANK1[1]), STR_139(CODE[16]), STR_138(CODE[22]), 
		 -> STR_137(CODE[21]), STR_136(CODE[27]), STR_135(CODE[41]), STR_134(CODE[32]), 
		 -> STR_133(CODE[19]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[16]), 
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), ringBufferLUT@channel_name(BANK3[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2170
		 -> STR_126(CODE[30]), STR_125(CODE[46]), STR_124(CODE[39]), STR_123(CODE[62]), 
		 -> STR_122(CODE[33]), STR_121(CODE[2170]), STR_119(CODE[53]), STR_117(CODE[58]), 
		 -> STR_115(CODE[71]), STR_114(CODE[63]), STR_113(CODE[37]), STR_112(CODE[46]), 
		 -> STR_111(CODE[102]), STR_110(CODE[86]), STR_108(CODE[25]), STR_106(CODE[42]), 
		 -> STR_105(CODE[53]), STR_104(CODE[31]), STR_102(CODE[29]), STR_101(CODE[28]), 
		 -> STR_99(CODE[42]), STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), 
		 -> STR_91(CODE[34]), STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), 
		 -> STR_83(CODE[58]), STR_81(CODE[36]), STR_79(CODE[36]), STR_77(CODE[37]), 
		 -> STR_75(CODE[45]), STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), 
		 -> STR_69(CODE[48]), STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[57]), 
		 -> STR_54(CODE[85]), STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), 
		 -> STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), 
		 -> STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_138(CODE[22]), STR_137(CODE[21]), STR_136(CODE[27]), STR_135(CODE[41]), 
		 -> STR_134(CODE[32]), STR_133(CODE[19]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK3[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_129(CODE[10]), STR_128(CODE[13]), STR_127(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_139(CODE[16]), STR_138(CODE[22]), STR_137(CODE[21]), STR_136(CODE[27]), 
		 -> STR_135(CODE[41]), STR_134(CODE[32]), STR_133(CODE[19]), STR_132(CODE[16]), 
		 -> STR_131(CODE[15]), STR_130(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->_fround
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  545065
                                            201 BANK1      2     2      0
       _ADCC_SetADTIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   66502
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  330306
                                            192 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       39    37      2  329578
                                            188 BANK1      4     2      2
                                              0 BANK3     35    35      0
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   80071
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   80071
                                            170 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   66502
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1549
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    5353
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1701
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3535
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   66502
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10   66502
                                            124 BANK1     46    36     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   12861
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   12582
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7934
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1206
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1178
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     827
                                            111 BANK1     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    6315
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    5710
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    2236
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  195233
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   39315
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   39315
                                             40 BANK0     38    36      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     366
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     23      A3      12       63.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E3      10       88.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CB      E3       7       88.7%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     363       8        0.0%
DATA                 0      0     363       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 06 01:10:46 2018

                           ??i2_TMR7_StopTimer 0001                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
             __end_of_TMR5_SetInterruptHandler 8366                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l57 8252  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 83BC  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 7E16                                            l381 7C84  
                                          l382 7C80                                            l391 7C02  
                                          l392 7C28                                            l384 7CAE  
                                          l393 7C26                                            l388 7BEC  
                                          l389 7BE8                                            l998 72B0  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                                          _Ipk 01D3                                            _Vpk 0250  
                                          _abs 8088                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString 799E  
                                          _sin 4A72                     currentMeasuredToPeak@Angle 009D  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                 __CFG_IDLOC0$ 000000                                     i2___xxtofl 60E6  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                             ??_TMR7_StopTimer 0117                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0168                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 0178                                           l1200 02A0  
                                         l1040 6970                                           l1201 025A  
                                         l1210 0308                                           l1042 69D4  
                                         l1211 0320                                           l1043 69A6  
                                         ?_abs 0076                                           l2100 5594  
                                         l1220 04C4                                           l1204 0408  
                                         l1212 0338                                           l2021 41C8  
                                         l2013 4124                                           l1221 04A0  
                                         l1205 03E4                                           l1213 0350  
                                         l1037 6950                                           l1310 7A7E  
                                         l1302 7A5E                                           l2022 418C  
                                         l2014 4120                                           l2110 3AD2  
                                         l1070 373C                                           l1230 060C  
                                         l1206 0398                                           l1214 0368  
                                         l2031 42A2                                           l2111 3AF0  
                                         l1071 3754                                           l1215 0380  
                                         l1207 02D8                                           l1039 698C  
                                         l1312 7A86                                           l1304 7A66  
                                         l2032 4268                                           l2104 3A82  
                                         l1400 11C8                                           l1080 383E  
                                         l1072 376C                                           l1240 07A6  
                                         l1232 065E                                           l1224 0516  
                                         l1208 03C8                                           l2041 433A  
                                         l2025 4244                                           l2105 3A7E  
                                         l1401 12AA                                           l1321 7FF2  
                                         l1081 3856                                           l1073 3784  
                                         l1209 02F0                                           l1314 7A8E  
                                         l1306 7A6E                                           l2026 4222  
                                         l2018 416C                                           l2210 6014  
                                         l2122 3CE8                                           l2106 3A92  
                                         l1410 1322                                           l1090 394C  
                                         l1082 386E                                           l1066 37B4  
                                         l1074 379C                                           l1242 07EA  
                                         l1234 06B0                                           l1226 0568  
                                         l1218 0458                                           l2035 428C  
                                         l2027 4230                                           l2019 4168  
                                         l2211 6008                                           l2115 3CB0  
                                         l1091 3964                                           l1075 38CE  
                                         l1083 3886                                           l1067 370C  
                                         l1308 7A76                                           l2060 440A  
                                         l2044 435E                                           l2036 4290  
                                         l2028 4234                                           l2124 3D2C  
                                         l2116 3C92                                           l2108 3AC2  
                                         l1404 1244                                           l1092 397C  
                                         l1084 389E                                           l1076 37F6  
                                         l1068 37DE                                           l1260 0C3C  
                                         l1252 0972                                           l1244 082E  
                                         l1236 0702                                           l1228 05BA  
                                         l2061 4412                                           l2053 439E  
                                         l2221 60A2                                           l2213 6052  
                                         l2125 3D4A                                           l2109 3ABE  
                                         l1421 1452                                           l1093 3994  
                                         l1077 3904                                           l1085 38B6  
                                         l1069 3724                                           l1261 09F4  
                                         l1253 0928                                           l2062 4414  
                                         l2046 4374                                           l2222 60D4  
                                         l2214 603A                                           l2206 5FD4  
                                         l1430 162C                                           l1422 1456  
                                         l2070 532C                                           l1086 39F4  
                                         l1094 39AC                                           l1078 380E  
                                         l1270 0CE0                                           l1246 0876  
                                         l1238 0754                                           l1190 00CC  
                                         l2039 432A                                           l2207 5FE4  
                                         l2127 3D6E                                           l1423 146E  
                                         l1415 1414                                           l2071 5328  
                                         l1095 39C4                                           l1087 391C  
                                         l1079 3826                                           l1263 0AB0  
                                         l1255 094E                                           l2056 43E4  
                                         l2048 437E                                           l2216 6084  
                                         l2208 6002                                           l2128 3D8C  
                                         l1352 301C                                           l1440 1704  
                                         l1432 1650                                           l1424 15B8  
                                         l1416 1380                                           l2080 5488  
                                         l2152 7BA6                                           l1088 3A2A  
                                         l1096 39DC                                           l1248 08E0  
                                         l1192 013A                                           l2217 6078  
                                         l1353 2F24                                           l1441 16AC  
                                         l1425 14D0                                           l2081 5438  
                                         l2161 7AB4                                           l2153 7BA0  
                                         l1089 3934                                           l1249 08BC  
                                         l1346 51B4                                           l1434 16EE  
                                         l1418 142E                                           l1370 0F92  
                                         l2082 5460                                           l2074 536C  
                                         l1290 7952                                           l2162 7AAA  
                                         l2170 7ED0                                           l1258 09BA  
                                         l1186 003E                                           l1451 1858  
                                         l1435 166A                                           l1427 15D2  
                                         l1419 1420                                           l1363 0DAE  
                                         l2075 5368                                           l2251 7EAA  
                                         l2155 7BC0                                           l1356 2FEA  
                                         l1452 175C                                           l1428 15C4  
                                         l1380 0EC2                                           l1364 0DC0  
                                         l2084 5486                                           l2156 7BB6  
                                         l1268 0C8E                                           l1196 01A0  
                                         l1188 007A                                           l1349 52A4  
                                         l1357 3170                                           l1445 1720  
                                         l1381 0ED2                                           l1373 0E92  
                                         l1365 0E84                                           l2077 53B2  
                                         l1293 795C                                           l1702 769E  
                                         l1454 1870                                           l1374 1000  
                                         l1390 0F7A                                           l1382 0ECC  
                                         l1366 0E58                                           l2094 54F4  
                                         l1294 7966                                           l2182 7812  
                                         l1198 0204                                           l1703 76A8  
                                         l1359 3236                                           l1455 17E0  
                                         l1447 1740                                           l1391 0F8C  
                                         l1367 0E04                                           l2087 54BC  
                                         l2079 53DA                                           l2175 7A0E  
                                         l2183 7842                                           l1704 76B6  
                                         l1392 15DC                                           l2096 5538  
                                         l2088 549E                                           l2176 7A08  
                                         l2256 7214                                           l1449 1876  
                                         l1393 1014                                           l1377 0E96  
                                         l2097 555C                                           l1289 7970  
                                         l2169 7EDA                                           l2257 71A2  
                                         l2185 785E                                           l1730 654C  
                                         l1394 1062                                           l1386 0F52  
                                         l2098 5586                                           l2258 720C  
                                         l2186 784E                                           l1387 0F26  
                                         l1379 0E9A                                           l2099 5592  
              ??_ADCC_DischargeSampleCapacitor 0100                                           l1732 658A  
                                         l1396 10D0                                           l1733 657A  
                                         l1397 1150                                           l1389 0F66  
                                         l2197 7326                                           l1750 801A  
                                         l1726 64BC                                           l1830 6264  
                                         l1670 6E76                                           l2198 72BE  
                                         l1743 6724                                           l1399 117E  
                                         l1663 6E22                                           l2199 72FA  
                                         l1744 6758                                           l1920 7432  
                                         l1728 64DA                                           l1832 6290  
                                         l1672 6EE8                                           l1664 6E1C  
                                         l1745 6796                                           l1921 7440  
                                         l1729 651C                                           l1833 62CA  
                                         l1746 67D4                                           l1930 78B8  
                                         l1738 65AE                                           l1842 6352  
                                         l1834 62F2                                           l1690 73B6  
                                         l1682 735E                                           l1666 6E64  
                                         l1931 78C6                                           l1739 65A2  
                                         l1843 6346                                           l1691 73C4  
                                         l1683 736E                                           l1916 73FE  
                                         l1836 632E                                           l1781 6D0E  
                                         l1773 6C7E                                           l1917 73F2  
                                         l1837 631E                                           l1685 738C  
                                         l1669 6EB4                                           l1782 6D02  
                                         l1926 7890                                           l1686 7384  
                         _ADCC_StartConversion 8390                                           l1775 6CEA  
                                         l1927 7884                                           l1695 7664  
                                         l1784 6D2A                                           l1776 6CDA  
                                         l1696 7670                                           l1689 73AC  
                                         l1698 7686                                           l1890 81DA  
                                         l1699 767E                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 F395                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019B                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                                   i2___flge@ff1 0034  
                                 i2___flge@ff2 0038                                           _Irms 01CB  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 7BE2  
              ??_ADCC_HasAccumulatorOverflowed 0001                                           _Vrms 024C  
                                         abs@a 0076                                           _acos 7730  
                                         _fabs 7E52                                           _atan 5D5C  
                                         _asin 476E                                           _atoi 6E1A  
                                         _main 7230                                           _line 027E  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 4D6C                                   i2___flneg@f1 002C  
                __end_of_ADCC_ClearAccumulator 83DE                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 010A  
                              _timer5ReloadVal 0278                                   i2___fltol@f1 006C  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 36E8  
                 __end_of_EUSART2_Transmit_ISR 7F32                                __end_ofi2_putch 83B4  
                                __CFG_CSWEN$ON 000000                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                       __size_ofi2_EUSART2_Write 004A  
                                        ??_abs 0078                                _timer7ReloadVal 01D7  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0128                               __end_of_HLVD_ISR 83CC  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 8258  
                     ?_terminal_textAttributes 01AA                              ??_TMR7_WriteTimer 0102  
                                        l12012 0F26                                          l10430 680C  
                                        l12132 1420                                          l12108 1326  
                                        l12206 16B0                                          l12080 11C8  
                                        l12242 1858                                          l12270 784E  
                                        l12192 166E                                          l12088 1216  
                                        l14126 6940                                          l14136 6966  
                                        l12486 71A2                                          l13518 024A  
                                        l13528 029A                                          l12818 6EB0  
                                        l12946 5586                                          l13684 0A60  
                                        l13668 09E4                                          l14590 7994  
                                        l13686 0AB0                                          l13678 0A2A  
                                        l14588 798A                                          ?_acos 00A9  
                                        ?_fabs 0030                                  ___fltol@sign1 0177  
                                        ?_atan 007C                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 4430                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 55B0  
                                        _ADREF 000F58                                __end_of___awdiv 73CE  
                              __end_of___flneg 802C                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FD51                                          STR_21 FFCC  
                                        STR_30 FF4D                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 F65E                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FE1A                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FDDD  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF67  
                                        STR_52 F949                                __end_of___awmod 76C0  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF5C                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FD0F                                          STR_54 F5C5  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FF1D                                          STR_71 FE70  
                                        STR_47 FE50                                          STR_64 FEF4  
                                        STR_80 FDBA                                          STR_72 FD68  
                                        STR_48 F8E5                                          STR_56 F7D4  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF72                                          STR_65 FF02  
                                        STR_73 FDFF                                          STR_81 FB65  
                                        STR_82 FF2A                                          STR_66 FEBC  
                                        STR_90 FD7D                                          STR_58 F6A3  
                                        STR_74 F661                                          STR_67 FD3D  
                                        STR_91 FBCF                                          STR_75 F9D4  
                                        STR_59 F845                                          STR_83 F79A  
                                        STR_68 FF7C                                          STR_84 FECA  
                                        STR_92 FE9E                                          STR_76 FE30  
                                        STR_77 FB1B                                          STR_85 FAF6  
                                        STR_69 F919                                          STR_93 F80D  
                                        STR_94 FEAD                                          STR_78 FE8F  
                                        STR_86 FCC3                                          STR_87 FC12  
                                        STR_79 FB89                                          STR_95 FAA7  
                                        STR_96 FE60                                          STR_88 FD92  
                              __end_of___flmul 3DA2                                          STR_89 FBAD  
                                        STR_97 FA7E                                          STR_98 FF50  
                                        STR_99 FA01                                __end_of___flsub 7D08  
                              __end_of___fltol 6D3C                                __end_of___lldiv 7452  
                                        ?_sqrt 006C                                          u13010 7390  
                              ___awdiv@divisor 011F                                __end_of___llmod 78D8  
                                        u13070 768A                                          u12520 424C  
                                        u14050 608E                                          u15020 71D4  
                                        u12470 41F8                                          u14310 0E3C  
                                        u12480 4208                                          u14320 0E7A  
                                        u13601 6274                                          u12730 43F0  
                                        u12650 4382                                          u12490 420A  
                                        u14410 0FC2                                          u12900 3CE4  
                                        u14500 11DA                                          u14317 0E32  
                                        u14350 0F00                                          u15310 733E  
                                        u14327 0E70                                          _T5CLK 000FC6  
                                        u12680 439A                                          u12840 3ADE  
                                        u14600 143C                                          u14360 0F06  
                                        u15240 7AEC                                          u16200 029A  
                                        u14417 0FB8                                          u13730 65B4  
                                        u12930 3D3A                                          u12850 3C54  
                                        u14610 144C                                          u14530 1216  
                                        u14290 0DEC                                          u13660 6358  
                                        u12940 3D58                                          u13581 6248  
                                        u14357 0EF6                                          u15261 7948  
                                        u13910 6D14                                          u14390 0F48  
                                        u16150 010A                                          u12855 3C4A  
                                        _T5CON 000FC3                                          u14297 0DE2  
                                        u14570 1364                                          u14490 118E  
                                        u15275 7E42                                          u13940 7402  
                                        u14397 0F3E                                          u13870 6C9C  
                                        u15550 54F0                                          _T7CLK 000F33  
                                        _T6CON 000FB1                                          u13970 7894  
                                        u13875 6C92                                          u14780 1888  
                                        u15580 5546                                          u14790 18B8  
                                        u15590 556A                                          u16470 0A2A  
                               __CFG_DEBUG$OFF 000000                                          u16480 0A52  
                                        u17280 6966                                          _T7CON 000F30  
                                        u16490 0A60                                          u14797 18AE  
                                        u18237 7244                                          u14990 7A30  
                                        _T6HLT 000FB2                                          u14997 7A26  
                   _ADCC_ADTI_InterruptHandler 026A                                          i1l223 007C  
                                        i1l225 009C                                          i1l403 7F2C  
                                        i1l227 00A8                                          i1l404 7F28  
                                        i1l229 00B2                                          i2l212 6F5C  
                                        i2l214 6F68                                          i2l216 6F72  
                                        i1l640 8168                                          i2l410 6FEE  
                                        i2l411 7010                                          i2l414 7014  
                                        i2l416 7064                                          i2l409 6FCA  
                                        _T6TMR 000FAF                                          i2l391 7C4C  
                                        i2l392 7C72                                          i2l393 7C70  
                                        i1l953 7E12                                          i2l714 826A  
                                        _T6RST 000FB4                                          i2l388 7C36  
                                        i2l389 7C32                                          i2l972 265A  
                                        i2l964 2482                                ___awdiv@counter 0121  
                                        i2l957 2D94                                          i2l973 2950  
                                        i2l965 258C                                          i2l990 2D86  
                                        i2l982 2AB6                                          i2l974 289E  
                                        i2l958 23F0                                          i2l983 2B98  
                                        i2l975 27B6                                          i2l959 247A  
                                        i2l968 2594                                          i2l977 28F6  
                                        i2l969 2652                                          i2l986 2BA0  
                                        i2l987 2D7E                                          i2l979 2AAE  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 65C6  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a EAF7                             __end_ofsin@coeff_b EB1B  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01CF  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 7F9A                               __end_of_TMR6_ISR 8102  
                             __end_of_TMR7_ISR 7F66                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01C0  
                              __end_of_dpowers EAAB                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 6A4C                                          _frexp 75D4  
                                        _errno 0276                          ?_ADCC_StartConversion 0001  
                                        _scale 2DC4                                __end_of_isdigit 81E2  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 832E                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 6930                                          sin@x2 0094  
                                        tablat 000FF5                               __end_ofi2___wmul 819C  
                                        plusw1 000FE3                                          plusw2 000FDB  
                               ??_EUSART2_Read 0117                   __size_of_ADCC_GetFilterValue 0014  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 7230                                __end_of_strncpy 7870  
                             __end_ofi2_fround 5B12                 ?_INTERRUPT_InterruptManagerLow 0001  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 23E4                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 8374  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 8366  
                              _TMR5_Initialize 7AF8                                __initialization 710E  
                            i2___lldiv@divisor 0005                                   __end_of_acos 779E  
                                 __end_of_fabs 7E8E                                   __end_of_atan 5F92  
                                 __end_of_asin 4A72                                   __end_of_atoi 6EF2  
                                 __end_of_main 72BC                              i2___lldiv@counter 000D  
                                 __end_of_sqrt 5034                                     i2printf@ap 0099  
                                   i2printf@cp 0097                          __end_of_ringBufferLUT 0DA0  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 01C9  
                     _TMR5_SetInterruptHandler 8358                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0124                                _TMR6_Initialize 7F9A  
                           _TRIAC_Firing_Angle 00F2                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 7808  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01DB                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FED8                                         _ADLTHL 000F6A  
                                       STR_101 FC8C                                         STR_102 FC6F  
                                       STR_110 F56F                                         STR_103 FDEE  
                                       STR_111 F509                                         STR_120 FFAB  
                                       STR_104 FC32                                         STR_112 F9A6  
                                       STR_113 FB40                                         STR_105 F87B  
                                       STR_121 EB1B                                         STR_122 FBF1  
                                       STR_106 FA2B                                         STR_114 F6E3  
                                       _ADRESH 000F64                                         STR_130 FE10  
                                       STR_107 FF37                                         STR_123 F722  
                                       STR_115 F61A                                         STR_131 FE80  
                                       STR_140 FF86                                         STR_116 FE40  
                                       STR_108 FCDD                                         STR_124 FACF  
                                       STR_132 FE20                                         STR_141 FDCC  
                                       STR_109 FCF6                                         STR_125 F978  
                                       STR_117 F760                                         STR_133 FDA7  
                                       STR_118 FEE6                                         STR_126 FC51  
                                       _ADRESL 000F63                                         STR_134 FA5E  
                                       STR_119 F8B0                                         STR_127 FF44  
                                       STR_135 FA55                                         STR_128 FF10  
                                       STR_136 FCA8                                         STR_129 FF7C  
                                       STR_137 FD53                                         STR_138 FD27  
                                       STR_139 FE10                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l2100 5848                                         i2l2021 4506  
                                       i2l2013 4462                                         i2l2005 4AA6  
                                       i2l2022 44CA                                         i2l2014 445E  
                                       i2l2110 3E22                                         i2l2006 4BC4  
                                       i2l2031 45E0                                         i2l2111 3E40  
                                       i2l2007 4C34                                         i2l2032 45A6  
                                       i2l2104 3DD2                                         i2l2008 4D5A  
                                       i2l1400 1CEA                                         i2l2041 4678  
                                       i2l2025 4582                                         i2l2105 3DCE  
                                       i2l1401 1DCE                                         i2l2026 4560  
                                       i2l2018 44AA                                         i2l2122 4038  
                                       i2l2106 3DE2                                         i2l2210 6164  
                                       i2l1410 1E46                                         i2l2035 45CA  
                                       i2l2027 456E                                         i2l2019 44A6  
                                       i2l2115 4000                                         i2l2211 6158  
                                       i2l2060 4748                                         i2l2044 469C  
                                       i2l2036 45CE                                         i2l2028 4572  
                                       i2l2124 407C                                         i2l2116 3FE2  
                                       i2l2108 3E12                                         i2l2140 4E12  
                                       i2l1404 1D66                                         i2l2061 4750  
                                       i2l2053 46DC                                         i2l2125 409A  
                                       i2l2109 3E0E                                         i2l2221 61F2  
                                       i2l2213 61A2                                         i2l2141 4E3E  
                                       i2l1421 1F74                                         i2l2062 4752  
                                       i2l2046 46B2                                         i2l2222 6224  
                                       i2l2214 618A                                         i2l2206 6124  
                                       i2l2230 6AB4                                         i2l2070 55E0  
                                       i2l2142 4E9C                                         i2l1430 214C  
                                       i2l1422 1F78                                         i2l2039 4668  
                                       i2l2127 40BE                                         i2l2207 6134  
                                       i2l2231 6B4C                                         i2l2071 55DC  
                                       i2l2143 4F46                                         i2l2135 4DAE  
                                       i2l1423 1F90                                         i2l1415 1F36  
                                       i2l2056 4722                                         i2l2048 46BC  
                                       i2l2128 40DC                                         i2l2216 61D4  
                                       i2l2208 6152                                         i2l2080 573C  
                                       i2l2144 4EA2                                         i2l1352 34AC  
                                       i2l1440 2224                                         i2l1432 2170  
                                       i2l1424 20D8                                         i2l1416 1EA4  
                                       i2l2217 61C8                                         i2l2081 56EC  
                                       i2l2145 4EE8                                         i2l2137 4DBE  
                                       i2l1353 33BC                                         i2l1441 21CC  
                                       i2l1425 1FF2                                         i2l2082 5714  
                                       i2l2074 5620                                         i2l2146 4F10  
                                       i2l2138 4DD8                                         i2l1346 59D6  
                                       i2l1434 220E                                         i2l1418 1F50  
                                       i2l1370 1AB6                                         i2l2227 6A96  
                                       i2l2075 561C                                         i2l1451 2376  
                                       i2l1435 218A                                         i2l1427 20F2  
                                       i2l1419 1F42                                         i2l1363 18D4  
                                       i2l1508 80A8                                         i2l2236 75F2  
                                       i2l2228 6A84                                         i2l2084 573A  
                                       i2l2148 4FFA                                         i2l1356 347C  
                                       i2l1452 227C                                         i2l1428 20E4  
                                       i2l1380 19E6                                         i2l1364 18E6  
                                       i2l2077 5666                                         i2l1349 5ABE  
                                       i2l1357 35F8                                         i2l1445 2240  
                                       i2l1381 19F6                                         i2l1373 19B6  
                                       i2l1365 19A8                                         i2l2094 57A8  
                                       i2l1630 5F6C                                         i2l1606 47C8  
                                       i2l1702 770E                                         i2l1454 238E  
                                       i2l1374 1B24                                         i2l1390 1A9E  
                                       i2l1382 19F0                                         i2l1366 197C  
                                       i2l2087 5770                                         i2l2079 568E  
                                       i2l1703 7718                                         i2l1359 36B8  
                                       i2l1455 22FE                                         i2l1447 2260  
                                       i2l1391 1AB0                                         i2l1367 192A  
                                       i2l2096 57EC                                         i2l2088 5752  
                                       i2l1608 48F0                                         i2l1704 7726  
                                       i2l1392 20FC                                         i2l2097 5810  
                                       i2l1625 5DA0                                         i2l1609 49D0  
                                       i2l1449 2394                                         i2l1393 1B38  
                                       i2l1377 19BA                                         i2l2098 583A  
                                       i2l1722 7E7C                                         i2l1730 6674  
                                       i2l1394 1B86                                         i2l1386 1A76  
                                       i2l2099 5846                                         i2l1627 5E0C  
                                       i2l1387 1A4A                                         i2l1379 19BE  
                                       i2l1716 6C42                                         i2l1628 5F54  
                                       i2l1732 66B2                                         i2l1396 1BF2  
                                       i2l1717 6BAA                                         i2l1733 66A2  
                                       i2l1397 1C70                                         i2l1389 1A8A  
                                       i2l1750 8076                                         i2l1726 65E4  
                                       i2l1830 6396                                         i2l1743 6844  
                                       i2l1399 1C9E                                         i2l1744 6878  
                                       i2l1920 7538                                         i2l1728 6602  
                                       i2l1832 63C2                                         i2l1745 68B6  
                                       i2l1921 7546                                         i2l1729 6644  
                                       i2l1833 63FC                                         i2l1746 68F4  
                                       i2l1930 791E                                         i2l1738 66D6  
                                       i2l1842 6484                                         i2l1834 6424  
                                       i2l1690 74BE                                         i2l1682 7466  
                                       i2l1931 792C                                         i2l1739 66CA  
                                       i2l1843 6478                                         i2l1691 74CC  
                                       i2l1683 7476                                         i2l1916 7504  
                                       i2l1836 6460                                         i2l1781 6DEC  
                                       i2l1773 6D5C                                         i2l1917 74F8  
                                       i2l1837 6450                                         i2l1685 7494  
                                       i2l1782 6DE0                                         i2l1926 78F6  
                                       i2l1686 748C                                         i2l1775 6DC8  
                                       i2l1927 78EA                                         i2l1695 76D4  
                                       i2l1784 6E08                                         i2l1776 6DB8  
                                       i2l1696 76E0                                         i2l1689 74B4  
                                       i2l1698 76F6                                         i2l1890 8218  
                                       i2l1699 76EE                                         _RG7PPS 000E89  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 60E6  
        __end_of_ADCC_DischargeSampleCapacitor 83C4         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor 83BC                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A          __end_of_ADCC_HasAccumulatorOverflowed 83AA  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed 839E  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 7B48  
                                 i2_scale$4100 004D                               __end_of__powers_ EA4F  
              __end_of_terminal_ringBufferPull 6A4C                                         ___flge 66EE  
                            _ADCC_ThresholdISR 8102                                      ??___fladd 0131  
                                       ___wmul 80B2                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 0173                                      ??___lldiv 011F  
                                    ??___llmod 012C                             ?_ADCC_ThresholdISR 0001  
                     ??_terminal_setCursorHome 01AA                                         _fround 5034  
                                       clear_0 7166                                         clear_1 7172  
                                       clear_2 717E                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                ___awmod@counter 011B  
                                       _printf 0DA0                                         _strcat 7B96  
                                       _strchr 7E8E                                         _strcmp 7AA8  
                                       _strcpy 7EC6                                         _strlen 79FE  
                               i2___awdiv@sign 000C                                         _strstr 72BC  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02BE                               _background_color 027B  
                              _ADCC_Initialize 799E                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 23E4                                 _PMD_Initialize 8220  
                      FLASH_ReadWord@flashAddr 011B                              __end_ofi2___fladd 476E  
                                    ??_isdigit 0117                              __end_ofi2___fldiv 5864  
                            __end_ofi2___awdiv 74D6                              __end_ofi2___flneg 8088  
                            __end_ofi2___awmod 7730                              __end_ofi2___flmul 40F2  
                            __end_ofi2___flsub 7D50                              __end_ofi2___fltol 6E1A  
                            __end_ofi2___lldiv 7558                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod 793E  
                                 __mediumconst EA1A                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion 83E4                           _EUSART2_Transmit_ISR 7EFC  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01AA                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0014                                _eusart2RxBuffer 0200  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 7B48                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 8220                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 802C                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 83EA          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 83E8                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 7196  
                               i2___fltol@exp1 0075                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 009F  
                           ?_SYSTEM_Initialize 0001                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 016F  
                              _TMR5_WriteTimer 8258                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR 812A                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 01C3                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 7E52                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01AA  
                                 __pidataBANK0 83CC                                   __pidataBANK1 83F0  
                                 __pidataBANK2 819C                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                                  __end_of_floor 6B5E  
                                __end_of_frexp 764E                                  __end_of_scale 3268  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 833C  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01AA                                    i2printf@len 0095  
                                  i2printf@exp 009D                                    i2printf@val 00A3  
                      __end_of_TMR6_Initialize 7FCC                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 823C                          _getCauseOfResetString 7FCC  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 7CC0  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 636A  
                                   __div_to_l_ 649C                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 805A  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01DD  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01CB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01DA                                  _eusart2TxTail 01DC  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 7B96  
                           __size_of_peakToRMS 024A                                     ??_HLVD_ISR 0100  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 8150                          ??_ADCC_StopConversion 0001  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4085 00C1  
                               _peakToRMS$4086 00B9                                 _peakToRMS$4087 00BD  
                        ringBufferLUT@arg_buff 039A                                    _Irms_offset 02D6  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2397 01C5                                        ?___wmul 0117  
                        _currentMeasuredToPeak 7558                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 8358                        __end_of_ADCC_Initialize 79FE  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler 8390  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler 8382  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 017C  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue 82A2  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 8274  
                                      ?_strstr 0126                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 7D94                                        i2l10434 692C  
                                      i2l11362 583A                                        u1575_41 637A  
                                      u1577_41 63A6                                        i2l13834 1D38  
                                      i2l13826 1CEA                                        i2l13854 1E4A  
                                      i2l13758 1A4A                                        i2l13952 21D0  
                                      i2l13938 218E                                        i2l13878 1F42  
                                      i2l13988 2376                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 706C  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 008A  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
                     _acquisitionTimerCallback 82DC                        __end_of_TMR5_WriteTimer 8274  
             __size_of_terminal_textAttributes 0368                                        i2_scale 3268  
                             ?_TMR5_Initialize 0001                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch 83AA                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset 82DC          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 82CA                              __end_of__npowers_ EA83  
                                      __Hparam 0000                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$3897 0173                                        __Lparam 0000  
                            __end_of_getUserID 7D94                          _ADCC_ClearAccumulator 83D8  
                   ??_TMR5_SetInterruptHandler 011A                                 _adc_error_flag 02F0  
                              __size_of___flge 0122                                        ___fladd 40F2  
                                      ___fldiv 52FA                                        ___awdiv 7348  
                                      ___flneg 7FFC                                        ___awmod 764E  
                                      ___flmul 3A50                                        ___flsub 7CC0  
                                      ___fltol 6C5E                                        ___lldiv 73CE  
                              __size_of___wmul 0028                                        ___llmod 7870  
                       __end_of_FLASH_ReadByte 828E                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord 7DD6                                        __pcinit 710E  
                            __end_of_eval_poly 6C5E                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                        __ptext0 7230  
                                      __ptext1 82EE                                        __ptext2 6930  
                                      __ptext3 0000                                        __ptext4 82CA  
                                      __ptext5 36E8                                        __ptext6 7808  
                                      __ptext7 7B96                                        __ptext8 82FE  
                                      __ptext9 72BC                              __end_of_peakToRMS 5D5C  
                              __size_of_printf 0B26                  currentMeasuredToPeak@Measured 0099  
                   ringBufferLUT@angle_degrees 0396                  ?_ADCC_SetADTIInterruptHandler 0117  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                                i2_fround$4098 0051                                  i2_fround$4099 004D  
                              __size_of_strcmp 0050                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers EACB  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers EA83  
                        _OSCILLATOR_Initialize 823C                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit 81C0                                atan@val_squared 0089  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                   ??___xxtofl 011B                               ___awmod@dividend 0117  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 039F  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 002E  
                        i2EUSART2_Write@txData 0001                                        _strncmp 71A0  
                               __pintcode_body 6EF2                                        _strncpy 7808  
                         end_of_initialization 7196                        __end_of_TMR7_WriteTimer 8176  
                      getDeviceIDString@F17550 02D0                         _terminal_setCursorHome 82EE  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                      i1u1015_20 7DE2  
                                    i1u1016_28 7DE6                                        int_func 6EF2  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u1804_28 80EE                                      i1u1806_28 7F52  
                                    i1u1818_28 0086                                      i2u1212_40 472E  
                                    i2u1204_40 46C0                        __size_of_TMR7_StopTimer 0006  
                                    i2u1207_40 46D8                                      i2u1223_40 3E2E  
                                    i2u1232_40 408A                                      i2u1224_40 3FA4  
                                    i2u1224_45 3F9A                                      i2u1233_40 40A8  
                                    i2u1410_40 761A                                      i2u1410_48 761C  
                               i2___xxtofl@arg 000F                                      i2u1412_40 6D7A  
                                    i2u1332_40 57A4                                      i2u1412_45 6D70  
                                    i2u1229_40 4034                                      i2u1191_40 458A  
                                    i2u1335_40 57FA                                 i2___xxtofl@exp 000E  
                                    i2u1416_40 6DF2                                      i2u1424_40 61DE  
                                    i2u1336_40 581E                                      i2u1512_40 7498  
                                    i2u1521_40 83A6                                      i2u1601_40 2644  
                               i2___xxtofl@val 0005                                      i2u1186_40 4536  
                                    i2u1610_40 2D70                                      i2u1187_40 4546  
                                    i2u1188_40 4548                                      i2u1606_40 2AA0  
                                    i2u1518_40 76FA                                      i2u1375_40 5DCC  
                                    i2u1703_40 23A6                                      i2u1376_40 5DCE  
                                    i2u1608_40 2B8A                                      i2u1704_40 23D6  
                                    i2u1704_47 23CC                                      i2u1800_48 7F86  
                                    i2u1491_40 6AA2                                      i2u1802_48 8116  
                                    i2u1660_40 1A24                                      i2u1660_47 1A1A  
                                    i2u1661_40 1A2A                                      i2u1717_40 7004  
                                    i2u1590_40 78FA                                      i2u1574_40 66DC  
                                    i2u1654_40 1912                                      i2u1654_47 1908  
                                    i2u1495_40 4BC0                                      i2u1583_40 648A  
                                    i2u1496_40 4BC2                                      i2u1664_40 1A6C  
                                    i2u1656_40 1960                                      i2u1664_47 1A62  
                                    i2u1656_47 1956                                      i2u1657_40 199E  
                                    i2u1657_47 1994                                      i2u1682_40 1E88  
                                    i2u1674_40 1CB0                                      i2u1666_40 1AE6  
                                    i2u1809_48 6F46                                      i2u1666_47 1ADC  
                                    i2u1587_40 7508                                      i2u1675_40 1CFC  
                                    i2u1596_40 246C                                      i2u1685_40 1F5E  
                                    i2u1686_40 1F6E                                      i2u1678_40 1D38  
                                    i2u1599_40 257E                                ___lldiv@divisor 011B  
                              ___lldiv@counter 0123                             _EUSART2_Initialize 779E  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 0124                                i2_EUSART2_Write 7C2E  
                                ??_getDeviceID 0124                                        printf@c 01A9  
                                      printf@f 017C                       ??_heartbeatTimerCallback 0100  
                           __end_ofi2___xxtofl 6236                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0048                 _ADCPostProcessingCallback$4090 00C9  
               _ADCPostProcessingCallback$4091 00CD                 _ADCPostProcessingCallback$4092 00D1  
                             ?_ADCC_Initialize 0001                 _ADCPostProcessingCallback$4088 00D6  
               _ADCPostProcessingCallback$4089 00DA                                        sqrt@grs 007B  
                                      sqrt@exp 007F                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 01C7                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 834A  
                        _TMR5_InterruptHandler 0264                               i2_TMR7_StopTimer 83DE  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 4430  
                                    i2___fldiv 55B0                                      i2___awdiv 7452  
                                    i2___flneg 805A                                      i2___awmod 76C0  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 3DA2  
                                    i2___flsub 7D08                                      i2___fltol 6D3C  
                                    i2___lldiv 74D6                                      i2___llmod 78D8  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 830E                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 0DA0                                    ___flmul@grs 0164  
                                 _EUSART2_Read 7C78                             i2___llmod@dividend 000E  
                              _HLVD_Initialize 831E                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit 8202  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0008  
                                    _Avg_Power 0248                   __end_of_INTERRUPT_Initialize 82A2  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 6810                  __end_of_terminal_printNewline 830E  
                               __end_of___wmul 80DA                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 8202                                 __end_of_fround 52FA  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 18C6                                  i2_printf$4101 0090  
                           _getMajorRevisionID 7E16                                 __end_of_strcat 7BE2  
                               __end_of_strchr 7EC6                                 __end_of_strcmp 7AF8  
                                 i2printf@flag 009B                                 __end_of_strcpy 7EFC  
                               __end_of_strlen 7A56                                   i2printf@fval 00A7  
                               __end_of_strstr 7348                                   i2printf@prec 00AB  
                            __size_ofi2___flge 0120                            start_initialization 710E  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 83EE  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 83EC  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 636A  
                                  __end_of_abs 80B2                                    __end_of_sin 4D6C  
                                    i2printf@c 00AD                                      i2printf@f 0088  
                      _terminal_textAttributes 36E8                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0B1E  
                        __end_of_EUSART2_Write 7C2E                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 01AD  
                      __end_ofi2_EUSART2_Write 7C78                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 01DE                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F0  
                                  __pdataBANK1 01E2                                    __pdataBANK2 02BE  
                                     ??_fround 0173                                  _ringBufferLUT 0000  
               ??_terminal_textAttributesReset 01BC                                       ??_printf 0186  
            getCauseOfReset@return_reset_cause 0117                              _POS3P3_ADC_Result 00F6  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                     __end_of_getMinorRevisionID 8150  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02DA  
                                   fround@prec 017B                                 _eusart2RxCount 01D9  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4093 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK3 0380                              __size_of___xxtofl 0154  
                                 _isdigit$3181 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 832E                            EUSART2_Write@txData 0117  
                                 _load_on_time 0240                    __end_of_ADCC_StopConversion 83E8  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4094 00A5                                      _asin$4095 009D  
                                    _asin$4096 0099                                       ?i2_putch 0001  
                                   sin@coeff_a EAE3                                     sin@coeff_b EB0B  
                               _TMR7_StopTimer 83D2                          _TMR6_InterruptHandler 026D  
                                    __pnvBANK2 02E2                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 706C                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 81E2  
                                __pmediumconst EA1A                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 23E4                                      __ptext101 83DE  
                                    __ptext110 7D08                                      __ptext102 5B12  
                                     ?___flneg 0125                                      __ptext111 805A  
                                    __ptext103 7730                                      __ptext120 4430  
                                    __ptext112 55B0                                      __ptext104 476E  
                                    __ptext121 8088                                      __ptext113 6A4C  
                                    __ptext105 4D6C                                      __ptext122 83E4  
                                    __ptext114 60E6                                      __ptext106 5D5C  
                                    __ptext123 839E                                      __ptext115 6D3C  
                                    __ptext107 7E52                                      __ptext124 82A2  
                                    __ptext116 6810                                      __ptext108 7558  
                                    __ptext125 82B6                                      __ptext117 75D4  
                                    __ptext109 4A72                                      __ptext126 0000  
                                    __ptext118 6B5E                                      __ptext119 3DA2  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 016F  
             __end_of_TMR7_SetInterruptHandler 834A                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ EA4F  
                              _getCauseOfReset 7A56                                 ?_ringBufferLUT 01BC  
                                    _getUserID 7D50              _EUSART2_TxDefaultInterruptHandler 0273  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F2  
                                  __tdiv_to_l_ 6236                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 011F                               _POS12_ADC_Result 0258  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 0244                                      _eval_poly 6B5E  
                    ??_terminal_textAttributes 01AC                                      _attribute 027D  
                                    _peakToRMS 5B12                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers EAAB  
                       _heartbeatTimerCallback 7DD6                                 _dimming_period 00F0  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 828E                         __end_of_TMR7_StopTimer 83D8  
                                     _T6CLKCON 000FB3         terminal_textAttributes@input_attribute 01AB  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 83C4                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                     __end_ofi2_TMR7_StopTimer 83E4                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 65C6                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _TMR5_ISR 7F66                                       _TMR6_ISR 80DA  
                                     _TMR7_ISR 7F32                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 6810  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 8176                        __size_of_FVR_Initialize 0008  
                                   printf@flag 0197                                     printf@fval 01A3  
                                   printf@prec 01A7                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome 82FE                              i2___awdiv@divisor 0009  
                                     i2_fround 5864              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue 82B6                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 18C6  
                          __end_ofatan@coeff_a EAE3                            __end_ofatan@coeff_b EB0B  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 7122                                      copy_data1 7154  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 027A                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001                        ??_ADCC_ClearAccumulator 0100  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                                   _next_channel 01E2  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset 7AA8                __end_of_terminal_textAttributes 3A50  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 82CA  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 8382  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 8374  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01BE                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 027C                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___fladd 033E                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                                    _load_enable 02F1  
             __end_of_acquisitionTimerCallback 82EE                                    _fround$3895 0177  
                                  _fround$3896 0173                          __end_ofi2__tdiv_to_l_ 649C  
                     _TMR7_SetInterruptHandler 833C                          _TMR7_InterruptHandler 0267  
                           _ADC_Result_Scaling 025C        terminal_textAttributes@foreground_color 01AC  
                                     ___xxtofl 5F92                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 831E                               __size_of_isdigit 0022  
                                     __ptext10 71A0                                       __ptext11 79FE  
                                     __ptext20 7D94                                       __ptext12 7E8E  
                                     __ptext21 8274                                       __ptext13 7EC6  
                                     __ptext30 832E                                       __ptext22 7FCC  
                                     __ptext14 7AA8                                       __ptext31 7BE2  
                                     __ptext23 6E1A                                       __ptext15 7D50  
                                     __ptext40 80B2                                       __ptext32 81C0  
                                     __ptext24 52FA                                       __ptext16 812A  
                                     __ptext41 7870                                       __ptext33 5034  
                                     __ptext25 83D2                                       __ptext17 7E16  
                                     __ptext50 7B48                                       __ptext42 73CE  
                                     __ptext34 3A50                                       __ptext26 7C78  
                                     __ptext18 793E                                       __ptext51 833C  
                                     __ptext43 6C5E                                       __ptext35 764E  
                                     __ptext27 830E                                       __ptext19 81E2  
                                     __ptext60 831E                                       __ptext52 7F9A  
                                     __ptext44 7CC0                                       __ptext36 7348  
                                     __ptext28 0DA0                                       __ptext61 83B4  
                                     __ptext53 834A                                       __ptext45 40F2  
                                     __ptext37 6236                                       __ptext29 2DC4  
                                     __ptext70 82DC                                       __ptext62 779E  
                                     __ptext54 7AF8                                       __ptext46 7FFC  
                                     __ptext38 649C                                       __ptext71 8390  
                                     __ptext63 8366                                       __ptext55 8358  
                                     __ptext47 66EE                                       __ptext39 5F92  
                                     __ptext72 83BC                                       __ptext64 8374  
                                     __ptext56 8220                                       __ptext48 7A56  
                                     __ptext81 7F66                                       __ptext73 83D8  
                                     __ptext65 799E                                       __ptext57 706C  
                                     __ptext49 802C                                       __ptext90 5864  
                                     __ptext82 8258                                       __ptext74 8150  
                                     __ptext66 8382                                       __ptext58 823C  
                                     __ptext91 76C0                                       __ptext83 83EC  
                                     __ptext75 80DA                                       __ptext59 828E  
                                     __ptext92 7452                                       __ptext84 6FBE  
                                     __ptext76 83EA                                       __ptext68 7F32  
                                     __ptext93 636A                                       __ptext85 18C6  
                                     __ptext77 7DD6                                       __ptext69 83E8  
                                     __ptext94 65C6                                       __ptext86 3268  
                                     __ptext78 83C4                                       __ptext95 8176  
                                     __ptext87 83AA                                       __ptext79 7EFC  
                                     __ptext96 78D8                                       __ptext88 7C2E  
                                     __ptext97 74D6                                       __ptext89 8202  
                                     __ptext98 8102                                       __ptext99 83EE  
                                     _sin$4097 0090                                       __powers_ EA1B  
                          ringBufferLUT@userID 03A1                                _Temp_ADC_Offset 02DE  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                               i2_isdigit$3181 0002                                _Temp_ADC_Result 0254  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 008C  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 09E0                           __end_ofi2__div_to_l_ 66EE  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    ringBufferLUT@channel_name 0380                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 839E                                       int$flags 005F  
                                     atoi@sign 0121                                    ??_getUserID 0124  
                                    printf@idx 0190                                      printf@len 0191  
                                    printf@exp 0199                                      printf@val 019F  
                                  atan@coeff_a EACB                                    atan@coeff_b EAF7  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 82FE  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076           __end_of_TMR6_DefaultInterruptHandler 83EC  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 83EA  
         __end_of_ADCC_DefaultInterruptHandler 83F0          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 83EE                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID 812A  
                             __tdiv_to_l_@quot 0120                                i2___xxtofl@sign 000D  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 039D                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                    _reset_cause 02E2  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 0260  
            __end_of_ADCPostProcessingCallback 2DC4                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                   ?_getDeviceID 0122  
                                     printf@ap 0195                                       printf@cp 0193  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString 7FFC  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult 82B6  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 6FBE  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 6FBE  
      __size_of_INTERRUPT_InterruptManagerHigh 6FB6                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 83B4                                    _printf$3898 018C  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01BC  
                             ___lldiv@quotient 011F                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 793E  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 710E  
                            ??_ADCC_Initialize 011A                              i2__div_to_l_@exp1 000E  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull 6930  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 0012                                   ___fladd@aexp 013A  
                                 ___fladd@bexp 013B                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
                            ?i2_TMR7_StopTimer 0001              _EUSART2_RxDefaultInterruptHandler 0270  
               __size_of_currentMeasuredToPeak 007C                  __end_of_currentMeasuredToPeak 75D4  
                 __size_of_ADCC_StopConversion 0004  
